Product:
  name: Lockpath
  versions: [5.8.0]
  package: navexglobal.lockpath
  description: |-
    Lockpath
  link: https://www.navexglobal.com/en-us/products/lockpath-integrated-risk-management-platform
  contentType: json
Operations:
  Assessment.IssueAssessment:
    description: |-
      Issuance of assessments can come from a project in the Compliance Manager application, or a DCF table or
      master/detail record. Additionally, assessments can be issued directly to a vendor or you can issue an assessment
      internally to a Lockpath user to perform assessments of a vendor without the assessment being viewable by
      external vendor contacts that have access to the Lockpath Vendor Portal.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "IssueAssessment": {
            "assessmentIssuance": {
              "Name": "Assessment Issues Today",
              "DueDate": "3/12/2021",
              "UserIds": "1027",
              "GroupIds": "",
              "_xmlns:a": "http://www.w3.org/2001/XMLSchema",
              "_xmlns:i": "http://www.w3.org/2001/XMLSchema-instance",
              "EmailBody": "Immediate Assessment",
              "ProjectId": "16",
              "TemplateId": "21",
              "EmailSubject": "Immediate Assessment",
              "ShowUserScores": "false",
              "AllowDelegation": "false",
              "AssignedUserOnly": "false",
              "GenerateFindings": "false",
              "IssuanceScheduleType": "immediate",
              "PrepopulatePriorAnswers": "false"
            }
          }
        }
      ]
      outputs: [
        {
          "AssessmentIssuanceItem": {
            "Name": "Assessment Issued Today",
            "DueDate": "3/12/2021",
            "DueUnit": {
              "_i:nil": "true"
            },
            "FieldId": {
              "_i:nil": "true"
            },
            "TableId": {
              "_i:nil": "true"
            },
            "UserIds": "1027",
            "GroupIds": "",
            "VendorId": {
              "_i:nil": "true"
            },
            "_xmlns:i": "http://www.w3.org/2001/XMLSchema-instance",
            "ContentId": {
              "_i:nil": "true"
            },
            "EmailBody": "Immediate Assessment",
            "IssueDate": {
              "_i:nil": "true"
            },
            "ProjectId": "16",
            "EndingDate": {
              "_i:nil": "true"
            },
            "RepeatUnit": {
              "_i:nil": "true"
            },
            "ReviewerId": {
              "_i:nil": "true"
            },
            "TemplateId": "21",
            "DueInterval": {
              "_i:nil": "true"
            },
            "EmailSubject": "Immediate Assessment",
            "BeginningDate": {
              "_i:nil": "true"
            },
            "RepeatsFriday": {
              "_i:nil": "true"
            },
            "RepeatsMonday": {
              "_i:nil": "true"
            },
            "RepeatsSunday": {
              "_i:nil": "true"
            },
            "RepeatInterval": {
              "_i:nil": "true"
            },
            "RepeatsTuesday": {
              "_i:nil": "true"
            },
            "ShowUserScores": "false",
            "AllowDelegation": "false",
            "RepeatsSaturday": {
              "_i:nil": "true"
            },
            "RepeatsThursday": {
              "_i:nil": "true"
            },
            "VendorContactId": {
              "_i:nil": "true"
            },
            "AssignedUserOnly": {
              "_i:nil": "true"
            },
            "GenerateFindings": "false",
            "RepeatsWednesday": {
              "_i:nil": "true"
            },
            "SendCategoryEmail": {
              "_i:nil": "true"
            },
            "IsVendorInternalMode": {
              "_i:nil": "true"
            },
            "IssuanceScheduleType": "immediate",
            "FindingsOutputFieldId": {
              "_i:nil": "true"
            },
            "FindingsOutputTableId": {
              "_i:nil": "true"
            },
            "ScheduledAssessmentId": "165",
            "AdministrativeEmailBody": {
              "_i:nil": "true"
            },
            "FindingsControlsFieldId": {
              "_i:nil": "true"
            },
            "PrepopulatePriorAnswers": "false",
            "SendReviewerOrIssuerEmail": {
              "_i:nil": "true"
            },
            "AdministrativeEmailSubject": {
              "_i:nil": "true"
            },
            "FindingsParentGroupingFieldId": {
              "_i:nil": "true"
            }
          }
        }
      ]
  Component.CreateRecord:
    description: |-
      Creates a new record within the specified component of the application.
      NOTE: The Required option for a field is only enforced through the user interface, not through the API.
      Therefore, CreateRecord does not enforce the Required option for fields.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "componentId": "10001",
          "dynamicRecord": {
            "FieldValues": [
              {
                "key": "3",
                "value": "API Example DNS Name"
              },
              {
                "key": "9",
                "value": 123
              },
              {
                "key": "10",
                "value": "12/25/2017"
              },
              {
                "key": "11",
                "value": "1.2.3.4"
              },
              {
                "key": "4879",
                "value": true
              },
              {
                "key": "23",
                "value": {
                  "Id": "1"
                }
              },
              {
                "key": "294",
                "value": [
                  {
                    "Id": "2"
                  },
                  {
                    "Id": "3"
                  }
                ]
              }
            ]
          }
        }
      ]
      outputs: [
        {
          "DynamicRecordItem": {
            "Id": "320",
            "_xmlns:i": "http://www.w3.org/2001/XMLSchema-instance",
            "DisplayName": "320",
            "FieldValues": {
              "__text": "...",
              "KeyValuePair": [
                {
                  "key": "6",
                  "value": {
                    "__text": "Tag",
                    "_i:type": "a:string",
                    "_xmlns:a": "http://www.w3.org/2001/XMLSchema"
                  }
                },
                {
                  "key": "300",
                  "value": {
                    "__text": "320",
                    "_i:type": "a:int",
                    "_xmlns:a": "http://www.w3.org/2001/XMLSchema"
                  }
                },
                {
                  "key": "303",
                  "value": {
                    "Id": "1027",
                    "_i:type": "DynamicRecordItem",
                    "DisplayName": "Test, User"
                  }
                },
                {
                  "key": "305",
                  "value": {
                    "Id": "1027",
                    "_i:type": "DynamicRecordItem",
                    "DisplayName": "Test, User"
                  }
                },
                {
                  "key": "748",
                  "value": {
                    "__text": "1",
                    "_i:type": "a:int",
                    "_xmlns:a": "http://www.w3.org/2001/XMLSchema"
                  }
                }
              ]
            }
          }
        }
      ]
  Component.DeleteRecord:
    description: |-
      Deletes a selected record from within a chosen component. DeleteRecord will update the record, making it so it will
      no longer be viewable.
      IMPORTANT: Records are soft-deleted to maintain any historical references to the record and can
      be restored with a database script.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "recordId": "319",
          "componentId": "10001"
        }
      ]
      outputs: [
        {
          "boolean": {
            "__text": "true",
            "_xmlns": "http://schemas.microsoft.com/2003/10/Serialization/"
          }
        }
      ]
  Component.DeleteRecordAttachments:
    description: |-
      Deletes the specified attachments from the provided document fields on a specific record.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "DeleteRecordAttachments": {
            "componentId": "10001",
            "dynamicRecord": {
              "Id": "1",
              "_xmlns:a": "http://www.w3.org/2001/XMLSchema",
              "_xmlns:i": "http://www.w3.org/2001/XMLSchema-instance",
              "FieldValues": {
                "KeyValuePair": {
                  "key": "34",
                  "value": {
                    "Record": {
                      "Id": "1"
                    },
                    "_i:type": "DynamicRecordList"
                  }
                }
              }
            }
          }
        }
      ]
      outputs: [
        [
          {
            "Message": "Attachment was successfully deleted from the Documents field.",
            "RecordId": 1,
            "ComponentId": 10001,
            "AttachmentInfo": {
              "FieldId": 1234,
              "FileName": "Attachment1.txt",
              "DocumentId": 1
            },
            "OperationSucceeded": true
          }
        ]
      ]
  Component.GetAvailableLookupRecords:
    description: |-
      Retrieves records that are available for population for a lookup field.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "fieldId": "23",
          "pageSize": "1000",
          "recordId": "123",
          "pageIndex": "0"
        }
      ]
      outputs: [
        [
          {
            "Id": 2,
            "DisplayName": "Mobile Device",
            "FieldValues": []
          },
          {
            "Id": 4,
            "DisplayName": "Laptop",
            "FieldValues": []
          },
          {
            "Id": 5,
            "DisplayName": "Server",
            "FieldValues": []
          }
        ]
      ]
  Component.GetComponent:
    description: |-
      Retrieves a component specified by its ID. A component is a user-defined data object such as a custom content
      table. The component ID may be found by using GetComponentList.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "Id": 10021,
          "Name": "Incident Reports",
          "ShortName": "IncidentReports",
          "SystemName": "IncidentReports"
        }
      ]
  Component.GetComponentByAlias:
    description: |-
      Retrieves a component specified by its Alias. A component is a user-defined data object such as a custom content
      table. The component Alias may be found by using GetComponentList (ShortName).
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "Id": 10021,
          "Name": "Incident Reports",
          "ShortName": "IncidentReports",
          "SystemName": "IncidentReports"
        }
      ]
  Component.GetComponentList:
    description: |-
      Returns a complete list of all components available to the user based on account permissions. No input elements
      are used. The list will be ordered in ascending alphabetical order of the component name.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "Id": "10003",
            "Name": "Device Types",
            "ShortName": "DeviceTypes",
            "SystemName": "DeviceTypes"
          },
          {
            "Id": "10001",
            "Name": "Devices",
            "ShortName": "Devices",
            "SystemName": "Devices"
          }
        ]
      ]
  Component.GetDetailRecord:
    description: |-
      Retrieves record information based on the provided component ID and record ID, with lookup field report details.
      Using the optional boolean parameter "embedRichTextImages" you can return records with images contained in
      rich text fields.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "DynamicRecordItem": {
            "Id": "114",
            "_xmlns:i": "http://www.w3.org/2001/XMLSchema-instance",
            "DisplayName": "114",
            "FieldValues": {
              "KeyValuePair": {
                "key": "34",
                "value": {
                  "Record": {
                    "Id": "55",
                    "DisplayName": "AttachmentTest.txt"
                  },
                  "_i:type": "DynamicRecordList"
                }
              }
            }
          }
        }
      ]
  Component.GetDetailRecords:
    description: |-
      Retrieves a high level of detail for each record specified. GetDetailRecords also allows multiple sorts to modify the
      order of the results. The maximum number of records returned (pageSize) is 1000.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "filters": {
            "SearchCriteriaItem": {
              "Value": "Blue",
              "FieldPath": {
                "int": [
                  "3881"
                ]
              },
              "FilterType": "3"
            }
          },
          "pageSize": "1000",
          "pageIndex": "0",
          "sortOrder": {
            "fieldIds": {
              "int": [
                "2500",
                "2502"
              ]
            },
            "SortCriteriaItem": {
              "FieldPath": {
                "int": [
                  "4991"
                ],
                "Ascending": "true"
              }
            }
          },
          "componentId": "10001"
        }
      ]
      outputs: [
        [
          {
            "Id": 1,
            "DisplayName": "Record 1",
            "FieldValues": [
              {
                "Key": 2500,
                "Value": 4
              },
              {
                "Key": 2502,
                "Value": {
                  "Id": 10,
                  "__type": "DynamicRecordItem",
                  "DisplayName": "Admin, User",
                  "FieldValues": []
                }
              }
            ]
          },
          {
            "Id": 2,
            "DisplayName": "Record 2",
            "FieldValues": [
              {
                "Key": 2500,
                "Value": 7
              },
              {
                "Key": 2502,
                "Value": {
                  "Id": 11,
                  "__type": "DynamicRecordItem",
                  "DisplayName": "End, User",
                  "FieldValues": []
                }
              }
            ]
          }
        ]
      ]
  Component.GetField:
    description: |-
      Retrieves details for a field within a component. The field ID may be found by using GetFieldList.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "Id": 23,
          "Name": "Device Type",
          "ReadOnly": false,
          "Required": false,
          "FieldType": 5,
          "OneToMany": false,
          "ShortName": "DeviceType",
          "MatrixRows": [],
          "SystemName": "DeviceType"
        }
      ]
  Component.GetFieldList:
    description: |-
      Retrieves a detailed field list for a component specified by its ID. The component ID may be found by using
      GetComponentList. Assessments field type are not visible in this list.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "Id": 9,
            "Name": "Acquisition Cost",
            "Scale": 2,
            "ReadOnly": false,
            "Required": false,
            "FieldType": 2,
            "OneToMany": false,
            "Precision": 15,
            "ShortName": "Cost",
            "MatrixRows": [],
            "SystemName": "Cost"
          },
          {
            "Id": 10,
            "Name": "Acquisition Date",
            "ReadOnly": false,
            "Required": false,
            "FieldType": 3,
            "OneToMany": false,
            "ShortName": "AcquisitionDate",
            "MatrixRows": [],
            "SystemName": "AcquisitionDate"
          }
        ]
      ]
  Component.GetLookupReportColumnFields:
    description: |-
      Retrieves the field information of each field in a field path that corresponds to a lookup report column. The
      lookupFieldId corresponds to a lookup field with a report definition on it and the fieldPathId corresponds to the field
      path to retrieve fields from, which is obtained from GetDetailRecord. GetLookupReportColumnFields compliments
      GetDetailRecord by adding additional details about the lookup report columns returned from GetDetailRecord.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "Id": 3,
            "Name": "DNS Name",
            "SystemName": "DNSName",
            "ComponentId": 10001
          }
        ]
      ]
  Component.GetRecord:
    description: |-
      Returns the complete set of fields for a given record within a component.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "Id": 1,
          "DisplayName": "1",
          "FieldValues": [
            {
              "Key": 3,
              "Value": "true"
            },
            {
              "Key": 4,
              "Value": "true"
            },
            {
              "Key": 351,
              "Value": {
                "Id": 5,
                "__type": "DynamicRecordItem",
                "DisplayName": "Published",
                "FieldValues": []
              }
            }
          ]
        }
      ]
  Component.GetRecordAttachment:
    description: |-
      Retrieves a single attachment for a given field on a record. The record ID and field ID may be found by using
      GetDetailRecord.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "RecordAttachmentItem": {
            "FileData": "QW4gYXR0YWNobWVudCBmb3IgdGVzdGluZyBwdXJwb3Nlcw==",
            "FileName": "Attachment.txt",
            "_xmlns:i": "http://www.w3.org/2001/XMLSchema-instance"
          }
        }
      ]
  Component.GetRecordAttachments:
    description: |-
      Retrieves a list of information for all attachments associated with the provided component ID, record ID, and field
      ID. No file data is returned, only file name, field ID, and document ID information.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "AttachmentInfoList": {
            "_xmlns:i": "http://www.w3.org/2001/XMLSchema-instance",
            "AttachmentInfo": {
              "FieldId": "34",
              "FileName": "Attachment1.txt",
              "DocumentId": "55"
            }
          }
        }
      ]
  Component.GetRecordCount:
    description: |-
      Returns the number of records in a given component. You can use filters to return the count of records meeting
      selected criteria.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "GetRecordCount": {
            "filters": {
              "SearchCriteriaItem": {
                "FieldPath": {
                  "int": "11"
                },
                "FilterType": "16"
              }
            },
            "componentId": "10001"
          }
        }
      ]
      outputs: [
        {
          "int": {
            "__text": "#",
            "_xmlns": "http://schemas.microsoft.com/2003/10/Serialization/"
          }
        }
      ]
  Component.GetRecords:
    description: |-
      Returns an array of records within a chosen component. You can use filters to return only the records meeting
      selected criteria.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "filters": [
            {
              "Value": "text value",
              "FieldPath": [
                11
              ],
              "FilterType": "1"
            }
          ],
          "pageSize": "5",
          "pageIndex": "0",
          "componentId": "10001"
        }
      ]
      outputs: [
        [
          {
            "Id": 1,
            "DisplayName": "192.168.1.84",
            "FieldValues": []
          },
          {
            "Id": 2,
            "DisplayName": "192.168.1.69",
            "FieldValues": []
          }
        ]
      ]
  Component.GetWorkflow:
    description: |-
      Retrieves workflow details and all workflow stages specified by ID. The ID for a workflow may be found by using
      GetWorkflows.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "Id": "1",
          "Name": "Default Workflow",
          "IsActive": "true",
          "IsDefault": "true",
          "WorkflowStages": [
            {
              "Id": "1",
              "Name": "Grammatical Review",
              "IsActive": "true",
              "IsVoting": "false",
              "IsInitial": "true",
              "UserAccess": [],
              "Description": [],
              "GroupAccess": [
                {
                  "Group": {
                    "Id": "8",
                    "Name": "Compliance Document Authors",
                    "IsBusinessUnit": "false"
                  },
                  "CanEdit": "true",
                  "CanViewAll": "false",
                  "CanTransition": "true"
                },
                {
                  "Group": {
                    "Id": "9",
                    "Name": "Compliance Document Approvers",
                    "IsBusinessUnit": "false"
                  },
                  "CanEdit": "true",
                  "CanViewAll": "true",
                  "CanTransition": "true"
                }
              ],
              "Transitions": [
                {
                  "Id": 73,
                  "Label": "Approve",
                  "ToStage": {
                    "Id": 302,
                    "Name": "Stage 2"
                  }
                }
              ],
              "CanAutoApprove": false,
              "UseAssignments": true,
              "UseAssignmentValues": [
                {
                  "CanAssigneeEdit": true,
                  "AssignmentFieldPath": [
                    {
                      "Id": 8182,
                      "Name": "Created By",
                      "FieldType": 5,
                      "SystemName": "CreatedBy"
                    }
                  ],
                  "CanAssigneeTransition": true
                },
                {
                  "CanAssigneeEdit": true,
                  "AssignmentFieldPath": [
                    {
                      "Id": 8185,
                      "Name": "Updated By",
                      "FieldType": 5,
                      "SystemName": "UpdatedBy"
                    }
                  ],
                  "CanAssigneeTransition": true
                }
              ]
            },
            {
              "Id": 302,
              "Name": "Stage 2",
              "IsActive": true,
              "IsVoting": false,
              "IsInitial": false,
              "UserAccess": [],
              "Description": "",
              "GroupAccess": [
                {
                  "Group": {
                    "Id": 0,
                    "Name": "Everyone"
                  },
                  "CanEdit": true,
                  "CanViewAll": true,
                  "CanTransition": true
                }
              ],
              "Transitions": [
                {
                  "Id": 75,
                  "Label": "Approve",
                  "ToStage": {
                    "Id": 300,
                    "Name": "Published"
                  }
                },
                {
                  "Id": 74,
                  "Label": "Reject",
                  "ToStage": {
                    "Id": 301,
                    "Name": "Stage 1"
                  }
                }
              ],
              "CanAutoApprove": false,
              "UseAssignments": true,
              "UseAssignmentValues": [
                {
                  "CanAssigneeEdit": true,
                  "AssignmentFieldPath": [
                    {
                      "Id": 8182,
                      "Name": "Created By",
                      "FieldType": 5,
                      "SystemName": "CreatedBy"
                    }
                  ],
                  "CanAssigneeTransition": true
                },
                {
                  "CanAssigneeEdit": true,
                  "AssignmentFieldPath": [
                    {
                      "Id": 8185,
                      "Name": "Updated By",
                      "FieldType": 5,
                      "SystemName": "UpdatedBy"
                    }
                  ],
                  "CanAssigneeTransition": true
                }
              ]
            }
          ],
          "RoutingCriteria": [],
          "WorkflowOwnerUsers": [],
          "WorkflowOwnerGroups": []
        }
      ]
  Component.GetWorkflows:
    description: |-
      Retrieves all workflows for a component specified by its Alias. A component is a user-defined data object such as a
      custom content table. The component Alias may be found by using GetComponentList (ShortName).
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "Id": 2,
            "Name": "Default",
            "IsActive": true,
            "IsDefault": true
          }
        ]
      ]
  Component.ImportFile:
    description: |-
      Queues a job to import a file for a defined import template.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "fileData": "SGVsbG8gV29ybGQ=",
          "fileName": "import_temp.csv",
          "tableAlias": "_temp",
          "runAsSystem": "false",
          "importTemplateName": "CSV Import"
        }
      ]
      outputs: [
        {
          "boolean": {
            "__text": "true",
            "_xmlns": "http://schemas.microsoft.com/2003/10/Serialization/"
          }
        }
      ]
  Component.TransitionRecord:
    description: |-
      Transitions a record in a workflow stage.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "recordId": "2",
          "tableAlias": "Devices",
          "transitionId": "42"
        }
      ]
      outputs: [
        {
          "response": true
        }
      ]
  Component.UpdateRecord:
    description: |-
      Updates a record within the specified component of the application.
      NOTE: The Required option for a field is only enforced through the user interface, not through the API.
      Therefore, UpdateRecord does not enforce the Required option for fields. The response will include
      the complete set of fields for the specified record.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "UpdateRecord": {
            "componentId": "10001",
            "dynamicRecord": {
              "Id": "1",
              "_xmlns:a": "http://www.w3.org/2001/XMLSchema",
              "_xmlns:i": "http://www.w3.org/2001/XMLSchema-instance",
              "FieldValues": {
                "KeyValuePair": {
                  "key": "9",
                  "value": {
                    "__text": "100.00",
                    "_i:type": "a:decimal"
                  }
                }
              }
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  Component.UpdateRecordAttachments:
    description: |-
      Adds new attachments and/or updates existing attachments to the provided documents field(s) on a specific
      record, where the FileData is represented as a Base64 string. The maximum data size of the request is controlled
      by the maxAllowedContentLength and maxReceivedMessageSize values in the API web.config.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "UpdateRecordAttachments": {
            "componentId": "10001",
            "dynamicRecord": {
              "Id": "2",
              "_xmlns:a": "http://www.w3.org/2001/XMLSchema",
              "_xmlns:i": "http://www.w3.org/2001/XMLSchema-instance",
              "FieldValues": {
                "KeyValuePair": {
                  "key": "34",
                  "value": {
                    "_i:type": "RecordAttachmentList",
                    "Attachment": {
                      "FileData": "SGVsbG8gV29ybGQ=",
                      "FileName": "Attachment1.txt"
                    }
                  }
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "AttachmentOperationResultList": {
            "_xmlns:i": "http://www.w3.org/2001/XMLSchema-instance",
            "AttachmentOperationResult": {
              "Message": "Attachment was successfully added to the Documents field.",
              "RecordId": "2",
              "ComponentId": "10001",
              "AttachmentInfo": {
                "FieldId": "34",
                "FileName": "AttachmentTest1.txt",
                "DocumentId": "56"
              },
              "OperationSucceeded": "true"
            }
          }
        }
      ]
  Component.VoteRecord:
    description: |-
      Casts a vote for a record in a workflow stage. The transition ID may be found by using GetWorkflow.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "recordId": "4",
          "tableAlias": "Devices",
          "transitionId": "46",
          "votingComments": "idk"
        }
      ]
      outputs: [
        {
          "response": true
        }
      ]
  Report.ExportReport:
    description: |-
      Outputs report data to a CSV, PDF, or XLSX file format. The My Reports tab in the user interface contains the ID
      for the desired report. If a report is not found or permissions are not granted to export data the message "Report
      does not exist or is inaccessible" appears.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  Security.CreateGroup:
    description: |-
      Creates a group.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "Name": "test group",
          "Users": [
            {
              "Id": "10"
            },
            {
              "Id": "12"
            }
          ],
          "ChildGroups": [
            {
              "Id": "5"
            }
          ],
          "Description": "",
          "BusinessUnit": false,
          "ParentGroups": [
            {
              "Id": "10"
            }
          ]
        }
      ]
      outputs: [
        {
          "Id": 2,
          "Name": "0b7fb422-3609-4587-8c2e-94b10f67d1bf",
          "Users": [],
          "ChildGroups": [],
          "Description": "",
          "LDAPGroupDN": "CN=whoa,DC=dev,DC=lockpath,DC=com",
          "BusinessUnit": false,
          "ParentGroups": [],
          "LDAPDirectory": {
            "Id": 1,
            "DisplayName": "whoa"
          },
          "LDAPGroupName": "0b7fb422-3609-4587-8c2e-94b10f67d1bf",
          "SecurityRoles": []
        }
      ]
  Security.CreateUser:
    description: |-
      Creates a user account.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "Fax": "",
          "Title": "",
          "Active": true,
          "Groups": [
            {
              "Id": "2"
            }
          ],
          "IsLDAP": true,
          "IsSAML": false,
          "Locked": false,
          "Manager": {
            "Id": "10"
          },
          "Language": 1033,
          "LastName": "User",
          "Password": "password",
          "Username": "test",
          "APIAccess": false,
          "FirstName": "Test",
          "HomePhone": "",
          "WorkPhone": "",
          "Department": {
            "Id": "10"
          },
          "MiddleName": "",
          "AccountType": 1,
          "MobilePhone": "",
          "EmailAddress": "test@user.com",
          "LDAPDirectory": {
            "Id": "1"
          },
          "SecurityRoles": [
            {
              "Id": "1"
            }
          ],
          "FunctionalRoles": [
            {
              "Id": "9"
            }
          ],
          "SecurityConfiguration": {
            "Id": "1"
          }
        }
      ]
      outputs: [
        {
          "Id": 1050,
          "Fax": "",
          "Title": "",
          "Active": true,
          "Groups": [],
          "IsLDAP": false,
          "IsSAML": false,
          "Locked": false,
          "Vendor": {
            "Id": 1,
            "DisplayName": ""
          },
          "Deleted": false,
          "FullName": "Contact, Vendor",
          "Language": "1033",
          "LastName": "Contact",
          "Username": "vendor",
          "APIAccess": false,
          "FirstName": "Vendor",
          "WorkPhone": "",
          "MiddleName": "",
          "AccountType": 2,
          "MobilePhone": "",
          "EmailAddress": "vendor@contact.com",
          "VendorComments": "",
          "SecurityConfiguration": {
            "Id": 1,
            "DisplayName": "Vendor Contacts"
          }
        }
      ]
  Security.DeleteGroup:
    description: |-
      Deletes a group.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "request": 10
        }
      ]
      outputs: [
        {
          "boolean": {
            "__text": "true",
            "_xmlns": "http://schemas.microsoft.com/2003/10/Serialization/"
          }
        }
      ]
  Security.DeleteUser:
    description: |-
      Deletes a user account.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "request": 10
        }
      ]
      outputs: [
        {
          "response": true
        }
      ]
  Security.GetGroup:
    description: |-
      Returns all supporting fields for a given group.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "Id": 2,
          "Name": "0b7fb422-3609-4587-8c2e-94b10f67d1bf",
          "Users": [],
          "ChildGroups": [],
          "Description": "",
          "LDAPGroupDN": "CN=whoa,DC=dev,DC=lockpath,DC=com",
          "BusinessUnit": false,
          "ParentGroups": [],
          "LDAPDirectory": {
            "Id": 1,
            "DisplayName": "whoa"
          },
          "LDAPGroupName": "0b7fb422-3609-4587-8c2e-94b10f67d1bf",
          "SecurityRoles": []
        }
      ]
  Security.GetGroups:
    description: |-
      Returns the ID and Name for groups. You can filter the list to return only the groups meeting selected criteria.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "filters": [
            {
              "Field": {
                "ShortName": "BusinessUnit"
              },
              "Value": "False",
              "FilterType": "5"
            }
          ],
          "pageSize": "100",
          "pageIndex": "0"
        }
      ]
      outputs: [
        [
          {
            "Id": 10,
            "Name": "Anonymous Incident Analysts"
          },
          {
            "Id": 7,
            "Name": "Business Continuity Plan Approvers"
          }
        ]
      ]
  Security.GetUser:
    description: |-
      Returns all fields for a given user.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "Id": 123,
          "Fax": "",
          "Title": "",
          "Active": true,
          "Groups": [],
          "IsLDAP": false,
          "IsSAML": false,
          "Locked": false,
          "Deleted": false,
          "FullName": "Barnes, Betty",
          "Language": 1033,
          "LastName": "Barnes",
          "Username": "bettybarnes",
          "APIAccess": false,
          "FirstName": "Betty",
          "HomePhone": "",
          "WorkPhone": "",
          "MiddleName": "",
          "AccountType": 1,
          "MobilePhone": "",
          "EmailAddress": "betty.barnes@email.com",
          "SecurityRoles": [
            {
              "Id": 1,
              "Name": "End User"
            }
          ],
          "FunctionalRoles": [],
          "SecurityConfiguration": {
            "Id": 1,
            "DisplayName": "Standard Configuration"
          }
        }
      ]
  Security.GetUserCount:
    description: |-
      Returns an integer representing the count of all Full Users, Vendors Contact users, and Awareness Users in the
      application. Using the optional FieldFilter you can return records for only certain user types, such as Active,
      Deleted, or users by a particular AccountType.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "GetUserCount": {
            "filters": {
              "FieldFilter": {
                "Field": {
                  "ShortName": "AccountType"
                },
                "Value": "1",
                "FilterType": "5"
              }
            }
          }
        }
      ]
      outputs: [
        {
          "int": {
            "__text": "#",
            "_xmlns": "http://schemas.microsoft.com/2003/10/Serialization/"
          }
        }
      ]
  Security.GetUsers:
    description: |-
      Returns a list of users and supporting fields. You can filter the list to return only certain user types, such as Active,
      Deleted, or users by a particular AccountType.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "GetUsers": {
            "filters": {
              "FieldFilter": {
                "Field": {
                  "ShortName": "5"
                },
                "Value": "1|2",
                "FilterType": "10002"
              }
            },
            "pageSize": "4",
            "pageIndex": "0"
          }
        }
      ]
      outputs: [
        {
          "UserList": {
            "User": [
              {
                "Id": "10",
                "FullName": "Test, User"
              },
              {
                "Id": "11",
                "FullName": "API, User"
              },
              {
                "Id": "12",
                "FullName": "Test2, User"
              }
            ],
            "_xmlns:i": "http://www.w3.org/2001/XMLSchema-instance"
          }
        }
      ]
  Security.UpdateGroup:
    description: |-
      Updates a group.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "Id": "6",
          "Name": "API Updated Group",
          "Users": [
            {
              "Id": "10"
            },
            {
              "Id": "11"
            }
          ],
          "ChildGroups": [
            {
              "Id": "5"
            },
            {
              "Id": "7"
            }
          ],
          "Description": "Here is a description.",
          "BusinessUnit": false,
          "ParentGroups": [
            {
              "Id": "2"
            },
            {
              "Id": "3"
            }
          ]
        }
      ]
      outputs: [
        {
          "Id": 2,
          "Name": "0b7fb422-3609-4587-8c2e-94b10f67d1bf",
          "Users": [],
          "ChildGroups": [],
          "Description": "",
          "LDAPGroupDN": "CN=whoa,DC=dev,DC=lockpath,DC=com",
          "BusinessUnit": false,
          "ParentGroups": [],
          "LDAPDirectory": {
            "Id": 1,
            "DisplayName": "whoa"
          },
          "LDAPGroupName": "0b7fb422-3609-4587-8c2e-94b10f67d1bf",
          "SecurityRoles": []
        }
      ]
  Security.UpdateUser:
    description: |-
      Updates a user account.
    versions:
      from: 5.8.0
    link: ''
    example:
      inputs: [
        {
          "Id": "10",
          "Fax": "",
          "Title": "",
          "Active": true,
          "Groups": [
            {
              "Id": "2"
            },
            {
              "Id": "3"
            }
          ],
          "IsLDAP": true,
          "IsSAML": false,
          "Locked": false,
          "Manager": "15",
          "Language": 1033,
          "LastName": "User",
          "Password": "password",
          "Username": "test",
          "APIAccess": true,
          "FirstName": "Test",
          "HomePhone": "",
          "WorkPhone": "",
          "Department": "601",
          "MiddleName": "",
          "AccountType": 1,
          "MobilePhone": "",
          "EmailAddress": "test@user.com",
          "LDAPDirectory": "1",
          "SecurityConfiguration": "1"
        }
      ]
      outputs: [
        {
          "UserItem": {
            "Id": "10",
            "Fax": "",
            "Title": "",
            "Active": "true",
            "Groups": {
              "Group": [
                {
                  "Id": "2",
                  "Name": "Exception Analysts"
                },
                {
                  "Id": "3",
                  "Name": "Retail Stores"
                }
              ]
            },
            "IsLDAP": "true",
            "IsSAML": "false",
            "Locked": "false",
            "Deleted": "false",
            "FullName": "testuser",
            "Language": "1033",
            "LastName": "user",
            "Username": "test",
            "_xmlns:i": "http://www.w3.org/2001/XMLSchema-instance",
            "APIAccess": "true",
            "FirstName": "test",
            "HomePhone": "",
            "WorkPhone": "",
            "MiddleName": "",
            "AccountType": "1",
            "MobilePhone": "",
            "EmailAddress": "test@user.com",
            "LDAPDirectory": {
              "Id": "1",
              "DisplayName": "QE Domain"
            },
            "SecurityRoles": {
              "SecurityRole": {
                "Id": "1",
                "Name": "Administration"
              }
            },
            "FunctionalRoles": "",
            "SecurityConfiguration": {
              "Id": "1",
              "DisplayName": "Administrator Configuration"
            }
          }
        }
      ]