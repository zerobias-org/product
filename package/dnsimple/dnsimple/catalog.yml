Product:
  name: DNSimple
  versions: [2.0.0]
  package: dnsimple.dnsimple
  description: |-
    DNSimple
  link: https://dnsimple.com/api
  contentType: json
Operations:
  listAccounts:
    description: |-
      Lists the accounts the current authenticated entity has access to.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/accounts/#listAccounts
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 1,
                  "email": "example-account@example.com",
                  "created_at": "2015-09-18T23:04:37.000Z",
                  "updated_at": "2016-06-09T20:03:39.000Z",
                  "plan_identifier": "dnsimple-professional"
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "email": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "plan_identifier": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      ]
  downloadCertificate:
    description: |-
      Gets the PEM-encoded certificate, along with the root certificate and intermediate chain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/certificates/#downloadCertificate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "root": null,
                "chain": [
                  "-----BEGIN CERTIFICATE-----\nMIIEqzCCApOgAwIBAgIRAIvhKg5ZRO08VGQx8JdhT+UwDQYJKoZIhvcNAQELBQAw\nGjEYMBYGA1UEAwwPRmFrZSBMRSBSb290IFgxMB4XDTE2MDUyMzIyMDc1OVoXDTM2\nMDUyMzIyMDc1OVowIjEgMB4GA1UEAwwXRmFrZSBMRSBJbnRlcm1lZGlhdGUgWDEw\nggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDtWKySDn7rWZc5ggjz3ZB0\n8jO4xti3uzINfD5sQ7Lj7hzetUT+wQob+iXSZkhnvx+IvdbXF5/yt8aWPpUKnPym\noLxsYiI5gQBLxNDzIec0OIaflWqAr29m7J8+NNtApEN8nZFnf3bhehZW7AxmS1m0\nZnSsdHw0Fw+bgixPg2MQ9k9oefFeqa+7Kqdlz5bbrUYV2volxhDFtnI4Mh8BiWCN\nxDH1Hizq+GKCcHsinDZWurCqder/afJBnQs+SBSL6MVApHt+d35zjBD92fO2Je56\ndhMfzCgOKXeJ340WhW3TjD1zqLZXeaCyUNRnfOmWZV8nEhtHOFbUCU7r/KkjMZO9\nAgMBAAGjgeMwgeAwDgYDVR0PAQH/BAQDAgGGMBIGA1UdEwEB/wQIMAYBAf8CAQAw\nHQYDVR0OBBYEFMDMA0a5WCDMXHJw8+EuyyCm9Wg6MHoGCCsGAQUFBwEBBG4wbDA0\nBggrBgEFBQcwAYYoaHR0cDovL29jc3Auc3RnLXJvb3QteDEubGV0c2VuY3J5cHQu\nb3JnLzA0BggrBgEFBQcwAoYoaHR0cDovL2NlcnQuc3RnLXJvb3QteDEubGV0c2Vu\nY3J5cHQub3JnLzAfBgNVHSMEGDAWgBTBJnSkikSg5vogKNhcI5pFiBh54DANBgkq\nhkiG9w0BAQsFAAOCAgEABYSu4Il+fI0MYU42OTmEj+1HqQ5DvyAeyCA6sGuZdwjF\nUGeVOv3NnLyfofuUOjEbY5irFCDtnv+0ckukUZN9lz4Q2YjWGUpW4TTu3ieTsaC9\nAFvCSgNHJyWSVtWvB5XDxsqawl1KzHzzwr132bF2rtGtazSqVqK9E07sGHMCf+zp\nDQVDVVGtqZPHwX3KqUtefE621b8RI6VCl4oD30Olf8pjuzG4JKBFRFclzLRjo/h7\nIkkfjZ8wDa7faOjVXx6n+eUQ29cIMCzr8/rNWHS9pYGGQKJiY2xmVC9h12H99Xyf\nzWE9vb5zKP3MVG6neX1hSdo7PEAb9fqRhHkqVsqUvJlIRmvXvVKTwNCP3eCjRCCI\nPTAvjV+4ni786iXwwFYNz8l3PmPLCyQXWGohnJ8iBm+5nk7O2ynaPVW0U2W+pt2w\nSVuvdDM5zGv2f9ltNWUiYZHJ1mmO97jSY/6YfdOUH66iRtQtDkHBRdkNBsMbD+Em\n2TgBldtHNSJBfB3pm9FblgOcJ0FSWcUDWJ7vO0+NTXlgrRofRT6pVywzxVo6dND0\nWzYlTWeUVsO40xJqhgUQRER9YLOLxJ0O6C8i0xFxAMKOtSdodMB3RIwt7RFQ0uyt\nn5Z5MqkYhlMI3J1tPRTp1nEt9fyGspBOO05gi148Qasp+3N+svqKomoQglNoAxU=\n-----END CERTIFICATE-----"
                ],
                "server": "-----BEGIN CERTIFICATE-----\nMIIE7TCCA9WgAwIBAgITAPpTe4O3vjuQ9L4gLsogi/ukujANBgkqhkiG9w0BAQsF\nADAiMSAwHgYDVQQDDBdGYWtlIExFIEludGVybWVkaWF0ZSBYMTAeFw0xNjA2MTEx\nNzQ4MDBaFw0xNjA5MDkxNzQ4MDBaMBkxFzAVBgNVBAMTDnd3dy53ZXBwb3MubmV0\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtzCcMfWoQRt5AMEY0HUb\n2GaraL1GsWOo6YXdPfe+YDvtnmDw23NcoTX7VSeCgU9M3RKs19AsCJcRNTLJ2dmD\nrAuyCTud9YTAaXQcTOLUhtO8T8+9AFVIva2OmAlKCR5saBW3JaRxW7V2aHEd/d1s\ns1CvNOO7jNppc9NwGSnDHcn3rqNv/U3MaU0gpJJRqsKkvcLU6IHJGgxyQ6AbpwJD\nIqBnzkjHu2IuhGEbRuMjyWLA2qtsjyVlfPotDxUdVouUQpz7dGHUFrLR7ma8QAYu\nOfl1ZMyrc901HGMa7zwbnFWurs3fed7vAosTRZIjnn72/3Wo7L9RiMB+vwr3NX7c\n9QIDAQABo4ICIzCCAh8wDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUF\nBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBRh9q/3Zxbk4yA/\nt7j+8xA+rkiZBTAfBgNVHSMEGDAWgBTAzANGuVggzFxycPPhLssgpvVoOjB4Bggr\nBgEFBQcBAQRsMGowMwYIKwYBBQUHMAGGJ2h0dHA6Ly9vY3NwLnN0Zy1pbnQteDEu\nbGV0c2VuY3J5cHQub3JnLzAzBggrBgEFBQcwAoYnaHR0cDovL2NlcnQuc3RnLWlu\ndC14MS5sZXRzZW5jcnlwdC5vcmcvMCUGA1UdEQQeMByCCndlcHBvcy5uZXSCDnd3\ndy53ZXBwb3MubmV0MIH+BgNVHSAEgfYwgfMwCAYGZ4EMAQIBMIHmBgsrBgEEAYLf\nEwEBATCB1jAmBggrBgEFBQcCARYaaHR0cDovL2Nwcy5sZXRzZW5jcnlwdC5vcmcw\ngasGCCsGAQUFBwICMIGeDIGbVGhpcyBDZXJ0aWZpY2F0ZSBtYXkgb25seSBiZSBy\nZWxpZWQgdXBvbiBieSBSZWx5aW5nIFBhcnRpZXMgYW5kIG9ubHkgaW4gYWNjb3Jk\nYW5jZSB3aXRoIHRoZSBDZXJ0aWZpY2F0ZSBQb2xpY3kgZm91bmQgYXQgaHR0cHM6\nLy9sZXRzZW5jcnlwdC5vcmcvcmVwb3NpdG9yeS8wDQYJKoZIhvcNAQELBQADggEB\nAEqMdWrmdIyQxthWsX3iHmM2h/wXwEesD0VIaA+Pq4mjwmKBkoPSmHGQ/O4v8RaK\nB6gl8v+qmvCwwqC1SkBmm+9C2yt/P6WhAiA/DD+WppYgJWfcz2lEKrgufFlHPukB\nDzE0mJDuXm09QTApWlaTZWYfWKY50T5uOT/rs+OwGFFCO/8o7v5AZRAHos6uzjvq\nAtFZj/FEnXXMjSSlQ7YKTXToVpnAYH4e3/UMsi6/O4orkVz82ZfhKwMWHV8dXlRw\ntQaemFWTjGPgSLXJAtQO30DgNJBHX/fJEaHv6Wy8TF3J0wOGpzGbOwaTX8YAmEzC\nlzzjs+clg5MN5rd1g4POJtU=\n-----END CERTIFICATE-----\n"
              },
              "properties": {
                "root": {
                  "type": "string",
                  "nullable": true
                },
                "chain": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "server": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  getCertificate:
    description: |-
      Retrieves the details of an existing certificate.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/certificates/#getCertificate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIICljCCAX4CAQAwGTEXMBUGA1UEAwwOd3d3LndlcHBvcy5uZXQwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3MJwx9ahBG3kAwRjQdRvYZqtovUaxY6jp\nhd09975gO+2eYPDbc1yhNftVJ4KBT0zdEqzX0CwIlxE1MsnZ2YOsC7IJO531hMBp\ndBxM4tSG07xPz70AVUi9rY6YCUoJHmxoFbclpHFbtXZocR393WyzUK8047uM2mlz\n03AZKcMdyfeuo2/9TcxpTSCkklGqwqS9wtTogckaDHJDoBunAkMioGfOSMe7Yi6E\nYRtG4yPJYsDaq2yPJWV8+i0PFR1Wi5RCnPt0YdQWstHuZrxABi45+XVkzKtz3TUc\nYxrvPBucVa6uzd953u8CixNFkiOefvb/dajsv1GIwH6/Cvc1ftz1AgMBAAGgODA2\nBgkqhkiG9w0BCQ4xKTAnMCUGA1UdEQQeMByCDnd3dy53ZXBwb3MubmV0ggp3ZXBw\nb3MubmV0MA0GCSqGSIb3DQEBCwUAA4IBAQCDnVBO9RdJX0eFeZzlv5c8yG8duhKP\nl0Vl+V88fJylb/cbNj9qFPkKTK0vTXmS2XUFBChKPtLucp8+Z754UswX+QCsdc7U\nTTSG0CkyilcSubdZUERGej1XfrVQhrokk7Fu0Jh3BdT6REP0SIDTpA8ku/aRQiAp\np+h19M37S7+w/DMGDAq2LSX8jOpJ1yIokRDyLZpmwyLxutC21DXMGoJ3xZeUFrUT\nqRNwzkn2dJzgTrPkzhaXalUBqv+nfXHqHaWljZa/O0NVCFrHCdTdd53/6EE2Yabv\nq5SFTkRCpaxrvM/7a8Tr4ixD1/VKD6rw3+WC00000000000000000000\n-----END CERTIFICATE REQUEST-----\n",
                "name": "www",
                "state": "issued",
                "years": 1,
                "domain_id": 2,
                "created_at": "2016-06-11T18:47:08.000Z",
                "expires_at": "2016-09-09T18:47:37.000Z",
                "updated_at": "2016-06-11T18:47:37.000Z",
                "common_name": "www.weppos.net",
                "authority_identifier": "letsencrypt"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "csr": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "state": {
                  "enum": [
                    "new",
                    "purchased",
                    "configured",
                    "submitted",
                    "issued",
                    "rejected",
                    "refunded",
                    "cancelled",
                    "requesting",
                    "failed"
                  ],
                  "type": "string"
                },
                "years": {
                  "type": "integer"
                },
                "domain_id": {
                  "type": "integer"
                },
                "auto_renew": {
                  "type": "boolean"
                },
                "contact_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "common_name": {
                  "type": "string"
                },
                "alternate_names": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "authority_identifier": {
                  "enum": [
                    "comodo",
                    "rapidssl",
                    "letsencrypt"
                  ],
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  getCertificatePrivateKey:
    description: |-
      Gets the PEM-encoded certificate private key.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/certificates/#getCertificatePrivateKey
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAtzCcMfWoQRt5AMEY0HUb2GaraL1GsWOo6YXdPfe+YDvtnmDw\n23NcoTX7VSeCgU9M3RKs19AsCJcRNTLJ2dmDrAuyCTud9YTAaXQcTOLUhtO8T8+9\nAFVIva2OmAlKCR5saBW3JaRxW7V2aHEd/d1ss1CvNOO7jNppc9NwGSnDHcn3rqNv\n/U3MaU0gpJJRqsKkvcLU6IHJGgxyQ6AbpwJDIqBnzkjHu2IuhGEbRuMjyWLA2qts\njyVlfPotDxUdVouUQpz7dGHUFrLR7ma8QAYuOfl1ZMyrc901HGMa7zwbnFWurs3f\ned7vAosTRZIjnn72/3Wo7L9RiMB+vwr3NX7c9QIDAQABAoIBAEQx32OlzK34GTKT\nr7Yicmw7xEGofIGa1Q2h3Lut13whsxKLif5X0rrcyqRnoeibacS+qXXrJolIG4rP\nTl8/3wmUDQHs5J+6fJqFM+fXZUCP4AFiFzzhgsPBsVyd0KbWYYrZ0qU7s0ttoRe+\nTGjuHgIe3ip1QKNtx2Xr50YmytDydknmro79J5Gfrub1l2iA8SDm1eBrQ4SFaNQ2\nU709pHeSwX8pTihUX2Zy0ifpr0O1wYQjGLneMoG4rrNQJG/z6iUdhYczwwt1kDRQ\n4WkM2sovFOyxbBfoCQ3Gy/eem7OXfjNKUe47DAVLnPkKbqL/3Lo9FD7kcB8K87Ap\nr/vYrl0CgYEA413RAk7571w5dM+VftrdbFZ+Yi1OPhUshlPSehavro8kMGDEG5Ts\n74wEz2X3cfMxauMpMrBk/XnUCZ20AnWQClK73RB5fzPw5XNv473Tt/AFmt7eLOzl\nOcYrhpEHegtsD/ZaljlGtPqsjQAL9Ijhao03m1cGB1+uxI7FgacdckcCgYEAzkKP\n6xu9+WqOol73cnlYPS3sSZssyUF+eqWSzq2YJGRmfr1fbdtHqAS1ZbyC5fZVNZYV\nml1vfXi2LDcU0qS04JazurVyQr2rJZMTlCWVET1vhik7Y87wgCkLwKpbwamPDmlI\n9GY+fLNEa4yfAOOpvpTJpenUScxyKWH2cdYFOOMCgYBhrJnvffINC/d64Pp+BpP8\nyKN+lav5K6t3AWd4H2rVeJS5W7ijiLTIq8QdPNayUyE1o+S8695WrhGTF/aO3+ZD\nKQufikZHiQ7B43d7xL7BVBF0WK3lateGnEVyh7dIjMOdj92Wj4B6mv2pjQ2VvX/p\nAEWVLCtg24/+zL64VgxmXQKBgGosyXj1Zu2ldJcQ28AJxup3YVLilkNje4AXC2No\n6RCSvlAvm5gpcNGE2vvr9lX6YBKdl7FGt8WXBe/sysNEFfgmm45ZKOBCUn+dHk78\nqaeeQHKHdxMBy7utZWdgSqt+ZS299NgaacA3Z9kVIiSLDS4V2VeW7riujXXP/9TJ\nnxaRAoGBAMWXOfNVzfTyrKff6gvDWH+hqNICLyzvkEn2utNY9Q6WwqGuY9fvP/4Z\nXzc48AOBzUr8OeA4sHKJ79sJirOiWHNfD1swtvyVzsFZb6moiNwD3Ce/FzYCa3lQ\nU8blTH/uqpR2pSC6whzJ/lnSdqHUqhyp00000000000000000000\n-----END RSA PRIVATE KEY-----\n"
              },
              "properties": {
                "private_key": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  issueLetsencryptCertificate:
    description: |-
      Issues a [Let's Encrypt](https://dnsimple.com/letsencrypt) certificate ordered with DNSimple.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/certificates/#issueLetsencryptCertificate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIICljCCAX4CAQAwGTEXMBUGA1UEAwwOd3d3LndlcHBvcy5uZXQwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3MJwx9ahBG3kAwRjQdRvYZqtovUaxY6jp\nhd09975gO+2eYPDbc1yhNftVJ4KBT0zdEqzX0CwIlxE1MsnZ2YOsC7IJO531hMBp\ndBxM4tSG07xPz70AVUi9rY6YCUoJHmxoFbclpHFbtXZocR393WyzUK8047uM2mlz\n03AZKcMdyfeuo2/9TcxpTSCkklGqwqS9wtTogckaDHJDoBunAkMioGfOSMe7Yi6E\nYRtG4yPJYsDaq2yPJWV8+i0PFR1Wi5RCnPt0YdQWstHuZrxABi45+XVkzKtz3TUc\nYxrvPBucVa6uzd953u8CixNFkiOefvb/dajsv1GIwH6/Cvc1ftz1AgMBAAGgODA2\nBgkqhkiG9w0BCQ4xKTAnMCUGA1UdEQQeMByCDnd3dy53ZXBwb3MubmV0ggp3ZXBw\nb3MubmV0MA0GCSqGSIb3DQEBCwUAA4IBAQCDnVBO9RdJX0eFeZzlv5c8yG8duhKP\nl0Vl+V88fJylb/cbNj9qFPkKTK0vTXmS2XUFBChKPtLucp8+Z754UswX+QCsdc7U\nTTSG0CkyilcSubdZUERGej1XfrVQhrokk7Fu0Jh3BdT6REP0SIDTpA8ku/aRQiAp\np+h19M37S7+w/DMGDAq2LSX8jOpJ1yIokRDyLZpmwyLxutC21DXMGoJ3xZeUFrUT\nqRNwzkn2dJzgTrPkzhaXalUBqv+nfXHqHaWljZa/O0NVCFrHCdTdd53/6EE2Yabv\nq5SFTkRCpaxrvM/7a8Tr4ixD1/VKD6rw3+WC00000000000000000000\n-----END CERTIFICATE REQUEST-----\n",
                "name": "www",
                "state": "issued",
                "years": 1,
                "domain_id": 2,
                "created_at": "2016-06-11T18:47:08.000Z",
                "expires_at": "2016-09-09T18:47:37.000Z",
                "updated_at": "2016-06-11T18:47:37.000Z",
                "common_name": "www.weppos.net",
                "authority_identifier": "letsencrypt"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "csr": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "state": {
                  "enum": [
                    "new",
                    "purchased",
                    "configured",
                    "submitted",
                    "issued",
                    "rejected",
                    "refunded",
                    "cancelled",
                    "requesting",
                    "failed"
                  ],
                  "type": "string"
                },
                "years": {
                  "type": "integer"
                },
                "domain_id": {
                  "type": "integer"
                },
                "auto_renew": {
                  "type": "boolean"
                },
                "contact_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "common_name": {
                  "type": "string"
                },
                "alternate_names": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "authority_identifier": {
                  "enum": [
                    "comodo",
                    "rapidssl",
                    "letsencrypt"
                  ],
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  issueRenewalLetsencryptCertificate:
    description: |-
      Issues a [Let's Encrypt](https://dnsimple.com/letsencrypt) certificate renewal ordered with DNSimple.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/certificates/#issueRenewalLetsencryptCertificate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIICljCCAX4CAQAwGTEXMBUGA1UEAwwOd3d3LndlcHBvcy5uZXQwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3MJwx9ahBG3kAwRjQdRvYZqtovUaxY6jp\nhd09975gO+2eYPDbc1yhNftVJ4KBT0zdEqzX0CwIlxE1MsnZ2YOsC7IJO531hMBp\ndBxM4tSG07xPz70AVUi9rY6YCUoJHmxoFbclpHFbtXZocR393WyzUK8047uM2mlz\n03AZKcMdyfeuo2/9TcxpTSCkklGqwqS9wtTogckaDHJDoBunAkMioGfOSMe7Yi6E\nYRtG4yPJYsDaq2yPJWV8+i0PFR1Wi5RCnPt0YdQWstHuZrxABi45+XVkzKtz3TUc\nYxrvPBucVa6uzd953u8CixNFkiOefvb/dajsv1GIwH6/Cvc1ftz1AgMBAAGgODA2\nBgkqhkiG9w0BCQ4xKTAnMCUGA1UdEQQeMByCDnd3dy53ZXBwb3MubmV0ggp3ZXBw\nb3MubmV0MA0GCSqGSIb3DQEBCwUAA4IBAQCDnVBO9RdJX0eFeZzlv5c8yG8duhKP\nl0Vl+V88fJylb/cbNj9qFPkKTK0vTXmS2XUFBChKPtLucp8+Z754UswX+QCsdc7U\nTTSG0CkyilcSubdZUERGej1XfrVQhrokk7Fu0Jh3BdT6REP0SIDTpA8ku/aRQiAp\np+h19M37S7+w/DMGDAq2LSX8jOpJ1yIokRDyLZpmwyLxutC21DXMGoJ3xZeUFrUT\nqRNwzkn2dJzgTrPkzhaXalUBqv+nfXHqHaWljZa/O0NVCFrHCdTdd53/6EE2Yabv\nq5SFTkRCpaxrvM/7a8Tr4ixD1/VKD6rw3+WC00000000000000000000\n-----END CERTIFICATE REQUEST-----\n",
                "name": "www",
                "state": "issued",
                "years": 1,
                "domain_id": 2,
                "created_at": "2016-06-11T18:47:08.000Z",
                "expires_at": "2016-09-09T18:47:37.000Z",
                "updated_at": "2016-06-11T18:47:37.000Z",
                "common_name": "www.weppos.net",
                "authority_identifier": "letsencrypt"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "csr": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "state": {
                  "enum": [
                    "new",
                    "purchased",
                    "configured",
                    "submitted",
                    "issued",
                    "rejected",
                    "refunded",
                    "cancelled",
                    "requesting",
                    "failed"
                  ],
                  "type": "string"
                },
                "years": {
                  "type": "integer"
                },
                "domain_id": {
                  "type": "integer"
                },
                "auto_renew": {
                  "type": "boolean"
                },
                "contact_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "common_name": {
                  "type": "string"
                },
                "alternate_names": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "authority_identifier": {
                  "enum": [
                    "comodo",
                    "rapidssl",
                    "letsencrypt"
                  ],
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  listCertificates:
    description: |-
      Lists the certificates for a domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/certificates/#listCertificates
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 1,
                  "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIICljCCAX4CAQAwGTEXMBUGA1UEAwwOd3d3LndlcHBvcy5uZXQwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3MJwx9ahBG3kAwRjQdRvYZqtovUaxY6jp\nhd09975gO+2eYPDbc1yhNftVJ4KBT0zdEqzX0CwIlxE1MsnZ2YOsC7IJO531hMBp\ndBxM4tSG07xPz70AVUi9rY6YCUoJHmxoFbclpHFbtXZocR393WyzUK8047uM2mlz\n03AZKcMdyfeuo2/9TcxpTSCkklGqwqS9wtTogckaDHJDoBunAkMioGfOSMe7Yi6E\nYRtG4yPJYsDaq2yPJWV8+i0PFR1Wi5RCnPt0YdQWstHuZrxABi45+XVkzKtz3TUc\nYxrvPBucVa6uzd953u8CixNFkiOefvb/dajsv1GIwH6/Cvc1ftz1AgMBAAGgODA2\nBgkqhkiG9w0BCQ4xKTAnMCUGA1UdEQQeMByCDnd3dy53ZXBwb3MubmV0ggp3ZXBw\nb3MubmV0MA0GCSqGSIb3DQEBCwUAA4IBAQCDnVBO9RdJX0eFeZzlv5c8yG8duhKP\nl0Vl+V88fJylb/cbNj9qFPkKTK0vTXmS2XUFBChKPtLucp8+Z754UswX+QCsdc7U\nTTSG0CkyilcSubdZUERGej1XfrVQhrokk7Fu0Jh3BdT6REP0SIDTpA8ku/aRQiAp\np+h19M37S7+w/DMGDAq2LSX8jOpJ1yIokRDyLZpmwyLxutC21DXMGoJ3xZeUFrUT\nqRNwzkn2dJzgTrPkzhaXalUBqv+nfXHqHaWljZa/O0NVCFrHCdTdd53/6EE2Yabv\nq5SFTkRCpaxrvM/7a8Tr4ixD1/VKD6rw3+WC00000000000000000000\n-----END CERTIFICATE REQUEST-----\n",
                  "name": "www",
                  "state": "issued",
                  "years": 1,
                  "domain_id": 2,
                  "created_at": "2016-06-11T18:47:08.000Z",
                  "expires_at": "2016-09-09T18:47:37.000Z",
                  "updated_at": "2016-06-11T18:47:37.000Z",
                  "common_name": "www.weppos.net",
                  "authority_identifier": "letsencrypt"
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "csr": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "state": {
                    "enum": [
                      "new",
                      "purchased",
                      "configured",
                      "submitted",
                      "issued",
                      "rejected",
                      "refunded",
                      "cancelled",
                      "requesting",
                      "failed"
                    ],
                    "type": "string"
                  },
                  "years": {
                    "type": "integer"
                  },
                  "domain_id": {
                    "type": "integer"
                  },
                  "auto_renew": {
                    "type": "boolean"
                  },
                  "contact_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "common_name": {
                    "type": "string"
                  },
                  "alternate_names": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "authority_identifier": {
                    "enum": [
                      "comodo",
                      "rapidssl",
                      "letsencrypt"
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "pagination": {
              "type": "object",
              "example": {
                "per_page": 30,
                "total_pages": 1,
                "current_page": 1,
                "total_entries": 2
              },
              "properties": {
                "per_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_entries": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  purchaseLetsencryptCertificate:
    description: |-
      Orders a [Let's Encrypt](https://dnsimple.com/letsencrypt) certificate with DNSimple.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/certificates/#purchaseLetsencryptCertificate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "state": "new",
                "created_at": "2016-06-11T18:47:08.000Z",
                "updated_at": "2016-06-11T18:47:37.000Z",
                "auto_renewal": true,
                "certificate_id": 1
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "state": {
                  "enum": [
                    "new",
                    "purchased",
                    "configured",
                    "submitted",
                    "issued",
                    "rejected",
                    "refunded",
                    "cancelled",
                    "requesting",
                    "failed"
                  ],
                  "type": "string"
                },
                "auto_renew": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "certificate_id": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  purchaseRenewalLetsencryptCertificate:
    description: |-
      Renews a [Let's Encrypt](https://dnsimple.com/letsencrypt) certificate ordered with DNSimple.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/certificates/#purchaseRenewalLetsencryptCertificate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 999,
                "state": "new",
                "created_at": "2017-10-19T08:18:53.000Z",
                "updated_at": "2017-10-19T08:18:53.000Z",
                "auto_renewal": true,
                "new_certificate_id": 300,
                "old_certificate_id": 200
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "state": {
                  "enum": [
                    "cancelled",
                    "new",
                    "renewing",
                    "renewed",
                    "failed"
                  ],
                  "type": "string"
                },
                "auto_renew": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "new_certificate_id": {
                  "type": "integer"
                },
                "old_certificate_id": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  createContact:
    description: |-
      Creates a contact.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/contacts/#createContact
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "fax": "+18011234567",
            "city": "Roma",
            "email": "first@example.com",
            "label": "Default",
            "phone": "+18001234567",
            "country": "IT",
            "address1": "Italian Street, 10",
            "job_title": "CEO",
            "last_name": "User",
            "first_name": "First",
            "postal_code": "00100",
            "state_province": "RM",
            "organization_name": "Awesome Company"
          },
          "properties": {
            "fax": {
              "type": "string",
              "nullable": true
            },
            "city": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "label": {
              "type": "string",
              "default": ""
            },
            "phone": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string",
              "nullable": true
            },
            "job_title": {
              "type": "string",
              "description": "The contact's job title. Required if the organization_name is specified."
            },
            "last_name": {
              "type": "string"
            },
            "first_name": {
              "type": "string"
            },
            "postal_code": {
              "type": "string"
            },
            "state_province": {
              "type": "string"
            },
            "organization_name": {
              "type": "string",
              "description": "The company name. If the organization_name is specified, then you must also include job_title."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  deleteContact:
    description: |-
      Permanently deletes a contact from the account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/contacts/#deleteContact
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getContact:
    description: |-
      Retrieves the details of an existing contact.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/contacts/#getContact
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "fax": "+1.8011234567",
                "city": "Roma",
                "email": "first@example.com",
                "label": "Default",
                "phone": "+1.8001234567",
                "country": "IT",
                "address1": "Italian Street, 10",
                "address2": "",
                "job_title": "CEO",
                "last_name": "User",
                "account_id": 1010,
                "created_at": "2013-11-08T17:23:15.000Z",
                "first_name": "First",
                "updated_at": "2015-01-08T21:30:50.000Z",
                "postal_code": "00100",
                "state_province": "RM",
                "organization_name": "Awesome Company"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "fax": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "address1": {
                  "type": "string"
                },
                "address2": {
                  "type": "string"
                },
                "job_title": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "first_name": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "postal_code": {
                  "type": "string",
                  "description": "The ISO Alpha-2 country code."
                },
                "state_province": {
                  "type": "string"
                },
                "organization_name": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  listContacts:
    description: |-
      List contacts in the account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/contacts/#listContacts
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 1,
                  "fax": "+1.8011234567",
                  "city": "Roma",
                  "email": "first@example.com",
                  "label": "Default",
                  "phone": "+1.8001234567",
                  "country": "IT",
                  "address1": "Italian Street, 10",
                  "address2": "",
                  "job_title": "CEO",
                  "last_name": "User",
                  "account_id": 1010,
                  "created_at": "2013-11-08T17:23:15.000Z",
                  "first_name": "First",
                  "updated_at": "2015-01-08T21:30:50.000Z",
                  "postal_code": "00100",
                  "state_province": "RM",
                  "organization_name": "Awesome Company"
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fax": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "address1": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "job_title": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "account_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "postal_code": {
                    "type": "string",
                    "description": "The ISO Alpha-2 country code."
                  },
                  "state_province": {
                    "type": "string"
                  },
                  "organization_name": {
                    "type": "string"
                  }
                }
              }
            },
            "pagination": {
              "type": "object",
              "example": {
                "per_page": 30,
                "total_pages": 1,
                "current_page": 1,
                "total_entries": 2
              },
              "properties": {
                "per_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_entries": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  updateContact:
    description: |-
      Updates the contact details.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/contacts/#updateContact
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "fax": "+18011234567",
            "city": "Roma",
            "email": "first@example.com",
            "label": "Default",
            "phone": "+18001234567",
            "country": "IT",
            "address1": "Italian Street, 10",
            "job_title": "CEO",
            "last_name": "User",
            "first_name": "First",
            "postal_code": "00100",
            "state_province": "RM",
            "organization_name": "Awesome Company"
          },
          "properties": {
            "fax": {
              "type": "string",
              "nullable": true
            },
            "city": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "label": {
              "type": "string",
              "default": ""
            },
            "phone": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string",
              "nullable": true
            },
            "job_title": {
              "type": "string",
              "description": "The contact's job title. Required if the organization_name is specified."
            },
            "last_name": {
              "type": "string"
            },
            "first_name": {
              "type": "string"
            },
            "postal_code": {
              "type": "string"
            },
            "state_province": {
              "type": "string"
            },
            "organization_name": {
              "type": "string",
              "description": "The company name. If the organization_name is specified, then you must also include job_title."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "fax": "+1.8011234567",
                "city": "Roma",
                "email": "first@example.com",
                "label": "Default",
                "phone": "+1.8001234567",
                "country": "IT",
                "address1": "Italian Street, 10",
                "address2": "",
                "job_title": "CEO",
                "last_name": "User",
                "account_id": 1010,
                "created_at": "2013-11-08T17:23:15.000Z",
                "first_name": "First",
                "updated_at": "2015-01-08T21:30:50.000Z",
                "postal_code": "00100",
                "state_province": "RM",
                "organization_name": "Awesome Company"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "fax": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "address1": {
                  "type": "string"
                },
                "address2": {
                  "type": "string"
                },
                "job_title": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "first_name": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "postal_code": {
                  "type": "string",
                  "description": "The ISO Alpha-2 country code."
                },
                "state_province": {
                  "type": "string"
                },
                "organization_name": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  addDomainCollaborator:
    description: |-
      Adds a collaborator to the domain.
      
      At the time of the add, a collaborator may or may not have a DNSimple account. In case the collaborator doesn't have a DNSimple account, the system will invite them to register to DNSimple first and then to accept the collaboration invitation. In the other case, they are automatically added to the domain as collaborator. They can decide to reject the invitation later.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/collaborators/#addDomainCollaborator
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "example": {
            "id": 100,
            "user_id": 999,
            "domain_id": 1,
            "created_at": "2016-10-07T08:53:41.000Z",
            "invitation": false,
            "updated_at": "2016-10-07T08:53:41.000Z",
            "user_email": "existing-user@example.com",
            "accepted_at": "2016-10-07T08:53:41.000Z",
            "domain_name": "example.com"
          },
          "properties": {
            "id": {
              "type": "integer"
            },
            "user_id": {
              "type": "integer"
            },
            "domain_id": {
              "type": "integer"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2010-01-01T01:00:00.000Z",
              "description": "A date-time value formatted as ISO 8601."
            },
            "invitation": {
              "type": "boolean"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2010-01-01T01:00:00.000Z",
              "description": "A date-time value formatted as ISO 8601."
            },
            "user_email": {
              "type": "string"
            },
            "accepted_at": {
              "type": "string",
              "format": "date-time",
              "example": "2010-01-01T01:00:00.000Z",
              "description": "A date-time value formatted as ISO 8601."
            },
            "domain_name": {
              "type": "string"
            }
          }
        }
      ]
  listDomainCollaborators:
    description: |-
      Lists collaborators for the domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/collaborators/#listDomainCollaborators
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 100,
                  "user_id": 999,
                  "domain_id": 1,
                  "created_at": "2016-10-07T08:53:41.000Z",
                  "invitation": false,
                  "updated_at": "2016-10-07T08:53:41.000Z",
                  "user_email": "existing-user@example.com",
                  "accepted_at": "2016-10-07T08:53:41.000Z",
                  "domain_name": "example.com"
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "user_id": {
                    "type": "integer"
                  },
                  "domain_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "invitation": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "user_email": {
                    "type": "string"
                  },
                  "accepted_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "domain_name": {
                    "type": "string"
                  }
                }
              }
            },
            "pagination": {
              "type": "object",
              "example": {
                "per_page": 30,
                "total_pages": 1,
                "current_page": 1,
                "total_entries": 2
              },
              "properties": {
                "per_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_entries": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  removeDomainCollaborator:
    description: |-
      Removes a collaborator from the domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/collaborators/#removeDomainCollaborator
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  createDomain:
    description: |-
      Creates a domain and the corresponding zone into the account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/#createDomain
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "name": "example-alpha.com",
                "state": "hosted",
                "account_id": 1010,
                "auto_renew": false,
                "created_at": "2014-12-06T15:56:55.000Z",
                "expires_at": null,
                "updated_at": "2015-12-09T00:20:56.000Z",
                "unicode_name": "example-alpha.com",
                "private_whois": false,
                "registrant_id": null
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "state": {
                  "enum": [
                    "hosted",
                    "registered",
                    "expired"
                  ],
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "auto_renew": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "expires_at": {
                  "anyOf": [
                    {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "description": "A nullable date-time value. The value can be null, when present the value is formatted according to the ISO 8601 specification."
                    }
                  ],
                  "nullable": true
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "unicode_name": {
                  "type": "string"
                },
                "private_whois": {
                  "type": "boolean"
                },
                "registrant_id": {
                  "type": "integer",
                  "nullable": true
                }
              }
            }
          }
        }
      ]
  deleteDomain:
    description: |-
      Permanently deletes a domain from the account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/#deleteDomain
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  createDomainDelegationSignerRecord:
    description: |-
      Adds a DS record to the domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/dnssec/#createDomainDelegationSignerRecord
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "digest": {
              "type": "string"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 24,
                "digest": "C1F6E04A5A61FBF65BF9DC8294C363CF11C89E802D926BDAB79C55D27BEFA94F",
                "keytag": "44620",
                "algorithm": "8",
                "domain_id": 1010,
                "created_at": "2017-03-03T13:49:58.000Z",
                "updated_at": "2017-03-03T13:49:58.000Z",
                "digest_type": "2"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "digest": {
                  "type": "string"
                },
                "keytag": {
                  "type": "string"
                },
                "algorithm": {
                  "type": "string"
                },
                "domain_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "digest_type": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  deleteDomainDelegationSignerRecord:
    description: |-
      Removes a DS record from the domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/dnssec/#deleteDomainDelegationSignerRecord
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  disableDomainDnssec:
    description: |-
      Disables DNSSEC for the domain.
      
      It will disable signing of the zone. If the domain is registered with DNSimple, it will also remove the DS record at the registry corresponding to the disabled DNSSEC signing.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/dnssec/#disableDomainDnssec
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  enableDomainDnssec:
    description: |-
      Enables DNSSEC for the domain.
      
      It will enable signing of the zone. If the domain is registered with DNSimple, it will also add the DS record to the corresponding registry.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/dnssec/#enableDomainDnssec
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "example": {
            "enabled": true,
            "created_at": "2017-02-03T17:43:22.000Z",
            "updated_at": "2017-02-03T17:43:22.000Z"
          },
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2010-01-01T01:00:00.000Z",
              "description": "A date-time value formatted as ISO 8601."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2010-01-01T01:00:00.000Z",
              "description": "A date-time value formatted as ISO 8601."
            }
          }
        }
      ]
  getDomainDelegationSignerRecord:
    description: |-
      Retrieves the details of an existing DS record.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/dnssec/#getDomainDelegationSignerRecord
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 24,
                "digest": "C1F6E04A5A61FBF65BF9DC8294C363CF11C89E802D926BDAB79C55D27BEFA94F",
                "keytag": "44620",
                "algorithm": "8",
                "domain_id": 1010,
                "created_at": "2017-03-03T13:49:58.000Z",
                "updated_at": "2017-03-03T13:49:58.000Z",
                "digest_type": "2"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "digest": {
                  "type": "string"
                },
                "keytag": {
                  "type": "string"
                },
                "algorithm": {
                  "type": "string"
                },
                "domain_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "digest_type": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  getDomainDnssec:
    description: |-
      Gets the DNSSEC status for an existing domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/dnssec/#getDomainDnssec
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "example": {
            "enabled": true,
            "created_at": "2017-02-03T17:43:22.000Z",
            "updated_at": "2017-02-03T17:43:22.000Z"
          },
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2010-01-01T01:00:00.000Z",
              "description": "A date-time value formatted as ISO 8601."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2010-01-01T01:00:00.000Z",
              "description": "A date-time value formatted as ISO 8601."
            }
          }
        }
      ]
  listDomainDelegationSignerRecords:
    description: |-
      Lists the DS records for the domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/dnssec/#listDomainDelegationSignerRecords
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 24,
                  "digest": "C1F6E04A5A61FBF65BF9DC8294C363CF11C89E802D926BDAB79C55D27BEFA94F",
                  "keytag": "44620",
                  "algorithm": "8",
                  "domain_id": 1010,
                  "created_at": "2017-03-03T13:49:58.000Z",
                  "updated_at": "2017-03-03T13:49:58.000Z",
                  "digest_type": "2"
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "digest": {
                    "type": "string"
                  },
                  "keytag": {
                    "type": "string"
                  },
                  "algorithm": {
                    "type": "string"
                  },
                  "domain_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "digest_type": {
                    "type": "string"
                  }
                }
              }
            },
            "pagination": {
              "type": "object",
              "example": {
                "per_page": 30,
                "total_pages": 1,
                "current_page": 1,
                "total_entries": 2
              },
              "properties": {
                "per_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_entries": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  createEmailForward:
    description: |-
      Creates a new email forward for the domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/email-forwards/#createEmailForward
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "to": "john@example.com",
            "from": "john.doe"
          },
          "properties": {
            "alias_name": {
              "type": "string",
              "description": "The receiving email recipient, the name part only without the domain. The domain is automatically appended."
            },
            "destination_email": {
              "type": "string",
              "format": "email",
              "description": "The email recipient the messages are delivered to."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "domain_id": 2,
                "created_at": "2016-02-04T14:26:50.000Z",
                "updated_at": "2016-02-04T14:26:50.000Z",
                "alias_email": "john.doe@a-domain.com",
                "destination_email": "john@example.com"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "to": {
                  "type": "string",
                  "deprecated": true,
                  "description": "Deprecated in favor of destination_email."
                },
                "from": {
                  "type": "string",
                  "deprecated": true,
                  "description": "Deprecated in favor of alias_email."
                },
                "domain_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "alias_email": {
                  "type": "string",
                  "format": "email",
                  "description": "The receiving email recipient."
                },
                "destination_email": {
                  "type": "string",
                  "format": "email",
                  "description": "The email recipient the messages are delivered to."
                }
              }
            }
          }
        }
      ]
  deleteEmailForward:
    description: |-
      Permanently deletes an email forward.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/email-forwards/#deleteEmailForward
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getEmailForward:
    description: |-
      Retrieves the details of an existing email forward.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/email-forwards/#getEmailForward
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "domain_id": 2,
                "created_at": "2016-02-04T14:26:50.000Z",
                "updated_at": "2016-02-04T14:26:50.000Z",
                "alias_email": "john.doe@a-domain.com",
                "destination_email": "john@example.com"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "to": {
                  "type": "string",
                  "deprecated": true,
                  "description": "Deprecated in favor of destination_email."
                },
                "from": {
                  "type": "string",
                  "deprecated": true,
                  "description": "Deprecated in favor of alias_email."
                },
                "domain_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "alias_email": {
                  "type": "string",
                  "format": "email",
                  "description": "The receiving email recipient."
                },
                "destination_email": {
                  "type": "string",
                  "format": "email",
                  "description": "The email recipient the messages are delivered to."
                }
              }
            }
          }
        }
      ]
  listEmailForwards:
    description: |-
      Lists email forwards for the domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/email-forwards/#listEmailForwards
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 1,
                  "domain_id": 2,
                  "created_at": "2016-02-04T14:26:50.000Z",
                  "updated_at": "2016-02-04T14:26:50.000Z",
                  "alias_email": "john.doe@a-domain.com",
                  "destination_email": "john@example.com"
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "to": {
                    "type": "string",
                    "deprecated": true,
                    "description": "Deprecated in favor of destination_email."
                  },
                  "from": {
                    "type": "string",
                    "deprecated": true,
                    "description": "Deprecated in favor of alias_email."
                  },
                  "domain_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "alias_email": {
                    "type": "string",
                    "format": "email",
                    "description": "The receiving email recipient."
                  },
                  "destination_email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email recipient the messages are delivered to."
                  }
                }
              }
            },
            "pagination": {
              "type": "object",
              "example": {
                "per_page": 30,
                "total_pages": 1,
                "current_page": 1,
                "total_entries": 2
              },
              "properties": {
                "per_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_entries": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  getDomain:
    description: |-
      Retrieves the details of an existing domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/#getDomain
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "name": "example-alpha.com",
                "state": "hosted",
                "account_id": 1010,
                "auto_renew": false,
                "created_at": "2014-12-06T15:56:55.000Z",
                "expires_at": null,
                "updated_at": "2015-12-09T00:20:56.000Z",
                "unicode_name": "example-alpha.com",
                "private_whois": false,
                "registrant_id": null
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "state": {
                  "enum": [
                    "hosted",
                    "registered",
                    "expired"
                  ],
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "auto_renew": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "expires_at": {
                  "anyOf": [
                    {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "description": "A nullable date-time value. The value can be null, when present the value is formatted according to the ISO 8601 specification."
                    }
                  ],
                  "nullable": true
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "unicode_name": {
                  "type": "string"
                },
                "private_whois": {
                  "type": "boolean"
                },
                "registrant_id": {
                  "type": "integer",
                  "nullable": true
                }
              }
            }
          }
        }
      ]
  listDomains:
    description: |-
      Lists the domains in the account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/#listDomains
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 1,
                  "name": "example-alpha.com",
                  "state": "hosted",
                  "account_id": 1010,
                  "auto_renew": false,
                  "created_at": "2014-12-06T15:56:55.000Z",
                  "expires_at": null,
                  "updated_at": "2015-12-09T00:20:56.000Z",
                  "unicode_name": "example-alpha.com",
                  "private_whois": false,
                  "registrant_id": null
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "state": {
                    "enum": [
                      "hosted",
                      "registered",
                      "expired"
                    ],
                    "type": "string"
                  },
                  "account_id": {
                    "type": "integer"
                  },
                  "auto_renew": {
                    "type": "boolean"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "expires_at": {
                    "anyOf": [
                      {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time",
                        "description": "A nullable date-time value. The value can be null, when present the value is formatted according to the ISO 8601 specification."
                      }
                    ],
                    "nullable": true
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "unicode_name": {
                    "type": "string"
                  },
                  "private_whois": {
                    "type": "boolean"
                  },
                  "registrant_id": {
                    "type": "integer",
                    "nullable": true
                  }
                }
              }
            },
            "pagination": {
              "type": "object",
              "example": {
                "per_page": 30,
                "total_pages": 1,
                "current_page": 1,
                "total_entries": 2
              },
              "properties": {
                "per_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_entries": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  acceptPush:
    description: |-
      Accepts a push to the target account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/pushes/#acceptPush
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "contact_id": 2
          },
          "properties": {
            "contact_id": {
              "type": "integer"
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  initiateDomainPush:
    description: |-
      Initiates a pust of a domain to another DNSimple account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/pushes/#initiateDomainPush
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "new_account_email": "admin@example.com"
          },
          "properties": {
            "new_account_email": {
              "type": "string"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "domain_id": 100,
                "account_id": 2020,
                "contact_id": 2,
                "created_at": "2016-08-11T10:16:03.000Z",
                "updated_at": "2016-08-11T10:16:03.000Z",
                "accepted_at": null
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "domain_id": {
                  "type": "integer"
                },
                "account_id": {
                  "type": "integer"
                },
                "contact_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "accepted_at": {
                  "anyOf": [
                    {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "description": "A nullable date-time value. The value can be null, when present the value is formatted according to the ISO 8601 specification."
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      ]
  listPushes:
    description: |-
      List pending pushes for the target account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/pushes/#listPushes
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 1,
                  "domain_id": 100,
                  "account_id": 2020,
                  "contact_id": 2,
                  "created_at": "2016-08-11T10:16:03.000Z",
                  "updated_at": "2016-08-11T10:16:03.000Z",
                  "accepted_at": null
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "domain_id": {
                    "type": "integer"
                  },
                  "account_id": {
                    "type": "integer"
                  },
                  "contact_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "accepted_at": {
                    "anyOf": [
                      {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time",
                        "description": "A nullable date-time value. The value can be null, when present the value is formatted according to the ISO 8601 specification."
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            },
            "pagination": {
              "type": "object",
              "example": {
                "per_page": 30,
                "total_pages": 1,
                "current_page": 1,
                "total_entries": 2
              },
              "properties": {
                "per_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_entries": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  rejectPush:
    description: |-
      Rejects a push to the target account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/domains/pushes/#rejectPush
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  whoami:
    description: |-
      Retrieves the details about the current authenticated entity used to access the API.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/identity/#whoami
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "example": {
                    "id": 1,
                    "email": "example-user@example.com",
                    "created_at": "2015-09-18T23:04:37.000Z",
                    "updated_at": "2016-06-09T20:03:39.000Z"
                  },
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2010-01-01T01:00:00.000Z",
                      "description": "A date-time value formatted as ISO 8601."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2010-01-01T01:00:00.000Z",
                      "description": "A date-time value formatted as ISO 8601."
                    }
                  }
                },
                "account": {
                  "type": "object",
                  "example": {
                    "id": 1,
                    "email": "example-account@example.com",
                    "created_at": "2015-09-18T23:04:37.000Z",
                    "updated_at": "2016-06-09T20:03:39.000Z",
                    "plan_identifier": "dnsimple-professional"
                  },
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2010-01-01T01:00:00.000Z",
                      "description": "A date-time value formatted as ISO 8601."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2010-01-01T01:00:00.000Z",
                      "description": "A date-time value formatted as ISO 8601."
                    },
                    "plan_identifier": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      ]
  authorizeDomainTransferOut:
    description: |-
      Prepares a domain for transferring out.
      
      This will unlock a domain and send the authorization code to the domain's administrative contact.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/#authorizeDomainTransferOut
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  disableDomainAutoRenewal:
    description: |-
      Disables auto renewal for the domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/auto-renewal/#disableDomainAutoRenewal
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  enableDomainAutoRenewal:
    description: |-
      Enables auto renewal for the domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/auto-renewal/#enableDomainAutoRenewal
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  cancelDomainTransfer:
    description: |-
      Cancels an in progress domain transfer.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/#cancelDomainTransfer
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "state": "transferring",
                "domain_id": 999,
                "auto_renew": false,
                "created_at": "2016-12-09T19:43:41.000Z",
                "updated_at": "2016-12-09T19:43:43.000Z",
                "registrant_id": 2,
                "whois_privacy": false
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "state": {
                  "enum": [
                    "cancelled",
                    "new",
                    "transferring",
                    "transferred",
                    "failed"
                  ],
                  "type": "string"
                },
                "domain_id": {
                  "type": "integer"
                },
                "auto_renew": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "registrant_id": {
                  "type": "integer"
                },
                "whois_privacy": {
                  "type": "boolean"
                },
                "status_description": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  checkDomain:
    description: |-
      Checks a domain name for availability.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/#checkDomain
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "domain": "ruby.codes",
                "premium": true,
                "available": true
              },
              "properties": {
                "domain": {
                  "type": "string",
                  "description": "The domain name that was checked"
                },
                "premium": {
                  "type": "boolean",
                  "description": "True if the domain is a premium domain and thus will have a non-standard registration, renewal, and/or transfer fee."
                },
                "available": {
                  "type": "boolean",
                  "description": "True if the domain is available to register"
                }
              }
            }
          }
        }
      ]
  changeDomainDelegation:
    description: |-
      Changes the domain name servers.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/delegation/#changeDomainDelegation
    example:
      inputs: [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "ns1.dnsimple.com",
            "ns2.dnsimple.com",
            "ns3.dnsimple.com",
            "ns4.dnsimple.com"
          ]
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
  changeDomainDelegationFromVanity:
    description: |-
      De-delegate a domain from vanity name servers.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/delegation/#changeDomainDelegationFromVanity
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  changeDomainDelegationToVanity:
    description: |-
      Delegate a domain to vanity name servers.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/delegation/#changeDomainDelegationToVanity
    example:
      inputs: [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "ns1.example.com",
            "ns2.example.com",
            "ns3.example.com",
            "ns4.example.com"
          ]
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 1,
                  "ipv4": "127.0.0.1",
                  "ipv6": "::1",
                  "name": "ns1.example.com",
                  "created_at": "2016-07-11T09:40:19.000Z",
                  "updated_at": "2016-07-11T09:40:19.000Z"
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "ipv4": {
                    "type": "string"
                  },
                  "ipv6": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  }
                }
              }
            }
          }
        }
      ]
  getDomainDelegation:
    description: |-
      Lists the name servers for the domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/delegation/#getDomainDelegation
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
  getDomainPremiumPrice:
    description: |-
      Deprecated in favor of getDomainPrices.
      
      Retrieves the premium price for a premium domain.
      
      Please note that a premium price can be different for registration, renewal, transfer. By default this endpoint returns the premium price for registration. If you need to check a different price, you should specify it with the action param.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/#getDomainPremiumPrice
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "action": "registration",
                "premium_price": "109.00"
              },
              "properties": {
                "action": {
                  "type": "string",
                  "description": "The action (registration, transfer, renewal) that the price is applied to."
                },
                "premium_price": {
                  "type": "string",
                  "description": "The price represented as a USD amount with dollars and cents."
                }
              }
            }
          }
        }
      ]
  getDomainPrices:
    description: |-
      Retrieve domain prices.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/#getDomainPrices
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "domain": "ruby.codes",
                "premium": false,
                "renewal_price": 15,
                "transfer_price": 15,
                "registration_price": 12
              },
              "properties": {
                "domain": {
                  "type": "string",
                  "description": "The domain name that was checked."
                },
                "premium": {
                  "type": "boolean",
                  "description": "True if the domain is a premium domain and thus will have a non-standard registration, renewal, and/or transfer fee."
                },
                "renewal_price": {
                  "type": "number",
                  "format": "float",
                  "description": "The domain renewal price represented as a USD amount with dollars and cents."
                },
                "transfer_price": {
                  "type": "number",
                  "format": "float",
                  "description": "The domain transfer price represented as a USD amount with dollars and cents."
                },
                "registration_price": {
                  "type": "number",
                  "format": "float",
                  "description": "The domain registration price represented as a USD amount with dollars and cents."
                }
              }
            }
          }
        }
      ]
  getDomainTransfer:
    description: |-
      Retrieves the details of an existing domain transfer.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/#getDomainTransfer
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "state": "transferring",
                "domain_id": 999,
                "auto_renew": false,
                "created_at": "2016-12-09T19:43:41.000Z",
                "updated_at": "2016-12-09T19:43:43.000Z",
                "registrant_id": 2,
                "whois_privacy": false
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "state": {
                  "enum": [
                    "cancelled",
                    "new",
                    "transferring",
                    "transferred",
                    "failed"
                  ],
                  "type": "string"
                },
                "domain_id": {
                  "type": "integer"
                },
                "auto_renew": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "registrant_id": {
                  "type": "integer"
                },
                "whois_privacy": {
                  "type": "boolean"
                },
                "status_description": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  registerDomain:
    description: |-
      Registers a domain name.
      
      Your account must be active for this command to complete successfully. You will be automatically charged the registration fee upon successful registration, so please be careful with this command.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/#registerDomain
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "registrant_id": 1
          },
          "properties": {
            "auto_renew": {
              "type": "boolean",
              "description": "Set to true to enable the auto-renewal of the domain. Default: true."
            },
            "premium_price": {
              "type": "string",
              "description": "Required as confirmation of the price, only if the domain is premium."
            },
            "registrant_id": {
              "type": "integer",
              "description": "The ID of an existing contact in your account."
            },
            "whois_privacy": {
              "type": "boolean",
              "description": "Set to true will attempt to purchase/enable the whois privacy as part of the registration. An extra cost may apply. Default: false."
            },
            "extended_attributes": {
              "type": "object",
              "description": "Required for TLDs that require extended attributes."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "state": "new",
                "period": 1,
                "domain_id": 999,
                "auto_renew": false,
                "created_at": "2016-12-09T19:35:31.000Z",
                "updated_at": "2016-12-09T19:35:31.000Z",
                "registrant_id": 2,
                "whois_privacy": false
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "state": {
                  "enum": [
                    "cancelled",
                    "new",
                    "registering",
                    "registered",
                    "failed"
                  ],
                  "type": "string"
                },
                "period": {
                  "type": "integer",
                  "maximum": 10,
                  "minimum": 1
                },
                "domain_id": {
                  "type": "integer"
                },
                "auto_renew": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "registrant_id": {
                  "type": "integer"
                },
                "whois_privacy": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      ]
  domainRenew:
    description: |-
      Explicitly renews a domain, if the registry supports this function.
      
      Your account must be active for this command to complete successfully. You will be automatically charged the renewal fee upon successful renewal, so please be careful with this command.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/#renewDomain
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "period": 2
          },
          "properties": {
            "period": {
              "type": "integer"
            },
            "premium_price": {
              "type": "string",
              "description": "Required as confirmation of the price, only if the domain is premium."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "state": "new",
                "period": 1,
                "domain_id": 999,
                "created_at": "2016-12-09T19:46:45.000Z",
                "updated_at": "2016-12-09T19:46:45.000Z"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "state": {
                  "enum": [
                    "cancelled",
                    "new",
                    "renewing",
                    "renewed",
                    "failed"
                  ],
                  "type": "string"
                },
                "period": {
                  "type": "integer",
                  "maximum": 9,
                  "minimum": 1
                },
                "domain_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                }
              }
            }
          }
        }
      ]
  transferDomain:
    description: |-
      Transfers a domain name from another registrar.
      
      Your account must be active for this command to complete successfully. You will be automatically charged the 1-year transfer fee upon successful transfer, so please be careful with this command. The transfer may take anywhere from a few minutes up to 7 days.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/#transferDomain
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "auth_code": {
              "type": "string",
              "description": "Required for TLDS that require authorization-based transfer (the vast majority of TLDs)."
            },
            "auto_renew": {
              "type": "boolean",
              "description": "Set to true to enable the auto-renewal of the domain. Default: true."
            },
            "premium_price": {
              "type": "string",
              "description": "Required as confirmation of the price, only if the domain is premium."
            },
            "registrant_id": {
              "type": "integer",
              "description": "The ID of an existing contact in your account."
            },
            "whois_privacy": {
              "type": "boolean",
              "description": "Set to true will attempt to purchase/enable the whois privacy as part of the transfer. An extra cost may apply. Default: false."
            },
            "extended_attributes": {
              "type": "object",
              "description": "Required for TLDs that require extended attributes."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "state": "transferring",
                "domain_id": 999,
                "auto_renew": false,
                "created_at": "2016-12-09T19:43:41.000Z",
                "updated_at": "2016-12-09T19:43:43.000Z",
                "registrant_id": 2,
                "whois_privacy": false
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "state": {
                  "enum": [
                    "cancelled",
                    "new",
                    "transferring",
                    "transferred",
                    "failed"
                  ],
                  "type": "string"
                },
                "domain_id": {
                  "type": "integer"
                },
                "auto_renew": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "registrant_id": {
                  "type": "integer"
                },
                "whois_privacy": {
                  "type": "boolean"
                },
                "status_description": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  disableWhoisPrivacy:
    description: |-
      Disables the WHOIS privacy for the domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/whois-privacy/#disableWhoisPrivacy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "enabled": true,
                "domain_id": 2,
                "created_at": "2016-02-13T14:34:50.000Z",
                "expires_on": "2017-02-13T00:00:00.000Z",
                "updated_at": "2016-02-13T14:34:52.000Z"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "domain_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "expires_on": {
                  "type": "string",
                  "format": "date",
                  "example": "2010-01-01T00:00:00.000Z",
                  "description": "A date value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                }
              }
            }
          }
        }
      ]
  enableWhoisPrivacy:
    description: |-
      Enables the WHOIS privacy for the domain.
      
      Note that if the WHOIS privacy is not purchased for the domain, enabling WHOIS privacy will cause the service to be purchased for a period of 1 year. If WHOIS privacy was previously purchased and disabled, then calling this will enable the WHOIS privacy.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/whois-privacy/#enableWhoisPrivacy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "enabled": true,
                "domain_id": 2,
                "created_at": "2016-02-13T14:34:50.000Z",
                "expires_on": "2017-02-13T00:00:00.000Z",
                "updated_at": "2016-02-13T14:34:52.000Z"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "domain_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "expires_on": {
                  "type": "string",
                  "format": "date",
                  "example": "2010-01-01T00:00:00.000Z",
                  "description": "A date value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                }
              }
            }
          }
        }
      ]
  getWhoisPrivacy:
    description: |-
      Gets the whois privacy status for an existing domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/whois-privacy/#getWhoisPrivacy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "enabled": true,
                "domain_id": 2,
                "created_at": "2016-02-13T14:34:50.000Z",
                "expires_on": "2017-02-13T00:00:00.000Z",
                "updated_at": "2016-02-13T14:34:52.000Z"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "domain_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "expires_on": {
                  "type": "string",
                  "format": "date",
                  "example": "2010-01-01T00:00:00.000Z",
                  "description": "A date value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                }
              }
            }
          }
        }
      ]
  renewWhoisPrivacy:
    description: |-
      Renews the WHOIS privacy for the domain.
      
      Note that if the WHOIS privacy was never purchased for the domain or if there is another renewal order in progress, renewing WHOIS privacy will return an error.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/registrar/whois-privacy/#renewWhoisPrivacy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "state": "new",
                "enabled": true,
                "domain_id": 100,
                "created_at": "2019-01-10T12:12:48.000Z",
                "expires_on": "2020-01-10T00:00:00.000Z",
                "updated_at": "2019-01-10T12:12:48.000Z",
                "whois_privacy_id": 999
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "domain_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "expires_on": {
                  "type": "string",
                  "format": "date",
                  "example": "2010-01-01T00:00:00.000Z",
                  "description": "A date value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "whois_privacy_id": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  createPrimaryServer:
    description: |-
      Creates a primary server into the account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/secondary-dns/#createPrimaryServer
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name",
            "ip"
          ],
          "properties": {
            "ip": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "port": {
              "type": "string"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "ip": "1.1.1.1",
                "name": "Primary Server",
                "port": 4567,
                "account_id": 2020,
                "created_at": "2016-08-11T10:16:03.000Z",
                "updated_at": "2016-08-11T10:16:03.000Z",
                "linked_secondary_zones": [
                  "example.com"
                ]
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "ip": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "account_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "linked_secondary_zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      ]
  createSecondaryZone:
    description: |-
      Creates a secondary zone into the account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/secondary-dns/#createSecondaryZone
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "name": "example-alpha.com",
                "reverse": false,
                "secondary": false,
                "account_id": 1010,
                "created_at": "2015-04-23T07:40:03.000Z",
                "updated_at": "2015-04-23T07:40:03.000Z",
                "last_transfferd_at": null
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "reverse": {
                  "type": "boolean",
                  "description": "Returns true for a reverse zone, false for a forward zone."
                },
                "secondary": {
                  "type": "boolean",
                  "description": "Returns true for a secondary zone, false for a primary zone."
                },
                "account_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "last_transferred_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                }
              },
              "description": "Represents a DNS zone."
            }
          }
        }
      ]
  getPrimaryServer:
    description: |-
      Retrieves the details of an existing primary server.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/secondary-dns/#getPrimaryServer
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "ip": "1.1.1.1",
                "name": "Primary Server",
                "port": 4567,
                "account_id": 2020,
                "created_at": "2016-08-11T10:16:03.000Z",
                "updated_at": "2016-08-11T10:16:03.000Z",
                "linked_secondary_zones": [
                  "example.com"
                ]
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "ip": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "account_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "linked_secondary_zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      ]
  linkPrimaryServer:
    description: |-
      Link the primary server to a secondary zone.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/secondary-dns/#linkPrimaryServer
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "ip": "1.1.1.1",
                "name": "Primary Server",
                "port": 4567,
                "account_id": 2020,
                "created_at": "2016-08-11T10:16:03.000Z",
                "updated_at": "2016-08-11T10:16:03.000Z",
                "linked_secondary_zones": [
                  "example.com"
                ]
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "ip": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "account_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "linked_secondary_zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      ]
  listPrimaryServers:
    description: |-
      List the primary servers in the account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/secondary-dns/#listPrimaryServers
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 1,
                  "ip": "1.1.1.1",
                  "name": "Primary Server",
                  "port": 4567,
                  "account_id": 2020,
                  "created_at": "2016-08-11T10:16:03.000Z",
                  "updated_at": "2016-08-11T10:16:03.000Z",
                  "linked_secondary_zones": [
                    "example.com"
                  ]
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "ip": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "port": {
                    "type": "integer"
                  },
                  "account_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "linked_secondary_zones": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "pagination": {
              "type": "object",
              "example": {
                "per_page": 30,
                "total_pages": 1,
                "current_page": 1,
                "total_entries": 2
              },
              "properties": {
                "per_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_entries": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  removePrimaryServer:
    description: |-
      Permanently deletes a primary server.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/secondary-dns/#removePrimaryServer
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  unlinkPrimaryServer:
    description: |-
      Unlink the primary server from a secondary zone.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/secondary-dns/#unlinkPrimaryServer
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "ip": "1.1.1.1",
                "name": "Primary Server",
                "port": 4567,
                "account_id": 2020,
                "created_at": "2016-08-11T10:16:03.000Z",
                "updated_at": "2016-08-11T10:16:03.000Z",
                "linked_secondary_zones": [
                  "example.com"
                ]
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "ip": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                },
                "account_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "linked_secondary_zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      ]
  applyServiceToDomain:
    description: |-
      Applies a service to a domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/services/domains/#applyServiceToDomain
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "app": "my-app-name"
          }
        }
      ]
      outputs: [
        {}
      ]
  listDomainAppliedServices:
    description: |-
      List services applied to a domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/services/domains/#listDomainAppliedServices
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 2,
                  "sid": "service2",
                  "name": "Service 2",
                  "settings": [
                    {
                      "name": "username",
                      "label": "Service 2 Account Username",
                      "append": ".service2.com",
                      "example": "username",
                      "password": false,
                      "description": "Your Service2 username is used to connect services to your account."
                    }
                  ],
                  "created_at": "2014-02-14T19:15:19.000Z",
                  "updated_at": "2016-03-04T09:23:27.000Z",
                  "description": "Second service example.",
                  "requires_setup": true,
                  "default_subdomain": null,
                  "setup_description": null
                },
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "A unique identifier"
                  },
                  "sid": {
                    "type": "string",
                    "description": "A string identifier that can be used in URLs (always lowercase)"
                  },
                  "name": {
                    "type": "string",
                    "description": "A human-readable name"
                  },
                  "settings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": {
                        "name": "username",
                        "label": "Service 2 Account Username",
                        "append": ".service2.com",
                        "example": "username",
                        "password": false,
                        "description": "Your Service2 username is used to connect services to your account."
                      },
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The form name for the setting"
                        },
                        "label": {
                          "type": "string",
                          "description": "The human-readable label value"
                        },
                        "append": {
                          "type": "string",
                          "description": "Additional text to append to the input field"
                        },
                        "example": {
                          "type": "string",
                          "description": "An example value"
                        },
                        "password": {
                          "type": "boolean",
                          "default": false,
                          "description": "true if the value is a password (and thus should not be visible in the field)"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the setting"
                        }
                      }
                    }
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "description": {
                    "type": "string",
                    "description": "A human-readable description of the one-click service"
                  },
                  "requires_setup": {
                    "type": "boolean",
                    "description": "Flag indicating whether setup is required"
                  },
                  "default_subdomain": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The default subdomain used when creating DNS records"
                  },
                  "setup_description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Describes setup requirements"
                  }
                }
              }
            },
            "pagination": {
              "type": "object",
              "example": {
                "per_page": 30,
                "total_pages": 1,
                "current_page": 1,
                "total_entries": 2
              },
              "properties": {
                "per_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_entries": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  unapplyServiceFromDomain:
    description: |-
      Unapplies a service from a domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/services/domains/#unapplyServiceFromDomain
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getService:
    description: |-
      Retrieves the details of a one-click service.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/services/#getService
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 2,
                "sid": "service2",
                "name": "Service 2",
                "settings": [
                  {
                    "name": "username",
                    "label": "Service 2 Account Username",
                    "append": ".service2.com",
                    "example": "username",
                    "password": false,
                    "description": "Your Service2 username is used to connect services to your account."
                  }
                ],
                "created_at": "2014-02-14T19:15:19.000Z",
                "updated_at": "2016-03-04T09:23:27.000Z",
                "description": "Second service example.",
                "requires_setup": true,
                "default_subdomain": null,
                "setup_description": null
              },
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "A unique identifier"
                },
                "sid": {
                  "type": "string",
                  "description": "A string identifier that can be used in URLs (always lowercase)"
                },
                "name": {
                  "type": "string",
                  "description": "A human-readable name"
                },
                "settings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "example": {
                      "name": "username",
                      "label": "Service 2 Account Username",
                      "append": ".service2.com",
                      "example": "username",
                      "password": false,
                      "description": "Your Service2 username is used to connect services to your account."
                    },
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The form name for the setting"
                      },
                      "label": {
                        "type": "string",
                        "description": "The human-readable label value"
                      },
                      "append": {
                        "type": "string",
                        "description": "Additional text to append to the input field"
                      },
                      "example": {
                        "type": "string",
                        "description": "An example value"
                      },
                      "password": {
                        "type": "boolean",
                        "default": false,
                        "description": "true if the value is a password (and thus should not be visible in the field)"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the setting"
                      }
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "description": {
                  "type": "string",
                  "description": "A human-readable description of the one-click service"
                },
                "requires_setup": {
                  "type": "boolean",
                  "description": "Flag indicating whether setup is required"
                },
                "default_subdomain": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The default subdomain used when creating DNS records"
                },
                "setup_description": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Describes setup requirements"
                }
              }
            }
          }
        }
      ]
  listServices:
    description: |-
      List all available one-click services.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/services/#listServices
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 2,
                  "sid": "service2",
                  "name": "Service 2",
                  "settings": [
                    {
                      "name": "username",
                      "label": "Service 2 Account Username",
                      "append": ".service2.com",
                      "example": "username",
                      "password": false,
                      "description": "Your Service2 username is used to connect services to your account."
                    }
                  ],
                  "created_at": "2014-02-14T19:15:19.000Z",
                  "updated_at": "2016-03-04T09:23:27.000Z",
                  "description": "Second service example.",
                  "requires_setup": true,
                  "default_subdomain": null,
                  "setup_description": null
                },
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "A unique identifier"
                  },
                  "sid": {
                    "type": "string",
                    "description": "A string identifier that can be used in URLs (always lowercase)"
                  },
                  "name": {
                    "type": "string",
                    "description": "A human-readable name"
                  },
                  "settings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": {
                        "name": "username",
                        "label": "Service 2 Account Username",
                        "append": ".service2.com",
                        "example": "username",
                        "password": false,
                        "description": "Your Service2 username is used to connect services to your account."
                      },
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The form name for the setting"
                        },
                        "label": {
                          "type": "string",
                          "description": "The human-readable label value"
                        },
                        "append": {
                          "type": "string",
                          "description": "Additional text to append to the input field"
                        },
                        "example": {
                          "type": "string",
                          "description": "An example value"
                        },
                        "password": {
                          "type": "boolean",
                          "default": false,
                          "description": "true if the value is a password (and thus should not be visible in the field)"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the setting"
                        }
                      }
                    }
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "description": {
                    "type": "string",
                    "description": "A human-readable description of the one-click service"
                  },
                  "requires_setup": {
                    "type": "boolean",
                    "description": "Flag indicating whether setup is required"
                  },
                  "default_subdomain": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The default subdomain used when creating DNS records"
                  },
                  "setup_description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Describes setup requirements"
                  }
                }
              }
            },
            "pagination": {
              "type": "object",
              "example": {
                "per_page": 30,
                "total_pages": 1,
                "current_page": 1,
                "total_entries": 2
              },
              "properties": {
                "per_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_entries": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  createTemplate:
    description: |-
      Creates a template.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/templates/#createTemplate
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "sid": "alpha",
            "name": "Alpha",
            "description": "This is an Alpha template."
          },
          "required": [
            "sid",
            "name"
          ],
          "properties": {
            "sid": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "sid": "alpha",
                "name": "Alpha",
                "account_id": 1010,
                "created_at": "2016-03-22T11:08:58.000Z",
                "updated_at": "2016-03-22T11:08:58.000Z",
                "description": "An alpha template."
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "sid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  deleteTemplate:
    description: |-
      Permanently deletes a template.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/templates/#deleteTemplate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  applyTemplateToDomain:
    description: |-
      Applies a template to a domain.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/templates/domains/#applyTemplateToDomain
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTemplate:
    description: |-
      Retrieves the details of an existing template.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/templates/#getTemplate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "sid": "alpha",
                "name": "Alpha",
                "account_id": 1010,
                "created_at": "2016-03-22T11:08:58.000Z",
                "updated_at": "2016-03-22T11:08:58.000Z",
                "description": "An alpha template."
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "sid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  listTemplates:
    description: |-
      Lists the templates in the account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/templates/#listTemplates
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 1,
                  "sid": "alpha",
                  "name": "Alpha",
                  "account_id": 1010,
                  "created_at": "2016-03-22T11:08:58.000Z",
                  "updated_at": "2016-03-22T11:08:58.000Z",
                  "description": "An alpha template."
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "sid": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "account_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            },
            "pagination": {
              "type": "object",
              "example": {
                "per_page": 30,
                "total_pages": 1,
                "current_page": 1,
                "total_entries": 2
              },
              "properties": {
                "per_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_entries": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  createTemplateRecord:
    description: |-
      Creates a new template record.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/templates/records/#createTemplateRecord
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "ttl": 600,
            "name": "",
            "type": "MX",
            "content": "mx.example.com",
            "priority": 10
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 296,
                "ttl": 3600,
                "name": "",
                "type": "A",
                "content": "192.168.1.1",
                "priority": null,
                "created_at": "2016-04-26T08:23:54.000Z",
                "updated_at": "2016-04-26T08:23:54.000Z",
                "template_id": 268
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "ttl": {
                  "type": "integer",
                  "default": 3600,
                  "minimum": 0
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "A",
                    "AAAA",
                    "ALIAS",
                    "CAA",
                    "CNAME",
                    "DNSKEY",
                    "DS",
                    "HINFO",
                    "MX",
                    "NAPTR",
                    "NS",
                    "POOL",
                    "PTR",
                    "SOA",
                    "SPF",
                    "SRV",
                    "SSHFP",
                    "TXT",
                    "URL"
                  ],
                  "type": "string",
                  "description": "Supported DNS record types for templates."
                },
                "content": {
                  "type": "string"
                },
                "priority": {
                  "type": "integer",
                  "nullable": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "template_id": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  deleteTemplateRecord:
    description: |-
      Permanently deletes a template record.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/templates/records/#deleteTemplateRecord
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTemplateRecord:
    description: |-
      Retrieves the details of an existing template record.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/templates/records/#getTemplateRecord
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 296,
                "ttl": 3600,
                "name": "",
                "type": "A",
                "content": "192.168.1.1",
                "priority": null,
                "created_at": "2016-04-26T08:23:54.000Z",
                "updated_at": "2016-04-26T08:23:54.000Z",
                "template_id": 268
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "ttl": {
                  "type": "integer",
                  "default": 3600,
                  "minimum": 0
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "A",
                    "AAAA",
                    "ALIAS",
                    "CAA",
                    "CNAME",
                    "DNSKEY",
                    "DS",
                    "HINFO",
                    "MX",
                    "NAPTR",
                    "NS",
                    "POOL",
                    "PTR",
                    "SOA",
                    "SPF",
                    "SRV",
                    "SSHFP",
                    "TXT",
                    "URL"
                  ],
                  "type": "string",
                  "description": "Supported DNS record types for templates."
                },
                "content": {
                  "type": "string"
                },
                "priority": {
                  "type": "integer",
                  "nullable": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "template_id": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  listTemplateRecords:
    description: |-
      Lists the records for a template.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/templates/records/#listTemplateRecords
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 296,
                  "ttl": 3600,
                  "name": "",
                  "type": "A",
                  "content": "192.168.1.1",
                  "priority": null,
                  "created_at": "2016-04-26T08:23:54.000Z",
                  "updated_at": "2016-04-26T08:23:54.000Z",
                  "template_id": 268
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "ttl": {
                    "type": "integer",
                    "default": 3600,
                    "minimum": 0
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "A",
                      "AAAA",
                      "ALIAS",
                      "CAA",
                      "CNAME",
                      "DNSKEY",
                      "DS",
                      "HINFO",
                      "MX",
                      "NAPTR",
                      "NS",
                      "POOL",
                      "PTR",
                      "SOA",
                      "SPF",
                      "SRV",
                      "SSHFP",
                      "TXT",
                      "URL"
                    ],
                    "type": "string",
                    "description": "Supported DNS record types for templates."
                  },
                  "content": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "integer",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "template_id": {
                    "type": "integer"
                  }
                }
              }
            },
            "pagination": {
              "type": "object",
              "example": {
                "per_page": 30,
                "total_pages": 1,
                "current_page": 1,
                "total_entries": 2
              },
              "properties": {
                "per_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_entries": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  updateTemplate:
    description: |-
      Updates the template details.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/templates/#updateTemplate
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "sid": "alpha",
            "name": "Alpha",
            "description": "This is an Alpha template."
          },
          "required": [
            "sid",
            "name"
          ],
          "properties": {
            "sid": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "sid": "alpha",
                "name": "Alpha",
                "account_id": 1010,
                "created_at": "2016-03-22T11:08:58.000Z",
                "updated_at": "2016-03-22T11:08:58.000Z",
                "description": "An alpha template."
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "sid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "account_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
  getTld:
    description: |-
      Retrieves the details of a TLD.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/tlds/#getTld
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "idn": false,
                "tld": "ac",
                "tld_type": 2,
                "whois_privacy": false,
                "auto_renew_only": true,
                "renewal_enabled": true,
                "transfer_enabled": false,
                "minimum_registration": 1,
                "registration_enabled": true
              },
              "properties": {
                "idn": {
                  "type": "boolean",
                  "description": "true if the suffix supports Internationalized Domain Names (IDN)"
                },
                "tld": {
                  "type": "string",
                  "description": "The registerable suffix. In most cases the suffix matches a TLD, but there are some cases where the suffix is a subzone of the TLD (e.g. com.au)."
                },
                "tld_type": {
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "type": "integer",
                  "description": "TLD types are: * 1 - gTLD (global TLD) * 2 - ccTLD (country-code TLD) * 3 - newTLD (new global TLD)"
                },
                "whois_privacy": {
                  "type": "boolean",
                  "description": "true if the suffix allows WHOIS privacy as a separate component. Some registries may provide WHOIS privacy at registry level by limiting the visibility of certain attributes in the WHOIS response."
                },
                "auto_renew_only": {
                  "type": "boolean",
                  "description": "true if the suffix requires auto-renewal and can't be renewed manually"
                },
                "renewal_enabled": {
                  "type": "boolean",
                  "description": "true if DNSimple supports renewals for this TLD"
                },
                "transfer_enabled": {
                  "type": "boolean",
                  "description": "true if DNSimple supports inbound transfers for this TLD"
                },
                "registration_enabled": {
                  "type": "boolean",
                  "description": "true if DNSimple supports registrations for this TLD"
                }
              }
            }
          }
        }
      ]
  getTldExtendedAttributes:
    description: |-
      Lists a TLD extended attributes.
      
      Some TLDs require extended attributes when registering or transferring a domain. This API interface provides information on the extended attributes for any particular TLD. Extended attributes are extra TLD-specific attributes, required by the TLD registry to collect extra information about the registrant or legal agreements.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/tlds/#getTldExtendedAttributes
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "name": "uk_legal_type",
                  "options": [
                    {
                      "title": "UK Individual",
                      "value": "IND",
                      "description": "UK Individual (our default value)"
                    },
                    {
                      "title": "Non-UK Individual (representing self)",
                      "value": "FIND",
                      "description": "Non-UK Individual (representing self)"
                    }
                  ],
                  "required": true,
                  "description": "Legal type of registrant contact"
                },
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": {
                        "title": "UK Individual",
                        "value": "IND",
                        "description": "UK Individual (our default value)"
                      },
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      ]
  listTlds:
    description: |-
      ListsTLDs supported for registration or transfer.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/tlds/#listTlds
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "idn": false,
                  "tld": "ac",
                  "tld_type": 2,
                  "whois_privacy": false,
                  "auto_renew_only": true,
                  "renewal_enabled": true,
                  "transfer_enabled": false,
                  "minimum_registration": 1,
                  "registration_enabled": true
                },
                "properties": {
                  "idn": {
                    "type": "boolean",
                    "description": "true if the suffix supports Internationalized Domain Names (IDN)"
                  },
                  "tld": {
                    "type": "string",
                    "description": "The registerable suffix. In most cases the suffix matches a TLD, but there are some cases where the suffix is a subzone of the TLD (e.g. com.au)."
                  },
                  "tld_type": {
                    "enum": [
                      1,
                      2,
                      3
                    ],
                    "type": "integer",
                    "description": "TLD types are: * 1 - gTLD (global TLD) * 2 - ccTLD (country-code TLD) * 3 - newTLD (new global TLD)"
                  },
                  "whois_privacy": {
                    "type": "boolean",
                    "description": "true if the suffix allows WHOIS privacy as a separate component. Some registries may provide WHOIS privacy at registry level by limiting the visibility of certain attributes in the WHOIS response."
                  },
                  "auto_renew_only": {
                    "type": "boolean",
                    "description": "true if the suffix requires auto-renewal and can't be renewed manually"
                  },
                  "renewal_enabled": {
                    "type": "boolean",
                    "description": "true if DNSimple supports renewals for this TLD"
                  },
                  "transfer_enabled": {
                    "type": "boolean",
                    "description": "true if DNSimple supports inbound transfers for this TLD"
                  },
                  "registration_enabled": {
                    "type": "boolean",
                    "description": "true if DNSimple supports registrations for this TLD"
                  }
                }
              }
            }
          }
        }
      ]
  disableVanityNameServers:
    description: |-
      Disables Vanity Name Servers for the domain.
      
      This method removes the A and AAAA records required for the domain to provide vanity name servers, but it does not change the delegation for the domain. To change the delegation for domains to vanity name servers use the endpoints to Delegate to Vanity Name Servers or Dedelegate from Vanity Name Servers.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/vanity/#disableVanityNameServers
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  enableVanityNameServers:
    description: |-
      Enables Vanity Name Servers for the domain.
      
      This method sets up the appropriate A and AAAA records for the domain to provide vanity name servers, but it does not change the delegation for the domain. To change the delegation for domains to vanity name servers use the endpoints to Delegate to Vanity Name Servers or Dedelegate from Vanity Name Servers.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/vanity/#enableVanityNameServers
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "ipv4": {
                    "type": "string"
                  },
                  "ipv6": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      ]
  createWebhook:
    description: |-
      Registers a webhook endpoint.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/webhooks/#createWebhook
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "url"
          ],
          "properties": {
            "url": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "url": "https://webhook.test"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      ]
  deleteWebhook:
    description: |-
      De-registers a webhook endpoint.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/webhooks/#deleteWebhook
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getWebhook:
    description: |-
      Retrieves the details of a registered webhook.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/webhooks/#getWebhook
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "url": "https://webhook.test"
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      ]
  listWebhooks:
    description: |-
      List the webhooks in the account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/webhooks/#listWebhooks
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 1,
                  "url": "https://webhook.test"
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          }
        }
      ]
  checkZoneDistribution:
    description: |-
      Checks if a zone is fully distributed to all our name servers across the globe.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/zones/#checkZoneDistribution
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "distributed": true
              },
              "properties": {
                "distributed": {
                  "type": "boolean",
                  "description": "Returns true if the zone is fully distributed, false if not."
                }
              },
              "description": "Zone distribution check"
            }
          }
        }
      ]
  getZone:
    description: |-
      Retrieves the details of an existing zone.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/zones/#getZone
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "name": "example-alpha.com",
                "reverse": false,
                "secondary": false,
                "account_id": 1010,
                "created_at": "2015-04-23T07:40:03.000Z",
                "updated_at": "2015-04-23T07:40:03.000Z",
                "last_transfferd_at": null
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "reverse": {
                  "type": "boolean",
                  "description": "Returns true for a reverse zone, false for a forward zone."
                },
                "secondary": {
                  "type": "boolean",
                  "description": "Returns true for a secondary zone, false for a primary zone."
                },
                "account_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "last_transferred_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                }
              },
              "description": "Represents a DNS zone."
            }
          }
        }
      ]
  getZoneFile:
    description: |-
      Download the zonefile for an existing zone.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/zones/#getZoneFile
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "zone": "$ORIGIN example.com.\n$TTL 1h\nexample.com. 3600 IN SOA ns1.dnsimple.com. admin.dnsimple.com. 1453132552 86400 7200 604800 300\nexample.com. 3600 IN NS ns1.dnsimple.com.\nexample.com. 3600 IN NS ns2.dnsimple.com.\nexample.com. 3600 IN NS ns3.dnsimple.com.\nexample.com. 3600 IN NS ns4.dnsimple.com.\n"
              },
              "properties": {
                "zone": {
                  "type": "string"
                }
              },
              "description": "A DNS zone file."
            }
          }
        }
      ]
  listZones:
    description: |-
      Lists the zones in the account.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/zones/#listZones
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 1,
                  "name": "example-alpha.com",
                  "reverse": false,
                  "secondary": false,
                  "account_id": 1010,
                  "created_at": "2015-04-23T07:40:03.000Z",
                  "updated_at": "2015-04-23T07:40:03.000Z",
                  "last_transfferd_at": null
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "reverse": {
                    "type": "boolean",
                    "description": "Returns true for a reverse zone, false for a forward zone."
                  },
                  "secondary": {
                    "type": "boolean",
                    "description": "Returns true for a secondary zone, false for a primary zone."
                  },
                  "account_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "last_transferred_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  }
                },
                "description": "Represents a DNS zone."
              }
            },
            "pagination": {
              "type": "object",
              "example": {
                "per_page": 30,
                "total_pages": 1,
                "current_page": 1,
                "total_entries": 2
              },
              "properties": {
                "per_page": {
                  "type": "integer"
                },
                "total_pages": {
                  "type": "integer"
                },
                "current_page": {
                  "type": "integer"
                },
                "total_entries": {
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
  checkZoneRecordDistribution:
    description: |-
      Checks if a zone record is fully distributed to all our name servers across the globe.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/zones/records/#checkZoneRecordDistribution
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "distributed": true
              },
              "properties": {
                "distributed": {
                  "type": "boolean",
                  "description": "Returns true if the zone is fully distributed, false if not."
                }
              },
              "description": "Zone distribution check"
            }
          }
        }
      ]
  createZoneRecord:
    description: |-
      Creates a new zone record.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/zones/records/#createZoneRecord
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "ttl": 600,
            "name": "",
            "type": "MX",
            "content": "mxa.example.com",
            "regions": [
              "SV1",
              "IAD"
            ],
            "priority": 10
          },
          "properties": {
            "ttl": {
              "type": "integer",
              "default": 3600,
              "minimum": 0
            },
            "name": {
              "type": "string"
            },
            "type": {
              "enum": [
                "A",
                "AAAA",
                "ALIAS",
                "CAA",
                "CNAME",
                "DNSKEY",
                "DS",
                "HINFO",
                "MX",
                "NAPTR",
                "NS",
                "POOL",
                "PTR",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "TXT",
                "URL"
              ],
              "type": "string",
              "description": "Supported DNS record types at DNSimple. Note that some record types may only be available on specific plans."
            },
            "content": {
              "type": "string"
            },
            "regions": {
              "type": "array",
              "items": {
                "enum": [
                  "global",
                  "SV1",
                  "ORD",
                  "IAD",
                  "AMS",
                  "TKO"
                ],
                "type": "string"
              }
            },
            "priority": {
              "type": "integer"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "ttl": 3600,
                "name": "",
                "type": "SOA",
                "content": "ns1.dnsimple.com admin.dnsimple.com 1458642070 86400 7200 604800 300",
                "regions": [
                  "global"
                ],
                "zone_id": "example.com",
                "priority": null,
                "parent_id": null,
                "created_at": "2016-03-22T10:20:53.000Z",
                "updated_at": "2016-10-05T09:26:38.000Z",
                "system_record": true
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "ttl": {
                  "type": "integer",
                  "default": 3600,
                  "minimum": 0
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "A",
                    "AAAA",
                    "ALIAS",
                    "CAA",
                    "CNAME",
                    "DNSKEY",
                    "DS",
                    "HINFO",
                    "MX",
                    "NAPTR",
                    "NS",
                    "POOL",
                    "PTR",
                    "SOA",
                    "SPF",
                    "SRV",
                    "SSHFP",
                    "TXT",
                    "URL"
                  ],
                  "type": "string",
                  "description": "Supported DNS record types at DNSimple. Note that some record types may only be available on specific plans."
                },
                "content": {
                  "type": "string"
                },
                "regions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "global",
                      "SV1",
                      "ORD",
                      "IAD",
                      "AMS",
                      "TKO"
                    ],
                    "type": "string"
                  }
                },
                "zone_id": {
                  "type": "string"
                },
                "priority": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "default": 0
                },
                "parent_id": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "description": "If present represents the zone record this record relates to. The parent record is the master record, when the parent is updated or deleted the related record is also updated or deleted. An examle of child record is the TXT descriptive record created for an ALIAS record."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "system_record": {
                  "type": "boolean",
                  "description": "Returns true if a record is a system generated record and thus is not modifiable."
                }
              },
              "description": "A single DNS record in a zone."
            }
          }
        }
      ]
  deleteZoneRecord:
    description: |-
      Permanently deletes a zone record.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/zones/records/#deleteZoneRecord
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getZoneRecord:
    description: |-
      Retrieves the details of an existing zone record.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/zones/records/#getZoneRecord
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "ttl": 3600,
                "name": "",
                "type": "SOA",
                "content": "ns1.dnsimple.com admin.dnsimple.com 1458642070 86400 7200 604800 300",
                "regions": [
                  "global"
                ],
                "zone_id": "example.com",
                "priority": null,
                "parent_id": null,
                "created_at": "2016-03-22T10:20:53.000Z",
                "updated_at": "2016-10-05T09:26:38.000Z",
                "system_record": true
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "ttl": {
                  "type": "integer",
                  "default": 3600,
                  "minimum": 0
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "A",
                    "AAAA",
                    "ALIAS",
                    "CAA",
                    "CNAME",
                    "DNSKEY",
                    "DS",
                    "HINFO",
                    "MX",
                    "NAPTR",
                    "NS",
                    "POOL",
                    "PTR",
                    "SOA",
                    "SPF",
                    "SRV",
                    "SSHFP",
                    "TXT",
                    "URL"
                  ],
                  "type": "string",
                  "description": "Supported DNS record types at DNSimple. Note that some record types may only be available on specific plans."
                },
                "content": {
                  "type": "string"
                },
                "regions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "global",
                      "SV1",
                      "ORD",
                      "IAD",
                      "AMS",
                      "TKO"
                    ],
                    "type": "string"
                  }
                },
                "zone_id": {
                  "type": "string"
                },
                "priority": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "default": 0
                },
                "parent_id": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "description": "If present represents the zone record this record relates to. The parent record is the master record, when the parent is updated or deleted the related record is also updated or deleted. An examle of child record is the TXT descriptive record created for an ALIAS record."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "system_record": {
                  "type": "boolean",
                  "description": "Returns true if a record is a system generated record and thus is not modifiable."
                }
              },
              "description": "A single DNS record in a zone."
            }
          }
        }
      ]
  listZoneRecords:
    description: |-
      Lists the records for a zone.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/zones/records/#listZoneRecords
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "example": {
                  "id": 1,
                  "ttl": 3600,
                  "name": "",
                  "type": "SOA",
                  "content": "ns1.dnsimple.com admin.dnsimple.com 1458642070 86400 7200 604800 300",
                  "regions": [
                    "global"
                  ],
                  "zone_id": "example.com",
                  "priority": null,
                  "parent_id": null,
                  "created_at": "2016-03-22T10:20:53.000Z",
                  "updated_at": "2016-10-05T09:26:38.000Z",
                  "system_record": true
                },
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "ttl": {
                    "type": "integer",
                    "default": 3600,
                    "minimum": 0
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "A",
                      "AAAA",
                      "ALIAS",
                      "CAA",
                      "CNAME",
                      "DNSKEY",
                      "DS",
                      "HINFO",
                      "MX",
                      "NAPTR",
                      "NS",
                      "POOL",
                      "PTR",
                      "SOA",
                      "SPF",
                      "SRV",
                      "SSHFP",
                      "TXT",
                      "URL"
                    ],
                    "type": "string",
                    "description": "Supported DNS record types at DNSimple. Note that some record types may only be available on specific plans."
                  },
                  "content": {
                    "type": "string"
                  },
                  "regions": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "global",
                        "SV1",
                        "ORD",
                        "IAD",
                        "AMS",
                        "TKO"
                      ],
                      "type": "string"
                    }
                  },
                  "zone_id": {
                    "type": "string"
                  },
                  "priority": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "default": 0
                  },
                  "parent_id": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "If present represents the zone record this record relates to. The parent record is the master record, when the parent is updated or deleted the related record is also updated or deleted. An examle of child record is the TXT descriptive record created for an ALIAS record."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-01-01T01:00:00.000Z",
                    "description": "A date-time value formatted as ISO 8601."
                  },
                  "system_record": {
                    "type": "boolean",
                    "description": "Returns true if a record is a system generated record and thus is not modifiable."
                  }
                },
                "description": "A single DNS record in a zone."
              }
            }
          }
        }
      ]
  updateZoneRecord:
    description: |-
      Updates the zone record details.
    versions:
      from: 2.0.0
    link: https://developer.dnsimple.com/v2/zones/records/#updateZoneRecord
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "ttl": 3600,
            "content": "mxb.example.com",
            "regions": [
              "global"
            ],
            "priority": 20
          },
          "properties": {
            "ttl": {
              "type": "integer",
              "default": 3600,
              "minimum": 0
            },
            "name": {
              "type": "string"
            },
            "content": {
              "type": "string"
            },
            "regions": {
              "type": "array",
              "items": {
                "enum": [
                  "global",
                  "SV1",
                  "ORD",
                  "IAD",
                  "AMS",
                  "TKO"
                ],
                "type": "string"
              }
            },
            "priority": {
              "type": "integer"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "example": {
                "id": 1,
                "ttl": 3600,
                "name": "",
                "type": "SOA",
                "content": "ns1.dnsimple.com admin.dnsimple.com 1458642070 86400 7200 604800 300",
                "regions": [
                  "global"
                ],
                "zone_id": "example.com",
                "priority": null,
                "parent_id": null,
                "created_at": "2016-03-22T10:20:53.000Z",
                "updated_at": "2016-10-05T09:26:38.000Z",
                "system_record": true
              },
              "properties": {
                "id": {
                  "type": "integer"
                },
                "ttl": {
                  "type": "integer",
                  "default": 3600,
                  "minimum": 0
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "A",
                    "AAAA",
                    "ALIAS",
                    "CAA",
                    "CNAME",
                    "DNSKEY",
                    "DS",
                    "HINFO",
                    "MX",
                    "NAPTR",
                    "NS",
                    "POOL",
                    "PTR",
                    "SOA",
                    "SPF",
                    "SRV",
                    "SSHFP",
                    "TXT",
                    "URL"
                  ],
                  "type": "string",
                  "description": "Supported DNS record types at DNSimple. Note that some record types may only be available on specific plans."
                },
                "content": {
                  "type": "string"
                },
                "regions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "global",
                      "SV1",
                      "ORD",
                      "IAD",
                      "AMS",
                      "TKO"
                    ],
                    "type": "string"
                  }
                },
                "zone_id": {
                  "type": "string"
                },
                "priority": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "default": 0
                },
                "parent_id": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "description": "If present represents the zone record this record relates to. The parent record is the master record, when the parent is updated or deleted the related record is also updated or deleted. An examle of child record is the TXT descriptive record created for an ALIAS record."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2010-01-01T01:00:00.000Z",
                  "description": "A date-time value formatted as ISO 8601."
                },
                "system_record": {
                  "type": "boolean",
                  "description": "Returns true if a record is a system generated record and thus is not modifiable."
                }
              },
              "description": "A single DNS record in a zone."
            }
          }
        }
      ]