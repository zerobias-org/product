Product:
  name: Aiven for PostgreSQL
  versions: [0.0.0]
  package: aiven.postgres
  description: |-
    Aiven for PostgreSQL
  link: https://aiven.io/postgresql
  contentType: json
Operations:
  AccessTokenCreate:
    description: |-
      Create new access token
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "description"
          ],
          "properties": {
            "description": {
              "type": "string",
              "maxLength": 1000,
              "description": "Name / description of an access token"
            },
            "max_age_seconds": {
              "type": "number",
              "maximum": 315360000,
              "minimum": 600,
              "description": "Time the token remains valid since creation (or since last use if extend_when_used is true)"
            },
            "extend_when_used": {
              "type": "boolean",
              "description": "Extend token expiration time when token is used. Only applicable if max_age_seconds is specified."
            }
          },
          "description": "AccessTokenCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "create_time",
            "created_manually",
            "extend_when_used",
            "full_token",
            "max_age_seconds",
            "token_prefix"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "last_ip": {
              "type": "string",
              "description": "IP address the access token was last used from in case it has ever been used"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "full_token": {
              "type": "string",
              "description": "This full access token can be used to make API calls. This can also be used to update or revoke tokens. Note that when using this token with the update and revoke APIs it must be URL encoded because it may contain /, + and = characters (/ =&gt; %2F, + =&gt; %2B, = =&gt; %3D)."
            },
            "create_time": {
              "type": "string",
              "description": "Timestamp when the access token was created"
            },
            "description": {
              "type": "string",
              "maxLength": 1000,
              "description": "Name / description of an access token"
            },
            "expiry_time": {
              "type": "string",
              "description": "Timestamp when the access token will expire unless extended, if ever"
            },
            "token_prefix": {
              "type": "string",
              "description": "First characters of the actual token value. Full value is only exposed after creation. This value is used when updating or revoking tokens. Note that the value may contain /, + and = characters and must be URL encoded when used (/ =&gt; %2F, + =&gt; %2B, = =&gt; %3D)."
            },
            "last_used_time": {
              "type": "string",
              "description": "Timestamp when the access token was last used, if ever"
            },
            "last_user_agent": {
              "type": "string",
              "description": "User agent string of the client that last used the token in case it has ever been used"
            },
            "max_age_seconds": {
              "type": "number",
              "maximum": 315360000,
              "minimum": 600,
              "description": "Time the token remains valid since creation (or since last use if extend_when_used is true)"
            },
            "created_manually": {
              "type": "boolean",
              "description": "True for tokens explicitly created via the access_tokens API, false for tokens created via login."
            },
            "currently_active": {
              "type": "boolean",
              "description": "true if API request was made with this access token"
            },
            "extend_when_used": {
              "type": "boolean",
              "description": "Extend token expiration time when token is used. Only applicable if max_age_seconds is specified."
            },
            "last_user_agent_human_readable": {
              "type": "string",
              "description": "Human readable user agent string of the client that last used the token in case user agent is known"
            }
          },
          "description": "AccessTokenCreateResponse"
        }
      ]
  AccessTokenList:
    description: |-
      List all valid access tokens
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "tokens"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "tokens": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "create_time",
                  "created_manually",
                  "extend_when_used",
                  "max_age_seconds",
                  "token_prefix"
                ],
                "properties": {
                  "last_ip": {
                    "type": "string",
                    "description": "IP address the access token was last used from in case it has ever been used"
                  },
                  "create_time": {
                    "type": "string",
                    "description": "Timestamp when the access token was created"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "Name / description of an access token"
                  },
                  "expiry_time": {
                    "type": "string",
                    "description": "Timestamp when the access token will expire unless extended, if ever"
                  },
                  "token_prefix": {
                    "type": "string",
                    "description": "First characters of the actual token value. Full value is only exposed after creation. This value is used when updating or revoking tokens. Note that the value may contain /, + and = characters and must be URL encoded when used (/ =&gt; %2F, + =&gt; %2B, = =&gt; %3D)."
                  },
                  "last_used_time": {
                    "type": "string",
                    "description": "Timestamp when the access token was last used, if ever"
                  },
                  "last_user_agent": {
                    "type": "string",
                    "description": "User agent string of the client that last used the token in case it has ever been used"
                  },
                  "max_age_seconds": {
                    "type": "number",
                    "maximum": 315360000,
                    "minimum": 600,
                    "description": "Time the token remains valid since creation (or since last use if extend_when_used is true)"
                  },
                  "created_manually": {
                    "type": "boolean",
                    "description": "True for tokens explicitly created via the access_tokens API, false for tokens created via login."
                  },
                  "currently_active": {
                    "type": "boolean",
                    "description": "true if API request was made with this access token"
                  },
                  "extend_when_used": {
                    "type": "boolean",
                    "description": "Extend token expiration time when token is used. Only applicable if max_age_seconds is specified."
                  },
                  "last_user_agent_human_readable": {
                    "type": "string",
                    "description": "Human readable user agent string of the client that last used the token in case user agent is known"
                  }
                }
              },
              "description": "List of access tokens"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccessTokenListResponse"
        }
      ]
  AccessTokenRevoke:
    description: |-
      Revoke an access token
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccessTokenRevokeResponse"
        }
      ]
  AccessTokenUpdate:
    description: |-
      Update an existing access token
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "description"
          ],
          "properties": {
            "description": {
              "type": "string",
              "maxLength": 1000,
              "description": "Name / description of an access token"
            }
          },
          "description": "AccessTokenUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "create_time",
            "extend_when_used",
            "max_age_seconds",
            "token_prefix"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "last_ip": {
              "type": "string",
              "description": "IP address the access token was last used from in case it has ever been used"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "create_time": {
              "type": "string",
              "description": "Timestamp when the access token was created"
            },
            "description": {
              "type": "string",
              "maxLength": 1000,
              "description": "Name / description of an access token"
            },
            "expiry_time": {
              "type": "string",
              "description": "Timestamp when the access token will expire unless extended, if ever"
            },
            "token_prefix": {
              "type": "string",
              "description": "First characters of the actual token value. Full value is only exposed after creation. This value is used when updating or revoking tokens. Note that the value may contain /, + and = characters and must be URL encoded when used (/ =&gt; %2F, + =&gt; %2B, = =&gt; %3D)."
            },
            "last_used_time": {
              "type": "string",
              "description": "Timestamp when the access token was last used, if ever"
            },
            "last_user_agent": {
              "type": "string",
              "description": "User agent string of the client that last used the token in case it has ever been used"
            },
            "max_age_seconds": {
              "type": "number",
              "maximum": 315360000,
              "minimum": 600,
              "description": "Time the token remains valid since creation (or since last use if extend_when_used is true)"
            },
            "created_manually": {
              "type": "boolean",
              "description": "True for tokens explicitly created via the access_tokens API, false for tokens created via login."
            },
            "currently_active": {
              "type": "boolean",
              "description": "true if API request was made with this access token"
            },
            "extend_when_used": {
              "type": "boolean",
              "description": "Extend token expiration time when token is used. Only applicable if max_age_seconds is specified."
            },
            "last_user_agent_human_readable": {
              "type": "string",
              "description": "Human readable user agent string of the client that last used the token in case user agent is known"
            }
          },
          "description": "AccessTokenUpdateResponse"
        }
      ]
  AccountAuthenticationMethodCreate:
    description: |-
      Create a new authentication method
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "authentication_method_name",
            "authentication_method_type"
          ],
          "properties": {
            "saml_idp_url": {
              "type": "string",
              "maxLength": 2048,
              "description": "Provider single-sign on URL"
            },
            "saml_variant": {
              "enum": [
                "adfs"
              ],
              "type": "string",
              "description": "SAML server variant"
            },
            "saml_entity_id": {
              "type": "string",
              "maxLength": 2048,
              "description": "Entity ID"
            },
            "saml_certificate": {
              "type": "string",
              "maxLength": 16384,
              "description": "Identity provider's certificate"
            },
            "auto_join_team_id": {
              "type": "string",
              "maxLength": 32,
              "description": "Team ID. All users signing up with this authentication method will be added to this team."
            },
            "saml_field_mapping": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Field name for user email"
                },
                "identity": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Field name for user's identity. This field must always exist in responses, and must be immutable and unique. Contents of this field are used to identify the user. Using user ID (such as unix user id) is highly recommended, as email address may change, requiring relinking user to Aiven user."
                },
                "last_name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Field name for user's last name"
                },
                "real_name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Field name for user's full name. If specified, first_name and last_name mappings are ignored"
                },
                "first_name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Field name for user's first name"
                }
              },
              "description": "Map IdP fields"
            },
            "saml_digest_algorithm": {
              "enum": [
                "sha1",
                "sha256",
                "sha384",
                "sha512"
              ],
              "type": "string",
              "description": "Digest algorithm. This is an advanced option that typically does not need to be set."
            },
            "saml_signature_algorithm": {
              "enum": [
                "rsa-sha1",
                "dsa-sha1",
                "rsa-sha256",
                "rsa-sha384",
                "rsa-sha512"
              ],
              "type": "string",
              "description": "Signature algorithm. This is an advanced option that typically does not need to be set."
            },
            "authentication_method_name": {
              "type": "string",
              "maxLength": 128,
              "description": "Authentication method name"
            },
            "authentication_method_type": {
              "enum": [
                "internal",
                "saml"
              ],
              "type": "string",
              "description": "Authentication method type"
            }
          },
          "description": "AccountAuthenticationMethodCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "authentication_method"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "authentication_method": {
              "type": "object",
              "required": [
                "account_id",
                "authentication_method_enabled",
                "authentication_method_id",
                "authentication_method_type",
                "auto_join_team_id",
                "create_time",
                "delete_time",
                "state",
                "update_time"
              ],
              "properties": {
                "state": {
                  "type": "string",
                  "description": "State"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "delete_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "saml_acs_url": {
                  "type": "string",
                  "description": "ACS (Single Sign On / Recipient) URL"
                },
                "saml_idp_url": {
                  "type": "string",
                  "maxLength": 2048,
                  "description": "Provider single-sign on URL"
                },
                "saml_variant": {
                  "enum": [
                    "adfs"
                  ],
                  "type": "string",
                  "description": "SAML server variant"
                },
                "saml_entity_id": {
                  "type": "string",
                  "maxLength": 2048,
                  "description": "Entity ID"
                },
                "saml_certificate": {
                  "type": "string",
                  "maxLength": 16384,
                  "description": "Identity provider's certificate"
                },
                "auto_join_team_id": {
                  "type": "string",
                  "description": "Automatically add users to a team, when user signs up using this authentication method"
                },
                "saml_metadata_url": {
                  "type": "string",
                  "description": "Metadata URL"
                },
                "saml_field_mapping": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user email"
                    },
                    "identity": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user's identity. This field must always exist in responses, and must be immutable and unique. Contents of this field are used to identify the user. Using user ID (such as unix user id) is highly recommended, as email address may change, requiring relinking user to Aiven user."
                    },
                    "last_name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user's last name"
                    },
                    "real_name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user's full name. If specified, first_name and last_name mappings are ignored"
                    },
                    "first_name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user's first name"
                    }
                  },
                  "description": "Map IdP fields"
                },
                "saml_digest_algorithm": {
                  "enum": [
                    "sha1",
                    "sha256",
                    "sha384",
                    "sha512"
                  ],
                  "type": "string",
                  "description": "Digest algorithm. This is an advanced option that typically does not need to be set."
                },
                "saml_certificate_issuer": {
                  "type": "string",
                  "description": "Organization details"
                },
                "authentication_method_id": {
                  "type": "string",
                  "description": "Authentication method ID"
                },
                "saml_certificate_subject": {
                  "type": "string",
                  "description": "Organization details"
                },
                "saml_signature_algorithm": {
                  "enum": [
                    "rsa-sha1",
                    "dsa-sha1",
                    "rsa-sha256",
                    "rsa-sha384",
                    "rsa-sha512"
                  ],
                  "type": "string",
                  "description": "Signature algorithm. This is an advanced option that typically does not need to be set."
                },
                "authentication_method_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Authentication method name"
                },
                "authentication_method_type": {
                  "enum": [
                    "internal",
                    "saml"
                  ],
                  "type": "string",
                  "description": "Authentication method type"
                },
                "authentication_method_enabled": {
                  "type": "boolean",
                  "description": "If true, authentication method can be used to access account/projects in account. If false, authentication method can still be used to sign in"
                },
                "saml_certificate_not_valid_after": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "saml_certificate_not_valid_before": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                }
              },
              "description": "Authentication method details"
            }
          },
          "description": "AccountAuthenticationMethodCreateResponse"
        }
      ]
  AccountAuthenticationMethodDelete:
    description: |-
      Delete authentication method
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountAuthenticationMethodDeleteResponse"
        }
      ]
  AccountAuthenticationMethodGet:
    description: |-
      Get details of a single authentication method
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "authentication_method"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "authentication_method": {
              "type": "object",
              "required": [
                "account_id",
                "authentication_method_enabled",
                "authentication_method_id",
                "authentication_method_type",
                "auto_join_team_id",
                "create_time",
                "delete_time",
                "state",
                "update_time"
              ],
              "properties": {
                "state": {
                  "type": "string",
                  "description": "State"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "delete_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "saml_acs_url": {
                  "type": "string",
                  "description": "ACS (Single Sign On / Recipient) URL"
                },
                "saml_idp_url": {
                  "type": "string",
                  "maxLength": 2048,
                  "description": "Provider single-sign on URL"
                },
                "saml_variant": {
                  "enum": [
                    "adfs"
                  ],
                  "type": "string",
                  "description": "SAML server variant"
                },
                "saml_entity_id": {
                  "type": "string",
                  "maxLength": 2048,
                  "description": "Entity ID"
                },
                "saml_certificate": {
                  "type": "string",
                  "maxLength": 16384,
                  "description": "Identity provider's certificate"
                },
                "auto_join_team_id": {
                  "type": "string",
                  "description": "Automatically add users to a team, when user signs up using this authentication method"
                },
                "saml_metadata_url": {
                  "type": "string",
                  "description": "Metadata URL"
                },
                "saml_field_mapping": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user email"
                    },
                    "identity": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user's identity. This field must always exist in responses, and must be immutable and unique. Contents of this field are used to identify the user. Using user ID (such as unix user id) is highly recommended, as email address may change, requiring relinking user to Aiven user."
                    },
                    "last_name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user's last name"
                    },
                    "real_name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user's full name. If specified, first_name and last_name mappings are ignored"
                    },
                    "first_name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user's first name"
                    }
                  },
                  "description": "Map IdP fields"
                },
                "saml_digest_algorithm": {
                  "enum": [
                    "sha1",
                    "sha256",
                    "sha384",
                    "sha512"
                  ],
                  "type": "string",
                  "description": "Digest algorithm. This is an advanced option that typically does not need to be set."
                },
                "saml_certificate_issuer": {
                  "type": "string",
                  "description": "Organization details"
                },
                "authentication_method_id": {
                  "type": "string",
                  "description": "Authentication method ID"
                },
                "saml_certificate_subject": {
                  "type": "string",
                  "description": "Organization details"
                },
                "saml_signature_algorithm": {
                  "enum": [
                    "rsa-sha1",
                    "dsa-sha1",
                    "rsa-sha256",
                    "rsa-sha384",
                    "rsa-sha512"
                  ],
                  "type": "string",
                  "description": "Signature algorithm. This is an advanced option that typically does not need to be set."
                },
                "authentication_method_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Authentication method name"
                },
                "authentication_method_type": {
                  "enum": [
                    "internal",
                    "saml"
                  ],
                  "type": "string",
                  "description": "Authentication method type"
                },
                "authentication_method_enabled": {
                  "type": "boolean",
                  "description": "If true, authentication method can be used to access account/projects in account. If false, authentication method can still be used to sign in"
                },
                "saml_certificate_not_valid_after": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "saml_certificate_not_valid_before": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                }
              },
              "description": "Authentication method details"
            }
          },
          "description": "AccountAuthenticationMethodGetResponse"
        }
      ]
  AccountAuthenticationMethodsList:
    description: |-
      List authentication methods
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "authentication_methods"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "authentication_methods": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "account_id",
                  "authentication_method_enabled",
                  "authentication_method_id",
                  "authentication_method_type",
                  "auto_join_team_id",
                  "create_time",
                  "delete_time",
                  "state",
                  "update_time"
                ],
                "properties": {
                  "state": {
                    "type": "string",
                    "description": "State"
                  },
                  "account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "delete_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "update_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "saml_acs_url": {
                    "type": "string",
                    "description": "ACS (Single Sign On / Recipient) URL"
                  },
                  "saml_idp_url": {
                    "type": "string",
                    "maxLength": 2048,
                    "description": "Provider single-sign on URL"
                  },
                  "saml_variant": {
                    "enum": [
                      "adfs"
                    ],
                    "type": "string",
                    "description": "SAML server variant"
                  },
                  "saml_entity_id": {
                    "type": "string",
                    "maxLength": 2048,
                    "description": "Entity ID"
                  },
                  "saml_certificate": {
                    "type": "string",
                    "maxLength": 16384,
                    "description": "Identity provider's certificate"
                  },
                  "auto_join_team_id": {
                    "type": "string",
                    "description": "Automatically add users to a team, when user signs up using this authentication method"
                  },
                  "saml_metadata_url": {
                    "type": "string",
                    "description": "Metadata URL"
                  },
                  "saml_field_mapping": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "Field name for user email"
                      },
                      "identity": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "Field name for user's identity. This field must always exist in responses, and must be immutable and unique. Contents of this field are used to identify the user. Using user ID (such as unix user id) is highly recommended, as email address may change, requiring relinking user to Aiven user."
                      },
                      "last_name": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "Field name for user's last name"
                      },
                      "real_name": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "Field name for user's full name. If specified, first_name and last_name mappings are ignored"
                      },
                      "first_name": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "Field name for user's first name"
                      }
                    },
                    "description": "Map IdP fields"
                  },
                  "saml_digest_algorithm": {
                    "enum": [
                      "sha1",
                      "sha256",
                      "sha384",
                      "sha512"
                    ],
                    "type": "string",
                    "description": "Digest algorithm. This is an advanced option that typically does not need to be set."
                  },
                  "saml_certificate_issuer": {
                    "type": "string",
                    "description": "Organization details"
                  },
                  "authentication_method_id": {
                    "type": "string",
                    "description": "Authentication method ID"
                  },
                  "saml_certificate_subject": {
                    "type": "string",
                    "description": "Organization details"
                  },
                  "saml_signature_algorithm": {
                    "enum": [
                      "rsa-sha1",
                      "dsa-sha1",
                      "rsa-sha256",
                      "rsa-sha384",
                      "rsa-sha512"
                    ],
                    "type": "string",
                    "description": "Signature algorithm. This is an advanced option that typically does not need to be set."
                  },
                  "authentication_method_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Authentication method name"
                  },
                  "authentication_method_type": {
                    "enum": [
                      "internal",
                      "saml"
                    ],
                    "type": "string",
                    "description": "Authentication method type"
                  },
                  "authentication_method_enabled": {
                    "type": "boolean",
                    "description": "If true, authentication method can be used to access account/projects in account. If false, authentication method can still be used to sign in"
                  },
                  "saml_certificate_not_valid_after": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "saml_certificate_not_valid_before": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  }
                }
              },
              "description": "List of authentication methods"
            }
          },
          "description": "AccountAuthenticationMethodsListResponse"
        }
      ]
  AccountAuthenticationMethodUpdate:
    description: |-
      Update authentication method
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "saml_idp_url": {
              "type": "string",
              "maxLength": 2048,
              "description": "Provider single-sign on URL"
            },
            "saml_variant": {
              "enum": [
                "adfs"
              ],
              "type": "string",
              "description": "SAML server variant"
            },
            "saml_entity_id": {
              "type": "string",
              "maxLength": 2048,
              "description": "Entity ID"
            },
            "saml_certificate": {
              "type": "string",
              "maxLength": 16384,
              "description": "Identity provider's certificate"
            },
            "auto_join_team_id": {
              "type": "string",
              "maxLength": 32,
              "description": "Team ID. All users signing up with this authentication method will be added to this team."
            },
            "saml_field_mapping": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Field name for user email"
                },
                "identity": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Field name for user's identity. This field must always exist in responses, and must be immutable and unique. Contents of this field are used to identify the user. Using user ID (such as unix user id) is highly recommended, as email address may change, requiring relinking user to Aiven user."
                },
                "last_name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Field name for user's last name"
                },
                "real_name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Field name for user's full name. If specified, first_name and last_name mappings are ignored"
                },
                "first_name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Field name for user's first name"
                }
              },
              "description": "Map IdP fields"
            },
            "saml_digest_algorithm": {
              "enum": [
                "sha1",
                "sha256",
                "sha384",
                "sha512"
              ],
              "type": "string",
              "description": "Digest algorithm. This is an advanced option that typically does not need to be set."
            },
            "saml_signature_algorithm": {
              "enum": [
                "rsa-sha1",
                "dsa-sha1",
                "rsa-sha256",
                "rsa-sha384",
                "rsa-sha512"
              ],
              "type": "string",
              "description": "Signature algorithm. This is an advanced option that typically does not need to be set."
            },
            "authentication_method_name": {
              "type": "string",
              "maxLength": 128,
              "description": "Authentication method name"
            },
            "authentication_method_enabled": {
              "type": "boolean",
              "description": "If true, authentication method can be used to access account/projects in account. If false, authentication method can still be used to sign in"
            }
          },
          "description": "AccountAuthenticationMethodUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "authentication_method"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "authentication_method": {
              "type": "object",
              "required": [
                "account_id",
                "authentication_method_enabled",
                "authentication_method_id",
                "authentication_method_type",
                "auto_join_team_id",
                "create_time",
                "delete_time",
                "state",
                "update_time"
              ],
              "properties": {
                "state": {
                  "type": "string",
                  "description": "State"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "delete_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "saml_acs_url": {
                  "type": "string",
                  "description": "ACS (Single Sign On / Recipient) URL"
                },
                "saml_idp_url": {
                  "type": "string",
                  "maxLength": 2048,
                  "description": "Provider single-sign on URL"
                },
                "saml_variant": {
                  "enum": [
                    "adfs"
                  ],
                  "type": "string",
                  "description": "SAML server variant"
                },
                "saml_entity_id": {
                  "type": "string",
                  "maxLength": 2048,
                  "description": "Entity ID"
                },
                "saml_certificate": {
                  "type": "string",
                  "maxLength": 16384,
                  "description": "Identity provider's certificate"
                },
                "auto_join_team_id": {
                  "type": "string",
                  "description": "Automatically add users to a team, when user signs up using this authentication method"
                },
                "saml_metadata_url": {
                  "type": "string",
                  "description": "Metadata URL"
                },
                "saml_field_mapping": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user email"
                    },
                    "identity": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user's identity. This field must always exist in responses, and must be immutable and unique. Contents of this field are used to identify the user. Using user ID (such as unix user id) is highly recommended, as email address may change, requiring relinking user to Aiven user."
                    },
                    "last_name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user's last name"
                    },
                    "real_name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user's full name. If specified, first_name and last_name mappings are ignored"
                    },
                    "first_name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Field name for user's first name"
                    }
                  },
                  "description": "Map IdP fields"
                },
                "saml_digest_algorithm": {
                  "enum": [
                    "sha1",
                    "sha256",
                    "sha384",
                    "sha512"
                  ],
                  "type": "string",
                  "description": "Digest algorithm. This is an advanced option that typically does not need to be set."
                },
                "saml_certificate_issuer": {
                  "type": "string",
                  "description": "Organization details"
                },
                "authentication_method_id": {
                  "type": "string",
                  "description": "Authentication method ID"
                },
                "saml_certificate_subject": {
                  "type": "string",
                  "description": "Organization details"
                },
                "saml_signature_algorithm": {
                  "enum": [
                    "rsa-sha1",
                    "dsa-sha1",
                    "rsa-sha256",
                    "rsa-sha384",
                    "rsa-sha512"
                  ],
                  "type": "string",
                  "description": "Signature algorithm. This is an advanced option that typically does not need to be set."
                },
                "authentication_method_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Authentication method name"
                },
                "authentication_method_type": {
                  "enum": [
                    "internal",
                    "saml"
                  ],
                  "type": "string",
                  "description": "Authentication method type"
                },
                "authentication_method_enabled": {
                  "type": "boolean",
                  "description": "If true, authentication method can be used to access account/projects in account. If false, authentication method can still be used to sign in"
                },
                "saml_certificate_not_valid_after": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "saml_certificate_not_valid_before": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                }
              },
              "description": "Authentication method details"
            }
          },
          "description": "AccountAuthenticationMethodUpdateResponse"
        }
      ]
  AccountCreate:
    description: |-
      Create a new account
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "account_name": {
              "type": "string",
              "maxLength": 128,
              "description": "Account name"
            },
            "primary_billing_group_id": {
              "type": "string",
              "maxLength": 36,
              "minLength": 36,
              "description": "Billing group ID"
            }
          },
          "description": "AccountCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "account"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "account": {
              "type": "object",
              "required": [
                "account_id",
                "account_name",
                "account_owner_team_id",
                "create_time",
                "is_account_owner",
                "primary_billing_group_id",
                "update_time"
              ],
              "properties": {
                "tenant_id": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Tenant identifier"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "account_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Account name"
                },
                "is_account_owner": {
                  "type": "boolean",
                  "description": "If true, user is part of the owners team for this account"
                },
                "account_owner_team_id": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Team ID"
                },
                "primary_billing_group_id": {
                  "type": "string",
                  "maxLength": 36,
                  "minLength": 36,
                  "description": "Billing group ID"
                }
              },
              "description": "Account details"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountCreateResponse"
        }
      ]
  AccountDelete:
    description: |-
      Delete empty account
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountDeleteResponse"
        }
      ]
  AccountEventList:
    description: |-
      List account events
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "events"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "events": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "account_id",
                  "action_description",
                  "action_type",
                  "actor",
                  "actor_user_id",
                  "create_time",
                  "log_entry_id",
                  "team_id"
                ],
                "properties": {
                  "actor": {
                    "type": "string",
                    "description": "Actor details"
                  },
                  "team_id": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Team ID"
                  },
                  "account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  },
                  "action_type": {
                    "type": "string",
                    "description": "Event type"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "log_entry_id": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Entry ID"
                  },
                  "actor_user_id": {
                    "type": "string",
                    "description": "User ID"
                  },
                  "action_description": {
                    "type": "string",
                    "description": "Event description"
                  }
                }
              },
              "description": "List of events"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountEventListResponse"
        }
      ]
  AccountGet:
    description: |-
      Get account details
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "account"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "account": {
              "type": "object",
              "required": [
                "account_id",
                "account_name",
                "account_owner_team_id",
                "create_time",
                "is_account_owner",
                "primary_billing_group_id",
                "update_time"
              ],
              "properties": {
                "tenant_id": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Tenant identifier"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "account_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Account name"
                },
                "is_account_owner": {
                  "type": "boolean",
                  "description": "If true, user is part of the owners team for this account"
                },
                "account_owner_team_id": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Team ID"
                },
                "primary_billing_group_id": {
                  "type": "string",
                  "maxLength": 36,
                  "minLength": 36,
                  "description": "Billing group ID"
                }
              },
              "description": "Account details"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountGetResponse"
        }
      ]
  AccountList:
    description: |-
      List accounts you have access to
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "accounts"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "accounts": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "account_id",
                  "account_name",
                  "account_owner_team_id",
                  "create_time",
                  "is_account_owner",
                  "primary_billing_group_id",
                  "update_time"
                ],
                "properties": {
                  "tenant_id": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "Tenant identifier"
                  },
                  "account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "update_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "account_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Account name"
                  },
                  "is_account_owner": {
                    "type": "boolean",
                    "description": "If true, user is part of the owners team for this account"
                  },
                  "account_owner_team_id": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Team ID"
                  },
                  "primary_billing_group_id": {
                    "type": "string",
                    "maxLength": 36,
                    "minLength": 36,
                    "description": "Billing group ID"
                  }
                }
              },
              "description": "List of accounts"
            }
          },
          "description": "AccountListResponse"
        }
      ]
  AccountProjectsList:
    description: |-
      List projects belonging to account
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "projects"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "projects": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "account_id",
                  "billing_address",
                  "billing_emails",
                  "billing_group_id",
                  "billing_group_name",
                  "country",
                  "country_code",
                  "default_cloud",
                  "estimated_balance",
                  "payment_method",
                  "project_name",
                  "vat_id"
                ],
                "properties": {
                  "city": {
                    "type": "string",
                    "maxLength": 512,
                    "description": "Address city"
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Address state"
                  },
                  "vat_id": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "EU VAT Identification Number"
                  },
                  "company": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Name of a company"
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Billing country"
                  },
                  "features": {
                    "type": "object",
                    "properties": {},
                    "description": "Feature flags"
                  },
                  "zip_code": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Address zip code"
                  },
                  "card_info": {
                    "type": "object",
                    "required": [
                      "brand",
                      "card_id",
                      "country",
                      "country_code",
                      "exp_month",
                      "exp_year",
                      "last4",
                      "name",
                      "user_email"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "Name on the credit card"
                      },
                      "brand": {
                        "type": "string",
                        "description": "Brand"
                      },
                      "last4": {
                        "type": "string",
                        "description": "Credit card last four digits"
                      },
                      "card_id": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Credit card ID"
                      },
                      "country": {
                        "type": "string",
                        "maxLength": 128,
                        "description": "Country"
                      },
                      "exp_year": {
                        "type": "integer",
                        "maximum": 2100,
                        "minimum": 2015,
                        "description": "Expiration year"
                      },
                      "exp_month": {
                        "type": "integer",
                        "maximum": 12,
                        "minimum": 1,
                        "description": "Expiration month"
                      },
                      "user_email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      },
                      "country_code": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "Two letter ISO country code"
                      }
                    },
                    "description": "Credit card assigned to the project"
                  },
                  "tenant_id": {
                    "type": "string",
                    "description": "Tenant ID"
                  },
                  "account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  },
                  "tech_emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "email"
                      ],
                      "properties": {
                        "email": {
                          "type": "string",
                          "maxLength": 319,
                          "description": "User email address"
                        }
                      }
                    },
                    "maxItems": 10,
                    "description": "List of project billing email addresses"
                  },
                  "account_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Account name"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "Two letter ISO country code"
                  },
                  "project_name": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Project name"
                  },
                  "address_lines": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 16,
                    "description": "Address lines"
                  },
                  "default_cloud": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "Default cloud to use when launching services"
                  },
                  "billing_emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "email"
                      ],
                      "properties": {
                        "email": {
                          "type": "string",
                          "maxLength": 319,
                          "description": "User email address"
                        }
                      }
                    },
                    "maxItems": 10,
                    "description": "List of project billing email addresses"
                  },
                  "payment_method": {
                    "type": "string",
                    "description": "Payment method"
                  },
                  "billing_address": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "Project billing address"
                  },
                  "billing_currency": {
                    "enum": [
                      "AUD",
                      "CAD",
                      "CHF",
                      "DKK",
                      "EUR",
                      "GBP",
                      "NOK",
                      "SEK",
                      "USD"
                    ],
                    "type": "string",
                    "description": "Billing currency"
                  },
                  "billing_group_id": {
                    "type": "string",
                    "maxLength": 36,
                    "minLength": 36,
                    "description": "Billing group ID"
                  },
                  "available_credits": {
                    "type": "string",
                    "description": "Available credits"
                  },
                  "estimated_balance": {
                    "type": "string",
                    "description": "Estimated balance"
                  },
                  "billing_extra_text": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number"
                  },
                  "billing_group_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Billing group name"
                  },
                  "trial_expiration_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Trial expiration time (ISO 8601)"
                  }
                }
              },
              "description": "List of projects"
            },
            "total_project_count": {
              "type": "integer",
              "description": "Total count of projects associated to account."
            }
          },
          "description": "AccountProjectsListResponse"
        }
      ]
  AccountProjectsTeamsList:
    description: |-
      List account teams associated to a project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "teams"
          ],
          "properties": {
            "teams": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "team_id",
                  "team_name"
                ],
                "properties": {
                  "team_id": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Team ID"
                  },
                  "team_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Team name"
                  },
                  "team_type": {
                    "enum": [
                      "admin",
                      "operator",
                      "developer",
                      "read_only"
                    ],
                    "type": "string",
                    "description": "Team type (permission level)"
                  },
                  "account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "update_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  }
                }
              },
              "description": "List of teams"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountProjectsTeamsListResponse"
        }
      ]
  AccountTeamCreate:
    description: |-
      Create a new team
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "team_name"
          ],
          "properties": {
            "team_name": {
              "type": "string",
              "maxLength": 128,
              "description": "Team name"
            }
          },
          "description": "AccountTeamCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "team"
          ],
          "properties": {
            "team": {
              "type": "object",
              "required": [
                "team_id",
                "team_name"
              ],
              "properties": {
                "team_id": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Team ID"
                },
                "team_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Team name"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                }
              },
              "description": "Account Team details"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountTeamCreateResponse"
        }
      ]
  AccountTeamDelete:
    description: |-
      Delete a team
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountTeamDeleteResponse"
        }
      ]
  AccountTeamGet:
    description: |-
      Get details for a single team
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "team"
          ],
          "properties": {
            "team": {
              "type": "object",
              "required": [
                "team_id",
                "team_name"
              ],
              "properties": {
                "team_id": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Team ID"
                },
                "team_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Team name"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                }
              },
              "description": "Account Team details"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountTeamGetResponse"
        }
      ]
  AccountTeamInvitesList:
    description: |-
      List pending invites
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "account_invites"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "account_invites": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "account_id",
                  "account_name",
                  "create_time",
                  "invited_by_user_email",
                  "team_id",
                  "team_name",
                  "user_email"
                ],
                "properties": {
                  "team_id": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Team ID"
                  },
                  "team_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Team name"
                  },
                  "account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  },
                  "user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "account_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Account name"
                  },
                  "invited_by_user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  }
                }
              },
              "description": "List of invites"
            }
          },
          "description": "AccountTeamInvitesListResponse"
        }
      ]
  AccountTeamList:
    description: |-
      List teams belonging to an account
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "teams"
          ],
          "properties": {
            "teams": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "team_id",
                  "team_name"
                ],
                "properties": {
                  "team_id": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Team ID"
                  },
                  "team_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Team name"
                  },
                  "account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "update_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  }
                }
              },
              "description": "List of teams"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountTeamListResponse"
        }
      ]
  AccountTeamMemberCancelInvite:
    description: |-
      Cancel pending user invite
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountTeamMemberCancelInviteResponse"
        }
      ]
  AccountTeamMembersDelete:
    description: |-
      Remove a member from the team
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountTeamMembersDeleteResponse"
        }
      ]
  AccountTeamMembersInvite:
    description: |-
      Invite a new member to join the team
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "email"
          ],
          "properties": {
            "email": {
              "type": "string",
              "maxLength": 319,
              "description": "User email address"
            }
          },
          "description": "AccountTeamMembersInviteRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountTeamMembersInviteResponse"
        }
      ]
  AccountTeamMembersList:
    description: |-
      List members of a single team
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "members"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "members": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "create_time",
                  "real_name",
                  "team_id",
                  "team_name",
                  "update_time",
                  "user_email",
                  "user_id"
                ],
                "properties": {
                  "team_id": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Team ID"
                  },
                  "user_id": {
                    "type": "string",
                    "description": "User ID"
                  },
                  "real_name": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "User real name"
                  },
                  "team_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Team name"
                  },
                  "user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "update_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  }
                }
              },
              "description": "List of account team members"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountTeamMembersListResponse"
        }
      ]
  AccountTeamMemberVerifyInvite:
    description: |-
      Confirm account team invite
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "invite_details"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "invite_details": {
              "type": "object",
              "required": [
                "user_email"
              ],
              "properties": {
                "user_email": {
                  "type": "string",
                  "maxLength": 319,
                  "description": "User email address"
                }
              },
              "description": "Details of verified invite"
            }
          },
          "description": "AccountTeamMemberVerifyInviteResponse"
        }
      ]
  AccountTeamProjectAssociate:
    description: |-
      Associate team to a project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "team_type"
          ],
          "properties": {
            "team_type": {
              "enum": [
                "admin",
                "operator",
                "developer",
                "read_only"
              ],
              "type": "string",
              "description": "Team type (permission level)"
            }
          },
          "description": "AccountTeamProjectAssociateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountTeamProjectAssociateResponse"
        }
      ]
  AccountTeamProjectAssociationUpdate:
    description: |-
      Update team-project association
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "team_type": {
              "enum": [
                "admin",
                "operator",
                "developer",
                "read_only"
              ],
              "type": "string",
              "description": "Team type (permission level)"
            }
          },
          "description": "AccountTeamProjectAssociationUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountTeamProjectAssociationUpdateResponse"
        }
      ]
  AccountTeamProjectDisassociate:
    description: |-
      Disassociate team from a project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountTeamProjectDisassociateResponse"
        }
      ]
  AccountTeamProjectList:
    description: |-
      List projects associated to a team
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "projects"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "projects": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "project_name",
                  "team_type"
                ],
                "properties": {
                  "team_type": {
                    "enum": [
                      "admin",
                      "operator",
                      "developer",
                      "read_only"
                    ],
                    "type": "string",
                    "description": "Team type (permission level)"
                  },
                  "project_name": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Project name"
                  }
                }
              },
              "description": "List of projects associated to a team"
            }
          },
          "description": "AccountTeamProjectListResponse"
        }
      ]
  AccountTeamUpdate:
    description: |-
      Update team details
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "team_name"
          ],
          "properties": {
            "team_name": {
              "type": "string",
              "maxLength": 128,
              "description": "Team name"
            }
          },
          "description": "AccountTeamUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "team"
          ],
          "properties": {
            "team": {
              "type": "object",
              "required": [
                "team_id",
                "team_name"
              ],
              "properties": {
                "team_id": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Team ID"
                },
                "team_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Team name"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                }
              },
              "description": "Account Team details"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountTeamUpdateResponse"
        }
      ]
  AccountUpdate:
    description: |-
      Update existing account
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "account_name": {
              "type": "string",
              "maxLength": 128,
              "description": "Account name"
            },
            "primary_billing_group_id": {
              "type": "string",
              "maxLength": 36,
              "minLength": 36,
              "description": "Billing group ID"
            }
          },
          "description": "AccountUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "account"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "account": {
              "type": "object",
              "required": [
                "account_id",
                "account_name",
                "account_owner_team_id",
                "create_time",
                "is_account_owner",
                "primary_billing_group_id",
                "update_time"
              ],
              "properties": {
                "tenant_id": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Tenant identifier"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "account_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Account name"
                },
                "is_account_owner": {
                  "type": "boolean",
                  "description": "If true, user is part of the owners team for this account"
                },
                "account_owner_team_id": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Team ID"
                },
                "primary_billing_group_id": {
                  "type": "string",
                  "maxLength": 36,
                  "minLength": 36,
                  "description": "Billing group ID"
                }
              },
              "description": "Account details"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountUpdateResponse"
        }
      ]
  AccountUserProjectsList:
    description: |-
      List projects associated with this account that user has access to
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "user_projects"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "user_projects": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "account_id",
                  "create_time",
                  "member_type",
                  "project_name",
                  "real_name",
                  "team_id",
                  "team_name",
                  "user_email"
                ],
                "properties": {
                  "team_id": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Team ID"
                  },
                  "real_name": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "User real name"
                  },
                  "team_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Team name"
                  },
                  "account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  },
                  "user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  },
                  "access_type": {
                    "type": "string",
                    "description": "Access type"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "member_type": {
                    "enum": [
                      "admin",
                      "developer",
                      "operator",
                      "read_only"
                    ],
                    "type": "string",
                    "description": "Project member type"
                  },
                  "project_name": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Project name"
                  }
                }
              },
              "description": "List of user's projects"
            }
          },
          "description": "AccountUserProjectsListResponse"
        }
      ]
  AccountUsersSearch:
    description: |-
      List/search users who are members of any team on this account
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "Maximum number of results to return"
            },
            "query": {
              "type": "string",
              "maxLength": 128,
              "description": "Filter keyword"
            },
            "order_by": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 20,
              "description": "Sorting criteria; applied in order; last item on the list is executed last."
            }
          },
          "description": "AccountUsersSearchRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "users"
          ],
          "properties": {
            "users": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "real_name",
                  "user_email",
                  "user_id"
                ],
                "properties": {
                  "user_id": {
                    "type": "string",
                    "description": "User ID"
                  },
                  "real_name": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "User real name"
                  },
                  "user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  }
                }
              },
              "description": "List of users"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountUsersSearchResponse"
        }
      ]
  AccountUserTeamsList:
    description: |-
      List all teams for user
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "teams"
          ],
          "properties": {
            "teams": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "account_id",
                  "account_name",
                  "team_id",
                  "team_name"
                ],
                "properties": {
                  "team_id": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Team ID"
                  },
                  "team_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Team name"
                  },
                  "account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  },
                  "account_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Account name"
                  }
                }
              },
              "description": "List of teams"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "AccountUserTeamsListResponse"
        }
      ]
  BillingGroupCreate:
    description: |-
      Create a billing group
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "billing_group_name"
          ],
          "properties": {
            "city": {
              "type": "string",
              "maxLength": 512,
              "description": "Address city"
            },
            "state": {
              "type": "string",
              "maxLength": 128,
              "description": "Address state"
            },
            "vat_id": {
              "type": "string",
              "maxLength": 64,
              "description": "EU VAT Identification Number"
            },
            "card_id": {
              "type": "string",
              "maxLength": 64,
              "description": "Credit card ID"
            },
            "company": {
              "type": "string",
              "maxLength": 128,
              "description": "Name of a company"
            },
            "zip_code": {
              "type": "string",
              "maxLength": 32,
              "description": "Address zip code"
            },
            "account_id": {
              "type": "string",
              "maxLength": 36,
              "description": "Account ID"
            },
            "country_code": {
              "type": "string",
              "maxLength": 2,
              "description": "Two letter country code for billing country"
            },
            "address_lines": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 16,
              "description": "Address lines"
            },
            "billing_emails": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  }
                }
              },
              "maxItems": 10,
              "description": "List of project billing email addresses"
            },
            "billing_currency": {
              "enum": [
                "AUD",
                "CAD",
                "CHF",
                "DKK",
                "EUR",
                "GBP",
                "NOK",
                "SEK",
                "USD"
              ],
              "type": "string",
              "description": "Billing currency"
            },
            "billing_extra_text": {
              "type": "string",
              "maxLength": 1000,
              "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number"
            },
            "billing_group_name": {
              "type": "string",
              "maxLength": 128,
              "description": "Billing group name"
            },
            "copy_from_billing_group": {
              "type": "string",
              "maxLength": 36,
              "minLength": 36,
              "description": "Billing group ID"
            }
          },
          "description": "BillingGroupCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "billing_group"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "billing_group": {
              "type": "object",
              "required": [
                "account_id",
                "account_name",
                "address_lines",
                "billing_currency",
                "billing_emails",
                "billing_extra_text",
                "billing_group_id",
                "billing_group_name",
                "card_info",
                "city",
                "company",
                "country",
                "country_code",
                "estimated_balance_local",
                "estimated_balance_usd",
                "payment_method",
                "state",
                "vat_id",
                "zip_code"
              ],
              "properties": {
                "city": {
                  "type": "string",
                  "maxLength": 512,
                  "description": "Address city"
                },
                "state": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Address state"
                },
                "vat_id": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "EU VAT Identification Number"
                },
                "company": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Name of a company"
                },
                "country": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Billing country"
                },
                "zip_code": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Address zip code"
                },
                "card_info": {
                  "type": "object",
                  "required": [
                    "brand",
                    "card_id",
                    "country",
                    "country_code",
                    "exp_month",
                    "exp_year",
                    "last4",
                    "name",
                    "user_email"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Name on the credit card"
                    },
                    "brand": {
                      "type": "string",
                      "description": "Brand"
                    },
                    "last4": {
                      "type": "string",
                      "description": "Credit card last four digits"
                    },
                    "card_id": {
                      "type": "string",
                      "maxLength": 64,
                      "description": "Credit card ID"
                    },
                    "country": {
                      "type": "string",
                      "maxLength": 128,
                      "description": "Country"
                    },
                    "exp_year": {
                      "type": "integer",
                      "maximum": 2100,
                      "minimum": 2015,
                      "description": "Expiration year"
                    },
                    "exp_month": {
                      "type": "integer",
                      "maximum": 12,
                      "minimum": 1,
                      "description": "Expiration month"
                    },
                    "user_email": {
                      "type": "string",
                      "maxLength": 319,
                      "description": "User email address"
                    },
                    "country_code": {
                      "type": "string",
                      "maxLength": 2,
                      "description": "Two letter ISO country code"
                    }
                  },
                  "description": "Credit card assigned to the project"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "account_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Account name"
                },
                "country_code": {
                  "type": "string",
                  "maxLength": 2,
                  "description": "Two letter ISO country code"
                },
                "address_lines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 16,
                  "description": "Address lines"
                },
                "billing_emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "email"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      }
                    }
                  },
                  "maxItems": 10,
                  "description": "List of project billing email addresses"
                },
                "payment_method": {
                  "enum": [
                    "aws_marketplace",
                    "manifold",
                    "partner",
                    "consolidated",
                    "card",
                    "finvoice",
                    "disabled",
                    "email",
                    "accrual",
                    "no_payment_expected",
                    "post"
                  ],
                  "type": "string",
                  "description": "Payment method"
                },
                "billing_address": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Project billing address"
                },
                "billing_currency": {
                  "enum": [
                    "AUD",
                    "CAD",
                    "CHF",
                    "DKK",
                    "EUR",
                    "GBP",
                    "NOK",
                    "SEK",
                    "USD"
                  ],
                  "type": "string",
                  "description": "Billing currency"
                },
                "billing_group_id": {
                  "type": "string",
                  "maxLength": 36,
                  "minLength": 36,
                  "description": "Billing group ID"
                },
                "billing_extra_text": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number"
                },
                "billing_group_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Billing group name"
                },
                "estimated_balance_usd": {
                  "type": "string",
                  "description": "Estimated balance in USD, before tax"
                },
                "estimated_balance_local": {
                  "type": "string",
                  "description": "Estimated balance in billing currency, before tax"
                }
              },
              "description": "Billing group information"
            }
          },
          "description": "BillingGroupCreateResponse"
        }
      ]
  BillingGroupCreditsClaim:
    description: |-
      Claim a credit code
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 1024,
              "description": "Credit code"
            }
          },
          "description": "BillingGroupCreditsClaimRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "credit"
          ],
          "properties": {
            "credit": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "maxLength": 1024,
                  "description": "Credit code"
                },
                "type": {
                  "enum": [
                    "discount",
                    "employee",
                    "evaluation",
                    "internal",
                    "other",
                    "outage",
                    "promotion",
                    "purchase",
                    "sponsorship",
                    "trial",
                    "trial_over"
                  ],
                  "type": "string",
                  "description": "Credit type"
                },
                "expire_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "remaining_value": {
                  "type": "string",
                  "description": "Remaining credit value"
                }
              },
              "description": "Assigned credit"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "BillingGroupCreditsClaimResponse"
        }
      ]
  BillingGroupCreditsList:
    description: |-
      List billing group credits
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "credits"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "credits": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Credit code"
                  },
                  "type": {
                    "enum": [
                      "discount",
                      "employee",
                      "evaluation",
                      "internal",
                      "other",
                      "outage",
                      "promotion",
                      "purchase",
                      "sponsorship",
                      "trial",
                      "trial_over"
                    ],
                    "type": "string",
                    "description": "Credit type"
                  },
                  "expire_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "remaining_value": {
                    "type": "string",
                    "description": "Remaining credit value"
                  }
                }
              },
              "description": "List of credits assigned to a billing group"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "BillingGroupCreditsListResponse"
        }
      ]
  BillingGroupDelete:
    description: |-
      Delete billing group
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "BillingGroupDeleteResponse"
        }
      ]
  BillingGroupEventList:
    description: |-
      List billing group events
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "events"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "events": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "actor": {
                    "type": "string",
                    "description": "Initiator of the event"
                  },
                  "event_desc": {
                    "type": "string",
                    "description": "Event description"
                  },
                  "event_type": {
                    "type": "string",
                    "description": "Event type identifier"
                  },
                  "project_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Identifier of a project"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "log_entry_id": {
                    "type": "integer",
                    "description": "Entry ID"
                  },
                  "project_name": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Project name"
                  },
                  "billing_group_id": {
                    "type": "string",
                    "maxLength": 36,
                    "minLength": 36,
                    "description": "Billing group ID"
                  }
                }
              },
              "description": "List of events related to a billing group"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "BillingGroupEventListResponse"
        }
      ]
  BillingGroupGet:
    description: |-
      Get billing group details
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "billing_group"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "billing_group": {
              "type": "object",
              "required": [
                "account_id",
                "account_name",
                "address_lines",
                "billing_currency",
                "billing_emails",
                "billing_extra_text",
                "billing_group_id",
                "billing_group_name",
                "card_info",
                "city",
                "company",
                "country",
                "country_code",
                "estimated_balance_local",
                "estimated_balance_usd",
                "payment_method",
                "state",
                "vat_id",
                "zip_code"
              ],
              "properties": {
                "city": {
                  "type": "string",
                  "maxLength": 512,
                  "description": "Address city"
                },
                "state": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Address state"
                },
                "vat_id": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "EU VAT Identification Number"
                },
                "company": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Name of a company"
                },
                "country": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Billing country"
                },
                "zip_code": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Address zip code"
                },
                "card_info": {
                  "type": "object",
                  "required": [
                    "brand",
                    "card_id",
                    "country",
                    "country_code",
                    "exp_month",
                    "exp_year",
                    "last4",
                    "name",
                    "user_email"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Name on the credit card"
                    },
                    "brand": {
                      "type": "string",
                      "description": "Brand"
                    },
                    "last4": {
                      "type": "string",
                      "description": "Credit card last four digits"
                    },
                    "card_id": {
                      "type": "string",
                      "maxLength": 64,
                      "description": "Credit card ID"
                    },
                    "country": {
                      "type": "string",
                      "maxLength": 128,
                      "description": "Country"
                    },
                    "exp_year": {
                      "type": "integer",
                      "maximum": 2100,
                      "minimum": 2015,
                      "description": "Expiration year"
                    },
                    "exp_month": {
                      "type": "integer",
                      "maximum": 12,
                      "minimum": 1,
                      "description": "Expiration month"
                    },
                    "user_email": {
                      "type": "string",
                      "maxLength": 319,
                      "description": "User email address"
                    },
                    "country_code": {
                      "type": "string",
                      "maxLength": 2,
                      "description": "Two letter ISO country code"
                    }
                  },
                  "description": "Credit card assigned to the project"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "account_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Account name"
                },
                "country_code": {
                  "type": "string",
                  "maxLength": 2,
                  "description": "Two letter ISO country code"
                },
                "address_lines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 16,
                  "description": "Address lines"
                },
                "billing_emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "email"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      }
                    }
                  },
                  "maxItems": 10,
                  "description": "List of project billing email addresses"
                },
                "payment_method": {
                  "enum": [
                    "aws_marketplace",
                    "manifold",
                    "partner",
                    "consolidated",
                    "card",
                    "finvoice",
                    "disabled",
                    "email",
                    "accrual",
                    "no_payment_expected",
                    "post"
                  ],
                  "type": "string",
                  "description": "Payment method"
                },
                "billing_address": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Project billing address"
                },
                "billing_currency": {
                  "enum": [
                    "AUD",
                    "CAD",
                    "CHF",
                    "DKK",
                    "EUR",
                    "GBP",
                    "NOK",
                    "SEK",
                    "USD"
                  ],
                  "type": "string",
                  "description": "Billing currency"
                },
                "billing_group_id": {
                  "type": "string",
                  "maxLength": 36,
                  "minLength": 36,
                  "description": "Billing group ID"
                },
                "billing_extra_text": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number"
                },
                "billing_group_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Billing group name"
                },
                "estimated_balance_usd": {
                  "type": "string",
                  "description": "Estimated balance in USD, before tax"
                },
                "estimated_balance_local": {
                  "type": "string",
                  "description": "Estimated balance in billing currency, before tax"
                }
              },
              "description": "Billing group information"
            }
          },
          "description": "BillingGroupGetResponse"
        }
      ]
  BillingGroupInvoiceDownload:
    description: |-
      Download PDF invoice
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "string",
          "format": "binary"
        }
      ]
  BillingGroupInvoiceGet:
    description: |-
      Get a single invoice
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "invoice"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "invoice": {
              "type": "object",
              "required": [
                "invoice_number",
                "local_inc_vat",
                "local_vat_zero"
              ],
              "properties": {
                "invoice_state": {
                  "enum": [
                    "accrual",
                    "consolidated",
                    "due",
                    "estimate",
                    "mailed",
                    "no_payment_expected",
                    "paid",
                    "uncollectible",
                    "waived"
                  ],
                  "type": "string",
                  "description": "State of this invoice"
                },
                "local_inc_vat": {
                  "type": "string",
                  "description": "Invoice total in chosen billing currency, after VAT"
                },
                "invoice_number": {
                  "type": "string",
                  "description": "Unique invoice reference code"
                },
                "local_vat_zero": {
                  "type": "string",
                  "description": "Invoice total in chosen billing currency, before VAT"
                }
              },
              "description": "A single invoice"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "BillingGroupInvoiceGetResponse"
        }
      ]
  BillingGroupInvoiceLinesList:
    description: |-
      Get invoice lines for a single invoice
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "lines": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "description",
                  "line_total_usd",
                  "line_type"
                ],
                "properties": {
                  "line_type": {
                    "enum": [
                      "commitment_fee",
                      "credit_consumption",
                      "extra_charge",
                      "multiplier",
                      "other_event",
                      "rounding",
                      "service_charge",
                      "support_charge"
                    ],
                    "type": "string",
                    "description": "Type of the invoice line"
                  },
                  "cloud_name": {
                    "type": "string",
                    "description": "Name of the cloud, if billed resource is associated with a cloud resource"
                  },
                  "description": {
                    "type": "string",
                    "description": "Human-readable short description of the invoice line"
                  },
                  "project_name": {
                    "type": "string",
                    "description": "Name of the project this line is associated with, if any"
                  },
                  "service_name": {
                    "type": "string",
                    "description": "Name of the service, if invoice line is for service use"
                  },
                  "service_plan": {
                    "type": "string",
                    "description": "Service plan name, if invoice line is for service use"
                  },
                  "service_type": {
                    "enum": [
                      "alerta",
                      "alertmanager",
                      "cassandra",
                      "clickhouse",
                      "elasticsearch",
                      "grafana",
                      "influxdb",
                      "kafka",
                      "kafka_connect",
                      "kafka_mirrormaker",
                      "m3aggregator",
                      "m3coordinator",
                      "m3db",
                      "mysql",
                      "pg",
                      "redis",
                      "sw"
                    ],
                    "type": "string",
                    "description": "Service type, if invoice line is for service use"
                  },
                  "timestamp_end": {
                    "type": "string",
                    "description": "End timestamp of the billed time period, for resources billed by time"
                  },
                  "line_total_usd": {
                    "type": "string",
                    "description": "Pre-tax sum of invoice line, in USD"
                  },
                  "local_currency": {
                    "type": "string",
                    "description": "Currency used for line_local_total"
                  },
                  "timestamp_begin": {
                    "type": "string",
                    "description": "Begin timestamp of the billed time period, for resources billed by time"
                  },
                  "line_total_local": {
                    "type": "string",
                    "description": "Pre-tax sum of invoice line, in the local currency configured for the invoice"
                  },
                  "line_pre_discount_local": {
                    "type": "string",
                    "description": "Pre-tax sum of invoice line, in local currency, before any discounts"
                  }
                }
              },
              "description": "List of invoice lines"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "BillingGroupInvoiceLinesListResponse"
        }
      ]
  BillingGroupInvoiceList:
    description: |-
      Get invoices generated for billing group
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "invoices"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "invoices": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "billing_group_name",
                  "currency",
                  "download_cookie",
                  "invoice_number",
                  "period_begin",
                  "period_end",
                  "state",
                  "total_inc_vat",
                  "total_vat_zero"
                ],
                "properties": {
                  "state": {
                    "type": "string",
                    "description": "Invoice state"
                  },
                  "currency": {
                    "enum": [
                      "AUD",
                      "CAD",
                      "CHF",
                      "DKK",
                      "EUR",
                      "GBP",
                      "NOK",
                      "SEK",
                      "USD"
                    ],
                    "type": "string",
                    "description": "Billing currency"
                  },
                  "period_end": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Period end"
                  },
                  "period_begin": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Period begin"
                  },
                  "total_inc_vat": {
                    "type": "string",
                    "description": "Total including taxes"
                  },
                  "invoice_number": {
                    "type": "string",
                    "description": "Invoice number"
                  },
                  "total_vat_zero": {
                    "type": "string",
                    "description": "Total excluding taxes"
                  },
                  "download_cookie": {
                    "type": "string",
                    "description": "Authentication cookie for downloads"
                  },
                  "billing_group_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Billing group name"
                  }
                }
              },
              "description": "List of billing group invoices"
            }
          },
          "description": "BillingGroupInvoiceListResponse"
        }
      ]
  BillingGroupList:
    description: |-
      List billing groups
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "billing_groups"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "billing_groups": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "account_id",
                  "account_name",
                  "address_lines",
                  "billing_currency",
                  "billing_emails",
                  "billing_extra_text",
                  "billing_group_id",
                  "billing_group_name",
                  "card_info",
                  "city",
                  "company",
                  "country",
                  "country_code",
                  "estimated_balance_local",
                  "estimated_balance_usd",
                  "payment_method",
                  "state",
                  "vat_id",
                  "zip_code"
                ],
                "properties": {
                  "city": {
                    "type": "string",
                    "maxLength": 512,
                    "description": "Address city"
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Address state"
                  },
                  "vat_id": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "EU VAT Identification Number"
                  },
                  "company": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Name of a company"
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Billing country"
                  },
                  "zip_code": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Address zip code"
                  },
                  "card_info": {
                    "type": "object",
                    "required": [
                      "brand",
                      "card_id",
                      "country",
                      "country_code",
                      "exp_month",
                      "exp_year",
                      "last4",
                      "name",
                      "user_email"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "Name on the credit card"
                      },
                      "brand": {
                        "type": "string",
                        "description": "Brand"
                      },
                      "last4": {
                        "type": "string",
                        "description": "Credit card last four digits"
                      },
                      "card_id": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Credit card ID"
                      },
                      "country": {
                        "type": "string",
                        "maxLength": 128,
                        "description": "Country"
                      },
                      "exp_year": {
                        "type": "integer",
                        "maximum": 2100,
                        "minimum": 2015,
                        "description": "Expiration year"
                      },
                      "exp_month": {
                        "type": "integer",
                        "maximum": 12,
                        "minimum": 1,
                        "description": "Expiration month"
                      },
                      "user_email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      },
                      "country_code": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "Two letter ISO country code"
                      }
                    },
                    "description": "Credit card assigned to the project"
                  },
                  "account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  },
                  "account_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Account name"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "Two letter ISO country code"
                  },
                  "address_lines": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 16,
                    "description": "Address lines"
                  },
                  "billing_emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "email"
                      ],
                      "properties": {
                        "email": {
                          "type": "string",
                          "maxLength": 319,
                          "description": "User email address"
                        }
                      }
                    },
                    "maxItems": 10,
                    "description": "List of project billing email addresses"
                  },
                  "payment_method": {
                    "enum": [
                      "aws_marketplace",
                      "manifold",
                      "partner",
                      "consolidated",
                      "card",
                      "finvoice",
                      "disabled",
                      "email",
                      "accrual",
                      "no_payment_expected",
                      "post"
                    ],
                    "type": "string",
                    "description": "Payment method"
                  },
                  "billing_address": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "Project billing address"
                  },
                  "billing_currency": {
                    "enum": [
                      "AUD",
                      "CAD",
                      "CHF",
                      "DKK",
                      "EUR",
                      "GBP",
                      "NOK",
                      "SEK",
                      "USD"
                    ],
                    "type": "string",
                    "description": "Billing currency"
                  },
                  "billing_group_id": {
                    "type": "string",
                    "maxLength": 36,
                    "minLength": 36,
                    "description": "Billing group ID"
                  },
                  "billing_extra_text": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number"
                  },
                  "billing_group_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Billing group name"
                  },
                  "estimated_balance_usd": {
                    "type": "string",
                    "description": "Estimated balance in USD, before tax"
                  },
                  "estimated_balance_local": {
                    "type": "string",
                    "description": "Estimated balance in billing currency, before tax"
                  }
                }
              },
              "description": "List of billing groups"
            }
          },
          "description": "BillingGroupListResponse"
        }
      ]
  BillingGroupProjectAssign:
    description: |-
      Assign project to billing group
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "BillingGroupProjectAssignResponse"
        }
      ]
  BillingGroupProjectList:
    description: |-
      Get projects assigned to billing group
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "projects"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "projects": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "available_credits",
                  "estimated_balance",
                  "project_name"
                ],
                "properties": {
                  "project_name": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Project name"
                  },
                  "available_credits": {
                    "type": "string",
                    "description": "Available credits"
                  },
                  "estimated_balance": {
                    "type": "string",
                    "description": "Estimated balance"
                  }
                }
              },
              "description": "List of projects assigned to billing group"
            }
          },
          "description": "BillingGroupProjectListResponse"
        }
      ]
  BillingGroupProjectsAssign:
    description: |-
      Assign projects to billing group
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "projects_names"
          ],
          "properties": {
            "projects_names": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 1024,
              "minItems": 1,
              "description": "Projects names"
            }
          },
          "description": "BillingGroupProjectsAssignRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "BillingGroupProjectsAssignResponse"
        }
      ]
  BillingGroupUpdate:
    description: |-
      Update billing group
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "city": {
              "type": "string",
              "maxLength": 512,
              "description": "Address city"
            },
            "state": {
              "type": "string",
              "maxLength": 128,
              "description": "Address state"
            },
            "vat_id": {
              "type": "string",
              "maxLength": 64,
              "description": "EU VAT Identification Number"
            },
            "card_id": {
              "type": "string",
              "maxLength": 64,
              "description": "Credit card ID"
            },
            "company": {
              "type": "string",
              "maxLength": 128,
              "description": "Name of a company"
            },
            "zip_code": {
              "type": "string",
              "maxLength": 32,
              "description": "Address zip code"
            },
            "account_id": {
              "type": "string",
              "maxLength": 36,
              "description": "Account ID"
            },
            "country_code": {
              "type": "string",
              "maxLength": 2,
              "description": "Two letter country code for billing country"
            },
            "address_lines": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 16,
              "description": "Address lines"
            },
            "billing_emails": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  }
                }
              },
              "maxItems": 10,
              "description": "List of project billing email addresses"
            },
            "billing_currency": {
              "enum": [
                "AUD",
                "CAD",
                "CHF",
                "DKK",
                "EUR",
                "GBP",
                "NOK",
                "SEK",
                "USD"
              ],
              "type": "string",
              "description": "Billing currency"
            },
            "billing_extra_text": {
              "type": "string",
              "maxLength": 1000,
              "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number"
            },
            "billing_group_name": {
              "type": "string",
              "maxLength": 128,
              "description": "Billing group name"
            }
          },
          "description": "BillingGroupUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "billing_group"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "billing_group": {
              "type": "object",
              "required": [
                "account_id",
                "account_name",
                "address_lines",
                "billing_currency",
                "billing_emails",
                "billing_extra_text",
                "billing_group_id",
                "billing_group_name",
                "card_info",
                "city",
                "company",
                "country",
                "country_code",
                "estimated_balance_local",
                "estimated_balance_usd",
                "payment_method",
                "state",
                "vat_id",
                "zip_code"
              ],
              "properties": {
                "city": {
                  "type": "string",
                  "maxLength": 512,
                  "description": "Address city"
                },
                "state": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Address state"
                },
                "vat_id": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "EU VAT Identification Number"
                },
                "company": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Name of a company"
                },
                "country": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Billing country"
                },
                "zip_code": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Address zip code"
                },
                "card_info": {
                  "type": "object",
                  "required": [
                    "brand",
                    "card_id",
                    "country",
                    "country_code",
                    "exp_month",
                    "exp_year",
                    "last4",
                    "name",
                    "user_email"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Name on the credit card"
                    },
                    "brand": {
                      "type": "string",
                      "description": "Brand"
                    },
                    "last4": {
                      "type": "string",
                      "description": "Credit card last four digits"
                    },
                    "card_id": {
                      "type": "string",
                      "maxLength": 64,
                      "description": "Credit card ID"
                    },
                    "country": {
                      "type": "string",
                      "maxLength": 128,
                      "description": "Country"
                    },
                    "exp_year": {
                      "type": "integer",
                      "maximum": 2100,
                      "minimum": 2015,
                      "description": "Expiration year"
                    },
                    "exp_month": {
                      "type": "integer",
                      "maximum": 12,
                      "minimum": 1,
                      "description": "Expiration month"
                    },
                    "user_email": {
                      "type": "string",
                      "maxLength": 319,
                      "description": "User email address"
                    },
                    "country_code": {
                      "type": "string",
                      "maxLength": 2,
                      "description": "Two letter ISO country code"
                    }
                  },
                  "description": "Credit card assigned to the project"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "account_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Account name"
                },
                "country_code": {
                  "type": "string",
                  "maxLength": 2,
                  "description": "Two letter ISO country code"
                },
                "address_lines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 16,
                  "description": "Address lines"
                },
                "billing_emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "email"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      }
                    }
                  },
                  "maxItems": 10,
                  "description": "List of project billing email addresses"
                },
                "payment_method": {
                  "enum": [
                    "aws_marketplace",
                    "manifold",
                    "partner",
                    "consolidated",
                    "card",
                    "finvoice",
                    "disabled",
                    "email",
                    "accrual",
                    "no_payment_expected",
                    "post"
                  ],
                  "type": "string",
                  "description": "Payment method"
                },
                "billing_address": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Project billing address"
                },
                "billing_currency": {
                  "enum": [
                    "AUD",
                    "CAD",
                    "CHF",
                    "DKK",
                    "EUR",
                    "GBP",
                    "NOK",
                    "SEK",
                    "USD"
                  ],
                  "type": "string",
                  "description": "Billing currency"
                },
                "billing_group_id": {
                  "type": "string",
                  "maxLength": 36,
                  "minLength": 36,
                  "description": "Billing group ID"
                },
                "billing_extra_text": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number"
                },
                "billing_group_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Billing group name"
                },
                "estimated_balance_usd": {
                  "type": "string",
                  "description": "Estimated balance in USD, before tax"
                },
                "estimated_balance_local": {
                  "type": "string",
                  "description": "Estimated balance in billing currency, before tax"
                }
              },
              "description": "Billing group information"
            }
          },
          "description": "BillingGroupUpdateResponse"
        }
      ]
  CheckPasswordStrengthExistingUser:
    description: |-
      Check password strength for an existing user
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "new_password",
            "old_password"
          ],
          "properties": {
            "new_password": {
              "type": "string",
              "maxLength": 256,
              "description": "New password"
            },
            "old_password": {
              "type": "string",
              "maxLength": 256,
              "description": "User password"
            }
          },
          "description": "CheckPasswordStrengthExistingUserRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "password_strength"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "password_strength": {
              "type": "object",
              "required": [
                "message",
                "score"
              ],
              "properties": {
                "score": {
                  "type": "integer",
                  "maximum": 4,
                  "minimum": 0,
                  "description": "Password strength score"
                },
                "message": {
                  "type": "string",
                  "description": "Password strength message"
                },
                "is_acceptable": {
                  "type": "boolean",
                  "description": "True if the password is acceptable"
                }
              },
              "description": "Password strength"
            }
          },
          "description": "CheckPasswordStrengthExistingUserResponse"
        }
      ]
  CheckPasswordStrengthNewUser:
    description: |-
      Check password strength for a new user
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "password"
          ],
          "properties": {
            "email": {
              "type": "string",
              "maxLength": 319,
              "description": "User email address"
            },
            "password": {
              "type": "string",
              "maxLength": 256,
              "description": "New password"
            },
            "real_name": {
              "type": "string",
              "maxLength": 256,
              "description": "User real name"
            }
          },
          "description": "CheckPasswordStrengthNewUserRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "password_strength"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "password_strength": {
              "type": "object",
              "required": [
                "message",
                "score"
              ],
              "properties": {
                "score": {
                  "type": "integer",
                  "maximum": 4,
                  "minimum": 0,
                  "description": "Password strength score"
                },
                "message": {
                  "type": "string",
                  "description": "Password strength message"
                },
                "is_acceptable": {
                  "type": "boolean",
                  "description": "True if the password is acceptable"
                }
              },
              "description": "Password strength"
            }
          },
          "description": "CheckPasswordStrengthNewUserResponse"
        }
      ]
  CreditCardAdd:
    description: |-
      Add credit card for user
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "stripe_token"
          ],
          "properties": {
            "stripe_token": {
              "type": "string",
              "maxLength": 256,
              "description": "Credit card Stripe token"
            }
          },
          "description": "CreditCardAddRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "card"
          ],
          "properties": {
            "card": {
              "type": "object",
              "required": [
                "brand",
                "card_id",
                "country",
                "country_code",
                "exp_month",
                "exp_year",
                "last4",
                "name",
                "projects"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Name on the credit card"
                },
                "brand": {
                  "type": "string",
                  "description": "Brand"
                },
                "last4": {
                  "type": "string",
                  "description": "Credit card last four digits"
                },
                "card_id": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Credit card ID"
                },
                "country": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Country"
                },
                "exp_year": {
                  "type": "integer",
                  "maximum": 2100,
                  "minimum": 2015,
                  "description": "Expiration year"
                },
                "projects": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of projects the card is assigned to"
                },
                "exp_month": {
                  "type": "integer",
                  "maximum": 12,
                  "minimum": 1,
                  "description": "Expiration month"
                },
                "country_code": {
                  "type": "string",
                  "maxLength": 2,
                  "description": "Two letter ISO country code"
                }
              },
              "description": "Credit card information"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "CreditCardAddResponse"
        }
      ]
  CreditCardDelete:
    description: |-
      Delete user's credit card
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "CreditCardDeleteResponse"
        }
      ]
  CreditCardsList:
    description: |-
      List user's credit cards
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "cards"
          ],
          "properties": {
            "cards": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "brand",
                  "card_id",
                  "country",
                  "country_code",
                  "exp_month",
                  "exp_year",
                  "last4",
                  "name",
                  "projects"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "Name on the credit card"
                  },
                  "brand": {
                    "type": "string",
                    "description": "Brand"
                  },
                  "last4": {
                    "type": "string",
                    "description": "Credit card last four digits"
                  },
                  "card_id": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "Credit card ID"
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Country"
                  },
                  "exp_year": {
                    "type": "integer",
                    "maximum": 2100,
                    "minimum": 2015,
                    "description": "Expiration year"
                  },
                  "projects": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of projects the card is assigned to"
                  },
                  "exp_month": {
                    "type": "integer",
                    "maximum": 12,
                    "minimum": 1,
                    "description": "Expiration month"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "Two letter ISO country code"
                  }
                }
              },
              "description": "List of user's credit cards"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "CreditCardsListResponse"
        }
      ]
  CreditCardUpdate:
    description: |-
      Update user's credit card
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 256,
              "description": "Name on the credit card"
            },
            "exp_year": {
              "type": "integer",
              "maximum": 2100,
              "minimum": 2015,
              "description": "Expiration year"
            },
            "exp_month": {
              "type": "integer",
              "maximum": 12,
              "minimum": 1,
              "description": "Expiration month"
            }
          },
          "description": "CreditCardUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "card"
          ],
          "properties": {
            "card": {
              "type": "object",
              "required": [
                "brand",
                "card_id",
                "country",
                "country_code",
                "exp_month",
                "exp_year",
                "last4",
                "name",
                "projects"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Name on the credit card"
                },
                "brand": {
                  "type": "string",
                  "description": "Brand"
                },
                "last4": {
                  "type": "string",
                  "description": "Credit card last four digits"
                },
                "card_id": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Credit card ID"
                },
                "country": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Country"
                },
                "exp_year": {
                  "type": "integer",
                  "maximum": 2100,
                  "minimum": 2015,
                  "description": "Expiration year"
                },
                "projects": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of projects the card is assigned to"
                },
                "exp_month": {
                  "type": "integer",
                  "maximum": 12,
                  "minimum": 1,
                  "description": "Expiration month"
                },
                "country_code": {
                  "type": "string",
                  "maxLength": 2,
                  "description": "Two letter ISO country code"
                }
              },
              "description": "Credit card information"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "CreditCardUpdateResponse"
        }
      ]
  ListClouds:
    description: |-
      List available cloud platforms
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "clouds"
          ],
          "properties": {
            "clouds": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "cloud_name",
                  "geo_region"
                ],
                "properties": {
                  "cloud_name": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "Target cloud"
                  },
                  "geo_region": {
                    "type": "string",
                    "description": "Geographical region"
                  },
                  "geo_latitude": {
                    "type": "number",
                    "description": "Approximate geographic latitude of the datacenters"
                  },
                  "geo_longitude": {
                    "type": "number",
                    "description": "Approximate geographic longitude of the datacenters"
                  },
                  "cloud_description": {
                    "type": "string",
                    "description": "Cloud provider and location"
                  }
                }
              },
              "description": "List of available clouds"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ListCloudsResponse"
        }
      ]
  ListProjectClouds:
    description: |-
      List available cloud platforms for a project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "clouds"
          ],
          "properties": {
            "clouds": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "cloud_name",
                  "geo_region"
                ],
                "properties": {
                  "cloud_name": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "Target cloud"
                  },
                  "geo_region": {
                    "type": "string",
                    "description": "Geographical region"
                  },
                  "geo_latitude": {
                    "type": "number",
                    "description": "Approximate geographic latitude of the datacenters"
                  },
                  "geo_longitude": {
                    "type": "number",
                    "description": "Approximate geographic longitude of the datacenters"
                  },
                  "cloud_description": {
                    "type": "string",
                    "description": "Cloud provider and location"
                  }
                }
              },
              "description": "List of available clouds"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ListProjectCloudsResponse"
        }
      ]
  ListProjectServiceTypes:
    description: |-
      List service types for a project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service_types"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service_types": {
              "type": "object",
              "properties": {
                "ANY": {
                  "type": "object",
                  "required": [
                    "description",
                    "service_plans",
                    "user_config_schema"
                  ],
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Single line description of the service"
                    },
                    "service_plans": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "backup_config",
                          "service_plan",
                          "service_type"
                        ],
                        "properties": {
                          "regions": {
                            "type": "object",
                            "properties": {},
                            "description": "Service plan hourly price per cloud region"
                          },
                          "node_count": {
                            "type": "integer",
                            "description": "Number of nodes in this service plan"
                          },
                          "service_plan": {
                            "type": "string",
                            "maxLength": 128,
                            "description": "Subscription plan"
                          },
                          "service_type": {
                            "type": "string",
                            "maxLength": 64,
                            "description": "Service type code"
                          },
                          "backup_config": {
                            "type": "object",
                            "required": [
                              "interval",
                              "max_count",
                              "recovery_mode"
                            ],
                            "properties": {
                              "interval": {
                                "type": "integer",
                                "description": "The interval, in hours, at which backups are generated. For some services, like PostgreSQL, this is the interval at which full snapshots are taken and continuous incremental backup stream is maintained in addition to that."
                              },
                              "max_count": {
                                "type": "integer",
                                "description": "Maximum number of backups to keep. Zero when no backups are created."
                              },
                              "recovery_mode": {
                                "type": "string",
                                "description": "Mechanism how backups can be restored. 'regular' means a backup is restored as is so that the system is restored to the state it was when the backup was generated. 'pitr' means point-in-time-recovery, which allows restoring the system to any state since the first available full snapshot."
                              },
                              "frequent_interval_minutes": {
                                "type": "integer",
                                "description": "Interval of taking a frequent backup in service types supporting different backup schedules"
                              },
                              "frequent_oldest_age_minutes": {
                                "type": "integer",
                                "description": "Maximum age of the oldest frequent backup in service types supporting different backup schedules"
                              },
                              "infrequent_interval_minutes": {
                                "type": "integer",
                                "description": "Interval of taking a frequent backup in service types supporting different backup schedules"
                              },
                              "infrequent_oldest_age_minutes": {
                                "type": "integer",
                                "description": "Maximum age of the oldest infrequent backup in service types supporting different backup schedules"
                              }
                            },
                            "description": "Backup configuration for this service plan"
                          },
                          "max_memory_percent": {
                            "type": "integer",
                            "description": "Maximum amount of system memory, in percentages, that the service can actually use after taking into account management overhead. This is relevant for memory bound services for which some service management operations require allocating proportional amount of memory on top the basic load."
                          }
                        }
                      },
                      "description": "List of plans available for this type of service"
                    },
                    "default_version": {
                      "type": "string",
                      "description": "Default version of the service if no explicit version is defined"
                    },
                    "user_config_schema": {
                      "type": "object",
                      "properties": {},
                      "description": "JSON-Schema for the 'user_config' properties"
                    },
                    "latest_available_version": {
                      "type": "string",
                      "description": "Latest available version of the service"
                    }
                  },
                  "description": "Service type information"
                }
              },
              "description": "Service types by their code"
            }
          },
          "description": "ListProjectServiceTypesResponse"
        }
      ]
  ListProjectVpcPeeringConnectionTypes:
    description: |-
      List VPC peering connection types for a project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "vpc_peering_connection_types"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "vpc_peering_connection_types": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "cloud_name",
                  "price_usd",
                  "vpc_peering_connection_type"
                ],
                "properties": {
                  "price_usd": {
                    "type": "string",
                    "description": "Hourly peering connection price in this cloud region"
                  },
                  "cloud_name": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "Target cloud"
                  },
                  "vpc_peering_connection_type": {
                    "enum": [
                      "aws-tgw-vpc-attachment",
                      "aws-vpc-peering-connection",
                      "azure-vnet-peering",
                      "google-vpc-peering"
                    ],
                    "type": "string",
                    "description": "Type of network connection from the VPC"
                  }
                }
              },
              "description": "Supported VPC peering connection types with pricing information for supported clouds"
            }
          },
          "description": "ListProjectVpcPeeringConnectionTypesResponse"
        }
      ]
  ListPublicServiceTypes:
    description: |-
      List publicly available service types
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service_types"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service_types": {
              "type": "object",
              "properties": {
                "ANY": {
                  "type": "object",
                  "required": [
                    "description",
                    "service_plans",
                    "user_config_schema"
                  ],
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Single line description of the service"
                    },
                    "service_plans": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "backup_config",
                          "service_plan",
                          "service_type"
                        ],
                        "properties": {
                          "regions": {
                            "type": "object",
                            "properties": {},
                            "description": "Service plan hourly price per cloud region"
                          },
                          "node_count": {
                            "type": "integer",
                            "description": "Number of nodes in this service plan"
                          },
                          "service_plan": {
                            "type": "string",
                            "maxLength": 128,
                            "description": "Subscription plan"
                          },
                          "service_type": {
                            "type": "string",
                            "maxLength": 64,
                            "description": "Service type code"
                          },
                          "backup_config": {
                            "type": "object",
                            "required": [
                              "interval",
                              "max_count",
                              "recovery_mode"
                            ],
                            "properties": {
                              "interval": {
                                "type": "integer",
                                "description": "The interval, in hours, at which backups are generated. For some services, like PostgreSQL, this is the interval at which full snapshots are taken and continuous incremental backup stream is maintained in addition to that."
                              },
                              "max_count": {
                                "type": "integer",
                                "description": "Maximum number of backups to keep. Zero when no backups are created."
                              },
                              "recovery_mode": {
                                "type": "string",
                                "description": "Mechanism how backups can be restored. 'regular' means a backup is restored as is so that the system is restored to the state it was when the backup was generated. 'pitr' means point-in-time-recovery, which allows restoring the system to any state since the first available full snapshot."
                              },
                              "frequent_interval_minutes": {
                                "type": "integer",
                                "description": "Interval of taking a frequent backup in service types supporting different backup schedules"
                              },
                              "frequent_oldest_age_minutes": {
                                "type": "integer",
                                "description": "Maximum age of the oldest frequent backup in service types supporting different backup schedules"
                              },
                              "infrequent_interval_minutes": {
                                "type": "integer",
                                "description": "Interval of taking a frequent backup in service types supporting different backup schedules"
                              },
                              "infrequent_oldest_age_minutes": {
                                "type": "integer",
                                "description": "Maximum age of the oldest infrequent backup in service types supporting different backup schedules"
                              }
                            },
                            "description": "Backup configuration for this service plan"
                          },
                          "max_memory_percent": {
                            "type": "integer",
                            "description": "Maximum amount of system memory, in percentages, that the service can actually use after taking into account management overhead. This is relevant for memory bound services for which some service management operations require allocating proportional amount of memory on top the basic load."
                          }
                        }
                      },
                      "description": "List of plans available for this type of service"
                    },
                    "default_version": {
                      "type": "string",
                      "description": "Default version of the service if no explicit version is defined"
                    },
                    "user_config_schema": {
                      "type": "object",
                      "properties": {},
                      "description": "JSON-Schema for the 'user_config' properties"
                    },
                    "latest_available_version": {
                      "type": "string",
                      "description": "Latest available version of the service"
                    }
                  },
                  "description": "Service type information"
                }
              },
              "description": "Service types by their code"
            }
          },
          "description": "ListPublicServiceTypesResponse"
        }
      ]
  ListServiceVersions:
    description: |-
      List service versions
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service_versions"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service_versions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "available",
                      "eol",
                      "preview",
                      "terminated",
                      "unavailable"
                    ],
                    "type": "string",
                    "description": "Service state"
                  },
                  "service_type": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "Service type code"
                  },
                  "major_version": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Service version"
                  },
                  "termination_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Termination timestamp (ISO 8601)"
                  },
                  "availability_end_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Availability end timestamp (ISO 8601)"
                  },
                  "aiven_end_of_life_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Aiven end of life timestamp (ISO 8601)"
                  },
                  "availability_start_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Availability start timestamp (ISO 8601)"
                  },
                  "upstream_end_of_life_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Upstream end of life timestamp (ISO 8601)"
                  },
                  "end_of_life_help_article_url": {
                    "type": "string",
                    "description": "Link to the help article"
                  }
                }
              },
              "description": "Service versions"
            }
          },
          "description": "ListServiceVersionsResponse"
        }
      ]
  MySQLServiceQueryStatistics:
    description: |-
      Fetch MySQL service query statistics
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer",
              "maximum": 5000,
              "minimum": 1,
              "description": "Limit for number of results"
            },
            "offset": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset for retrieved results based on sort order"
            },
            "order_by": {
              "type": "string",
              "maxLength": 256,
              "description": "Order in which to sort retrieved results"
            }
          },
          "description": "MySQLServiceQueryStatisticsRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "queries"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "queries": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              },
              "description": "List of query statistics"
            }
          },
          "description": "MySQLServiceQueryStatisticsResponse"
        }
      ]
  PgAvailableExtensions:
    description: |-
      List PostgreSQL extensions available for this tenant grouped by PG version
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "pg": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "extensions",
                  "version"
                ],
                "properties": {
                  "version": {
                    "type": "string",
                    "description": "PostgreSQL version"
                  },
                  "extensions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Extension name"
                        },
                        "versions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Extension versions available"
                        }
                      }
                    },
                    "description": "Extensions available for loading with CREATE EXTENSION in this service"
                  }
                }
              },
              "description": "Supported PostgreSQL versions"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "PgAvailableExtensionsResponse"
        }
      ]
  PGServiceAvailableExtensions:
    description: |-
      List PostgreSQL extensions that can be loaded with CREATE EXTENSION in this service
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "extensions"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "extensions": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Extension name"
                  },
                  "versions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Extension versions available"
                  }
                }
              },
              "description": "Extensions available for loading with CREATE EXTENSION in this service"
            }
          },
          "description": "PGServiceAvailableExtensionsResponse"
        }
      ]
  PGServiceQueryStatistics:
    description: |-
      Fetch PostgreSQL service query statistics
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer",
              "maximum": 5000,
              "minimum": 1,
              "description": "Limit for number of results"
            },
            "offset": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset for retrieved results based on sort order"
            },
            "order_by": {
              "type": "string",
              "maxLength": 256,
              "description": "Order in which to sort retrieved results"
            }
          },
          "description": "PGServiceQueryStatisticsRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "queries"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "queries": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              },
              "description": "List of query statistics"
            }
          },
          "description": "PGServiceQueryStatisticsResponse"
        }
      ]
  PGServiceQueryStatisticsDeprecated:
    description: |-
      Fetch PostgreSQL service query statistics (DEPRECATED: Use /project/$project/service/$service/pg/query/stats instead)
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer",
              "maximum": 5000,
              "minimum": 1,
              "description": "Limit for number of results"
            },
            "offset": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset for retrieved results based on sort order"
            },
            "order_by": {
              "type": "string",
              "maxLength": 256,
              "description": "Order in which to sort retrieved results"
            }
          },
          "description": "PGServiceQueryStatisticsDeprecatedRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "queries"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "queries": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              },
              "description": "List of query statistics"
            }
          },
          "description": "PGServiceQueryStatisticsDeprecatedResponse"
        }
      ]
  ProjectAlertsList:
    description: |-
      List active alerts for all services in a project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "alerts"
          ],
          "properties": {
            "alerts": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "create_time",
                  "event",
                  "project_name",
                  "severity"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "Name of the alerting event"
                  },
                  "severity": {
                    "type": "string",
                    "description": "Severity of the event"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Event creation timestamp (ISO 8601)"
                  },
                  "project_name": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Project name"
                  },
                  "service_name": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Service name"
                  },
                  "service_type": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "Service type code"
                  }
                }
              },
              "description": "List of active alerts for the service"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ProjectAlertsListResponse"
        }
      ]
  ProjectCreate:
    description: |-
      Create a project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "project"
          ],
          "properties": {
            "city": {
              "type": "string",
              "maxLength": 512,
              "description": "Address city"
            },
            "cloud": {
              "type": "string",
              "maxLength": 256,
              "description": "Target cloud"
            },
            "state": {
              "type": "string",
              "maxLength": 128,
              "description": "Address state"
            },
            "vat_id": {
              "type": "string",
              "maxLength": 64,
              "description": "EU VAT Identification Number"
            },
            "card_id": {
              "type": "string",
              "maxLength": 64,
              "description": "Credit card ID"
            },
            "company": {
              "type": "string",
              "maxLength": 128,
              "description": "Name of a company"
            },
            "project": {
              "type": "string",
              "maxLength": 63,
              "description": "Project name"
            },
            "zip_code": {
              "type": "string",
              "maxLength": 32,
              "description": "Address zip code"
            },
            "account_id": {
              "type": "string",
              "maxLength": 36,
              "description": "Account ID"
            },
            "tech_emails": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  }
                }
              },
              "maxItems": 10,
              "description": "List of project billing email addresses"
            },
            "country_code": {
              "type": "string",
              "maxLength": 2,
              "description": "Two letter country code for billing country"
            },
            "address_lines": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 16,
              "description": "Address lines"
            },
            "billing_emails": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  }
                }
              },
              "maxItems": 10,
              "description": "List of project billing email addresses"
            },
            "billing_address": {
              "type": "string",
              "maxLength": 1000,
              "description": "Project billing address"
            },
            "billing_currency": {
              "enum": [
                "AUD",
                "CAD",
                "CHF",
                "DKK",
                "EUR",
                "GBP",
                "NOK",
                "SEK",
                "USD"
              ],
              "type": "string",
              "description": "Billing currency"
            },
            "billing_group_id": {
              "type": "string",
              "maxLength": 36,
              "minLength": 36,
              "description": "Billing group ID"
            },
            "copy_from_project": {
              "type": "string",
              "maxLength": 63,
              "description": "Project name from which to copy settings to the new project"
            },
            "billing_extra_text": {
              "type": "string",
              "maxLength": 1000,
              "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number"
            },
            "add_account_owners_admin_access": {
              "type": "boolean",
              "description": "If account_id is set, grant account owner team admin access to the new project"
            }
          },
          "description": "ProjectCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "project"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "project": {
              "type": "object",
              "required": [
                "account_id",
                "billing_address",
                "billing_emails",
                "billing_group_id",
                "billing_group_name",
                "country",
                "country_code",
                "default_cloud",
                "estimated_balance",
                "payment_method",
                "project_name",
                "vat_id"
              ],
              "properties": {
                "city": {
                  "type": "string",
                  "maxLength": 512,
                  "description": "Address city"
                },
                "state": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Address state"
                },
                "vat_id": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "EU VAT Identification Number"
                },
                "company": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Name of a company"
                },
                "country": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Billing country"
                },
                "features": {
                  "type": "object",
                  "properties": {},
                  "description": "Feature flags"
                },
                "zip_code": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Address zip code"
                },
                "card_info": {
                  "type": "object",
                  "required": [
                    "brand",
                    "card_id",
                    "country",
                    "country_code",
                    "exp_month",
                    "exp_year",
                    "last4",
                    "name",
                    "user_email"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Name on the credit card"
                    },
                    "brand": {
                      "type": "string",
                      "description": "Brand"
                    },
                    "last4": {
                      "type": "string",
                      "description": "Credit card last four digits"
                    },
                    "card_id": {
                      "type": "string",
                      "maxLength": 64,
                      "description": "Credit card ID"
                    },
                    "country": {
                      "type": "string",
                      "maxLength": 128,
                      "description": "Country"
                    },
                    "exp_year": {
                      "type": "integer",
                      "maximum": 2100,
                      "minimum": 2015,
                      "description": "Expiration year"
                    },
                    "exp_month": {
                      "type": "integer",
                      "maximum": 12,
                      "minimum": 1,
                      "description": "Expiration month"
                    },
                    "user_email": {
                      "type": "string",
                      "maxLength": 319,
                      "description": "User email address"
                    },
                    "country_code": {
                      "type": "string",
                      "maxLength": 2,
                      "description": "Two letter ISO country code"
                    }
                  },
                  "description": "Credit card assigned to the project"
                },
                "tenant_id": {
                  "type": "string",
                  "description": "Tenant ID"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "tech_emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "email"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      }
                    }
                  },
                  "maxItems": 10,
                  "description": "List of project billing email addresses"
                },
                "account_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Account name"
                },
                "country_code": {
                  "type": "string",
                  "maxLength": 2,
                  "description": "Two letter ISO country code"
                },
                "project_name": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Project name"
                },
                "address_lines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 16,
                  "description": "Address lines"
                },
                "default_cloud": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Default cloud to use when launching services"
                },
                "billing_emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "email"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      }
                    }
                  },
                  "maxItems": 10,
                  "description": "List of project billing email addresses"
                },
                "payment_method": {
                  "type": "string",
                  "description": "Payment method"
                },
                "billing_address": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Project billing address"
                },
                "billing_currency": {
                  "enum": [
                    "AUD",
                    "CAD",
                    "CHF",
                    "DKK",
                    "EUR",
                    "GBP",
                    "NOK",
                    "SEK",
                    "USD"
                  ],
                  "type": "string",
                  "description": "Billing currency"
                },
                "billing_group_id": {
                  "type": "string",
                  "maxLength": 36,
                  "minLength": 36,
                  "description": "Billing group ID"
                },
                "available_credits": {
                  "type": "string",
                  "description": "Available credits"
                },
                "estimated_balance": {
                  "type": "string",
                  "description": "Estimated balance"
                },
                "billing_extra_text": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number"
                },
                "billing_group_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Billing group name"
                },
                "trial_expiration_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Trial expiration time (ISO 8601)"
                }
              },
              "description": "Project information"
            }
          },
          "description": "ProjectCreateResponse"
        }
      ]
  ProjectCreditsClaim:
    description: |-
      Claim a credit code
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 1024,
              "description": "Credit code"
            }
          },
          "description": "ProjectCreditsClaimRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "credit"
          ],
          "properties": {
            "credit": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "maxLength": 1024,
                  "description": "Credit code"
                },
                "type": {
                  "enum": [
                    "discount",
                    "employee",
                    "evaluation",
                    "internal",
                    "other",
                    "outage",
                    "promotion",
                    "purchase",
                    "sponsorship",
                    "trial",
                    "trial_over"
                  ],
                  "type": "string",
                  "description": "Credit type"
                },
                "expire_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                },
                "remaining_value": {
                  "type": "string",
                  "description": "Remaining credit value"
                }
              },
              "description": "Assigned credit"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ProjectCreditsClaimResponse"
        }
      ]
  ProjectCreditsList:
    description: |-
      List project credits
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "credits"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "credits": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Credit code"
                  },
                  "type": {
                    "enum": [
                      "discount",
                      "employee",
                      "evaluation",
                      "internal",
                      "other",
                      "outage",
                      "promotion",
                      "purchase",
                      "sponsorship",
                      "trial",
                      "trial_over"
                    ],
                    "type": "string",
                    "description": "Credit type"
                  },
                  "expire_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "remaining_value": {
                    "type": "string",
                    "description": "Remaining credit value"
                  }
                }
              },
              "description": "List of credits assigned to a project"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ProjectCreditsListResponse"
        }
      ]
  ProjectDelete:
    description: |-
      Delete project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ProjectDeleteResponse"
        }
      ]
  ProjectGet:
    description: |-
      Get project details
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "project"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "project": {
              "type": "object",
              "required": [
                "account_id",
                "billing_address",
                "billing_emails",
                "billing_group_id",
                "billing_group_name",
                "country",
                "country_code",
                "default_cloud",
                "estimated_balance",
                "payment_method",
                "project_name",
                "vat_id"
              ],
              "properties": {
                "city": {
                  "type": "string",
                  "maxLength": 512,
                  "description": "Address city"
                },
                "state": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Address state"
                },
                "vat_id": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "EU VAT Identification Number"
                },
                "company": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Name of a company"
                },
                "country": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Billing country"
                },
                "features": {
                  "type": "object",
                  "properties": {},
                  "description": "Feature flags"
                },
                "zip_code": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Address zip code"
                },
                "card_info": {
                  "type": "object",
                  "required": [
                    "brand",
                    "card_id",
                    "country",
                    "country_code",
                    "exp_month",
                    "exp_year",
                    "last4",
                    "name",
                    "user_email"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Name on the credit card"
                    },
                    "brand": {
                      "type": "string",
                      "description": "Brand"
                    },
                    "last4": {
                      "type": "string",
                      "description": "Credit card last four digits"
                    },
                    "card_id": {
                      "type": "string",
                      "maxLength": 64,
                      "description": "Credit card ID"
                    },
                    "country": {
                      "type": "string",
                      "maxLength": 128,
                      "description": "Country"
                    },
                    "exp_year": {
                      "type": "integer",
                      "maximum": 2100,
                      "minimum": 2015,
                      "description": "Expiration year"
                    },
                    "exp_month": {
                      "type": "integer",
                      "maximum": 12,
                      "minimum": 1,
                      "description": "Expiration month"
                    },
                    "user_email": {
                      "type": "string",
                      "maxLength": 319,
                      "description": "User email address"
                    },
                    "country_code": {
                      "type": "string",
                      "maxLength": 2,
                      "description": "Two letter ISO country code"
                    }
                  },
                  "description": "Credit card assigned to the project"
                },
                "tenant_id": {
                  "type": "string",
                  "description": "Tenant ID"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "tech_emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "email"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      }
                    }
                  },
                  "maxItems": 10,
                  "description": "List of project billing email addresses"
                },
                "account_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Account name"
                },
                "country_code": {
                  "type": "string",
                  "maxLength": 2,
                  "description": "Two letter ISO country code"
                },
                "project_name": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Project name"
                },
                "address_lines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 16,
                  "description": "Address lines"
                },
                "default_cloud": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Default cloud to use when launching services"
                },
                "billing_emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "email"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      }
                    }
                  },
                  "maxItems": 10,
                  "description": "List of project billing email addresses"
                },
                "payment_method": {
                  "type": "string",
                  "description": "Payment method"
                },
                "billing_address": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Project billing address"
                },
                "billing_currency": {
                  "enum": [
                    "AUD",
                    "CAD",
                    "CHF",
                    "DKK",
                    "EUR",
                    "GBP",
                    "NOK",
                    "SEK",
                    "USD"
                  ],
                  "type": "string",
                  "description": "Billing currency"
                },
                "billing_group_id": {
                  "type": "string",
                  "maxLength": 36,
                  "minLength": 36,
                  "description": "Billing group ID"
                },
                "available_credits": {
                  "type": "string",
                  "description": "Available credits"
                },
                "estimated_balance": {
                  "type": "string",
                  "description": "Estimated balance"
                },
                "billing_extra_text": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number"
                },
                "billing_group_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Billing group name"
                },
                "trial_expiration_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Trial expiration time (ISO 8601)"
                }
              },
              "description": "Project information"
            }
          },
          "description": "ProjectGetResponse"
        }
      ]
  ProjectGetEventLogs:
    description: |-
      Get project event log entries
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "events"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "events": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "actor",
                  "event_desc",
                  "event_type",
                  "service_name",
                  "time"
                ],
                "properties": {
                  "time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "actor": {
                    "type": "string",
                    "description": "Initiator of the event"
                  },
                  "event_desc": {
                    "type": "string",
                    "description": "Event description"
                  },
                  "event_type": {
                    "type": "string",
                    "description": "Event type identifier"
                  },
                  "service_name": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Service name"
                  }
                }
              },
              "description": "List of project event log entries"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ProjectGetEventLogsResponse"
        }
      ]
  ProjectGetServiceLogs:
    description: |-
      Get service log entries
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "How many log entries to receive at most"
            },
            "offset": {
              "type": "string",
              "maxLength": 128,
              "description": "Opaque offset identifier"
            },
            "sort_order": {
              "enum": [
                "desc",
                "asc"
              ],
              "type": "string",
              "description": "Sort order for log messages"
            }
          },
          "description": "ProjectGetServiceLogsRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "first_log_offset",
            "logs",
            "offset"
          ],
          "properties": {
            "logs": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "msg"
                ],
                "properties": {
                  "msg": {
                    "type": "string",
                    "description": "Log message"
                  },
                  "time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "unit": {
                    "type": "string",
                    "description": "SystemD unit name"
                  }
                }
              },
              "description": "List of log entries"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "offset": {
              "type": "string",
              "description": "Opaque offset identifier. A null value is returned when there are no logs at all."
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "first_log_offset": {
              "type": "string",
              "description": "Opaque offset identifier of the first received log message. A null value is returned when there are no logs at all."
            }
          },
          "description": "ProjectGetServiceLogsResponse"
        }
      ]
  ProjectInvite:
    description: |-
      Send project membership invitation
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "user_email"
          ],
          "properties": {
            "user_email": {
              "type": "string",
              "maxLength": 319,
              "description": "User email address"
            },
            "member_type": {
              "enum": [
                "admin",
                "developer",
                "operator",
                "read_only"
              ],
              "type": "string",
              "description": "Project member type"
            }
          },
          "description": "ProjectInviteRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ProjectInviteResponse"
        }
      ]
  ProjectInviteAccept:
    description: |-
      Confirm project invite
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "invite_details"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "invite_details": {
              "type": "object",
              "required": [
                "user_email"
              ],
              "properties": {
                "user_email": {
                  "type": "string",
                  "maxLength": 319,
                  "description": "User email address"
                }
              },
              "description": "Details of verified invite"
            }
          },
          "description": "ProjectInviteAcceptResponse"
        }
      ]
  ProjectInviteDelete:
    description: |-
      Delete an invitation to a project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ProjectInviteDeleteResponse"
        }
      ]
  ProjectInvoiceGet:
    description: |-
      Download PDF invoice
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "string",
          "format": "binary"
        }
      ]
  ProjectInvoiceList:
    description: |-
      List project invoices
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "invoices"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "invoices": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "billing_group_name",
                  "currency",
                  "download_cookie",
                  "invoice_number",
                  "period_begin",
                  "period_end",
                  "state",
                  "total_inc_vat",
                  "total_vat_zero"
                ],
                "properties": {
                  "state": {
                    "type": "string",
                    "description": "Invoice state"
                  },
                  "currency": {
                    "enum": [
                      "AUD",
                      "CAD",
                      "CHF",
                      "DKK",
                      "EUR",
                      "GBP",
                      "NOK",
                      "SEK",
                      "USD"
                    ],
                    "type": "string",
                    "description": "Billing currency"
                  },
                  "period_end": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Period end"
                  },
                  "period_begin": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Period begin"
                  },
                  "total_inc_vat": {
                    "type": "string",
                    "description": "Total including taxes"
                  },
                  "invoice_number": {
                    "type": "string",
                    "description": "Invoice number"
                  },
                  "total_vat_zero": {
                    "type": "string",
                    "description": "Total excluding taxes"
                  },
                  "download_cookie": {
                    "type": "string",
                    "description": "Authentication cookie for downloads"
                  },
                  "billing_group_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Billing group name"
                  }
                }
              },
              "description": "List of project invoices"
            }
          },
          "description": "ProjectInvoiceListResponse"
        }
      ]
  ProjectKmsGetCA:
    description: |-
      Retrieve project CA certificate
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "certificate"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "certificate": {
              "type": "string",
              "description": "PEM encoded certificate"
            }
          },
          "description": "ProjectKmsGetCAResponse"
        }
      ]
  ProjectList:
    description: |-
      List projects
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "project_membership",
            "projects"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "projects": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "account_id",
                  "billing_address",
                  "billing_emails",
                  "billing_group_id",
                  "billing_group_name",
                  "country",
                  "country_code",
                  "default_cloud",
                  "estimated_balance",
                  "payment_method",
                  "project_name",
                  "vat_id"
                ],
                "properties": {
                  "city": {
                    "type": "string",
                    "maxLength": 512,
                    "description": "Address city"
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Address state"
                  },
                  "vat_id": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "EU VAT Identification Number"
                  },
                  "company": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Name of a company"
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Billing country"
                  },
                  "features": {
                    "type": "object",
                    "properties": {},
                    "description": "Feature flags"
                  },
                  "zip_code": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Address zip code"
                  },
                  "card_info": {
                    "type": "object",
                    "required": [
                      "brand",
                      "card_id",
                      "country",
                      "country_code",
                      "exp_month",
                      "exp_year",
                      "last4",
                      "name",
                      "user_email"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "Name on the credit card"
                      },
                      "brand": {
                        "type": "string",
                        "description": "Brand"
                      },
                      "last4": {
                        "type": "string",
                        "description": "Credit card last four digits"
                      },
                      "card_id": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Credit card ID"
                      },
                      "country": {
                        "type": "string",
                        "maxLength": 128,
                        "description": "Country"
                      },
                      "exp_year": {
                        "type": "integer",
                        "maximum": 2100,
                        "minimum": 2015,
                        "description": "Expiration year"
                      },
                      "exp_month": {
                        "type": "integer",
                        "maximum": 12,
                        "minimum": 1,
                        "description": "Expiration month"
                      },
                      "user_email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      },
                      "country_code": {
                        "type": "string",
                        "maxLength": 2,
                        "description": "Two letter ISO country code"
                      }
                    },
                    "description": "Credit card assigned to the project"
                  },
                  "tenant_id": {
                    "type": "string",
                    "description": "Tenant ID"
                  },
                  "account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  },
                  "tech_emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "email"
                      ],
                      "properties": {
                        "email": {
                          "type": "string",
                          "maxLength": 319,
                          "description": "User email address"
                        }
                      }
                    },
                    "maxItems": 10,
                    "description": "List of project billing email addresses"
                  },
                  "account_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Account name"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "Two letter ISO country code"
                  },
                  "project_name": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Project name"
                  },
                  "address_lines": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 16,
                    "description": "Address lines"
                  },
                  "default_cloud": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "Default cloud to use when launching services"
                  },
                  "billing_emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "email"
                      ],
                      "properties": {
                        "email": {
                          "type": "string",
                          "maxLength": 319,
                          "description": "User email address"
                        }
                      }
                    },
                    "maxItems": 10,
                    "description": "List of project billing email addresses"
                  },
                  "payment_method": {
                    "type": "string",
                    "description": "Payment method"
                  },
                  "billing_address": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "Project billing address"
                  },
                  "billing_currency": {
                    "enum": [
                      "AUD",
                      "CAD",
                      "CHF",
                      "DKK",
                      "EUR",
                      "GBP",
                      "NOK",
                      "SEK",
                      "USD"
                    ],
                    "type": "string",
                    "description": "Billing currency"
                  },
                  "billing_group_id": {
                    "type": "string",
                    "maxLength": 36,
                    "minLength": 36,
                    "description": "Billing group ID"
                  },
                  "available_credits": {
                    "type": "string",
                    "description": "Available credits"
                  },
                  "estimated_balance": {
                    "type": "string",
                    "description": "Estimated balance"
                  },
                  "billing_extra_text": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number"
                  },
                  "billing_group_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Billing group name"
                  },
                  "trial_expiration_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Trial expiration time (ISO 8601)"
                  }
                }
              },
              "description": "List of projects"
            },
            "project_membership": {
              "type": "object",
              "properties": {
                "ANY": {
                  "enum": [
                    "admin",
                    "developer",
                    "operator",
                    "read_only"
                  ],
                  "type": "string",
                  "description": "Project member type"
                }
              },
              "description": "Project membership and type of membership"
            },
            "project_memberships": {
              "type": "object",
              "properties": {
                "ANY": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of project member type"
                }
              },
              "description": "List of project membership and type of membership"
            }
          },
          "description": "ProjectListResponse"
        }
      ]
  ProjectTicketCreate:
    description: |-
      Create a support ticket
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "description",
            "severity",
            "title"
          ],
          "properties": {
            "title": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1,
              "description": "Short description"
            },
            "severity": {
              "enum": [
                "critical",
                "high",
                "low"
              ],
              "type": "string",
              "description": "Severity level"
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 1,
              "description": "Longer description"
            },
            "service_name": {
              "type": "string",
              "maxLength": 63,
              "description": "Service name"
            }
          },
          "description": "ProjectTicketCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "ticket"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "ticket": {
              "type": "object",
              "required": [
                "create_time",
                "description",
                "followers",
                "project_name",
                "service_name",
                "severity",
                "state",
                "submitter",
                "ticket_id",
                "title",
                "update_time",
                "user_email",
                "user_real_name"
              ],
              "properties": {
                "state": {
                  "enum": [
                    "closed",
                    "open"
                  ],
                  "type": "string",
                  "description": "Is ticket open or closed"
                },
                "title": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 1,
                  "description": "Short description"
                },
                "severity": {
                  "enum": [
                    "critical",
                    "high",
                    "low"
                  ],
                  "type": "string",
                  "description": "Severity level"
                },
                "followers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "real_name",
                      "user_email",
                      "user_id"
                    ],
                    "properties": {
                      "user_id": {
                        "type": "string",
                        "description": "User ID"
                      },
                      "real_name": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "User real name"
                      },
                      "user_email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      }
                    }
                  },
                  "description": "Ticket followers"
                },
                "following": {
                  "type": "boolean",
                  "description": "Whether the current user is following this ticket"
                },
                "submitter": {
                  "type": "object",
                  "required": [
                    "real_name",
                    "user_email",
                    "user_id"
                  ],
                  "properties": {
                    "user_id": {
                      "type": "string",
                      "description": "User ID"
                    },
                    "real_name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "User real name"
                    },
                    "user_email": {
                      "type": "string",
                      "maxLength": 319,
                      "description": "User email address"
                    }
                  },
                  "description": "User information"
                },
                "ticket_id": {
                  "type": "string",
                  "description": "Ticket ID"
                },
                "user_email": {
                  "type": "string",
                  "maxLength": 319,
                  "description": "User email address"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Created timestamp, ISO 8601 format"
                },
                "description": {
                  "type": "string",
                  "maxLength": 2000,
                  "minLength": 1,
                  "description": "Longer description"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Update timestamp, ISO 8601 format"
                },
                "project_name": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Project name"
                },
                "service_name": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Service name"
                },
                "user_real_name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "User real name"
                }
              },
              "description": "Support ticket"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ProjectTicketCreateResponse"
        }
      ]
  ProjectTicketInvite:
    description: |-
      Invite a user to a ticket
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "user_email"
          ],
          "properties": {
            "user_email": {
              "type": "string",
              "maxLength": 319,
              "description": "User email address"
            }
          },
          "description": "ProjectTicketInviteRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "message"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ProjectTicketInviteResponse"
        }
      ]
  ProjectTicketList:
    description: |-
      List support tickets
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "tickets"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "tickets": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "create_time",
                  "description",
                  "followers",
                  "project_name",
                  "service_name",
                  "severity",
                  "state",
                  "submitter",
                  "ticket_id",
                  "title",
                  "update_time",
                  "user_email",
                  "user_real_name"
                ],
                "properties": {
                  "state": {
                    "enum": [
                      "closed",
                      "open"
                    ],
                    "type": "string",
                    "description": "Is ticket open or closed"
                  },
                  "title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "description": "Short description"
                  },
                  "severity": {
                    "enum": [
                      "critical",
                      "high",
                      "low"
                    ],
                    "type": "string",
                    "description": "Severity level"
                  },
                  "followers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "real_name",
                        "user_email",
                        "user_id"
                      ],
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "description": "User ID"
                        },
                        "real_name": {
                          "type": "string",
                          "maxLength": 256,
                          "description": "User real name"
                        },
                        "user_email": {
                          "type": "string",
                          "maxLength": 319,
                          "description": "User email address"
                        }
                      }
                    },
                    "description": "Ticket followers"
                  },
                  "following": {
                    "type": "boolean",
                    "description": "Whether the current user is following this ticket"
                  },
                  "submitter": {
                    "type": "object",
                    "required": [
                      "real_name",
                      "user_email",
                      "user_id"
                    ],
                    "properties": {
                      "user_id": {
                        "type": "string",
                        "description": "User ID"
                      },
                      "real_name": {
                        "type": "string",
                        "maxLength": 256,
                        "description": "User real name"
                      },
                      "user_email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      }
                    },
                    "description": "User information"
                  },
                  "ticket_id": {
                    "type": "string",
                    "description": "Ticket ID"
                  },
                  "user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Created timestamp, ISO 8601 format"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 2000,
                    "minLength": 1,
                    "description": "Longer description"
                  },
                  "update_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Update timestamp, ISO 8601 format"
                  },
                  "project_name": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Project name"
                  },
                  "service_name": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Service name"
                  },
                  "user_real_name": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "User real name"
                  }
                }
              },
              "description": "List of tickets"
            }
          },
          "description": "ProjectTicketListResponse"
        }
      ]
  ProjectUpdate:
    description: |-
      Update project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "city": {
              "type": "string",
              "maxLength": 512,
              "description": "Address city"
            },
            "cloud": {
              "type": "string",
              "maxLength": 256,
              "description": "Target cloud"
            },
            "state": {
              "type": "string",
              "maxLength": 128,
              "description": "Address state"
            },
            "vat_id": {
              "type": "string",
              "maxLength": 64,
              "description": "EU VAT Identification Number"
            },
            "card_id": {
              "type": "string",
              "maxLength": 64,
              "description": "Credit card ID"
            },
            "company": {
              "type": "string",
              "maxLength": 128,
              "description": "Name of a company"
            },
            "zip_code": {
              "type": "string",
              "maxLength": 32,
              "description": "Address zip code"
            },
            "account_id": {
              "type": "string",
              "maxLength": 36,
              "description": "Account ID"
            },
            "tech_emails": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  }
                }
              },
              "maxItems": 10,
              "description": "List of project billing email addresses"
            },
            "country_code": {
              "type": "string",
              "maxLength": 2,
              "description": "Two letter country code for billing country"
            },
            "project_name": {
              "type": "string",
              "maxLength": 63,
              "description": "Project name"
            },
            "address_lines": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 16,
              "description": "Address lines"
            },
            "billing_emails": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  }
                }
              },
              "maxItems": 10,
              "description": "List of project billing email addresses"
            },
            "billing_address": {
              "type": "string",
              "maxLength": 1000,
              "description": "Project billing address"
            },
            "billing_currency": {
              "enum": [
                "AUD",
                "CAD",
                "CHF",
                "DKK",
                "EUR",
                "GBP",
                "NOK",
                "SEK",
                "USD"
              ],
              "type": "string",
              "description": "Billing currency"
            },
            "billing_extra_text": {
              "type": "string",
              "maxLength": 1000,
              "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number"
            },
            "add_account_owners_admin_access": {
              "type": "boolean",
              "description": "If account_id is set, grant account owner team admin access to this project"
            }
          },
          "description": "ProjectUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "project"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "project": {
              "type": "object",
              "required": [
                "account_id",
                "billing_address",
                "billing_emails",
                "billing_group_id",
                "billing_group_name",
                "country",
                "country_code",
                "default_cloud",
                "estimated_balance",
                "payment_method",
                "project_name",
                "vat_id"
              ],
              "properties": {
                "city": {
                  "type": "string",
                  "maxLength": 512,
                  "description": "Address city"
                },
                "state": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Address state"
                },
                "vat_id": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "EU VAT Identification Number"
                },
                "company": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Name of a company"
                },
                "country": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Billing country"
                },
                "features": {
                  "type": "object",
                  "properties": {},
                  "description": "Feature flags"
                },
                "zip_code": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Address zip code"
                },
                "card_info": {
                  "type": "object",
                  "required": [
                    "brand",
                    "card_id",
                    "country",
                    "country_code",
                    "exp_month",
                    "exp_year",
                    "last4",
                    "name",
                    "user_email"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "Name on the credit card"
                    },
                    "brand": {
                      "type": "string",
                      "description": "Brand"
                    },
                    "last4": {
                      "type": "string",
                      "description": "Credit card last four digits"
                    },
                    "card_id": {
                      "type": "string",
                      "maxLength": 64,
                      "description": "Credit card ID"
                    },
                    "country": {
                      "type": "string",
                      "maxLength": 128,
                      "description": "Country"
                    },
                    "exp_year": {
                      "type": "integer",
                      "maximum": 2100,
                      "minimum": 2015,
                      "description": "Expiration year"
                    },
                    "exp_month": {
                      "type": "integer",
                      "maximum": 12,
                      "minimum": 1,
                      "description": "Expiration month"
                    },
                    "user_email": {
                      "type": "string",
                      "maxLength": 319,
                      "description": "User email address"
                    },
                    "country_code": {
                      "type": "string",
                      "maxLength": 2,
                      "description": "Two letter ISO country code"
                    }
                  },
                  "description": "Credit card assigned to the project"
                },
                "tenant_id": {
                  "type": "string",
                  "description": "Tenant ID"
                },
                "account_id": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Account ID"
                },
                "tech_emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "email"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      }
                    }
                  },
                  "maxItems": 10,
                  "description": "List of project billing email addresses"
                },
                "account_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Account name"
                },
                "country_code": {
                  "type": "string",
                  "maxLength": 2,
                  "description": "Two letter ISO country code"
                },
                "project_name": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Project name"
                },
                "address_lines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 16,
                  "description": "Address lines"
                },
                "default_cloud": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Default cloud to use when launching services"
                },
                "billing_emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "email"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      }
                    }
                  },
                  "maxItems": 10,
                  "description": "List of project billing email addresses"
                },
                "payment_method": {
                  "type": "string",
                  "description": "Payment method"
                },
                "billing_address": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Project billing address"
                },
                "billing_currency": {
                  "enum": [
                    "AUD",
                    "CAD",
                    "CHF",
                    "DKK",
                    "EUR",
                    "GBP",
                    "NOK",
                    "SEK",
                    "USD"
                  ],
                  "type": "string",
                  "description": "Billing currency"
                },
                "billing_group_id": {
                  "type": "string",
                  "maxLength": 36,
                  "minLength": 36,
                  "description": "Billing group ID"
                },
                "available_credits": {
                  "type": "string",
                  "description": "Available credits"
                },
                "estimated_balance": {
                  "type": "string",
                  "description": "Estimated balance"
                },
                "billing_extra_text": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number"
                },
                "billing_group_name": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Billing group name"
                },
                "trial_expiration_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Trial expiration time (ISO 8601)"
                }
              },
              "description": "Project information"
            }
          },
          "description": "ProjectUpdateResponse"
        }
      ]
  ProjectUserList:
    description: |-
      List users with access to the project. May contain same user multiple times if they belong to multiple teams associated to the project.
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "invitations",
            "users"
          ],
          "properties": {
            "users": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "auth",
                  "billing_contact",
                  "create_time",
                  "member_type",
                  "team_id",
                  "team_name",
                  "user_email"
                ],
                "properties": {
                  "auth": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of user's required authentication methods"
                  },
                  "team_id": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Team ID"
                  },
                  "real_name": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "User real name"
                  },
                  "team_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Team name"
                  },
                  "user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "member_type": {
                    "enum": [
                      "admin",
                      "developer",
                      "operator",
                      "read_only"
                    ],
                    "type": "string",
                    "description": "Project member type"
                  },
                  "billing_contact": {
                    "type": "boolean",
                    "description": "Set for project's billing contacts"
                  }
                }
              },
              "description": "List of project's users"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "invitations": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "invite_time",
                  "invited_user_email",
                  "inviting_user_email",
                  "member_type"
                ],
                "properties": {
                  "invite_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "member_type": {
                    "enum": [
                      "admin",
                      "developer",
                      "operator",
                      "read_only"
                    ],
                    "type": "string",
                    "description": "Project member type"
                  },
                  "invited_user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  },
                  "inviting_user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  }
                }
              },
              "description": "List of pending invitations"
            }
          },
          "description": "ProjectUserListResponse"
        }
      ]
  ProjectUserRemove:
    description: |-
      Remove user from the project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ProjectUserRemoveResponse"
        }
      ]
  ProjectUserUpdate:
    description: |-
      Update a project user
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "member_type"
          ],
          "properties": {
            "member_type": {
              "enum": [
                "admin",
                "developer",
                "operator",
                "read_only"
              ],
              "type": "string",
              "description": "Project member type"
            }
          },
          "description": "ProjectUserUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ProjectUserUpdateResponse"
        }
      ]
  ServiceAlertsList:
    description: |-
      List active alerts for service
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "alerts"
          ],
          "properties": {
            "alerts": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "create_time",
                  "event",
                  "project_name",
                  "severity"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "Name of the alerting event"
                  },
                  "severity": {
                    "type": "string",
                    "description": "Severity of the event"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Event creation timestamp (ISO 8601)"
                  },
                  "project_name": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Project name"
                  },
                  "service_name": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Service name"
                  },
                  "service_type": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "Service type code"
                  }
                }
              },
              "description": "List of active alerts for the service"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceAlertsListResponse"
        }
      ]
  ServiceCancelQuery:
    description: |-
      Cancel specified query from service
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "pid": {
              "type": "integer",
              "minimum": 0,
              "description": "Database server connection ID"
            },
            "terminate": {
              "type": "boolean",
              "description": "Request immediate termination instead of soft cancel"
            }
          },
          "description": "ServiceCancelQueryRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "success"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "success": {
              "type": "boolean",
              "description": "Status reported by the database server"
            }
          },
          "description": "ServiceCancelQueryResponse"
        }
      ]
  ServiceCreate:
    description: |-
      Create a service
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "plan",
            "service_name",
            "service_type"
          ],
          "properties": {
            "plan": {
              "type": "string",
              "maxLength": 128,
              "description": "Subscription plan"
            },
            "cloud": {
              "type": "string",
              "maxLength": 256,
              "description": "Target cloud"
            },
            "group_name": {
              "type": "string",
              "maxLength": 256,
              "description": "Service group name (DEPRECATED: do not use)"
            },
            "maintenance": {
              "type": "object",
              "properties": {
                "dow": {
                  "enum": [
                    "monday",
                    "tuesday",
                    "wednesday",
                    "thursday",
                    "friday",
                    "saturday",
                    "sunday",
                    "never"
                  ],
                  "type": "string",
                  "description": "Day of week for installing updates"
                },
                "time": {
                  "type": "string",
                  "maxLength": 8,
                  "minLength": 8,
                  "description": "Time for installing updates, UTC"
                }
              },
              "description": "Automatic maintenance settings"
            },
            "user_config": {
              "type": "object",
              "properties": {},
              "description": "Service type-specific settings"
            },
            "service_name": {
              "type": "string",
              "maxLength": 63,
              "description": "Service name"
            },
            "service_type": {
              "type": "string",
              "maxLength": 64,
              "description": "Service type code"
            },
            "project_vpc_id": {
              "type": "string",
              "maxLength": 36,
              "minLength": 36,
              "description": "Project VPC ID"
            },
            "service_integrations": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "integration_type"
                ],
                "properties": {
                  "user_config": {
                    "type": "object",
                    "properties": {},
                    "description": "Service type-specific settings"
                  },
                  "dest_service": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Destination service name"
                  },
                  "source_service": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Source service name"
                  },
                  "dest_endpoint_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Integration destination endpoint ID"
                  },
                  "integration_type": {
                    "enum": [
                      "alertmanager",
                      "dashboard",
                      "datadog",
                      "datasource",
                      "external_aws_cloudwatch_logs",
                      "external_aws_cloudwatch_metrics",
                      "external_elasticsearch_logs",
                      "external_google_cloud_logging",
                      "internal_connectivity",
                      "jolokia",
                      "kafka_connect",
                      "kafka_logs",
                      "kafka_mirrormaker",
                      "logs",
                      "m3aggregator",
                      "m3coordinator",
                      "metrics",
                      "mirrormaker",
                      "prometheus",
                      "read_replica",
                      "rsyslog",
                      "schema_registry_proxy",
                      "signalfx"
                    ],
                    "type": "string",
                    "description": "Service integration type"
                  },
                  "source_endpoint_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Integration source endpoint ID"
                  }
                }
              },
              "maxItems": 64,
              "description": "Service integrations to enable for the service. Some integration types affect how a service is created and they must be provided as part of the creation call instead of being defined later."
            },
            "termination_protection": {
              "type": "boolean",
              "description": "Service is protected against termination and powering off"
            }
          },
          "description": "ServiceCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service": {
              "type": "object",
              "required": [
                "cloud_name",
                "create_time",
                "group_list",
                "plan",
                "project_vpc_id",
                "service_integrations",
                "service_name",
                "service_type",
                "service_uri",
                "state",
                "termination_protection",
                "update_time",
                "user_config"
              ],
              "properties": {
                "acl": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "permission",
                      "topic",
                      "username"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID"
                      },
                      "topic": {
                        "type": "string",
                        "maxLength": 249,
                        "minLength": 1,
                        "description": "Topic name pattern"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "description": "Username"
                      },
                      "permission": {
                        "enum": [
                          "admin",
                          "read",
                          "readwrite",
                          "write"
                        ],
                        "type": "string",
                        "description": "Kafka permission"
                      }
                    }
                  },
                  "description": "List of Kafka ACL entries"
                },
                "plan": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Subscription plan"
                },
                "state": {
                  "enum": [
                    "POWEROFF",
                    "REBALANCING",
                    "REBUILDING",
                    "RUNNING"
                  ],
                  "type": "string",
                  "description": "State of the service"
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "password",
                      "type",
                      "username"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Account type"
                      },
                      "password": {
                        "type": "string",
                        "description": "Account password. A null value indicates a user overridden password."
                      },
                      "username": {
                        "type": "string",
                        "description": "Account username"
                      },
                      "access_key": {
                        "type": "string",
                        "description": "Access key for TLS client authentication"
                      },
                      "access_cert": {
                        "type": "string",
                        "description": "Access certificate for TLS client authentication"
                      },
                      "access_control": {
                        "type": "object",
                        "properties": {
                          "m3_group": {
                            "type": "string",
                            "maxLength": 16,
                            "description": "M3 access group to associate users with"
                          },
                          "redis_acl_keys": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Key access rules"
                          },
                          "redis_acl_channels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Permitted pub/sub channel patterns"
                          },
                          "redis_acl_commands": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Rules for individual commands"
                          },
                          "redis_acl_categories": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Command category rules"
                          }
                        },
                        "description": "Service specific access controls for user"
                      },
                      "authentication": {
                        "enum": [
                          "caching_sha2_password",
                          "mysql_native_password"
                        ],
                        "type": "string",
                        "description": "Authentication details"
                      },
                      "access_cert_not_valid_after_time": {
                        "type": "string",
                        "description": "Access certificate validity end time (ISO8601)"
                      }
                    }
                  },
                  "description": "List of service users"
                },
                "topics": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "cleanup_policy",
                      "min_insync_replicas",
                      "partitions",
                      "replication",
                      "retention_bytes",
                      "retention_hours",
                      "topic_name"
                    ],
                    "properties": {
                      "state": {
                        "enum": [
                          "ACTIVE",
                          "CONFIGURING",
                          "DELETING"
                        ],
                        "type": "string",
                        "description": "Topic state"
                      },
                      "partitions": {
                        "type": "integer",
                        "maximum": 1000000,
                        "minimum": 1,
                        "description": "Number of partitions"
                      },
                      "topic_name": {
                        "type": "string",
                        "maxLength": 249,
                        "minLength": 1,
                        "description": "Topic name"
                      },
                      "replication": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Number of replicas"
                      },
                      "cleanup_policy": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "cleanup.policy"
                      },
                      "retention_bytes": {
                        "type": "integer",
                        "description": "retention.bytes"
                      },
                      "retention_hours": {
                        "type": "integer",
                        "maximum": 2562047788015,
                        "description": "Retention period (hours)"
                      },
                      "min_insync_replicas": {
                        "type": "integer",
                        "maximum": 7,
                        "minimum": 1,
                        "description": "min.insync.replicas"
                      }
                    }
                  },
                  "description": "Kafka topics. DEPRECATED: Use /project/$project/service/$service/topic instead"
                },
                "backups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "backup_name",
                      "backup_time",
                      "data_size"
                    ],
                    "properties": {
                      "data_size": {
                        "type": "integer",
                        "description": "Backup's original size before compression"
                      },
                      "backup_name": {
                        "type": "string",
                        "description": "Internal name of this backup"
                      },
                      "backup_time": {
                        "type": "string",
                        "maxLength": 36,
                        "description": "Backup timestamp (ISO 8601)"
                      }
                    }
                  },
                  "description": "List of backups for the service"
                },
                "features": {
                  "type": "object",
                  "properties": {},
                  "description": "Feature flags"
                },
                "metadata": {
                  "type": "object",
                  "properties": {},
                  "description": "Service type specific metadata"
                },
                "cloud_name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Target cloud"
                },
                "components": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "component",
                      "host",
                      "port",
                      "route",
                      "usage"
                    ],
                    "properties": {
                      "ssl": {
                        "type": "boolean",
                        "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted andthis property is only included for service components that may disable encryption."
                      },
                      "host": {
                        "type": "string",
                        "description": "DNS name for connecting to the service component"
                      },
                      "path": {
                        "type": "string",
                        "description": "Path component of the service URL (useful only if service component is HTTP or HTTPS endpoint)"
                      },
                      "port": {
                        "type": "integer",
                        "maximum": 65535,
                        "minimum": 0,
                        "description": "Port number for connecting to the service component"
                      },
                      "route": {
                        "enum": [
                          "dynamic",
                          "public",
                          "private",
                          "privatelink"
                        ],
                        "type": "string",
                        "description": "Network access route"
                      },
                      "usage": {
                        "enum": [
                          "primary",
                          "replica"
                        ],
                        "type": "string",
                        "description": "DNS usage name"
                      },
                      "component": {
                        "type": "string",
                        "description": "Service component name"
                      },
                      "kafka_authentication_method": {
                        "enum": [
                          "certificate",
                          "sasl"
                        ],
                        "type": "string",
                        "description": "Kafka authentication method. This is a value specific to the 'kafka' service component"
                      }
                    }
                  },
                  "description": "Service component information objects"
                },
                "group_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of service groups the service belongs to. This field is deprecated. It is always set to single element with value 'default'"
                },
                "node_count": {
                  "type": "integer",
                  "description": "Number of service nodes in the active plan"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Service creation timestamp (ISO 8601)"
                },
                "maintenance": {
                  "type": "object",
                  "required": [
                    "dow",
                    "time",
                    "updates"
                  ],
                  "properties": {
                    "dow": {
                      "enum": [
                        "monday",
                        "tuesday",
                        "wednesday",
                        "thursday",
                        "friday",
                        "saturday",
                        "sunday",
                        "never"
                      ],
                      "type": "string",
                      "description": "Day of week for installing updates"
                    },
                    "time": {
                      "type": "string",
                      "maxLength": 8,
                      "minLength": 8,
                      "description": "Time for installing updates, UTC"
                    },
                    "updates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "deadline": {
                            "type": "string",
                            "description": "Deadline for installing the update"
                          },
                          "start_at": {
                            "type": "string",
                            "description": "The time when the update will be automatically applied"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the update"
                          },
                          "start_after": {
                            "type": "string",
                            "description": "The earliest time the update will be automatically applied"
                          }
                        }
                      },
                      "description": "List of updates waiting to be installed"
                    }
                  },
                  "description": "Automatic maintenance settings"
                },
                "node_states": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "state"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the service node"
                      },
                      "role": {
                        "enum": [
                          "master",
                          "standby",
                          "read-replica"
                        ],
                        "type": "string",
                        "description": "Role of this node. Only returned for a subset of service types"
                      },
                      "state": {
                        "enum": [
                          "leaving",
                          "running",
                          "setting_up_vm",
                          "syncing_data",
                          "unknown"
                        ],
                        "type": "string",
                        "description": "Current state of the service node"
                      },
                      "progress_updates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "completed",
                            "phase"
                          ],
                          "properties": {
                            "max": {
                              "type": "integer",
                              "description": "Maximum progress value for this phase. May be missing or null. May change."
                            },
                            "min": {
                              "type": "integer",
                              "description": "Minimum progress value for this phase. May be missing or null."
                            },
                            "unit": {
                              "enum": [
                                "binlogs",
                                "bytes_compressed",
                                "bytes_uncompressed",
                                "wal_lsn"
                              ],
                              "type": "string",
                              "description": "Unit for current/min/max values. New units may be added. If null should be treated as generic unit"
                            },
                            "phase": {
                              "enum": [
                                "prepare",
                                "basebackup",
                                "stream",
                                "finalize"
                              ],
                              "type": "string",
                              "description": "Key identifying this phase"
                            },
                            "current": {
                              "type": "integer",
                              "description": "Current progress for this phase. May be missing or null."
                            },
                            "completed": {
                              "type": "boolean",
                              "description": "Indicates whether this phase has been completed or not"
                            }
                          }
                        },
                        "description": "Extra information regarding the progress for current state"
                      }
                    }
                  },
                  "description": "State of individual service nodes"
                },
                "service_uri": {
                  "type": "string",
                  "description": "URI for connecting to the service (may be null)"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Service last update timestamp (ISO 8601)"
                },
                "user_config": {
                  "type": "object",
                  "properties": {},
                  "description": "Service type-specific settings"
                },
                "service_name": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Service name"
                },
                "service_type": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Service type code"
                },
                "disk_space_mb": {
                  "type": "number",
                  "description": "Megabytes of disk space for data storage"
                },
                "node_cpu_count": {
                  "type": "integer",
                  "description": "Number of CPUs for each node"
                },
                "node_memory_mb": {
                  "type": "number",
                  "description": "Megabytes of memory for each node"
                },
                "project_vpc_id": {
                  "type": "string",
                  "maxLength": 36,
                  "minLength": 36,
                  "description": "Project VPC ID"
                },
                "connection_info": {
                  "type": "object",
                  "properties": {},
                  "description": "Service-specific connection information properties"
                },
                "connection_pools": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "connection_uri",
                      "database",
                      "pool_mode",
                      "pool_name",
                      "pool_size",
                      "username"
                    ],
                    "properties": {
                      "database": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Service database name"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Pool username"
                      },
                      "pool_mode": {
                        "enum": [
                          "session",
                          "transaction",
                          "statement"
                        ],
                        "type": "string",
                        "description": "PGBouncer pool mode"
                      },
                      "pool_name": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "Connection pool name"
                      },
                      "pool_size": {
                        "type": "integer",
                        "maximum": 10000,
                        "minimum": 1,
                        "description": "Size of PGBouncer's PostgreSQL side connection pool"
                      },
                      "connection_uri": {
                        "type": "string",
                        "description": "Connection URI for the DB pool"
                      }
                    }
                  },
                  "description": "PostgreSQL PGBouncer connection pools"
                },
                "cloud_description": {
                  "type": "string",
                  "description": "Cloud provider and location"
                },
                "service_uri_params": {
                  "type": "object",
                  "properties": {},
                  "description": "service_uri parameterized into key-value pairs"
                },
                "service_integrations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "active",
                      "description",
                      "dest_project",
                      "dest_service_type",
                      "enabled",
                      "integration_type",
                      "service_integration_id",
                      "source_project",
                      "source_service",
                      "source_service_type"
                    ],
                    "properties": {
                      "active": {
                        "type": "boolean",
                        "description": "True when integration is active"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "True when integration is enabled"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the integration"
                      },
                      "user_config": {
                        "type": "object",
                        "properties": {},
                        "description": "Service integration settings"
                      },
                      "dest_project": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Project name"
                      },
                      "dest_service": {
                        "type": "string",
                        "description": "Destination service name"
                      },
                      "dest_endpoint": {
                        "type": "string",
                        "description": "Destination endpoint name"
                      },
                      "source_project": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Project name"
                      },
                      "source_service": {
                        "type": "string",
                        "description": "Source service name"
                      },
                      "source_endpoint": {
                        "type": "string",
                        "description": "Source endpoint name"
                      },
                      "dest_endpoint_id": {
                        "type": "string",
                        "description": "Destination endpoint id"
                      },
                      "integration_type": {
                        "type": "string",
                        "description": "Type of the integration"
                      },
                      "dest_service_type": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Service type code"
                      },
                      "integration_status": {
                        "type": "object",
                        "properties": {},
                        "description": "Integration status"
                      },
                      "source_endpoint_id": {
                        "type": "string",
                        "description": "Source endpoint ID"
                      },
                      "source_service_type": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Service type code"
                      },
                      "service_integration_id": {
                        "type": "string",
                        "description": "Integration ID"
                      }
                    }
                  },
                  "description": "Integrations with other services"
                },
                "service_notifications": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "level",
                      "message",
                      "metadata",
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "enum": [
                          "service_end_of_life",
                          "service_powered_off_removal"
                        ],
                        "type": "string",
                        "description": "Notification type"
                      },
                      "level": {
                        "enum": [
                          "notice",
                          "warning"
                        ],
                        "type": "string",
                        "description": "Notification level"
                      },
                      "message": {
                        "type": "string",
                        "maxLength": 1024,
                        "description": "Human notification message"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "service_end_of_life_time": {
                            "type": "string",
                            "maxLength": 36,
                            "description": "Timestamp in ISO 8601 format, always in UTC"
                          },
                          "end_of_life_help_article_url": {
                            "type": "string",
                            "description": "Link to the help article"
                          }
                        },
                        "description": "Notification metadata"
                      }
                    }
                  },
                  "description": "Service notifications"
                },
                "termination_protection": {
                  "type": "boolean",
                  "description": "Service is protected against termination and powering off"
                },
                "service_type_description": {
                  "type": "string",
                  "description": "Single line description of the service"
                }
              },
              "description": "Service information"
            }
          },
          "description": "ServiceCreateResponse"
        }
      ]
  ServiceDatabaseCreate:
    description: |-
      Create a new logical database for service
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "database"
          ],
          "properties": {
            "database": {
              "type": "string",
              "maxLength": 40,
              "description": "Service database name"
            },
            "lc_ctype": {
              "type": "string",
              "maxLength": 128,
              "description": "Default character classification (LC_CTYPE) of the database"
            },
            "lc_collate": {
              "type": "string",
              "maxLength": 128,
              "description": "Default string sort order (LC_COLLATE) of the database"
            }
          },
          "description": "ServiceDatabaseCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceDatabaseCreateResponse"
        }
      ]
  ServiceDatabaseDelete:
    description: |-
      Delete a logical database
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceDatabaseDeleteResponse"
        }
      ]
  ServiceDatabaseList:
    description: |-
      List service databases
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "databases"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "databases": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "database_name"
                ],
                "properties": {
                  "database_name": {
                    "type": "string",
                    "description": "Database name or ID"
                  }
                }
              },
              "description": "List of databases"
            }
          },
          "description": "ServiceDatabaseListResponse"
        }
      ]
  ServiceDelete:
    description: |-
      Terminate a service
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceDeleteResponse"
        }
      ]
  ServiceEnableWrites:
    description: |-
      Temporarily enable writes for a service in read-only mode. Will only work if disk usage is lower than 99.0%
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "message"
          ],
          "properties": {
            "until": {
              "type": "string",
              "description": "Writes enabled until"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceEnableWritesResponse"
        }
      ]
  ServiceEsAclGet:
    description: |-
      Show Elasticsearch ACL configuration
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "elasticsearch_acl_config"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "elasticsearch_acl_config": {
              "type": "object",
              "required": [
                "acls",
                "enabled"
              ],
              "properties": {
                "acls": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "rules",
                      "username"
                    ],
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "index",
                            "permission"
                          ],
                          "properties": {
                            "index": {
                              "type": "string",
                              "maxLength": 249,
                              "minLength": 1,
                              "description": "Elasticsearch index pattern"
                            },
                            "permission": {
                              "enum": [
                                "deny",
                                "admin",
                                "read",
                                "readwrite",
                                "write"
                              ],
                              "type": "string",
                              "description": "Elasticsearch permission"
                            }
                          }
                        },
                        "maxItems": 256,
                        "description": "Elasticsearch rules"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "description": "Username"
                      }
                    }
                  },
                  "maxItems": 512,
                  "description": "List of Elasticsearch ACLs"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access."
                }
              },
              "description": "Elasticsearch ACL configuration"
            }
          },
          "description": "ServiceEsAclGetResponse"
        }
      ]
  ServiceEsAclSet:
    description: |-
      Set Elasticsearch ACL configuration
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "elasticsearch_acl_config"
          ],
          "properties": {
            "elasticsearch_acl_config": {
              "type": "object",
              "required": [
                "acls",
                "enabled"
              ],
              "properties": {
                "acls": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "rules",
                      "username"
                    ],
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "index",
                            "permission"
                          ],
                          "properties": {
                            "index": {
                              "type": "string",
                              "maxLength": 249,
                              "minLength": 1,
                              "description": "Elasticsearch index pattern"
                            },
                            "permission": {
                              "enum": [
                                "deny",
                                "admin",
                                "read",
                                "readwrite",
                                "write"
                              ],
                              "type": "string",
                              "description": "Elasticsearch permission"
                            }
                          }
                        },
                        "maxItems": 256,
                        "description": "Elasticsearch rules"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "description": "Username"
                      }
                    }
                  },
                  "maxItems": 512,
                  "description": "List of Elasticsearch ACLs"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access."
                }
              },
              "description": "Elasticsearch ACL configuration"
            }
          },
          "description": "ServiceEsAclSetRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "elasticsearch_acl_config"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "elasticsearch_acl_config": {
              "type": "object",
              "required": [
                "acls",
                "enabled"
              ],
              "properties": {
                "acls": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "rules",
                      "username"
                    ],
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "index",
                            "permission"
                          ],
                          "properties": {
                            "index": {
                              "type": "string",
                              "maxLength": 249,
                              "minLength": 1,
                              "description": "Elasticsearch index pattern"
                            },
                            "permission": {
                              "enum": [
                                "deny",
                                "admin",
                                "read",
                                "readwrite",
                                "write"
                              ],
                              "type": "string",
                              "description": "Elasticsearch permission"
                            }
                          }
                        },
                        "maxItems": 256,
                        "description": "Elasticsearch rules"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "description": "Username"
                      }
                    }
                  },
                  "maxItems": 512,
                  "description": "List of Elasticsearch ACLs"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access."
                }
              },
              "description": "Elasticsearch ACL configuration"
            }
          },
          "description": "ServiceEsAclSetResponse"
        }
      ]
  ServiceEsAclUpdate:
    description: |-
      Update Elasticsearch ACL configuration
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "elasticsearch_acl_config"
          ],
          "properties": {
            "elasticsearch_acl_config": {
              "type": "object",
              "properties": {
                "acls": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "rules",
                      "username"
                    ],
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "index",
                            "permission"
                          ],
                          "properties": {
                            "index": {
                              "type": "string",
                              "maxLength": 249,
                              "minLength": 1,
                              "description": "Elasticsearch index pattern"
                            },
                            "permission": {
                              "enum": [
                                "deny",
                                "admin",
                                "read",
                                "readwrite",
                                "write"
                              ],
                              "type": "string",
                              "description": "Elasticsearch permission"
                            }
                          }
                        },
                        "maxItems": 256,
                        "description": "Elasticsearch rules"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "description": "Username"
                      }
                    }
                  },
                  "maxItems": 512,
                  "description": "List of Elasticsearch ACLs"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access."
                }
              },
              "description": "Elasticsearch ACL configuration"
            }
          },
          "description": "ServiceEsAclUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "elasticsearch_acl_config"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "elasticsearch_acl_config": {
              "type": "object",
              "required": [
                "acls",
                "enabled"
              ],
              "properties": {
                "acls": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "rules",
                      "username"
                    ],
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "index",
                            "permission"
                          ],
                          "properties": {
                            "index": {
                              "type": "string",
                              "maxLength": 249,
                              "minLength": 1,
                              "description": "Elasticsearch index pattern"
                            },
                            "permission": {
                              "enum": [
                                "deny",
                                "admin",
                                "read",
                                "readwrite",
                                "write"
                              ],
                              "type": "string",
                              "description": "Elasticsearch permission"
                            }
                          }
                        },
                        "maxItems": 256,
                        "description": "Elasticsearch rules"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "description": "Username"
                      }
                    }
                  },
                  "maxItems": 512,
                  "description": "List of Elasticsearch ACLs"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Enable Elasticsearch ACLs. When disabled authenticated service users have unrestricted access."
                }
              },
              "description": "Elasticsearch ACL configuration"
            }
          },
          "description": "ServiceEsAclUpdateResponse"
        }
      ]
  ServiceEsIndexDelete:
    description: |-
      Delete an Elasticsearch index
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceEsIndexDeleteResponse"
        }
      ]
  ServiceEsIndexList:
    description: |-
      List Elasticsearch indexes
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "indexes"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "indexes": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "create_time",
                  "index_name",
                  "number_of_replicas",
                  "number_of_shards"
                ],
                "properties": {
                  "docs": {
                    "type": "integer",
                    "description": "Number of documents in index. -1 means not available."
                  },
                  "size": {
                    "type": "integer",
                    "description": "Index size in bytes. -1 means not available."
                  },
                  "health": {
                    "enum": [
                      "green",
                      "yellow",
                      "red",
                      "red*",
                      "unknown"
                    ],
                    "type": "string",
                    "description": "Index health"
                  },
                  "status": {
                    "enum": [
                      "unknown",
                      "open",
                      "close",
                      "none"
                    ],
                    "type": "string",
                    "description": "Index status"
                  },
                  "index_name": {
                    "type": "string",
                    "description": "Index name"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "number_of_shards": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Number of shards in an index"
                  },
                  "number_of_replicas": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Number of replicas for an index"
                  },
                  "read_only_allow_delete": {
                    "type": "boolean",
                    "description": "Whether index is set as read-only (but allows deletion). null means unknown."
                  }
                }
              },
              "description": "List of Elasticsearch indexes"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceEsIndexListResponse"
        }
      ]
  ServiceGet:
    description: |-
      Get service information
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service": {
              "type": "object",
              "required": [
                "cloud_name",
                "create_time",
                "group_list",
                "plan",
                "project_vpc_id",
                "service_integrations",
                "service_name",
                "service_type",
                "service_uri",
                "state",
                "termination_protection",
                "update_time",
                "user_config"
              ],
              "properties": {
                "acl": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "permission",
                      "topic",
                      "username"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID"
                      },
                      "topic": {
                        "type": "string",
                        "maxLength": 249,
                        "minLength": 1,
                        "description": "Topic name pattern"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "description": "Username"
                      },
                      "permission": {
                        "enum": [
                          "admin",
                          "read",
                          "readwrite",
                          "write"
                        ],
                        "type": "string",
                        "description": "Kafka permission"
                      }
                    }
                  },
                  "description": "List of Kafka ACL entries"
                },
                "plan": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Subscription plan"
                },
                "state": {
                  "enum": [
                    "POWEROFF",
                    "REBALANCING",
                    "REBUILDING",
                    "RUNNING"
                  ],
                  "type": "string",
                  "description": "State of the service"
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "password",
                      "type",
                      "username"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Account type"
                      },
                      "password": {
                        "type": "string",
                        "description": "Account password. A null value indicates a user overridden password."
                      },
                      "username": {
                        "type": "string",
                        "description": "Account username"
                      },
                      "access_key": {
                        "type": "string",
                        "description": "Access key for TLS client authentication"
                      },
                      "access_cert": {
                        "type": "string",
                        "description": "Access certificate for TLS client authentication"
                      },
                      "access_control": {
                        "type": "object",
                        "properties": {
                          "m3_group": {
                            "type": "string",
                            "maxLength": 16,
                            "description": "M3 access group to associate users with"
                          },
                          "redis_acl_keys": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Key access rules"
                          },
                          "redis_acl_channels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Permitted pub/sub channel patterns"
                          },
                          "redis_acl_commands": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Rules for individual commands"
                          },
                          "redis_acl_categories": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Command category rules"
                          }
                        },
                        "description": "Service specific access controls for user"
                      },
                      "authentication": {
                        "enum": [
                          "caching_sha2_password",
                          "mysql_native_password"
                        ],
                        "type": "string",
                        "description": "Authentication details"
                      },
                      "access_cert_not_valid_after_time": {
                        "type": "string",
                        "description": "Access certificate validity end time (ISO8601)"
                      }
                    }
                  },
                  "description": "List of service users"
                },
                "topics": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "cleanup_policy",
                      "min_insync_replicas",
                      "partitions",
                      "replication",
                      "retention_bytes",
                      "retention_hours",
                      "topic_name"
                    ],
                    "properties": {
                      "state": {
                        "enum": [
                          "ACTIVE",
                          "CONFIGURING",
                          "DELETING"
                        ],
                        "type": "string",
                        "description": "Topic state"
                      },
                      "partitions": {
                        "type": "integer",
                        "maximum": 1000000,
                        "minimum": 1,
                        "description": "Number of partitions"
                      },
                      "topic_name": {
                        "type": "string",
                        "maxLength": 249,
                        "minLength": 1,
                        "description": "Topic name"
                      },
                      "replication": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Number of replicas"
                      },
                      "cleanup_policy": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "cleanup.policy"
                      },
                      "retention_bytes": {
                        "type": "integer",
                        "description": "retention.bytes"
                      },
                      "retention_hours": {
                        "type": "integer",
                        "maximum": 2562047788015,
                        "description": "Retention period (hours)"
                      },
                      "min_insync_replicas": {
                        "type": "integer",
                        "maximum": 7,
                        "minimum": 1,
                        "description": "min.insync.replicas"
                      }
                    }
                  },
                  "description": "Kafka topics. DEPRECATED: Use /project/$project/service/$service/topic instead"
                },
                "backups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "backup_name",
                      "backup_time",
                      "data_size"
                    ],
                    "properties": {
                      "data_size": {
                        "type": "integer",
                        "description": "Backup's original size before compression"
                      },
                      "backup_name": {
                        "type": "string",
                        "description": "Internal name of this backup"
                      },
                      "backup_time": {
                        "type": "string",
                        "maxLength": 36,
                        "description": "Backup timestamp (ISO 8601)"
                      }
                    }
                  },
                  "description": "List of backups for the service"
                },
                "features": {
                  "type": "object",
                  "properties": {},
                  "description": "Feature flags"
                },
                "metadata": {
                  "type": "object",
                  "properties": {},
                  "description": "Service type specific metadata"
                },
                "cloud_name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Target cloud"
                },
                "components": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "component",
                      "host",
                      "port",
                      "route",
                      "usage"
                    ],
                    "properties": {
                      "ssl": {
                        "type": "boolean",
                        "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted andthis property is only included for service components that may disable encryption."
                      },
                      "host": {
                        "type": "string",
                        "description": "DNS name for connecting to the service component"
                      },
                      "path": {
                        "type": "string",
                        "description": "Path component of the service URL (useful only if service component is HTTP or HTTPS endpoint)"
                      },
                      "port": {
                        "type": "integer",
                        "maximum": 65535,
                        "minimum": 0,
                        "description": "Port number for connecting to the service component"
                      },
                      "route": {
                        "enum": [
                          "dynamic",
                          "public",
                          "private",
                          "privatelink"
                        ],
                        "type": "string",
                        "description": "Network access route"
                      },
                      "usage": {
                        "enum": [
                          "primary",
                          "replica"
                        ],
                        "type": "string",
                        "description": "DNS usage name"
                      },
                      "component": {
                        "type": "string",
                        "description": "Service component name"
                      },
                      "kafka_authentication_method": {
                        "enum": [
                          "certificate",
                          "sasl"
                        ],
                        "type": "string",
                        "description": "Kafka authentication method. This is a value specific to the 'kafka' service component"
                      }
                    }
                  },
                  "description": "Service component information objects"
                },
                "group_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of service groups the service belongs to. This field is deprecated. It is always set to single element with value 'default'"
                },
                "node_count": {
                  "type": "integer",
                  "description": "Number of service nodes in the active plan"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Service creation timestamp (ISO 8601)"
                },
                "maintenance": {
                  "type": "object",
                  "required": [
                    "dow",
                    "time",
                    "updates"
                  ],
                  "properties": {
                    "dow": {
                      "enum": [
                        "monday",
                        "tuesday",
                        "wednesday",
                        "thursday",
                        "friday",
                        "saturday",
                        "sunday",
                        "never"
                      ],
                      "type": "string",
                      "description": "Day of week for installing updates"
                    },
                    "time": {
                      "type": "string",
                      "maxLength": 8,
                      "minLength": 8,
                      "description": "Time for installing updates, UTC"
                    },
                    "updates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "deadline": {
                            "type": "string",
                            "description": "Deadline for installing the update"
                          },
                          "start_at": {
                            "type": "string",
                            "description": "The time when the update will be automatically applied"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the update"
                          },
                          "start_after": {
                            "type": "string",
                            "description": "The earliest time the update will be automatically applied"
                          }
                        }
                      },
                      "description": "List of updates waiting to be installed"
                    }
                  },
                  "description": "Automatic maintenance settings"
                },
                "node_states": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "state"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the service node"
                      },
                      "role": {
                        "enum": [
                          "master",
                          "standby",
                          "read-replica"
                        ],
                        "type": "string",
                        "description": "Role of this node. Only returned for a subset of service types"
                      },
                      "state": {
                        "enum": [
                          "leaving",
                          "running",
                          "setting_up_vm",
                          "syncing_data",
                          "unknown"
                        ],
                        "type": "string",
                        "description": "Current state of the service node"
                      },
                      "progress_updates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "completed",
                            "phase"
                          ],
                          "properties": {
                            "max": {
                              "type": "integer",
                              "description": "Maximum progress value for this phase. May be missing or null. May change."
                            },
                            "min": {
                              "type": "integer",
                              "description": "Minimum progress value for this phase. May be missing or null."
                            },
                            "unit": {
                              "enum": [
                                "binlogs",
                                "bytes_compressed",
                                "bytes_uncompressed",
                                "wal_lsn"
                              ],
                              "type": "string",
                              "description": "Unit for current/min/max values. New units may be added. If null should be treated as generic unit"
                            },
                            "phase": {
                              "enum": [
                                "prepare",
                                "basebackup",
                                "stream",
                                "finalize"
                              ],
                              "type": "string",
                              "description": "Key identifying this phase"
                            },
                            "current": {
                              "type": "integer",
                              "description": "Current progress for this phase. May be missing or null."
                            },
                            "completed": {
                              "type": "boolean",
                              "description": "Indicates whether this phase has been completed or not"
                            }
                          }
                        },
                        "description": "Extra information regarding the progress for current state"
                      }
                    }
                  },
                  "description": "State of individual service nodes"
                },
                "service_uri": {
                  "type": "string",
                  "description": "URI for connecting to the service (may be null)"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Service last update timestamp (ISO 8601)"
                },
                "user_config": {
                  "type": "object",
                  "properties": {},
                  "description": "Service type-specific settings"
                },
                "service_name": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Service name"
                },
                "service_type": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Service type code"
                },
                "disk_space_mb": {
                  "type": "number",
                  "description": "Megabytes of disk space for data storage"
                },
                "node_cpu_count": {
                  "type": "integer",
                  "description": "Number of CPUs for each node"
                },
                "node_memory_mb": {
                  "type": "number",
                  "description": "Megabytes of memory for each node"
                },
                "project_vpc_id": {
                  "type": "string",
                  "maxLength": 36,
                  "minLength": 36,
                  "description": "Project VPC ID"
                },
                "connection_info": {
                  "type": "object",
                  "properties": {},
                  "description": "Service-specific connection information properties"
                },
                "connection_pools": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "connection_uri",
                      "database",
                      "pool_mode",
                      "pool_name",
                      "pool_size",
                      "username"
                    ],
                    "properties": {
                      "database": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Service database name"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Pool username"
                      },
                      "pool_mode": {
                        "enum": [
                          "session",
                          "transaction",
                          "statement"
                        ],
                        "type": "string",
                        "description": "PGBouncer pool mode"
                      },
                      "pool_name": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "Connection pool name"
                      },
                      "pool_size": {
                        "type": "integer",
                        "maximum": 10000,
                        "minimum": 1,
                        "description": "Size of PGBouncer's PostgreSQL side connection pool"
                      },
                      "connection_uri": {
                        "type": "string",
                        "description": "Connection URI for the DB pool"
                      }
                    }
                  },
                  "description": "PostgreSQL PGBouncer connection pools"
                },
                "cloud_description": {
                  "type": "string",
                  "description": "Cloud provider and location"
                },
                "service_uri_params": {
                  "type": "object",
                  "properties": {},
                  "description": "service_uri parameterized into key-value pairs"
                },
                "service_integrations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "active",
                      "description",
                      "dest_project",
                      "dest_service_type",
                      "enabled",
                      "integration_type",
                      "service_integration_id",
                      "source_project",
                      "source_service",
                      "source_service_type"
                    ],
                    "properties": {
                      "active": {
                        "type": "boolean",
                        "description": "True when integration is active"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "True when integration is enabled"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the integration"
                      },
                      "user_config": {
                        "type": "object",
                        "properties": {},
                        "description": "Service integration settings"
                      },
                      "dest_project": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Project name"
                      },
                      "dest_service": {
                        "type": "string",
                        "description": "Destination service name"
                      },
                      "dest_endpoint": {
                        "type": "string",
                        "description": "Destination endpoint name"
                      },
                      "source_project": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Project name"
                      },
                      "source_service": {
                        "type": "string",
                        "description": "Source service name"
                      },
                      "source_endpoint": {
                        "type": "string",
                        "description": "Source endpoint name"
                      },
                      "dest_endpoint_id": {
                        "type": "string",
                        "description": "Destination endpoint id"
                      },
                      "integration_type": {
                        "type": "string",
                        "description": "Type of the integration"
                      },
                      "dest_service_type": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Service type code"
                      },
                      "integration_status": {
                        "type": "object",
                        "properties": {},
                        "description": "Integration status"
                      },
                      "source_endpoint_id": {
                        "type": "string",
                        "description": "Source endpoint ID"
                      },
                      "source_service_type": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Service type code"
                      },
                      "service_integration_id": {
                        "type": "string",
                        "description": "Integration ID"
                      }
                    }
                  },
                  "description": "Integrations with other services"
                },
                "service_notifications": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "level",
                      "message",
                      "metadata",
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "enum": [
                          "service_end_of_life",
                          "service_powered_off_removal"
                        ],
                        "type": "string",
                        "description": "Notification type"
                      },
                      "level": {
                        "enum": [
                          "notice",
                          "warning"
                        ],
                        "type": "string",
                        "description": "Notification level"
                      },
                      "message": {
                        "type": "string",
                        "maxLength": 1024,
                        "description": "Human notification message"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "service_end_of_life_time": {
                            "type": "string",
                            "maxLength": 36,
                            "description": "Timestamp in ISO 8601 format, always in UTC"
                          },
                          "end_of_life_help_article_url": {
                            "type": "string",
                            "description": "Link to the help article"
                          }
                        },
                        "description": "Notification metadata"
                      }
                    }
                  },
                  "description": "Service notifications"
                },
                "termination_protection": {
                  "type": "boolean",
                  "description": "Service is protected against termination and powering off"
                },
                "service_type_description": {
                  "type": "string",
                  "description": "Single line description of the service"
                }
              },
              "description": "Service information"
            }
          },
          "description": "ServiceGetResponse"
        }
      ]
  ServiceGetMigrationStatus:
    description: |-
      Get migration status
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "migration"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "migration": {
              "type": "object",
              "required": [
                "method",
                "status"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message in case that migration has failed"
                },
                "method": {
                  "type": "string",
                  "description": "Migration method. Empty in case multiple methods are being used."
                },
                "status": {
                  "type": "string",
                  "description": "Migration status"
                }
              },
              "description": "Migration status"
            },
            "migration_detail": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "dbname",
                  "method",
                  "status"
                ],
                "properties": {
                  "error": {
                    "type": "string",
                    "description": "Error message in case that migration has failed"
                  },
                  "dbname": {
                    "type": "string",
                    "description": "Migrated db name (PG) or number (Redis)"
                  },
                  "method": {
                    "type": "string",
                    "description": "Migration method"
                  },
                  "status": {
                    "enum": [
                      "done",
                      "running",
                      "syncing",
                      "failed"
                    ],
                    "type": "string",
                    "description": "Migration status"
                  }
                }
              },
              "description": "Migration status per database"
            }
          },
          "description": "ServiceGetMigrationStatusResponse"
        }
      ]
  ServiceIntegrationCreate:
    description: |-
      Create a new service integration
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "integration_type"
          ],
          "properties": {
            "user_config": {
              "type": "object",
              "properties": {},
              "description": "Service type-specific settings"
            },
            "dest_service": {
              "type": "string",
              "maxLength": 63,
              "description": "Destination service name"
            },
            "source_service": {
              "type": "string",
              "maxLength": 63,
              "description": "Source service name"
            },
            "dest_endpoint_id": {
              "type": "string",
              "maxLength": 36,
              "description": "Integration destination endpoint ID"
            },
            "integration_type": {
              "enum": [
                "alertmanager",
                "dashboard",
                "datadog",
                "datasource",
                "external_aws_cloudwatch_logs",
                "external_aws_cloudwatch_metrics",
                "external_elasticsearch_logs",
                "external_google_cloud_logging",
                "internal_connectivity",
                "jolokia",
                "kafka_connect",
                "kafka_logs",
                "kafka_mirrormaker",
                "logs",
                "m3aggregator",
                "m3coordinator",
                "metrics",
                "mirrormaker",
                "prometheus",
                "read_replica",
                "rsyslog",
                "schema_registry_proxy",
                "signalfx"
              ],
              "type": "string",
              "description": "Service integration type"
            },
            "source_endpoint_id": {
              "type": "string",
              "maxLength": 36,
              "description": "Integration source endpoint ID"
            }
          },
          "description": "ServiceIntegrationCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service_integration"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service_integration": {
              "type": "object",
              "required": [
                "active",
                "description",
                "dest_project",
                "dest_service_type",
                "enabled",
                "integration_type",
                "service_integration_id",
                "source_project",
                "source_service",
                "source_service_type"
              ],
              "properties": {
                "active": {
                  "type": "boolean",
                  "description": "True when integration is active"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "True when integration is enabled"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the integration"
                },
                "user_config": {
                  "type": "object",
                  "properties": {},
                  "description": "Service integration settings"
                },
                "dest_project": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Project name"
                },
                "dest_service": {
                  "type": "string",
                  "description": "Destination service name"
                },
                "dest_endpoint": {
                  "type": "string",
                  "description": "Destination endpoint name"
                },
                "source_project": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Project name"
                },
                "source_service": {
                  "type": "string",
                  "description": "Source service name"
                },
                "source_endpoint": {
                  "type": "string",
                  "description": "Source endpoint name"
                },
                "dest_endpoint_id": {
                  "type": "string",
                  "description": "Destination endpoint id"
                },
                "integration_type": {
                  "type": "string",
                  "description": "Type of the integration"
                },
                "dest_service_type": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Service type code"
                },
                "integration_status": {
                  "type": "object",
                  "properties": {},
                  "description": "Integration status"
                },
                "source_endpoint_id": {
                  "type": "string",
                  "description": "Source endpoint ID"
                },
                "source_service_type": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Service type code"
                },
                "service_integration_id": {
                  "type": "string",
                  "description": "Integration ID"
                }
              },
              "description": "Service integration"
            }
          },
          "description": "ServiceIntegrationCreateResponse"
        }
      ]
  ServiceIntegrationDelete:
    description: |-
      Delete a service integration
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceIntegrationDeleteResponse"
        }
      ]
  ServiceIntegrationEndpointCreate:
    description: |-
      Create a new service integration endpoint
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "endpoint_name",
            "endpoint_type",
            "user_config"
          ],
          "properties": {
            "user_config": {
              "type": "object",
              "properties": {},
              "description": "Service type-specific settings"
            },
            "endpoint_name": {
              "type": "string",
              "maxLength": 40,
              "minLength": 1,
              "description": "Integration endpoint name"
            },
            "endpoint_type": {
              "enum": [
                "datadog",
                "external_aws_cloudwatch_logs",
                "external_aws_cloudwatch_metrics",
                "external_elasticsearch_logs",
                "external_google_cloud_logging",
                "external_kafka",
                "external_schema_registry",
                "jolokia",
                "prometheus",
                "rsyslog",
                "signalfx"
              ],
              "type": "string",
              "description": "Service integration endpoint type"
            }
          },
          "description": "ServiceIntegrationEndpointCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service_integration_endpoint"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service_integration_endpoint": {
              "type": "object",
              "required": [
                "endpoint_config",
                "endpoint_id",
                "endpoint_name",
                "endpoint_type",
                "user_config"
              ],
              "properties": {
                "endpoint_id": {
                  "type": "string",
                  "description": "Integration endpoint ID"
                },
                "user_config": {
                  "type": "object",
                  "properties": {},
                  "description": "Service integration settings"
                },
                "endpoint_name": {
                  "type": "string",
                  "maxLength": 40,
                  "minLength": 1,
                  "description": "Integration endpoint name"
                },
                "endpoint_type": {
                  "enum": [
                    "datadog",
                    "external_aws_cloudwatch_logs",
                    "external_aws_cloudwatch_metrics",
                    "external_elasticsearch_logs",
                    "external_google_cloud_logging",
                    "external_kafka",
                    "external_schema_registry",
                    "jolokia",
                    "prometheus",
                    "rsyslog",
                    "signalfx"
                  ],
                  "type": "string",
                  "description": "Integration endpoint type"
                },
                "endpoint_config": {
                  "type": "object",
                  "properties": {},
                  "description": "Service integration endpoint backend settings"
                }
              },
              "description": "Service integration endpoint"
            }
          },
          "description": "ServiceIntegrationEndpointCreateResponse"
        }
      ]
  ServiceIntegrationEndpointDelete:
    description: |-
      Delete a service integration endpoint
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceIntegrationEndpointDeleteResponse"
        }
      ]
  ServiceIntegrationEndpointGet:
    description: |-
      Get service integration endpoint
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service_integration_endpoint"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service_integration_endpoint": {
              "type": "object",
              "required": [
                "endpoint_config",
                "endpoint_id",
                "endpoint_name",
                "endpoint_type",
                "user_config"
              ],
              "properties": {
                "endpoint_id": {
                  "type": "string",
                  "description": "Integration endpoint ID"
                },
                "user_config": {
                  "type": "object",
                  "properties": {},
                  "description": "Service integration settings"
                },
                "endpoint_name": {
                  "type": "string",
                  "maxLength": 40,
                  "minLength": 1,
                  "description": "Integration endpoint name"
                },
                "endpoint_type": {
                  "enum": [
                    "datadog",
                    "external_aws_cloudwatch_logs",
                    "external_aws_cloudwatch_metrics",
                    "external_elasticsearch_logs",
                    "external_google_cloud_logging",
                    "external_kafka",
                    "external_schema_registry",
                    "jolokia",
                    "prometheus",
                    "rsyslog",
                    "signalfx"
                  ],
                  "type": "string",
                  "description": "Integration endpoint type"
                },
                "endpoint_config": {
                  "type": "object",
                  "properties": {},
                  "description": "Service integration endpoint backend settings"
                }
              },
              "description": "Service integration endpoint"
            }
          },
          "description": "ServiceIntegrationEndpointGetResponse"
        }
      ]
  ServiceIntegrationEndpointList:
    description: |-
      List available integration endpoints for project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service_integration_endpoints"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service_integration_endpoints": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "endpoint_config",
                  "endpoint_id",
                  "endpoint_name",
                  "endpoint_type",
                  "user_config"
                ],
                "properties": {
                  "endpoint_id": {
                    "type": "string",
                    "description": "Integration endpoint ID"
                  },
                  "user_config": {
                    "type": "object",
                    "properties": {},
                    "description": "Service integration settings"
                  },
                  "endpoint_name": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 1,
                    "description": "Integration endpoint name"
                  },
                  "endpoint_type": {
                    "enum": [
                      "datadog",
                      "external_aws_cloudwatch_logs",
                      "external_aws_cloudwatch_metrics",
                      "external_elasticsearch_logs",
                      "external_google_cloud_logging",
                      "external_kafka",
                      "external_schema_registry",
                      "jolokia",
                      "prometheus",
                      "rsyslog",
                      "signalfx"
                    ],
                    "type": "string",
                    "description": "Integration endpoint type"
                  },
                  "endpoint_config": {
                    "type": "object",
                    "properties": {},
                    "description": "Service integration endpoint backend settings"
                  }
                }
              },
              "description": "List of service integrations"
            }
          },
          "description": "ServiceIntegrationEndpointListResponse"
        }
      ]
  ServiceIntegrationEndpointTypes:
    description: |-
      List available service integration endpoint types
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "endpoint_types"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "endpoint_types": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "endpoint_type",
                  "service_types",
                  "title",
                  "user_config_schema"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Endpoint type description"
                  },
                  "endpoint_type": {
                    "type": "string",
                    "description": "Endpoint type name"
                  },
                  "service_types": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Supported service types"
                  },
                  "user_config_schema": {
                    "type": "object",
                    "properties": {},
                    "description": "JSON-Schema for the 'user_config' properties"
                  }
                }
              },
              "description": "List of service integration endpoint types"
            }
          },
          "description": "ServiceIntegrationEndpointTypesResponse"
        }
      ]
  ServiceIntegrationEndpointUpdate:
    description: |-
      Update service integration endpoint
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "user_config"
          ],
          "properties": {
            "user_config": {
              "type": "object",
              "properties": {},
              "description": "Service type-specific settings"
            }
          },
          "description": "ServiceIntegrationEndpointUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service_integration_endpoint"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service_integration_endpoint": {
              "type": "object",
              "required": [
                "endpoint_config",
                "endpoint_id",
                "endpoint_name",
                "endpoint_type",
                "user_config"
              ],
              "properties": {
                "endpoint_id": {
                  "type": "string",
                  "description": "Integration endpoint ID"
                },
                "user_config": {
                  "type": "object",
                  "properties": {},
                  "description": "Service integration settings"
                },
                "endpoint_name": {
                  "type": "string",
                  "maxLength": 40,
                  "minLength": 1,
                  "description": "Integration endpoint name"
                },
                "endpoint_type": {
                  "enum": [
                    "datadog",
                    "external_aws_cloudwatch_logs",
                    "external_aws_cloudwatch_metrics",
                    "external_elasticsearch_logs",
                    "external_google_cloud_logging",
                    "external_kafka",
                    "external_schema_registry",
                    "jolokia",
                    "prometheus",
                    "rsyslog",
                    "signalfx"
                  ],
                  "type": "string",
                  "description": "Integration endpoint type"
                },
                "endpoint_config": {
                  "type": "object",
                  "properties": {},
                  "description": "Service integration endpoint backend settings"
                }
              },
              "description": "Service integration endpoint"
            }
          },
          "description": "ServiceIntegrationEndpointUpdateResponse"
        }
      ]
  ServiceIntegrationGet:
    description: |-
      Get service integration
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service_integration"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service_integration": {
              "type": "object",
              "required": [
                "active",
                "description",
                "dest_project",
                "dest_service_type",
                "enabled",
                "integration_type",
                "service_integration_id",
                "source_project",
                "source_service",
                "source_service_type"
              ],
              "properties": {
                "active": {
                  "type": "boolean",
                  "description": "True when integration is active"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "True when integration is enabled"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the integration"
                },
                "user_config": {
                  "type": "object",
                  "properties": {},
                  "description": "Service integration settings"
                },
                "dest_project": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Project name"
                },
                "dest_service": {
                  "type": "string",
                  "description": "Destination service name"
                },
                "dest_endpoint": {
                  "type": "string",
                  "description": "Destination endpoint name"
                },
                "source_project": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Project name"
                },
                "source_service": {
                  "type": "string",
                  "description": "Source service name"
                },
                "source_endpoint": {
                  "type": "string",
                  "description": "Source endpoint name"
                },
                "dest_endpoint_id": {
                  "type": "string",
                  "description": "Destination endpoint id"
                },
                "integration_type": {
                  "type": "string",
                  "description": "Type of the integration"
                },
                "dest_service_type": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Service type code"
                },
                "integration_status": {
                  "type": "object",
                  "properties": {},
                  "description": "Integration status"
                },
                "source_endpoint_id": {
                  "type": "string",
                  "description": "Source endpoint ID"
                },
                "source_service_type": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Service type code"
                },
                "service_integration_id": {
                  "type": "string",
                  "description": "Integration ID"
                }
              },
              "description": "Service integration"
            }
          },
          "description": "ServiceIntegrationGetResponse"
        }
      ]
  ServiceIntegrationList:
    description: |-
      List available integrations for a service
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service_integrations"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service_integrations": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "active",
                  "description",
                  "dest_project",
                  "dest_service_type",
                  "enabled",
                  "integration_type",
                  "service_integration_id",
                  "source_project",
                  "source_service",
                  "source_service_type"
                ],
                "properties": {
                  "active": {
                    "type": "boolean",
                    "description": "True when integration is active"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "True when integration is enabled"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the integration"
                  },
                  "user_config": {
                    "type": "object",
                    "properties": {},
                    "description": "Service integration settings"
                  },
                  "dest_project": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Project name"
                  },
                  "dest_service": {
                    "type": "string",
                    "description": "Destination service name"
                  },
                  "dest_endpoint": {
                    "type": "string",
                    "description": "Destination endpoint name"
                  },
                  "source_project": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Project name"
                  },
                  "source_service": {
                    "type": "string",
                    "description": "Source service name"
                  },
                  "source_endpoint": {
                    "type": "string",
                    "description": "Source endpoint name"
                  },
                  "dest_endpoint_id": {
                    "type": "string",
                    "description": "Destination endpoint id"
                  },
                  "integration_type": {
                    "type": "string",
                    "description": "Type of the integration"
                  },
                  "dest_service_type": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "Service type code"
                  },
                  "integration_status": {
                    "type": "object",
                    "properties": {},
                    "description": "Integration status"
                  },
                  "source_endpoint_id": {
                    "type": "string",
                    "description": "Source endpoint ID"
                  },
                  "source_service_type": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "Service type code"
                  },
                  "service_integration_id": {
                    "type": "string",
                    "description": "Integration ID"
                  }
                }
              },
              "description": "List of service integrations"
            }
          },
          "description": "ServiceIntegrationListResponse"
        }
      ]
  ServiceIntegrationTypes:
    description: |-
      List available service integration types
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "integration_types"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "integration_types": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "dest_description",
                  "dest_service_type",
                  "dest_service_types",
                  "integration_type",
                  "source_description",
                  "source_service_types",
                  "user_config_schema"
                ],
                "properties": {
                  "dest_description": {
                    "type": "string",
                    "description": "Description of the destination service"
                  },
                  "integration_type": {
                    "type": "string",
                    "description": "Integration type name"
                  },
                  "dest_service_type": {
                    "type": "string",
                    "description": "Service type. DEPRECATED: Use dest_service_types instead"
                  },
                  "dest_service_types": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Supported destination service types"
                  },
                  "source_description": {
                    "type": "string",
                    "description": "Description of the source service"
                  },
                  "user_config_schema": {
                    "type": "object",
                    "properties": {},
                    "description": "JSON-Schema for the 'user_config' properties"
                  },
                  "source_service_types": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Supported source service types"
                  }
                }
              },
              "description": "List of service integration types"
            }
          },
          "description": "ServiceIntegrationTypesResponse"
        }
      ]
  ServiceIntegrationUpdate:
    description: |-
      Update a service integration
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "user_config"
          ],
          "properties": {
            "user_config": {
              "type": "object",
              "properties": {},
              "description": "Service type-specific settings"
            }
          },
          "description": "ServiceIntegrationUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service_integration"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service_integration": {
              "type": "object",
              "required": [
                "active",
                "description",
                "dest_project",
                "dest_service_type",
                "enabled",
                "integration_type",
                "service_integration_id",
                "source_project",
                "source_service",
                "source_service_type"
              ],
              "properties": {
                "active": {
                  "type": "boolean",
                  "description": "True when integration is active"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "True when integration is enabled"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the integration"
                },
                "user_config": {
                  "type": "object",
                  "properties": {},
                  "description": "Service integration settings"
                },
                "dest_project": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Project name"
                },
                "dest_service": {
                  "type": "string",
                  "description": "Destination service name"
                },
                "dest_endpoint": {
                  "type": "string",
                  "description": "Destination endpoint name"
                },
                "source_project": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Project name"
                },
                "source_service": {
                  "type": "string",
                  "description": "Source service name"
                },
                "source_endpoint": {
                  "type": "string",
                  "description": "Source endpoint name"
                },
                "dest_endpoint_id": {
                  "type": "string",
                  "description": "Destination endpoint id"
                },
                "integration_type": {
                  "type": "string",
                  "description": "Type of the integration"
                },
                "dest_service_type": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Service type code"
                },
                "integration_status": {
                  "type": "object",
                  "properties": {},
                  "description": "Integration status"
                },
                "source_endpoint_id": {
                  "type": "string",
                  "description": "Source endpoint ID"
                },
                "source_service_type": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Service type code"
                },
                "service_integration_id": {
                  "type": "string",
                  "description": "Integration ID"
                }
              },
              "description": "Service integration"
            }
          },
          "description": "ServiceIntegrationUpdateResponse"
        }
      ]
  ServiceKafkaAclAdd:
    description: |-
      Add a Kafka ACL entry
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "permission",
            "topic",
            "username"
          ],
          "properties": {
            "topic": {
              "type": "string",
              "maxLength": 249,
              "minLength": 1,
              "description": "Topic name pattern"
            },
            "username": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "description": "Username"
            },
            "permission": {
              "enum": [
                "admin",
                "read",
                "readwrite",
                "write"
              ],
              "type": "string",
              "description": "Kafka permission"
            }
          },
          "description": "ServiceKafkaAclAddRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "acl"
          ],
          "properties": {
            "acl": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "permission",
                  "topic",
                  "username"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID"
                  },
                  "topic": {
                    "type": "string",
                    "maxLength": 249,
                    "minLength": 1,
                    "description": "Topic name pattern"
                  },
                  "username": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "description": "Username"
                  },
                  "permission": {
                    "enum": [
                      "admin",
                      "read",
                      "readwrite",
                      "write"
                    ],
                    "type": "string",
                    "description": "Kafka permission"
                  }
                }
              },
              "description": "List of Kafka ACL entries"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaAclAddResponse"
        }
      ]
  ServiceKafkaAclDelete:
    description: |-
      Delete a Kafka ACL entry
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "acl"
          ],
          "properties": {
            "acl": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "permission",
                  "topic",
                  "username"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID"
                  },
                  "topic": {
                    "type": "string",
                    "maxLength": 249,
                    "minLength": 1,
                    "description": "Topic name pattern"
                  },
                  "username": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "description": "Username"
                  },
                  "permission": {
                    "enum": [
                      "admin",
                      "read",
                      "readwrite",
                      "write"
                    ],
                    "type": "string",
                    "description": "Kafka permission"
                  }
                }
              },
              "description": "List of Kafka ACL entries"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaAclDeleteResponse"
        }
      ]
  ServiceKafkaAclList:
    description: |-
      List Kafka ACL entries
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "acl"
          ],
          "properties": {
            "acl": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "permission",
                  "topic",
                  "username"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID"
                  },
                  "topic": {
                    "type": "string",
                    "maxLength": 249,
                    "minLength": 1,
                    "description": "Topic name pattern"
                  },
                  "username": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "description": "Username"
                  },
                  "permission": {
                    "enum": [
                      "admin",
                      "read",
                      "readwrite",
                      "write"
                    ],
                    "type": "string",
                    "description": "Kafka permission"
                  }
                }
              },
              "description": "List of Kafka ACL entries"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaAclListResponse"
        }
      ]
  ServiceKafkaConnectCreateConnector:
    description: |-
      Create a Kafka Connect connector
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 1024,
              "description": "Unique name for the connector"
            },
            "connector.class": {
              "type": "string",
              "maxLength": 1024,
              "description": "The Java class for the connector"
            }
          },
          "description": "ServiceKafkaConnectCreateConnectorRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "connector"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "connector": {
              "type": "object",
              "required": [
                "config",
                "name",
                "plugin",
                "tasks"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 1024,
                  "description": "Connector name"
                },
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "connector",
                      "task"
                    ],
                    "properties": {
                      "task": {
                        "type": "integer",
                        "description": "Task id / number"
                      },
                      "connector": {
                        "type": "string",
                        "description": "Related connector name"
                      }
                    }
                  },
                  "description": "List of tasks of a connector"
                },
                "config": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 1024,
                      "description": "Unique name for the connector"
                    },
                    "connector.class": {
                      "type": "string",
                      "maxLength": 1024,
                      "description": "The Java class for the connector"
                    }
                  },
                  "description": "Connector configuration parameters"
                },
                "plugin": {
                  "type": "object",
                  "required": [
                    "author",
                    "class",
                    "docURL",
                    "title",
                    "type",
                    "version"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "sink",
                        "source",
                        "unknown"
                      ],
                      "type": "string",
                      "description": "Describes whether data flows from or to Kafka"
                    },
                    "class": {
                      "type": "string",
                      "description": "Connector class name"
                    },
                    "title": {
                      "type": "string",
                      "description": "Descriptive human readable name defined by Aiven"
                    },
                    "author": {
                      "type": "string",
                      "description": "Connector author name"
                    },
                    "docURL": {
                      "type": "string",
                      "description": "Connector documentation URL"
                    },
                    "preview": {
                      "type": "boolean",
                      "description": "Describes if connector is in beta"
                    },
                    "version": {
                      "type": "string",
                      "description": "Connector version number"
                    },
                    "preview_info": {
                      "type": "string",
                      "description": "Information about beta stage of connector"
                    }
                  },
                  "description": "Kafka Connector plugin information"
                }
              },
              "description": "Kafka connector information"
            }
          },
          "description": "ServiceKafkaConnectCreateConnectorResponse"
        }
      ]
  ServiceKafkaConnectDeleteConnector:
    description: |-
      Delete Kafka Connect connector
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaConnectDeleteConnectorResponse"
        }
      ]
  ServiceKafkaConnectEditConnector:
    description: |-
      Edit Kafka Connect connector
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 1024,
              "description": "Unique name for the connector"
            },
            "connector.class": {
              "type": "string",
              "maxLength": 1024,
              "description": "The Java class for the connector"
            }
          },
          "description": "ServiceKafkaConnectEditConnectorRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "connector"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "connector": {
              "type": "object",
              "required": [
                "config",
                "name",
                "plugin",
                "tasks"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 1024,
                  "description": "Connector name"
                },
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "connector",
                      "task"
                    ],
                    "properties": {
                      "task": {
                        "type": "integer",
                        "description": "Task id / number"
                      },
                      "connector": {
                        "type": "string",
                        "description": "Related connector name"
                      }
                    }
                  },
                  "description": "List of tasks of a connector"
                },
                "config": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 1024,
                      "description": "Unique name for the connector"
                    },
                    "connector.class": {
                      "type": "string",
                      "maxLength": 1024,
                      "description": "The Java class for the connector"
                    }
                  },
                  "description": "Connector configuration parameters"
                },
                "plugin": {
                  "type": "object",
                  "required": [
                    "author",
                    "class",
                    "docURL",
                    "title",
                    "type",
                    "version"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "sink",
                        "source",
                        "unknown"
                      ],
                      "type": "string",
                      "description": "Describes whether data flows from or to Kafka"
                    },
                    "class": {
                      "type": "string",
                      "description": "Connector class name"
                    },
                    "title": {
                      "type": "string",
                      "description": "Descriptive human readable name defined by Aiven"
                    },
                    "author": {
                      "type": "string",
                      "description": "Connector author name"
                    },
                    "docURL": {
                      "type": "string",
                      "description": "Connector documentation URL"
                    },
                    "preview": {
                      "type": "boolean",
                      "description": "Describes if connector is in beta"
                    },
                    "version": {
                      "type": "string",
                      "description": "Connector version number"
                    },
                    "preview_info": {
                      "type": "string",
                      "description": "Information about beta stage of connector"
                    }
                  },
                  "description": "Kafka Connector plugin information"
                }
              },
              "description": "Kafka connector information"
            }
          },
          "description": "ServiceKafkaConnectEditConnectorResponse"
        }
      ]
  ServiceKafkaConnectGetAvailableConnectors:
    description: |-
      Get available Kafka Connect connectors
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "plugins"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "plugins": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "author",
                  "class",
                  "docURL",
                  "title",
                  "type",
                  "version"
                ],
                "properties": {
                  "type": {
                    "enum": [
                      "sink",
                      "source",
                      "unknown"
                    ],
                    "type": "string",
                    "description": "Describes whether data flows from or to Kafka"
                  },
                  "class": {
                    "type": "string",
                    "description": "Connector class name"
                  },
                  "title": {
                    "type": "string",
                    "description": "Descriptive human readable name defined by Aiven"
                  },
                  "author": {
                    "type": "string",
                    "description": "Connector author name"
                  },
                  "docURL": {
                    "type": "string",
                    "description": "Connector documentation URL"
                  },
                  "preview": {
                    "type": "boolean",
                    "description": "Describes if connector is in beta"
                  },
                  "version": {
                    "type": "string",
                    "description": "Connector version number"
                  },
                  "preview_info": {
                    "type": "string",
                    "description": "Information about beta stage of connector"
                  }
                }
              },
              "description": "List of available Kafka Connect connector plugins"
            }
          },
          "description": "ServiceKafkaConnectGetAvailableConnectorsResponse"
        }
      ]
  ServiceKafkaConnectGetConnectorConfiguration:
    description: |-
      Get Kafka Connect connector configuration schema
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "configuration_schema"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "configuration_schema": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "default_value",
                  "display_name",
                  "documentation",
                  "group",
                  "importance",
                  "name",
                  "order",
                  "required",
                  "type",
                  "width"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Machine friendly name of the field"
                  },
                  "type": {
                    "enum": [
                      "STRING",
                      "INT",
                      "SHORT",
                      "LONG",
                      "DOUBLE",
                      "BOOLEAN",
                      "LIST",
                      "CLASS",
                      "PASSWORD"
                    ],
                    "type": "string",
                    "description": "Configuration value type"
                  },
                  "group": {
                    "type": "string",
                    "description": "Name of the field group to which the field belongs to"
                  },
                  "order": {
                    "type": "integer",
                    "description": "Position of the field in the configuration form"
                  },
                  "width": {
                    "enum": [
                      "NONE",
                      "SHORT",
                      "MEDIUM",
                      "LONG"
                    ],
                    "type": "string",
                    "description": "Expected length of the input value"
                  },
                  "required": {
                    "type": "boolean",
                    "description": "Defines if the field value is mandatory or not"
                  },
                  "importance": {
                    "enum": [
                      "LOW",
                      "MEDIUM",
                      "HIGH"
                    ],
                    "type": "string",
                    "description": "How important is the field"
                  },
                  "display_name": {
                    "type": "string",
                    "description": "Human friendly name of the field"
                  },
                  "default_value": {
                    "type": "string",
                    "description": "Default value to be set if field omitted in configuration"
                  },
                  "documentation": {
                    "type": "string",
                    "description": "Assisting help text"
                  }
                }
              },
              "description": "List of connector configuration field definitions"
            }
          },
          "description": "ServiceKafkaConnectGetConnectorConfigurationResponse"
        }
      ]
  ServiceKafkaConnectGetConnectorStatus:
    description: |-
      Get a Kafka Connect Connector status
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "status": {
              "type": "object",
              "required": [
                "state",
                "tasks"
              ],
              "properties": {
                "state": {
                  "enum": [
                    "FAILED",
                    "PAUSED",
                    "RUNNING",
                    "UNASSIGNED"
                  ],
                  "type": "string",
                  "description": "Current status of the connector"
                },
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "state",
                      "trace"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Task identifier"
                      },
                      "state": {
                        "enum": [
                          "FAILED",
                          "PAUSED",
                          "RUNNING",
                          "UNASSIGNED"
                        ],
                        "type": "string",
                        "description": "Current status of the task"
                      },
                      "trace": {
                        "type": "string",
                        "description": "Task error information"
                      }
                    }
                  },
                  "description": "List of tasks currently running for the connector"
                }
              },
              "description": "Connector status information"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaConnectGetConnectorStatusResponse"
        }
      ]
  ServiceKafkaConnectList:
    description: |-
      Lists Kafka connectors
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "connectors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "connectors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "config",
                  "name",
                  "plugin",
                  "tasks"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Connector name"
                  },
                  "tasks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "connector",
                        "task"
                      ],
                      "properties": {
                        "task": {
                          "type": "integer",
                          "description": "Task id / number"
                        },
                        "connector": {
                          "type": "string",
                          "description": "Related connector name"
                        }
                      }
                    },
                    "description": "List of tasks of a connector"
                  },
                  "config": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 1024,
                        "description": "Unique name for the connector"
                      },
                      "connector.class": {
                        "type": "string",
                        "maxLength": 1024,
                        "description": "The Java class for the connector"
                      }
                    },
                    "description": "Connector configuration parameters"
                  },
                  "plugin": {
                    "type": "object",
                    "required": [
                      "author",
                      "class",
                      "docURL",
                      "title",
                      "type",
                      "version"
                    ],
                    "properties": {
                      "type": {
                        "enum": [
                          "sink",
                          "source",
                          "unknown"
                        ],
                        "type": "string",
                        "description": "Describes whether data flows from or to Kafka"
                      },
                      "class": {
                        "type": "string",
                        "description": "Connector class name"
                      },
                      "title": {
                        "type": "string",
                        "description": "Descriptive human readable name defined by Aiven"
                      },
                      "author": {
                        "type": "string",
                        "description": "Connector author name"
                      },
                      "docURL": {
                        "type": "string",
                        "description": "Connector documentation URL"
                      },
                      "preview": {
                        "type": "boolean",
                        "description": "Describes if connector is in beta"
                      },
                      "version": {
                        "type": "string",
                        "description": "Connector version number"
                      },
                      "preview_info": {
                        "type": "string",
                        "description": "Information about beta stage of connector"
                      }
                    },
                    "description": "Kafka Connector plugin information"
                  }
                }
              },
              "description": "List of active Kafka Connect connectors"
            }
          },
          "description": "ServiceKafkaConnectListResponse"
        }
      ]
  ServiceKafkaConnectPauseConnector:
    description: |-
      Pause a Kafka Connect Connector
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaConnectPauseConnectorResponse"
        }
      ]
  ServiceKafkaConnectRestartConnector:
    description: |-
      Restart a Kafka Connect Connector
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaConnectRestartConnectorResponse"
        }
      ]
  ServiceKafkaConnectRestartConnectorTask:
    description: |-
      Restart a Kafka Connect Connector task
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaConnectRestartConnectorTaskResponse"
        }
      ]
  ServiceKafkaConnectResumeConnector:
    description: |-
      Resume a Kafka Connect Connector
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaConnectResumeConnectorResponse"
        }
      ]
  ServiceKafkaMirrorMakerCreateReplicationFlow:
    description: |-
      Create a replication flow
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "enabled",
            "source_cluster",
            "target_cluster"
          ],
          "properties": {
            "topics": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 8192,
              "description": "List of topics and/or regular expressions to replicate."
            },
            "enabled": {
              "type": "boolean",
              "description": "Is replication flow enabled"
            },
            "source_cluster": {
              "type": "string",
              "maxLength": 128,
              "description": "Source cluster alias"
            },
            "target_cluster": {
              "type": "string",
              "maxLength": 128,
              "description": "Target cluster alias"
            },
            "topics.blacklist": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 8192,
              "description": "List of topics and/or regular expressions to not replicate."
            },
            "emit_heartbeats_enabled": {
              "type": "boolean",
              "description": "Emit heartbeats enabled"
            },
            "sync_group_offsets_enabled": {
              "type": "boolean",
              "description": "Sync consumer group offsets"
            },
            "sync_group_offsets_interval_seconds": {
              "type": "integer",
              "minimum": 1,
              "description": "Frequency of consumer group offset sync"
            }
          },
          "description": "ServiceKafkaMirrorMakerCreateReplicationFlowRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaMirrorMakerCreateReplicationFlowResponse"
        }
      ]
  ServiceKafkaMirrorMakerDeleteReplicationFlow:
    description: |-
      Delete a replication flow
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaMirrorMakerDeleteReplicationFlowResponse"
        }
      ]
  ServiceKafkaMirrorMakerGetReplicationFlow:
    description: |-
      Get a replication flow
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "replication_flow"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "replication_flow": {
              "type": "object",
              "required": [
                "enabled",
                "source_cluster",
                "target_cluster"
              ],
              "properties": {
                "topics": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 8192,
                  "description": "List of topics and/or regular expressions to replicate."
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Is replication flow enabled"
                },
                "source_cluster": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Source cluster alias"
                },
                "target_cluster": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Target cluster alias"
                },
                "topics.blacklist": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 8192,
                  "description": "List of topics and/or regular expressions to not replicate."
                },
                "emit_heartbeats_enabled": {
                  "type": "boolean",
                  "description": "Emit heartbeats enabled"
                },
                "sync_group_offsets_enabled": {
                  "type": "boolean",
                  "description": "Sync consumer group offsets"
                },
                "sync_group_offsets_interval_seconds": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "Frequency of consumer group offset sync"
                }
              },
              "description": "Replication flow"
            }
          },
          "description": "ServiceKafkaMirrorMakerGetReplicationFlowResponse"
        }
      ]
  ServiceKafkaMirrorMakerGetReplicationFlows:
    description: |-
      Get replication flows
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "replication_flows"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "replication_flows": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "enabled",
                  "source_cluster",
                  "target_cluster"
                ],
                "properties": {
                  "topics": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 8192,
                    "description": "List of topics and/or regular expressions to replicate."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Is replication flow enabled"
                  },
                  "source_cluster": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Source cluster alias"
                  },
                  "target_cluster": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Target cluster alias"
                  },
                  "topics.blacklist": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 8192,
                    "description": "List of topics and/or regular expressions to not replicate."
                  },
                  "emit_heartbeats_enabled": {
                    "type": "boolean",
                    "description": "Emit heartbeats enabled"
                  },
                  "sync_group_offsets_enabled": {
                    "type": "boolean",
                    "description": "Sync consumer group offsets"
                  },
                  "sync_group_offsets_interval_seconds": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Frequency of consumer group offset sync"
                  }
                }
              },
              "maxItems": 256,
              "description": "Replication flows"
            }
          },
          "description": "ServiceKafkaMirrorMakerGetReplicationFlowsResponse"
        }
      ]
  ServiceKafkaMirrorMakerPatchReplicationFlow:
    description: |-
      Update a replication flow
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "topics": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 8192,
              "description": "List of topics and/or regular expressions to replicate."
            },
            "enabled": {
              "type": "boolean",
              "description": "Is replication flow enabled"
            },
            "topics.blacklist": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 8192,
              "description": "List of topics and/or regular expressions to not replicate."
            },
            "emit_heartbeats_enabled": {
              "type": "boolean",
              "description": "Emit heartbeats enabled"
            },
            "sync_group_offsets_enabled": {
              "type": "boolean",
              "description": "Sync consumer group offsets"
            },
            "sync_group_offsets_interval_seconds": {
              "type": "integer",
              "minimum": 1,
              "description": "Frequency of consumer group offset sync"
            }
          },
          "description": "ServiceKafkaMirrorMakerPatchReplicationFlowRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "replication_flow"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "replication_flow": {
              "type": "object",
              "required": [
                "enabled",
                "source_cluster",
                "target_cluster"
              ],
              "properties": {
                "topics": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 8192,
                  "description": "List of topics and/or regular expressions to replicate."
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Is replication flow enabled"
                },
                "source_cluster": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Source cluster alias"
                },
                "target_cluster": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Target cluster alias"
                },
                "topics.blacklist": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 8192,
                  "description": "List of topics and/or regular expressions to not replicate."
                },
                "emit_heartbeats_enabled": {
                  "type": "boolean",
                  "description": "Emit heartbeats enabled"
                },
                "sync_group_offsets_enabled": {
                  "type": "boolean",
                  "description": "Sync consumer group offsets"
                },
                "sync_group_offsets_interval_seconds": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "Frequency of consumer group offset sync"
                }
              },
              "description": "Replication flow"
            }
          },
          "description": "ServiceKafkaMirrorMakerPatchReplicationFlowResponse"
        }
      ]
  ServiceKafkaTopicCreate:
    description: |-
      Create a Kafka topic
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "topic_name"
          ],
          "properties": {
            "tags": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "description": "Tag key"
                  },
                  "value": {
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 0,
                    "description": "Tag value"
                  }
                }
              },
              "maxItems": 3,
              "minItems": 0,
              "description": "Topic tags"
            },
            "config": {
              "type": "object",
              "properties": {
                "flush_ms": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "flush.ms"
                },
                "segment_ms": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "segment.ms"
                },
                "preallocate": {
                  "type": "boolean",
                  "description": "preallocate"
                },
                "retention_ms": {
                  "type": "integer",
                  "description": "retention.ms"
                },
                "segment_bytes": {
                  "type": "integer",
                  "minimum": 14,
                  "description": "segment.bytes"
                },
                "cleanup_policy": {
                  "enum": [
                    "delete",
                    "compact",
                    "compact,delete"
                  ],
                  "type": "string",
                  "description": "cleanup.policy"
                },
                "flush_messages": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "flush.messages"
                },
                "retention_bytes": {
                  "type": "integer",
                  "description": "retention.bytes"
                },
                "compression_type": {
                  "enum": [
                    "snappy",
                    "gzip",
                    "lz4",
                    "producer",
                    "uncompressed",
                    "zstd"
                  ],
                  "type": "string",
                  "description": "compression.type"
                },
                "max_message_bytes": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "max.message.bytes"
                },
                "segment_jitter_ms": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "segment.jitter.ms"
                },
                "delete_retention_ms": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "delete.retention.ms"
                },
                "min_insync_replicas": {
                  "type": "integer",
                  "maximum": 7,
                  "minimum": 1,
                  "description": "min.insync.replicas"
                },
                "segment_index_bytes": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "segment.index.bytes"
                },
                "file_delete_delay_ms": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "file.delete.delay.ms"
                },
                "index_interval_bytes": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "index.interval.bytes"
                },
                "max_compaction_lag_ms": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "max.compaction.lag.ms"
                },
                "min_compaction_lag_ms": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "min.compaction.lag.ms"
                },
                "message_format_version": {
                  "enum": [
                    "0.8.0",
                    "0.8.1",
                    "0.8.2",
                    "0.9.0",
                    "0.10.0",
                    "0.10.0-IV0",
                    "0.10.0-IV1",
                    "0.10.1",
                    "0.10.1-IV0",
                    "0.10.1-IV1",
                    "0.10.1-IV2",
                    "0.10.2",
                    "0.10.2-IV0",
                    "0.11.0",
                    "0.11.0-IV0",
                    "0.11.0-IV1",
                    "0.11.0-IV2",
                    "1.0",
                    "1.0-IV0",
                    "1.1",
                    "1.1-IV0",
                    "2.0",
                    "2.0-IV0",
                    "2.0-IV1",
                    "2.1",
                    "2.1-IV0",
                    "2.1-IV1",
                    "2.1-IV2",
                    "2.2",
                    "2.2-IV0",
                    "2.2-IV1",
                    "2.3",
                    "2.3-IV0",
                    "2.3-IV1",
                    "2.4",
                    "2.4-IV0",
                    "2.4-IV1",
                    "2.5",
                    "2.5-IV0",
                    "2.6",
                    "2.6-IV0",
                    "2.7",
                    "2.7-IV0",
                    "2.7-IV1",
                    "2.7-IV2",
                    "2.8",
                    "2.8-IV0",
                    "2.8-IV1"
                  ],
                  "type": "string",
                  "description": "message.format.version"
                },
                "message_timestamp_type": {
                  "enum": [
                    "CreateTime",
                    "LogAppendTime"
                  ],
                  "type": "string",
                  "description": "message.timestamp.type"
                },
                "min_cleanable_dirty_ratio": {
                  "type": "number",
                  "maximum": 1,
                  "minimum": 0,
                  "description": "min.cleanable.dirty.ratio"
                },
                "message_downconversion_enable": {
                  "type": "boolean",
                  "description": "message.downconversion.enable"
                },
                "unclean_leader_election_enable": {
                  "type": "boolean",
                  "description": "unclean.leader.election.enable"
                },
                "message_timestamp_difference_max_ms": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "message.timestamp.difference.max.ms"
                }
              },
              "description": "Kafka topic configuration"
            },
            "partitions": {
              "type": "integer",
              "maximum": 1000000,
              "minimum": 1,
              "description": "Number of partitions"
            },
            "topic_name": {
              "type": "string",
              "maxLength": 249,
              "minLength": 1,
              "description": "Topic name"
            },
            "replication": {
              "type": "integer",
              "minimum": 1,
              "description": "Number of replicas"
            },
            "cleanup_policy": {
              "enum": [
                "delete",
                "compact",
                "compact,delete"
              ],
              "type": "string",
              "description": "DEPRECATED: use config.cleanup_policy"
            },
            "retention_bytes": {
              "type": "integer",
              "description": "DEPRECATED: use config.retention_bytes"
            },
            "retention_hours": {
              "type": "integer",
              "maximum": 2562047788015,
              "description": "DEPRECATED: use config.retention_ms"
            },
            "min_insync_replicas": {
              "type": "integer",
              "maximum": 7,
              "minimum": 1,
              "description": "DEPRECATED: use config.min_insync_replicas"
            }
          },
          "description": "ServiceKafkaTopicCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaTopicCreateResponse"
        }
      ]
  ServiceKafkaTopicDelete:
    description: |-
      Delete a Kafka topic
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaTopicDeleteResponse"
        }
      ]
  ServiceKafkaTopicGet:
    description: |-
      Get Kafka topic info
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "topic"
          ],
          "properties": {
            "topic": {
              "type": "object",
              "required": [
                "cleanup_policy",
                "config",
                "min_insync_replicas",
                "partitions",
                "replication",
                "retention_bytes",
                "retention_hours",
                "state",
                "tags",
                "topic_name"
              ],
              "properties": {
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "key",
                      "value"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "description": "Tag key"
                      },
                      "value": {
                        "type": "string",
                        "maxLength": 256,
                        "minLength": 0,
                        "description": "Tag value"
                      }
                    }
                  },
                  "maxItems": 3,
                  "minItems": 0,
                  "description": "Topic tags"
                },
                "state": {
                  "enum": [
                    "ACTIVE",
                    "CONFIGURING",
                    "DELETING"
                  ],
                  "type": "string",
                  "description": "Topic state"
                },
                "config": {
                  "type": "object",
                  "properties": {
                    "flush_ms": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "flush.ms"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "flush.ms value, source and synonyms"
                    },
                    "segment_ms": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "segment.ms"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "segment.ms value, source and synonyms"
                    },
                    "preallocate": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "boolean",
                          "description": "preallocate"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "preallocate value, source and synonyms"
                    },
                    "retention_ms": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "description": "retention.ms"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "retention.ms value, source and synonyms"
                    },
                    "segment_bytes": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "minimum": 14,
                          "description": "segment.bytes"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "segment.bytes value, source and synonyms"
                    },
                    "cleanup_policy": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "maxLength": 64,
                          "description": "cleanup.policy"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "cleanup.policy value, source and synonyms"
                    },
                    "flush_messages": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "flush.messages"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "flush.messages value, source and synonyms"
                    },
                    "retention_bytes": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "description": "retention.bytes"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "retention.bytes value, source and synonyms"
                    },
                    "compression_type": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "enum": [
                            "snappy",
                            "gzip",
                            "lz4",
                            "producer",
                            "uncompressed",
                            "zstd"
                          ],
                          "type": "string",
                          "description": "compression.type"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "compression.type value, source and synonyms"
                    },
                    "max_message_bytes": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "max.message.bytes"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "max.message.bytes value, source and synonyms"
                    },
                    "segment_jitter_ms": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "segment.jitter.ms"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "segment.jitter.ms value, source and synonyms"
                    },
                    "delete_retention_ms": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "delete.retention.ms"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "delete.retention.ms value, source and synonyms"
                    },
                    "min_insync_replicas": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "maximum": 7,
                          "minimum": 1,
                          "description": "min.insync.replicas"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "min.insync.replicas value, source and synonyms"
                    },
                    "segment_index_bytes": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "segment.index.bytes"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "segment.index.bytes value, source and synonyms"
                    },
                    "file_delete_delay_ms": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "file.delete.delay.ms"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "file.delete.delay.ms value, source and synonyms"
                    },
                    "index_interval_bytes": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "index.interval.bytes"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "index.interval.bytes value, source and synonyms"
                    },
                    "max_compaction_lag_ms": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "max.compaction.lag.ms"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "max.compaction.lag.ms value, source and synonyms"
                    },
                    "min_compaction_lag_ms": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "min.compaction.lag.ms"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "min.compaction.lag.ms value, source and synonyms"
                    },
                    "message_format_version": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "enum": [
                            "0.8.0",
                            "0.8.1",
                            "0.8.2",
                            "0.9.0",
                            "0.10.0",
                            "0.10.0-IV0",
                            "0.10.0-IV1",
                            "0.10.1",
                            "0.10.1-IV0",
                            "0.10.1-IV1",
                            "0.10.1-IV2",
                            "0.10.2",
                            "0.10.2-IV0",
                            "0.11.0",
                            "0.11.0-IV0",
                            "0.11.0-IV1",
                            "0.11.0-IV2",
                            "1.0",
                            "1.0-IV0",
                            "1.1",
                            "1.1-IV0",
                            "2.0",
                            "2.0-IV0",
                            "2.0-IV1",
                            "2.1",
                            "2.1-IV0",
                            "2.1-IV1",
                            "2.1-IV2",
                            "2.2",
                            "2.2-IV0",
                            "2.2-IV1",
                            "2.3",
                            "2.3-IV0",
                            "2.3-IV1",
                            "2.4",
                            "2.4-IV0",
                            "2.4-IV1",
                            "2.5",
                            "2.5-IV0",
                            "2.6",
                            "2.6-IV0",
                            "2.7",
                            "2.7-IV0",
                            "2.7-IV1",
                            "2.7-IV2",
                            "2.8",
                            "2.8-IV0",
                            "2.8-IV1"
                          ],
                          "type": "string",
                          "description": "message.format.version"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "message.format.version value, source and synonyms"
                    },
                    "message_timestamp_type": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "enum": [
                            "CreateTime",
                            "LogAppendTime"
                          ],
                          "type": "string",
                          "description": "message.timestamp.type"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "message.timestamp.type value, source and synonyms"
                    },
                    "min_cleanable_dirty_ratio": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number",
                          "maximum": 1,
                          "minimum": 0,
                          "description": "min.cleanable.dirty.ratio"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "min.cleanable.dirty.ratio value, source and synonyms"
                    },
                    "message_downconversion_enable": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "boolean",
                          "description": "message.downconversion.enable"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "message.downconversion.enable value, source and synonyms"
                    },
                    "unclean_leader_election_enable": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "boolean",
                          "description": "unclean.leader.election.enable"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "unclean.leader.election.enable value, source and synonyms"
                    },
                    "message_timestamp_difference_max_ms": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "message.timestamp.difference.max.ms"
                        },
                        "source": {
                          "enum": [
                            "unknown_config",
                            "topic_config",
                            "dynamic_broker_config",
                            "dynamic_default_broker_config",
                            "static_broker_config",
                            "default_config",
                            "dynamic_broker_logger_config"
                          ],
                          "type": "string",
                          "description": "Source of the Kafka topic configuration entry"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Synonym name"
                              },
                              "value": {
                                "type": "boolean",
                                "description": "Synonym value"
                              },
                              "source": {
                                "enum": [
                                  "unknown_config",
                                  "topic_config",
                                  "dynamic_broker_config",
                                  "dynamic_default_broker_config",
                                  "static_broker_config",
                                  "default_config",
                                  "dynamic_broker_logger_config"
                                ],
                                "type": "string",
                                "description": "Source of the Kafka topic configuration entry"
                              }
                            }
                          },
                          "description": "Configuration synonyms"
                        }
                      },
                      "description": "message.timestamp.difference.max.ms value, source and synonyms"
                    }
                  },
                  "description": "Kafka topic configuration"
                },
                "partitions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "consumer_groups",
                      "earliest_offset",
                      "isr",
                      "latest_offset",
                      "partition",
                      "size"
                    ],
                    "properties": {
                      "isr": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Number of In Sync Replicas (ISR)"
                      },
                      "size": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Size of partition in bytes"
                      },
                      "partition": {
                        "type": "integer",
                        "description": "Partition number"
                      },
                      "latest_offset": {
                        "type": "integer",
                        "description": "Latest partition message offset"
                      },
                      "consumer_groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "group_name",
                            "offset"
                          ],
                          "properties": {
                            "offset": {
                              "type": "integer",
                              "minimum": 0,
                              "description": "Latest partition message offset"
                            },
                            "group_name": {
                              "type": "string",
                              "description": "consumer group"
                            }
                          }
                        },
                        "description": "List of Kafka consumer groups"
                      },
                      "earliest_offset": {
                        "type": "integer",
                        "description": "Earliest partition message offset"
                      }
                    }
                  },
                  "description": "Topic partitions"
                },
                "topic_name": {
                  "type": "string",
                  "maxLength": 249,
                  "minLength": 1,
                  "description": "Topic name"
                },
                "replication": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "Number of replicas"
                },
                "cleanup_policy": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "DEPRECATED: use config.cleanup_policy"
                },
                "retention_bytes": {
                  "type": "integer",
                  "description": "DEPRECATED: use config.retention_bytes"
                },
                "retention_hours": {
                  "type": "integer",
                  "maximum": 2562047788015,
                  "description": "DEPRECATED: use config.retention_ms"
                },
                "min_insync_replicas": {
                  "type": "integer",
                  "maximum": 7,
                  "minimum": 1,
                  "description": "DEPRECATED: use config.min_insync_replicas"
                }
              },
              "description": "Kafka topic information"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaTopicGetResponse"
        }
      ]
  ServiceKafkaTopicList:
    description: |-
      Get Kafka topic list
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "topics"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "topics": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "cleanup_policy",
                  "min_insync_replicas",
                  "partitions",
                  "replication",
                  "retention_bytes",
                  "retention_hours",
                  "state",
                  "tags",
                  "topic_name"
                ],
                "properties": {
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "description": "Tag key"
                        },
                        "value": {
                          "type": "string",
                          "maxLength": 256,
                          "minLength": 0,
                          "description": "Tag value"
                        }
                      }
                    },
                    "maxItems": 3,
                    "minItems": 0,
                    "description": "Topic tags"
                  },
                  "state": {
                    "enum": [
                      "ACTIVE",
                      "CONFIGURING",
                      "DELETING"
                    ],
                    "type": "string",
                    "description": "Topic state"
                  },
                  "partitions": {
                    "type": "integer",
                    "maximum": 1000000,
                    "minimum": 1,
                    "description": "Number of partitions"
                  },
                  "topic_name": {
                    "type": "string",
                    "maxLength": 249,
                    "minLength": 1,
                    "description": "Topic name"
                  },
                  "replication": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Number of replicas"
                  },
                  "cleanup_policy": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "cleanup.policy"
                  },
                  "retention_bytes": {
                    "type": "integer",
                    "description": "retention.bytes"
                  },
                  "retention_hours": {
                    "type": "integer",
                    "maximum": 2562047788015,
                    "description": "Retention period (hours)"
                  },
                  "min_insync_replicas": {
                    "type": "integer",
                    "maximum": 7,
                    "minimum": 1,
                    "description": "min.insync.replicas"
                  }
                }
              },
              "description": "List of Kafka topics"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaTopicListResponse"
        }
      ]
  ServiceKafkaTopicMessageList:
    description: |-
      List kafka topic messages
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "partitions"
          ],
          "properties": {
            "format": {
              "enum": [
                "avro",
                "binary",
                "json"
              ],
              "type": "string",
              "description": "The format of consumed messages, which is used to convert messages into a JSON-compatible form. Valid values: binary, avro, json. If unspecified, defaults to binary"
            },
            "timeout": {
              "type": "integer",
              "maximum": 40000,
              "minimum": 3000,
              "description": "The maximum total time to wait for messages for a request if the maximum request size has not yet been reached"
            },
            "max_bytes": {
              "type": "integer",
              "maximum": 1000000000,
              "minimum": 1024,
              "description": "The maximum number of bytes of unencoded keys and values that should be included in the response. This provides approximate control over the size of responses and the amount of memory required to store the decoded response. The actual limit will be the minimum of this setting and the server-side configuration consumer.request.max.bytes. Default is unlimited"
            },
            "partitions": {
              "type": "object",
              "properties": {},
              "description": "Object of desired partition / offset mappings"
            }
          },
          "description": "ServiceKafkaTopicMessageListRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "messages": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "object",
                    "properties": {},
                    "description": "The message key, formatted according to the embedded format"
                  },
                  "topic": {
                    "type": "string",
                    "description": "The name of the topic"
                  },
                  "value": {
                    "type": "object",
                    "properties": {},
                    "description": "The message value, formatted according to the embedded format"
                  },
                  "offset": {
                    "type": "integer",
                    "description": "Offset of the message"
                  },
                  "partition": {
                    "type": "integer",
                    "description": "Partition of the message"
                  }
                }
              },
              "description": "List of messages from topic"
            }
          },
          "description": "ServiceKafkaTopicMessageListResponse"
        }
      ]
  ServiceKafkaTopicMessageProduce:
    description: |-
      Produce message into a kafka topic
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "format",
            "records"
          ],
          "properties": {
            "format": {
              "enum": [
                "json",
                "binary",
                "avro"
              ],
              "type": "string",
              "description": "The format of the content."
            },
            "records": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "object",
                    "properties": {},
                    "description": "Key for the produced record"
                  },
                  "value": {
                    "type": "object",
                    "properties": {},
                    "description": "Value for the produced record"
                  },
                  "partition": {
                    "type": "integer",
                    "maximum": 10000,
                    "minimum": 0,
                    "description": "Optionally specify the partition where to produce the record"
                  }
                }
              },
              "maxItems": 32,
              "description": "List of records to produce to the topic"
            },
            "key_schema": {
              "type": "string",
              "maxLength": 2048,
              "minLength": 18,
              "description": "Full schema encoded as a string (e.g. JSON serialized for Avro data)"
            },
            "value_schema": {
              "type": "string",
              "maxLength": 2048,
              "minLength": 18,
              "description": "Full schema encoded as a string (e.g. JSON serialized for Avro data)"
            },
            "key_schema_id": {
              "type": "integer",
              "maximum": 50000,
              "minimum": 1,
              "description": "ID returned by a previous request using the same schema. This ID corresponds to the ID of the schema in the registry."
            },
            "value_schema_id": {
              "type": "integer",
              "maximum": 50000,
              "minimum": 1,
              "description": "ID returned by a previous request using the same schema. This ID corresponds to the ID of the schema in the registry."
            }
          },
          "description": "ServiceKafkaTopicMessageProduceRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "offsets": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "description": "An error message describing why the operation failed, or null if it succeeded"
                  },
                  "offset": {
                    "type": "integer",
                    "description": "Offset of the message, or null if publishing the message failed"
                  },
                  "partition": {
                    "type": "integer",
                    "description": "Partition the message was published to, or null if publishing the message failed"
                  },
                  "error_code": {
                    "type": "integer",
                    "description": "An error code classifying the reason this operation failed, or null if it succeeded. 1 = Non-retriable Kafka exception, 2 = Retriable Kafka exception; the message might be sent successfully if retried"
                  }
                }
              },
              "description": "List of offsets for the produced record"
            },
            "key_schema_id": {
              "type": "integer",
              "description": "The ID for the schema used to produce keys, or null if keys were not used"
            },
            "value_schema_id": {
              "type": "integer",
              "description": "The ID for the schema used to produce values"
            }
          },
          "description": "ServiceKafkaTopicMessageProduceResponse"
        }
      ]
  ServiceKafkaTopicUpdate:
    description: |-
      Update a Kafka topic
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "tags": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "description": "Tag key"
                  },
                  "value": {
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 0,
                    "description": "Tag value"
                  }
                }
              },
              "maxItems": 3,
              "minItems": 0,
              "description": "Topic tags"
            },
            "config": {
              "type": "object",
              "properties": {
                "flush_ms": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "flush.ms"
                },
                "segment_ms": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "segment.ms"
                },
                "preallocate": {
                  "type": "boolean",
                  "description": "preallocate"
                },
                "retention_ms": {
                  "type": "integer",
                  "description": "retention.ms"
                },
                "segment_bytes": {
                  "type": "integer",
                  "minimum": 14,
                  "description": "segment.bytes"
                },
                "cleanup_policy": {
                  "enum": [
                    "delete",
                    "compact",
                    "compact,delete"
                  ],
                  "type": "string",
                  "description": "cleanup.policy"
                },
                "flush_messages": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "flush.messages"
                },
                "retention_bytes": {
                  "type": "integer",
                  "description": "retention.bytes"
                },
                "compression_type": {
                  "enum": [
                    "snappy",
                    "gzip",
                    "lz4",
                    "producer",
                    "uncompressed",
                    "zstd"
                  ],
                  "type": "string",
                  "description": "compression.type"
                },
                "max_message_bytes": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "max.message.bytes"
                },
                "segment_jitter_ms": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "segment.jitter.ms"
                },
                "delete_retention_ms": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "delete.retention.ms"
                },
                "min_insync_replicas": {
                  "type": "integer",
                  "maximum": 7,
                  "minimum": 1,
                  "description": "min.insync.replicas"
                },
                "segment_index_bytes": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "segment.index.bytes"
                },
                "file_delete_delay_ms": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "file.delete.delay.ms"
                },
                "index_interval_bytes": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "index.interval.bytes"
                },
                "max_compaction_lag_ms": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "max.compaction.lag.ms"
                },
                "min_compaction_lag_ms": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "min.compaction.lag.ms"
                },
                "message_format_version": {
                  "enum": [
                    "0.8.0",
                    "0.8.1",
                    "0.8.2",
                    "0.9.0",
                    "0.10.0",
                    "0.10.0-IV0",
                    "0.10.0-IV1",
                    "0.10.1",
                    "0.10.1-IV0",
                    "0.10.1-IV1",
                    "0.10.1-IV2",
                    "0.10.2",
                    "0.10.2-IV0",
                    "0.11.0",
                    "0.11.0-IV0",
                    "0.11.0-IV1",
                    "0.11.0-IV2",
                    "1.0",
                    "1.0-IV0",
                    "1.1",
                    "1.1-IV0",
                    "2.0",
                    "2.0-IV0",
                    "2.0-IV1",
                    "2.1",
                    "2.1-IV0",
                    "2.1-IV1",
                    "2.1-IV2",
                    "2.2",
                    "2.2-IV0",
                    "2.2-IV1",
                    "2.3",
                    "2.3-IV0",
                    "2.3-IV1",
                    "2.4",
                    "2.4-IV0",
                    "2.4-IV1",
                    "2.5",
                    "2.5-IV0",
                    "2.6",
                    "2.6-IV0",
                    "2.7",
                    "2.7-IV0",
                    "2.7-IV1",
                    "2.7-IV2",
                    "2.8",
                    "2.8-IV0",
                    "2.8-IV1"
                  ],
                  "type": "string",
                  "description": "message.format.version"
                },
                "message_timestamp_type": {
                  "enum": [
                    "CreateTime",
                    "LogAppendTime"
                  ],
                  "type": "string",
                  "description": "message.timestamp.type"
                },
                "min_cleanable_dirty_ratio": {
                  "type": "number",
                  "maximum": 1,
                  "minimum": 0,
                  "description": "min.cleanable.dirty.ratio"
                },
                "message_downconversion_enable": {
                  "type": "boolean",
                  "description": "message.downconversion.enable"
                },
                "unclean_leader_election_enable": {
                  "type": "boolean",
                  "description": "unclean.leader.election.enable"
                },
                "message_timestamp_difference_max_ms": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "message.timestamp.difference.max.ms"
                }
              },
              "description": "Kafka topic configuration"
            },
            "partitions": {
              "type": "integer",
              "maximum": 1000000,
              "minimum": 1,
              "description": "Number of partitions"
            },
            "replication": {
              "type": "integer",
              "minimum": 1,
              "description": "Number of replicas"
            },
            "retention_bytes": {
              "type": "integer",
              "description": "DEPRECATED: use config.retention_bytes"
            },
            "retention_hours": {
              "type": "integer",
              "maximum": 2562047788015,
              "description": "DEPRECATED: use config.retention_ms"
            },
            "min_insync_replicas": {
              "type": "integer",
              "maximum": 7,
              "minimum": 1,
              "description": "DEPRECATED: use config.min_insync_replicas"
            }
          },
          "description": "ServiceKafkaTopicUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceKafkaTopicUpdateResponse"
        }
      ]
  ServiceKmsGetCA:
    description: |-
      Retrieve a service CA
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "certificate"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "certificate": {
              "type": "string",
              "description": "PEM encoded certificate"
            }
          },
          "description": "ServiceKmsGetCAResponse"
        }
      ]
  ServiceKmsGetKeypair:
    description: |-
      Retrieve service keypair
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "certificate",
            "key"
          ],
          "properties": {
            "key": {
              "type": "string",
              "description": "PEM encoded private key"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "certificate": {
              "type": "string",
              "description": "PEM encoded certificate"
            }
          },
          "description": "ServiceKmsGetKeypairResponse"
        }
      ]
  ServiceList:
    description: |-
      List services
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "services"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "services": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "cloud_name",
                  "create_time",
                  "group_list",
                  "plan",
                  "project_vpc_id",
                  "service_integrations",
                  "service_name",
                  "service_type",
                  "service_uri",
                  "state",
                  "termination_protection",
                  "update_time",
                  "user_config"
                ],
                "properties": {
                  "acl": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "permission",
                        "topic",
                        "username"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID"
                        },
                        "topic": {
                          "type": "string",
                          "maxLength": 249,
                          "minLength": 1,
                          "description": "Topic name pattern"
                        },
                        "username": {
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "description": "Username"
                        },
                        "permission": {
                          "enum": [
                            "admin",
                            "read",
                            "readwrite",
                            "write"
                          ],
                          "type": "string",
                          "description": "Kafka permission"
                        }
                      }
                    },
                    "description": "List of Kafka ACL entries"
                  },
                  "plan": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Subscription plan"
                  },
                  "state": {
                    "enum": [
                      "POWEROFF",
                      "REBALANCING",
                      "REBUILDING",
                      "RUNNING"
                    ],
                    "type": "string",
                    "description": "State of the service"
                  },
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "password",
                        "type",
                        "username"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Account type"
                        },
                        "password": {
                          "type": "string",
                          "description": "Account password. A null value indicates a user overridden password."
                        },
                        "username": {
                          "type": "string",
                          "description": "Account username"
                        },
                        "access_key": {
                          "type": "string",
                          "description": "Access key for TLS client authentication"
                        },
                        "access_cert": {
                          "type": "string",
                          "description": "Access certificate for TLS client authentication"
                        },
                        "access_control": {
                          "type": "object",
                          "properties": {
                            "m3_group": {
                              "type": "string",
                              "maxLength": 16,
                              "description": "M3 access group to associate users with"
                            },
                            "redis_acl_keys": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 256,
                              "description": "Key access rules"
                            },
                            "redis_acl_channels": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 256,
                              "description": "Permitted pub/sub channel patterns"
                            },
                            "redis_acl_commands": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 256,
                              "description": "Rules for individual commands"
                            },
                            "redis_acl_categories": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 256,
                              "description": "Command category rules"
                            }
                          },
                          "description": "Service specific access controls for user"
                        },
                        "authentication": {
                          "enum": [
                            "caching_sha2_password",
                            "mysql_native_password"
                          ],
                          "type": "string",
                          "description": "Authentication details"
                        },
                        "access_cert_not_valid_after_time": {
                          "type": "string",
                          "description": "Access certificate validity end time (ISO8601)"
                        }
                      }
                    },
                    "description": "List of service users"
                  },
                  "topics": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "cleanup_policy",
                        "min_insync_replicas",
                        "partitions",
                        "replication",
                        "retention_bytes",
                        "retention_hours",
                        "topic_name"
                      ],
                      "properties": {
                        "state": {
                          "enum": [
                            "ACTIVE",
                            "CONFIGURING",
                            "DELETING"
                          ],
                          "type": "string",
                          "description": "Topic state"
                        },
                        "partitions": {
                          "type": "integer",
                          "maximum": 1000000,
                          "minimum": 1,
                          "description": "Number of partitions"
                        },
                        "topic_name": {
                          "type": "string",
                          "maxLength": 249,
                          "minLength": 1,
                          "description": "Topic name"
                        },
                        "replication": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Number of replicas"
                        },
                        "cleanup_policy": {
                          "type": "string",
                          "maxLength": 64,
                          "description": "cleanup.policy"
                        },
                        "retention_bytes": {
                          "type": "integer",
                          "description": "retention.bytes"
                        },
                        "retention_hours": {
                          "type": "integer",
                          "maximum": 2562047788015,
                          "description": "Retention period (hours)"
                        },
                        "min_insync_replicas": {
                          "type": "integer",
                          "maximum": 7,
                          "minimum": 1,
                          "description": "min.insync.replicas"
                        }
                      }
                    },
                    "description": "Kafka topics. DEPRECATED: Use /project/$project/service/$service/topic instead"
                  },
                  "backups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "backup_name",
                        "backup_time",
                        "data_size"
                      ],
                      "properties": {
                        "data_size": {
                          "type": "integer",
                          "description": "Backup's original size before compression"
                        },
                        "backup_name": {
                          "type": "string",
                          "description": "Internal name of this backup"
                        },
                        "backup_time": {
                          "type": "string",
                          "maxLength": 36,
                          "description": "Backup timestamp (ISO 8601)"
                        }
                      }
                    },
                    "description": "List of backups for the service"
                  },
                  "features": {
                    "type": "object",
                    "properties": {},
                    "description": "Feature flags"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {},
                    "description": "Service type specific metadata"
                  },
                  "cloud_name": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "Target cloud"
                  },
                  "components": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "component",
                        "host",
                        "port",
                        "route",
                        "usage"
                      ],
                      "properties": {
                        "ssl": {
                          "type": "boolean",
                          "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted andthis property is only included for service components that may disable encryption."
                        },
                        "host": {
                          "type": "string",
                          "description": "DNS name for connecting to the service component"
                        },
                        "path": {
                          "type": "string",
                          "description": "Path component of the service URL (useful only if service component is HTTP or HTTPS endpoint)"
                        },
                        "port": {
                          "type": "integer",
                          "maximum": 65535,
                          "minimum": 0,
                          "description": "Port number for connecting to the service component"
                        },
                        "route": {
                          "enum": [
                            "dynamic",
                            "public",
                            "private",
                            "privatelink"
                          ],
                          "type": "string",
                          "description": "Network access route"
                        },
                        "usage": {
                          "enum": [
                            "primary",
                            "replica"
                          ],
                          "type": "string",
                          "description": "DNS usage name"
                        },
                        "component": {
                          "type": "string",
                          "description": "Service component name"
                        },
                        "kafka_authentication_method": {
                          "enum": [
                            "certificate",
                            "sasl"
                          ],
                          "type": "string",
                          "description": "Kafka authentication method. This is a value specific to the 'kafka' service component"
                        }
                      }
                    },
                    "description": "Service component information objects"
                  },
                  "group_list": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of service groups the service belongs to. This field is deprecated. It is always set to single element with value 'default'"
                  },
                  "node_count": {
                    "type": "integer",
                    "description": "Number of service nodes in the active plan"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Service creation timestamp (ISO 8601)"
                  },
                  "maintenance": {
                    "type": "object",
                    "required": [
                      "dow",
                      "time",
                      "updates"
                    ],
                    "properties": {
                      "dow": {
                        "enum": [
                          "monday",
                          "tuesday",
                          "wednesday",
                          "thursday",
                          "friday",
                          "saturday",
                          "sunday",
                          "never"
                        ],
                        "type": "string",
                        "description": "Day of week for installing updates"
                      },
                      "time": {
                        "type": "string",
                        "maxLength": 8,
                        "minLength": 8,
                        "description": "Time for installing updates, UTC"
                      },
                      "updates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deadline": {
                              "type": "string",
                              "description": "Deadline for installing the update"
                            },
                            "start_at": {
                              "type": "string",
                              "description": "The time when the update will be automatically applied"
                            },
                            "description": {
                              "type": "string",
                              "description": "Description of the update"
                            },
                            "start_after": {
                              "type": "string",
                              "description": "The earliest time the update will be automatically applied"
                            }
                          }
                        },
                        "description": "List of updates waiting to be installed"
                      }
                    },
                    "description": "Automatic maintenance settings"
                  },
                  "node_states": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "state"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the service node"
                        },
                        "role": {
                          "enum": [
                            "master",
                            "standby",
                            "read-replica"
                          ],
                          "type": "string",
                          "description": "Role of this node. Only returned for a subset of service types"
                        },
                        "state": {
                          "enum": [
                            "leaving",
                            "running",
                            "setting_up_vm",
                            "syncing_data",
                            "unknown"
                          ],
                          "type": "string",
                          "description": "Current state of the service node"
                        },
                        "progress_updates": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "completed",
                              "phase"
                            ],
                            "properties": {
                              "max": {
                                "type": "integer",
                                "description": "Maximum progress value for this phase. May be missing or null. May change."
                              },
                              "min": {
                                "type": "integer",
                                "description": "Minimum progress value for this phase. May be missing or null."
                              },
                              "unit": {
                                "enum": [
                                  "binlogs",
                                  "bytes_compressed",
                                  "bytes_uncompressed",
                                  "wal_lsn"
                                ],
                                "type": "string",
                                "description": "Unit for current/min/max values. New units may be added. If null should be treated as generic unit"
                              },
                              "phase": {
                                "enum": [
                                  "prepare",
                                  "basebackup",
                                  "stream",
                                  "finalize"
                                ],
                                "type": "string",
                                "description": "Key identifying this phase"
                              },
                              "current": {
                                "type": "integer",
                                "description": "Current progress for this phase. May be missing or null."
                              },
                              "completed": {
                                "type": "boolean",
                                "description": "Indicates whether this phase has been completed or not"
                              }
                            }
                          },
                          "description": "Extra information regarding the progress for current state"
                        }
                      }
                    },
                    "description": "State of individual service nodes"
                  },
                  "service_uri": {
                    "type": "string",
                    "description": "URI for connecting to the service (may be null)"
                  },
                  "update_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Service last update timestamp (ISO 8601)"
                  },
                  "user_config": {
                    "type": "object",
                    "properties": {},
                    "description": "Service type-specific settings"
                  },
                  "service_name": {
                    "type": "string",
                    "maxLength": 63,
                    "description": "Service name"
                  },
                  "service_type": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "Service type code"
                  },
                  "disk_space_mb": {
                    "type": "number",
                    "description": "Megabytes of disk space for data storage"
                  },
                  "node_cpu_count": {
                    "type": "integer",
                    "description": "Number of CPUs for each node"
                  },
                  "node_memory_mb": {
                    "type": "number",
                    "description": "Megabytes of memory for each node"
                  },
                  "project_vpc_id": {
                    "type": "string",
                    "maxLength": 36,
                    "minLength": 36,
                    "description": "Project VPC ID"
                  },
                  "connection_info": {
                    "type": "object",
                    "properties": {},
                    "description": "Service-specific connection information properties"
                  },
                  "connection_pools": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "connection_uri",
                        "database",
                        "pool_mode",
                        "pool_name",
                        "pool_size",
                        "username"
                      ],
                      "properties": {
                        "database": {
                          "type": "string",
                          "maxLength": 40,
                          "description": "Service database name"
                        },
                        "username": {
                          "type": "string",
                          "maxLength": 64,
                          "description": "Pool username"
                        },
                        "pool_mode": {
                          "enum": [
                            "session",
                            "transaction",
                            "statement"
                          ],
                          "type": "string",
                          "description": "PGBouncer pool mode"
                        },
                        "pool_name": {
                          "type": "string",
                          "maxLength": 60,
                          "description": "Connection pool name"
                        },
                        "pool_size": {
                          "type": "integer",
                          "maximum": 10000,
                          "minimum": 1,
                          "description": "Size of PGBouncer's PostgreSQL side connection pool"
                        },
                        "connection_uri": {
                          "type": "string",
                          "description": "Connection URI for the DB pool"
                        }
                      }
                    },
                    "description": "PostgreSQL PGBouncer connection pools"
                  },
                  "cloud_description": {
                    "type": "string",
                    "description": "Cloud provider and location"
                  },
                  "service_uri_params": {
                    "type": "object",
                    "properties": {},
                    "description": "service_uri parameterized into key-value pairs"
                  },
                  "service_integrations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "active",
                        "description",
                        "dest_project",
                        "dest_service_type",
                        "enabled",
                        "integration_type",
                        "service_integration_id",
                        "source_project",
                        "source_service",
                        "source_service_type"
                      ],
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "True when integration is active"
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "True when integration is enabled"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the integration"
                        },
                        "user_config": {
                          "type": "object",
                          "properties": {},
                          "description": "Service integration settings"
                        },
                        "dest_project": {
                          "type": "string",
                          "maxLength": 63,
                          "description": "Project name"
                        },
                        "dest_service": {
                          "type": "string",
                          "description": "Destination service name"
                        },
                        "dest_endpoint": {
                          "type": "string",
                          "description": "Destination endpoint name"
                        },
                        "source_project": {
                          "type": "string",
                          "maxLength": 63,
                          "description": "Project name"
                        },
                        "source_service": {
                          "type": "string",
                          "description": "Source service name"
                        },
                        "source_endpoint": {
                          "type": "string",
                          "description": "Source endpoint name"
                        },
                        "dest_endpoint_id": {
                          "type": "string",
                          "description": "Destination endpoint id"
                        },
                        "integration_type": {
                          "type": "string",
                          "description": "Type of the integration"
                        },
                        "dest_service_type": {
                          "type": "string",
                          "maxLength": 64,
                          "description": "Service type code"
                        },
                        "integration_status": {
                          "type": "object",
                          "properties": {},
                          "description": "Integration status"
                        },
                        "source_endpoint_id": {
                          "type": "string",
                          "description": "Source endpoint ID"
                        },
                        "source_service_type": {
                          "type": "string",
                          "maxLength": 64,
                          "description": "Service type code"
                        },
                        "service_integration_id": {
                          "type": "string",
                          "description": "Integration ID"
                        }
                      }
                    },
                    "description": "Integrations with other services"
                  },
                  "service_notifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "level",
                        "message",
                        "metadata",
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "enum": [
                            "service_end_of_life",
                            "service_powered_off_removal"
                          ],
                          "type": "string",
                          "description": "Notification type"
                        },
                        "level": {
                          "enum": [
                            "notice",
                            "warning"
                          ],
                          "type": "string",
                          "description": "Notification level"
                        },
                        "message": {
                          "type": "string",
                          "maxLength": 1024,
                          "description": "Human notification message"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "service_end_of_life_time": {
                              "type": "string",
                              "maxLength": 36,
                              "description": "Timestamp in ISO 8601 format, always in UTC"
                            },
                            "end_of_life_help_article_url": {
                              "type": "string",
                              "description": "Link to the help article"
                            }
                          },
                          "description": "Notification metadata"
                        }
                      }
                    },
                    "description": "Service notifications"
                  },
                  "termination_protection": {
                    "type": "boolean",
                    "description": "Service is protected against termination and powering off"
                  },
                  "service_type_description": {
                    "type": "string",
                    "description": "Single line description of the service"
                  }
                }
              },
              "description": "List of services under the project"
            }
          },
          "description": "ServiceListResponse"
        }
      ]
  ServiceMaintenanceStart:
    description: |-
      Start maintenance updates
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceMaintenanceStartResponse"
        }
      ]
  ServiceMetricsFetch:
    description: |-
      Fetch service metrics
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "period": {
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ],
              "type": "string",
              "description": "Metrics time period"
            }
          },
          "description": "ServiceMetricsFetchRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "metrics"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "metrics": {
              "type": "object",
              "properties": {},
              "description": "Service metrics in Google chart compatible format"
            }
          },
          "description": "ServiceMetricsFetchResponse"
        }
      ]
  ServicePGBouncerCreate:
    description: |-
      Create a new connection pool for service
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "database",
            "pool_name",
            "username"
          ],
          "properties": {
            "database": {
              "type": "string",
              "maxLength": 40,
              "description": "Service database name"
            },
            "username": {
              "type": "string",
              "maxLength": 64,
              "description": "Service username"
            },
            "pool_mode": {
              "enum": [
                "session",
                "transaction",
                "statement"
              ],
              "type": "string",
              "description": "PGBouncer pool mode"
            },
            "pool_name": {
              "type": "string",
              "maxLength": 60,
              "description": "Connection pool name"
            },
            "pool_size": {
              "type": "integer",
              "maximum": 10000,
              "minimum": 1,
              "description": "Size of PGBouncer's PostgreSQL side connection pool"
            }
          },
          "description": "ServicePGBouncerCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServicePGBouncerCreateResponse"
        }
      ]
  ServicePGBouncerDelete:
    description: |-
      Delete a connection pool
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServicePGBouncerDeleteResponse"
        }
      ]
  ServicePGBouncerUpdate:
    description: |-
      Update a connection pool
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "database": {
              "type": "string",
              "maxLength": 40,
              "description": "Service database name"
            },
            "username": {
              "type": "string",
              "maxLength": 64,
              "description": "Service username"
            },
            "pool_mode": {
              "enum": [
                "session",
                "transaction",
                "statement"
              ],
              "type": "string",
              "description": "PGBouncer pool mode"
            },
            "pool_size": {
              "type": "integer",
              "maximum": 10000,
              "minimum": 1,
              "description": "Size of PGBouncer's PostgreSQL side connection pool"
            }
          },
          "description": "ServicePGBouncerUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServicePGBouncerUpdateResponse"
        }
      ]
  ServiceQueryActivity:
    description: |-
      Fetch current queries for the service
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer",
              "maximum": 5000,
              "minimum": 1,
              "description": "Limit for number of results"
            },
            "offset": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset for retrieved results based on sort order"
            },
            "order_by": {
              "type": "string",
              "maxLength": 256,
              "description": "Order in which to sort retrieved results"
            }
          },
          "description": "ServiceQueryActivityRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "queries"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "queries": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique connection ID"
                  },
                  "pid": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Connection process ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "Connection name, if specified"
                  },
                  "datid": {
                    "type": "integer",
                    "description": "Database ID"
                  },
                  "flags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Connection state flags"
                  },
                  "query": {
                    "type": "string",
                    "description": "Last/current query running on this connection"
                  },
                  "state": {
                    "type": "string",
                    "description": "Connection state"
                  },
                  "datname": {
                    "type": "string",
                    "description": "Database name"
                  },
                  "usename": {
                    "type": "string",
                    "description": "Username"
                  },
                  "waiting": {
                    "type": "boolean",
                    "description": "Query is waiting"
                  },
                  "usesysid": {
                    "type": "integer",
                    "description": "User ID"
                  },
                  "flags_raw": {
                    "type": "string",
                    "description": "Raw connection flags string"
                  },
                  "leader_pid": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Leader process ID"
                  },
                  "wait_event": {
                    "type": "string",
                    "description": "Connection wait event"
                  },
                  "xact_start": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "backend_xid": {
                    "type": "integer",
                    "description": "XID for current backend"
                  },
                  "client_addr": {
                    "type": "string",
                    "description": "IP address:port pair. Not always available due to load balancers"
                  },
                  "client_port": {
                    "type": "integer",
                    "maximum": 65536,
                    "description": "Client port, -1 is unknown"
                  },
                  "query_start": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "backend_type": {
                    "type": "string",
                    "description": "Backend type"
                  },
                  "backend_xmin": {
                    "type": "integer",
                    "description": "xmin for current backend"
                  },
                  "query_buffer": {
                    "type": "integer",
                    "description": "Query buffer length (disabled if 0)"
                  },
                  "state_change": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "backend_start": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "output_buffer": {
                    "type": "integer",
                    "description": "Output buffer length (disabled if 0)"
                  },
                  "query_duration": {
                    "type": "number",
                    "description": "Duration of the last/current query in seconds"
                  },
                  "active_database": {
                    "type": "string",
                    "description": "Selected database"
                  },
                  "client_hostname": {
                    "type": "string",
                    "description": "Client hostname"
                  },
                  "wait_event_type": {
                    "type": "string",
                    "description": "Connection wait event type"
                  },
                  "application_name": {
                    "type": "string",
                    "description": "Application name when set"
                  },
                  "query_buffer_free": {
                    "type": "integer",
                    "description": "Free bytes in query buffer, if enabled"
                  },
                  "output_list_length": {
                    "type": "integer",
                    "description": "Output list, overflow for output buffering"
                  },
                  "multi_exec_commands": {
                    "type": "integer",
                    "description": "Number of MULTI/EXEC comands"
                  },
                  "output_buffer_memory": {
                    "type": "integer",
                    "description": "Output buffer memory"
                  },
                  "connection_age_seconds": {
                    "type": "number",
                    "description": "Connection age in seconds"
                  },
                  "connection_idle_seconds": {
                    "type": "number",
                    "description": "Connection idle time in seconds"
                  },
                  "active_channel_subscriptions": {
                    "type": "integer",
                    "description": "Currently active channel subscriptions"
                  },
                  "active_pattern_matching_channel_subscriptions": {
                    "type": "integer",
                    "description": "Currently active channel subscriptions using pattern matching"
                  }
                }
              },
              "description": "List of currently running queries and open connections"
            }
          },
          "description": "ServiceQueryActivityResponse"
        }
      ]
  ServiceQueryStatisticsReset:
    description: |-
      Reset service's query statistics
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "queries"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "queries": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              },
              "description": "List of query statistics"
            }
          },
          "description": "ServiceQueryStatisticsResetResponse"
        }
      ]
  ServiceSchemaRegistryCompatibility:
    description: |-
      Check compatibility of schema in Schema Registry
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "schema"
          ],
          "properties": {
            "schema": {
              "type": "string",
              "maxLength": 1048576,
              "description": "Schema"
            }
          },
          "description": "ServiceSchemaRegistryCompatibilityRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "is_compatible"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "is_compatible": {
              "type": "boolean",
              "description": "Compatibility"
            }
          },
          "description": "ServiceSchemaRegistryCompatibilityResponse"
        }
      ]
  ServiceSchemaRegistryGlobalConfigGet:
    description: |-
      Get global configuration for Schema Registry
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "compatibilityLevel"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "compatibilityLevel": {
              "enum": [
                "BACKWARD",
                "BACKWARD_TRANSITIVE",
                "FORWARD",
                "FORWARD_TRANSITIVE",
                "FULL",
                "FULL_TRANSITIVE",
                "NONE"
              ],
              "type": "string",
              "description": "Configuration"
            }
          },
          "description": "ServiceSchemaRegistryGlobalConfigGetResponse"
        }
      ]
  ServiceSchemaRegistryGlobalConfigPut:
    description: |-
      Edit global configuration for Schema Registry
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "compatibility"
          ],
          "properties": {
            "compatibility": {
              "enum": [
                "BACKWARD",
                "BACKWARD_TRANSITIVE",
                "FORWARD",
                "FORWARD_TRANSITIVE",
                "FULL",
                "FULL_TRANSITIVE",
                "NONE"
              ],
              "type": "string",
              "description": "Configuration"
            }
          },
          "description": "ServiceSchemaRegistryGlobalConfigPutRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "compatibility"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "compatibility": {
              "enum": [
                "BACKWARD",
                "BACKWARD_TRANSITIVE",
                "FORWARD",
                "FORWARD_TRANSITIVE",
                "FULL",
                "FULL_TRANSITIVE",
                "NONE"
              ],
              "type": "string",
              "description": "Configuration"
            }
          },
          "description": "ServiceSchemaRegistryGlobalConfigPutResponse"
        }
      ]
  ServiceSchemaRegistrySchemaGet:
    description: |-
      Get schema in Schema Registry
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceSchemaRegistrySchemaGetResponse"
        }
      ]
  ServiceSchemaRegistrySubjectConfigGet:
    description: |-
      Get configuration for Schema Registry subject
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "compatibilityLevel"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "compatibilityLevel": {
              "enum": [
                "BACKWARD",
                "BACKWARD_TRANSITIVE",
                "FORWARD",
                "FORWARD_TRANSITIVE",
                "FULL",
                "FULL_TRANSITIVE",
                "NONE"
              ],
              "type": "string",
              "description": "Configuration"
            }
          },
          "description": "ServiceSchemaRegistrySubjectConfigGetResponse"
        }
      ]
  ServiceSchemaRegistrySubjectConfigPut:
    description: |-
      Edit configuration for Schema Registry subject
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "compatibility"
          ],
          "properties": {
            "compatibility": {
              "enum": [
                "BACKWARD",
                "BACKWARD_TRANSITIVE",
                "FORWARD",
                "FORWARD_TRANSITIVE",
                "FULL",
                "FULL_TRANSITIVE",
                "NONE"
              ],
              "type": "string",
              "description": "Configuration"
            }
          },
          "description": "ServiceSchemaRegistrySubjectConfigPutRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "compatibility"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "compatibility": {
              "enum": [
                "BACKWARD",
                "BACKWARD_TRANSITIVE",
                "FORWARD",
                "FORWARD_TRANSITIVE",
                "FULL",
                "FULL_TRANSITIVE",
                "NONE"
              ],
              "type": "string",
              "description": "Configuration"
            }
          },
          "description": "ServiceSchemaRegistrySubjectConfigPutResponse"
        }
      ]
  ServiceSchemaRegistrySubjectDelete:
    description: |-
      Delete Schema Registry subject
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceSchemaRegistrySubjectDeleteResponse"
        }
      ]
  ServiceSchemaRegistrySubjects:
    description: |-
      Lists Schema Registry subjects
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "subjects"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "subjects": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of available Schema Registry subjects"
            }
          },
          "description": "ServiceSchemaRegistrySubjectsResponse"
        }
      ]
  ServiceSchemaRegistrySubjectVersionDelete:
    description: |-
      Delete Schema Registry subject version
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceSchemaRegistrySubjectVersionDeleteResponse"
        }
      ]
  ServiceSchemaRegistrySubjectVersionGet:
    description: |-
      Get Schema Registry Subject version
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceSchemaRegistrySubjectVersionGetResponse"
        }
      ]
  ServiceSchemaRegistrySubjectVersionPost:
    description: |-
      Register a new Schema in Schema Registry
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "schema"
          ],
          "properties": {
            "schema": {
              "type": "string",
              "maxLength": 1048576,
              "description": "Schema"
            }
          },
          "description": "ServiceSchemaRegistrySubjectVersionPostRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "minimum": 0,
              "description": "Version"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceSchemaRegistrySubjectVersionPostResponse"
        }
      ]
  ServiceSchemaRegistrySubjectVersionSchemaGet:
    description: |-
      Get schema of a specific version in Schema Registry
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceSchemaRegistrySubjectVersionSchemaGetResponse"
        }
      ]
  ServiceSchemaRegistrySubjectVersionsGet:
    description: |-
      Get Schema Registry subject versions
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "versions"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "versions": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "List of available versions for a Schema Registry subject"
            }
          },
          "description": "ServiceSchemaRegistrySubjectVersionsGetResponse"
        }
      ]
  ServiceTaskCreate:
    description: |-
      Create a new task for service
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "task_type"
          ],
          "properties": {
            "task_type": {
              "enum": [
                "upgrade_check",
                "migration_check"
              ],
              "type": "string",
              "description": "Task type"
            },
            "target_version": {
              "enum": [
                "10",
                "11",
                "12",
                "13"
              ],
              "type": "string",
              "description": "Target version used with upgrade_check"
            },
            "migration_check": {
              "type": "object",
              "required": [
                "source_service_uri"
              ],
              "properties": {
                "source_service_uri": {
                  "type": "string",
                  "maxLength": 512,
                  "description": "Service URI of the source MySQL or PostgreSQL database with admin credentials. Used with migration_check."
                }
              },
              "description": "Payload to be used with migration_check"
            }
          },
          "description": "ServiceTaskCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "task"
          ],
          "properties": {
            "task": {
              "type": "object",
              "required": [
                "create_time",
                "result",
                "success",
                "task_type"
              ],
              "properties": {
                "result": {
                  "type": "string",
                  "description": "Task result"
                },
                "success": {
                  "type": "boolean",
                  "description": "Task success"
                },
                "task_type": {
                  "type": "string",
                  "description": "Task type"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                }
              },
              "description": "Task info"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceTaskCreateResponse"
        }
      ]
  ServiceTaskGet:
    description: |-
      Get task result
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "task"
          ],
          "properties": {
            "task": {
              "type": "object",
              "required": [
                "create_time",
                "result",
                "success",
                "task_type"
              ],
              "properties": {
                "result": {
                  "type": "string",
                  "description": "Task result"
                },
                "success": {
                  "type": "boolean",
                  "description": "Task success"
                },
                "task_type": {
                  "type": "string",
                  "description": "Task type"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Timestamp in ISO 8601 format, always in UTC"
                }
              },
              "description": "Task info"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceTaskGetResponse"
        }
      ]
  ServiceUpdate:
    description: |-
      Update service configuration
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "plan": {
              "type": "string",
              "maxLength": 128,
              "description": "Subscription plan"
            },
            "cloud": {
              "type": "string",
              "maxLength": 256,
              "description": "Target cloud"
            },
            "powered": {
              "type": "boolean",
              "description": "Power-on the service (true) or power-off (false)"
            },
            "group_name": {
              "type": "string",
              "maxLength": 256,
              "description": "Service group name (DEPRECATED: do not use)"
            },
            "maintenance": {
              "type": "object",
              "properties": {
                "dow": {
                  "enum": [
                    "monday",
                    "tuesday",
                    "wednesday",
                    "thursday",
                    "friday",
                    "saturday",
                    "sunday",
                    "never"
                  ],
                  "type": "string",
                  "description": "Day of week for installing updates"
                },
                "time": {
                  "type": "string",
                  "maxLength": 8,
                  "minLength": 8,
                  "description": "Time for installing updates, UTC"
                }
              },
              "description": "Automatic maintenance settings"
            },
            "user_config": {
              "type": "object",
              "properties": {},
              "description": "Service type-specific settings"
            },
            "project_vpc_id": {
              "type": "string",
              "maxLength": 36,
              "minLength": 36,
              "description": "Project VPC ID"
            },
            "termination_protection": {
              "type": "boolean",
              "description": "Service is protected against termination and powering off"
            }
          },
          "description": "ServiceUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service": {
              "type": "object",
              "required": [
                "cloud_name",
                "create_time",
                "group_list",
                "plan",
                "project_vpc_id",
                "service_integrations",
                "service_name",
                "service_type",
                "service_uri",
                "state",
                "termination_protection",
                "update_time",
                "user_config"
              ],
              "properties": {
                "acl": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "permission",
                      "topic",
                      "username"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID"
                      },
                      "topic": {
                        "type": "string",
                        "maxLength": 249,
                        "minLength": 1,
                        "description": "Topic name pattern"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "description": "Username"
                      },
                      "permission": {
                        "enum": [
                          "admin",
                          "read",
                          "readwrite",
                          "write"
                        ],
                        "type": "string",
                        "description": "Kafka permission"
                      }
                    }
                  },
                  "description": "List of Kafka ACL entries"
                },
                "plan": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Subscription plan"
                },
                "state": {
                  "enum": [
                    "POWEROFF",
                    "REBALANCING",
                    "REBUILDING",
                    "RUNNING"
                  ],
                  "type": "string",
                  "description": "State of the service"
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "password",
                      "type",
                      "username"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Account type"
                      },
                      "password": {
                        "type": "string",
                        "description": "Account password. A null value indicates a user overridden password."
                      },
                      "username": {
                        "type": "string",
                        "description": "Account username"
                      },
                      "access_key": {
                        "type": "string",
                        "description": "Access key for TLS client authentication"
                      },
                      "access_cert": {
                        "type": "string",
                        "description": "Access certificate for TLS client authentication"
                      },
                      "access_control": {
                        "type": "object",
                        "properties": {
                          "m3_group": {
                            "type": "string",
                            "maxLength": 16,
                            "description": "M3 access group to associate users with"
                          },
                          "redis_acl_keys": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Key access rules"
                          },
                          "redis_acl_channels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Permitted pub/sub channel patterns"
                          },
                          "redis_acl_commands": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Rules for individual commands"
                          },
                          "redis_acl_categories": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Command category rules"
                          }
                        },
                        "description": "Service specific access controls for user"
                      },
                      "authentication": {
                        "enum": [
                          "caching_sha2_password",
                          "mysql_native_password"
                        ],
                        "type": "string",
                        "description": "Authentication details"
                      },
                      "access_cert_not_valid_after_time": {
                        "type": "string",
                        "description": "Access certificate validity end time (ISO8601)"
                      }
                    }
                  },
                  "description": "List of service users"
                },
                "topics": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "cleanup_policy",
                      "min_insync_replicas",
                      "partitions",
                      "replication",
                      "retention_bytes",
                      "retention_hours",
                      "topic_name"
                    ],
                    "properties": {
                      "state": {
                        "enum": [
                          "ACTIVE",
                          "CONFIGURING",
                          "DELETING"
                        ],
                        "type": "string",
                        "description": "Topic state"
                      },
                      "partitions": {
                        "type": "integer",
                        "maximum": 1000000,
                        "minimum": 1,
                        "description": "Number of partitions"
                      },
                      "topic_name": {
                        "type": "string",
                        "maxLength": 249,
                        "minLength": 1,
                        "description": "Topic name"
                      },
                      "replication": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Number of replicas"
                      },
                      "cleanup_policy": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "cleanup.policy"
                      },
                      "retention_bytes": {
                        "type": "integer",
                        "description": "retention.bytes"
                      },
                      "retention_hours": {
                        "type": "integer",
                        "maximum": 2562047788015,
                        "description": "Retention period (hours)"
                      },
                      "min_insync_replicas": {
                        "type": "integer",
                        "maximum": 7,
                        "minimum": 1,
                        "description": "min.insync.replicas"
                      }
                    }
                  },
                  "description": "Kafka topics. DEPRECATED: Use /project/$project/service/$service/topic instead"
                },
                "backups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "backup_name",
                      "backup_time",
                      "data_size"
                    ],
                    "properties": {
                      "data_size": {
                        "type": "integer",
                        "description": "Backup's original size before compression"
                      },
                      "backup_name": {
                        "type": "string",
                        "description": "Internal name of this backup"
                      },
                      "backup_time": {
                        "type": "string",
                        "maxLength": 36,
                        "description": "Backup timestamp (ISO 8601)"
                      }
                    }
                  },
                  "description": "List of backups for the service"
                },
                "features": {
                  "type": "object",
                  "properties": {},
                  "description": "Feature flags"
                },
                "metadata": {
                  "type": "object",
                  "properties": {},
                  "description": "Service type specific metadata"
                },
                "cloud_name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Target cloud"
                },
                "components": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "component",
                      "host",
                      "port",
                      "route",
                      "usage"
                    ],
                    "properties": {
                      "ssl": {
                        "type": "boolean",
                        "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted andthis property is only included for service components that may disable encryption."
                      },
                      "host": {
                        "type": "string",
                        "description": "DNS name for connecting to the service component"
                      },
                      "path": {
                        "type": "string",
                        "description": "Path component of the service URL (useful only if service component is HTTP or HTTPS endpoint)"
                      },
                      "port": {
                        "type": "integer",
                        "maximum": 65535,
                        "minimum": 0,
                        "description": "Port number for connecting to the service component"
                      },
                      "route": {
                        "enum": [
                          "dynamic",
                          "public",
                          "private",
                          "privatelink"
                        ],
                        "type": "string",
                        "description": "Network access route"
                      },
                      "usage": {
                        "enum": [
                          "primary",
                          "replica"
                        ],
                        "type": "string",
                        "description": "DNS usage name"
                      },
                      "component": {
                        "type": "string",
                        "description": "Service component name"
                      },
                      "kafka_authentication_method": {
                        "enum": [
                          "certificate",
                          "sasl"
                        ],
                        "type": "string",
                        "description": "Kafka authentication method. This is a value specific to the 'kafka' service component"
                      }
                    }
                  },
                  "description": "Service component information objects"
                },
                "group_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of service groups the service belongs to. This field is deprecated. It is always set to single element with value 'default'"
                },
                "node_count": {
                  "type": "integer",
                  "description": "Number of service nodes in the active plan"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Service creation timestamp (ISO 8601)"
                },
                "maintenance": {
                  "type": "object",
                  "required": [
                    "dow",
                    "time",
                    "updates"
                  ],
                  "properties": {
                    "dow": {
                      "enum": [
                        "monday",
                        "tuesday",
                        "wednesday",
                        "thursday",
                        "friday",
                        "saturday",
                        "sunday",
                        "never"
                      ],
                      "type": "string",
                      "description": "Day of week for installing updates"
                    },
                    "time": {
                      "type": "string",
                      "maxLength": 8,
                      "minLength": 8,
                      "description": "Time for installing updates, UTC"
                    },
                    "updates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "deadline": {
                            "type": "string",
                            "description": "Deadline for installing the update"
                          },
                          "start_at": {
                            "type": "string",
                            "description": "The time when the update will be automatically applied"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the update"
                          },
                          "start_after": {
                            "type": "string",
                            "description": "The earliest time the update will be automatically applied"
                          }
                        }
                      },
                      "description": "List of updates waiting to be installed"
                    }
                  },
                  "description": "Automatic maintenance settings"
                },
                "node_states": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "state"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the service node"
                      },
                      "role": {
                        "enum": [
                          "master",
                          "standby",
                          "read-replica"
                        ],
                        "type": "string",
                        "description": "Role of this node. Only returned for a subset of service types"
                      },
                      "state": {
                        "enum": [
                          "leaving",
                          "running",
                          "setting_up_vm",
                          "syncing_data",
                          "unknown"
                        ],
                        "type": "string",
                        "description": "Current state of the service node"
                      },
                      "progress_updates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "completed",
                            "phase"
                          ],
                          "properties": {
                            "max": {
                              "type": "integer",
                              "description": "Maximum progress value for this phase. May be missing or null. May change."
                            },
                            "min": {
                              "type": "integer",
                              "description": "Minimum progress value for this phase. May be missing or null."
                            },
                            "unit": {
                              "enum": [
                                "binlogs",
                                "bytes_compressed",
                                "bytes_uncompressed",
                                "wal_lsn"
                              ],
                              "type": "string",
                              "description": "Unit for current/min/max values. New units may be added. If null should be treated as generic unit"
                            },
                            "phase": {
                              "enum": [
                                "prepare",
                                "basebackup",
                                "stream",
                                "finalize"
                              ],
                              "type": "string",
                              "description": "Key identifying this phase"
                            },
                            "current": {
                              "type": "integer",
                              "description": "Current progress for this phase. May be missing or null."
                            },
                            "completed": {
                              "type": "boolean",
                              "description": "Indicates whether this phase has been completed or not"
                            }
                          }
                        },
                        "description": "Extra information regarding the progress for current state"
                      }
                    }
                  },
                  "description": "State of individual service nodes"
                },
                "service_uri": {
                  "type": "string",
                  "description": "URI for connecting to the service (may be null)"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Service last update timestamp (ISO 8601)"
                },
                "user_config": {
                  "type": "object",
                  "properties": {},
                  "description": "Service type-specific settings"
                },
                "service_name": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Service name"
                },
                "service_type": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Service type code"
                },
                "disk_space_mb": {
                  "type": "number",
                  "description": "Megabytes of disk space for data storage"
                },
                "node_cpu_count": {
                  "type": "integer",
                  "description": "Number of CPUs for each node"
                },
                "node_memory_mb": {
                  "type": "number",
                  "description": "Megabytes of memory for each node"
                },
                "project_vpc_id": {
                  "type": "string",
                  "maxLength": 36,
                  "minLength": 36,
                  "description": "Project VPC ID"
                },
                "connection_info": {
                  "type": "object",
                  "properties": {},
                  "description": "Service-specific connection information properties"
                },
                "connection_pools": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "connection_uri",
                      "database",
                      "pool_mode",
                      "pool_name",
                      "pool_size",
                      "username"
                    ],
                    "properties": {
                      "database": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Service database name"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Pool username"
                      },
                      "pool_mode": {
                        "enum": [
                          "session",
                          "transaction",
                          "statement"
                        ],
                        "type": "string",
                        "description": "PGBouncer pool mode"
                      },
                      "pool_name": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "Connection pool name"
                      },
                      "pool_size": {
                        "type": "integer",
                        "maximum": 10000,
                        "minimum": 1,
                        "description": "Size of PGBouncer's PostgreSQL side connection pool"
                      },
                      "connection_uri": {
                        "type": "string",
                        "description": "Connection URI for the DB pool"
                      }
                    }
                  },
                  "description": "PostgreSQL PGBouncer connection pools"
                },
                "cloud_description": {
                  "type": "string",
                  "description": "Cloud provider and location"
                },
                "service_uri_params": {
                  "type": "object",
                  "properties": {},
                  "description": "service_uri parameterized into key-value pairs"
                },
                "service_integrations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "active",
                      "description",
                      "dest_project",
                      "dest_service_type",
                      "enabled",
                      "integration_type",
                      "service_integration_id",
                      "source_project",
                      "source_service",
                      "source_service_type"
                    ],
                    "properties": {
                      "active": {
                        "type": "boolean",
                        "description": "True when integration is active"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "True when integration is enabled"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the integration"
                      },
                      "user_config": {
                        "type": "object",
                        "properties": {},
                        "description": "Service integration settings"
                      },
                      "dest_project": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Project name"
                      },
                      "dest_service": {
                        "type": "string",
                        "description": "Destination service name"
                      },
                      "dest_endpoint": {
                        "type": "string",
                        "description": "Destination endpoint name"
                      },
                      "source_project": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Project name"
                      },
                      "source_service": {
                        "type": "string",
                        "description": "Source service name"
                      },
                      "source_endpoint": {
                        "type": "string",
                        "description": "Source endpoint name"
                      },
                      "dest_endpoint_id": {
                        "type": "string",
                        "description": "Destination endpoint id"
                      },
                      "integration_type": {
                        "type": "string",
                        "description": "Type of the integration"
                      },
                      "dest_service_type": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Service type code"
                      },
                      "integration_status": {
                        "type": "object",
                        "properties": {},
                        "description": "Integration status"
                      },
                      "source_endpoint_id": {
                        "type": "string",
                        "description": "Source endpoint ID"
                      },
                      "source_service_type": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Service type code"
                      },
                      "service_integration_id": {
                        "type": "string",
                        "description": "Integration ID"
                      }
                    }
                  },
                  "description": "Integrations with other services"
                },
                "service_notifications": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "level",
                      "message",
                      "metadata",
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "enum": [
                          "service_end_of_life",
                          "service_powered_off_removal"
                        ],
                        "type": "string",
                        "description": "Notification type"
                      },
                      "level": {
                        "enum": [
                          "notice",
                          "warning"
                        ],
                        "type": "string",
                        "description": "Notification level"
                      },
                      "message": {
                        "type": "string",
                        "maxLength": 1024,
                        "description": "Human notification message"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "service_end_of_life_time": {
                            "type": "string",
                            "maxLength": 36,
                            "description": "Timestamp in ISO 8601 format, always in UTC"
                          },
                          "end_of_life_help_article_url": {
                            "type": "string",
                            "description": "Link to the help article"
                          }
                        },
                        "description": "Notification metadata"
                      }
                    }
                  },
                  "description": "Service notifications"
                },
                "termination_protection": {
                  "type": "boolean",
                  "description": "Service is protected against termination and powering off"
                },
                "service_type_description": {
                  "type": "string",
                  "description": "Single line description of the service"
                }
              },
              "description": "Service information"
            }
          },
          "description": "ServiceUpdateResponse"
        }
      ]
  ServiceUserCreate:
    description: |-
      Create a new (sub) user for service
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "username"
          ],
          "properties": {
            "username": {
              "type": "string",
              "maxLength": 64,
              "description": "Service username"
            },
            "access_control": {
              "type": "object",
              "properties": {
                "m3_group": {
                  "type": "string",
                  "maxLength": 16,
                  "description": "M3 access group to associate users with"
                },
                "redis_acl_keys": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 256,
                  "description": "Key access rules"
                },
                "redis_acl_channels": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 256,
                  "description": "Permitted pub/sub channel patterns"
                },
                "redis_acl_commands": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 256,
                  "description": "Rules for individual commands"
                },
                "redis_acl_categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 256,
                  "description": "Command category rules"
                }
              },
              "description": "Service specific access controls for user"
            },
            "authentication": {
              "enum": [
                "caching_sha2_password",
                "mysql_native_password"
              ],
              "type": "string",
              "description": "Authentication details"
            }
          },
          "description": "ServiceUserCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "user"
          ],
          "properties": {
            "user": {
              "type": "object",
              "required": [
                "password",
                "type",
                "username"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Account type"
                },
                "password": {
                  "type": "string",
                  "description": "Account password. A null value indicates a user overridden password."
                },
                "username": {
                  "type": "string",
                  "description": "Account username"
                },
                "access_key": {
                  "type": "string",
                  "description": "Access key for TLS client authentication"
                },
                "access_cert": {
                  "type": "string",
                  "description": "Access certificate for TLS client authentication"
                },
                "access_control": {
                  "type": "object",
                  "properties": {
                    "m3_group": {
                      "type": "string",
                      "maxLength": 16,
                      "description": "M3 access group to associate users with"
                    },
                    "redis_acl_keys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 256,
                      "description": "Key access rules"
                    },
                    "redis_acl_channels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 256,
                      "description": "Permitted pub/sub channel patterns"
                    },
                    "redis_acl_commands": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 256,
                      "description": "Rules for individual commands"
                    },
                    "redis_acl_categories": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 256,
                      "description": "Command category rules"
                    }
                  },
                  "description": "Service specific access controls for user"
                },
                "authentication": {
                  "enum": [
                    "caching_sha2_password",
                    "mysql_native_password"
                  ],
                  "type": "string",
                  "description": "Authentication details"
                },
                "access_cert_not_valid_after_time": {
                  "type": "string",
                  "description": "Access certificate validity end time (ISO8601)"
                }
              },
              "description": "Service user account"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceUserCreateResponse"
        }
      ]
  ServiceUserCredentialsModify:
    description: |-
      Modify service user credentials
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "operation"
          ],
          "properties": {
            "operation": {
              "enum": [
                "reset-credentials",
                "set-access-control"
              ],
              "type": "string",
              "description": "Operation type"
            },
            "new_password": {
              "type": "string",
              "maxLength": 256,
              "minLength": 8,
              "description": "New password"
            },
            "access_control": {
              "type": "object",
              "properties": {
                "m3_group": {
                  "type": "string",
                  "maxLength": 16,
                  "description": "M3 access group to associate users with"
                },
                "redis_acl_keys": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 256,
                  "description": "Key access rules"
                },
                "redis_acl_channels": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 256,
                  "description": "Permitted pub/sub channel patterns"
                },
                "redis_acl_commands": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 256,
                  "description": "Rules for individual commands"
                },
                "redis_acl_categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 256,
                  "description": "Command category rules"
                }
              },
              "description": "Service specific access controls for user"
            },
            "authentication": {
              "enum": [
                "caching_sha2_password",
                "mysql_native_password"
              ],
              "type": "string",
              "description": "Authentication details"
            }
          },
          "description": "ServiceUserCredentialsModifyRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service": {
              "type": "object",
              "required": [
                "cloud_name",
                "create_time",
                "group_list",
                "plan",
                "project_vpc_id",
                "service_integrations",
                "service_name",
                "service_type",
                "service_uri",
                "state",
                "termination_protection",
                "update_time",
                "user_config"
              ],
              "properties": {
                "acl": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "permission",
                      "topic",
                      "username"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID"
                      },
                      "topic": {
                        "type": "string",
                        "maxLength": 249,
                        "minLength": 1,
                        "description": "Topic name pattern"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "description": "Username"
                      },
                      "permission": {
                        "enum": [
                          "admin",
                          "read",
                          "readwrite",
                          "write"
                        ],
                        "type": "string",
                        "description": "Kafka permission"
                      }
                    }
                  },
                  "description": "List of Kafka ACL entries"
                },
                "plan": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Subscription plan"
                },
                "state": {
                  "enum": [
                    "POWEROFF",
                    "REBALANCING",
                    "REBUILDING",
                    "RUNNING"
                  ],
                  "type": "string",
                  "description": "State of the service"
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "password",
                      "type",
                      "username"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Account type"
                      },
                      "password": {
                        "type": "string",
                        "description": "Account password. A null value indicates a user overridden password."
                      },
                      "username": {
                        "type": "string",
                        "description": "Account username"
                      },
                      "access_key": {
                        "type": "string",
                        "description": "Access key for TLS client authentication"
                      },
                      "access_cert": {
                        "type": "string",
                        "description": "Access certificate for TLS client authentication"
                      },
                      "access_control": {
                        "type": "object",
                        "properties": {
                          "m3_group": {
                            "type": "string",
                            "maxLength": 16,
                            "description": "M3 access group to associate users with"
                          },
                          "redis_acl_keys": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Key access rules"
                          },
                          "redis_acl_channels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Permitted pub/sub channel patterns"
                          },
                          "redis_acl_commands": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Rules for individual commands"
                          },
                          "redis_acl_categories": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Command category rules"
                          }
                        },
                        "description": "Service specific access controls for user"
                      },
                      "authentication": {
                        "enum": [
                          "caching_sha2_password",
                          "mysql_native_password"
                        ],
                        "type": "string",
                        "description": "Authentication details"
                      },
                      "access_cert_not_valid_after_time": {
                        "type": "string",
                        "description": "Access certificate validity end time (ISO8601)"
                      }
                    }
                  },
                  "description": "List of service users"
                },
                "topics": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "cleanup_policy",
                      "min_insync_replicas",
                      "partitions",
                      "replication",
                      "retention_bytes",
                      "retention_hours",
                      "topic_name"
                    ],
                    "properties": {
                      "state": {
                        "enum": [
                          "ACTIVE",
                          "CONFIGURING",
                          "DELETING"
                        ],
                        "type": "string",
                        "description": "Topic state"
                      },
                      "partitions": {
                        "type": "integer",
                        "maximum": 1000000,
                        "minimum": 1,
                        "description": "Number of partitions"
                      },
                      "topic_name": {
                        "type": "string",
                        "maxLength": 249,
                        "minLength": 1,
                        "description": "Topic name"
                      },
                      "replication": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Number of replicas"
                      },
                      "cleanup_policy": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "cleanup.policy"
                      },
                      "retention_bytes": {
                        "type": "integer",
                        "description": "retention.bytes"
                      },
                      "retention_hours": {
                        "type": "integer",
                        "maximum": 2562047788015,
                        "description": "Retention period (hours)"
                      },
                      "min_insync_replicas": {
                        "type": "integer",
                        "maximum": 7,
                        "minimum": 1,
                        "description": "min.insync.replicas"
                      }
                    }
                  },
                  "description": "Kafka topics. DEPRECATED: Use /project/$project/service/$service/topic instead"
                },
                "backups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "backup_name",
                      "backup_time",
                      "data_size"
                    ],
                    "properties": {
                      "data_size": {
                        "type": "integer",
                        "description": "Backup's original size before compression"
                      },
                      "backup_name": {
                        "type": "string",
                        "description": "Internal name of this backup"
                      },
                      "backup_time": {
                        "type": "string",
                        "maxLength": 36,
                        "description": "Backup timestamp (ISO 8601)"
                      }
                    }
                  },
                  "description": "List of backups for the service"
                },
                "features": {
                  "type": "object",
                  "properties": {},
                  "description": "Feature flags"
                },
                "metadata": {
                  "type": "object",
                  "properties": {},
                  "description": "Service type specific metadata"
                },
                "cloud_name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Target cloud"
                },
                "components": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "component",
                      "host",
                      "port",
                      "route",
                      "usage"
                    ],
                    "properties": {
                      "ssl": {
                        "type": "boolean",
                        "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted andthis property is only included for service components that may disable encryption."
                      },
                      "host": {
                        "type": "string",
                        "description": "DNS name for connecting to the service component"
                      },
                      "path": {
                        "type": "string",
                        "description": "Path component of the service URL (useful only if service component is HTTP or HTTPS endpoint)"
                      },
                      "port": {
                        "type": "integer",
                        "maximum": 65535,
                        "minimum": 0,
                        "description": "Port number for connecting to the service component"
                      },
                      "route": {
                        "enum": [
                          "dynamic",
                          "public",
                          "private",
                          "privatelink"
                        ],
                        "type": "string",
                        "description": "Network access route"
                      },
                      "usage": {
                        "enum": [
                          "primary",
                          "replica"
                        ],
                        "type": "string",
                        "description": "DNS usage name"
                      },
                      "component": {
                        "type": "string",
                        "description": "Service component name"
                      },
                      "kafka_authentication_method": {
                        "enum": [
                          "certificate",
                          "sasl"
                        ],
                        "type": "string",
                        "description": "Kafka authentication method. This is a value specific to the 'kafka' service component"
                      }
                    }
                  },
                  "description": "Service component information objects"
                },
                "group_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of service groups the service belongs to. This field is deprecated. It is always set to single element with value 'default'"
                },
                "node_count": {
                  "type": "integer",
                  "description": "Number of service nodes in the active plan"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Service creation timestamp (ISO 8601)"
                },
                "maintenance": {
                  "type": "object",
                  "required": [
                    "dow",
                    "time",
                    "updates"
                  ],
                  "properties": {
                    "dow": {
                      "enum": [
                        "monday",
                        "tuesday",
                        "wednesday",
                        "thursday",
                        "friday",
                        "saturday",
                        "sunday",
                        "never"
                      ],
                      "type": "string",
                      "description": "Day of week for installing updates"
                    },
                    "time": {
                      "type": "string",
                      "maxLength": 8,
                      "minLength": 8,
                      "description": "Time for installing updates, UTC"
                    },
                    "updates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "deadline": {
                            "type": "string",
                            "description": "Deadline for installing the update"
                          },
                          "start_at": {
                            "type": "string",
                            "description": "The time when the update will be automatically applied"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the update"
                          },
                          "start_after": {
                            "type": "string",
                            "description": "The earliest time the update will be automatically applied"
                          }
                        }
                      },
                      "description": "List of updates waiting to be installed"
                    }
                  },
                  "description": "Automatic maintenance settings"
                },
                "node_states": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "state"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the service node"
                      },
                      "role": {
                        "enum": [
                          "master",
                          "standby",
                          "read-replica"
                        ],
                        "type": "string",
                        "description": "Role of this node. Only returned for a subset of service types"
                      },
                      "state": {
                        "enum": [
                          "leaving",
                          "running",
                          "setting_up_vm",
                          "syncing_data",
                          "unknown"
                        ],
                        "type": "string",
                        "description": "Current state of the service node"
                      },
                      "progress_updates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "completed",
                            "phase"
                          ],
                          "properties": {
                            "max": {
                              "type": "integer",
                              "description": "Maximum progress value for this phase. May be missing or null. May change."
                            },
                            "min": {
                              "type": "integer",
                              "description": "Minimum progress value for this phase. May be missing or null."
                            },
                            "unit": {
                              "enum": [
                                "binlogs",
                                "bytes_compressed",
                                "bytes_uncompressed",
                                "wal_lsn"
                              ],
                              "type": "string",
                              "description": "Unit for current/min/max values. New units may be added. If null should be treated as generic unit"
                            },
                            "phase": {
                              "enum": [
                                "prepare",
                                "basebackup",
                                "stream",
                                "finalize"
                              ],
                              "type": "string",
                              "description": "Key identifying this phase"
                            },
                            "current": {
                              "type": "integer",
                              "description": "Current progress for this phase. May be missing or null."
                            },
                            "completed": {
                              "type": "boolean",
                              "description": "Indicates whether this phase has been completed or not"
                            }
                          }
                        },
                        "description": "Extra information regarding the progress for current state"
                      }
                    }
                  },
                  "description": "State of individual service nodes"
                },
                "service_uri": {
                  "type": "string",
                  "description": "URI for connecting to the service (may be null)"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Service last update timestamp (ISO 8601)"
                },
                "user_config": {
                  "type": "object",
                  "properties": {},
                  "description": "Service type-specific settings"
                },
                "service_name": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Service name"
                },
                "service_type": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Service type code"
                },
                "disk_space_mb": {
                  "type": "number",
                  "description": "Megabytes of disk space for data storage"
                },
                "node_cpu_count": {
                  "type": "integer",
                  "description": "Number of CPUs for each node"
                },
                "node_memory_mb": {
                  "type": "number",
                  "description": "Megabytes of memory for each node"
                },
                "project_vpc_id": {
                  "type": "string",
                  "maxLength": 36,
                  "minLength": 36,
                  "description": "Project VPC ID"
                },
                "connection_info": {
                  "type": "object",
                  "properties": {},
                  "description": "Service-specific connection information properties"
                },
                "connection_pools": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "connection_uri",
                      "database",
                      "pool_mode",
                      "pool_name",
                      "pool_size",
                      "username"
                    ],
                    "properties": {
                      "database": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Service database name"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Pool username"
                      },
                      "pool_mode": {
                        "enum": [
                          "session",
                          "transaction",
                          "statement"
                        ],
                        "type": "string",
                        "description": "PGBouncer pool mode"
                      },
                      "pool_name": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "Connection pool name"
                      },
                      "pool_size": {
                        "type": "integer",
                        "maximum": 10000,
                        "minimum": 1,
                        "description": "Size of PGBouncer's PostgreSQL side connection pool"
                      },
                      "connection_uri": {
                        "type": "string",
                        "description": "Connection URI for the DB pool"
                      }
                    }
                  },
                  "description": "PostgreSQL PGBouncer connection pools"
                },
                "cloud_description": {
                  "type": "string",
                  "description": "Cloud provider and location"
                },
                "service_uri_params": {
                  "type": "object",
                  "properties": {},
                  "description": "service_uri parameterized into key-value pairs"
                },
                "service_integrations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "active",
                      "description",
                      "dest_project",
                      "dest_service_type",
                      "enabled",
                      "integration_type",
                      "service_integration_id",
                      "source_project",
                      "source_service",
                      "source_service_type"
                    ],
                    "properties": {
                      "active": {
                        "type": "boolean",
                        "description": "True when integration is active"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "True when integration is enabled"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the integration"
                      },
                      "user_config": {
                        "type": "object",
                        "properties": {},
                        "description": "Service integration settings"
                      },
                      "dest_project": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Project name"
                      },
                      "dest_service": {
                        "type": "string",
                        "description": "Destination service name"
                      },
                      "dest_endpoint": {
                        "type": "string",
                        "description": "Destination endpoint name"
                      },
                      "source_project": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Project name"
                      },
                      "source_service": {
                        "type": "string",
                        "description": "Source service name"
                      },
                      "source_endpoint": {
                        "type": "string",
                        "description": "Source endpoint name"
                      },
                      "dest_endpoint_id": {
                        "type": "string",
                        "description": "Destination endpoint id"
                      },
                      "integration_type": {
                        "type": "string",
                        "description": "Type of the integration"
                      },
                      "dest_service_type": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Service type code"
                      },
                      "integration_status": {
                        "type": "object",
                        "properties": {},
                        "description": "Integration status"
                      },
                      "source_endpoint_id": {
                        "type": "string",
                        "description": "Source endpoint ID"
                      },
                      "source_service_type": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Service type code"
                      },
                      "service_integration_id": {
                        "type": "string",
                        "description": "Integration ID"
                      }
                    }
                  },
                  "description": "Integrations with other services"
                },
                "service_notifications": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "level",
                      "message",
                      "metadata",
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "enum": [
                          "service_end_of_life",
                          "service_powered_off_removal"
                        ],
                        "type": "string",
                        "description": "Notification type"
                      },
                      "level": {
                        "enum": [
                          "notice",
                          "warning"
                        ],
                        "type": "string",
                        "description": "Notification level"
                      },
                      "message": {
                        "type": "string",
                        "maxLength": 1024,
                        "description": "Human notification message"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "service_end_of_life_time": {
                            "type": "string",
                            "maxLength": 36,
                            "description": "Timestamp in ISO 8601 format, always in UTC"
                          },
                          "end_of_life_help_article_url": {
                            "type": "string",
                            "description": "Link to the help article"
                          }
                        },
                        "description": "Notification metadata"
                      }
                    }
                  },
                  "description": "Service notifications"
                },
                "termination_protection": {
                  "type": "boolean",
                  "description": "Service is protected against termination and powering off"
                },
                "service_type_description": {
                  "type": "string",
                  "description": "Single line description of the service"
                }
              },
              "description": "Service information"
            }
          },
          "description": "ServiceUserCredentialsModifyResponse"
        }
      ]
  ServiceUserCredentialsReset:
    description: |-
      Reset service user credentials
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "service"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "service": {
              "type": "object",
              "required": [
                "cloud_name",
                "create_time",
                "group_list",
                "plan",
                "project_vpc_id",
                "service_integrations",
                "service_name",
                "service_type",
                "service_uri",
                "state",
                "termination_protection",
                "update_time",
                "user_config"
              ],
              "properties": {
                "acl": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "permission",
                      "topic",
                      "username"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID"
                      },
                      "topic": {
                        "type": "string",
                        "maxLength": 249,
                        "minLength": 1,
                        "description": "Topic name pattern"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "description": "Username"
                      },
                      "permission": {
                        "enum": [
                          "admin",
                          "read",
                          "readwrite",
                          "write"
                        ],
                        "type": "string",
                        "description": "Kafka permission"
                      }
                    }
                  },
                  "description": "List of Kafka ACL entries"
                },
                "plan": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "Subscription plan"
                },
                "state": {
                  "enum": [
                    "POWEROFF",
                    "REBALANCING",
                    "REBUILDING",
                    "RUNNING"
                  ],
                  "type": "string",
                  "description": "State of the service"
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "password",
                      "type",
                      "username"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Account type"
                      },
                      "password": {
                        "type": "string",
                        "description": "Account password. A null value indicates a user overridden password."
                      },
                      "username": {
                        "type": "string",
                        "description": "Account username"
                      },
                      "access_key": {
                        "type": "string",
                        "description": "Access key for TLS client authentication"
                      },
                      "access_cert": {
                        "type": "string",
                        "description": "Access certificate for TLS client authentication"
                      },
                      "access_control": {
                        "type": "object",
                        "properties": {
                          "m3_group": {
                            "type": "string",
                            "maxLength": 16,
                            "description": "M3 access group to associate users with"
                          },
                          "redis_acl_keys": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Key access rules"
                          },
                          "redis_acl_channels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Permitted pub/sub channel patterns"
                          },
                          "redis_acl_commands": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Rules for individual commands"
                          },
                          "redis_acl_categories": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 256,
                            "description": "Command category rules"
                          }
                        },
                        "description": "Service specific access controls for user"
                      },
                      "authentication": {
                        "enum": [
                          "caching_sha2_password",
                          "mysql_native_password"
                        ],
                        "type": "string",
                        "description": "Authentication details"
                      },
                      "access_cert_not_valid_after_time": {
                        "type": "string",
                        "description": "Access certificate validity end time (ISO8601)"
                      }
                    }
                  },
                  "description": "List of service users"
                },
                "topics": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "cleanup_policy",
                      "min_insync_replicas",
                      "partitions",
                      "replication",
                      "retention_bytes",
                      "retention_hours",
                      "topic_name"
                    ],
                    "properties": {
                      "state": {
                        "enum": [
                          "ACTIVE",
                          "CONFIGURING",
                          "DELETING"
                        ],
                        "type": "string",
                        "description": "Topic state"
                      },
                      "partitions": {
                        "type": "integer",
                        "maximum": 1000000,
                        "minimum": 1,
                        "description": "Number of partitions"
                      },
                      "topic_name": {
                        "type": "string",
                        "maxLength": 249,
                        "minLength": 1,
                        "description": "Topic name"
                      },
                      "replication": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Number of replicas"
                      },
                      "cleanup_policy": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "cleanup.policy"
                      },
                      "retention_bytes": {
                        "type": "integer",
                        "description": "retention.bytes"
                      },
                      "retention_hours": {
                        "type": "integer",
                        "maximum": 2562047788015,
                        "description": "Retention period (hours)"
                      },
                      "min_insync_replicas": {
                        "type": "integer",
                        "maximum": 7,
                        "minimum": 1,
                        "description": "min.insync.replicas"
                      }
                    }
                  },
                  "description": "Kafka topics. DEPRECATED: Use /project/$project/service/$service/topic instead"
                },
                "backups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "backup_name",
                      "backup_time",
                      "data_size"
                    ],
                    "properties": {
                      "data_size": {
                        "type": "integer",
                        "description": "Backup's original size before compression"
                      },
                      "backup_name": {
                        "type": "string",
                        "description": "Internal name of this backup"
                      },
                      "backup_time": {
                        "type": "string",
                        "maxLength": 36,
                        "description": "Backup timestamp (ISO 8601)"
                      }
                    }
                  },
                  "description": "List of backups for the service"
                },
                "features": {
                  "type": "object",
                  "properties": {},
                  "description": "Feature flags"
                },
                "metadata": {
                  "type": "object",
                  "properties": {},
                  "description": "Service type specific metadata"
                },
                "cloud_name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "Target cloud"
                },
                "components": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "component",
                      "host",
                      "port",
                      "route",
                      "usage"
                    ],
                    "properties": {
                      "ssl": {
                        "type": "boolean",
                        "description": "Whether the endpoint is encrypted or accepts plaintext. By default endpoints are always encrypted andthis property is only included for service components that may disable encryption."
                      },
                      "host": {
                        "type": "string",
                        "description": "DNS name for connecting to the service component"
                      },
                      "path": {
                        "type": "string",
                        "description": "Path component of the service URL (useful only if service component is HTTP or HTTPS endpoint)"
                      },
                      "port": {
                        "type": "integer",
                        "maximum": 65535,
                        "minimum": 0,
                        "description": "Port number for connecting to the service component"
                      },
                      "route": {
                        "enum": [
                          "dynamic",
                          "public",
                          "private",
                          "privatelink"
                        ],
                        "type": "string",
                        "description": "Network access route"
                      },
                      "usage": {
                        "enum": [
                          "primary",
                          "replica"
                        ],
                        "type": "string",
                        "description": "DNS usage name"
                      },
                      "component": {
                        "type": "string",
                        "description": "Service component name"
                      },
                      "kafka_authentication_method": {
                        "enum": [
                          "certificate",
                          "sasl"
                        ],
                        "type": "string",
                        "description": "Kafka authentication method. This is a value specific to the 'kafka' service component"
                      }
                    }
                  },
                  "description": "Service component information objects"
                },
                "group_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of service groups the service belongs to. This field is deprecated. It is always set to single element with value 'default'"
                },
                "node_count": {
                  "type": "integer",
                  "description": "Number of service nodes in the active plan"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Service creation timestamp (ISO 8601)"
                },
                "maintenance": {
                  "type": "object",
                  "required": [
                    "dow",
                    "time",
                    "updates"
                  ],
                  "properties": {
                    "dow": {
                      "enum": [
                        "monday",
                        "tuesday",
                        "wednesday",
                        "thursday",
                        "friday",
                        "saturday",
                        "sunday",
                        "never"
                      ],
                      "type": "string",
                      "description": "Day of week for installing updates"
                    },
                    "time": {
                      "type": "string",
                      "maxLength": 8,
                      "minLength": 8,
                      "description": "Time for installing updates, UTC"
                    },
                    "updates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "deadline": {
                            "type": "string",
                            "description": "Deadline for installing the update"
                          },
                          "start_at": {
                            "type": "string",
                            "description": "The time when the update will be automatically applied"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the update"
                          },
                          "start_after": {
                            "type": "string",
                            "description": "The earliest time the update will be automatically applied"
                          }
                        }
                      },
                      "description": "List of updates waiting to be installed"
                    }
                  },
                  "description": "Automatic maintenance settings"
                },
                "node_states": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "state"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the service node"
                      },
                      "role": {
                        "enum": [
                          "master",
                          "standby",
                          "read-replica"
                        ],
                        "type": "string",
                        "description": "Role of this node. Only returned for a subset of service types"
                      },
                      "state": {
                        "enum": [
                          "leaving",
                          "running",
                          "setting_up_vm",
                          "syncing_data",
                          "unknown"
                        ],
                        "type": "string",
                        "description": "Current state of the service node"
                      },
                      "progress_updates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "completed",
                            "phase"
                          ],
                          "properties": {
                            "max": {
                              "type": "integer",
                              "description": "Maximum progress value for this phase. May be missing or null. May change."
                            },
                            "min": {
                              "type": "integer",
                              "description": "Minimum progress value for this phase. May be missing or null."
                            },
                            "unit": {
                              "enum": [
                                "binlogs",
                                "bytes_compressed",
                                "bytes_uncompressed",
                                "wal_lsn"
                              ],
                              "type": "string",
                              "description": "Unit for current/min/max values. New units may be added. If null should be treated as generic unit"
                            },
                            "phase": {
                              "enum": [
                                "prepare",
                                "basebackup",
                                "stream",
                                "finalize"
                              ],
                              "type": "string",
                              "description": "Key identifying this phase"
                            },
                            "current": {
                              "type": "integer",
                              "description": "Current progress for this phase. May be missing or null."
                            },
                            "completed": {
                              "type": "boolean",
                              "description": "Indicates whether this phase has been completed or not"
                            }
                          }
                        },
                        "description": "Extra information regarding the progress for current state"
                      }
                    }
                  },
                  "description": "State of individual service nodes"
                },
                "service_uri": {
                  "type": "string",
                  "description": "URI for connecting to the service (may be null)"
                },
                "update_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Service last update timestamp (ISO 8601)"
                },
                "user_config": {
                  "type": "object",
                  "properties": {},
                  "description": "Service type-specific settings"
                },
                "service_name": {
                  "type": "string",
                  "maxLength": 63,
                  "description": "Service name"
                },
                "service_type": {
                  "type": "string",
                  "maxLength": 64,
                  "description": "Service type code"
                },
                "disk_space_mb": {
                  "type": "number",
                  "description": "Megabytes of disk space for data storage"
                },
                "node_cpu_count": {
                  "type": "integer",
                  "description": "Number of CPUs for each node"
                },
                "node_memory_mb": {
                  "type": "number",
                  "description": "Megabytes of memory for each node"
                },
                "project_vpc_id": {
                  "type": "string",
                  "maxLength": 36,
                  "minLength": 36,
                  "description": "Project VPC ID"
                },
                "connection_info": {
                  "type": "object",
                  "properties": {},
                  "description": "Service-specific connection information properties"
                },
                "connection_pools": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "connection_uri",
                      "database",
                      "pool_mode",
                      "pool_name",
                      "pool_size",
                      "username"
                    ],
                    "properties": {
                      "database": {
                        "type": "string",
                        "maxLength": 40,
                        "description": "Service database name"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Pool username"
                      },
                      "pool_mode": {
                        "enum": [
                          "session",
                          "transaction",
                          "statement"
                        ],
                        "type": "string",
                        "description": "PGBouncer pool mode"
                      },
                      "pool_name": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "Connection pool name"
                      },
                      "pool_size": {
                        "type": "integer",
                        "maximum": 10000,
                        "minimum": 1,
                        "description": "Size of PGBouncer's PostgreSQL side connection pool"
                      },
                      "connection_uri": {
                        "type": "string",
                        "description": "Connection URI for the DB pool"
                      }
                    }
                  },
                  "description": "PostgreSQL PGBouncer connection pools"
                },
                "cloud_description": {
                  "type": "string",
                  "description": "Cloud provider and location"
                },
                "service_uri_params": {
                  "type": "object",
                  "properties": {},
                  "description": "service_uri parameterized into key-value pairs"
                },
                "service_integrations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "active",
                      "description",
                      "dest_project",
                      "dest_service_type",
                      "enabled",
                      "integration_type",
                      "service_integration_id",
                      "source_project",
                      "source_service",
                      "source_service_type"
                    ],
                    "properties": {
                      "active": {
                        "type": "boolean",
                        "description": "True when integration is active"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "True when integration is enabled"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the integration"
                      },
                      "user_config": {
                        "type": "object",
                        "properties": {},
                        "description": "Service integration settings"
                      },
                      "dest_project": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Project name"
                      },
                      "dest_service": {
                        "type": "string",
                        "description": "Destination service name"
                      },
                      "dest_endpoint": {
                        "type": "string",
                        "description": "Destination endpoint name"
                      },
                      "source_project": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Project name"
                      },
                      "source_service": {
                        "type": "string",
                        "description": "Source service name"
                      },
                      "source_endpoint": {
                        "type": "string",
                        "description": "Source endpoint name"
                      },
                      "dest_endpoint_id": {
                        "type": "string",
                        "description": "Destination endpoint id"
                      },
                      "integration_type": {
                        "type": "string",
                        "description": "Type of the integration"
                      },
                      "dest_service_type": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Service type code"
                      },
                      "integration_status": {
                        "type": "object",
                        "properties": {},
                        "description": "Integration status"
                      },
                      "source_endpoint_id": {
                        "type": "string",
                        "description": "Source endpoint ID"
                      },
                      "source_service_type": {
                        "type": "string",
                        "maxLength": 64,
                        "description": "Service type code"
                      },
                      "service_integration_id": {
                        "type": "string",
                        "description": "Integration ID"
                      }
                    }
                  },
                  "description": "Integrations with other services"
                },
                "service_notifications": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "level",
                      "message",
                      "metadata",
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "enum": [
                          "service_end_of_life",
                          "service_powered_off_removal"
                        ],
                        "type": "string",
                        "description": "Notification type"
                      },
                      "level": {
                        "enum": [
                          "notice",
                          "warning"
                        ],
                        "type": "string",
                        "description": "Notification level"
                      },
                      "message": {
                        "type": "string",
                        "maxLength": 1024,
                        "description": "Human notification message"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "service_end_of_life_time": {
                            "type": "string",
                            "maxLength": 36,
                            "description": "Timestamp in ISO 8601 format, always in UTC"
                          },
                          "end_of_life_help_article_url": {
                            "type": "string",
                            "description": "Link to the help article"
                          }
                        },
                        "description": "Notification metadata"
                      }
                    }
                  },
                  "description": "Service notifications"
                },
                "termination_protection": {
                  "type": "boolean",
                  "description": "Service is protected against termination and powering off"
                },
                "service_type_description": {
                  "type": "string",
                  "description": "Single line description of the service"
                }
              },
              "description": "Service information"
            }
          },
          "description": "ServiceUserCredentialsResetResponse"
        }
      ]
  ServiceUserDelete:
    description: |-
      Delete a service user
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceUserDeleteResponse"
        }
      ]
  ServiceUserGet:
    description: |-
      Get details for a single user
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "user"
          ],
          "properties": {
            "user": {
              "type": "object",
              "required": [
                "password",
                "type",
                "username"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Account type"
                },
                "password": {
                  "type": "string",
                  "description": "Account password. A null value indicates a user overridden password."
                },
                "username": {
                  "type": "string",
                  "description": "Account username"
                },
                "access_key": {
                  "type": "string",
                  "description": "Access key for TLS client authentication"
                },
                "access_cert": {
                  "type": "string",
                  "description": "Access certificate for TLS client authentication"
                },
                "access_control": {
                  "type": "object",
                  "properties": {
                    "m3_group": {
                      "type": "string",
                      "maxLength": 16,
                      "description": "M3 access group to associate users with"
                    },
                    "redis_acl_keys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 256,
                      "description": "Key access rules"
                    },
                    "redis_acl_channels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 256,
                      "description": "Permitted pub/sub channel patterns"
                    },
                    "redis_acl_commands": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 256,
                      "description": "Rules for individual commands"
                    },
                    "redis_acl_categories": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 256,
                      "description": "Command category rules"
                    }
                  },
                  "description": "Service specific access controls for user"
                },
                "authentication": {
                  "enum": [
                    "caching_sha2_password",
                    "mysql_native_password"
                  ],
                  "type": "string",
                  "description": "Authentication details"
                },
                "access_cert_not_valid_after_time": {
                  "type": "string",
                  "description": "Access certificate validity end time (ISO8601)"
                }
              },
              "description": "Service user account"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "ServiceUserGetResponse"
        }
      ]
  TwoFactorAuthConfigure:
    description: |-
      Configure two-factor authentication
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "method",
            "password"
          ],
          "properties": {
            "method": {
              "type": "string",
              "maxLength": 32,
              "description": "Two-factor authentication method being used, if any"
            },
            "password": {
              "type": "string",
              "maxLength": 256,
              "description": "Current password"
            }
          },
          "description": "TwoFactorAuthConfigureRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "method"
          ],
          "properties": {
            "uri": {
              "type": "string",
              "maxLength": 2048,
              "description": "URI describing the TOTP"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "method": {
              "type": "string",
              "maxLength": 32,
              "description": "Two-factor authentication method being used, if any"
            },
            "qrcode": {
              "type": "string",
              "description": "QR code describing the TOTP as a base64-encoded PNG"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "TwoFactorAuthConfigureResponse"
        }
      ]
  TwoFactorAuthConfigureOTP:
    description: |-
      Complete one-time password configuration
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "otp",
            "password",
            "uri"
          ],
          "properties": {
            "otp": {
              "type": "string",
              "maxLength": 6,
              "description": "One-time password"
            },
            "uri": {
              "type": "string",
              "maxLength": 2048,
              "description": "URI describing the TOTP"
            },
            "password": {
              "type": "string",
              "maxLength": 256,
              "description": "Current password"
            }
          },
          "description": "TwoFactorAuthConfigureOTPRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "method",
            "token"
          ],
          "properties": {
            "token": {
              "type": "string",
              "description": "New API session authentication token when configuration is complete"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "method": {
              "type": "string",
              "maxLength": 32,
              "description": "Two-factor authentication method being used, if any"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "TwoFactorAuthConfigureOTPResponse"
        }
      ]
  UserAccountInvitesAccept:
    description: |-
      Accept all invites for a single account
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "account_id"
          ],
          "properties": {
            "team_id": {
              "type": "string",
              "maxLength": 32,
              "description": "Team ID"
            },
            "account_id": {
              "type": "string",
              "maxLength": 36,
              "description": "Account ID"
            }
          },
          "description": "UserAccountInvitesAcceptRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "account_invites"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "account_invites": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "account_id",
                  "account_name",
                  "create_time",
                  "invited_by_user_email",
                  "team_id",
                  "team_name",
                  "user_email"
                ],
                "properties": {
                  "team_id": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Team ID"
                  },
                  "team_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Team name"
                  },
                  "account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  },
                  "user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "account_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Account name"
                  },
                  "invited_by_user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  }
                }
              },
              "description": "List of invites"
            }
          },
          "description": "UserAccountInvitesAcceptResponse"
        }
      ]
  UserAccountInvitesList:
    description: |-
      List pending account invites
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "account_invites"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "account_invites": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "account_id",
                  "account_name",
                  "create_time",
                  "invited_by_user_email",
                  "team_id",
                  "team_name",
                  "user_email"
                ],
                "properties": {
                  "team_id": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Team ID"
                  },
                  "team_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Team name"
                  },
                  "account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  },
                  "user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "account_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Account name"
                  },
                  "invited_by_user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  }
                }
              },
              "description": "List of invites"
            }
          },
          "description": "UserAccountInvitesListResponse"
        }
      ]
  UserAccountInvitesReject:
    description: |-
      Reject invite to a team
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "account_id",
            "team_id"
          ],
          "properties": {
            "team_id": {
              "type": "string",
              "maxLength": 32,
              "description": "Team ID"
            },
            "account_id": {
              "type": "string",
              "maxLength": 36,
              "description": "Account ID"
            }
          },
          "description": "UserAccountInvitesRejectRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "account_invites"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "account_invites": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "account_id",
                  "account_name",
                  "create_time",
                  "invited_by_user_email",
                  "team_id",
                  "team_name",
                  "user_email"
                ],
                "properties": {
                  "team_id": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Team ID"
                  },
                  "team_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Team name"
                  },
                  "account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  },
                  "user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "account_name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Account name"
                  },
                  "invited_by_user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  }
                }
              },
              "description": "List of invites"
            }
          },
          "description": "UserAccountInvitesRejectResponse"
        }
      ]
  UserAuth:
    description: |-
      Authenticate user
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "email",
            "password"
          ],
          "properties": {
            "otp": {
              "type": "string",
              "maxLength": 6,
              "description": "One-time password"
            },
            "email": {
              "type": "string",
              "maxLength": 319,
              "description": "User email address"
            },
            "password": {
              "type": "string",
              "maxLength": 256,
              "description": "User password"
            }
          },
          "description": "UserAuthRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "state",
            "token"
          ],
          "properties": {
            "state": {
              "type": "string",
              "description": "User account state"
            },
            "token": {
              "type": "string",
              "description": "API session authentication token"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "return_url": {
              "type": "string",
              "description": "Return URL"
            },
            "user_email": {
              "type": "string",
              "maxLength": 319,
              "description": "User email address"
            }
          },
          "description": "UserAuthResponse"
        }
      ]
  UserAuthenticationMethodDelete:
    description: |-
      Delete linked authentication method, and revoke all associated access tokens
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "UserAuthenticationMethodDeleteResponse"
        }
      ]
  UserAuthenticationMethodsList:
    description: |-
      List linked authentication methods
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "authentication_methods"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "authentication_methods": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "authentication_method_account_id",
                  "create_time",
                  "currently_active",
                  "delete_time",
                  "last_used_time",
                  "method_id",
                  "public_remote_identity",
                  "remote_provider_id",
                  "state",
                  "update_time",
                  "user_email"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Authentication method name"
                  },
                  "state": {
                    "enum": [
                      "active",
                      "deleted"
                    ],
                    "type": "string",
                    "description": "State for authentication method"
                  },
                  "method_id": {
                    "type": "string",
                    "description": "Unique ID for authentication method"
                  },
                  "user_email": {
                    "type": "string",
                    "maxLength": 319,
                    "description": "User email address"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "delete_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "update_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "last_used_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp in ISO 8601 format, always in UTC"
                  },
                  "currently_active": {
                    "type": "boolean",
                    "description": "true if API was accessed with this authentication method"
                  },
                  "remote_provider_id": {
                    "type": "string",
                    "description": "Provider ID"
                  },
                  "public_remote_identity": {
                    "type": "string",
                    "description": "Identity on remote provider, if available. May be email address, but not necessarily."
                  },
                  "authentication_method_account_id": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Account ID"
                  }
                }
              },
              "description": "List of linked authentication methods"
            }
          },
          "description": "UserAuthenticationMethodsListResponse"
        }
      ]
  UserAuthLoginOptions:
    description: |-
      Get available login options
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "email"
          ],
          "properties": {
            "email": {
              "type": "string",
              "maxLength": 319,
              "description": "User email address"
            }
          },
          "description": "UserAuthLoginOptionsRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "action"
          ],
          "properties": {
            "None": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              },
              "description": "List of available login methods"
            },
            "name": {
              "type": "string",
              "description": "Human readable name"
            },
            "action": {
              "enum": [
                "google_oauth",
                "password",
                "saml",
                "signup"
              ],
              "type": "string",
              "description": "Action"
            },
            "method": {
              "enum": [
                "POST",
                "GET"
              ],
              "type": "string",
              "description": "HTTP method used for redirecting"
            },
            "redirect_url": {
              "type": "string",
              "description": "Redirect URL for signing in"
            }
          },
          "description": "UserAuthLoginOptionsResponse"
        }
      ]
  UserCreate:
    description: |-
      Create a user
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "email",
            "real_name"
          ],
          "properties": {
            "email": {
              "type": "string",
              "maxLength": 319,
              "description": "User email address"
            },
            "state": {
              "type": "string",
              "maxLength": 128,
              "description": "Address state"
            },
            "token": {
              "type": "string",
              "maxLength": 4096,
              "description": "Signup token for single sign-on linking"
            },
            "origin": {
              "type": "string",
              "maxLength": 1024,
              "description": "Origin of the user"
            },
            "company": {
              "type": "string",
              "maxLength": 128,
              "description": "Name of a company"
            },
            "password": {
              "type": "string",
              "maxLength": 256,
              "description": "User password"
            },
            "real_name": {
              "type": "string",
              "maxLength": 256,
              "description": "User real name"
            },
            "credit_code": {
              "type": "string",
              "maxLength": 1024,
              "description": "Credit code"
            },
            "country_code": {
              "type": "string",
              "maxLength": 2,
              "description": "Two letter country code for country"
            },
            "email_communication_categories": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 3,
              "description": "Categories of email communication enabled for user during signup"
            }
          },
          "description": "UserCreateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "token",
            "user"
          ],
          "properties": {
            "user": {
              "type": "object",
              "required": [
                "auth",
                "invitations",
                "project_membership",
                "projects",
                "real_name",
                "state",
                "user"
              ],
              "properties": {
                "auth": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of user's required authentication methods"
                },
                "user": {
                  "type": "string",
                  "maxLength": 319,
                  "description": "User email address"
                },
                "state": {
                  "type": "string",
                  "description": "User account state"
                },
                "user_id": {
                  "type": "string",
                  "description": "User ID"
                },
                "features": {
                  "type": "object",
                  "properties": {},
                  "description": "Feature flags"
                },
                "projects": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of projects the user is a member of"
                },
                "real_name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "User real name"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "User registration time"
                },
                "invitations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "invite_code",
                      "invite_time",
                      "inviting_user_email",
                      "project_name"
                    ],
                    "properties": {
                      "invite_code": {
                        "type": "string",
                        "description": "Code for accepting the invitation"
                      },
                      "invite_time": {
                        "type": "string",
                        "maxLength": 36,
                        "description": "Timestamp in ISO 8601 format, always in UTC"
                      },
                      "project_name": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Project name"
                      },
                      "inviting_user_email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      }
                    }
                  },
                  "description": "List of pending invitations"
                },
                "project_membership": {
                  "type": "object",
                  "properties": {
                    "ANY": {
                      "enum": [
                        "admin",
                        "developer",
                        "operator",
                        "read_only"
                      ],
                      "type": "string",
                      "description": "Project member type"
                    }
                  },
                  "description": "Project membership and type of membership"
                },
                "project_memberships": {
                  "type": "object",
                  "properties": {
                    "ANY": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of project member type"
                    }
                  },
                  "description": "List of project membership and type of membership"
                },
                "token_validity_begin": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Earliest valid authentication token timestamp"
                }
              },
              "description": "User information"
            },
            "state": {
              "type": "string",
              "description": "User account state"
            },
            "token": {
              "type": "string",
              "description": "API session authentication token"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "user_email": {
              "type": "string",
              "maxLength": 319,
              "description": "User email address"
            }
          },
          "description": "UserCreateResponse"
        }
      ]
  UserExpireTokens:
    description: |-
      Expire all authorization tokens
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "UserExpireTokensResponse"
        }
      ]
  UserInfo:
    description: |-
      Get information for the current session's user
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "user"
          ],
          "properties": {
            "user": {
              "type": "object",
              "required": [
                "auth",
                "intercom",
                "invitations",
                "project_membership",
                "projects",
                "real_name",
                "state",
                "user"
              ],
              "properties": {
                "auth": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of user's required authentication methods"
                },
                "user": {
                  "type": "string",
                  "maxLength": 319,
                  "description": "User email address"
                },
                "state": {
                  "type": "string",
                  "description": "User account state"
                },
                "user_id": {
                  "type": "string",
                  "description": "User ID"
                },
                "features": {
                  "type": "object",
                  "properties": {},
                  "description": "Feature flags"
                },
                "intercom": {
                  "type": "object",
                  "required": [
                    "app_id",
                    "hmac"
                  ],
                  "properties": {
                    "hmac": {
                      "type": "string",
                      "description": "Intercom authentication HMAC"
                    },
                    "app_id": {
                      "type": "string",
                      "description": "Intercom application ID"
                    }
                  },
                  "description": "Intercom settings"
                },
                "projects": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of projects the user is a member of"
                },
                "real_name": {
                  "type": "string",
                  "maxLength": 256,
                  "description": "User real name"
                },
                "create_time": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "User registration time"
                },
                "invitations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "invite_code",
                      "invite_time",
                      "inviting_user_email",
                      "project_name"
                    ],
                    "properties": {
                      "invite_code": {
                        "type": "string",
                        "description": "Code for accepting the invitation"
                      },
                      "invite_time": {
                        "type": "string",
                        "maxLength": 36,
                        "description": "Timestamp in ISO 8601 format, always in UTC"
                      },
                      "project_name": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Project name"
                      },
                      "inviting_user_email": {
                        "type": "string",
                        "maxLength": 319,
                        "description": "User email address"
                      }
                    }
                  },
                  "description": "List of pending invitations"
                },
                "project_membership": {
                  "type": "object",
                  "properties": {
                    "ANY": {
                      "enum": [
                        "admin",
                        "developer",
                        "operator",
                        "read_only"
                      ],
                      "type": "string",
                      "description": "Project member type"
                    }
                  },
                  "description": "Project membership and type of membership"
                },
                "project_memberships": {
                  "type": "object",
                  "properties": {
                    "ANY": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of project member type"
                    }
                  },
                  "description": "List of project membership and type of membership"
                },
                "token_validity_begin": {
                  "type": "string",
                  "maxLength": 36,
                  "description": "Earliest valid authentication token timestamp"
                }
              },
              "description": "User information"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "UserInfoResponse"
        }
      ]
  UserLogout:
    description: |-
      Logout user, removing current authentication token
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "UserLogoutResponse"
        }
      ]
  UserPasswordChange:
    description: |-
      Change user password
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "new_password",
            "password"
          ],
          "properties": {
            "password": {
              "type": "string",
              "maxLength": 256,
              "description": "Current password"
            },
            "new_password": {
              "type": "string",
              "maxLength": 256,
              "description": "New password"
            }
          },
          "description": "UserPasswordChangeRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "token": {
              "type": "string",
              "description": "API session authentication token"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "UserPasswordChangeResponse"
        }
      ]
  UserPasswordReset:
    description: |-
      Confirm user password reset
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "new_password"
          ],
          "properties": {
            "new_password": {
              "type": "string",
              "maxLength": 256,
              "description": "New password"
            }
          },
          "description": "UserPasswordResetRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "UserPasswordResetResponse"
        }
      ]
  UserPasswordResetRequest:
    description: |-
      Request user password reset
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "email"
          ],
          "properties": {
            "email": {
              "type": "string",
              "maxLength": 319,
              "description": "User email address"
            }
          },
          "description": "UserPasswordResetRequestRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "UserPasswordResetRequestResponse"
        }
      ]
  UserVerifyEmail:
    description: |-
      Confirm user email address
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "invite_details"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "invite_details": {
              "type": "object",
              "required": [
                "user_email"
              ],
              "properties": {
                "user_email": {
                  "type": "string",
                  "maxLength": 319,
                  "description": "User email address"
                }
              },
              "description": "Details of verified invite"
            }
          },
          "description": "UserVerifyEmailResponse"
        }
      ]
  VpcDelete:
    description: |-
      Delete a project VPC
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "cloud_name",
            "create_time",
            "network_cidr",
            "peering_connections",
            "project_vpc_id",
            "state",
            "update_time"
          ],
          "properties": {
            "state": {
              "enum": [
                "ACTIVE",
                "APPROVED",
                "DELETED",
                "DELETING"
              ],
              "type": "string",
              "description": "Project VPC state"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "cloud_name": {
              "type": "string",
              "maxLength": 256,
              "description": "Target cloud"
            },
            "create_time": {
              "type": "string",
              "maxLength": 36,
              "description": "VPC creation timestamp"
            },
            "update_time": {
              "type": "string",
              "maxLength": 36,
              "description": "Timestamp of last change to VPC"
            },
            "network_cidr": {
              "type": "string",
              "maxLength": 18,
              "description": "IPv4 network range CIDR"
            },
            "project_vpc_id": {
              "type": "string",
              "maxLength": 36,
              "minLength": 36,
              "description": "Project VPC ID"
            },
            "peering_connections": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "create_time",
                  "peer_azure_app_id",
                  "peer_azure_tenant_id",
                  "peer_cloud_account",
                  "peer_resource_group",
                  "peer_vpc",
                  "state",
                  "state_info",
                  "update_time",
                  "user_peer_network_cidrs",
                  "vpc_peering_connection_type"
                ],
                "properties": {
                  "state": {
                    "enum": [
                      "ACTIVE",
                      "APPROVED",
                      "APPROVED_PEER_REQUESTED",
                      "DELETED",
                      "DELETED_BY_PEER",
                      "DELETING",
                      "INVALID_SPECIFICATION",
                      "PENDING_PEER",
                      "REJECTED_BY_PEER"
                    ],
                    "type": "string",
                    "description": "Project VPC peering connection state"
                  },
                  "peer_vpc": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "AWS VPC ID, GCP VPC network name, or Azure Virtual network name of the peered VPC"
                  },
                  "state_info": {
                    "type": "object",
                    "required": [
                      "message",
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of state information"
                      },
                      "message": {
                        "type": "string",
                        "description": "Human-readable information message"
                      },
                      "warnings": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "message",
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "enum": [
                                "overlapping-peer-vpc-ip-ranges"
                              ],
                              "type": "string",
                              "description": "Type of warning"
                            },
                            "message": {
                              "type": "string",
                              "description": "Warning message to be shown to the user"
                            },
                            "conflicting_aws_vpc_id": {
                              "type": "string",
                              "description": "VPC id which is conflicting with the current one"
                            },
                            "conflicting_aws_account_id": {
                              "type": "string",
                              "description": "AWS account id of conflicting VPC"
                            },
                            "conflicting_aws_vpc_peering_connection_id": {
                              "type": "string",
                              "description": "AWS VPC connection id which is conflicting with current VPC"
                            }
                          }
                        },
                        "description": "List of warnings if any"
                      }
                    },
                    "description": "State-specific help or error information"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "VPC peering connection creation timestamp"
                  },
                  "peer_region": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "The peer VPC's region in AWS clouds. Always null in GCP and Azure clouds"
                  },
                  "update_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp of last change to the VPC peering connection"
                  },
                  "peer_azure_app_id": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet"
                  },
                  "peer_cloud_account": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "AWS account ID, GCP project ID, or Azure subscription ID of the peered VPC"
                  },
                  "peer_resource_group": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure resource group name of the peered VPC"
                  },
                  "peer_azure_tenant_id": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure tenant id in UUID4 form"
                  },
                  "user_peer_network_cidrs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 128,
                    "description": "List of private IPv4 ranges to route through the peering connection"
                  },
                  "vpc_peering_connection_type": {
                    "enum": [
                      "aws-tgw-vpc-attachment",
                      "aws-vpc-peering-connection",
                      "azure-vnet-peering",
                      "google-vpc-peering"
                    ],
                    "type": "string",
                    "description": "Type of network connection from the VPC"
                  }
                }
              },
              "description": "List of peering connections"
            }
          },
          "description": "VpcDeleteResponse"
        }
      ]
  VpcGet:
    description: |-
      Get VPC information
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "cloud_name",
            "create_time",
            "network_cidr",
            "peering_connections",
            "project_vpc_id",
            "state",
            "update_time"
          ],
          "properties": {
            "state": {
              "enum": [
                "ACTIVE",
                "APPROVED",
                "DELETED",
                "DELETING"
              ],
              "type": "string",
              "description": "Project VPC state"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "cloud_name": {
              "type": "string",
              "maxLength": 256,
              "description": "Target cloud"
            },
            "create_time": {
              "type": "string",
              "maxLength": 36,
              "description": "VPC creation timestamp"
            },
            "update_time": {
              "type": "string",
              "maxLength": 36,
              "description": "Timestamp of last change to VPC"
            },
            "network_cidr": {
              "type": "string",
              "maxLength": 18,
              "description": "IPv4 network range CIDR"
            },
            "project_vpc_id": {
              "type": "string",
              "maxLength": 36,
              "minLength": 36,
              "description": "Project VPC ID"
            },
            "peering_connections": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "create_time",
                  "peer_azure_app_id",
                  "peer_azure_tenant_id",
                  "peer_cloud_account",
                  "peer_resource_group",
                  "peer_vpc",
                  "state",
                  "state_info",
                  "update_time",
                  "user_peer_network_cidrs",
                  "vpc_peering_connection_type"
                ],
                "properties": {
                  "state": {
                    "enum": [
                      "ACTIVE",
                      "APPROVED",
                      "APPROVED_PEER_REQUESTED",
                      "DELETED",
                      "DELETED_BY_PEER",
                      "DELETING",
                      "INVALID_SPECIFICATION",
                      "PENDING_PEER",
                      "REJECTED_BY_PEER"
                    ],
                    "type": "string",
                    "description": "Project VPC peering connection state"
                  },
                  "peer_vpc": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "AWS VPC ID, GCP VPC network name, or Azure Virtual network name of the peered VPC"
                  },
                  "state_info": {
                    "type": "object",
                    "required": [
                      "message",
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of state information"
                      },
                      "message": {
                        "type": "string",
                        "description": "Human-readable information message"
                      },
                      "warnings": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "message",
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "enum": [
                                "overlapping-peer-vpc-ip-ranges"
                              ],
                              "type": "string",
                              "description": "Type of warning"
                            },
                            "message": {
                              "type": "string",
                              "description": "Warning message to be shown to the user"
                            },
                            "conflicting_aws_vpc_id": {
                              "type": "string",
                              "description": "VPC id which is conflicting with the current one"
                            },
                            "conflicting_aws_account_id": {
                              "type": "string",
                              "description": "AWS account id of conflicting VPC"
                            },
                            "conflicting_aws_vpc_peering_connection_id": {
                              "type": "string",
                              "description": "AWS VPC connection id which is conflicting with current VPC"
                            }
                          }
                        },
                        "description": "List of warnings if any"
                      }
                    },
                    "description": "State-specific help or error information"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "VPC peering connection creation timestamp"
                  },
                  "peer_region": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "The peer VPC's region in AWS clouds. Always null in GCP and Azure clouds"
                  },
                  "update_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp of last change to the VPC peering connection"
                  },
                  "peer_azure_app_id": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet"
                  },
                  "peer_cloud_account": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "AWS account ID, GCP project ID, or Azure subscription ID of the peered VPC"
                  },
                  "peer_resource_group": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure resource group name of the peered VPC"
                  },
                  "peer_azure_tenant_id": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure tenant id in UUID4 form"
                  },
                  "user_peer_network_cidrs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 128,
                    "description": "List of private IPv4 ranges to route through the peering connection"
                  },
                  "vpc_peering_connection_type": {
                    "enum": [
                      "aws-tgw-vpc-attachment",
                      "aws-vpc-peering-connection",
                      "azure-vnet-peering",
                      "google-vpc-peering"
                    ],
                    "type": "string",
                    "description": "Type of network connection from the VPC"
                  }
                }
              },
              "description": "List of peering connections"
            }
          },
          "description": "VpcGetResponse"
        }
      ]
  VpcList:
    description: |-
      List VPCs for a project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "vpcs"
          ],
          "properties": {
            "vpcs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "ACTIVE",
                      "APPROVED",
                      "DELETED",
                      "DELETING"
                    ],
                    "type": "string",
                    "description": "Project VPC state"
                  },
                  "cloud_name": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "Target cloud"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "VPC creation timestamp"
                  },
                  "update_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp of last change to VPC"
                  },
                  "network_cidr": {
                    "type": "string",
                    "maxLength": 18,
                    "description": "IPv4 network range CIDR"
                  },
                  "project_vpc_id": {
                    "type": "string",
                    "maxLength": 36,
                    "minLength": 36,
                    "description": "Project VPC ID"
                  }
                }
              },
              "description": "List of VPCs"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            }
          },
          "description": "VpcListResponse"
        }
      ]
  VpcPeeringConnectionDelete:
    description: |-
      Delete a peering connection for a project VPC
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "create_time",
            "peer_azure_app_id",
            "peer_azure_tenant_id",
            "peer_cloud_account",
            "peer_resource_group",
            "peer_vpc",
            "state",
            "state_info",
            "update_time",
            "user_peer_network_cidrs",
            "vpc_peering_connection_type"
          ],
          "properties": {
            "state": {
              "enum": [
                "ACTIVE",
                "APPROVED",
                "APPROVED_PEER_REQUESTED",
                "DELETED",
                "DELETED_BY_PEER",
                "DELETING",
                "INVALID_SPECIFICATION",
                "PENDING_PEER",
                "REJECTED_BY_PEER"
              ],
              "type": "string",
              "description": "Project VPC peering connection state"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "peer_vpc": {
              "type": "string",
              "maxLength": 1024,
              "description": "AWS VPC ID, GCP VPC network name, or Azure Virtual network name of the peered VPC"
            },
            "state_info": {
              "type": "object",
              "required": [
                "message",
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of state information"
                },
                "message": {
                  "type": "string",
                  "description": "Human-readable information message"
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "message",
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "enum": [
                          "overlapping-peer-vpc-ip-ranges"
                        ],
                        "type": "string",
                        "description": "Type of warning"
                      },
                      "message": {
                        "type": "string",
                        "description": "Warning message to be shown to the user"
                      },
                      "conflicting_aws_vpc_id": {
                        "type": "string",
                        "description": "VPC id which is conflicting with the current one"
                      },
                      "conflicting_aws_account_id": {
                        "type": "string",
                        "description": "AWS account id of conflicting VPC"
                      },
                      "conflicting_aws_vpc_peering_connection_id": {
                        "type": "string",
                        "description": "AWS VPC connection id which is conflicting with current VPC"
                      }
                    }
                  },
                  "description": "List of warnings if any"
                }
              },
              "description": "State-specific help or error information"
            },
            "create_time": {
              "type": "string",
              "maxLength": 36,
              "description": "VPC peering connection creation timestamp"
            },
            "peer_region": {
              "type": "string",
              "maxLength": 1024,
              "description": "The peer VPC's region in AWS clouds. Always null in GCP and Azure clouds"
            },
            "update_time": {
              "type": "string",
              "maxLength": 36,
              "description": "Timestamp of last change to the VPC peering connection"
            },
            "peer_azure_app_id": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet"
            },
            "peer_cloud_account": {
              "type": "string",
              "maxLength": 1024,
              "description": "AWS account ID, GCP project ID, or Azure subscription ID of the peered VPC"
            },
            "peer_resource_group": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure resource group name of the peered VPC"
            },
            "peer_azure_tenant_id": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure tenant id in UUID4 form"
            },
            "user_peer_network_cidrs": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 128,
              "description": "List of private IPv4 ranges to route through the peering connection"
            },
            "vpc_peering_connection_type": {
              "enum": [
                "aws-tgw-vpc-attachment",
                "aws-vpc-peering-connection",
                "azure-vnet-peering",
                "google-vpc-peering"
              ],
              "type": "string",
              "description": "Type of network connection from the VPC"
            }
          },
          "description": "VpcPeeringConnectionDeleteResponse"
        }
      ]
  VpcPeeringConnectionRequest:
    description: |-
      Request a peering connection for a project VPC
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "peer_cloud_account",
            "peer_vpc"
          ],
          "properties": {
            "peer_vpc": {
              "type": "string",
              "maxLength": 1024,
              "description": "AWS VPC ID, GCP VPC network name, or Azure Virtual network name of the peered VPC"
            },
            "peer_region": {
              "type": "string",
              "maxLength": 1024,
              "description": "The peer VPC's region on AWS. May be omitted or set to null if the peer is in the same region as the Aiven project VPC. Omit or set to null on GCP"
            },
            "peer_azure_app_id": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet"
            },
            "peer_cloud_account": {
              "type": "string",
              "maxLength": 1024,
              "description": "AWS account ID, GCP project ID, or Azure subscription ID of the peered VPC"
            },
            "peer_resource_group": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure resource group name of the peered VPC"
            },
            "peer_azure_tenant_id": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure tenant id in UUID4 form"
            },
            "user_peer_network_cidrs": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 128,
              "description": "List of private IPv4 ranges to route through the peering connection"
            }
          },
          "description": "VpcPeeringConnectionRequestRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "create_time",
            "peer_azure_app_id",
            "peer_azure_tenant_id",
            "peer_cloud_account",
            "peer_resource_group",
            "peer_vpc",
            "state",
            "state_info",
            "update_time",
            "user_peer_network_cidrs",
            "vpc_peering_connection_type"
          ],
          "properties": {
            "state": {
              "enum": [
                "ACTIVE",
                "APPROVED",
                "APPROVED_PEER_REQUESTED",
                "DELETED",
                "DELETED_BY_PEER",
                "DELETING",
                "INVALID_SPECIFICATION",
                "PENDING_PEER",
                "REJECTED_BY_PEER"
              ],
              "type": "string",
              "description": "Project VPC peering connection state"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "peer_vpc": {
              "type": "string",
              "maxLength": 1024,
              "description": "AWS VPC ID, GCP VPC network name, or Azure Virtual network name of the peered VPC"
            },
            "state_info": {
              "type": "object",
              "required": [
                "message",
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of state information"
                },
                "message": {
                  "type": "string",
                  "description": "Human-readable information message"
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "message",
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "enum": [
                          "overlapping-peer-vpc-ip-ranges"
                        ],
                        "type": "string",
                        "description": "Type of warning"
                      },
                      "message": {
                        "type": "string",
                        "description": "Warning message to be shown to the user"
                      },
                      "conflicting_aws_vpc_id": {
                        "type": "string",
                        "description": "VPC id which is conflicting with the current one"
                      },
                      "conflicting_aws_account_id": {
                        "type": "string",
                        "description": "AWS account id of conflicting VPC"
                      },
                      "conflicting_aws_vpc_peering_connection_id": {
                        "type": "string",
                        "description": "AWS VPC connection id which is conflicting with current VPC"
                      }
                    }
                  },
                  "description": "List of warnings if any"
                }
              },
              "description": "State-specific help or error information"
            },
            "create_time": {
              "type": "string",
              "maxLength": 36,
              "description": "VPC peering connection creation timestamp"
            },
            "peer_region": {
              "type": "string",
              "maxLength": 1024,
              "description": "The peer VPC's region in AWS clouds. Always null in GCP and Azure clouds"
            },
            "update_time": {
              "type": "string",
              "maxLength": 36,
              "description": "Timestamp of last change to the VPC peering connection"
            },
            "peer_azure_app_id": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet"
            },
            "peer_cloud_account": {
              "type": "string",
              "maxLength": 1024,
              "description": "AWS account ID, GCP project ID, or Azure subscription ID of the peered VPC"
            },
            "peer_resource_group": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure resource group name of the peered VPC"
            },
            "peer_azure_tenant_id": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure tenant id in UUID4 form"
            },
            "user_peer_network_cidrs": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 128,
              "description": "List of private IPv4 ranges to route through the peering connection"
            },
            "vpc_peering_connection_type": {
              "enum": [
                "aws-tgw-vpc-attachment",
                "aws-vpc-peering-connection",
                "azure-vnet-peering",
                "google-vpc-peering"
              ],
              "type": "string",
              "description": "Type of network connection from the VPC"
            }
          },
          "description": "VpcPeeringConnectionRequestResponse"
        }
      ]
  VpcPeeringConnectionUpdate:
    description: |-
      Update user-defined peer network CIDRs for a project VPC
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "add": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "cidr",
                  "peer_cloud_account",
                  "peer_vpc"
                ],
                "properties": {
                  "cidr": {
                    "type": "string",
                    "maxLength": 18,
                    "description": "IPv4 network range CIDR"
                  },
                  "peer_vpc": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "AWS VPC ID, GCP VPC network name, or Azure Virtual network name of the peered VPC"
                  },
                  "peer_cloud_account": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "AWS account ID, GCP project ID, or Azure subscription ID of the peered VPC"
                  },
                  "peer_resource_group": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure resource group name of the peered VPC"
                  }
                }
              },
              "maxItems": 128,
              "description": "CIDRs to add using a specific peering connection"
            },
            "delete": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 128,
              "description": "Network CIDRs to remove from the VPC's peering connections' user_peer_network_cidrs"
            }
          },
          "description": "VpcPeeringConnectionUpdateRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "cloud_name",
            "create_time",
            "network_cidr",
            "peering_connections",
            "project_vpc_id",
            "state",
            "update_time"
          ],
          "properties": {
            "state": {
              "enum": [
                "ACTIVE",
                "APPROVED",
                "DELETED",
                "DELETING"
              ],
              "type": "string",
              "description": "Project VPC state"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "cloud_name": {
              "type": "string",
              "maxLength": 256,
              "description": "Target cloud"
            },
            "create_time": {
              "type": "string",
              "maxLength": 36,
              "description": "VPC creation timestamp"
            },
            "update_time": {
              "type": "string",
              "maxLength": 36,
              "description": "Timestamp of last change to VPC"
            },
            "network_cidr": {
              "type": "string",
              "maxLength": 18,
              "description": "IPv4 network range CIDR"
            },
            "project_vpc_id": {
              "type": "string",
              "maxLength": 36,
              "minLength": 36,
              "description": "Project VPC ID"
            },
            "peering_connections": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "create_time",
                  "peer_azure_app_id",
                  "peer_azure_tenant_id",
                  "peer_cloud_account",
                  "peer_resource_group",
                  "peer_vpc",
                  "state",
                  "state_info",
                  "update_time",
                  "user_peer_network_cidrs",
                  "vpc_peering_connection_type"
                ],
                "properties": {
                  "state": {
                    "enum": [
                      "ACTIVE",
                      "APPROVED",
                      "APPROVED_PEER_REQUESTED",
                      "DELETED",
                      "DELETED_BY_PEER",
                      "DELETING",
                      "INVALID_SPECIFICATION",
                      "PENDING_PEER",
                      "REJECTED_BY_PEER"
                    ],
                    "type": "string",
                    "description": "Project VPC peering connection state"
                  },
                  "peer_vpc": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "AWS VPC ID, GCP VPC network name, or Azure Virtual network name of the peered VPC"
                  },
                  "state_info": {
                    "type": "object",
                    "required": [
                      "message",
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of state information"
                      },
                      "message": {
                        "type": "string",
                        "description": "Human-readable information message"
                      },
                      "warnings": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "message",
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "enum": [
                                "overlapping-peer-vpc-ip-ranges"
                              ],
                              "type": "string",
                              "description": "Type of warning"
                            },
                            "message": {
                              "type": "string",
                              "description": "Warning message to be shown to the user"
                            },
                            "conflicting_aws_vpc_id": {
                              "type": "string",
                              "description": "VPC id which is conflicting with the current one"
                            },
                            "conflicting_aws_account_id": {
                              "type": "string",
                              "description": "AWS account id of conflicting VPC"
                            },
                            "conflicting_aws_vpc_peering_connection_id": {
                              "type": "string",
                              "description": "AWS VPC connection id which is conflicting with current VPC"
                            }
                          }
                        },
                        "description": "List of warnings if any"
                      }
                    },
                    "description": "State-specific help or error information"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "VPC peering connection creation timestamp"
                  },
                  "peer_region": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "The peer VPC's region in AWS clouds. Always null in GCP and Azure clouds"
                  },
                  "update_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp of last change to the VPC peering connection"
                  },
                  "peer_azure_app_id": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet"
                  },
                  "peer_cloud_account": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "AWS account ID, GCP project ID, or Azure subscription ID of the peered VPC"
                  },
                  "peer_resource_group": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure resource group name of the peered VPC"
                  },
                  "peer_azure_tenant_id": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure tenant id in UUID4 form"
                  },
                  "user_peer_network_cidrs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 128,
                    "description": "List of private IPv4 ranges to route through the peering connection"
                  },
                  "vpc_peering_connection_type": {
                    "enum": [
                      "aws-tgw-vpc-attachment",
                      "aws-vpc-peering-connection",
                      "azure-vnet-peering",
                      "google-vpc-peering"
                    ],
                    "type": "string",
                    "description": "Type of network connection from the VPC"
                  }
                }
              },
              "description": "List of peering connections"
            }
          },
          "description": "VpcPeeringConnectionUpdateResponse"
        }
      ]
  VpcPeeringConnectionWithRegionDelete:
    description: |-
      Delete a peering connection for a project VPC
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "create_time",
            "peer_azure_app_id",
            "peer_azure_tenant_id",
            "peer_cloud_account",
            "peer_resource_group",
            "peer_vpc",
            "state",
            "state_info",
            "update_time",
            "user_peer_network_cidrs",
            "vpc_peering_connection_type"
          ],
          "properties": {
            "state": {
              "enum": [
                "ACTIVE",
                "APPROVED",
                "APPROVED_PEER_REQUESTED",
                "DELETED",
                "DELETED_BY_PEER",
                "DELETING",
                "INVALID_SPECIFICATION",
                "PENDING_PEER",
                "REJECTED_BY_PEER"
              ],
              "type": "string",
              "description": "Project VPC peering connection state"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "peer_vpc": {
              "type": "string",
              "maxLength": 1024,
              "description": "AWS VPC ID, GCP VPC network name, or Azure Virtual network name of the peered VPC"
            },
            "state_info": {
              "type": "object",
              "required": [
                "message",
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of state information"
                },
                "message": {
                  "type": "string",
                  "description": "Human-readable information message"
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "message",
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "enum": [
                          "overlapping-peer-vpc-ip-ranges"
                        ],
                        "type": "string",
                        "description": "Type of warning"
                      },
                      "message": {
                        "type": "string",
                        "description": "Warning message to be shown to the user"
                      },
                      "conflicting_aws_vpc_id": {
                        "type": "string",
                        "description": "VPC id which is conflicting with the current one"
                      },
                      "conflicting_aws_account_id": {
                        "type": "string",
                        "description": "AWS account id of conflicting VPC"
                      },
                      "conflicting_aws_vpc_peering_connection_id": {
                        "type": "string",
                        "description": "AWS VPC connection id which is conflicting with current VPC"
                      }
                    }
                  },
                  "description": "List of warnings if any"
                }
              },
              "description": "State-specific help or error information"
            },
            "create_time": {
              "type": "string",
              "maxLength": 36,
              "description": "VPC peering connection creation timestamp"
            },
            "peer_region": {
              "type": "string",
              "maxLength": 1024,
              "description": "The peer VPC's region in AWS clouds. Always null in GCP and Azure clouds"
            },
            "update_time": {
              "type": "string",
              "maxLength": 36,
              "description": "Timestamp of last change to the VPC peering connection"
            },
            "peer_azure_app_id": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet"
            },
            "peer_cloud_account": {
              "type": "string",
              "maxLength": 1024,
              "description": "AWS account ID, GCP project ID, or Azure subscription ID of the peered VPC"
            },
            "peer_resource_group": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure resource group name of the peered VPC"
            },
            "peer_azure_tenant_id": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure tenant id in UUID4 form"
            },
            "user_peer_network_cidrs": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 128,
              "description": "List of private IPv4 ranges to route through the peering connection"
            },
            "vpc_peering_connection_type": {
              "enum": [
                "aws-tgw-vpc-attachment",
                "aws-vpc-peering-connection",
                "azure-vnet-peering",
                "google-vpc-peering"
              ],
              "type": "string",
              "description": "Type of network connection from the VPC"
            }
          },
          "description": "VpcPeeringConnectionWithRegionDeleteResponse"
        }
      ]
  VpcPeeringConnectionWithResourceGroupDelete:
    description: |-
      Delete a peering connection for a project VPC
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "create_time",
            "peer_azure_app_id",
            "peer_azure_tenant_id",
            "peer_cloud_account",
            "peer_resource_group",
            "peer_vpc",
            "state",
            "state_info",
            "update_time",
            "user_peer_network_cidrs",
            "vpc_peering_connection_type"
          ],
          "properties": {
            "state": {
              "enum": [
                "ACTIVE",
                "APPROVED",
                "APPROVED_PEER_REQUESTED",
                "DELETED",
                "DELETED_BY_PEER",
                "DELETING",
                "INVALID_SPECIFICATION",
                "PENDING_PEER",
                "REJECTED_BY_PEER"
              ],
              "type": "string",
              "description": "Project VPC peering connection state"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "peer_vpc": {
              "type": "string",
              "maxLength": 1024,
              "description": "AWS VPC ID, GCP VPC network name, or Azure Virtual network name of the peered VPC"
            },
            "state_info": {
              "type": "object",
              "required": [
                "message",
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of state information"
                },
                "message": {
                  "type": "string",
                  "description": "Human-readable information message"
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "message",
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "enum": [
                          "overlapping-peer-vpc-ip-ranges"
                        ],
                        "type": "string",
                        "description": "Type of warning"
                      },
                      "message": {
                        "type": "string",
                        "description": "Warning message to be shown to the user"
                      },
                      "conflicting_aws_vpc_id": {
                        "type": "string",
                        "description": "VPC id which is conflicting with the current one"
                      },
                      "conflicting_aws_account_id": {
                        "type": "string",
                        "description": "AWS account id of conflicting VPC"
                      },
                      "conflicting_aws_vpc_peering_connection_id": {
                        "type": "string",
                        "description": "AWS VPC connection id which is conflicting with current VPC"
                      }
                    }
                  },
                  "description": "List of warnings if any"
                }
              },
              "description": "State-specific help or error information"
            },
            "create_time": {
              "type": "string",
              "maxLength": 36,
              "description": "VPC peering connection creation timestamp"
            },
            "peer_region": {
              "type": "string",
              "maxLength": 1024,
              "description": "The peer VPC's region in AWS clouds. Always null in GCP and Azure clouds"
            },
            "update_time": {
              "type": "string",
              "maxLength": 36,
              "description": "Timestamp of last change to the VPC peering connection"
            },
            "peer_azure_app_id": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet"
            },
            "peer_cloud_account": {
              "type": "string",
              "maxLength": 1024,
              "description": "AWS account ID, GCP project ID, or Azure subscription ID of the peered VPC"
            },
            "peer_resource_group": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure resource group name of the peered VPC"
            },
            "peer_azure_tenant_id": {
              "type": "string",
              "maxLength": 1024,
              "description": "Azure tenant id in UUID4 form"
            },
            "user_peer_network_cidrs": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 128,
              "description": "List of private IPv4 ranges to route through the peering connection"
            },
            "vpc_peering_connection_type": {
              "enum": [
                "aws-tgw-vpc-attachment",
                "aws-vpc-peering-connection",
                "azure-vnet-peering",
                "google-vpc-peering"
              ],
              "type": "string",
              "description": "Type of network connection from the VPC"
            }
          },
          "description": "VpcPeeringConnectionWithResourceGroupDeleteResponse"
        }
      ]
  VpcRequest:
    description: |-
      Request a VPC in a cloud for the project
    versions:
      from: 0.0.0
    link: ''
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "cloud_name",
            "network_cidr",
            "peering_connections"
          ],
          "properties": {
            "cloud_name": {
              "type": "string",
              "maxLength": 256,
              "description": "Target cloud"
            },
            "network_cidr": {
              "type": "string",
              "maxLength": 18,
              "description": "IPv4 network range CIDR"
            },
            "peering_connections": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "peer_cloud_account",
                  "peer_vpc"
                ],
                "properties": {
                  "peer_vpc": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "AWS VPC ID, GCP VPC network name, or Azure Virtual network name of the peered VPC"
                  },
                  "peer_region": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "The peer VPC's region on AWS. May be omitted or set to null if the peer is in the same region as the Aiven project VPC. Omit or set to null on GCP"
                  },
                  "peer_azure_app_id": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet"
                  },
                  "peer_cloud_account": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "AWS account ID, GCP project ID, or Azure subscription ID of the peered VPC"
                  },
                  "peer_resource_group": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure resource group name of the peered VPC"
                  },
                  "peer_azure_tenant_id": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure tenant id in UUID4 form"
                  },
                  "user_peer_network_cidrs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 128,
                    "description": "List of private IPv4 ranges to route through the peering connection"
                  }
                }
              },
              "maxItems": 128,
              "description": "List of peering connection requests for the VPC"
            }
          },
          "description": "VpcRequestRequestBody"
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "cloud_name",
            "create_time",
            "network_cidr",
            "peering_connections",
            "project_vpc_id",
            "state",
            "update_time"
          ],
          "properties": {
            "state": {
              "enum": [
                "ACTIVE",
                "APPROVED",
                "DELETED",
                "DELETING"
              ],
              "type": "string",
              "description": "Project VPC state"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "HTTP error status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Printable error message"
                  },
                  "more_info": {
                    "type": "string",
                    "description": "URL to the documentation of the error"
                  }
                }
              },
              "description": "List of errors occurred during request processing"
            },
            "message": {
              "type": "string",
              "description": "Printable result of the request"
            },
            "cloud_name": {
              "type": "string",
              "maxLength": 256,
              "description": "Target cloud"
            },
            "create_time": {
              "type": "string",
              "maxLength": 36,
              "description": "VPC creation timestamp"
            },
            "update_time": {
              "type": "string",
              "maxLength": 36,
              "description": "Timestamp of last change to VPC"
            },
            "network_cidr": {
              "type": "string",
              "maxLength": 18,
              "description": "IPv4 network range CIDR"
            },
            "project_vpc_id": {
              "type": "string",
              "maxLength": 36,
              "minLength": 36,
              "description": "Project VPC ID"
            },
            "peering_connections": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "create_time",
                  "peer_azure_app_id",
                  "peer_azure_tenant_id",
                  "peer_cloud_account",
                  "peer_resource_group",
                  "peer_vpc",
                  "state",
                  "state_info",
                  "update_time",
                  "user_peer_network_cidrs",
                  "vpc_peering_connection_type"
                ],
                "properties": {
                  "state": {
                    "enum": [
                      "ACTIVE",
                      "APPROVED",
                      "APPROVED_PEER_REQUESTED",
                      "DELETED",
                      "DELETED_BY_PEER",
                      "DELETING",
                      "INVALID_SPECIFICATION",
                      "PENDING_PEER",
                      "REJECTED_BY_PEER"
                    ],
                    "type": "string",
                    "description": "Project VPC peering connection state"
                  },
                  "peer_vpc": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "AWS VPC ID, GCP VPC network name, or Azure Virtual network name of the peered VPC"
                  },
                  "state_info": {
                    "type": "object",
                    "required": [
                      "message",
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of state information"
                      },
                      "message": {
                        "type": "string",
                        "description": "Human-readable information message"
                      },
                      "warnings": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "message",
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "enum": [
                                "overlapping-peer-vpc-ip-ranges"
                              ],
                              "type": "string",
                              "description": "Type of warning"
                            },
                            "message": {
                              "type": "string",
                              "description": "Warning message to be shown to the user"
                            },
                            "conflicting_aws_vpc_id": {
                              "type": "string",
                              "description": "VPC id which is conflicting with the current one"
                            },
                            "conflicting_aws_account_id": {
                              "type": "string",
                              "description": "AWS account id of conflicting VPC"
                            },
                            "conflicting_aws_vpc_peering_connection_id": {
                              "type": "string",
                              "description": "AWS VPC connection id which is conflicting with current VPC"
                            }
                          }
                        },
                        "description": "List of warnings if any"
                      }
                    },
                    "description": "State-specific help or error information"
                  },
                  "create_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "VPC peering connection creation timestamp"
                  },
                  "peer_region": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "The peer VPC's region in AWS clouds. Always null in GCP and Azure clouds"
                  },
                  "update_time": {
                    "type": "string",
                    "maxLength": 36,
                    "description": "Timestamp of last change to the VPC peering connection"
                  },
                  "peer_azure_app_id": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet"
                  },
                  "peer_cloud_account": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "AWS account ID, GCP project ID, or Azure subscription ID of the peered VPC"
                  },
                  "peer_resource_group": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure resource group name of the peered VPC"
                  },
                  "peer_azure_tenant_id": {
                    "type": "string",
                    "maxLength": 1024,
                    "description": "Azure tenant id in UUID4 form"
                  },
                  "user_peer_network_cidrs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 128,
                    "description": "List of private IPv4 ranges to route through the peering connection"
                  },
                  "vpc_peering_connection_type": {
                    "enum": [
                      "aws-tgw-vpc-attachment",
                      "aws-vpc-peering-connection",
                      "azure-vnet-peering",
                      "google-vpc-peering"
                    ],
                    "type": "string",
                    "description": "Type of network connection from the VPC"
                  }
                }
              },
              "description": "List of peering connections"
            }
          },
          "description": "VpcRequestResponse"
        }
      ]
