Product:
  name: Box Platform API
  versions: [2.0.0]
  package: box.box
  description: |-
    Box
  link: https://developer.box.com/get-started/
  contentType: json
Operations:
  delete_collaborations_id:
    description: |-
      Deletes a single collaboration.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-collaborations-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_collaboration_whitelist_entries_id:
    description: |-
      Removes a domain from the list of domains that have been deemed safe to create collaborations for within the current enterprise.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-collaboration-whitelist-entries-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_collaboration_whitelist_exempt_targets_id:
    description: |-
      Removes a user's exemption from the restrictions set out by the allowed list of domains for collaborations.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-collaboration-whitelist-exempt-targets-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_comments_id:
    description: |-
      Permanently deletes a comment.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-comments-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_device_pinners_id:
    description: |-
      Deletes an individual device pin.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-device-pinners-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_file_requests_id:
    description: |-
      Deletes a file request permanently.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-file-requests-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_files_id:
    description: |-
      Deletes a file, either permanently or by moving it to
      the trash.
      The the enterprise settings determine whether the item will
      be permanently deleted from Box or moved to the trash.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-files-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_files_id_metadata_enterprise_securityClassification-6VMVochwUWo:
    description: |-
      Removes any classifications from a file.
      This API can also be called by including the enterprise ID in the
      URL explicitly, for example
      `/files/:id//enterprise_12345/securityClassification-6VMVochwUWo`.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-files-id-metadata-enterprise-securityClassification-6VMVochwUWo/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_files_id_metadata_global_boxSkillsCards:
    description: |-
      Removes any Box Skills cards metadata from a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-files-id-metadata-global-boxSkillsCards/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_files_id_metadata_id_id:
    description: |-
      Deletes a piece of file metadata.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-files-id-metadata-id-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_files_id_trash:
    description: |-
      Permanently deletes a file that is in the trash.
      This action cannot be undone.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-files-id-trash/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_files_id_versions_id:
    description: |-
      Move a file version to the trash.
      Versions are only tracked for Box users with premium accounts.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-files-id-versions-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_files_id_watermark:
    description: |-
      Removes the watermark from a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-files-id-watermark/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_files_upload_sessions_id:
    description: |-
      Abort an upload session and discard all data uploaded.
      This cannot be reversed.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-files-upload-sessions-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_folder_locks_id:
    description: |-
      Deletes a folder lock on a given folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-folder-locks-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_folders_id:
    description: |-
      Deletes a folder, either permanently or by moving it to
      the trash.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-folders-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_folders_id_metadata_enterprise_securityClassification-6VMVochwUWo:
    description: |-
      Removes any classifications from a folder.
      This API can also be called by including the enterprise ID in the
      URL explicitly, for example
      `/folders/:id//enterprise_12345/securityClassification-6VMVochwUWo`.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-folders-id-metadata-enterprise-securityClassification-6VMVochwUWo/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_folders_id_metadata_id_id:
    description: |-
      Deletes a piece of folder metadata.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-folders-id-metadata-id-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_folders_id_trash:
    description: |-
      Permanently deletes a folder that is in the trash.
      This action cannot be undone.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-folders-id-trash/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_folders_id_watermark:
    description: |-
      Removes the watermark from a folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-folders-id-watermark/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_group_memberships_id:
    description: |-
      Deletes a specific group membership. Only admins of this
      group or users with admin-level permissions will be able to
      use this API.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-group-memberships-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_groups_id:
    description: |-
      Permanently deletes a group. Only users with
      admin-level permissions will be able to use this API.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-groups-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_legal_hold_policies_id:
    description: |-
      Delete an existing legal hold policy.
      This is an asynchronous process. The policy will not be
      fully deleted yet when the response returns.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-legal-hold-policies-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_legal_hold_policy_assignments_id:
    description: |-
      Remove a legal hold from an item.
      This is an asynchronous process. The policy will not be
      fully removed yet when the response returns.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-legal-hold-policy-assignments-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_metadata_cascade_policies_id:
    description: |-
      Deletes a metadata cascade policy.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-metadata-cascade-policies-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema:
    description: |-
      Delete all classifications by deleting the classification
      metadata template.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-metadata-templates-enterprise-securityClassification-6VMVochwUWo-schema/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_metadata_templates_id_id_schema:
    description: |-
      Delete a metadata template and its instances.
      This deletion is permanent and can not be reversed.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-metadata-templates-id-id-schema/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_storage_policy_assignments_id:
    description: |-
      Delete a storage policy assignment.
      Deleting a storage policy assignment on a user
      will have the user inherit the enterprise's default
      storage policy.
      There is a rate limit for calling this endpoint of only
      twice per user in a 24 hour time frame.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-storage-policy-assignments-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_task_assignments_id:
    description: |-
      Deletes a specific task assignment.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-task-assignments-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_tasks_id:
    description: |-
      Removes a task from a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-tasks-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_users_id:
    description: |-
      Deletes a user. By default this will fail if the user
      still owns any content. Move their owned content first
      before proceeding, or use the `force` field to delete
      the user and their files.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-users-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_users_id_email_aliases_id:
    description: |-
      Removes an email alias from a user.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-users-id-email-aliases-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_webhooks_id:
    description: |-
      Deletes a webhook.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-webhooks-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_web_links_id:
    description: |-
      Deletes a web link.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-web-links-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  delete_web_links_id_trash:
    description: |-
      Permanently deletes a web link that is in the trash.
      This action cannot be undone.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/delete-web-links-id-trash/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_authorize:
    description: |-
      Authorize a user by sending them through the [Box](https://box.com)
      website and request their permission to act on their behalf.
      This is the first step when authenticating a user using
      OAuth 2.0. To request a user's authorization to use the Box APIs
      on their behalf you will need to send a user to the URL with this
      format.
      Does not return any data, but rather should be used in the browser.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-authorize/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_collaborations:
    description: |-
      Retrieves all pending collaboration invites for this user.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-collaborations/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_collaborations_id:
    description: |-
      Retrieves a single collaboration.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-collaborations-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_collaboration_whitelist_entries:
    description: |-
      Returns the list domains that have been deemed safe to create collaborations for within the current enterprise.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-collaboration-whitelist-entries/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "next_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 3000,
                  "description": "The marker for the start of the next page of results."
                },
                "prev_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The marker for the start of the previous page of results."
                }
              },
              "description": "The part of an API response that describes marker\nbased pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Allowed collaboration domain",
                    "x-box-tag": "collaboration_allowlist_entries",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "11446498",
                        "description": "The unique identifier for this entry"
                      },
                      "type": {
                        "enum": [
                          "collaboration_whitelist_entry"
                        ],
                        "type": "string",
                        "example": "collaboration_whitelist_entry",
                        "description": "`collaboration_whitelist_entry`"
                      },
                      "domain": {
                        "type": "string",
                        "example": "example.com",
                        "description": "The whitelisted domain"
                      },
                      "direction": {
                        "enum": [
                          "inbound",
                          "outbound",
                          "both"
                        ],
                        "type": "string",
                        "example": "both",
                        "description": "The direction of the collaborations to allow."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "The time the entry was created at"
                      },
                      "enterprise": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Enterprise",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this enterprise."
                              },
                              "name": {
                                "type": "string",
                                "example": "Acme Inc.",
                                "description": "The name of the enterprise"
                              },
                              "type": {
                                "enum": [
                                  "enterprise"
                                ],
                                "type": "string",
                                "example": "enterprise",
                                "description": "`enterprise`"
                              }
                            },
                            "description": "A representation of a Box enterprise"
                          },
                          {
                            "description": "The enterprise this list is applied to"
                          }
                        ]
                      }
                    },
                    "description": "An entry that describes an approved domain for which users can collaborate with files and folders in your enterprise or vice versa.",
                    "x-box-resource-id": "collaboration_allowlist_entry"
                  }
                }
              }
            }
          ],
          "title": "Allowed collaboration domains",
          "x-box-tag": "collaboration_allowlist_entries",
          "description": "A list of allowed domains for collaboration.",
          "x-box-resource-id": "collaboration_allowlist_entries"
        }
      ]
  get_collaboration_whitelist_entries_id:
    description: |-
      Returns a domain that has been deemed safe to create collaborations
      for within the current enterprise.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-collaboration-whitelist-entries-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Allowed collaboration domain",
          "x-box-tag": "collaboration_allowlist_entries",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this entry"
            },
            "type": {
              "enum": [
                "collaboration_whitelist_entry"
              ],
              "type": "string",
              "example": "collaboration_whitelist_entry",
              "description": "`collaboration_whitelist_entry`"
            },
            "domain": {
              "type": "string",
              "example": "example.com",
              "description": "The whitelisted domain"
            },
            "direction": {
              "enum": [
                "inbound",
                "outbound",
                "both"
              ],
              "type": "string",
              "example": "both",
              "description": "The direction of the collaborations to allow."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The time the entry was created at"
            },
            "enterprise": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Enterprise",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this enterprise."
                    },
                    "name": {
                      "type": "string",
                      "example": "Acme Inc.",
                      "description": "The name of the enterprise"
                    },
                    "type": {
                      "enum": [
                        "enterprise"
                      ],
                      "type": "string",
                      "example": "enterprise",
                      "description": "`enterprise`"
                    }
                  },
                  "description": "A representation of a Box enterprise"
                },
                {
                  "description": "The enterprise this list is applied to"
                }
              ]
            }
          },
          "description": "An entry that describes an approved domain for which users can collaborate with files and folders in your enterprise or vice versa.",
          "x-box-resource-id": "collaboration_allowlist_entry"
        }
      ]
  get_collaboration_whitelist_exempt_targets:
    description: |-
      Returns a list of users who have been exempt from the collaboration
      domain restrictions.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-collaboration-whitelist-exempt-targets/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "next_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 3000,
                  "description": "The marker for the start of the next page of results."
                },
                "prev_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The marker for the start of the previous page of results."
                }
              },
              "description": "The part of an API response that describes marker\nbased pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Allowed collaboration domains user exemption",
                    "x-box-tag": "collaboration_allowlist_exempt_targets",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "11446498",
                        "description": "The unique identifier for this exemption"
                      },
                      "type": {
                        "enum": [
                          "collaboration_whitelist"
                        ],
                        "type": "string",
                        "example": "collaboration_whitelist",
                        "description": "`collaboration_whitelist`"
                      },
                      "user": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Enterprise",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this enterprise."
                              },
                              "name": {
                                "type": "string",
                                "example": "Acme Inc.",
                                "description": "The name of the enterprise"
                              },
                              "type": {
                                "enum": [
                                  "enterprise"
                                ],
                                "type": "string",
                                "example": "enterprise",
                                "description": "`enterprise`"
                              }
                            },
                            "description": "A representation of a Box enterprise"
                          },
                          {
                            "description": "The user that has been exempt"
                          }
                        ]
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "The time the entry was created"
                      },
                      "enterprise": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Enterprise",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this enterprise."
                              },
                              "name": {
                                "type": "string",
                                "example": "Acme Inc.",
                                "description": "The name of the enterprise"
                              },
                              "type": {
                                "enum": [
                                  "enterprise"
                                ],
                                "type": "string",
                                "example": "enterprise",
                                "description": "`enterprise`"
                              }
                            },
                            "description": "A representation of a Box enterprise"
                          },
                          {
                            "description": "The enterprise this entry belongs to"
                          }
                        ]
                      },
                      "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "The time the entry was modified"
                      }
                    },
                    "description": "The user that is exempt from any of the restrictions imposed by the list of allowed collaboration domains for this enterprise.",
                    "x-box-resource-id": "collaboration_allowlist_exempt_target"
                  }
                }
              }
            }
          ],
          "title": "Allowed collaboration domains user exemptions",
          "x-box-tag": "collaboration_allowlist_exempt_targets",
          "description": "A list of users that is exempt from any of the restrictions imposed by the list of allowed collaboration domains for this enterprise.",
          "x-box-resource-id": "collaboration_allowlist_exempt_targets"
        }
      ]
  get_collaboration_whitelist_exempt_targets_id:
    description: |-
      Returns a users who has been exempt from the collaboration
      domain restrictions.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-collaboration-whitelist-exempt-targets-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Allowed collaboration domains user exemption",
          "x-box-tag": "collaboration_allowlist_exempt_targets",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this exemption"
            },
            "type": {
              "enum": [
                "collaboration_whitelist"
              ],
              "type": "string",
              "example": "collaboration_whitelist",
              "description": "`collaboration_whitelist`"
            },
            "user": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Enterprise",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this enterprise."
                    },
                    "name": {
                      "type": "string",
                      "example": "Acme Inc.",
                      "description": "The name of the enterprise"
                    },
                    "type": {
                      "enum": [
                        "enterprise"
                      ],
                      "type": "string",
                      "example": "enterprise",
                      "description": "`enterprise`"
                    }
                  },
                  "description": "A representation of a Box enterprise"
                },
                {
                  "description": "The user that has been exempt"
                }
              ]
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The time the entry was created"
            },
            "enterprise": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Enterprise",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this enterprise."
                    },
                    "name": {
                      "type": "string",
                      "example": "Acme Inc.",
                      "description": "The name of the enterprise"
                    },
                    "type": {
                      "enum": [
                        "enterprise"
                      ],
                      "type": "string",
                      "example": "enterprise",
                      "description": "`enterprise`"
                    }
                  },
                  "description": "A representation of a Box enterprise"
                },
                {
                  "description": "The enterprise this entry belongs to"
                }
              ]
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The time the entry was modified"
            }
          },
          "description": "The user that is exempt from any of the restrictions imposed by the list of allowed collaboration domains for this enterprise.",
          "x-box-resource-id": "collaboration_allowlist_exempt_target"
        }
      ]
  get_collections:
    description: |-
      Retrieves all collections for a given user.
      Currently, only the `favorites` collection
      is supported.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-collections/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "by": {
                        "type": "string",
                        "example": "type",
                        "description": "The field to order by"
                      },
                      "direction": {
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "type": "string",
                        "example": "ASC",
                        "description": "The direction to order by, either ascending or descending"
                      }
                    },
                    "description": "The order in which a pagination is ordered"
                  },
                  "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "offset": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2000,
                  "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "total_count": {
                  "type": "integer",
                  "format": "int64",
                  "example": 5000,
                  "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                }
              },
              "description": "The part of an API response that describes pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Collection",
                    "x-box-tag": "collections",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "11446498",
                        "description": "The unique identifier for this collection."
                      },
                      "name": {
                        "enum": [
                          "Favorites"
                        ],
                        "type": "string",
                        "example": "Favorites",
                        "description": "The name of the collection."
                      },
                      "type": {
                        "enum": [
                          "collection"
                        ],
                        "type": "string",
                        "example": "collection",
                        "description": "`collection`"
                      },
                      "collection_type": {
                        "enum": [
                          "favorites"
                        ],
                        "type": "string",
                        "example": "favorites",
                        "description": "The type of the collection. This is used to\ndetermine the proper visual treatment for\ncollections."
                      }
                    },
                    "description": "A collection of items, including files and folders.\nCurrently, the only collection available\nis the `favorites` collection.\nThe contents of a collection can be explored in a\nsimilar way to which the contents of a folder is\nexplored.",
                    "x-box-resource-id": "collection"
                  }
                }
              }
            }
          ],
          "title": "Collections",
          "x-box-tag": "collections",
          "description": "A list of collections",
          "x-box-resource-id": "collections"
        }
      ]
  get_collections_id_items:
    description: |-
      Retrieves the files and/or folders contained within
      this collection.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-collections-id-items/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "by": {
                        "type": "string",
                        "example": "type",
                        "description": "The field to order by"
                      },
                      "direction": {
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "type": "string",
                        "example": "ASC",
                        "description": "The direction to order by, either ascending or descending"
                      }
                    },
                    "description": "The order in which a pagination is ordered"
                  },
                  "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "offset": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2000,
                  "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "total_count": {
                  "type": "integer",
                  "format": "int64",
                  "example": 5000,
                  "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                }
              },
              "description": "The part of an API response that describes pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "File (Base)",
                            "x-box-tag": "files",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "12345",
                                "nullable": false,
                                "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                              },
                              "etag": {
                                "type": "string",
                                "example": "1",
                                "nullable": true,
                                "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                              },
                              "type": {
                                "enum": [
                                  "file"
                                ],
                                "type": "string",
                                "example": "file",
                                "nullable": false,
                                "description": "`file`"
                              }
                            },
                            "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-sanitized": true,
                            "x-box-resource-id": "file--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Contract.pdf",
                                "description": "The name of the file"
                              },
                              "sha1": {
                                "type": "string",
                                "format": "digest",
                                "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                "nullable": false,
                                "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                              },
                              "sequence_id": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "3",
                                    "nullable": false,
                                    "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                  },
                                  {
                                    "nullable": false
                                  }
                                ]
                              },
                              "file_version": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File version (Base)",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file version."
                                          },
                                          "type": {
                                            "enum": [
                                              "file_version"
                                            ],
                                            "type": "string",
                                            "example": "file_version",
                                            "nullable": false,
                                            "description": "`file_version`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file_version--base"
                                      },
                                      {
                                        "properties": {
                                          "sha1": {
                                            "type": "string",
                                            "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                            "description": "The SHA1 hash of this version of the file."
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File version (Mini)",
                                    "description": "A mini representation of a file version, used when nested within another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file_version--mini"
                                  },
                                  {
                                    "description": "The information about the current version of the file."
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "title": "File (Mini)",
                        "description": "A mini representation of a file, used when\nnested under another resource.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "file--mini"
                      },
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Folder (Base)",
                            "x-box-tag": "folders",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "12345",
                                "nullable": false,
                                "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                              },
                              "etag": {
                                "type": "string",
                                "example": "1",
                                "nullable": true,
                                "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                              },
                              "type": {
                                "enum": [
                                  "folder"
                                ],
                                "type": "string",
                                "example": "folder",
                                "nullable": false,
                                "description": "`folder`"
                              }
                            },
                            "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-sanitized": true,
                            "x-box-resource-id": "folder--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Contracts",
                                "nullable": false,
                                "description": "The name of the folder."
                              },
                              "sequence_id": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "3",
                                    "nullable": false,
                                    "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                  },
                                  {
                                    "nullable": false
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "title": "Folder (Mini)",
                        "description": "A mini representation of a file version, used when\nnested under another resource.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "folder--mini"
                      },
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Web link (Base)",
                            "x-box-tag": "web_links",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this web link"
                              },
                              "etag": {
                                "type": "string",
                                "example": "1",
                                "description": "The entity tag of this web link. Used with `If-Match` headers."
                              },
                              "type": {
                                "enum": [
                                  "web_link"
                                ],
                                "type": "string",
                                "example": "web_link",
                                "description": "`web_link`"
                              }
                            },
                            "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard"
                            ],
                            "x-box-resource-id": "web_link--base"
                          },
                          {
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": "https://www.example.com/example/1234",
                                "description": "The URL this web link points to"
                              },
                              "name": {
                                "type": "string",
                                "example": "My Bookmark",
                                "description": "The name of the web link"
                              },
                              "sequence_id": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "3",
                                    "nullable": false,
                                    "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                  },
                                  {
                                    "nullable": false
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "title": "Web link (Mini)",
                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "web_link--mini"
                      }
                    ]
                  },
                  "description": "The items in this collection."
                }
              }
            }
          ],
          "title": "Items",
          "x-box-tag": "folders",
          "description": "A list of files, folders, and web links in\ntheir mini representation.",
          "x-box-resource-id": "items"
        }
      ]
  get_comments_id:
    description: |-
      Retrieves the message and metadata for a specific comment, as well
      as information on the user who created the comment.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-comments-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Comment (Base)",
              "x-box-tag": "comments",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "11446498",
                  "description": "The unique identifier for this comment."
                },
                "type": {
                  "enum": [
                    "comment"
                  ],
                  "type": "string",
                  "example": "comment",
                  "description": "`comment`"
                }
              },
              "description": "Base representation of a comment.",
              "x-box-variant": "base",
              "x-box-variants": [
                "base",
                "standard",
                "full"
              ],
              "x-box-sanitized": true,
              "x-box-resource-id": "comment--base"
            },
            {
              "properties": {
                "item": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Reference",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this object"
                        },
                        "type": {
                          "type": "string",
                          "example": "file",
                          "description": "The type for this object"
                        }
                      },
                      "description": "The bare basic reference for an object"
                    },
                    {
                      "description": "The file this comment was placed on"
                    }
                  ]
                },
                "message": {
                  "type": "string",
                  "example": "@Aaron Levie these tigers are cool!",
                  "description": "The text of the comment, as provided by the user"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "The time this comment was created"
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "A mini user object representing the author of the\ncomment"
                    }
                  ]
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "The time this comment was last modified"
                },
                "is_reply_comment": {
                  "type": "boolean",
                  "example": true,
                  "description": "Whether or not this comment is a reply to another\ncomment"
                }
              }
            }
          ],
          "title": "Comment",
          "description": "Standard representation of a comment.",
          "x-box-variant": "standard",
          "x-box-resource-id": "comment"
        }
      ]
  get_device_pinners_id:
    description: |-
      Retrieves information about an individual device pin.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-device-pinners-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Device pinner",
          "x-box-tag": "device_pinners",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this device pin."
            },
            "type": {
              "enum": [
                "device_pinner"
              ],
              "type": "string",
              "example": "device_pinner",
              "description": "`device_pinner`"
            },
            "owned_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user that the device pin belongs to"
                }
              ]
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The time the device pin was created"
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The time the device pin was modified"
            },
            "product_name": {
              "type": "string",
              "example": "iPad",
              "description": "The type of device being pinned"
            }
          },
          "description": "Device pins allow enterprises to control what devices can\nuse native Box applications.",
          "x-box-resource-id": "device_pinner"
        }
      ]
  get_enterprises_id_device_pinners:
    description: |-
      Retrieves all the device pins within an enterprise.
      The user must have admin privileges, and the application
      needs the "manage enterprise" scope to make this call.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-enterprises-id-device-pinners/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Device pinners",
          "x-box-tag": "device_pinners",
          "properties": {
            "limit": {
              "type": "integer",
              "format": "int64",
              "default": 100,
              "example": 200,
              "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed."
            },
            "order": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "by": {
                    "enum": [
                      "id"
                    ],
                    "type": "string",
                    "example": "id",
                    "description": "The field that is ordered by"
                  },
                  "direction": {
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string",
                    "example": "asc",
                    "description": "The direction to order by, either ascending or descending"
                  }
                },
                "description": "The order in which a pagination is ordered"
              },
              "description": "The order by which items are returned."
            },
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "title": "Device pinner",
                "x-box-tag": "device_pinners",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "11446498",
                    "description": "The unique identifier for this device pin."
                  },
                  "type": {
                    "enum": [
                      "device_pinner"
                    ],
                    "type": "string",
                    "example": "device_pinner",
                    "description": "`device_pinner`"
                  },
                  "owned_by": {
                    "allOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "User (Base)",
                            "x-box-tag": "users",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this user"
                              },
                              "type": {
                                "enum": [
                                  "user"
                                ],
                                "type": "string",
                                "example": "user",
                                "nullable": false,
                                "description": "`user`"
                              }
                            },
                            "description": "A mini representation of a user, used when\nnested within another resource.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-resource-id": "user--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Aaron Levie",
                                "nullable": false,
                                "maxLength": 50,
                                "description": "The display name of this user"
                              },
                              "login": {
                                "type": "string",
                                "format": "email",
                                "example": "ceo@example.com",
                                "nullable": false,
                                "description": "The primary email address of this user"
                              }
                            }
                          }
                        ],
                        "title": "User (Mini)",
                        "description": "A mini representation of a user, as can be returned when nested within other resources.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "user--mini"
                      },
                      {
                        "description": "The user that the device pin belongs to"
                      }
                    ]
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-12-12T18:53:43.000Z",
                    "description": "The time the device pin was created"
                  },
                  "modified_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-12-12T18:53:43.000Z",
                    "description": "The time the device pin was modified"
                  },
                  "product_name": {
                    "type": "string",
                    "example": "iPad",
                    "description": "The type of device being pinned"
                  }
                },
                "description": "Device pins allow enterprises to control what devices can\nuse native Box applications.",
                "x-box-resource-id": "device_pinner"
              }
            },
            "next_marker": {
              "type": "integer",
              "format": "int64",
              "example": 3000,
              "description": "The marker for the start of the next page of results."
            }
          },
          "description": "A list of device pins",
          "x-box-resource-id": "device_pinners"
        }
      ]
  get_events:
    description: |-
      Returns up to a year of past events for a given user
      or for the entire enterprise.
      By default this returns events for the authenticated user. To retrieve
      events for the entire enterprise, set the `stream_type` to `admin_logs`.
      The user making the API call will need to have admin privileges, and
      the application will need to have the permission to access the event feed
      to get the enterprise event feed.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-events/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Events",
          "x-box-tag": "events",
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "title": "Event",
                "x-box-tag": "events",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "event",
                    "description": "`event`"
                  },
                  "source": {
                    "allOf": [
                      {
                        "oneOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "User (Base)",
                                    "x-box-tag": "users",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "11446498",
                                        "description": "The unique identifier for this user"
                                      },
                                      "type": {
                                        "enum": [
                                          "user"
                                        ],
                                        "type": "string",
                                        "example": "user",
                                        "nullable": false,
                                        "description": "`user`"
                                      }
                                    },
                                    "description": "A mini representation of a user, used when\nnested within another resource.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-resource-id": "user--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Aaron Levie",
                                        "nullable": false,
                                        "maxLength": 50,
                                        "description": "The display name of this user"
                                      },
                                      "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@example.com",
                                        "nullable": false,
                                        "description": "The primary email address of this user"
                                      }
                                    }
                                  }
                                ],
                                "title": "User (Mini)",
                                "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "user--mini"
                              },
                              {
                                "properties": {
                                  "phone": {
                                    "type": "string",
                                    "example": "6509241374",
                                    "maxLength": 100,
                                    "description": "The user’s phone number"
                                  },
                                  "status": {
                                    "enum": [
                                      "active",
                                      "inactive",
                                      "cannot_delete_edit",
                                      "cannot_delete_edit_upload"
                                    ],
                                    "type": "string",
                                    "example": "active",
                                    "description": "The user's account status"
                                  },
                                  "address": {
                                    "type": "string",
                                    "example": "900 Jefferson Ave, Redwood City, CA 94063",
                                    "maxLength": 255,
                                    "description": "The user’s address"
                                  },
                                  "language": {
                                    "type": "string",
                                    "example": "en",
                                    "description": "The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format."
                                  },
                                  "timezone": {
                                    "type": "string",
                                    "format": "timezone",
                                    "example": "Africa/Bujumbura",
                                    "description": "The user's timezone"
                                  },
                                  "job_title": {
                                    "type": "string",
                                    "example": "CEO",
                                    "maxLength": 100,
                                    "description": "The user’s job title"
                                  },
                                  "avatar_url": {
                                    "type": "string",
                                    "example": "https://www.box.com/api/avatar/large/181216415",
                                    "description": "URL of the user’s avatar image"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2012-12-12T18:53:43.000Z",
                                    "description": "When the user object was created"
                                  },
                                  "space_used": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 1237009912,
                                    "description": "The amount of space in use by the user"
                                  },
                                  "modified_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2012-12-12T18:53:43.000Z",
                                    "description": "When the user object was last modified"
                                  },
                                  "space_amount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 11345156112,
                                    "description": "The user’s total available space amount in bytes"
                                  },
                                  "max_upload_size": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 2147483648,
                                    "description": "The maximum individual file size in bytes the user can have"
                                  },
                                  "notification_email": {
                                    "type": "object",
                                    "nullable": true,
                                    "properties": {
                                      "email": {
                                        "type": "string",
                                        "example": "notifications@example.com",
                                        "description": "The email address to send the notifications to."
                                      },
                                      "is_confirmed": {
                                        "type": "boolean",
                                        "example": true,
                                        "description": "Specifies if this email address has been confirmed."
                                      }
                                    },
                                    "description": "An alternate notification email address to which email notifications are sent. When it's confirmed, this will be the email address to which notifications are sent instead of to the primary email address."
                                  }
                                }
                              }
                            ],
                            "title": "User",
                            "description": "A standard representation of a user, as returned from any user API endpoints by default",
                            "x-box-variant": "standard",
                            "x-box-resource-id": "user"
                          },
                          {
                            "type": "object",
                            "title": "Event source",
                            "properties": {
                              "parent": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Folder (Base)",
                                        "x-box-tag": "folders",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "folder"
                                            ],
                                            "type": "string",
                                            "example": "folder",
                                            "nullable": false,
                                            "description": "`folder`"
                                          }
                                        },
                                        "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "folder--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contracts",
                                            "nullable": false,
                                            "description": "The name of the folder."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Folder (Mini)",
                                    "description": "A mini representation of a file version, used when nested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "folder--mini"
                                  },
                                  {
                                    "description": "The optional folder that this folder is located within.\nThis value may be `null` for some folders such as the root folder or the trash folder."
                                  }
                                ],
                                "nullable": true
                              },
                              "item_id": {
                                "type": "string",
                                "example": "560284318361",
                                "nullable": false,
                                "description": "The unique identifier that represents the\nitem.\n"
                              },
                              "owned_by": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "User (Base)",
                                        "x-box-tag": "users",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "11446498",
                                            "description": "The unique identifier for this user"
                                          },
                                          "type": {
                                            "enum": [
                                              "user"
                                            ],
                                            "type": "string",
                                            "example": "user",
                                            "nullable": false,
                                            "description": "`user`"
                                          }
                                        },
                                        "description": "A mini representation of a user, used when nested within another resource.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-resource-id": "user--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Aaron Levie",
                                            "nullable": false,
                                            "maxLength": 50,
                                            "description": "The display name of this user"
                                          },
                                          "login": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "ceo@example.com",
                                            "nullable": false,
                                            "description": "The primary email address of this user"
                                          }
                                        }
                                      }
                                    ],
                                    "title": "User (Mini)",
                                    "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "user--mini"
                                  },
                                  {
                                    "description": "The user who owns this item."
                                  },
                                  {
                                    "nullable": false
                                  }
                                ]
                              },
                              "item_name": {
                                "type": "string",
                                "example": "report.pdf",
                                "nullable": false,
                                "description": "The name of the item.\n"
                              },
                              "item_type": {
                                "enum": [
                                  "file",
                                  "folder"
                                ],
                                "type": "string",
                                "example": "file",
                                "nullable": false,
                                "description": "The type of the item that the event\nrepresents. Can be `file` or `folder`.\n"
                              }
                            },
                            "description": "The source file or folder that triggered an event in the event stream.",
                            "x-box-resource-id": "event_source"
                          }
                        ]
                      },
                      {
                        "description": "The item that triggered this event"
                      }
                    ]
                  },
                  "event_id": {
                    "type": "string",
                    "example": "f82c3ba03e41f7e8a7608363cc6c0390183c3f83",
                    "description": "The ID of the event object. You can use this to detect duplicate events"
                  },
                  "created_by": {
                    "allOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "User (Base)",
                            "x-box-tag": "users",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this user"
                              },
                              "type": {
                                "enum": [
                                  "user"
                                ],
                                "type": "string",
                                "example": "user",
                                "nullable": false,
                                "description": "`user`"
                              }
                            },
                            "description": "A mini representation of a user, used when\nnested within another resource.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-resource-id": "user--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Aaron Levie",
                                "nullable": false,
                                "maxLength": 50,
                                "description": "The display name of this user"
                              },
                              "login": {
                                "type": "string",
                                "format": "email",
                                "example": "ceo@example.com",
                                "nullable": false,
                                "description": "The primary email address of this user"
                              }
                            }
                          }
                        ],
                        "title": "User (Mini)",
                        "description": "A mini representation of a user, as can be returned when nested within other resources.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "user--mini"
                      },
                      {
                        "description": "The user that performed the action represented by the event. Some events may be performed by users not logged into Box. In that case, not all attributes of the object are populated and the event is attributed to a unknown user (`user_id = 2`)"
                      }
                    ]
                  },
                  "event_type": {
                    "allOf": [
                      {
                        "enum": [
                          "ACCESS_GRANTED",
                          "ACCESS_REVOKED",
                          "ADD_DEVICE_ASSOCIATION",
                          "ADD_LOGIN_ACTIVITY_DEVICE",
                          "ADMIN_LOGIN",
                          "APPLICATION_CREATED",
                          "APPLICATION_PUBLIC_KEY_ADDED",
                          "APPLICATION_PUBLIC_KEY_DELETED",
                          "CHANGE_ADMIN_ROLE",
                          "CHANGE_FOLDER_PERMISSION",
                          "COLLABORATION_ACCEPT",
                          "COLLABORATION_EXPIRATION",
                          "COLLABORATION_INVITE",
                          "COLLABORATION_REMOVE",
                          "COLLABORATION_ROLE_CHANGE",
                          "COLLAB_ADD_COLLABORATOR",
                          "COLLAB_INVITE_COLLABORATOR",
                          "COLLAB_REMOVE_COLLABORATOR",
                          "COLLAB_ROLE_CHANGE",
                          "COMMENT_CREATE",
                          "COMMENT_DELETE",
                          "CONTENT_ACCESS",
                          "CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY",
                          "CONTENT_WORKFLOW_AUTOMATION_ADD",
                          "CONTENT_WORKFLOW_AUTOMATION_DELETE",
                          "CONTENT_WORKFLOW_POLICY_ADD",
                          "CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION",
                          "CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION",
                          "COPY",
                          "DATA_RETENTION_CREATE_RETENTION",
                          "DATA_RETENTION_REMOVE_RETENTION",
                          "DELETE",
                          "DELETE_USER",
                          "DEVICE_TRUST_CHECK_FAILED",
                          "DOWNLOAD",
                          "EDIT",
                          "EDIT_USER",
                          "EMAIL_ALIAS_CONFIRM",
                          "EMAIL_ALIAS_REMOVE",
                          "ENABLE_TWO_FACTOR_AUTH",
                          "ENTERPRISE_APP_AUTHORIZATION_UPDATE",
                          "FAILED_LOGIN",
                          "FILE_MARKED_MALICIOUS",
                          "FILE_WATERMARKED_DOWNLOAD",
                          "GROUP_ADD_ITEM",
                          "GROUP_ADD_USER",
                          "GROUP_CREATION",
                          "GROUP_DELETION",
                          "GROUP_EDITED",
                          "GROUP_REMOVE_ITEM",
                          "GROUP_REMOVE_USER",
                          "ITEM_COPY",
                          "ITEM_CREATE",
                          "ITEM_DOWNLOAD",
                          "ITEM_MAKE_CURRENT_VERSION",
                          "ITEM_MODIFY",
                          "ITEM_MOVE",
                          "ITEM_OPEN",
                          "ITEM_PREVIEW",
                          "ITEM_RENAME",
                          "ITEM_SHARED",
                          "ITEM_SHARED_CREATE",
                          "ITEM_SHARED_UNSHARE",
                          "ITEM_SHARED_UPDATE",
                          "ITEM_SYNC",
                          "ITEM_TRASH",
                          "ITEM_UNDELETE_VIA_TRASH",
                          "ITEM_UNSYNC",
                          "ITEM_UPLOAD",
                          "LEGAL_HOLD_ASSIGNMENT_CREATE",
                          "LEGAL_HOLD_ASSIGNMENT_DELETE",
                          "LEGAL_HOLD_POLICY_CREATE",
                          "LEGAL_HOLD_POLICY_DELETE",
                          "LEGAL_HOLD_POLICY_UPDATE",
                          "LOCK",
                          "LOCK_CREATE",
                          "LOCK_DESTROY",
                          "LOGIN",
                          "MASTER_INVITE_ACCEPT",
                          "MASTER_INVITE_REJECT",
                          "METADATA_INSTANCE_CREATE",
                          "METADATA_INSTANCE_DELETE",
                          "METADATA_INSTANCE_UPDATE",
                          "METADATA_TEMPLATE_CREATE",
                          "METADATA_TEMPLATE_DELETE",
                          "METADATA_TEMPLATE_UPDATE",
                          "MOVE",
                          "NEW_USER",
                          "PREVIEW",
                          "REMOVE_DEVICE_ASSOCIATION",
                          "REMOVE_LOGIN_ACTIVITY_DEVICE",
                          "RENAME",
                          "RETENTION_POLICY_ASSIGNMENT_ADD",
                          "SHARE",
                          "SHARE_EXPIRATION",
                          "SHIELD_ALERT",
                          "SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED",
                          "SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED_MISSING_JUSTIFICATION",
                          "SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED",
                          "SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED_MISSING_JUSTIFICATION",
                          "SHIELD_JUSTIFICATION_APPROVAL",
                          "STORAGE_EXPIRATION",
                          "TAG_ITEM_CREATE",
                          "TASK_ASSIGNMENT_CREATE",
                          "TASK_ASSIGNMENT_DELETE",
                          "TASK_ASSIGNMENT_UPDATE",
                          "TASK_CREATE",
                          "TASK_UPDATE",
                          "TERMS_OF_SERVICE_ACCEPT",
                          "TERMS_OF_SERVICE_REJECT",
                          "UNDELETE",
                          "UNLOCK",
                          "UNSHARE",
                          "UPDATE_COLLABORATION_EXPIRATION",
                          "UPDATE_SHARE_EXPIRATION",
                          "UPLOAD",
                          "USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE",
                          "WATERMARK_LABEL_CREATE",
                          "WATERMARK_LABEL_DELETE"
                        ],
                        "type": "string",
                        "title": "Event Type",
                        "example": "FILE_MARKED_MALICIOUS",
                        "description": "An event type that can trigger an event"
                      },
                      {
                        "description": "The event type that triggered this event"
                      }
                    ]
                  },
                  "session_id": {
                    "type": "string",
                    "example": "70090280850c8d2a1933c1",
                    "description": "The session of the user that performed the action. Not all events will populate this attribute."
                  },
                  "additional_details": {
                    "type": "object",
                    "example": {
                      "key": "value"
                    },
                    "description": "This object provides additional information about the event if available.\nThis can include how a user performed an event as well as additional information to correlate an event to external KeySafe logs. Not all events have an `additional_details` object.  This object is only available in the Enterprise Events."
                  }
                },
                "description": "The description of an event that happened within Box",
                "x-box-resource-id": "event"
              }
            },
            "chunk_size": {
              "type": "integer",
              "format": "int64",
              "example": 2,
              "description": "The number of events returned in this response."
            },
            "next_stream_position": {
              "type": "string",
              "example": "1152922976252290886",
              "description": "The stream position of the start of the next page (chunk)\nof events."
            }
          },
          "description": "A list of event objects",
          "x-box-resource-id": "events"
        }
      ]
  get_file_requests_id:
    description: |-
      Retrieves the information about a file request.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-file-requests-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "File Request",
          "x-box-tag": "file_requests",
          "properties": {
            "id": {
              "type": "string",
              "example": "42037322",
              "readOnly": true,
              "description": "The unique identifier for this file request."
            },
            "url": {
              "type": "string",
              "example": "https://cloud.app.box.com/f/19e57f40ace247278a8e3d336678c64a",
              "readOnly": true,
              "description": "The generated URL for this file request. This URL can be shared\nwith users to let them upload files to the associated folder."
            },
            "etag": {
              "type": "string",
              "example": "1",
              "nullable": true,
              "description": "The HTTP `etag` of this file. This can be used in combination with the `If-Match` header when updating a file request. By providing that header, a change will only be performed on the  file request if the `etag` on the file request still matches the `etag` provided in the `If-Match` header."
            },
            "type": {
              "enum": [
                "file-request"
              ],
              "type": "string",
              "example": "file-request",
              "readOnly": true,
              "description": "`file-request`"
            },
            "title": {
              "type": "string",
              "example": "Please upload documents",
              "description": "The title of file request. This is shown\nin the Box UI to users uploading files.\nThis defaults to title of the file request that was\ncopied to create this file request."
            },
            "folder": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Folder (Base)",
                      "x-box-tag": "folders",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                        },
                        "etag": {
                          "type": "string",
                          "example": "1",
                          "nullable": true,
                          "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                        },
                        "type": {
                          "enum": [
                            "folder"
                          ],
                          "type": "string",
                          "example": "folder",
                          "nullable": false,
                          "description": "`folder`"
                        }
                      },
                      "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "folder--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Contracts",
                          "nullable": false,
                          "description": "The name of the folder."
                        },
                        "sequence_id": {
                          "allOf": [
                            {
                              "type": "string",
                              "example": "3",
                              "nullable": false,
                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                            },
                            {
                              "nullable": false
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "title": "Folder (Mini)",
                  "description": "A mini representation of a file version, used when\nnested under another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "folder--mini"
                },
                {
                  "description": "The folder that this file request is associated with.\nFiles submitted through the file request form will be\nuploaded to this folder."
                }
              ],
              "nullable": false
            },
            "status": {
              "enum": [
                "active",
                "inactive"
              ],
              "type": "string",
              "example": "active",
              "description": "The status of the file request. This defaults\nto `active`.\nWhen the status is set to `inactive`, the file request\nwill no longer accept new submissions, and any visitor\nto the file request URL will receive a `HTTP 404` status\ncode.\nThis defaults to status of file request that was\ncopied to create this file request."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2020-09-28T18:53:43.000Z",
              "nullable": false,
              "description": "The date and time when the file request was created."
            },
            "created_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who created this file request."
                }
              ]
            },
            "expires_at": {
              "type": "string",
              "format": "date-time",
              "example": "2020-09-28T18:53:43.000Z",
              "description": "The date after which a file request will no longer accept new\nsubmissions.\nAfter this date, the `status` will automatically be set to\n`inactive`."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2020-09-28T18:53:43.000Z",
              "nullable": false,
              "description": "The date and time when the file request was last updated."
            },
            "updated_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who last modified this file request."
                },
                {
                  "nullable": false
                }
              ]
            },
            "description": {
              "type": "string",
              "example": "Following documents are requested for your process",
              "nullable": true,
              "description": "The optional description of this file request. This is\nshown in the Box UI to users uploading files.\nThis defaults to description of the file request that was\ncopied to create this file request."
            },
            "is_email_required": {
              "type": "boolean",
              "example": true,
              "description": "Whether a file request submitter is required to provide\ntheir email address.\nWhen this setting is set to true, the Box UI will show\nan email field on the file request form.\nThis defaults to setting of file request that was\ncopied to create this file request."
            },
            "is_description_required": {
              "type": "boolean",
              "example": true,
              "description": "Whether a file request submitter is required to provide\na description of the files they are submitting.\nWhen this setting is set to true, the Box UI will show\na description field on the file request form.\nThis defaults to setting of file request that was\ncopied to create this file request."
            }
          },
          "description": "A standard representation of a file request, as returned\nfrom any file request API endpoints by default.",
          "x-box-resource-id": "file_request"
        }
      ]
  get_files_id:
    description: |-
      Retrieves the details about a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "File (Base)",
                  "x-box-tag": "files",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "file"
                      ],
                      "type": "string",
                      "example": "file",
                      "nullable": false,
                      "description": "`file`"
                    }
                  },
                  "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "file--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contract.pdf",
                      "description": "The name of the file"
                    },
                    "sha1": {
                      "type": "string",
                      "format": "digest",
                      "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                      "nullable": false,
                      "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    },
                    "file_version": {
                      "allOf": [
                        {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "File version (Base)",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "12345",
                                  "nullable": false,
                                  "description": "The unique identifier that represent a file version."
                                },
                                "type": {
                                  "enum": [
                                    "file_version"
                                  ],
                                  "type": "string",
                                  "example": "file_version",
                                  "nullable": false,
                                  "description": "`file_version`"
                                }
                              },
                              "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                              "x-box-variant": "base",
                              "x-box-variants": [
                                "base",
                                "mini",
                                "standard"
                              ],
                              "x-box-sanitized": true,
                              "x-box-resource-id": "file_version--base"
                            },
                            {
                              "properties": {
                                "sha1": {
                                  "type": "string",
                                  "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                  "description": "The SHA1 hash of this version of the file."
                                }
                              }
                            }
                          ],
                          "title": "File version (Mini)",
                          "description": "A mini representation of a file version, used when\nnested within another resource.",
                          "x-box-variant": "mini",
                          "x-box-resource-id": "file_version--mini"
                        },
                        {
                          "description": "The information about the current version of the file."
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "File (Mini)",
              "description": "A mini representation of a file, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "file--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "example": 629644,
                  "nullable": false,
                  "description": "The file size in bytes. Be careful parsing this integer as it can get very large and cause an integer overflow."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The folder that this file is located within."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was created on Box."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this file"
                    }
                  ]
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file was put in the trash."
                },
                "description": {
                  "type": "string",
                  "example": "Contract for Q1 renewal",
                  "nullable": false,
                  "maxLength": 256,
                  "description": "The optional description of this file"
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was last updated on Box."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this file. This will be\n`null` if no shared link has been created for this\nfile."
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this file is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was originally\ncreated, which might be before it was uploaded to Box."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was last updated,\nwhich might be before it was uploaded to Box."
                }
              }
            }
          ],
          "title": "File",
          "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "file"
        }
      ]
  get_files_id_collaborations:
    description: |-
      Retrieves a list of pending and active collaborations for a
      file. This returns all the users that have access to the file
      or have been invited to the file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id-collaborations/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_files_id_comments:
    description: |-
      Retrieves a list of comments for a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id-comments/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "by": {
                        "type": "string",
                        "example": "type",
                        "description": "The field to order by"
                      },
                      "direction": {
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "type": "string",
                        "example": "ASC",
                        "description": "The direction to order by, either ascending or descending"
                      }
                    },
                    "description": "The order in which a pagination is ordered"
                  },
                  "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "offset": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2000,
                  "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "total_count": {
                  "type": "integer",
                  "format": "int64",
                  "example": 5000,
                  "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                }
              },
              "description": "The part of an API response that describes pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "title": "Comment (Base)",
                        "x-box-tag": "comments",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "11446498",
                            "description": "The unique identifier for this comment."
                          },
                          "type": {
                            "enum": [
                              "comment"
                            ],
                            "type": "string",
                            "example": "comment",
                            "description": "`comment`"
                          }
                        },
                        "description": "Base representation of a comment.",
                        "x-box-variant": "base",
                        "x-box-variants": [
                          "base",
                          "standard",
                          "full"
                        ],
                        "x-box-sanitized": true,
                        "x-box-resource-id": "comment--base"
                      },
                      {
                        "properties": {
                          "item": {
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Reference",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this object"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "file",
                                    "description": "The type for this object"
                                  }
                                },
                                "description": "The bare basic reference for an object"
                              },
                              {
                                "description": "The file this comment was placed on"
                              }
                            ]
                          },
                          "message": {
                            "type": "string",
                            "example": "@Aaron Levie these tigers are cool!",
                            "description": "The text of the comment, as provided by the user"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "The time this comment was created"
                          },
                          "created_by": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "User (Base)",
                                    "x-box-tag": "users",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "11446498",
                                        "description": "The unique identifier for this user"
                                      },
                                      "type": {
                                        "enum": [
                                          "user"
                                        ],
                                        "type": "string",
                                        "example": "user",
                                        "nullable": false,
                                        "description": "`user`"
                                      }
                                    },
                                    "description": "A mini representation of a user, used when\nnested within another resource.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-resource-id": "user--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Aaron Levie",
                                        "nullable": false,
                                        "maxLength": 50,
                                        "description": "The display name of this user"
                                      },
                                      "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@example.com",
                                        "nullable": false,
                                        "description": "The primary email address of this user"
                                      }
                                    }
                                  }
                                ],
                                "title": "User (Mini)",
                                "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "user--mini"
                              },
                              {
                                "description": "A mini user object representing the author of the comment"
                              }
                            ]
                          },
                          "modified_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "The time this comment was last modified"
                          },
                          "is_reply_comment": {
                            "type": "boolean",
                            "example": true,
                            "description": "Whether or not this comment is a reply to another\ncomment"
                          }
                        }
                      }
                    ],
                    "title": "Comment",
                    "description": "Standard representation of a comment.",
                    "x-box-variant": "standard",
                    "x-box-resource-id": "comment"
                  }
                }
              }
            }
          ],
          "title": "Comments",
          "x-box-tag": "comments",
          "description": "A list of comments",
          "x-box-resource-id": "comments"
        }
      ]
  get_files_id_content:
    description: |-
      Returns the contents of a file in binary format.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id-content/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_files_id#get_shared_link:
    description: |-
      Gets the information for a shared link on a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id--get-shared-link/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "File (Base)",
                  "x-box-tag": "files",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "file"
                      ],
                      "type": "string",
                      "example": "file",
                      "nullable": false,
                      "description": "`file`"
                    }
                  },
                  "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "file--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contract.pdf",
                      "description": "The name of the file"
                    },
                    "sha1": {
                      "type": "string",
                      "format": "digest",
                      "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                      "nullable": false,
                      "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    },
                    "file_version": {
                      "allOf": [
                        {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "File version (Base)",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "12345",
                                  "nullable": false,
                                  "description": "The unique identifier that represent a file version."
                                },
                                "type": {
                                  "enum": [
                                    "file_version"
                                  ],
                                  "type": "string",
                                  "example": "file_version",
                                  "nullable": false,
                                  "description": "`file_version`"
                                }
                              },
                              "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                              "x-box-variant": "base",
                              "x-box-variants": [
                                "base",
                                "mini",
                                "standard"
                              ],
                              "x-box-sanitized": true,
                              "x-box-resource-id": "file_version--base"
                            },
                            {
                              "properties": {
                                "sha1": {
                                  "type": "string",
                                  "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                  "description": "The SHA1 hash of this version of the file."
                                }
                              }
                            }
                          ],
                          "title": "File version (Mini)",
                          "description": "A mini representation of a file version, used when\nnested within another resource.",
                          "x-box-variant": "mini",
                          "x-box-resource-id": "file_version--mini"
                        },
                        {
                          "description": "The information about the current version of the file."
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "File (Mini)",
              "description": "A mini representation of a file, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "file--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "example": 629644,
                  "nullable": false,
                  "description": "The file size in bytes. Be careful parsing this integer as it can get very large and cause an integer overflow."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The folder that this file is located within."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was created on Box."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this file"
                    }
                  ]
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file was put in the trash."
                },
                "description": {
                  "type": "string",
                  "example": "Contract for Q1 renewal",
                  "nullable": false,
                  "maxLength": 256,
                  "description": "The optional description of this file"
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was last updated on Box."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this file. This will be\n`null` if no shared link has been created for this\nfile."
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this file is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was originally\ncreated, which might be before it was uploaded to Box."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was last updated,\nwhich might be before it was uploaded to Box."
                }
              }
            }
          ],
          "title": "File",
          "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "file"
        }
      ]
  get_files_id_metadata:
    description: |-
      Retrieves all metadata for a given file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id-metadata/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Metadata instances",
          "x-box-tag": "file_metadata",
          "properties": {
            "limit": {
              "type": "integer",
              "example": 100,
              "description": "The limit that was used for this page of results."
            },
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "title": "Metadata instance (Base)",
                    "x-box-tag": "file_metadata",
                    "properties": {
                      "$scope": {
                        "type": "string",
                        "example": "enterprise_27335",
                        "description": "An ID for the scope in which this template has been applied. This will be `enterprise_{enterprise_id}` for templates defined for use in this enterprise, and `global` for general templates that are available to all enterprises using Box."
                      },
                      "$parent": {
                        "type": "string",
                        "example": "folder_59449484661,",
                        "description": "The identifier of the item that this metadata instance has been attached to. This combines the `type` and the `id` of the parent in the form `{type}_{id}`."
                      },
                      "$version": {
                        "type": "integer",
                        "example": 1,
                        "description": "The version of the metadata instance. This version starts at 0 and increases every time a user-defined property is modified."
                      },
                      "$template": {
                        "type": "string",
                        "example": "marketingCollateral",
                        "description": "The name of the template"
                      }
                    },
                    "description": "The base representation of a metadata instance.",
                    "x-box-variant": "base",
                    "x-box-variants": [
                      "base",
                      "standard",
                      "full"
                    ],
                    "x-box-sanitized": true,
                    "x-box-resource-id": "metadata--base"
                  }
                ],
                "title": "Metadata instance",
                "x-box-tag": "file_metadata",
                "description": "An instance of a metadata template, which has been applied to a file or folder.",
                "x-box-variant": "standard",
                "x-box-resource-id": "metadata"
              },
              "description": "A list of metadata instances, as applied to this file or folder."
            }
          },
          "description": "A list of metadata instances that have been applied to a file or folder.",
          "x-box-resource-id": "metadatas"
        }
      ]
  get_files_id_metadata_enterprise_securityClassification-6VMVochwUWo:
    description: |-
      Retrieves the classification metadata instance that
      has been applied to a file.
      This API can also be called by including the enterprise ID in the
      URL explicitly, for example
      `/files/:id//enterprise_12345/securityClassification-6VMVochwUWo`.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id-metadata-enterprise-securityClassification-6VMVochwUWo/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Classification",
          "x-box-tag": "classifications",
          "properties": {
            "$type": {
              "type": "string",
              "example": "securityClassification-6VMVochwUWo-fd31537a-0f95-4d86-9f2b-5974a29978f8",
              "description": "The unique ID of this classification instance. This will be include the name of the classification template and a unique ID."
            },
            "$scope": {
              "type": "string",
              "example": "enterprise_27335",
              "description": "The scope of the enterprise that this classification has been\napplied for.\nThis will be in the format `enterprise_{enterprise_id}`."
            },
            "$parent": {
              "type": "string",
              "example": "folder_59449484661,",
              "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`."
            },
            "$canEdit": {
              "type": "boolean",
              "example": true,
              "description": "Whether an end user can change the classification."
            },
            "$version": {
              "type": "integer",
              "example": 1,
              "description": "The version of the metadata instance. This version starts at 0 and increases every time a classification is updated."
            },
            "$template": {
              "enum": [
                "securityClassification-6VMVochwUWo"
              ],
              "type": "string",
              "example": "securityClassification-6VMVochwUWo",
              "description": "`securityClassification-6VMVochwUWo`"
            },
            "$typeVersion": {
              "type": "number",
              "example": 5,
              "description": "The version of the metadata template. This version starts at 0 and increases every time the template is updated. This is mostly for internal use."
            },
            "Box__Security__Classification__Key": {
              "type": "string",
              "example": "Sensitive",
              "description": "The name of the classification applied to the item."
            }
          },
          "description": "An instance of the classification metadata template, containing\nthe classification applied to the file or folder.\nTo get more details about the classification applied to an item,\nrequest the classification metadata template.",
          "x-box-resource-id": "classification"
        }
      ]
  get_files_id_metadata_global_boxSkillsCards:
    description: |-
      List the Box Skills metadata cards that are attached to a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id-metadata-global-boxSkillsCards/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Skills metadata instance",
          "x-box-tag": "skills",
          "properties": {
            "$id": {
              "type": "string",
              "format": "uuid",
              "example": "01234500-12f1-1234-aa12-b1d234cb567e",
              "maxLength": 36,
              "description": "A UUID to identify the metadata object"
            },
            "$type": {
              "type": "string",
              "example": "properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0",
              "description": "A unique identifier for the \"type\" of this instance. This is an internal system property and should not be used by a client application."
            },
            "cards": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Skill Card",
                    "required": [
                      "type",
                      "skill_card_type",
                      "skill",
                      "invocation"
                    ],
                    "x-box-tag": "skills",
                    "properties": {
                      "type": {
                        "enum": [
                          "skill_card"
                        ],
                        "type": "string",
                        "example": "skill_card",
                        "description": "`skill_card`"
                      },
                      "skill": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service",
                            "description": "A custom identifier that represent the service that applied this metadata."
                          },
                          "type": {
                            "enum": [
                              "service"
                            ],
                            "type": "string",
                            "example": "service",
                            "description": "`service`"
                          }
                        },
                        "description": "The service that applied this metadata."
                      },
                      "status": {
                        "type": "object",
                        "required": [
                          "code"
                        ],
                        "properties": {
                          "code": {
                            "enum": [
                              "invoked",
                              "processing",
                              "success",
                              "transient_failure",
                              "permanent_failure"
                            ],
                            "type": "string",
                            "example": "success",
                            "description": "A code for the status of this Skill invocation. By default each of these will have their own accompanied messages. These can be adjusted by setting the `message` value on this object."
                          },
                          "message": {
                            "type": "string",
                            "example": "We're preparing to process your file. Please hold on!",
                            "description": "A custom message that can be provided with this status. This will be shown in the web app to the end user."
                          }
                        },
                        "description": "Used with a card of type `status` to set the status of the skill. This can be used to show a message to the user while the Skill is processing the data."
                      },
                      "entries": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "example": "keyword1",
                              "description": "The text of the entry. This would be the actual keyword in a `keyword` card, the line of a transcript in a `transcript` card, or the display name for an item when using the `timeline` entry."
                            },
                            "appears": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "end": {
                                    "type": "integer",
                                    "example": 20,
                                    "description": "The time in seconds when an entry should stop appearing on a timeline. For a `skill_card_type` of `transcript` this value is ignored."
                                  },
                                  "start": {
                                    "type": "integer",
                                    "example": 1,
                                    "description": "The time in seconds when an entry should start appearing on a timeline."
                                  }
                                },
                                "description": "The timestamp for an entry."
                              },
                              "required": [
                                "start",
                                "end"
                              ],
                              "description": "Defines a list of timestamps for an entry. This is used with a `skill_card_type` of `transcript` as well as `timeline` to place items on a timeline.\nFor a `skill_card_type` of `transcript` there can only be one entry in this list for each item, and only the `start` time is used to place the transcript on the timeline."
                            },
                            "image_url": {
                              "type": "string",
                              "example": "https://example.com/image1.jpg",
                              "description": "The image to show on a for an entry that appears on a timeline. This image URL is required for any `timeline` cards. The image will be shown in a list of items (for example faces), and clicking the image will show the user where that entry appears during the duration of this entry."
                            }
                          },
                          "description": "An entry in the `entries` attribute of a metadata card"
                        },
                        "description": "An optional list of entries in the metadata card.\nThis field is used with a `skill_card_type` of\n`transcript`, `keyword` or `timeline`."
                      },
                      "duration": {
                        "type": "integer",
                        "example": 1000,
                        "description": "An optional total duration in seconds.\nUsed with a `skill_card_type` of `transcript` or\n`timeline`."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-13T20:53:23.000Z",
                        "description": "The optional date and time this card was created at."
                      },
                      "invocation": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service-123",
                            "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                          },
                          "type": {
                            "enum": [
                              "skill_invocation"
                            ],
                            "type": "string",
                            "example": "skill_invocation",
                            "description": "`skill_invocation`"
                          }
                        },
                        "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                      },
                      "skill_card_type": {
                        "enum": [
                          "transcript",
                          "keyword",
                          "timeline",
                          "status"
                        ],
                        "type": "string",
                        "example": "status",
                        "description": "The type of card to add to the file."
                      },
                      "skill_card_title": {
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "my_transcripts",
                            "description": "An optional identifier for the title."
                          },
                          "message": {
                            "type": "string",
                            "example": "My Transcripts",
                            "description": "The actual title to show in the UI."
                          }
                        },
                        "description": "The title of the card."
                      }
                    },
                    "description": "A generic Box Skill metadata card.",
                    "x-box-resource-id": "skill_card"
                  },
                  {
                    "type": "object",
                    "title": "Keyword Skill Card",
                    "required": [
                      "type",
                      "skill_card_type",
                      "skill",
                      "invocation",
                      "entries"
                    ],
                    "x-box-tag": "skills",
                    "properties": {
                      "type": {
                        "enum": [
                          "skill_card"
                        ],
                        "type": "string",
                        "example": "skill_card",
                        "description": "`skill_card`"
                      },
                      "skill": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service",
                            "description": "A custom identifier that represent the service that applied this metadata."
                          },
                          "type": {
                            "enum": [
                              "service"
                            ],
                            "type": "string",
                            "example": "service",
                            "description": "`service`"
                          }
                        },
                        "description": "The service that applied this metadata."
                      },
                      "entries": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "example": "keyword1",
                              "description": "The text of the keyword."
                            }
                          },
                          "description": "An entry in the `entries` attribute of a metadata card"
                        },
                        "description": "An list of entries in the metadata card."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-13T20:53:23.000Z",
                        "description": "The optional date and time this card was created at."
                      },
                      "invocation": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service-123",
                            "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                          },
                          "type": {
                            "enum": [
                              "skill_invocation"
                            ],
                            "type": "string",
                            "example": "skill_invocation",
                            "description": "`skill_invocation`"
                          }
                        },
                        "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                      },
                      "skill_card_type": {
                        "enum": [
                          "keyword"
                        ],
                        "type": "string",
                        "example": "keyword",
                        "description": "`keyword`"
                      },
                      "skill_card_title": {
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "labels",
                            "description": "An optional identifier for the title."
                          },
                          "message": {
                            "type": "string",
                            "example": "Labels",
                            "description": "The actual title to show in the UI."
                          }
                        },
                        "description": "The title of the card."
                      }
                    },
                    "description": "A skill card that contains a set of keywords",
                    "x-box-resource-id": "keyword_skill_card"
                  },
                  {
                    "type": "object",
                    "title": "Timeline Skill Card",
                    "required": [
                      "type",
                      "skill_card_type",
                      "skill",
                      "invocation",
                      "entries"
                    ],
                    "x-box-tag": "skills",
                    "properties": {
                      "type": {
                        "enum": [
                          "skill_card"
                        ],
                        "type": "string",
                        "example": "skill_card",
                        "description": "`skill_card`"
                      },
                      "skill": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service",
                            "description": "A custom identifier that represent the service that applied this metadata."
                          },
                          "type": {
                            "enum": [
                              "service"
                            ],
                            "type": "string",
                            "example": "service",
                            "description": "`service`"
                          }
                        },
                        "description": "The service that applied this metadata."
                      },
                      "entries": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "example": "John",
                              "description": "The text of the entry. This would be the display name for an item being placed on the timeline, for example the name of the person who was detected in a video."
                            },
                            "appears": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "end": {
                                    "type": "integer",
                                    "example": 20,
                                    "description": "The time in seconds when an\nentry should stop appearing on a timeline."
                                  },
                                  "start": {
                                    "type": "integer",
                                    "example": 1,
                                    "description": "The time in seconds when an entry should start appearing on a timeline."
                                  }
                                },
                                "description": "The timestamp for an entry."
                              },
                              "required": [
                                "start",
                                "end"
                              ],
                              "description": "Defines a list of timestamps for when this item should appear on the timeline."
                            },
                            "image_url": {
                              "type": "string",
                              "example": "https://example.com/image1.jpg",
                              "description": "The image to show on a for an entry that appears on a timeline. This image URL is required for every entry.\nThe image will be shown in a list of items (for example faces), and clicking the image will show the user where that entry appears during the duration of this entry."
                            }
                          },
                          "description": "An single item that's placed on multiple items on the timeline."
                        },
                        "description": "A list of entries on the timeline."
                      },
                      "duration": {
                        "type": "integer",
                        "example": 1000,
                        "description": "An total duration in seconds of the timeline."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-13T20:53:23.000Z",
                        "description": "The optional date and time this card was created at."
                      },
                      "invocation": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service-123",
                            "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                          },
                          "type": {
                            "enum": [
                              "skill_invocation"
                            ],
                            "type": "string",
                            "example": "skill_invocation",
                            "description": "`skill_invocation`"
                          }
                        },
                        "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                      },
                      "skill_card_type": {
                        "enum": [
                          "timeline"
                        ],
                        "type": "string",
                        "example": "timeline",
                        "description": "`timeline`"
                      },
                      "skill_card_title": {
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "Faces",
                            "description": "An optional identifier for the title."
                          },
                          "message": {
                            "type": "string",
                            "example": "Faces",
                            "description": "The actual title to show in the UI."
                          }
                        },
                        "description": "The title of the card."
                      }
                    },
                    "description": "A Box Skill metadata card that places a list of images on a timeline.",
                    "x-box-resource-id": "timeline_skill_card"
                  },
                  {
                    "type": "object",
                    "title": "Transcript Skill Card",
                    "required": [
                      "type",
                      "skill_card_type",
                      "skill",
                      "invocation",
                      "entries"
                    ],
                    "x-box-tag": "skills",
                    "properties": {
                      "type": {
                        "enum": [
                          "skill_card"
                        ],
                        "type": "string",
                        "example": "skill_card",
                        "description": "`skill_card`"
                      },
                      "skill": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "transciption-service",
                            "description": "A custom identifier that represent the service that applied this metadata."
                          },
                          "type": {
                            "enum": [
                              "service"
                            ],
                            "type": "string",
                            "example": "service",
                            "description": "`service`"
                          }
                        },
                        "description": "The service that applied this metadata."
                      },
                      "entries": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "example": "Hi, and welcome to this video...",
                              "description": "The text of the entry. This would be the transcribed text assigned to the entry on the timeline."
                            },
                            "appears": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "start": {
                                    "type": "integer",
                                    "example": 1,
                                    "description": "The time in seconds when an entry should start appearing on a timeline."
                                  }
                                },
                                "description": "The timestamp for an entry."
                              },
                              "required": [
                                "start"
                              ],
                              "description": "Defines when a transcribed bit of text appears. This only includes a start time and no end time."
                            }
                          },
                          "description": "An entry in the `entries` attribute of a metadata card"
                        },
                        "description": "An list of entries for the card. This represents the individual entries of the transcription."
                      },
                      "duration": {
                        "type": "integer",
                        "example": 1000,
                        "description": "An optional total duration in seconds.\nUsed with a `skill_card_type` of `transcript` or\n`timeline`."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-13T20:53:23.000Z",
                        "description": "The optional date and time this card was created at."
                      },
                      "invocation": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "transciption-service-123",
                            "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                          },
                          "type": {
                            "enum": [
                              "skill_invocation"
                            ],
                            "type": "string",
                            "example": "skill_invocation",
                            "description": "`skill_invocation`"
                          }
                        },
                        "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                      },
                      "skill_card_type": {
                        "enum": [
                          "transcript"
                        ],
                        "type": "string",
                        "example": "transcript",
                        "description": "`transcript`"
                      },
                      "skill_card_title": {
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "my_transcripts",
                            "description": "An optional identifier for the title."
                          },
                          "message": {
                            "type": "string",
                            "example": "My Transcripts",
                            "description": "The actual title to show in the UI."
                          }
                        },
                        "description": "The title of the card."
                      }
                    },
                    "description": "A Box Skill metadata card that adds a transcript to a file.",
                    "x-box-resource-id": "transcript_skill_card"
                  },
                  {
                    "type": "object",
                    "title": "Status Skill Card",
                    "required": [
                      "type",
                      "skill_card_type",
                      "skill",
                      "invocation",
                      "status"
                    ],
                    "x-box-tag": "skills",
                    "properties": {
                      "type": {
                        "enum": [
                          "skill_card"
                        ],
                        "type": "string",
                        "example": "skill_card",
                        "description": "`skill_card`"
                      },
                      "skill": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service",
                            "description": "A custom identifier that represent the service that applied this metadata."
                          },
                          "type": {
                            "enum": [
                              "service"
                            ],
                            "type": "string",
                            "example": "service",
                            "description": "`service`"
                          }
                        },
                        "description": "The service that applied this metadata."
                      },
                      "status": {
                        "type": "object",
                        "required": [
                          "code"
                        ],
                        "properties": {
                          "code": {
                            "enum": [
                              "invoked",
                              "processing",
                              "success",
                              "transient_failure",
                              "permanent_failure"
                            ],
                            "type": "string",
                            "example": "success",
                            "description": "A code for the status of this Skill invocation. By default each of these will have their own accompanied messages. These can be adjusted by setting the `message` value on this object."
                          },
                          "message": {
                            "type": "string",
                            "example": "We're preparing to process your file. Please hold on!",
                            "description": "A custom message that can be provided with this status. This will be shown in the web app to the end user."
                          }
                        },
                        "description": "Sets the status of the skill. This can be used to show a message to the user while the Skill is processing the data, or if it was not able to process the file."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-13T20:53:23.000Z",
                        "description": "The optional date and time this card was created at."
                      },
                      "invocation": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service-123",
                            "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                          },
                          "type": {
                            "enum": [
                              "skill_invocation"
                            ],
                            "type": "string",
                            "example": "skill_invocation",
                            "description": "`skill_invocation`"
                          }
                        },
                        "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                      },
                      "skill_card_type": {
                        "enum": [
                          "status"
                        ],
                        "type": "string",
                        "example": "status",
                        "description": "`status`"
                      },
                      "skill_card_title": {
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "status",
                            "description": "An optional identifier for the title."
                          },
                          "message": {
                            "type": "string",
                            "example": "Status",
                            "description": "The actual title to show in the UI."
                          }
                        },
                        "description": "The title of the card."
                      }
                    },
                    "description": "A Box Skill metadata card that puts a status message in the metadata sidebar.",
                    "x-box-resource-id": "status_skill_card"
                  }
                ]
              },
              "description": "A list of Box Skill cards that have been applied to this file."
            },
            "$scope": {
              "type": "string",
              "example": "enterprise_27335",
              "description": "An ID for the scope in which this template\nhas been applied"
            },
            "$parent": {
              "type": "string",
              "example": "folder_59449484661,",
              "description": "An ID for the parent folder"
            },
            "$canEdit": {
              "type": "boolean",
              "example": true,
              "description": "Whether the user can edit this metadata"
            },
            "$version": {
              "type": "integer",
              "example": 1,
              "description": "The version of the metadata object. Starts at 0 and increases every time a user-defined property is modified."
            },
            "$template": {
              "type": "string",
              "example": "properties",
              "description": "The name of the template"
            },
            "$typeVersion": {
              "type": "integer",
              "example": 2,
              "description": "The last-known version of the template of the object. This is an internal system property and should not be used by a client application."
            }
          },
          "description": "The metadata assigned to a using for Box skills.",
          "x-box-resource-id": "skill_cards_metadata"
        }
      ]
  get_files_id_metadata_id_id:
    description: |-
      Retrieves the instance of a metadata template that has been applied to a
      file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id-metadata-id-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Metadata instance (Base)",
              "x-box-tag": "file_metadata",
              "properties": {
                "$scope": {
                  "type": "string",
                  "example": "enterprise_27335",
                  "description": "An ID for the scope in which this template has been applied. This will be `enterprise_{enterprise_id}` for templates defined for use in this enterprise, and `global` for general templates that are available to all enterprises using Box."
                },
                "$parent": {
                  "type": "string",
                  "example": "folder_59449484661,",
                  "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`."
                },
                "$version": {
                  "type": "integer",
                  "example": 1,
                  "description": "The version of the metadata instance. This version starts at 0 and increases every time a user-defined property is modified."
                },
                "$template": {
                  "type": "string",
                  "example": "marketingCollateral",
                  "description": "The name of the template"
                }
              },
              "description": "The base representation of a metadata instance.",
              "x-box-variant": "base",
              "x-box-variants": [
                "base",
                "standard",
                "full"
              ],
              "x-box-sanitized": true,
              "x-box-resource-id": "metadata--base"
            }
          ],
          "title": "Metadata instance",
          "x-box-tag": "file_metadata",
          "description": "An instance of a metadata template, which has been applied to a file or folder.",
          "x-box-variant": "standard",
          "x-box-resource-id": "metadata"
        }
      ]
  get_files_id_tasks:
    description: |-
      Retrieves a list of all the tasks for a file. This
      endpoint does not support pagination.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id-tasks/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Tasks",
          "x-box-tag": "tasks",
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "title": "Task",
                "x-box-tag": "tasks",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "11446498",
                    "description": "The unique identifier for this task"
                  },
                  "item": {
                    "allOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "File (Base)",
                            "x-box-tag": "files",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "12345",
                                "nullable": false,
                                "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                              },
                              "etag": {
                                "type": "string",
                                "example": "1",
                                "nullable": true,
                                "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                              },
                              "type": {
                                "enum": [
                                  "file"
                                ],
                                "type": "string",
                                "example": "file",
                                "nullable": false,
                                "description": "`file`"
                              }
                            },
                            "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-sanitized": true,
                            "x-box-resource-id": "file--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Contract.pdf",
                                "description": "The name of the file"
                              },
                              "sha1": {
                                "type": "string",
                                "format": "digest",
                                "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                "nullable": false,
                                "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                              },
                              "sequence_id": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "3",
                                    "nullable": false,
                                    "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                  },
                                  {
                                    "nullable": false
                                  }
                                ]
                              },
                              "file_version": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File version (Base)",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file version."
                                          },
                                          "type": {
                                            "enum": [
                                              "file_version"
                                            ],
                                            "type": "string",
                                            "example": "file_version",
                                            "nullable": false,
                                            "description": "`file_version`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file_version--base"
                                      },
                                      {
                                        "properties": {
                                          "sha1": {
                                            "type": "string",
                                            "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                            "description": "The SHA1 hash of this version of the file."
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File version (Mini)",
                                    "description": "A mini representation of a file version, used when nested within another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file_version--mini"
                                  },
                                  {
                                    "description": "The information about the current version of the file."
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "title": "File (Mini)",
                        "description": "A mini representation of a file, used when\nnested under another resource.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "file--mini"
                      },
                      {
                        "description": "The file associated with the task"
                      }
                    ]
                  },
                  "type": {
                    "enum": [
                      "task"
                    ],
                    "type": "string",
                    "example": "task",
                    "description": "`task`"
                  },
                  "action": {
                    "enum": [
                      "review",
                      "complete"
                    ],
                    "type": "string",
                    "example": "review",
                    "description": "The type of task the task assignee will be prompted to\nperform."
                  },
                  "due_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-12-12T18:53:43.000Z",
                    "description": "When the task is due"
                  },
                  "message": {
                    "type": "string",
                    "example": "Legal review",
                    "description": "A message that will be included with the task"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-12-12T18:53:43.000Z",
                    "description": "When the task object was created"
                  },
                  "created_by": {
                    "allOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "User (Base)",
                            "x-box-tag": "users",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this user"
                              },
                              "type": {
                                "enum": [
                                  "user"
                                ],
                                "type": "string",
                                "example": "user",
                                "nullable": false,
                                "description": "`user`"
                              }
                            },
                            "description": "A mini representation of a user, used when\nnested within another resource.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-resource-id": "user--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Aaron Levie",
                                "nullable": false,
                                "maxLength": 50,
                                "description": "The display name of this user"
                              },
                              "login": {
                                "type": "string",
                                "format": "email",
                                "example": "ceo@example.com",
                                "nullable": false,
                                "description": "The primary email address of this user"
                              }
                            }
                          }
                        ],
                        "title": "User (Mini)",
                        "description": "A mini representation of a user, as can be returned when nested within other resources.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "user--mini"
                      },
                      {
                        "description": "The user who created the task"
                      }
                    ]
                  },
                  "is_completed": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the task has been completed"
                  },
                  "completion_rule": {
                    "enum": [
                      "all_assignees",
                      "any_assignee"
                    ],
                    "type": "string",
                    "example": "all_assignees",
                    "description": "Defines which assignees need to complete this task before the task is considered completed.\n* `all_assignees` requires all assignees to review or approve the the task in order for it to be considered completed. * `any_assignee` accepts any one assignee to review or approve the the task in order for it to be considered completed."
                  },
                  "task_assignment_collection": {
                    "allOf": [
                      {
                        "type": "object",
                        "title": "Task assignments",
                        "x-box-tag": "task_assignments",
                        "properties": {
                          "entries": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "title": "Task assignment",
                              "x-box-tag": "task_assignments",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "11446498",
                                  "description": "The unique identifier for this task assignment"
                                },
                                "item": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "title": "File (Base)",
                                          "x-box-tag": "files",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "example": "12345",
                                              "nullable": false,
                                              "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                            },
                                            "etag": {
                                              "type": "string",
                                              "example": "1",
                                              "nullable": true,
                                              "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                            },
                                            "type": {
                                              "enum": [
                                                "file"
                                              ],
                                              "type": "string",
                                              "example": "file",
                                              "nullable": false,
                                              "description": "`file`"
                                            }
                                          },
                                          "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                          "x-box-variant": "base",
                                          "x-box-variants": [
                                            "base",
                                            "mini",
                                            "standard",
                                            "full"
                                          ],
                                          "x-box-sanitized": true,
                                          "x-box-resource-id": "file--base"
                                        },
                                        {
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "Contract.pdf",
                                              "description": "The name of the file"
                                            },
                                            "sha1": {
                                              "type": "string",
                                              "format": "digest",
                                              "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                              "nullable": false,
                                              "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                            },
                                            "sequence_id": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "example": "3",
                                                  "nullable": false,
                                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                                },
                                                {
                                                  "nullable": false
                                                }
                                              ]
                                            },
                                            "file_version": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "title": "File version (Base)",
                                                      "properties": {
                                                        "id": {
                                                          "type": "string",
                                                          "example": "12345",
                                                          "nullable": false,
                                                          "description": "The unique identifier that represent a file version."
                                                        },
                                                        "type": {
                                                          "enum": [
                                                            "file_version"
                                                          ],
                                                          "type": "string",
                                                          "example": "file_version",
                                                          "nullable": false,
                                                          "description": "`file_version`"
                                                        }
                                                      },
                                                      "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                      "x-box-variant": "base",
                                                      "x-box-variants": [
                                                        "base",
                                                        "mini",
                                                        "standard"
                                                      ],
                                                      "x-box-sanitized": true,
                                                      "x-box-resource-id": "file_version--base"
                                                    },
                                                    {
                                                      "properties": {
                                                        "sha1": {
                                                          "type": "string",
                                                          "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                          "description": "The SHA1 hash of this version of the file."
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "title": "File version (Mini)",
                                                  "description": "A mini representation of a file version, used when nested within another resource.",
                                                  "x-box-variant": "mini",
                                                  "x-box-resource-id": "file_version--mini"
                                                },
                                                {
                                                  "description": "The information about the current version of the file."
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "title": "File (Mini)",
                                      "description": "A mini representation of a file, used when nested under another resource.",
                                      "x-box-variant": "mini",
                                      "x-box-resource-id": "file--mini"
                                    },
                                    {
                                      "description": "The file that the task has been assigned to."
                                    }
                                  ]
                                },
                                "type": {
                                  "enum": [
                                    "task_assignment"
                                  ],
                                  "type": "string",
                                  "example": "task_assignment",
                                  "description": "`task_assignment`"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "Please review",
                                  "description": "A message that will is included with the task assignment. This is visible to the assigned user in the web and mobile UI."
                                },
                                "assigned_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2012-12-12T18:53:43.000Z",
                                  "description": "The date at which this task was assigned to the user."
                                },
                                "assigned_by": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "title": "User (Base)",
                                          "x-box-tag": "users",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "example": "11446498",
                                              "description": "The unique identifier for this user"
                                            },
                                            "type": {
                                              "enum": [
                                                "user"
                                              ],
                                              "type": "string",
                                              "example": "user",
                                              "nullable": false,
                                              "description": "`user`"
                                            }
                                          },
                                          "description": "A mini representation of a user, used when nested within another resource.",
                                          "x-box-variant": "base",
                                          "x-box-variants": [
                                            "base",
                                            "mini",
                                            "standard",
                                            "full"
                                          ],
                                          "x-box-resource-id": "user--base"
                                        },
                                        {
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "Aaron Levie",
                                              "nullable": false,
                                              "maxLength": 50,
                                              "description": "The display name of this user"
                                            },
                                            "login": {
                                              "type": "string",
                                              "format": "email",
                                              "example": "ceo@example.com",
                                              "nullable": false,
                                              "description": "The primary email address of this user"
                                            }
                                          }
                                        }
                                      ],
                                      "title": "User (Mini)",
                                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                      "x-box-variant": "mini",
                                      "x-box-resource-id": "user--mini"
                                    },
                                    {
                                      "description": "The user who assigned this task."
                                    }
                                  ]
                                },
                                "assigned_to": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "title": "User (Base)",
                                          "x-box-tag": "users",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "example": "11446498",
                                              "description": "The unique identifier for this user"
                                            },
                                            "type": {
                                              "enum": [
                                                "user"
                                              ],
                                              "type": "string",
                                              "example": "user",
                                              "nullable": false,
                                              "description": "`user`"
                                            }
                                          },
                                          "description": "A mini representation of a user, used when nested within another resource.",
                                          "x-box-variant": "base",
                                          "x-box-variants": [
                                            "base",
                                            "mini",
                                            "standard",
                                            "full"
                                          ],
                                          "x-box-resource-id": "user--base"
                                        },
                                        {
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "Aaron Levie",
                                              "nullable": false,
                                              "maxLength": 50,
                                              "description": "The display name of this user"
                                            },
                                            "login": {
                                              "type": "string",
                                              "format": "email",
                                              "example": "ceo@example.com",
                                              "nullable": false,
                                              "description": "The primary email address of this user"
                                            }
                                          }
                                        }
                                      ],
                                      "title": "User (Mini)",
                                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                      "x-box-variant": "mini",
                                      "x-box-resource-id": "user--mini"
                                    },
                                    {
                                      "description": "The user that the task has been assigned to."
                                    }
                                  ]
                                },
                                "reminded_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2012-12-12T18:53:43.000Z",
                                  "description": "The date at which the assigned user was reminded of this task assignment."
                                },
                                "completed_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2012-12-12T18:53:43.000Z",
                                  "description": "The date at which this task assignment was completed. This will be `null` if the task is not completed yet."
                                },
                                "resolution_state": {
                                  "enum": [
                                    "completed",
                                    "incomplete",
                                    "approved",
                                    "rejected"
                                  ],
                                  "type": "string",
                                  "example": "incomplete",
                                  "description": "The current state of the assignment. The available states depend on the `action` value of the task object."
                                }
                              },
                              "description": "A task assignment defines which task is assigned to which user to complete.",
                              "x-box-resource-id": "task_assignment"
                            }
                          },
                          "total_count": {
                            "type": "integer",
                            "format": "int64",
                            "example": 100,
                            "description": "The total number of items in this collection."
                          }
                        },
                        "description": "A list of task assignments",
                        "x-box-resource-id": "task_assignments"
                      },
                      {
                        "description": "A collection of task assignment objects\nassociated with the task"
                      }
                    ]
                  }
                },
                "description": "A task allows for file-centric workflows within Box. Users can create tasks on files and assign them to other users for them to complete the tasks.",
                "x-box-resource-id": "task"
              }
            },
            "total_count": {
              "type": "integer",
              "format": "int64",
              "example": 5000,
              "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`."
            }
          },
          "description": "A list of tasks",
          "x-box-resource-id": "tasks"
        }
      ]
  get_files_id_thumbnail_id:
    description: |-
      Retrieves a thumbnail, or smaller image representation, of a file.
      Sizes of `32x32`,`64x64`, `128x128`, and `256x256` can be returned in the `.png` format and sizes of `32x32`, `94x94`, `160x160`, and `320x320` can be returned in the `.jpg` format.
      Thumbnails can be generated for the image and video file formats listed [found on our community site][1].
      [1]: https://community.box.com/t5/Migrating-and-Previewing-Content/File-Types-and-Fonts-Supported-in-Box-Content-Preview/ta-p/327
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id-thumbnail-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "string",
          "format": "binary",
          "description": "The thumbnail"
        }
      ]
  get_files_id_trash:
    description: |-
      Retrieves a file that has been moved to the trash.
      Please note that only if the file itself has been moved to the
      trash can it be retrieved with this API call. If instead one of
      its parent folders was moved to the trash, only that folder
      can be inspected using the
      [`GET /folders/:id/trash`](e://get_folders_id_trash) API.
      To list all items that have been moved to the trash, please
      use the [`GET /folders/trash/items`](e://get-folders-trash-items/)
      API.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id-trash/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "File (Base)",
                  "x-box-tag": "files",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "file"
                      ],
                      "type": "string",
                      "example": "file",
                      "nullable": false,
                      "description": "`file`"
                    }
                  },
                  "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "file--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contract.pdf",
                      "description": "The name of the file"
                    },
                    "sha1": {
                      "type": "string",
                      "format": "digest",
                      "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                      "nullable": false,
                      "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    },
                    "file_version": {
                      "allOf": [
                        {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "File version (Base)",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "12345",
                                  "nullable": false,
                                  "description": "The unique identifier that represent a file version."
                                },
                                "type": {
                                  "enum": [
                                    "file_version"
                                  ],
                                  "type": "string",
                                  "example": "file_version",
                                  "nullable": false,
                                  "description": "`file_version`"
                                }
                              },
                              "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                              "x-box-variant": "base",
                              "x-box-variants": [
                                "base",
                                "mini",
                                "standard"
                              ],
                              "x-box-sanitized": true,
                              "x-box-resource-id": "file_version--base"
                            },
                            {
                              "properties": {
                                "sha1": {
                                  "type": "string",
                                  "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                  "description": "The SHA1 hash of this version of the file."
                                }
                              }
                            }
                          ],
                          "title": "File version (Mini)",
                          "description": "A mini representation of a file version, used when\nnested within another resource.",
                          "x-box-variant": "mini",
                          "x-box-resource-id": "file_version--mini"
                        },
                        {
                          "description": "The information about the current version of the file."
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "File (Mini)",
              "description": "A mini representation of a file, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "file--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "example": 629644,
                  "nullable": false,
                  "description": "The file size in bytes. Be careful parsing this integer as it can get very large and cause an integer overflow."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The folder that this file is located within."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was created on Box."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this file"
                    }
                  ]
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file was put in the trash."
                },
                "description": {
                  "type": "string",
                  "example": "Contract for Q1 renewal",
                  "nullable": false,
                  "maxLength": 256,
                  "description": "The optional description of this file"
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was last updated on Box."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this file. This will be\n`null` if no shared link has been created for this\nfile."
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this file is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was originally\ncreated, which might be before it was uploaded to Box."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was last updated,\nwhich might be before it was uploaded to Box."
                }
              }
            }
          ],
          "title": "File",
          "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "file"
        }
      ]
  get_files_id_versions:
    description: |-
      Retrieve a list of the past versions for a file.
      Versions are only tracked by Box users with premium accounts. To fetch the ID of the current version of a file, use the `GET /file/:id` API.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id-versions/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "by": {
                        "type": "string",
                        "example": "type",
                        "description": "The field to order by"
                      },
                      "direction": {
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "type": "string",
                        "example": "ASC",
                        "description": "The direction to order by, either ascending or descending"
                      }
                    },
                    "description": "The order in which a pagination is ordered"
                  },
                  "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "offset": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2000,
                  "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "total_count": {
                  "type": "integer",
                  "format": "int64",
                  "example": 5000,
                  "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                }
              },
              "description": "The part of an API response that describes pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "File version (Base)",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "12345",
                                "nullable": false,
                                "description": "The unique identifier that represent a file version."
                              },
                              "type": {
                                "enum": [
                                  "file_version"
                                ],
                                "type": "string",
                                "example": "file_version",
                                "nullable": false,
                                "description": "`file_version`"
                              }
                            },
                            "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard"
                            ],
                            "x-box-sanitized": true,
                            "x-box-resource-id": "file_version--base"
                          },
                          {
                            "properties": {
                              "sha1": {
                                "type": "string",
                                "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                "description": "The SHA1 hash of this version of the file."
                              }
                            }
                          }
                        ],
                        "title": "File version (Mini)",
                        "description": "A mini representation of a file version, used when\nnested within another resource.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "file_version--mini"
                      },
                      {
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "tigers.jpeg",
                            "description": "The name of the file version"
                          },
                          "size": {
                            "type": "integer",
                            "format": "int64",
                            "example": 629644,
                            "description": "Size of the file version in bytes"
                          },
                          "purged_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "nullable": true,
                            "description": "When the file version object will be permanently deleted."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "When the file version object was created"
                          },
                          "trashed_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "nullable": true,
                            "description": "When the file version object was trashed."
                          },
                          "trashed_by": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "User (Base)",
                                    "x-box-tag": "users",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "11446498",
                                        "description": "The unique identifier for this user"
                                      },
                                      "type": {
                                        "enum": [
                                          "user"
                                        ],
                                        "type": "string",
                                        "example": "user",
                                        "nullable": false,
                                        "description": "`user`"
                                      }
                                    },
                                    "description": "A mini representation of a user, used when\nnested within another resource.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-resource-id": "user--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Aaron Levie",
                                        "nullable": false,
                                        "maxLength": 50,
                                        "description": "The display name of this user"
                                      },
                                      "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@example.com",
                                        "nullable": false,
                                        "description": "The primary email address of this user"
                                      }
                                    }
                                  }
                                ],
                                "title": "User (Mini)",
                                "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "user--mini"
                              },
                              {
                                "description": "The user who trashed the file version"
                              }
                            ]
                          },
                          "modified_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "When the file version object was last updated"
                          },
                          "modified_by": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "User (Base)",
                                    "x-box-tag": "users",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "11446498",
                                        "description": "The unique identifier for this user"
                                      },
                                      "type": {
                                        "enum": [
                                          "user"
                                        ],
                                        "type": "string",
                                        "example": "user",
                                        "nullable": false,
                                        "description": "`user`"
                                      }
                                    },
                                    "description": "A mini representation of a user, used when\nnested within another resource.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-resource-id": "user--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Aaron Levie",
                                        "nullable": false,
                                        "maxLength": 50,
                                        "description": "The display name of this user"
                                      },
                                      "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@example.com",
                                        "nullable": false,
                                        "description": "The primary email address of this user"
                                      }
                                    }
                                  }
                                ],
                                "title": "User (Mini)",
                                "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "user--mini"
                              },
                              {
                                "description": "The user who last updated the file version"
                              }
                            ]
                          },
                          "restored_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "nullable": true,
                            "description": "When the file version was restored from the trash."
                          },
                          "restored_by": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "User (Base)",
                                    "x-box-tag": "users",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "11446498",
                                        "description": "The unique identifier for this user"
                                      },
                                      "type": {
                                        "enum": [
                                          "user"
                                        ],
                                        "type": "string",
                                        "example": "user",
                                        "nullable": false,
                                        "description": "`user`"
                                      }
                                    },
                                    "description": "A mini representation of a user, used when\nnested within another resource.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-resource-id": "user--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Aaron Levie",
                                        "nullable": false,
                                        "maxLength": 50,
                                        "description": "The display name of this user"
                                      },
                                      "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@example.com",
                                        "nullable": false,
                                        "description": "The primary email address of this user"
                                      }
                                    }
                                  }
                                ],
                                "title": "User (Mini)",
                                "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "user--mini"
                              },
                              {
                                "description": "The user who restored the file version from the trash."
                              }
                            ]
                          },
                          "uploader_display_name": {
                            "allOf": [
                              {
                                "type": "string",
                                "title": "Uploader display name",
                                "example": "Ellis Wiggins",
                                "nullable": false,
                                "description": "The display name of the user that uploaded the file. In most cases this is the name of the user logged in at the time of the upload.\nIf the file was uploaded using a File Request form that requires the user to provide an email address, this field is populated with that email address. If an email address was not required in the File Request form, this field is set to return a value of `File Request`.\nIn all other anonymous cases where no email was provided this field will default to a value of `Someone`."
                              }
                            ]
                          }
                        }
                      }
                    ],
                    "title": "File version",
                    "description": "A standard representation of a file version",
                    "x-box-variant": "standard",
                    "x-box-resource-id": "file_version"
                  }
                }
              }
            }
          ],
          "title": "File versions",
          "x-box-tag": "file_versions",
          "description": "A list of file versions",
          "x-box-resource-id": "file_versions"
        }
      ]
  get_files_id_versions_id:
    description: |-
      Retrieve a specific version of a file.
      Versions are only tracked for Box users with premium accounts.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id-versions-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "File version (Base)",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a file version."
                    },
                    "type": {
                      "enum": [
                        "file_version"
                      ],
                      "type": "string",
                      "example": "file_version",
                      "nullable": false,
                      "description": "`file_version`"
                    }
                  },
                  "description": "The bare basic representation of a file version, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "file_version--base"
                },
                {
                  "properties": {
                    "sha1": {
                      "type": "string",
                      "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                      "description": "The SHA1 hash of this version of the file."
                    }
                  }
                }
              ],
              "title": "File version (Mini)",
              "description": "A mini representation of a file version, used when\nnested within another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "file_version--mini"
            },
            {
              "properties": {
                "name": {
                  "type": "string",
                  "example": "tigers.jpeg",
                  "description": "The name of the file version"
                },
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 629644,
                  "description": "Size of the file version in bytes"
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "When the file version object will be permanently deleted."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the file version object was created"
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "When the file version object was trashed."
                },
                "trashed_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who trashed the file version"
                    }
                  ]
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the file version object was last updated"
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last updated the file version"
                    }
                  ]
                },
                "restored_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "When the file version was restored from the trash."
                },
                "restored_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who restored the file version from the trash."
                    }
                  ]
                },
                "uploader_display_name": {
                  "allOf": [
                    {
                      "type": "string",
                      "title": "Uploader display name",
                      "example": "Ellis Wiggins",
                      "nullable": false,
                      "description": "The display name of the user that uploaded the file. In most cases this is the name of the user logged in at the time of the upload.\nIf the file was uploaded using a File Request form that requires the user to provide an email address, this field is populated with that email address. If an email address was not required in the File Request form, this field is set to return a value of `File Request`.\nIn all other anonymous cases where no email was provided this field will default to a value of `Someone`."
                    }
                  ]
                }
              }
            }
          ],
          "title": "File version",
          "description": "A standard representation of a file version",
          "x-box-variant": "standard",
          "x-box-resource-id": "file_version"
        }
      ]
  get_files_id_watermark:
    description: |-
      Retrieve the watermark for a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-id-watermark/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Watermark",
          "x-box-tag": "file_watermarks",
          "properties": {
            "watermark": {
              "type": "object",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this watermark was created"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this task was modified"
                }
              }
            }
          },
          "description": "A watermark is a semi-transparent overlay on an embedded file\npreview that displays a viewer's email address or user ID\nand the time of access over a file's content",
          "x-box-resource-id": "watermark"
        }
      ]
  get_files_upload_sessions_id:
    description: |-
      Return information about an upload session.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-upload-sessions-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Upload session",
          "x-box-tag": "chunked_uploads",
          "properties": {
            "id": {
              "type": "string",
              "example": "F971964745A5CD0C001BBE4E58196BFD",
              "description": "The unique identifier for this session"
            },
            "type": {
              "enum": [
                "upload_session"
              ],
              "type": "string",
              "example": "upload_session",
              "description": "`upload_session`"
            },
            "part_size": {
              "type": "integer",
              "format": "int64",
              "example": 1024,
              "description": "The  size in bytes that must be used for all parts of of the\nupload.\nOnly the last part is allowed to be of a smaller size."
            },
            "total_parts": {
              "type": "integer",
              "format": "int32",
              "example": 1000,
              "description": "The total number of parts expected in this upload session,\nas determined by the file size and part size."
            },
            "session_endpoints": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Session endpoints",
                  "properties": {
                    "abort": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD",
                      "description": "The URL for used to abort the session."
                    },
                    "commit": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/commit",
                      "description": "The URL used to commit the file"
                    },
                    "status": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD",
                      "description": "The URL used to get the status of the upload."
                    },
                    "log_event": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/log",
                      "description": "The URL used to get the upload log from."
                    },
                    "list_parts": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/parts",
                      "description": "The URL users to list all parts."
                    },
                    "upload_part": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD",
                      "description": "The URL to upload parts to"
                    }
                  },
                  "description": "A list of endpoints for a chunked upload session."
                },
                {
                  "description": "A list of endpoints for this session."
                }
              ]
            },
            "session_expires_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The date and time when this session expires."
            },
            "num_parts_processed": {
              "type": "integer",
              "format": "int32",
              "example": 455,
              "description": "The number of parts that have been uploaded and processed\nby the server. This starts at `0`.\nWhen committing a file files, inspecting this property can\nprovide insight if all parts have been uploaded correctly."
            }
          },
          "description": "An upload session for chunk uploading a file.",
          "x-box-resource-id": "upload_session"
        }
      ]
  get_files_upload_sessions_id_parts:
    description: |-
      Return a list of the chunks uploaded to the upload
      session so far.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-files-upload-sessions-id-parts/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "by": {
                        "type": "string",
                        "example": "type",
                        "description": "The field to order by"
                      },
                      "direction": {
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "type": "string",
                        "example": "ASC",
                        "description": "The direction to order by, either ascending or descending"
                      }
                    },
                    "description": "The order in which a pagination is ordered"
                  },
                  "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "offset": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2000,
                  "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "total_count": {
                  "type": "integer",
                  "format": "int64",
                  "example": 5000,
                  "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                }
              },
              "description": "The part of an API response that describes pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "title": "Upload part (Mini)",
                        "x-box-tag": "chunked_uploads",
                        "properties": {
                          "size": {
                            "type": "integer",
                            "format": "int64",
                            "example": 3222784,
                            "description": "The size of the chunk in bytes."
                          },
                          "offset": {
                            "type": "integer",
                            "format": "int64",
                            "example": 16777216,
                            "description": "The offset of the chunk within the file\nin bytes. The lower bound of the position\nof the chunk within the file."
                          },
                          "part_id": {
                            "type": "string",
                            "example": "6F2D3486",
                            "description": "The unique ID of the chunk."
                          }
                        },
                        "description": "The basic representation of an upload\nsession chunk.",
                        "x-box-variant": "mini",
                        "x-box-variants": [
                          "mini",
                          "standard"
                        ],
                        "x-box-resource-id": "upload_part--mini"
                      },
                      {
                        "properties": {
                          "sha1": {
                            "type": "string",
                            "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                            "description": "The SHA1 hash of the chunk."
                          }
                        }
                      }
                    ],
                    "title": "Upload part",
                    "description": "The representation of an upload\nsession chunk.",
                    "x-box-variant": "standard",
                    "x-box-resource-id": "upload_part"
                  }
                }
              }
            }
          ],
          "title": "Upload parts",
          "x-box-tag": "chunked_uploads",
          "description": "A list of uploaded chunks for an upload\nsession.",
          "x-box-resource-id": "upload_parts"
        }
      ]
  get_file_version_legal_holds:
    description: |-
      Get a list of file versions on legal hold for a legal hold assignment.
      Due to ongoing re-architecture efforts this API might not return all file versions for this policy ID.
      Instead, this API will only return file versions held in the legacy architecture. Two new endpoints will available to request any file versions held in the new architecture.
      For file versions held in the new architecture, the `GET /legal_hold_policy_assignments/:id/file_versions_on_hold` API can be used to return all past file versions available for this policy assignment, and the `GET /legal_hold_policy_assignments/:id/files_on_hold` API can be used to return any current (latest) versions of a file under legal hold.
      The `GET /legal_hold_policy_assignments?policy_id={id}` API can be used to find a list of policy assignments for a given policy ID.
      Once the re-architecture is completed this API will be deprecated.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-file-version-legal-holds/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_file_version_legal_holds_id:
    description: |-
      Retrieves information about the legal hold policies
      assigned to a file version.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-file-version-legal-holds-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_file_version_retentions:
    description: |-
      Retrieves all file version retentions for the given enterprise.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-file-version-retentions/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "next_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 3000,
                  "description": "The marker for the start of the next page of results."
                },
                "prev_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The marker for the start of the previous page of results."
                }
              },
              "description": "The part of an API response that describes marker\nbased pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "File version retention",
                    "x-box-tag": "file_version_retentions",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "11446498",
                        "description": "The unique identifier for this file version retention."
                      },
                      "file": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "File (Base)",
                                "x-box-tag": "files",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "file"
                                    ],
                                    "type": "string",
                                    "example": "file",
                                    "nullable": false,
                                    "description": "`file`"
                                  }
                                },
                                "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "file--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contract.pdf",
                                    "description": "The name of the file"
                                  },
                                  "sha1": {
                                    "type": "string",
                                    "format": "digest",
                                    "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                    "nullable": false,
                                    "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  },
                                  "file_version": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "title": "File version (Base)",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "example": "12345",
                                                "nullable": false,
                                                "description": "The unique identifier that represent a file version."
                                              },
                                              "type": {
                                                "enum": [
                                                  "file_version"
                                                ],
                                                "type": "string",
                                                "example": "file_version",
                                                "nullable": false,
                                                "description": "`file_version`"
                                              }
                                            },
                                            "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                            "x-box-variant": "base",
                                            "x-box-variants": [
                                              "base",
                                              "mini",
                                              "standard"
                                            ],
                                            "x-box-sanitized": true,
                                            "x-box-resource-id": "file_version--base"
                                          },
                                          {
                                            "properties": {
                                              "sha1": {
                                                "type": "string",
                                                "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                "description": "The SHA1 hash of this version of the file."
                                              }
                                            }
                                          }
                                        ],
                                        "title": "File version (Mini)",
                                        "description": "A mini representation of a file version, used when nested within another resource.",
                                        "x-box-variant": "mini",
                                        "x-box-resource-id": "file_version--mini"
                                      },
                                      {
                                        "description": "The information about the current version of the file."
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "File (Mini)",
                            "description": "A mini representation of a file, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "file--mini"
                          },
                          {
                            "description": "The file this file version retention was applied to"
                          }
                        ]
                      },
                      "type": {
                        "enum": [
                          "file_version_retention"
                        ],
                        "type": "string",
                        "example": "file_version_retention",
                        "description": "`file_version_retention`"
                      },
                      "applied_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "When this file version retention object was\ncreated"
                      },
                      "file_version": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "File version (Base)",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a file version."
                                  },
                                  "type": {
                                    "enum": [
                                      "file_version"
                                    ],
                                    "type": "string",
                                    "example": "file_version",
                                    "nullable": false,
                                    "description": "`file_version`"
                                  }
                                },
                                "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "file_version--base"
                              },
                              {
                                "properties": {
                                  "sha1": {
                                    "type": "string",
                                    "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                    "description": "The SHA1 hash of this version of the file."
                                  }
                                }
                              }
                            ],
                            "title": "File version (Mini)",
                            "description": "A mini representation of a file version, used when\nnested within another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "file_version--mini"
                          },
                          {
                            "description": "The file version this file version retention was\napplied to"
                          }
                        ]
                      },
                      "disposition_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "When the retention expires on this file\nversion retention"
                      },
                      "winning_retention_policy": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Retention policy (Base)",
                                "x-box-tag": "retention_policies",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a file version."
                                  },
                                  "type": {
                                    "enum": [
                                      "retention_policy"
                                    ],
                                    "type": "string",
                                    "example": "retention_policy",
                                    "nullable": false,
                                    "description": "`retention_policy`"
                                  }
                                },
                                "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard"
                                ],
                                "x-box-resource-id": "retention_policy--base"
                              },
                              {
                                "properties": {
                                  "policy_name": {
                                    "type": "string",
                                    "example": "Some Policy Name",
                                    "description": "The name given to the retention policy"
                                  },
                                  "retention_length": {
                                    "type": "string",
                                    "format": "int32",
                                    "example": "365",
                                    "minimum": 1,
                                    "description": "The length of the retention policy. This length specifies the duration in days that the retention policy will be active for after being assigned to content.  If the policy has A `policy_type` of `indefinite`, the `retention_length` will also be `indefinite`."
                                  },
                                  "disposition_action": {
                                    "enum": [
                                      "permanently_delete",
                                      "remove_retention"
                                    ],
                                    "type": "string",
                                    "example": "permanently_delete",
                                    "description": "The disposition action of the retention policy. This action can be `permanently_delete`, which will cause the content retained by the policy to be permanently deleted, or `remove_retention`, which will lift the retention policy from the content, allowing it to be deleted by users, once the retention policy has expired."
                                  }
                                }
                              }
                            ],
                            "title": "Retention policy (Mini)",
                            "description": "A mini representation of a retention policy, used when nested within another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "retention_policy--mini"
                          },
                          {
                            "description": "The winning retention policy applied to this file version retention. A file version can have multiple retention policies applied."
                          }
                        ]
                      }
                    },
                    "description": "A retention policy blocks permanent deletion of content for a specified amount of time. Admins can apply policies to specified folders, or an entire enterprise. A file version retention is a  record for a retained file version. To use this feature, you must  have the manage retention policies scope enabled for your API key via  your application management console. For more information about retention policies, please visit our help documentation",
                    "x-box-resource-id": "file_version_retention"
                  }
                }
              }
            }
          ],
          "title": "File version retentions",
          "x-box-tag": "file_version_retentions",
          "description": "A list of file version retentions.",
          "x-box-resource-id": "file_version_retentions"
        }
      ]
  get_file_version_retentions_id:
    description: |-
      Returns information about a file version retention.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-file-version-retentions-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "File version retention",
          "x-box-tag": "file_version_retentions",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this file version retention."
            },
            "file": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "File (Base)",
                      "x-box-tag": "files",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                        },
                        "etag": {
                          "type": "string",
                          "example": "1",
                          "nullable": true,
                          "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                        },
                        "type": {
                          "enum": [
                            "file"
                          ],
                          "type": "string",
                          "example": "file",
                          "nullable": false,
                          "description": "`file`"
                        }
                      },
                      "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "file--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Contract.pdf",
                          "description": "The name of the file"
                        },
                        "sha1": {
                          "type": "string",
                          "format": "digest",
                          "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                          "nullable": false,
                          "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                        },
                        "sequence_id": {
                          "allOf": [
                            {
                              "type": "string",
                              "example": "3",
                              "nullable": false,
                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                            },
                            {
                              "nullable": false
                            }
                          ]
                        },
                        "file_version": {
                          "allOf": [
                            {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "File version (Base)",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "12345",
                                      "nullable": false,
                                      "description": "The unique identifier that represent a file version."
                                    },
                                    "type": {
                                      "enum": [
                                        "file_version"
                                      ],
                                      "type": "string",
                                      "example": "file_version",
                                      "nullable": false,
                                      "description": "`file_version`"
                                    }
                                  },
                                  "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                  "x-box-variant": "base",
                                  "x-box-variants": [
                                    "base",
                                    "mini",
                                    "standard"
                                  ],
                                  "x-box-sanitized": true,
                                  "x-box-resource-id": "file_version--base"
                                },
                                {
                                  "properties": {
                                    "sha1": {
                                      "type": "string",
                                      "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                      "description": "The SHA1 hash of this version of the file."
                                    }
                                  }
                                }
                              ],
                              "title": "File version (Mini)",
                              "description": "A mini representation of a file version, used when nested within another resource.",
                              "x-box-variant": "mini",
                              "x-box-resource-id": "file_version--mini"
                            },
                            {
                              "description": "The information about the current version of the file."
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "title": "File (Mini)",
                  "description": "A mini representation of a file, used when\nnested under another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "file--mini"
                },
                {
                  "description": "The file this file version retention was applied to"
                }
              ]
            },
            "type": {
              "enum": [
                "file_version_retention"
              ],
              "type": "string",
              "example": "file_version_retention",
              "description": "`file_version_retention`"
            },
            "applied_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When this file version retention object was\ncreated"
            },
            "file_version": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "File version (Base)",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a file version."
                        },
                        "type": {
                          "enum": [
                            "file_version"
                          ],
                          "type": "string",
                          "example": "file_version",
                          "nullable": false,
                          "description": "`file_version`"
                        }
                      },
                      "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "file_version--base"
                    },
                    {
                      "properties": {
                        "sha1": {
                          "type": "string",
                          "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                          "description": "The SHA1 hash of this version of the file."
                        }
                      }
                    }
                  ],
                  "title": "File version (Mini)",
                  "description": "A mini representation of a file version, used when\nnested within another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "file_version--mini"
                },
                {
                  "description": "The file version this file version retention was\napplied to"
                }
              ]
            },
            "disposition_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the retention expires on this file\nversion retention"
            },
            "winning_retention_policy": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Retention policy (Base)",
                      "x-box-tag": "retention_policies",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a file version."
                        },
                        "type": {
                          "enum": [
                            "retention_policy"
                          ],
                          "type": "string",
                          "example": "retention_policy",
                          "nullable": false,
                          "description": "`retention_policy`"
                        }
                      },
                      "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard"
                      ],
                      "x-box-resource-id": "retention_policy--base"
                    },
                    {
                      "properties": {
                        "policy_name": {
                          "type": "string",
                          "example": "Some Policy Name",
                          "description": "The name given to the retention policy"
                        },
                        "retention_length": {
                          "type": "string",
                          "format": "int32",
                          "example": "365",
                          "minimum": 1,
                          "description": "The length of the retention policy. This length\nspecifies the duration in days that the retention\npolicy will be active for after being assigned to\ncontent.  If the policy has A `policy_type` of\n`indefinite`, the `retention_length` will also be\n`indefinite`."
                        },
                        "disposition_action": {
                          "enum": [
                            "permanently_delete",
                            "remove_retention"
                          ],
                          "type": "string",
                          "example": "permanently_delete",
                          "description": "The disposition action of the retention policy. This action can be `permanently_delete`, which will cause the content retained by the policy to be permanently deleted, or `remove_retention`, which will lift the retention policy from the content, allowing it to be deleted by users, once the retention policy has expired."
                        }
                      }
                    }
                  ],
                  "title": "Retention policy (Mini)",
                  "description": "A mini representation of a retention policy, used when\nnested within another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "retention_policy--mini"
                },
                {
                  "description": "The winning retention policy applied to this file\nversion retention. A file version can have multiple\nretention policies applied."
                }
              ]
            }
          },
          "description": "A retention policy blocks permanent deletion of content for a specified amount of time. Admins can apply policies to specified folders, or an entire enterprise. A file version retention is a  record for a retained file version. To use this feature, you must  have the manage retention policies scope enabled for your API key via  your application management console. For more information about retention policies, please visit our help documentation",
          "x-box-resource-id": "file_version_retention"
        }
      ]
  get_folder_locks:
    description: |-
      Retrieves folder lock details for a given folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-folder-locks/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "next_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 3000,
                  "description": "The marker for the start of the next page of results."
                },
                "prev_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The marker for the start of the previous page of results."
                }
              },
              "description": "The part of an API response that describes marker\nbased pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Folder Lock",
                    "x-box-tag": "folder_locks",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "12345678",
                        "description": "The unique identifier for this folder lock."
                      },
                      "type": {
                        "type": "string",
                        "example": "folder_lock",
                        "description": "The object type, always `folder_lock`."
                      },
                      "folder": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          {
                            "description": "The folder that the lock applies to."
                          }
                        ]
                      },
                      "lock_type": {
                        "type": "string",
                        "example": "freeze",
                        "description": "The lock type, always `freeze`."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-14T23:12:53.000Z",
                        "description": "When the folder lock object was created."
                      },
                      "created_by": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "User (Base)",
                            "x-box-tag": "users",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this user"
                              },
                              "type": {
                                "enum": [
                                  "user"
                                ],
                                "type": "string",
                                "example": "user",
                                "nullable": false,
                                "description": "`user`"
                              }
                            },
                            "description": "A mini representation of a user, used when\nnested within another resource.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-resource-id": "user--base"
                          },
                          {
                            "description": "The user or group that created the lock."
                          }
                        ]
                      },
                      "locked_operations": {
                        "type": "object",
                        "properties": {
                          "move": {
                            "type": "boolean",
                            "example": true,
                            "nullable": false,
                            "description": "Whether moving the folder is restricted."
                          },
                          "delete": {
                            "type": "boolean",
                            "example": true,
                            "nullable": false,
                            "description": "Whether deleting the folder is restricted."
                          }
                        },
                        "description": "The operations that have been locked. Currently the `move` and `delete` operations cannot be locked separately, and both need to be set to `true`.\n"
                      }
                    },
                    "description": "Folder locks define access restrictions placed by folder owners to prevent specific folders from being moved or deleted.",
                    "x-box-resource-id": "folder_lock"
                  }
                }
              }
            }
          ],
          "title": "Folder Locks",
          "x-box-tag": "folder_locks",
          "description": "A list of folder locks",
          "x-box-resource-id": "folder_locks"
        }
      ]
  get_folders_id:
    description: |-
      Retrieves details for a folder, including the first 100 entries
      in the folder.
      To fetch more items within the folder, please use the
      [Get items in a folder](#get-folders-id-items) endpoint.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-folders-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Folder (Base)",
                  "x-box-tag": "folders",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "folder"
                      ],
                      "type": "string",
                      "example": "folder",
                      "nullable": false,
                      "description": "`folder`"
                    }
                  },
                  "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "folder--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contracts",
                      "nullable": false,
                      "description": "The name of the folder."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Folder (Mini)",
              "description": "A mini representation of a file version, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "folder--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 629644,
                  "nullable": false,
                  "description": "The folder size in bytes.\nBe careful parsing this integer as its\nvalue can get very large."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The optional folder that this folder is located within.\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time and which the folder will be automatically be deleted."
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder was put in the trash."
                },
                "description": {
                  "allOf": [
                    {
                      "type": "string",
                      "example": "Legal contracts for the new ACME deal",
                      "nullable": false,
                      "maxLength": 256,
                      "description": "The optional description of this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                    }
                  ],
                  "nullable": true
                },
                "item_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1000,
                              "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                            },
                            "order": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "by": {
                                    "type": "string",
                                    "example": "type",
                                    "description": "The field to order by"
                                  },
                                  "direction": {
                                    "enum": [
                                      "ASC",
                                      "DESC"
                                    ],
                                    "type": "string",
                                    "example": "ASC",
                                    "description": "The direction to order by, either ascending or descending"
                                  }
                                },
                                "description": "The order in which a pagination is ordered"
                              },
                              "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "offset": {
                              "type": "integer",
                              "format": "int64",
                              "example": 2000,
                              "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "total_count": {
                              "type": "integer",
                              "format": "int64",
                              "example": 5000,
                              "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            }
                          },
                          "description": "The part of an API response that describes pagination"
                        },
                        {
                          "properties": {
                            "entries": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File (Base)",
                                        "x-box-tag": "files",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "file"
                                            ],
                                            "type": "string",
                                            "example": "file",
                                            "nullable": false,
                                            "description": "`file`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contract.pdf",
                                            "description": "The name of the file"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "format": "digest",
                                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                            "nullable": false,
                                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          },
                                          "file_version": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "title": "File version (Base)",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "example": "12345",
                                                        "nullable": false,
                                                        "description": "The unique identifier that represent a file version."
                                                      },
                                                      "type": {
                                                        "enum": [
                                                          "file_version"
                                                        ],
                                                        "type": "string",
                                                        "example": "file_version",
                                                        "nullable": false,
                                                        "description": "`file_version`"
                                                      }
                                                    },
                                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                    "x-box-variant": "base",
                                                    "x-box-variants": [
                                                      "base",
                                                      "mini",
                                                      "standard"
                                                    ],
                                                    "x-box-sanitized": true,
                                                    "x-box-resource-id": "file_version--base"
                                                  },
                                                  {
                                                    "properties": {
                                                      "sha1": {
                                                        "type": "string",
                                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                        "description": "The SHA1 hash of this version of the file."
                                                      }
                                                    }
                                                  }
                                                ],
                                                "title": "File version (Mini)",
                                                "description": "A mini representation of a file version, used when nested within another resource.",
                                                "x-box-variant": "mini",
                                                "x-box-resource-id": "file_version--mini"
                                              },
                                              {
                                                "description": "The information about the current version of the file."
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File (Mini)",
                                    "description": "A mini representation of a file, used when\nnested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Folder (Base)",
                                        "x-box-tag": "folders",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "folder"
                                            ],
                                            "type": "string",
                                            "example": "folder",
                                            "nullable": false,
                                            "description": "`folder`"
                                          }
                                        },
                                        "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "folder--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contracts",
                                            "nullable": false,
                                            "description": "The name of the folder."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Folder (Mini)",
                                    "description": "A mini representation of a file version, used when nested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "folder--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Web link (Base)",
                                        "x-box-tag": "web_links",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "11446498",
                                            "description": "The unique identifier for this web link"
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "description": "The entity tag of this web link. Used with `If-Match` headers."
                                          },
                                          "type": {
                                            "enum": [
                                              "web_link"
                                            ],
                                            "type": "string",
                                            "example": "web_link",
                                            "description": "`web_link`"
                                          }
                                        },
                                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-resource-id": "web_link--base"
                                      },
                                      {
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com/example/1234",
                                            "description": "The URL this web link points to"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "My Bookmark",
                                            "description": "The name of the web link"
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Web link (Mini)",
                                    "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "web_link--mini"
                                  }
                                ]
                              },
                              "description": "The items in this collection."
                            }
                          }
                        }
                      ],
                      "title": "Items",
                      "x-box-tag": "folders",
                      "description": "A list of files, folders, and web links in\ntheir mini representation.",
                      "x-box-resource-id": "items"
                    },
                    {
                      "description": "A page of the items that are in the folder.\nThis field can only be requested when querying a folder's information, not when querying a folder's items."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was originally\ncreated."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was last updated."
                },
                "folder_upload_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "upload.Contracts.asd7asd@u.box.com",
                      "nullable": false,
                      "description": "The optional upload email address for this folder."
                    },
                    "access": {
                      "enum": [
                        "open",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "nullable": false,
                      "description": "When this parameter has been set, users can email files to the email address that has been automatically created for this folder.\nTo create an email address, set this property either when creating or updating the folder.\nWhen set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.\nWhen set to `open` it will accept emails from any email address."
                    }
                  }
                }
              }
            }
          ],
          "title": "Folder",
          "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "folder"
        }
      ]
  get_folders_id_collaborations:
    description: |-
      Retrieves a list of pending and active collaborations for a
      folder. This returns all the users that have access to the folder
      or have been invited to the folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-folders-id-collaborations/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_folders_id#get_shared_link:
    description: |-
      Gets the information for a shared link on a folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-folders-id--get-shared-link/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Folder (Base)",
                  "x-box-tag": "folders",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "folder"
                      ],
                      "type": "string",
                      "example": "folder",
                      "nullable": false,
                      "description": "`folder`"
                    }
                  },
                  "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "folder--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contracts",
                      "nullable": false,
                      "description": "The name of the folder."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Folder (Mini)",
              "description": "A mini representation of a file version, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "folder--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 629644,
                  "nullable": false,
                  "description": "The folder size in bytes.\nBe careful parsing this integer as its\nvalue can get very large."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The optional folder that this folder is located within.\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time and which the folder will be automatically be deleted."
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder was put in the trash."
                },
                "description": {
                  "allOf": [
                    {
                      "type": "string",
                      "example": "Legal contracts for the new ACME deal",
                      "nullable": false,
                      "maxLength": 256,
                      "description": "The optional description of this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                    }
                  ],
                  "nullable": true
                },
                "item_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1000,
                              "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                            },
                            "order": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "by": {
                                    "type": "string",
                                    "example": "type",
                                    "description": "The field to order by"
                                  },
                                  "direction": {
                                    "enum": [
                                      "ASC",
                                      "DESC"
                                    ],
                                    "type": "string",
                                    "example": "ASC",
                                    "description": "The direction to order by, either ascending or descending"
                                  }
                                },
                                "description": "The order in which a pagination is ordered"
                              },
                              "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "offset": {
                              "type": "integer",
                              "format": "int64",
                              "example": 2000,
                              "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "total_count": {
                              "type": "integer",
                              "format": "int64",
                              "example": 5000,
                              "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            }
                          },
                          "description": "The part of an API response that describes pagination"
                        },
                        {
                          "properties": {
                            "entries": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File (Base)",
                                        "x-box-tag": "files",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "file"
                                            ],
                                            "type": "string",
                                            "example": "file",
                                            "nullable": false,
                                            "description": "`file`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contract.pdf",
                                            "description": "The name of the file"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "format": "digest",
                                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                            "nullable": false,
                                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          },
                                          "file_version": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "title": "File version (Base)",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "example": "12345",
                                                        "nullable": false,
                                                        "description": "The unique identifier that represent a file version."
                                                      },
                                                      "type": {
                                                        "enum": [
                                                          "file_version"
                                                        ],
                                                        "type": "string",
                                                        "example": "file_version",
                                                        "nullable": false,
                                                        "description": "`file_version`"
                                                      }
                                                    },
                                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                    "x-box-variant": "base",
                                                    "x-box-variants": [
                                                      "base",
                                                      "mini",
                                                      "standard"
                                                    ],
                                                    "x-box-sanitized": true,
                                                    "x-box-resource-id": "file_version--base"
                                                  },
                                                  {
                                                    "properties": {
                                                      "sha1": {
                                                        "type": "string",
                                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                        "description": "The SHA1 hash of this version of the file."
                                                      }
                                                    }
                                                  }
                                                ],
                                                "title": "File version (Mini)",
                                                "description": "A mini representation of a file version, used when nested within another resource.",
                                                "x-box-variant": "mini",
                                                "x-box-resource-id": "file_version--mini"
                                              },
                                              {
                                                "description": "The information about the current version of the file."
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File (Mini)",
                                    "description": "A mini representation of a file, used when\nnested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Folder (Base)",
                                        "x-box-tag": "folders",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "folder"
                                            ],
                                            "type": "string",
                                            "example": "folder",
                                            "nullable": false,
                                            "description": "`folder`"
                                          }
                                        },
                                        "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "folder--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contracts",
                                            "nullable": false,
                                            "description": "The name of the folder."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Folder (Mini)",
                                    "description": "A mini representation of a file version, used when nested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "folder--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Web link (Base)",
                                        "x-box-tag": "web_links",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "11446498",
                                            "description": "The unique identifier for this web link"
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "description": "The entity tag of this web link. Used with `If-Match` headers."
                                          },
                                          "type": {
                                            "enum": [
                                              "web_link"
                                            ],
                                            "type": "string",
                                            "example": "web_link",
                                            "description": "`web_link`"
                                          }
                                        },
                                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-resource-id": "web_link--base"
                                      },
                                      {
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com/example/1234",
                                            "description": "The URL this web link points to"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "My Bookmark",
                                            "description": "The name of the web link"
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Web link (Mini)",
                                    "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "web_link--mini"
                                  }
                                ]
                              },
                              "description": "The items in this collection."
                            }
                          }
                        }
                      ],
                      "title": "Items",
                      "x-box-tag": "folders",
                      "description": "A list of files, folders, and web links in\ntheir mini representation.",
                      "x-box-resource-id": "items"
                    },
                    {
                      "description": "A page of the items that are in the folder.\nThis field can only be requested when querying a folder's information, not when querying a folder's items."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was originally\ncreated."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was last updated."
                },
                "folder_upload_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "upload.Contracts.asd7asd@u.box.com",
                      "nullable": false,
                      "description": "The optional upload email address for this folder."
                    },
                    "access": {
                      "enum": [
                        "open",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "nullable": false,
                      "description": "When this parameter has been set, users can email files to the email address that has been automatically created for this folder.\nTo create an email address, set this property either when creating or updating the folder.\nWhen set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.\nWhen set to `open` it will accept emails from any email address."
                    }
                  }
                }
              }
            }
          ],
          "title": "Folder",
          "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "folder"
        }
      ]
  get_folders_id_items:
    description: |-
      Retrieves a page of items in a folder. These items can be files,
      folders, and web links.
      To request more information about the folder itself, like its size,
      please use the [Get a folder](#get-folders-id) endpoint instead.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-folders-id-items/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "by": {
                        "type": "string",
                        "example": "type",
                        "description": "The field to order by"
                      },
                      "direction": {
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "type": "string",
                        "example": "ASC",
                        "description": "The direction to order by, either ascending or descending"
                      }
                    },
                    "description": "The order in which a pagination is ordered"
                  },
                  "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "offset": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2000,
                  "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "total_count": {
                  "type": "integer",
                  "format": "int64",
                  "example": 5000,
                  "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                }
              },
              "description": "The part of an API response that describes pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "File (Base)",
                            "x-box-tag": "files",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "12345",
                                "nullable": false,
                                "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                              },
                              "etag": {
                                "type": "string",
                                "example": "1",
                                "nullable": true,
                                "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                              },
                              "type": {
                                "enum": [
                                  "file"
                                ],
                                "type": "string",
                                "example": "file",
                                "nullable": false,
                                "description": "`file`"
                              }
                            },
                            "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-sanitized": true,
                            "x-box-resource-id": "file--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Contract.pdf",
                                "description": "The name of the file"
                              },
                              "sha1": {
                                "type": "string",
                                "format": "digest",
                                "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                "nullable": false,
                                "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                              },
                              "sequence_id": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "3",
                                    "nullable": false,
                                    "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                  },
                                  {
                                    "nullable": false
                                  }
                                ]
                              },
                              "file_version": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File version (Base)",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file version."
                                          },
                                          "type": {
                                            "enum": [
                                              "file_version"
                                            ],
                                            "type": "string",
                                            "example": "file_version",
                                            "nullable": false,
                                            "description": "`file_version`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file_version--base"
                                      },
                                      {
                                        "properties": {
                                          "sha1": {
                                            "type": "string",
                                            "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                            "description": "The SHA1 hash of this version of the file."
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File version (Mini)",
                                    "description": "A mini representation of a file version, used when nested within another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file_version--mini"
                                  },
                                  {
                                    "description": "The information about the current version of the file."
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "title": "File (Mini)",
                        "description": "A mini representation of a file, used when\nnested under another resource.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "file--mini"
                      },
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Folder (Base)",
                            "x-box-tag": "folders",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "12345",
                                "nullable": false,
                                "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                              },
                              "etag": {
                                "type": "string",
                                "example": "1",
                                "nullable": true,
                                "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                              },
                              "type": {
                                "enum": [
                                  "folder"
                                ],
                                "type": "string",
                                "example": "folder",
                                "nullable": false,
                                "description": "`folder`"
                              }
                            },
                            "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-sanitized": true,
                            "x-box-resource-id": "folder--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Contracts",
                                "nullable": false,
                                "description": "The name of the folder."
                              },
                              "sequence_id": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "3",
                                    "nullable": false,
                                    "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                  },
                                  {
                                    "nullable": false
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "title": "Folder (Mini)",
                        "description": "A mini representation of a file version, used when\nnested under another resource.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "folder--mini"
                      },
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Web link (Base)",
                            "x-box-tag": "web_links",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this web link"
                              },
                              "etag": {
                                "type": "string",
                                "example": "1",
                                "description": "The entity tag of this web link. Used with `If-Match` headers."
                              },
                              "type": {
                                "enum": [
                                  "web_link"
                                ],
                                "type": "string",
                                "example": "web_link",
                                "description": "`web_link`"
                              }
                            },
                            "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard"
                            ],
                            "x-box-resource-id": "web_link--base"
                          },
                          {
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": "https://www.example.com/example/1234",
                                "description": "The URL this web link points to"
                              },
                              "name": {
                                "type": "string",
                                "example": "My Bookmark",
                                "description": "The name of the web link"
                              },
                              "sequence_id": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "3",
                                    "nullable": false,
                                    "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                  },
                                  {
                                    "nullable": false
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "title": "Web link (Mini)",
                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "web_link--mini"
                      }
                    ]
                  },
                  "description": "The items in this collection."
                }
              }
            }
          ],
          "title": "Items",
          "x-box-tag": "folders",
          "description": "A list of files, folders, and web links in\ntheir mini representation.",
          "x-box-resource-id": "items"
        }
      ]
  get_folders_id_metadata:
    description: |-
      Retrieves all metadata for a given folder. This can not be used on the root folder with ID `0`.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-folders-id-metadata/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Metadata instances",
          "x-box-tag": "file_metadata",
          "properties": {
            "limit": {
              "type": "integer",
              "example": 100,
              "description": "The limit that was used for this page of results."
            },
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "title": "Metadata instance (Base)",
                    "x-box-tag": "file_metadata",
                    "properties": {
                      "$scope": {
                        "type": "string",
                        "example": "enterprise_27335",
                        "description": "An ID for the scope in which this template has been applied. This will be `enterprise_{enterprise_id}` for templates defined for use in this enterprise, and `global` for general templates that are available to all enterprises using Box."
                      },
                      "$parent": {
                        "type": "string",
                        "example": "folder_59449484661,",
                        "description": "The identifier of the item that this metadata instance has been attached to. This combines the `type` and the `id` of the parent in the form `{type}_{id}`."
                      },
                      "$version": {
                        "type": "integer",
                        "example": 1,
                        "description": "The version of the metadata instance. This version starts at 0 and increases every time a user-defined property is modified."
                      },
                      "$template": {
                        "type": "string",
                        "example": "marketingCollateral",
                        "description": "The name of the template"
                      }
                    },
                    "description": "The base representation of a metadata instance.",
                    "x-box-variant": "base",
                    "x-box-variants": [
                      "base",
                      "standard",
                      "full"
                    ],
                    "x-box-sanitized": true,
                    "x-box-resource-id": "metadata--base"
                  }
                ],
                "title": "Metadata instance",
                "x-box-tag": "file_metadata",
                "description": "An instance of a metadata template, which has been applied to a file or folder.",
                "x-box-variant": "standard",
                "x-box-resource-id": "metadata"
              },
              "description": "A list of metadata instances, as applied to this file or folder."
            }
          },
          "description": "A list of metadata instances that have been applied to a file or folder.",
          "x-box-resource-id": "metadatas"
        }
      ]
  get_folders_id_metadata_enterprise_securityClassification-6VMVochwUWo:
    description: |-
      Retrieves the classification metadata instance that
      has been applied to a folder.
      This API can also be called by including the enterprise ID in the
      URL explicitly, for example
      `/folders/:id//enterprise_12345/securityClassification-6VMVochwUWo`.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-folders-id-metadata-enterprise-securityClassification-6VMVochwUWo/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Classification",
          "x-box-tag": "classifications",
          "properties": {
            "$type": {
              "type": "string",
              "example": "securityClassification-6VMVochwUWo-fd31537a-0f95-4d86-9f2b-5974a29978f8",
              "description": "The unique ID of this classification instance. This will be include the name of the classification template and a unique ID."
            },
            "$scope": {
              "type": "string",
              "example": "enterprise_27335",
              "description": "The scope of the enterprise that this classification has been\napplied for.\nThis will be in the format `enterprise_{enterprise_id}`."
            },
            "$parent": {
              "type": "string",
              "example": "folder_59449484661,",
              "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`."
            },
            "$canEdit": {
              "type": "boolean",
              "example": true,
              "description": "Whether an end user can change the classification."
            },
            "$version": {
              "type": "integer",
              "example": 1,
              "description": "The version of the metadata instance. This version starts at 0 and increases every time a classification is updated."
            },
            "$template": {
              "enum": [
                "securityClassification-6VMVochwUWo"
              ],
              "type": "string",
              "example": "securityClassification-6VMVochwUWo",
              "description": "`securityClassification-6VMVochwUWo`"
            },
            "$typeVersion": {
              "type": "number",
              "example": 5,
              "description": "The version of the metadata template. This version starts at 0 and increases every time the template is updated. This is mostly for internal use."
            },
            "Box__Security__Classification__Key": {
              "type": "string",
              "example": "Sensitive",
              "description": "The name of the classification applied to the item."
            }
          },
          "description": "An instance of the classification metadata template, containing\nthe classification applied to the file or folder.\nTo get more details about the classification applied to an item,\nrequest the classification metadata template.",
          "x-box-resource-id": "classification"
        }
      ]
  get_folders_id_metadata_id_id:
    description: |-
      Retrieves the instance of a metadata template that has been applied to a
      folder. This can not be used on the root folder with ID `0`.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-folders-id-metadata-id-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Metadata instance (Base)",
              "x-box-tag": "file_metadata",
              "properties": {
                "$scope": {
                  "type": "string",
                  "example": "enterprise_27335",
                  "description": "An ID for the scope in which this template has been applied. This will be `enterprise_{enterprise_id}` for templates defined for use in this enterprise, and `global` for general templates that are available to all enterprises using Box."
                },
                "$parent": {
                  "type": "string",
                  "example": "folder_59449484661,",
                  "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`."
                },
                "$version": {
                  "type": "integer",
                  "example": 1,
                  "description": "The version of the metadata instance. This version starts at 0 and increases every time a user-defined property is modified."
                },
                "$template": {
                  "type": "string",
                  "example": "marketingCollateral",
                  "description": "The name of the template"
                }
              },
              "description": "The base representation of a metadata instance.",
              "x-box-variant": "base",
              "x-box-variants": [
                "base",
                "standard",
                "full"
              ],
              "x-box-sanitized": true,
              "x-box-resource-id": "metadata--base"
            }
          ],
          "title": "Metadata instance",
          "x-box-tag": "file_metadata",
          "description": "An instance of a metadata template, which has been applied to a file or folder.",
          "x-box-variant": "standard",
          "x-box-resource-id": "metadata"
        }
      ]
  get_folders_id_trash:
    description: |-
      Retrieves a folder that has been moved to the trash.
      Please note that only if the folder itself has been moved to the
      trash can it be retrieved with this API call. If instead one of
      its parent folders was moved to the trash, only that folder
      can be inspected using the
      [`GET /folders/:id/trash`](e://get_folders_id_trash) API.
      To list all items that have been moved to the trash, please
      use the [`GET /folders/trash/items`](e://get-folders-trash-items/)
      API.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-folders-id-trash/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Folder (Base)",
                  "x-box-tag": "folders",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "folder"
                      ],
                      "type": "string",
                      "example": "folder",
                      "nullable": false,
                      "description": "`folder`"
                    }
                  },
                  "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "folder--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contracts",
                      "nullable": false,
                      "description": "The name of the folder."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Folder (Mini)",
              "description": "A mini representation of a file version, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "folder--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 629644,
                  "nullable": false,
                  "description": "The folder size in bytes.\nBe careful parsing this integer as its\nvalue can get very large."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The optional folder that this folder is located within.\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time and which the folder will be automatically be deleted."
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder was put in the trash."
                },
                "description": {
                  "allOf": [
                    {
                      "type": "string",
                      "example": "Legal contracts for the new ACME deal",
                      "nullable": false,
                      "maxLength": 256,
                      "description": "The optional description of this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                    }
                  ],
                  "nullable": true
                },
                "item_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1000,
                              "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                            },
                            "order": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "by": {
                                    "type": "string",
                                    "example": "type",
                                    "description": "The field to order by"
                                  },
                                  "direction": {
                                    "enum": [
                                      "ASC",
                                      "DESC"
                                    ],
                                    "type": "string",
                                    "example": "ASC",
                                    "description": "The direction to order by, either ascending or descending"
                                  }
                                },
                                "description": "The order in which a pagination is ordered"
                              },
                              "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "offset": {
                              "type": "integer",
                              "format": "int64",
                              "example": 2000,
                              "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "total_count": {
                              "type": "integer",
                              "format": "int64",
                              "example": 5000,
                              "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            }
                          },
                          "description": "The part of an API response that describes pagination"
                        },
                        {
                          "properties": {
                            "entries": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File (Base)",
                                        "x-box-tag": "files",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "file"
                                            ],
                                            "type": "string",
                                            "example": "file",
                                            "nullable": false,
                                            "description": "`file`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contract.pdf",
                                            "description": "The name of the file"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "format": "digest",
                                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                            "nullable": false,
                                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          },
                                          "file_version": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "title": "File version (Base)",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "example": "12345",
                                                        "nullable": false,
                                                        "description": "The unique identifier that represent a file version."
                                                      },
                                                      "type": {
                                                        "enum": [
                                                          "file_version"
                                                        ],
                                                        "type": "string",
                                                        "example": "file_version",
                                                        "nullable": false,
                                                        "description": "`file_version`"
                                                      }
                                                    },
                                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                    "x-box-variant": "base",
                                                    "x-box-variants": [
                                                      "base",
                                                      "mini",
                                                      "standard"
                                                    ],
                                                    "x-box-sanitized": true,
                                                    "x-box-resource-id": "file_version--base"
                                                  },
                                                  {
                                                    "properties": {
                                                      "sha1": {
                                                        "type": "string",
                                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                        "description": "The SHA1 hash of this version of the file."
                                                      }
                                                    }
                                                  }
                                                ],
                                                "title": "File version (Mini)",
                                                "description": "A mini representation of a file version, used when nested within another resource.",
                                                "x-box-variant": "mini",
                                                "x-box-resource-id": "file_version--mini"
                                              },
                                              {
                                                "description": "The information about the current version of the file."
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File (Mini)",
                                    "description": "A mini representation of a file, used when\nnested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Folder (Base)",
                                        "x-box-tag": "folders",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "folder"
                                            ],
                                            "type": "string",
                                            "example": "folder",
                                            "nullable": false,
                                            "description": "`folder`"
                                          }
                                        },
                                        "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "folder--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contracts",
                                            "nullable": false,
                                            "description": "The name of the folder."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Folder (Mini)",
                                    "description": "A mini representation of a file version, used when nested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "folder--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Web link (Base)",
                                        "x-box-tag": "web_links",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "11446498",
                                            "description": "The unique identifier for this web link"
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "description": "The entity tag of this web link. Used with `If-Match` headers."
                                          },
                                          "type": {
                                            "enum": [
                                              "web_link"
                                            ],
                                            "type": "string",
                                            "example": "web_link",
                                            "description": "`web_link`"
                                          }
                                        },
                                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-resource-id": "web_link--base"
                                      },
                                      {
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com/example/1234",
                                            "description": "The URL this web link points to"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "My Bookmark",
                                            "description": "The name of the web link"
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Web link (Mini)",
                                    "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "web_link--mini"
                                  }
                                ]
                              },
                              "description": "The items in this collection."
                            }
                          }
                        }
                      ],
                      "title": "Items",
                      "x-box-tag": "folders",
                      "description": "A list of files, folders, and web links in\ntheir mini representation.",
                      "x-box-resource-id": "items"
                    },
                    {
                      "description": "A page of the items that are in the folder.\nThis field can only be requested when querying a folder's information, not when querying a folder's items."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was originally\ncreated."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was last updated."
                },
                "folder_upload_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "upload.Contracts.asd7asd@u.box.com",
                      "nullable": false,
                      "description": "The optional upload email address for this folder."
                    },
                    "access": {
                      "enum": [
                        "open",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "nullable": false,
                      "description": "When this parameter has been set, users can email files to the email address that has been automatically created for this folder.\nTo create an email address, set this property either when creating or updating the folder.\nWhen set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.\nWhen set to `open` it will accept emails from any email address."
                    }
                  }
                }
              }
            }
          ],
          "title": "Folder",
          "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "folder"
        }
      ]
  get_folders_id_watermark:
    description: |-
      Retrieve the watermark for a folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-folders-id-watermark/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Watermark",
          "x-box-tag": "file_watermarks",
          "properties": {
            "watermark": {
              "type": "object",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this watermark was created"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this task was modified"
                }
              }
            }
          },
          "description": "A watermark is a semi-transparent overlay on an embedded file\npreview that displays a viewer's email address or user ID\nand the time of access over a file's content",
          "x-box-resource-id": "watermark"
        }
      ]
  get_folders_trash_items:
    description: |-
      Retrieves the files and folders that have been moved
      to the trash.
      Any attribute in the full files or folders objects can be passed
      in with the `fields` parameter to retrieve those specific
      attributes that are not returned by default.
      This endpoint defaults to use offset-based pagination, yet also supports
      marker-based pagination using the `marker` parameter.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-folders-trash-items/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "by": {
                        "type": "string",
                        "example": "type",
                        "description": "The field to order by"
                      },
                      "direction": {
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "type": "string",
                        "example": "ASC",
                        "description": "The direction to order by, either ascending or descending"
                      }
                    },
                    "description": "The order in which a pagination is ordered"
                  },
                  "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "offset": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2000,
                  "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "total_count": {
                  "type": "integer",
                  "format": "int64",
                  "example": 5000,
                  "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                }
              },
              "description": "The part of an API response that describes pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "File (Base)",
                            "x-box-tag": "files",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "12345",
                                "nullable": false,
                                "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                              },
                              "etag": {
                                "type": "string",
                                "example": "1",
                                "nullable": true,
                                "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                              },
                              "type": {
                                "enum": [
                                  "file"
                                ],
                                "type": "string",
                                "example": "file",
                                "nullable": false,
                                "description": "`file`"
                              }
                            },
                            "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-sanitized": true,
                            "x-box-resource-id": "file--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Contract.pdf",
                                "description": "The name of the file"
                              },
                              "sha1": {
                                "type": "string",
                                "format": "digest",
                                "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                "nullable": false,
                                "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                              },
                              "sequence_id": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "3",
                                    "nullable": false,
                                    "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                  },
                                  {
                                    "nullable": false
                                  }
                                ]
                              },
                              "file_version": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File version (Base)",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file version."
                                          },
                                          "type": {
                                            "enum": [
                                              "file_version"
                                            ],
                                            "type": "string",
                                            "example": "file_version",
                                            "nullable": false,
                                            "description": "`file_version`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file_version--base"
                                      },
                                      {
                                        "properties": {
                                          "sha1": {
                                            "type": "string",
                                            "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                            "description": "The SHA1 hash of this version of the file."
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File version (Mini)",
                                    "description": "A mini representation of a file version, used when nested within another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file_version--mini"
                                  },
                                  {
                                    "description": "The information about the current version of the file."
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "title": "File (Mini)",
                        "description": "A mini representation of a file, used when\nnested under another resource.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "file--mini"
                      },
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Folder (Base)",
                            "x-box-tag": "folders",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "12345",
                                "nullable": false,
                                "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                              },
                              "etag": {
                                "type": "string",
                                "example": "1",
                                "nullable": true,
                                "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                              },
                              "type": {
                                "enum": [
                                  "folder"
                                ],
                                "type": "string",
                                "example": "folder",
                                "nullable": false,
                                "description": "`folder`"
                              }
                            },
                            "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-sanitized": true,
                            "x-box-resource-id": "folder--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Contracts",
                                "nullable": false,
                                "description": "The name of the folder."
                              },
                              "sequence_id": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "3",
                                    "nullable": false,
                                    "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                  },
                                  {
                                    "nullable": false
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "title": "Folder (Mini)",
                        "description": "A mini representation of a file version, used when\nnested under another resource.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "folder--mini"
                      },
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Web link (Base)",
                            "x-box-tag": "web_links",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this web link"
                              },
                              "etag": {
                                "type": "string",
                                "example": "1",
                                "description": "The entity tag of this web link. Used with `If-Match` headers."
                              },
                              "type": {
                                "enum": [
                                  "web_link"
                                ],
                                "type": "string",
                                "example": "web_link",
                                "description": "`web_link`"
                              }
                            },
                            "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard"
                            ],
                            "x-box-resource-id": "web_link--base"
                          },
                          {
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": "https://www.example.com/example/1234",
                                "description": "The URL this web link points to"
                              },
                              "name": {
                                "type": "string",
                                "example": "My Bookmark",
                                "description": "The name of the web link"
                              },
                              "sequence_id": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "3",
                                    "nullable": false,
                                    "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                  },
                                  {
                                    "nullable": false
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "title": "Web link (Mini)",
                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "web_link--mini"
                      }
                    ]
                  },
                  "description": "The items in this collection."
                }
              }
            }
          ],
          "title": "Items",
          "x-box-tag": "folders",
          "description": "A list of files, folders, and web links in\ntheir mini representation.",
          "x-box-resource-id": "items"
        }
      ]
  get_group_memberships_id:
    description: |-
      Retrieves a specific group membership. Only admins of this
      group or users with admin-level permissions will be able to
      use this API.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-group-memberships-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Group membership",
          "x-box-tag": "memberships",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this group membership"
            },
            "role": {
              "enum": [
                "member",
                "admin"
              ],
              "type": "string",
              "example": "member",
              "description": "The role of the user in the group."
            },
            "type": {
              "enum": [
                "group_membership"
              ],
              "type": "string",
              "example": "group_membership",
              "description": "`group_membership`"
            },
            "user": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user that the membership applies to"
                }
              ]
            },
            "group": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Group (Base)",
                      "x-box-tag": "groups",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this object"
                        },
                        "type": {
                          "enum": [
                            "group"
                          ],
                          "type": "string",
                          "example": "group",
                          "description": "`group`"
                        }
                      },
                      "description": "A base representation of a group.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "group--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Support",
                          "description": "The name of the group"
                        },
                        "group_type": {
                          "enum": [
                            "managed_group",
                            "all_users_group"
                          ],
                          "type": "string",
                          "example": "managed_group",
                          "description": "The type of the group."
                        }
                      }
                    }
                  ],
                  "title": "Group (Mini)",
                  "description": "Mini representation of a group, including id and name of\ngroup.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "group--mini"
                },
                {
                  "description": "The group that the membership applies to"
                }
              ]
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The time this membership was created."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The time this membership was last modified."
            }
          },
          "description": "Membership is used to signify that a user is part of a\ngroup.",
          "x-box-resource-id": "group_membership"
        }
      ]
  get_groups:
    description: |-
      Retrieves all of the groups for a given enterprise. The user
      must have admin permissions to inspect enterprise's groups.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-groups/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "by": {
                        "type": "string",
                        "example": "type",
                        "description": "The field to order by"
                      },
                      "direction": {
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "type": "string",
                        "example": "ASC",
                        "description": "The direction to order by, either ascending or descending"
                      }
                    },
                    "description": "The order in which a pagination is ordered"
                  },
                  "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "offset": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2000,
                  "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "total_count": {
                  "type": "integer",
                  "format": "int64",
                  "example": 5000,
                  "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                }
              },
              "description": "The part of an API response that describes pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "title": "Group (Base)",
                        "x-box-tag": "groups",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "11446498",
                            "description": "The unique identifier for this object"
                          },
                          "type": {
                            "enum": [
                              "group"
                            ],
                            "type": "string",
                            "example": "group",
                            "description": "`group`"
                          }
                        },
                        "description": "A base representation of a group.",
                        "x-box-variant": "base",
                        "x-box-variants": [
                          "base",
                          "mini",
                          "standard",
                          "full"
                        ],
                        "x-box-sanitized": true,
                        "x-box-resource-id": "group--base"
                      },
                      {
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Support",
                            "description": "The name of the group"
                          },
                          "group_type": {
                            "enum": [
                              "managed_group",
                              "all_users_group"
                            ],
                            "type": "string",
                            "example": "managed_group",
                            "description": "The type of the group."
                          }
                        }
                      }
                    ],
                    "title": "Group (Mini)",
                    "description": "Mini representation of a group, including id and name of\ngroup.",
                    "x-box-variant": "mini",
                    "x-box-resource-id": "group--mini"
                  }
                }
              }
            }
          ],
          "title": "Groups",
          "x-box-tag": "groups",
          "description": "A list of groups.",
          "x-box-resource-id": "groups"
        }
      ]
  get_groups_id:
    description: |-
      Retrieves information about a group. Only members of this
      group or users with admin-level permissions will be able to
      use this API.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-groups-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Group (Base)",
                  "x-box-tag": "groups",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this object"
                    },
                    "type": {
                      "enum": [
                        "group"
                      ],
                      "type": "string",
                      "example": "group",
                      "description": "`group`"
                    }
                  },
                  "description": "A base representation of a group.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "group--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Support",
                      "description": "The name of the group"
                    },
                    "group_type": {
                      "enum": [
                        "managed_group",
                        "all_users_group"
                      ],
                      "type": "string",
                      "example": "managed_group",
                      "description": "The type of the group."
                    }
                  }
                }
              ],
              "title": "Group (Mini)",
              "description": "Mini representation of a group, including id and name of\ngroup.",
              "x-box-variant": "mini",
              "x-box-resource-id": "group--mini"
            },
            {
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the group object was created"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the group object was last modified"
                }
              }
            }
          ],
          "title": "Group",
          "description": "A standard representation of a group, as returned from any\ngroup API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "group"
        }
      ]
  get_groups_id_collaborations:
    description: |-
      Retrieves all the collaborations for a group. The user
      must have admin permissions to inspect enterprise's groups.
      Each collaboration object has details on which files or
      folders the group has access to and with what role.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-groups-id-collaborations/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_groups_id_memberships:
    description: |-
      Retrieves all the members for a group. Only members of this
      group or users with admin-level permissions will be able to
      use this API.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-groups-id-memberships/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "by": {
                        "type": "string",
                        "example": "type",
                        "description": "The field to order by"
                      },
                      "direction": {
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "type": "string",
                        "example": "ASC",
                        "description": "The direction to order by, either ascending or descending"
                      }
                    },
                    "description": "The order in which a pagination is ordered"
                  },
                  "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "offset": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2000,
                  "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "total_count": {
                  "type": "integer",
                  "format": "int64",
                  "example": 5000,
                  "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                }
              },
              "description": "The part of an API response that describes pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Group membership",
                    "x-box-tag": "memberships",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "11446498",
                        "description": "The unique identifier for this group membership"
                      },
                      "role": {
                        "enum": [
                          "member",
                          "admin"
                        ],
                        "type": "string",
                        "example": "member",
                        "description": "The role of the user in the group."
                      },
                      "type": {
                        "enum": [
                          "group_membership"
                        ],
                        "type": "string",
                        "example": "group_membership",
                        "description": "`group_membership`"
                      },
                      "user": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "User (Base)",
                                "x-box-tag": "users",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this user"
                                  },
                                  "type": {
                                    "enum": [
                                      "user"
                                    ],
                                    "type": "string",
                                    "example": "user",
                                    "nullable": false,
                                    "description": "`user`"
                                  }
                                },
                                "description": "A mini representation of a user, used when\nnested within another resource.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-resource-id": "user--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Aaron Levie",
                                    "nullable": false,
                                    "maxLength": 50,
                                    "description": "The display name of this user"
                                  },
                                  "login": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "ceo@example.com",
                                    "nullable": false,
                                    "description": "The primary email address of this user"
                                  }
                                }
                              }
                            ],
                            "title": "User (Mini)",
                            "description": "A mini representation of a user, as can be returned when nested within other resources.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "user--mini"
                          },
                          {
                            "description": "The user that the membership applies to"
                          }
                        ]
                      },
                      "group": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Group (Base)",
                                "x-box-tag": "groups",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this object"
                                  },
                                  "type": {
                                    "enum": [
                                      "group"
                                    ],
                                    "type": "string",
                                    "example": "group",
                                    "description": "`group`"
                                  }
                                },
                                "description": "A base representation of a group.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "group--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Support",
                                    "description": "The name of the group"
                                  },
                                  "group_type": {
                                    "enum": [
                                      "managed_group",
                                      "all_users_group"
                                    ],
                                    "type": "string",
                                    "example": "managed_group",
                                    "description": "The type of the group."
                                  }
                                }
                              }
                            ],
                            "title": "Group (Mini)",
                            "description": "Mini representation of a group, including id and name of group.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "group--mini"
                          },
                          {
                            "description": "The group that the membership applies to"
                          }
                        ]
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "The time this membership was created."
                      },
                      "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "The time this membership was last modified."
                      }
                    },
                    "description": "Membership is used to signify that a user is part of a\ngroup.",
                    "x-box-resource-id": "group_membership"
                  }
                }
              }
            }
          ],
          "title": "Group memberships",
          "x-box-tag": "memberships",
          "description": "A list of group memberships.",
          "x-box-resource-id": "group_memberships"
        }
      ]
  get_invites_id:
    description: |-
      Returns the status of a user invite.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-invites-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Invite",
          "x-box-tag": "invites",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this invite"
            },
            "type": {
              "enum": [
                "invite"
              ],
              "type": "string",
              "example": "invite",
              "description": "`invite`"
            },
            "status": {
              "type": "string",
              "example": "pending",
              "description": "The status of the invite"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the invite was created"
            },
            "invited_by": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "User (Base)",
                  "x-box-tag": "users",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this user"
                    },
                    "type": {
                      "enum": [
                        "user"
                      ],
                      "type": "string",
                      "example": "user",
                      "nullable": false,
                      "description": "`user`"
                    }
                  },
                  "description": "A mini representation of a user, used when\nnested within another resource.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-resource-id": "user--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Aaron Levie",
                      "nullable": false,
                      "maxLength": 50,
                      "description": "The display name of this user"
                    },
                    "login": {
                      "type": "string",
                      "format": "email",
                      "example": "ceo@example.com",
                      "nullable": false,
                      "description": "The primary email address of this user"
                    }
                  }
                }
              ],
              "title": "User (Mini)",
              "description": "A mini representation of a user, as can be returned when nested within other resources.",
              "x-box-variant": "mini",
              "x-box-resource-id": "user--mini"
            },
            "invited_to": {
              "type": "object",
              "title": "Enterprise",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "11446498",
                  "description": "The unique identifier for this enterprise."
                },
                "name": {
                  "type": "string",
                  "example": "Acme Inc.",
                  "description": "The name of the enterprise"
                },
                "type": {
                  "enum": [
                    "enterprise"
                  ],
                  "type": "string",
                  "example": "enterprise",
                  "description": "`enterprise`"
                }
              },
              "description": "A representation of a Box enterprise"
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the invite was modified."
            },
            "actionable_by": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "User (Base)",
                  "x-box-tag": "users",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this user"
                    },
                    "type": {
                      "enum": [
                        "user"
                      ],
                      "type": "string",
                      "example": "user",
                      "nullable": false,
                      "description": "`user`"
                    }
                  },
                  "description": "A mini representation of a user, used when\nnested within another resource.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-resource-id": "user--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Aaron Levie",
                      "nullable": false,
                      "maxLength": 50,
                      "description": "The display name of this user"
                    },
                    "login": {
                      "type": "string",
                      "format": "email",
                      "example": "ceo@example.com",
                      "nullable": false,
                      "description": "The primary email address of this user"
                    }
                  }
                }
              ],
              "title": "User (Mini)",
              "description": "A mini representation of a user, as can be returned when nested within other resources.",
              "x-box-variant": "mini",
              "x-box-resource-id": "user--mini"
            }
          },
          "description": "An invite for a user to an enterprise.",
          "x-box-resource-id": "invite"
        }
      ]
  get_legal_hold_policies:
    description: |-
      Retrieves a list of legal hold policies that belong to
      an enterprise.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-legal-hold-policies/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "next_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 3000,
                  "description": "The marker for the start of the next page of results."
                },
                "prev_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The marker for the start of the previous page of results."
                }
              },
              "description": "The part of an API response that describes marker\nbased pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "title": "Legal hold policy (Mini)",
                        "x-box-tag": "legal_hold_policies",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "11446498",
                            "description": "The unique identifier for this legal hold policy"
                          },
                          "type": {
                            "enum": [
                              "legal_hold_policy"
                            ],
                            "type": "string",
                            "example": "legal_hold_policy",
                            "description": "`legal_hold_policy`"
                          }
                        },
                        "description": "A mini legal hold policy",
                        "x-box-variant": "mini",
                        "x-box-variants": [
                          "mini",
                          "standard"
                        ],
                        "x-box-resource-id": "legal_hold_policy--mini"
                      },
                      {
                        "properties": {
                          "status": {
                            "enum": [
                              "active",
                              "applying",
                              "releasing",
                              "released"
                            ],
                            "type": "string",
                            "example": "active",
                            "description": "* 'active' - the policy is not in a transition state * 'applying' - that the policy is in the process of\n  being applied\n* 'releasing' - that the process is in the process\n  of being released\n* 'released' - the policy is no longer active"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "When the legal hold policy object was created"
                          },
                          "created_by": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "User (Base)",
                                    "x-box-tag": "users",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "11446498",
                                        "description": "The unique identifier for this user"
                                      },
                                      "type": {
                                        "enum": [
                                          "user"
                                        ],
                                        "type": "string",
                                        "example": "user",
                                        "nullable": false,
                                        "description": "`user`"
                                      }
                                    },
                                    "description": "A mini representation of a user, used when\nnested within another resource.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-resource-id": "user--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Aaron Levie",
                                        "nullable": false,
                                        "maxLength": 50,
                                        "description": "The display name of this user"
                                      },
                                      "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@example.com",
                                        "nullable": false,
                                        "description": "The primary email address of this user"
                                      }
                                    }
                                  }
                                ],
                                "title": "User (Mini)",
                                "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "user--mini"
                              },
                              {
                                "description": "The user who created the legal hold policy object"
                              }
                            ]
                          },
                          "deleted_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "When the policy release request was sent. (Because it can take time for a policy to fully delete, this isn't quite the same time that the policy is fully deleted).\nIf `null`, the policy was not deleted."
                          },
                          "description": {
                            "type": "string",
                            "example": "Postman created policy",
                            "maxLength": 500,
                            "description": "Description of the legal hold policy. Optional\nproperty with a 500 character limit."
                          },
                          "modified_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "When the legal hold policy object was modified. Does not update when assignments are added or removed."
                          },
                          "policy_name": {
                            "type": "string",
                            "example": "Policy 4",
                            "maxLength": 254,
                            "description": "Name of the legal hold policy."
                          },
                          "release_notes": {
                            "type": "string",
                            "example": "Example",
                            "maxLength": 500,
                            "description": "Optional notes about why the policy was created."
                          },
                          "filter_ended_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "User-specified, optional date filter applies to\nCustodian assignments only"
                          },
                          "assignment_counts": {
                            "type": "object",
                            "properties": {
                              "file": {
                                "type": "integer",
                                "format": "int64",
                                "example": 3,
                                "description": "The number of files this policy is applied to"
                              },
                              "user": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1,
                                "description": "The number of users this policy is applied to"
                              },
                              "folder": {
                                "type": "integer",
                                "format": "int64",
                                "example": 2,
                                "description": "The number of folders this policy is applied to"
                              },
                              "file_version": {
                                "type": "integer",
                                "format": "int64",
                                "example": 4,
                                "description": "The number of file versions this policy is applied to"
                              }
                            },
                            "description": "Counts of assignments within this a legal hold policy by item type"
                          },
                          "filter_started_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "User-specified, optional date filter applies to\nCustodian assignments only"
                          }
                        }
                      }
                    ],
                    "title": "Legal hold policy",
                    "description": "Legal Hold Policy information describes the basic\ncharacteristics of the Policy, such as name, description,\nand filter dates.",
                    "x-box-variant": "standard",
                    "x-box-resource-id": "legal_hold_policy"
                  }
                }
              }
            }
          ],
          "title": "Legal hold policies",
          "x-box-tag": "legal_hold_policies",
          "description": "A list of legal hold policies.",
          "x-box-resource-id": "legal_hold_policies"
        }
      ]
  get_legal_hold_policies_id:
    description: |-
      Retrieve a legal hold policy.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-legal-hold-policies-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Legal hold policy (Mini)",
              "x-box-tag": "legal_hold_policies",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "11446498",
                  "description": "The unique identifier for this legal hold policy"
                },
                "type": {
                  "enum": [
                    "legal_hold_policy"
                  ],
                  "type": "string",
                  "example": "legal_hold_policy",
                  "description": "`legal_hold_policy`"
                }
              },
              "description": "A mini legal hold policy",
              "x-box-variant": "mini",
              "x-box-variants": [
                "mini",
                "standard"
              ],
              "x-box-resource-id": "legal_hold_policy--mini"
            },
            {
              "properties": {
                "status": {
                  "enum": [
                    "active",
                    "applying",
                    "releasing",
                    "released"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "* 'active' - the policy is not in a transition state\n* 'applying' - that the policy is in the process of\n  being applied\n* 'releasing' - that the process is in the process\n  of being released\n* 'released' - the policy is no longer active"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the legal hold policy object was created"
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created the legal hold policy object"
                    }
                  ]
                },
                "deleted_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the policy release request was sent. (Because\nit can take time for a policy to fully delete, this\nisn't quite the same time that the policy is fully deleted).\nIf `null`, the policy was not deleted."
                },
                "description": {
                  "type": "string",
                  "example": "Postman created policy",
                  "maxLength": 500,
                  "description": "Description of the legal hold policy. Optional\nproperty with a 500 character limit."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the legal hold policy object was modified.\nDoes not update when assignments are added or removed."
                },
                "policy_name": {
                  "type": "string",
                  "example": "Policy 4",
                  "maxLength": 254,
                  "description": "Name of the legal hold policy."
                },
                "release_notes": {
                  "type": "string",
                  "example": "Example",
                  "maxLength": 500,
                  "description": "Optional notes about why the policy was created."
                },
                "filter_ended_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "User-specified, optional date filter applies to\nCustodian assignments only"
                },
                "assignment_counts": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "integer",
                      "format": "int64",
                      "example": 3,
                      "description": "The number of files this policy is applied to"
                    },
                    "user": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1,
                      "description": "The number of users this policy is applied to"
                    },
                    "folder": {
                      "type": "integer",
                      "format": "int64",
                      "example": 2,
                      "description": "The number of folders this policy is applied to"
                    },
                    "file_version": {
                      "type": "integer",
                      "format": "int64",
                      "example": 4,
                      "description": "The number of file versions this policy is applied to"
                    }
                  },
                  "description": "Counts of assignments within this a legal hold policy by item type"
                },
                "filter_started_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "User-specified, optional date filter applies to\nCustodian assignments only"
                }
              }
            }
          ],
          "title": "Legal hold policy",
          "description": "Legal Hold Policy information describes the basic\ncharacteristics of the Policy, such as name, description,\nand filter dates.",
          "x-box-variant": "standard",
          "x-box-resource-id": "legal_hold_policy"
        }
      ]
  get_legal_hold_policy_assignments:
    description: |-
      Retrieves a list of items a legal hold policy has been assigned to.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-legal-hold-policy-assignments/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "next_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 3000,
                  "description": "The marker for the start of the next page of results."
                },
                "prev_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The marker for the start of the previous page of results."
                }
              },
              "description": "The part of an API response that describes marker\nbased pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Legal hold policy assignment (Base)",
                    "x-box-tag": "legal_hold_policy_assignments",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "11446498",
                        "description": "The unique identifier for this legal hold assignment"
                      },
                      "type": {
                        "enum": [
                          "legal_hold_policy_assignment"
                        ],
                        "type": "string",
                        "example": "legal_hold_policy_assignment",
                        "description": "`legal_hold_policy_assignment`"
                      }
                    },
                    "description": "Legal Hold Assignments are used to assign Legal Hold\nPolicies to Users, Folders, Files, or File Versions.\nCreating a Legal Hold Assignment puts a hold\non the File-Versions that belong to the Assignment's\n'apply-to' entity.",
                    "x-box-variant": "base",
                    "x-box-variants": [
                      "base",
                      "standard"
                    ],
                    "x-box-sanitized": true,
                    "x-box-resource-id": "legal_hold_policy_assignment--base"
                  }
                }
              }
            }
          ],
          "title": "Legal hold policy assignments",
          "x-box-tag": "legal_hold_policy_assignments",
          "description": "A list of legal hold policies assignments.",
          "x-box-resource-id": "legal_hold_policy_assignments"
        }
      ]
  get_legal_hold_policy_assignments_id:
    description: |-
      Retrieve a legal hold policy assignment.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-legal-hold-policy-assignments-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_legal_hold_policy_assignments_id_files_on_hold:
    description: |-
      Get a list of current file versions for a legal hold assignment.
      In some cases you may want to get previous file versions instead. In these cases, use the `GET  /legal_hold_policy_assignments/:id/file_versions_on_hold` API instead to return any previous versions of a file for this legal hold policy assignment.
      Due to ongoing re-architecture efforts this API might not return all file versions held for this policy ID. Instead, this API will only return the latest file version held in the newly developed architecture. The `GET /file_version_legal_holds` API can be used to fetch current and past versions of files held within the legacy architecture.
      The `GET /legal_hold_policy_assignments?policy_id={id}` API can be used to find a list of policy assignments for a given policy ID.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-legal-hold-policy-assignments-id-files-on-hold/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_legal_hold_policy_assignments_id_file_versions_on_hold:
    description: |-
      Get a list of previous file versions for a legal hold assignment.
      In some cases you may only need the latest file versions instead. In these cases, use the `GET  /legal_hold_policy_assignments/:id/files_on_hold` API instead to return any current (latest) versions of a file for this legal hold policy assignment.
      Due to ongoing re-architecture efforts this API might not return all files held for this policy ID. Instead, this API will only return past file versions held in the newly developed architecture. The `GET /file_version_legal_holds` API can be used to fetch current and past versions of files held within the legacy architecture.
      The `GET /legal_hold_policy_assignments?policy_id={id}` API can be used to find a list of policy assignments for a given policy ID.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-legal-hold-policy-assignments-id-file-versions-on-hold/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_metadata_cascade_policies:
    description: |-
      Retrieves a list of all the metadata cascade policies
      that are applied to a given folder. This can not be used on the root
      folder with ID `0`.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-metadata-cascade-policies/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "next_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 3000,
                  "description": "The marker for the start of the next page of results."
                },
                "prev_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The marker for the start of the previous page of results."
                }
              },
              "description": "The part of an API response that describes marker\nbased pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Metadata cascade policy",
                    "x-box-tag": "metadata_cascade_policies",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
                        "description": "The ID of the metadata cascade policy object"
                      },
                      "type": {
                        "enum": [
                          "metadata_cascade_policy"
                        ],
                        "type": "string",
                        "example": "metadata_cascade_policy",
                        "description": "`metadata_cascade_policy`"
                      },
                      "scope": {
                        "enum": [
                          "global",
                          "enterprise_*"
                        ],
                        "type": "string",
                        "example": "global",
                        "description": "The scope of the of the template that is cascaded down to the folder's children."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "1234567",
                            "description": "The ID of the folder the policy is applied to."
                          },
                          "type": {
                            "enum": [
                              "folder"
                            ],
                            "type": "string",
                            "example": "folder",
                            "description": "`folder`"
                          }
                        },
                        "description": "Represent the folder the policy is applied to."
                      },
                      "templateKey": {
                        "type": "string",
                        "example": "productInfo",
                        "description": "The key of the template that is cascaded down to the folder's children.\nIn many cases the template key is automatically derived of its display name, for example `Contract Template` would become `contractTemplate`. In some cases the creator of the template will have provided its own template key.\nPlease [list the templates for an enterprise][list], or get all instances on a [file][file] or [folder][folder] to inspect a template's key.\n[list]: e://get-metadata-templates-enterprise [file]: e://get-files-id-metadata [folder]: e://get-folders-id-metadata"
                      },
                      "owner_enterprise": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "690678",
                            "description": "The ID of the enterprise that owns the policy."
                          },
                          "type": {
                            "enum": [
                              "enterprise"
                            ],
                            "type": "string",
                            "example": "enterprise",
                            "description": "`enterprise`"
                          }
                        },
                        "description": "The enterprise that owns this policy."
                      }
                    },
                    "description": "A metadata cascade policy automatically applies a metadata template instance to all the files and folders within the targeted folder.",
                    "x-box-resource-id": "metadata_cascade_policy"
                  }
                }
              }
            }
          ],
          "title": "Metadata cascade policies",
          "x-box-tag": "metadata_cascade_policies",
          "description": "A list of metadata cascade policies.",
          "x-box-resource-id": "metadata_cascade_policies"
        }
      ]
  get_metadata_cascade_policies_id:
    description: |-
      Retrieve a specific metadata cascade policy assigned to a folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-metadata-cascade-policies-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Metadata cascade policy",
          "x-box-tag": "metadata_cascade_policies",
          "properties": {
            "id": {
              "type": "string",
              "example": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
              "description": "The ID of the metadata cascade policy object"
            },
            "type": {
              "enum": [
                "metadata_cascade_policy"
              ],
              "type": "string",
              "example": "metadata_cascade_policy",
              "description": "`metadata_cascade_policy`"
            },
            "scope": {
              "enum": [
                "global",
                "enterprise_*"
              ],
              "type": "string",
              "example": "global",
              "description": "The scope of the of the template that is cascaded down to the folder's children."
            },
            "parent": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1234567",
                  "description": "The ID of the folder the policy is applied to."
                },
                "type": {
                  "enum": [
                    "folder"
                  ],
                  "type": "string",
                  "example": "folder",
                  "description": "`folder`"
                }
              },
              "description": "Represent the folder the policy is applied to."
            },
            "templateKey": {
              "type": "string",
              "example": "productInfo",
              "description": "The key of the template that is cascaded down to the folder's\nchildren.\nIn many cases the template key is automatically derived\nof its display name, for example `Contract Template` would\nbecome `contractTemplate`. In some cases the creator of the\ntemplate will have provided its own template key.\nPlease [list the templates for an enterprise][list], or\nget all instances on a [file][file] or [folder][folder]\nto inspect a template's key.\n[list]: e://get-metadata-templates-enterprise\n[file]: e://get-files-id-metadata\n[folder]: e://get-folders-id-metadata"
            },
            "owner_enterprise": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "690678",
                  "description": "The ID of the enterprise that owns the policy."
                },
                "type": {
                  "enum": [
                    "enterprise"
                  ],
                  "type": "string",
                  "example": "enterprise",
                  "description": "`enterprise`"
                }
              },
              "description": "The enterprise that owns this policy."
            }
          },
          "description": "A metadata cascade policy automatically applies a metadata template instance to all the files and folders within the targeted folder.",
          "x-box-resource-id": "metadata_cascade_policy"
        }
      ]
  get_metadata_query_indices:
    description: |-
      Retrieves the metadata query indices for a given scope and template key.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-metadata-query-indices/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Metadata query indices",
          "x-box-tag": "search",
          "properties": {
            "limit": {
              "type": "integer",
              "format": "int64",
              "default": 100,
              "example": 100,
              "description": "The limit that was used for this request."
            },
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "title": "Metadata query index",
                "x-box-tag": "search",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "-9876",
                    "description": "The ID of the metadata query index."
                  },
                  "type": {
                    "type": "string",
                    "example": "metadata_query_index",
                    "nullable": false,
                    "description": "Value is always `metadata_query_index`"
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "allOf": [
                        {
                          "properties": {
                            "key": {
                              "type": "string",
                              "example": "vendor name",
                              "description": "The metadata template field key."
                            },
                            "sort_direction": {
                              "enum": [
                                "asc",
                                "desc"
                              ],
                              "type": "string",
                              "example": "asc",
                              "description": "The sort direction of the field."
                            }
                          }
                        }
                      ],
                      "description": "The field which makes up the index."
                    },
                    "description": "A list of template fields which make up the index."
                  },
                  "status": {
                    "enum": [
                      "building",
                      "active",
                      "disabled"
                    ],
                    "type": "string",
                    "example": "active",
                    "nullable": false,
                    "description": "The status of the metadata query index"
                  }
                },
                "description": "A metadata query index",
                "x-box-resource-id": "metadata_query_index"
              },
              "description": "A collection of metadata query indices."
            },
            "next_marker": {
              "type": "string",
              "example": "0!-M7487OpVfBTNBV-XsQjU50gQFlbFFu5nArMWD7Ck61GH_Qo40M1S2xN5zWZPBzEjaQS1SOjJiQoo5BsXEl1bCVLRZ2pTqo4SKp9tyqzWQK2L51KR_nC1EgF5I_TJSFw7uO2Bx4HweGETOjh5_2oPSWw5iMkM-OvGApeR0lGFO48FDKoyzJyLgz5aogxoKd8VE09CesOOnTnmZvrW0puylDc-hFjY5YLmWFBKox3SOWiSDwKFkmZGNHyjEzza1nSwbZg6CYsAdGsDwGJhuCeTNsFzP5Mo5qx9wMloS0lSPuf2CcBInbIJzl2CKlXF3FvqhANttpm2nzdBTQRSoJyJnjVBpf4Q_HjV2eb4KIZBBlLy067UCVdv2AAWQFd5E2i6s1YiGRTtgMEZntOSUYD4IYLMWWm5Ra7ke_SP32SL3GSjbBQYIyCVQ..",
              "description": "The marker for the start of the next page of results."
            }
          },
          "description": "A collection of metadata query indices.",
          "x-box-resource-id": "metadata_query_indices"
        }
      ]
  get_metadata_templates:
    description: |-
      Finds a metadata template by searching for the ID of an instance of the
      template.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-metadata-templates/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "next_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 3000,
                  "description": "The marker for the start of the next page of results."
                },
                "prev_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The marker for the start of the previous page of results."
                }
              },
              "description": "The part of an API response that describes marker\nbased pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Metadata template",
                    "x-box-tag": "metadata_templates",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "58063d82-4128-7b43-bba9-92f706befcdf",
                        "description": "The ID of the metadata template."
                      },
                      "type": {
                        "enum": [
                          "metadata_template"
                        ],
                        "type": "string",
                        "example": "metadata_template",
                        "nullable": false,
                        "description": "`metadata_template`"
                      },
                      "scope": {
                        "type": "string",
                        "example": "enterprise_123456",
                        "description": "The scope of the metadata template can either be `global` or `enterprise_*`. The `global` scope is used for templates that are available to any Box enterprise. The `enterprise_*` scope represents templates that have been created within a specific enterprise, where `*` will be the ID of that enterprise."
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "Metadata Field (Write)",
                              "required": [
                                "type",
                                "key",
                                "displayName"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "example": "category",
                                  "maxLength": 256,
                                  "description": "A unique identifier for the field. The identifier must be unique within the template to which it belongs."
                                },
                                "type": {
                                  "enum": [
                                    "string",
                                    "float",
                                    "date",
                                    "enum",
                                    "multiSelect"
                                  ],
                                  "type": "string",
                                  "example": "string",
                                  "description": "The type of field. The basic fields are a `string` field for text, a `float` field for numbers, and a `date` fields to present the user with a date-time picker.\nAdditionally, metadata templates support an `enum` field for a basic list of items, and ` multiSelect` field for a similar list of items where the user can select more than one value."
                                },
                                "hidden": {
                                  "type": "boolean",
                                  "example": true,
                                  "description": "Whether this field is hidden in the UI for the user and can only be set through the API instead."
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Metadata Option (Write)",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "example": "Category 1",
                                        "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                                      }
                                    },
                                    "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                                  },
                                  "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                                },
                                "description": {
                                  "type": "string",
                                  "example": "The category",
                                  "maxLength": 4096,
                                  "description": "A description of the field. This is not shown to the user."
                                },
                                "displayName": {
                                  "type": "string",
                                  "example": "Category",
                                  "maxLength": 4096,
                                  "description": "The display name of the field as it is shown to the user in the web and mobile apps."
                                }
                              },
                              "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
                            },
                            {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "822227e0-47a5-921b-88a8-494760b2e6d2",
                                  "description": "The unique ID of the metadata template field."
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Metadata Option (Write)",
                                        "required": [
                                          "key"
                                        ],
                                        "properties": {
                                          "key": {
                                            "type": "string",
                                            "example": "Category 1",
                                            "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                                          }
                                        },
                                        "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                                      },
                                      {
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "45dc2849-a4a7-40a9-a751-4a699a589190",
                                            "description": "The internal unique identifier of the the option."
                                          }
                                        }
                                      }
                                    ],
                                    "description": "An option for a Metadata Template Field.\nOptions are only present for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                                  },
                                  "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                                }
                              }
                            }
                          ],
                          "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
                        },
                        "description": "An ordered list of template fields which are part of the template. Each field can be a regular text field, date field, number field, as well as a single or multi-select list."
                      },
                      "hidden": {
                        "type": "boolean",
                        "example": true,
                        "description": "Defines if this template is visible in the Box web app UI, or if it is purely intended for usage through the API."
                      },
                      "displayName": {
                        "type": "string",
                        "example": "Product Info",
                        "maxLength": 4096,
                        "description": "The display name of the template. This can be seen in the Box web app and mobile apps."
                      },
                      "templateKey": {
                        "type": "string",
                        "example": "productInfo",
                        "pattern": "^[a-zA-Z_][-a-zA-Z0-9_]*$",
                        "maxLength": 64,
                        "description": "A unique identifier for the template. This identifier is unique across the `scope` of the enterprise to which the metadata template is being applied, yet is not necessarily unique across different enterprises."
                      },
                      "copyInstanceOnItemCopy": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether or not to include the metadata when a file or folder is copied."
                      }
                    },
                    "description": "A template for metadata that can be applied to files and folders",
                    "x-box-resource-id": "metadata_template"
                  }
                }
              }
            }
          ],
          "title": "Metadata templates",
          "x-box-tag": "metadata_templates",
          "description": "A list of metadata templates",
          "x-box-resource-id": "metadata_templates"
        }
      ]
  get_metadata_templates_enterprise:
    description: |-
      Used to retrieve all metadata templates created to be used specifically within the user's enterprise
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-metadata-templates-enterprise/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "next_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 3000,
                  "description": "The marker for the start of the next page of results."
                },
                "prev_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The marker for the start of the previous page of results."
                }
              },
              "description": "The part of an API response that describes marker\nbased pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Metadata template",
                    "x-box-tag": "metadata_templates",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "58063d82-4128-7b43-bba9-92f706befcdf",
                        "description": "The ID of the metadata template."
                      },
                      "type": {
                        "enum": [
                          "metadata_template"
                        ],
                        "type": "string",
                        "example": "metadata_template",
                        "nullable": false,
                        "description": "`metadata_template`"
                      },
                      "scope": {
                        "type": "string",
                        "example": "enterprise_123456",
                        "description": "The scope of the metadata template can either be `global` or `enterprise_*`. The `global` scope is used for templates that are available to any Box enterprise. The `enterprise_*` scope represents templates that have been created within a specific enterprise, where `*` will be the ID of that enterprise."
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "Metadata Field (Write)",
                              "required": [
                                "type",
                                "key",
                                "displayName"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "example": "category",
                                  "maxLength": 256,
                                  "description": "A unique identifier for the field. The identifier must be unique within the template to which it belongs."
                                },
                                "type": {
                                  "enum": [
                                    "string",
                                    "float",
                                    "date",
                                    "enum",
                                    "multiSelect"
                                  ],
                                  "type": "string",
                                  "example": "string",
                                  "description": "The type of field. The basic fields are a `string` field for text, a `float` field for numbers, and a `date` fields to present the user with a date-time picker.\nAdditionally, metadata templates support an `enum` field for a basic list of items, and ` multiSelect` field for a similar list of items where the user can select more than one value."
                                },
                                "hidden": {
                                  "type": "boolean",
                                  "example": true,
                                  "description": "Whether this field is hidden in the UI for the user and can only be set through the API instead."
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Metadata Option (Write)",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "example": "Category 1",
                                        "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                                      }
                                    },
                                    "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                                  },
                                  "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                                },
                                "description": {
                                  "type": "string",
                                  "example": "The category",
                                  "maxLength": 4096,
                                  "description": "A description of the field. This is not shown to the user."
                                },
                                "displayName": {
                                  "type": "string",
                                  "example": "Category",
                                  "maxLength": 4096,
                                  "description": "The display name of the field as it is shown to the user in the web and mobile apps."
                                }
                              },
                              "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
                            },
                            {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "822227e0-47a5-921b-88a8-494760b2e6d2",
                                  "description": "The unique ID of the metadata template field."
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Metadata Option (Write)",
                                        "required": [
                                          "key"
                                        ],
                                        "properties": {
                                          "key": {
                                            "type": "string",
                                            "example": "Category 1",
                                            "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                                          }
                                        },
                                        "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                                      },
                                      {
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "45dc2849-a4a7-40a9-a751-4a699a589190",
                                            "description": "The internal unique identifier of the the option."
                                          }
                                        }
                                      }
                                    ],
                                    "description": "An option for a Metadata Template Field.\nOptions are only present for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                                  },
                                  "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                                }
                              }
                            }
                          ],
                          "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
                        },
                        "description": "An ordered list of template fields which are part of the template. Each field can be a regular text field, date field, number field, as well as a single or multi-select list."
                      },
                      "hidden": {
                        "type": "boolean",
                        "example": true,
                        "description": "Defines if this template is visible in the Box web app UI, or if it is purely intended for usage through the API."
                      },
                      "displayName": {
                        "type": "string",
                        "example": "Product Info",
                        "maxLength": 4096,
                        "description": "The display name of the template. This can be seen in the Box web app and mobile apps."
                      },
                      "templateKey": {
                        "type": "string",
                        "example": "productInfo",
                        "pattern": "^[a-zA-Z_][-a-zA-Z0-9_]*$",
                        "maxLength": 64,
                        "description": "A unique identifier for the template. This identifier is unique across the `scope` of the enterprise to which the metadata template is being applied, yet is not necessarily unique across different enterprises."
                      },
                      "copyInstanceOnItemCopy": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether or not to include the metadata when a file or folder is copied."
                      }
                    },
                    "description": "A template for metadata that can be applied to files and folders",
                    "x-box-resource-id": "metadata_template"
                  }
                }
              }
            }
          ],
          "title": "Metadata templates",
          "x-box-tag": "metadata_templates",
          "description": "A list of metadata templates",
          "x-box-resource-id": "metadata_templates"
        }
      ]
  get_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema:
    description: |-
      Retrieves the classification metadata template and lists all the classifications available to this enterprise.
      This API can also be called by including the enterprise ID in the URL explicitly, for example `/metadata_templates/enterprise_12345/securityClassification-6VMVochwUWo/schema`.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-metadata-templates-enterprise-securityClassification-6VMVochwUWo-schema/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Classification Template",
          "x-box-tag": "classifications",
          "properties": {
            "id": {
              "type": "string",
              "example": "58063d82-4128-7b43-bba9-92f706befcdf",
              "description": "The ID of the classification template."
            },
            "type": {
              "enum": [
                "metadata_template"
              ],
              "type": "string",
              "example": "metadata_template",
              "nullable": false,
              "description": "`metadata_template`"
            },
            "scope": {
              "type": "string",
              "example": "enterprise_123456",
              "description": "The scope of the classification template. This is in the format\n`enterprise_{id}` where the `id` is the enterprise ID."
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "822227e0-47a5-921b-88a8-494760b2e6d2",
                    "description": "The unique ID of the field."
                  },
                  "key": {
                    "enum": [
                      "Box__Security__Classification__Key"
                    ],
                    "type": "string",
                    "example": "Box__Security__Classification__Key",
                    "description": "`Box__Security__Classification__Key`"
                  },
                  "type": {
                    "enum": [
                      "enum"
                    ],
                    "type": "string",
                    "example": "enum",
                    "description": "`enum`"
                  },
                  "hidden": {
                    "type": "boolean",
                    "example": false,
                    "description": "Classifications are always visible to web and mobile users."
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "46aea176-3483-4431-856c-6b5b13d1cc50",
                          "description": "The unique ID of this classification."
                        },
                        "key": {
                          "type": "string",
                          "example": "Sensitive",
                          "description": "The display name and key for this classification."
                        },
                        "staticConfig": {
                          "type": "object",
                          "properties": {
                            "classification": {
                              "type": "object",
                              "properties": {
                                "colorID": {
                                  "type": "number",
                                  "example": 4,
                                  "description": "An internal Box identifier used to assign a color to a classification label.\nMapping between a `colorID` and a color may change without notice. Currently, the color mappings are as follows.\n* `0`: Yellow * `1`: Orange * `2`: Watermelon red * `3`: Purple rain * `4`: Light blue * `5`: Dark blue * `6`: Light green * `7`: Gray"
                                },
                                "classificationDefinition": {
                                  "type": "string",
                                  "example": "Sensitive information",
                                  "description": "A longer description of the classification."
                                }
                              },
                              "description": "Additional information about the classification.\nThis is not an exclusive list of properties, and more object fields might be returned. These fields are used for internal Box Shield and Box Governance purposes and no additional value must be derived from these fields."
                            }
                          },
                          "description": "Additional information about the classification."
                        }
                      },
                      "description": "A single classification available in this enterprise."
                    },
                    "minItems": 1,
                    "description": "A list of classifications available in this enterprise."
                  },
                  "displayName": {
                    "enum": [
                      "Classification"
                    ],
                    "type": "string",
                    "example": "Classification",
                    "description": "`Classification`"
                  }
                },
                "description": "The metadata template field that represents the available\nclassifications."
              },
              "maxItems": 1,
              "minItems": 1,
              "description": "A list of fields for this classification template. This includes only one field, the `Box__Security__Classification__Key`, which defines the different classifications available in this enterprise."
            },
            "hidden": {
              "type": "boolean",
              "example": false,
              "description": "This template is always available in web and mobile interfaces."
            },
            "displayName": {
              "enum": [
                "Classification"
              ],
              "type": "string",
              "example": "Classification",
              "description": "The name of this template as shown in web and mobile interfaces."
            },
            "templateKey": {
              "enum": [
                "securityClassification-6VMVochwUWo"
              ],
              "type": "string",
              "example": "securityClassification-6VMVochwUWo",
              "description": "`securityClassification-6VMVochwUWo`"
            },
            "copyInstanceOnItemCopy": {
              "type": "boolean",
              "example": true,
              "description": "Classifications are always copied along when the file or folder is copied."
            }
          },
          "description": "A metadata template that holds the security classifications\ndefined by an enterprise.",
          "x-box-resource-id": "classification_template"
        }
      ]
  get_metadata_templates_global:
    description: |-
      Used to retrieve all generic, global metadata templates available to all
      enterprises using Box.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-metadata-templates-global/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "next_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 3000,
                  "description": "The marker for the start of the next page of results."
                },
                "prev_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The marker for the start of the previous page of results."
                }
              },
              "description": "The part of an API response that describes marker\nbased pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Metadata template",
                    "x-box-tag": "metadata_templates",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "58063d82-4128-7b43-bba9-92f706befcdf",
                        "description": "The ID of the metadata template."
                      },
                      "type": {
                        "enum": [
                          "metadata_template"
                        ],
                        "type": "string",
                        "example": "metadata_template",
                        "nullable": false,
                        "description": "`metadata_template`"
                      },
                      "scope": {
                        "type": "string",
                        "example": "enterprise_123456",
                        "description": "The scope of the metadata template can either be `global` or `enterprise_*`. The `global` scope is used for templates that are available to any Box enterprise. The `enterprise_*` scope represents templates that have been created within a specific enterprise, where `*` will be the ID of that enterprise."
                      },
                      "fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "Metadata Field (Write)",
                              "required": [
                                "type",
                                "key",
                                "displayName"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "example": "category",
                                  "maxLength": 256,
                                  "description": "A unique identifier for the field. The identifier must be unique within the template to which it belongs."
                                },
                                "type": {
                                  "enum": [
                                    "string",
                                    "float",
                                    "date",
                                    "enum",
                                    "multiSelect"
                                  ],
                                  "type": "string",
                                  "example": "string",
                                  "description": "The type of field. The basic fields are a `string` field for text, a `float` field for numbers, and a `date` fields to present the user with a date-time picker.\nAdditionally, metadata templates support an `enum` field for a basic list of items, and ` multiSelect` field for a similar list of items where the user can select more than one value."
                                },
                                "hidden": {
                                  "type": "boolean",
                                  "example": true,
                                  "description": "Whether this field is hidden in the UI for the user and can only be set through the API instead."
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "Metadata Option (Write)",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "example": "Category 1",
                                        "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                                      }
                                    },
                                    "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                                  },
                                  "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                                },
                                "description": {
                                  "type": "string",
                                  "example": "The category",
                                  "maxLength": 4096,
                                  "description": "A description of the field. This is not shown to the user."
                                },
                                "displayName": {
                                  "type": "string",
                                  "example": "Category",
                                  "maxLength": 4096,
                                  "description": "The display name of the field as it is shown to the user in the web and mobile apps."
                                }
                              },
                              "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
                            },
                            {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "822227e0-47a5-921b-88a8-494760b2e6d2",
                                  "description": "The unique ID of the metadata template field."
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Metadata Option (Write)",
                                        "required": [
                                          "key"
                                        ],
                                        "properties": {
                                          "key": {
                                            "type": "string",
                                            "example": "Category 1",
                                            "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                                          }
                                        },
                                        "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                                      },
                                      {
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "45dc2849-a4a7-40a9-a751-4a699a589190",
                                            "description": "The internal unique identifier of the the option."
                                          }
                                        }
                                      }
                                    ],
                                    "description": "An option for a Metadata Template Field.\nOptions are only present for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                                  },
                                  "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                                }
                              }
                            }
                          ],
                          "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
                        },
                        "description": "An ordered list of template fields which are part of the template. Each field can be a regular text field, date field, number field, as well as a single or multi-select list."
                      },
                      "hidden": {
                        "type": "boolean",
                        "example": true,
                        "description": "Defines if this template is visible in the Box web app UI, or if it is purely intended for usage through the API."
                      },
                      "displayName": {
                        "type": "string",
                        "example": "Product Info",
                        "maxLength": 4096,
                        "description": "The display name of the template. This can be seen in the Box web app and mobile apps."
                      },
                      "templateKey": {
                        "type": "string",
                        "example": "productInfo",
                        "pattern": "^[a-zA-Z_][-a-zA-Z0-9_]*$",
                        "maxLength": 64,
                        "description": "A unique identifier for the template. This identifier is unique across the `scope` of the enterprise to which the metadata template is being applied, yet is not necessarily unique across different enterprises."
                      },
                      "copyInstanceOnItemCopy": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether or not to include the metadata when a file or folder is copied."
                      }
                    },
                    "description": "A template for metadata that can be applied to files and folders",
                    "x-box-resource-id": "metadata_template"
                  }
                }
              }
            }
          ],
          "title": "Metadata templates",
          "x-box-tag": "metadata_templates",
          "description": "A list of metadata templates",
          "x-box-resource-id": "metadata_templates"
        }
      ]
  get_metadata_templates_id:
    description: |-
      Retrieves a metadata template by its ID.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-metadata-templates-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Metadata template",
          "x-box-tag": "metadata_templates",
          "properties": {
            "id": {
              "type": "string",
              "example": "58063d82-4128-7b43-bba9-92f706befcdf",
              "description": "The ID of the metadata template."
            },
            "type": {
              "enum": [
                "metadata_template"
              ],
              "type": "string",
              "example": "metadata_template",
              "nullable": false,
              "description": "`metadata_template`"
            },
            "scope": {
              "type": "string",
              "example": "enterprise_123456",
              "description": "The scope of the metadata template can either be `global` or `enterprise_*`. The `global` scope is used for templates that are available to any Box enterprise. The `enterprise_*` scope represents templates that have been created within a specific enterprise, where `*` will be the ID of that enterprise."
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "title": "Metadata Field (Write)",
                    "required": [
                      "type",
                      "key",
                      "displayName"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "example": "category",
                        "maxLength": 256,
                        "description": "A unique identifier for the field. The identifier must\nbe unique within the template to which it belongs."
                      },
                      "type": {
                        "enum": [
                          "string",
                          "float",
                          "date",
                          "enum",
                          "multiSelect"
                        ],
                        "type": "string",
                        "example": "string",
                        "description": "The type of field. The basic fields are a `string` field for text, a `float` field for numbers, and a `date` fields to present the user with a date-time picker.\nAdditionally, metadata templates support an `enum` field for a basic list of items, and ` multiSelect` field for a similar list of items where the user can select more than one value."
                      },
                      "hidden": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether this field is hidden in the UI for the user and can only be set through the API instead."
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "title": "Metadata Option (Write)",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "example": "Category 1",
                              "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                            }
                          },
                          "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                        },
                        "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                      },
                      "description": {
                        "type": "string",
                        "example": "The category",
                        "maxLength": 4096,
                        "description": "A description of the field. This is not shown to the user."
                      },
                      "displayName": {
                        "type": "string",
                        "example": "Category",
                        "maxLength": 4096,
                        "description": "The display name of the field as it is shown to the user in the web and mobile apps."
                      }
                    },
                    "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
                  },
                  {
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "822227e0-47a5-921b-88a8-494760b2e6d2",
                        "description": "The unique ID of the metadata template field."
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "Metadata Option (Write)",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "example": "Category 1",
                                  "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                                }
                              },
                              "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                            },
                            {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "45dc2849-a4a7-40a9-a751-4a699a589190",
                                  "description": "The internal unique identifier of the the option."
                                }
                              }
                            }
                          ],
                          "description": "An option for a Metadata Template Field.\nOptions are only present for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                        },
                        "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                      }
                    }
                  }
                ],
                "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
              },
              "description": "An ordered list of template fields which are part of the template. Each field can be a regular text field, date field, number field, as well as a single or multi-select list."
            },
            "hidden": {
              "type": "boolean",
              "example": true,
              "description": "Defines if this template is visible in the Box web app UI, or if\nit is purely intended for usage through the API."
            },
            "displayName": {
              "type": "string",
              "example": "Product Info",
              "maxLength": 4096,
              "description": "The display name of the template. This can be seen in the Box web app and mobile apps."
            },
            "templateKey": {
              "type": "string",
              "example": "productInfo",
              "pattern": "^[a-zA-Z_][-a-zA-Z0-9_]*$",
              "maxLength": 64,
              "description": "A unique identifier for the template. This identifier is unique across the `scope` of the enterprise to which the metadata template is being applied, yet is not necessarily unique across different enterprises."
            },
            "copyInstanceOnItemCopy": {
              "type": "boolean",
              "example": true,
              "description": "Whether or not to include the metadata when a file or folder is copied."
            }
          },
          "description": "A template for metadata that can be applied to files and folders",
          "x-box-resource-id": "metadata_template"
        }
      ]
  get_metadata_templates_id_id_schema:
    description: |-
      Retrieves a metadata template by its `scope` and `templateKey` values.
      To find the `scope` and `templateKey` for a template, list all templates for an enterprise or globally, or list all templates applied to a file or folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-metadata-templates-id-id-schema/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Metadata template",
          "x-box-tag": "metadata_templates",
          "properties": {
            "id": {
              "type": "string",
              "example": "58063d82-4128-7b43-bba9-92f706befcdf",
              "description": "The ID of the metadata template."
            },
            "type": {
              "enum": [
                "metadata_template"
              ],
              "type": "string",
              "example": "metadata_template",
              "nullable": false,
              "description": "`metadata_template`"
            },
            "scope": {
              "type": "string",
              "example": "enterprise_123456",
              "description": "The scope of the metadata template can either be `global` or `enterprise_*`. The `global` scope is used for templates that are available to any Box enterprise. The `enterprise_*` scope represents templates that have been created within a specific enterprise, where `*` will be the ID of that enterprise."
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "title": "Metadata Field (Write)",
                    "required": [
                      "type",
                      "key",
                      "displayName"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "example": "category",
                        "maxLength": 256,
                        "description": "A unique identifier for the field. The identifier must\nbe unique within the template to which it belongs."
                      },
                      "type": {
                        "enum": [
                          "string",
                          "float",
                          "date",
                          "enum",
                          "multiSelect"
                        ],
                        "type": "string",
                        "example": "string",
                        "description": "The type of field. The basic fields are a `string` field for text, a `float` field for numbers, and a `date` fields to present the user with a date-time picker.\nAdditionally, metadata templates support an `enum` field for a basic list of items, and ` multiSelect` field for a similar list of items where the user can select more than one value."
                      },
                      "hidden": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether this field is hidden in the UI for the user and can only be set through the API instead."
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "title": "Metadata Option (Write)",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "example": "Category 1",
                              "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                            }
                          },
                          "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                        },
                        "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                      },
                      "description": {
                        "type": "string",
                        "example": "The category",
                        "maxLength": 4096,
                        "description": "A description of the field. This is not shown to the user."
                      },
                      "displayName": {
                        "type": "string",
                        "example": "Category",
                        "maxLength": 4096,
                        "description": "The display name of the field as it is shown to the user in the web and mobile apps."
                      }
                    },
                    "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
                  },
                  {
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "822227e0-47a5-921b-88a8-494760b2e6d2",
                        "description": "The unique ID of the metadata template field."
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "Metadata Option (Write)",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "example": "Category 1",
                                  "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                                }
                              },
                              "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                            },
                            {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "45dc2849-a4a7-40a9-a751-4a699a589190",
                                  "description": "The internal unique identifier of the the option."
                                }
                              }
                            }
                          ],
                          "description": "An option for a Metadata Template Field.\nOptions are only present for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                        },
                        "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                      }
                    }
                  }
                ],
                "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
              },
              "description": "An ordered list of template fields which are part of the template. Each field can be a regular text field, date field, number field, as well as a single or multi-select list."
            },
            "hidden": {
              "type": "boolean",
              "example": true,
              "description": "Defines if this template is visible in the Box web app UI, or if\nit is purely intended for usage through the API."
            },
            "displayName": {
              "type": "string",
              "example": "Product Info",
              "maxLength": 4096,
              "description": "The display name of the template. This can be seen in the Box web app and mobile apps."
            },
            "templateKey": {
              "type": "string",
              "example": "productInfo",
              "pattern": "^[a-zA-Z_][-a-zA-Z0-9_]*$",
              "maxLength": 64,
              "description": "A unique identifier for the template. This identifier is unique across the `scope` of the enterprise to which the metadata template is being applied, yet is not necessarily unique across different enterprises."
            },
            "copyInstanceOnItemCopy": {
              "type": "boolean",
              "example": true,
              "description": "Whether or not to include the metadata when a file or folder is copied."
            }
          },
          "description": "A template for metadata that can be applied to files and folders",
          "x-box-resource-id": "metadata_template"
        }
      ]
  get_recent_items:
    description: |-
      Returns information about the recent items accessed
      by a user, either in the last 90 days or up to the last
      1000 items accessed.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-recent-items/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_retention_policies:
    description: |-
      Retrieves all of the retention policies for an enterprise.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-retention-policies/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Retention policies",
          "x-box-tag": "retention_policies",
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "title": "Retention policy (Base)",
                        "x-box-tag": "retention_policies",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "12345",
                            "nullable": false,
                            "description": "The unique identifier that represent a file version."
                          },
                          "type": {
                            "enum": [
                              "retention_policy"
                            ],
                            "type": "string",
                            "example": "retention_policy",
                            "nullable": false,
                            "description": "`retention_policy`"
                          }
                        },
                        "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                        "x-box-variant": "base",
                        "x-box-variants": [
                          "base",
                          "mini",
                          "standard"
                        ],
                        "x-box-resource-id": "retention_policy--base"
                      },
                      {
                        "properties": {
                          "policy_name": {
                            "type": "string",
                            "example": "Some Policy Name",
                            "description": "The name given to the retention policy"
                          },
                          "retention_length": {
                            "type": "string",
                            "format": "int32",
                            "example": "365",
                            "minimum": 1,
                            "description": "The length of the retention policy. This length\nspecifies the duration in days that the retention\npolicy will be active for after being assigned to\ncontent.  If the policy has A `policy_type` of\n`indefinite`, the `retention_length` will also be\n`indefinite`."
                          },
                          "disposition_action": {
                            "enum": [
                              "permanently_delete",
                              "remove_retention"
                            ],
                            "type": "string",
                            "example": "permanently_delete",
                            "description": "The disposition action of the retention policy. This action can be `permanently_delete`, which will cause the content retained by the policy to be permanently deleted, or `remove_retention`, which will lift the retention policy from the content, allowing it to be deleted by users, once the retention policy has expired."
                          }
                        }
                      }
                    ],
                    "title": "Retention policy (Mini)",
                    "description": "A mini representation of a retention policy, used when\nnested within another resource.",
                    "x-box-variant": "mini",
                    "x-box-resource-id": "retention_policy--mini"
                  },
                  {
                    "properties": {
                      "status": {
                        "enum": [
                          "active",
                          "retired"
                        ],
                        "type": "string",
                        "example": "active",
                        "description": "The status of the retention policy. The status of a policy will be `active`, unless explicitly retired by an administrator, in which case the status will be `retired`. Once a policy has been retired, it cannot become active again."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "When the retention policy object was created"
                      },
                      "created_by": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "User (Base)",
                                "x-box-tag": "users",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this user"
                                  },
                                  "type": {
                                    "enum": [
                                      "user"
                                    ],
                                    "type": "string",
                                    "example": "user",
                                    "nullable": false,
                                    "description": "`user`"
                                  }
                                },
                                "description": "A mini representation of a user, used when\nnested within another resource.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-resource-id": "user--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Aaron Levie",
                                    "nullable": false,
                                    "maxLength": 50,
                                    "description": "The display name of this user"
                                  },
                                  "login": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "ceo@example.com",
                                    "nullable": false,
                                    "description": "The primary email address of this user"
                                  }
                                }
                              }
                            ],
                            "title": "User (Mini)",
                            "description": "A mini representation of a user, as can be returned when nested within other resources.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "user--mini"
                          },
                          {
                            "description": "A mini user object representing the user that\ncreated the retention policy"
                          }
                        ]
                      },
                      "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "When the retention policy object was last modified"
                      },
                      "policy_type": {
                        "enum": [
                          "finite",
                          "indefinite"
                        ],
                        "type": "string",
                        "example": "finite",
                        "description": "The type of the retention policy. A retention\npolicy type can either be `finite`, where a\nspecific amount of time to retain the content is known\nupfront, or `indefinite`, where the amount of time\nto retain the content is still unknown."
                      }
                    }
                  }
                ],
                "title": "Retention policy",
                "x-box-tag": "retention_policies",
                "description": "A retention policy blocks permanent deletion of content\nfor a specified amount of time. Admins can create retention\npolicies and then later assign them to specific folders\nor their entire enterprise.  To use this feature, you must\nhave the manage retention policies scope enabled\nfor your API key via your application management console.",
                "x-box-variant": "standard",
                "x-box-resource-id": "retention_policy"
              }
            },
            "total_count": {
              "type": "integer",
              "format": "int64",
              "example": 156,
              "description": "The number of retention policies."
            }
          },
          "description": "A list of retention policies",
          "x-box-resource-id": "retention_policies"
        }
      ]
  get_retention_policies_id:
    description: |-
      Retrieves a retention policy.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-retention-policies-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Retention policy (Base)",
                  "x-box-tag": "retention_policies",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a file version."
                    },
                    "type": {
                      "enum": [
                        "retention_policy"
                      ],
                      "type": "string",
                      "example": "retention_policy",
                      "nullable": false,
                      "description": "`retention_policy`"
                    }
                  },
                  "description": "The bare basic representation of a file version, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard"
                  ],
                  "x-box-resource-id": "retention_policy--base"
                },
                {
                  "properties": {
                    "policy_name": {
                      "type": "string",
                      "example": "Some Policy Name",
                      "description": "The name given to the retention policy"
                    },
                    "retention_length": {
                      "type": "string",
                      "format": "int32",
                      "example": "365",
                      "minimum": 1,
                      "description": "The length of the retention policy. This length\nspecifies the duration in days that the retention\npolicy will be active for after being assigned to\ncontent.  If the policy has A `policy_type` of\n`indefinite`, the `retention_length` will also be\n`indefinite`."
                    },
                    "disposition_action": {
                      "enum": [
                        "permanently_delete",
                        "remove_retention"
                      ],
                      "type": "string",
                      "example": "permanently_delete",
                      "description": "The disposition action of the retention policy.\nThis action can be `permanently_delete`, which\nwill cause the content retained by the policy\nto be permanently deleted, or `remove_retention`,\nwhich will lift the retention policy from the content,\nallowing it to be deleted by users,\nonce the retention policy has expired."
                    }
                  }
                }
              ],
              "title": "Retention policy (Mini)",
              "description": "A mini representation of a retention policy, used when\nnested within another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "retention_policy--mini"
            },
            {
              "properties": {
                "status": {
                  "enum": [
                    "active",
                    "retired"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "The status of the retention policy. The status of\na policy will be `active`, unless explicitly retired by an\nadministrator, in which case the status will be `retired`.\nOnce a policy has been retired, it cannot become\nactive again."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the retention policy object was created"
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "A mini user object representing the user that\ncreated the retention policy"
                    }
                  ]
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the retention policy object was last modified"
                },
                "policy_type": {
                  "enum": [
                    "finite",
                    "indefinite"
                  ],
                  "type": "string",
                  "example": "finite",
                  "description": "The type of the retention policy. A retention\npolicy type can either be `finite`, where a\nspecific amount of time to retain the content is known\nupfront, or `indefinite`, where the amount of time\nto retain the content is still unknown."
                }
              }
            }
          ],
          "title": "Retention policy",
          "x-box-tag": "retention_policies",
          "description": "A retention policy blocks permanent deletion of content\nfor a specified amount of time. Admins can create retention\npolicies and then later assign them to specific folders\nor their entire enterprise.  To use this feature, you must\nhave the manage retention policies scope enabled\nfor your API key via your application management console.",
          "x-box-variant": "standard",
          "x-box-resource-id": "retention_policy"
        }
      ]
  get_retention_policies_id_assignments:
    description: |-
      Returns a list of all retention policy assignments associated with a specified retention policy.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-retention-policies-id-assignments/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "next_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 3000,
                  "description": "The marker for the start of the next page of results."
                },
                "prev_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The marker for the start of the previous page of results."
                }
              },
              "description": "The part of an API response that describes marker\nbased pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Retention policy assignment",
                    "x-box-tag": "retention_policy_assignments",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "11446498",
                        "description": "The unique identifier for this retention policy assignment"
                      },
                      "type": {
                        "enum": [
                          "retention_policy_assignment"
                        ],
                        "type": "string",
                        "example": "retention_policy_assignment",
                        "description": "`retention_policy_assignment`"
                      },
                      "assigned_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "When the retention policy assignment object was\ncreated"
                      },
                      "assigned_by": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "User (Base)",
                                "x-box-tag": "users",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this user"
                                  },
                                  "type": {
                                    "enum": [
                                      "user"
                                    ],
                                    "type": "string",
                                    "example": "user",
                                    "nullable": false,
                                    "description": "`user`"
                                  }
                                },
                                "description": "A mini representation of a user, used when\nnested within another resource.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-resource-id": "user--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Aaron Levie",
                                    "nullable": false,
                                    "maxLength": 50,
                                    "description": "The display name of this user"
                                  },
                                  "login": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "ceo@example.com",
                                    "nullable": false,
                                    "description": "The primary email address of this user"
                                  }
                                }
                              }
                            ],
                            "title": "User (Mini)",
                            "description": "A mini representation of a user, as can be returned when nested within other resources.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "user--mini"
                          },
                          {
                            "description": "A mini user object representing the user that\ncreated the retention policy assignment object"
                          }
                        ]
                      },
                      "assigned_to": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Reference",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this object"
                              },
                              "type": {
                                "type": "string",
                                "example": "file",
                                "description": "The type for this object"
                              }
                            },
                            "description": "The bare basic reference for an object"
                          },
                          {
                            "description": "The `type` and `id` of the content that is under\nretention. The `type` can either be `folder` or `\nenterprise`."
                          }
                        ]
                      },
                      "retention_policy": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Retention policy (Base)",
                                "x-box-tag": "retention_policies",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a file version."
                                  },
                                  "type": {
                                    "enum": [
                                      "retention_policy"
                                    ],
                                    "type": "string",
                                    "example": "retention_policy",
                                    "nullable": false,
                                    "description": "`retention_policy`"
                                  }
                                },
                                "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard"
                                ],
                                "x-box-resource-id": "retention_policy--base"
                              },
                              {
                                "properties": {
                                  "policy_name": {
                                    "type": "string",
                                    "example": "Some Policy Name",
                                    "description": "The name given to the retention policy"
                                  },
                                  "retention_length": {
                                    "type": "string",
                                    "format": "int32",
                                    "example": "365",
                                    "minimum": 1,
                                    "description": "The length of the retention policy. This length specifies the duration in days that the retention policy will be active for after being assigned to content.  If the policy has A `policy_type` of `indefinite`, the `retention_length` will also be `indefinite`."
                                  },
                                  "disposition_action": {
                                    "enum": [
                                      "permanently_delete",
                                      "remove_retention"
                                    ],
                                    "type": "string",
                                    "example": "permanently_delete",
                                    "description": "The disposition action of the retention policy. This action can be `permanently_delete`, which will cause the content retained by the policy to be permanently deleted, or `remove_retention`, which will lift the retention policy from the content, allowing it to be deleted by users, once the retention policy has expired."
                                  }
                                }
                              }
                            ],
                            "title": "Retention policy (Mini)",
                            "description": "A mini representation of a retention policy, used when nested within another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "retention_policy--mini"
                          },
                          {
                            "description": "A mini retention policy object representing the retention policy that has been assigned to this content"
                          }
                        ]
                      }
                    },
                    "description": "The retention policy assignment endpoint provides a way\nfor admins to apply a retention policy on a per-folder\nbasis, or place a blanket policy over the entire\nenterprise.",
                    "x-box-resource-id": "retention_policy_assignment"
                  }
                }
              }
            }
          ],
          "title": "Retention policy assignments",
          "x-box-tag": "retention_policy_assignments",
          "description": "A list of retention policy assignments",
          "x-box-resource-id": "retention_policy_assignments"
        }
      ]
  get_retention_policy_assignments_id:
    description: |-
      Retrieves a retention policy assignment
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-retention-policy-assignments-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Retention policy assignment",
          "x-box-tag": "retention_policy_assignments",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this retention policy assignment"
            },
            "type": {
              "enum": [
                "retention_policy_assignment"
              ],
              "type": "string",
              "example": "retention_policy_assignment",
              "description": "`retention_policy_assignment`"
            },
            "assigned_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the retention policy assignment object was\ncreated"
            },
            "assigned_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "A mini user object representing the user that\ncreated the retention policy assignment object"
                }
              ]
            },
            "assigned_to": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Reference",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this object"
                    },
                    "type": {
                      "type": "string",
                      "example": "file",
                      "description": "The type for this object"
                    }
                  },
                  "description": "The bare basic reference for an object"
                },
                {
                  "description": "The `type` and `id` of the content that is under\nretention. The `type` can either be `folder` or `\nenterprise`."
                }
              ]
            },
            "retention_policy": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Retention policy (Base)",
                      "x-box-tag": "retention_policies",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a file version."
                        },
                        "type": {
                          "enum": [
                            "retention_policy"
                          ],
                          "type": "string",
                          "example": "retention_policy",
                          "nullable": false,
                          "description": "`retention_policy`"
                        }
                      },
                      "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard"
                      ],
                      "x-box-resource-id": "retention_policy--base"
                    },
                    {
                      "properties": {
                        "policy_name": {
                          "type": "string",
                          "example": "Some Policy Name",
                          "description": "The name given to the retention policy"
                        },
                        "retention_length": {
                          "type": "string",
                          "format": "int32",
                          "example": "365",
                          "minimum": 1,
                          "description": "The length of the retention policy. This length\nspecifies the duration in days that the retention\npolicy will be active for after being assigned to\ncontent.  If the policy has A `policy_type` of\n`indefinite`, the `retention_length` will also be\n`indefinite`."
                        },
                        "disposition_action": {
                          "enum": [
                            "permanently_delete",
                            "remove_retention"
                          ],
                          "type": "string",
                          "example": "permanently_delete",
                          "description": "The disposition action of the retention policy. This action can be `permanently_delete`, which will cause the content retained by the policy to be permanently deleted, or `remove_retention`, which will lift the retention policy from the content, allowing it to be deleted by users, once the retention policy has expired."
                        }
                      }
                    }
                  ],
                  "title": "Retention policy (Mini)",
                  "description": "A mini representation of a retention policy, used when\nnested within another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "retention_policy--mini"
                },
                {
                  "description": "A mini retention policy object representing the\nretention policy that has been assigned to this content"
                }
              ]
            }
          },
          "description": "The retention policy assignment endpoint provides a way\nfor admins to apply a retention policy on a per-folder\nbasis, or place a blanket policy over the entire\nenterprise.",
          "x-box-resource-id": "retention_policy_assignment"
        }
      ]
  get_search:
    description: |-
      Searches for files, folders, web links, and shared files across the
      users content or across the entire enterprise.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-search/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_shared_items:
    description: |-
      Return the file represented by a shared link.
      A shared file can be represented by a shared link,
      which can originate within the current enterprise or within another.
      This endpoint allows an application to retrieve information about a
      shared file when only given a shared link.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-shared-items/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  get_shared_items#folders:
    description: |-
      Return the folder represented by a shared link.
      A shared folder can be represented by a shared link,
      which can originate within the current enterprise or within another.
      This endpoint allows an application to retrieve information about a
      shared folder when only given a shared link.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-shared-items--folders/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Folder (Base)",
                  "x-box-tag": "folders",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "folder"
                      ],
                      "type": "string",
                      "example": "folder",
                      "nullable": false,
                      "description": "`folder`"
                    }
                  },
                  "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "folder--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contracts",
                      "nullable": false,
                      "description": "The name of the folder."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Folder (Mini)",
              "description": "A mini representation of a file version, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "folder--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 629644,
                  "nullable": false,
                  "description": "The folder size in bytes.\nBe careful parsing this integer as its\nvalue can get very large."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The optional folder that this folder is located within.\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time and which the folder will be automatically be deleted."
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder was put in the trash."
                },
                "description": {
                  "allOf": [
                    {
                      "type": "string",
                      "example": "Legal contracts for the new ACME deal",
                      "nullable": false,
                      "maxLength": 256,
                      "description": "The optional description of this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                    }
                  ],
                  "nullable": true
                },
                "item_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1000,
                              "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                            },
                            "order": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "by": {
                                    "type": "string",
                                    "example": "type",
                                    "description": "The field to order by"
                                  },
                                  "direction": {
                                    "enum": [
                                      "ASC",
                                      "DESC"
                                    ],
                                    "type": "string",
                                    "example": "ASC",
                                    "description": "The direction to order by, either ascending or descending"
                                  }
                                },
                                "description": "The order in which a pagination is ordered"
                              },
                              "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "offset": {
                              "type": "integer",
                              "format": "int64",
                              "example": 2000,
                              "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "total_count": {
                              "type": "integer",
                              "format": "int64",
                              "example": 5000,
                              "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            }
                          },
                          "description": "The part of an API response that describes pagination"
                        },
                        {
                          "properties": {
                            "entries": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File (Base)",
                                        "x-box-tag": "files",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "file"
                                            ],
                                            "type": "string",
                                            "example": "file",
                                            "nullable": false,
                                            "description": "`file`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contract.pdf",
                                            "description": "The name of the file"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "format": "digest",
                                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                            "nullable": false,
                                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          },
                                          "file_version": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "title": "File version (Base)",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "example": "12345",
                                                        "nullable": false,
                                                        "description": "The unique identifier that represent a file version."
                                                      },
                                                      "type": {
                                                        "enum": [
                                                          "file_version"
                                                        ],
                                                        "type": "string",
                                                        "example": "file_version",
                                                        "nullable": false,
                                                        "description": "`file_version`"
                                                      }
                                                    },
                                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                    "x-box-variant": "base",
                                                    "x-box-variants": [
                                                      "base",
                                                      "mini",
                                                      "standard"
                                                    ],
                                                    "x-box-sanitized": true,
                                                    "x-box-resource-id": "file_version--base"
                                                  },
                                                  {
                                                    "properties": {
                                                      "sha1": {
                                                        "type": "string",
                                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                        "description": "The SHA1 hash of this version of the file."
                                                      }
                                                    }
                                                  }
                                                ],
                                                "title": "File version (Mini)",
                                                "description": "A mini representation of a file version, used when nested within another resource.",
                                                "x-box-variant": "mini",
                                                "x-box-resource-id": "file_version--mini"
                                              },
                                              {
                                                "description": "The information about the current version of the file."
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File (Mini)",
                                    "description": "A mini representation of a file, used when\nnested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Folder (Base)",
                                        "x-box-tag": "folders",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "folder"
                                            ],
                                            "type": "string",
                                            "example": "folder",
                                            "nullable": false,
                                            "description": "`folder`"
                                          }
                                        },
                                        "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "folder--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contracts",
                                            "nullable": false,
                                            "description": "The name of the folder."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Folder (Mini)",
                                    "description": "A mini representation of a file version, used when nested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "folder--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Web link (Base)",
                                        "x-box-tag": "web_links",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "11446498",
                                            "description": "The unique identifier for this web link"
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "description": "The entity tag of this web link. Used with `If-Match` headers."
                                          },
                                          "type": {
                                            "enum": [
                                              "web_link"
                                            ],
                                            "type": "string",
                                            "example": "web_link",
                                            "description": "`web_link`"
                                          }
                                        },
                                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-resource-id": "web_link--base"
                                      },
                                      {
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com/example/1234",
                                            "description": "The URL this web link points to"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "My Bookmark",
                                            "description": "The name of the web link"
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Web link (Mini)",
                                    "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "web_link--mini"
                                  }
                                ]
                              },
                              "description": "The items in this collection."
                            }
                          }
                        }
                      ],
                      "title": "Items",
                      "x-box-tag": "folders",
                      "description": "A list of files, folders, and web links in\ntheir mini representation.",
                      "x-box-resource-id": "items"
                    },
                    {
                      "description": "A page of the items that are in the folder.\nThis field can only be requested when querying a folder's information, not when querying a folder's items."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was originally\ncreated."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was last updated."
                },
                "folder_upload_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "upload.Contracts.asd7asd@u.box.com",
                      "nullable": false,
                      "description": "The optional upload email address for this folder."
                    },
                    "access": {
                      "enum": [
                        "open",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "nullable": false,
                      "description": "When this parameter has been set, users can email files to the email address that has been automatically created for this folder.\nTo create an email address, set this property either when creating or updating the folder.\nWhen set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.\nWhen set to `open` it will accept emails from any email address."
                    }
                  }
                }
              }
            }
          ],
          "title": "Folder",
          "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "folder"
        }
      ]
  get_storage_policies:
    description: |-
      Fetches all the storage policies in the enterprise.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-storage-policies/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "next_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 3000,
                  "description": "The marker for the start of the next page of results."
                },
                "prev_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The marker for the start of the previous page of results."
                }
              },
              "description": "The part of an API response that describes marker\nbased pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "title": "Storage policy (Mini)",
                        "x-box-tag": "storage_policies",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "11446498",
                            "description": "The unique identifier for this storage policy"
                          },
                          "type": {
                            "enum": [
                              "storage_policy"
                            ],
                            "type": "string",
                            "example": "storage_policy",
                            "description": "`storage_policy`"
                          }
                        },
                        "description": "A mini description of a Storage Policy object",
                        "x-box-variant": "mini",
                        "x-box-variants": [
                          "standard",
                          "mini"
                        ],
                        "x-box-resource-id": "storage_policy--mini"
                      },
                      {
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Montreal / Dublin",
                            "description": "A descriptive name of the region"
                          }
                        }
                      }
                    ],
                    "title": "Storage policy",
                    "description": "The Storage Policy object describes the storage zone.",
                    "x-box-variant": "standard",
                    "x-box-resource-id": "storage_policy"
                  }
                }
              }
            }
          ],
          "title": "Storage policies",
          "x-box-tag": "storage_policies",
          "description": "A list of storage policies.",
          "x-box-resource-id": "storage_policies"
        }
      ]
  get_storage_policies_id:
    description: |-
      Fetches a specific storage policy.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-storage-policies-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Storage policy (Mini)",
              "x-box-tag": "storage_policies",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "11446498",
                  "description": "The unique identifier for this storage policy"
                },
                "type": {
                  "enum": [
                    "storage_policy"
                  ],
                  "type": "string",
                  "example": "storage_policy",
                  "description": "`storage_policy`"
                }
              },
              "description": "A mini description of a Storage Policy object",
              "x-box-variant": "mini",
              "x-box-variants": [
                "standard",
                "mini"
              ],
              "x-box-resource-id": "storage_policy--mini"
            },
            {
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Montreal / Dublin",
                  "description": "A descriptive name of the region"
                }
              }
            }
          ],
          "title": "Storage policy",
          "description": "The Storage Policy object describes the storage zone.",
          "x-box-variant": "standard",
          "x-box-resource-id": "storage_policy"
        }
      ]
  get_storage_policy_assignments:
    description: |-
      Fetches all the storage policy assignment for an enterprise or user.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-storage-policy-assignments/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "next_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 3000,
                  "description": "The marker for the start of the next page of results."
                },
                "prev_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The marker for the start of the previous page of results."
                }
              },
              "description": "The part of an API response that describes marker\nbased pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Storage policy assignment",
                    "x-box-tag": "storage_policy_assignments",
                    "properties": {
                      "assigned_to": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Reference",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this object"
                              },
                              "type": {
                                "type": "string",
                                "example": "file",
                                "description": "The type for this object"
                              }
                            },
                            "description": "The bare basic reference for an object"
                          },
                          {
                            "description": "The enterprise or use the policy is assigned to"
                          }
                        ]
                      },
                      "storage_policy": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Storage policy (Mini)",
                            "x-box-tag": "storage_policies",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this storage policy"
                              },
                              "type": {
                                "enum": [
                                  "storage_policy"
                                ],
                                "type": "string",
                                "example": "storage_policy",
                                "description": "`storage_policy`"
                              }
                            },
                            "description": "A mini description of a Storage Policy object",
                            "x-box-variant": "mini",
                            "x-box-variants": [
                              "standard",
                              "mini"
                            ],
                            "x-box-resource-id": "storage_policy--mini"
                          },
                          {
                            "description": "The assigned storage policy"
                          }
                        ]
                      }
                    },
                    "description": "The assignment of a storage policy to a user or enterprise",
                    "x-box-resource-id": "storage_policy_assignment"
                  }
                }
              }
            }
          ],
          "title": "Storage policy assignments",
          "x-box-tag": "storage_policy_assignments",
          "description": "A list of storage policy assignments.",
          "x-box-resource-id": "storage_policy_assignments"
        }
      ]
  get_storage_policy_assignments_id:
    description: |-
      Fetches a specific storage policy assignment.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-storage-policy-assignments-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Storage policy assignment",
          "x-box-tag": "storage_policy_assignments",
          "properties": {
            "assigned_to": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Reference",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this object"
                    },
                    "type": {
                      "type": "string",
                      "example": "file",
                      "description": "The type for this object"
                    }
                  },
                  "description": "The bare basic reference for an object"
                },
                {
                  "description": "The enterprise or use the policy is assigned to"
                }
              ]
            },
            "storage_policy": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Storage policy (Mini)",
                  "x-box-tag": "storage_policies",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this storage policy"
                    },
                    "type": {
                      "enum": [
                        "storage_policy"
                      ],
                      "type": "string",
                      "example": "storage_policy",
                      "description": "`storage_policy`"
                    }
                  },
                  "description": "A mini description of a Storage Policy object",
                  "x-box-variant": "mini",
                  "x-box-variants": [
                    "standard",
                    "mini"
                  ],
                  "x-box-resource-id": "storage_policy--mini"
                },
                {
                  "description": "The assigned storage policy"
                }
              ]
            }
          },
          "description": "The assignment of a storage policy to a user or enterprise",
          "x-box-resource-id": "storage_policy_assignment"
        }
      ]
  get_task_assignments_id:
    description: |-
      Retrieves information about a task assignment.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-task-assignments-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Task assignment",
          "x-box-tag": "task_assignments",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this task assignment"
            },
            "item": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "File (Base)",
                      "x-box-tag": "files",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                        },
                        "etag": {
                          "type": "string",
                          "example": "1",
                          "nullable": true,
                          "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                        },
                        "type": {
                          "enum": [
                            "file"
                          ],
                          "type": "string",
                          "example": "file",
                          "nullable": false,
                          "description": "`file`"
                        }
                      },
                      "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "file--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Contract.pdf",
                          "description": "The name of the file"
                        },
                        "sha1": {
                          "type": "string",
                          "format": "digest",
                          "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                          "nullable": false,
                          "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                        },
                        "sequence_id": {
                          "allOf": [
                            {
                              "type": "string",
                              "example": "3",
                              "nullable": false,
                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                            },
                            {
                              "nullable": false
                            }
                          ]
                        },
                        "file_version": {
                          "allOf": [
                            {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "File version (Base)",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "12345",
                                      "nullable": false,
                                      "description": "The unique identifier that represent a file version."
                                    },
                                    "type": {
                                      "enum": [
                                        "file_version"
                                      ],
                                      "type": "string",
                                      "example": "file_version",
                                      "nullable": false,
                                      "description": "`file_version`"
                                    }
                                  },
                                  "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                  "x-box-variant": "base",
                                  "x-box-variants": [
                                    "base",
                                    "mini",
                                    "standard"
                                  ],
                                  "x-box-sanitized": true,
                                  "x-box-resource-id": "file_version--base"
                                },
                                {
                                  "properties": {
                                    "sha1": {
                                      "type": "string",
                                      "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                      "description": "The SHA1 hash of this version of the file."
                                    }
                                  }
                                }
                              ],
                              "title": "File version (Mini)",
                              "description": "A mini representation of a file version, used when nested within another resource.",
                              "x-box-variant": "mini",
                              "x-box-resource-id": "file_version--mini"
                            },
                            {
                              "description": "The information about the current version of the file."
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "title": "File (Mini)",
                  "description": "A mini representation of a file, used when\nnested under another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "file--mini"
                },
                {
                  "description": "The file that the task has been assigned to."
                }
              ]
            },
            "type": {
              "enum": [
                "task_assignment"
              ],
              "type": "string",
              "example": "task_assignment",
              "description": "`task_assignment`"
            },
            "message": {
              "type": "string",
              "example": "Please review",
              "description": "A message that will is included with the task assignment. This is visible to the assigned user in the web and mobile UI."
            },
            "assigned_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The date at which this task was assigned to the user."
            },
            "assigned_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who assigned this task."
                }
              ]
            },
            "assigned_to": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user that the task has been assigned to."
                }
              ]
            },
            "reminded_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The date at which the assigned user was reminded of this task\nassignment."
            },
            "completed_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The date at which this task assignment was\ncompleted. This will be `null` if the task is not completed yet."
            },
            "resolution_state": {
              "enum": [
                "completed",
                "incomplete",
                "approved",
                "rejected"
              ],
              "type": "string",
              "example": "incomplete",
              "description": "The current state of the assignment. The available states depend on the `action` value of the task object."
            }
          },
          "description": "A task assignment defines which task is assigned to which user to complete.",
          "x-box-resource-id": "task_assignment"
        }
      ]
  get_tasks_id:
    description: |-
      Retrieves information about a specific task.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-tasks-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Task",
          "x-box-tag": "tasks",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this task"
            },
            "item": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "File (Base)",
                      "x-box-tag": "files",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                        },
                        "etag": {
                          "type": "string",
                          "example": "1",
                          "nullable": true,
                          "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                        },
                        "type": {
                          "enum": [
                            "file"
                          ],
                          "type": "string",
                          "example": "file",
                          "nullable": false,
                          "description": "`file`"
                        }
                      },
                      "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "file--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Contract.pdf",
                          "description": "The name of the file"
                        },
                        "sha1": {
                          "type": "string",
                          "format": "digest",
                          "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                          "nullable": false,
                          "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                        },
                        "sequence_id": {
                          "allOf": [
                            {
                              "type": "string",
                              "example": "3",
                              "nullable": false,
                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                            },
                            {
                              "nullable": false
                            }
                          ]
                        },
                        "file_version": {
                          "allOf": [
                            {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "File version (Base)",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "12345",
                                      "nullable": false,
                                      "description": "The unique identifier that represent a file version."
                                    },
                                    "type": {
                                      "enum": [
                                        "file_version"
                                      ],
                                      "type": "string",
                                      "example": "file_version",
                                      "nullable": false,
                                      "description": "`file_version`"
                                    }
                                  },
                                  "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                  "x-box-variant": "base",
                                  "x-box-variants": [
                                    "base",
                                    "mini",
                                    "standard"
                                  ],
                                  "x-box-sanitized": true,
                                  "x-box-resource-id": "file_version--base"
                                },
                                {
                                  "properties": {
                                    "sha1": {
                                      "type": "string",
                                      "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                      "description": "The SHA1 hash of this version of the file."
                                    }
                                  }
                                }
                              ],
                              "title": "File version (Mini)",
                              "description": "A mini representation of a file version, used when nested within another resource.",
                              "x-box-variant": "mini",
                              "x-box-resource-id": "file_version--mini"
                            },
                            {
                              "description": "The information about the current version of the file."
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "title": "File (Mini)",
                  "description": "A mini representation of a file, used when\nnested under another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "file--mini"
                },
                {
                  "description": "The file associated with the task"
                }
              ]
            },
            "type": {
              "enum": [
                "task"
              ],
              "type": "string",
              "example": "task",
              "description": "`task`"
            },
            "action": {
              "enum": [
                "review",
                "complete"
              ],
              "type": "string",
              "example": "review",
              "description": "The type of task the task assignee will be prompted to\nperform."
            },
            "due_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the task is due"
            },
            "message": {
              "type": "string",
              "example": "Legal review",
              "description": "A message that will be included with the task"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the task object was created"
            },
            "created_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who created the task"
                }
              ]
            },
            "is_completed": {
              "type": "boolean",
              "example": true,
              "description": "Whether the task has been completed"
            },
            "completion_rule": {
              "enum": [
                "all_assignees",
                "any_assignee"
              ],
              "type": "string",
              "example": "all_assignees",
              "description": "Defines which assignees need to complete this task before the task is considered completed.\n* `all_assignees` requires all assignees to review or approve the the task in order for it to be considered completed. * `any_assignee` accepts any one assignee to review or approve the the task in order for it to be considered completed."
            },
            "task_assignment_collection": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Task assignments",
                  "x-box-tag": "task_assignments",
                  "properties": {
                    "entries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Task assignment",
                        "x-box-tag": "task_assignments",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "11446498",
                            "description": "The unique identifier for this task assignment"
                          },
                          "item": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "File (Base)",
                                    "x-box-tag": "files",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "12345",
                                        "nullable": false,
                                        "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                      },
                                      "etag": {
                                        "type": "string",
                                        "example": "1",
                                        "nullable": true,
                                        "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                      },
                                      "type": {
                                        "enum": [
                                          "file"
                                        ],
                                        "type": "string",
                                        "example": "file",
                                        "nullable": false,
                                        "description": "`file`"
                                      }
                                    },
                                    "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-sanitized": true,
                                    "x-box-resource-id": "file--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Contract.pdf",
                                        "description": "The name of the file"
                                      },
                                      "sha1": {
                                        "type": "string",
                                        "format": "digest",
                                        "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                        "nullable": false,
                                        "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                      },
                                      "sequence_id": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "example": "3",
                                            "nullable": false,
                                            "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                          },
                                          {
                                            "nullable": false
                                          }
                                        ]
                                      },
                                      "file_version": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "title": "File version (Base)",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": "12345",
                                                    "nullable": false,
                                                    "description": "The unique identifier that represent a file version."
                                                  },
                                                  "type": {
                                                    "enum": [
                                                      "file_version"
                                                    ],
                                                    "type": "string",
                                                    "example": "file_version",
                                                    "nullable": false,
                                                    "description": "`file_version`"
                                                  }
                                                },
                                                "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                "x-box-variant": "base",
                                                "x-box-variants": [
                                                  "base",
                                                  "mini",
                                                  "standard"
                                                ],
                                                "x-box-sanitized": true,
                                                "x-box-resource-id": "file_version--base"
                                              },
                                              {
                                                "properties": {
                                                  "sha1": {
                                                    "type": "string",
                                                    "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                    "description": "The SHA1 hash of this version of the file."
                                                  }
                                                }
                                              }
                                            ],
                                            "title": "File version (Mini)",
                                            "description": "A mini representation of a file version, used when nested within another resource.",
                                            "x-box-variant": "mini",
                                            "x-box-resource-id": "file_version--mini"
                                          },
                                          {
                                            "description": "The information about the current version of the file."
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ],
                                "title": "File (Mini)",
                                "description": "A mini representation of a file, used when\nnested under another resource.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "file--mini"
                              },
                              {
                                "description": "The file that the task has been assigned to."
                              }
                            ]
                          },
                          "type": {
                            "enum": [
                              "task_assignment"
                            ],
                            "type": "string",
                            "example": "task_assignment",
                            "description": "`task_assignment`"
                          },
                          "message": {
                            "type": "string",
                            "example": "Please review",
                            "description": "A message that will is included with the task assignment. This is visible to the assigned user in the web and mobile UI."
                          },
                          "assigned_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "The date at which this task was assigned to the user."
                          },
                          "assigned_by": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "User (Base)",
                                    "x-box-tag": "users",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "11446498",
                                        "description": "The unique identifier for this user"
                                      },
                                      "type": {
                                        "enum": [
                                          "user"
                                        ],
                                        "type": "string",
                                        "example": "user",
                                        "nullable": false,
                                        "description": "`user`"
                                      }
                                    },
                                    "description": "A mini representation of a user, used when\nnested within another resource.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-resource-id": "user--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Aaron Levie",
                                        "nullable": false,
                                        "maxLength": 50,
                                        "description": "The display name of this user"
                                      },
                                      "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@example.com",
                                        "nullable": false,
                                        "description": "The primary email address of this user"
                                      }
                                    }
                                  }
                                ],
                                "title": "User (Mini)",
                                "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "user--mini"
                              },
                              {
                                "description": "The user who assigned this task."
                              }
                            ]
                          },
                          "assigned_to": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "User (Base)",
                                    "x-box-tag": "users",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "11446498",
                                        "description": "The unique identifier for this user"
                                      },
                                      "type": {
                                        "enum": [
                                          "user"
                                        ],
                                        "type": "string",
                                        "example": "user",
                                        "nullable": false,
                                        "description": "`user`"
                                      }
                                    },
                                    "description": "A mini representation of a user, used when\nnested within another resource.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-resource-id": "user--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Aaron Levie",
                                        "nullable": false,
                                        "maxLength": 50,
                                        "description": "The display name of this user"
                                      },
                                      "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@example.com",
                                        "nullable": false,
                                        "description": "The primary email address of this user"
                                      }
                                    }
                                  }
                                ],
                                "title": "User (Mini)",
                                "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "user--mini"
                              },
                              {
                                "description": "The user that the task has been assigned to."
                              }
                            ]
                          },
                          "reminded_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "The date at which the assigned user was reminded of this task assignment."
                          },
                          "completed_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "The date at which this task assignment was completed. This will be `null` if the task is not completed yet."
                          },
                          "resolution_state": {
                            "enum": [
                              "completed",
                              "incomplete",
                              "approved",
                              "rejected"
                            ],
                            "type": "string",
                            "example": "incomplete",
                            "description": "The current state of the assignment. The available states depend on the `action` value of the task object."
                          }
                        },
                        "description": "A task assignment defines which task is assigned to which user to complete.",
                        "x-box-resource-id": "task_assignment"
                      }
                    },
                    "total_count": {
                      "type": "integer",
                      "format": "int64",
                      "example": 100,
                      "description": "The total number of items in this collection."
                    }
                  },
                  "description": "A list of task assignments",
                  "x-box-resource-id": "task_assignments"
                },
                {
                  "description": "A collection of task assignment objects\nassociated with the task"
                }
              ]
            }
          },
          "description": "A task allows for file-centric workflows within Box. Users can create tasks on files and assign them to other users for them to complete the tasks.",
          "x-box-resource-id": "task"
        }
      ]
  get_tasks_id_assignments:
    description: |-
      Lists all of the assignments for a given task.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-tasks-id-assignments/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Task assignments",
          "x-box-tag": "task_assignments",
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "title": "Task assignment",
                "x-box-tag": "task_assignments",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "11446498",
                    "description": "The unique identifier for this task assignment"
                  },
                  "item": {
                    "allOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "File (Base)",
                            "x-box-tag": "files",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "12345",
                                "nullable": false,
                                "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                              },
                              "etag": {
                                "type": "string",
                                "example": "1",
                                "nullable": true,
                                "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                              },
                              "type": {
                                "enum": [
                                  "file"
                                ],
                                "type": "string",
                                "example": "file",
                                "nullable": false,
                                "description": "`file`"
                              }
                            },
                            "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-sanitized": true,
                            "x-box-resource-id": "file--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Contract.pdf",
                                "description": "The name of the file"
                              },
                              "sha1": {
                                "type": "string",
                                "format": "digest",
                                "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                "nullable": false,
                                "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                              },
                              "sequence_id": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "3",
                                    "nullable": false,
                                    "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                  },
                                  {
                                    "nullable": false
                                  }
                                ]
                              },
                              "file_version": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File version (Base)",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file version."
                                          },
                                          "type": {
                                            "enum": [
                                              "file_version"
                                            ],
                                            "type": "string",
                                            "example": "file_version",
                                            "nullable": false,
                                            "description": "`file_version`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file_version--base"
                                      },
                                      {
                                        "properties": {
                                          "sha1": {
                                            "type": "string",
                                            "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                            "description": "The SHA1 hash of this version of the file."
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File version (Mini)",
                                    "description": "A mini representation of a file version, used when nested within another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file_version--mini"
                                  },
                                  {
                                    "description": "The information about the current version of the file."
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "title": "File (Mini)",
                        "description": "A mini representation of a file, used when\nnested under another resource.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "file--mini"
                      },
                      {
                        "description": "The file that the task has been assigned to."
                      }
                    ]
                  },
                  "type": {
                    "enum": [
                      "task_assignment"
                    ],
                    "type": "string",
                    "example": "task_assignment",
                    "description": "`task_assignment`"
                  },
                  "message": {
                    "type": "string",
                    "example": "Please review",
                    "description": "A message that will is included with the task assignment. This is visible to the assigned user in the web and mobile UI."
                  },
                  "assigned_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-12-12T18:53:43.000Z",
                    "description": "The date at which this task was assigned to the user."
                  },
                  "assigned_by": {
                    "allOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "User (Base)",
                            "x-box-tag": "users",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this user"
                              },
                              "type": {
                                "enum": [
                                  "user"
                                ],
                                "type": "string",
                                "example": "user",
                                "nullable": false,
                                "description": "`user`"
                              }
                            },
                            "description": "A mini representation of a user, used when\nnested within another resource.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-resource-id": "user--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Aaron Levie",
                                "nullable": false,
                                "maxLength": 50,
                                "description": "The display name of this user"
                              },
                              "login": {
                                "type": "string",
                                "format": "email",
                                "example": "ceo@example.com",
                                "nullable": false,
                                "description": "The primary email address of this user"
                              }
                            }
                          }
                        ],
                        "title": "User (Mini)",
                        "description": "A mini representation of a user, as can be returned when nested within other resources.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "user--mini"
                      },
                      {
                        "description": "The user who assigned this task."
                      }
                    ]
                  },
                  "assigned_to": {
                    "allOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "User (Base)",
                            "x-box-tag": "users",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this user"
                              },
                              "type": {
                                "enum": [
                                  "user"
                                ],
                                "type": "string",
                                "example": "user",
                                "nullable": false,
                                "description": "`user`"
                              }
                            },
                            "description": "A mini representation of a user, used when\nnested within another resource.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-resource-id": "user--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Aaron Levie",
                                "nullable": false,
                                "maxLength": 50,
                                "description": "The display name of this user"
                              },
                              "login": {
                                "type": "string",
                                "format": "email",
                                "example": "ceo@example.com",
                                "nullable": false,
                                "description": "The primary email address of this user"
                              }
                            }
                          }
                        ],
                        "title": "User (Mini)",
                        "description": "A mini representation of a user, as can be returned when nested within other resources.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "user--mini"
                      },
                      {
                        "description": "The user that the task has been assigned to."
                      }
                    ]
                  },
                  "reminded_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-12-12T18:53:43.000Z",
                    "description": "The date at which the assigned user was reminded of this task assignment."
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-12-12T18:53:43.000Z",
                    "description": "The date at which this task assignment was completed. This will be `null` if the task is not completed yet."
                  },
                  "resolution_state": {
                    "enum": [
                      "completed",
                      "incomplete",
                      "approved",
                      "rejected"
                    ],
                    "type": "string",
                    "example": "incomplete",
                    "description": "The current state of the assignment. The available states depend on the `action` value of the task object."
                  }
                },
                "description": "A task assignment defines which task is assigned to which user to complete.",
                "x-box-resource-id": "task_assignment"
              }
            },
            "total_count": {
              "type": "integer",
              "format": "int64",
              "example": 100,
              "description": "The total number of items in this collection."
            }
          },
          "description": "A list of task assignments",
          "x-box-resource-id": "task_assignments"
        }
      ]
  get_terms_of_services:
    description: |-
      Returns the current terms of service text and settings
      for the enterprise.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-terms-of-services/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Terms of services",
          "x-box-tag": "terms_of_services",
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "title": "Terms of service (Mini)",
                    "x-box-tag": "terms_of_services",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "11446498",
                        "description": "The unique identifier for this terms of service."
                      },
                      "type": {
                        "enum": [
                          "terms_of_service"
                        ],
                        "type": "string",
                        "example": "terms_of_service",
                        "description": "`terms_of_service`"
                      }
                    },
                    "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
                    "x-box-variant": "mini",
                    "x-box-variants": [
                      "mini",
                      "standard"
                    ],
                    "x-box-resource-id": "terms_of_service--mini"
                  },
                  {
                    "properties": {
                      "text": {
                        "type": "string",
                        "example": "By using this service, you agree to ...",
                        "description": "The text for your terms and conditions. This text could be empty if the `status` is set to `disabled`."
                      },
                      "status": {
                        "enum": [
                          "enabled",
                          "disabled"
                        ],
                        "type": "string",
                        "example": "enabled",
                        "description": "Whether these terms are enabled or not"
                      },
                      "tos_type": {
                        "enum": [
                          "managed",
                          "external"
                        ],
                        "type": "string",
                        "example": "managed",
                        "description": "Whether to apply these terms to managed users or external users"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "When the legal item was created"
                      },
                      "enterprise": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Enterprise",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this enterprise."
                              },
                              "name": {
                                "type": "string",
                                "example": "Acme Inc.",
                                "description": "The name of the enterprise"
                              },
                              "type": {
                                "enum": [
                                  "enterprise"
                                ],
                                "type": "string",
                                "example": "enterprise",
                                "description": "`enterprise`"
                              }
                            },
                            "description": "A representation of a Box enterprise"
                          },
                          {
                            "description": "The enterprise these terms apply to"
                          }
                        ]
                      },
                      "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "When the legal item was modified."
                      }
                    }
                  }
                ],
                "title": "Terms of service",
                "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
                "x-box-variant": "standard",
                "x-box-resource-id": "terms_of_service"
              }
            },
            "total_count": {
              "type": "integer",
              "format": "int64",
              "example": 2,
              "description": "The total number of objects."
            }
          },
          "description": "A list of terms of services",
          "x-box-resource-id": "terms_of_services"
        }
      ]
  get_terms_of_services_id:
    description: |-
      Fetches a specific terms of service.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-terms-of-services-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Terms of service (Mini)",
              "x-box-tag": "terms_of_services",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "11446498",
                  "description": "The unique identifier for this terms of service."
                },
                "type": {
                  "enum": [
                    "terms_of_service"
                  ],
                  "type": "string",
                  "example": "terms_of_service",
                  "description": "`terms_of_service`"
                }
              },
              "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
              "x-box-variant": "mini",
              "x-box-variants": [
                "mini",
                "standard"
              ],
              "x-box-resource-id": "terms_of_service--mini"
            },
            {
              "properties": {
                "text": {
                  "type": "string",
                  "example": "By using this service, you agree to ...",
                  "description": "The text for your terms and conditions. This text could be\nempty if the `status` is set to `disabled`."
                },
                "status": {
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "type": "string",
                  "example": "enabled",
                  "description": "Whether these terms are enabled or not"
                },
                "tos_type": {
                  "enum": [
                    "managed",
                    "external"
                  ],
                  "type": "string",
                  "example": "managed",
                  "description": "Whether to apply these terms to managed users or external users"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the legal item was created"
                },
                "enterprise": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Enterprise",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this enterprise."
                        },
                        "name": {
                          "type": "string",
                          "example": "Acme Inc.",
                          "description": "The name of the enterprise"
                        },
                        "type": {
                          "enum": [
                            "enterprise"
                          ],
                          "type": "string",
                          "example": "enterprise",
                          "description": "`enterprise`"
                        }
                      },
                      "description": "A representation of a Box enterprise"
                    },
                    {
                      "description": "The enterprise these terms apply to"
                    }
                  ]
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the legal item was modified."
                }
              }
            }
          ],
          "title": "Terms of service",
          "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
          "x-box-variant": "standard",
          "x-box-resource-id": "terms_of_service"
        }
      ]
  get_terms_of_service_user_statuses:
    description: |-
      Retrieves an overview of users and their status for a
      terms of service, including Whether they have accepted
      the terms and when.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-terms-of-service-user-statuses/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Terms of service user statuses",
          "x-box-tag": "terms_of_service_user_statuses",
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "title": "Terms of service user status",
                "x-box-tag": "terms_of_service_user_statuses",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "11446498",
                    "description": "The unique identifier for this terms of service user status"
                  },
                  "tos": {
                    "allOf": [
                      {
                        "type": "object",
                        "title": "Terms of service (Mini)",
                        "x-box-tag": "terms_of_services",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "11446498",
                            "description": "The unique identifier for this terms of service."
                          },
                          "type": {
                            "enum": [
                              "terms_of_service"
                            ],
                            "type": "string",
                            "example": "terms_of_service",
                            "description": "`terms_of_service`"
                          }
                        },
                        "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
                        "x-box-variant": "mini",
                        "x-box-variants": [
                          "mini",
                          "standard"
                        ],
                        "x-box-resource-id": "terms_of_service--mini"
                      },
                      {
                        "description": "The terms of service"
                      }
                    ]
                  },
                  "type": {
                    "enum": [
                      "terms_of_service_user_status"
                    ],
                    "type": "string",
                    "example": "terms_of_service_user_status",
                    "description": "`terms_of_service_user_status`"
                  },
                  "user": {
                    "allOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "User (Base)",
                            "x-box-tag": "users",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this user"
                              },
                              "type": {
                                "enum": [
                                  "user"
                                ],
                                "type": "string",
                                "example": "user",
                                "nullable": false,
                                "description": "`user`"
                              }
                            },
                            "description": "A mini representation of a user, used when\nnested within another resource.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-resource-id": "user--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Aaron Levie",
                                "nullable": false,
                                "maxLength": 50,
                                "description": "The display name of this user"
                              },
                              "login": {
                                "type": "string",
                                "format": "email",
                                "example": "ceo@example.com",
                                "nullable": false,
                                "description": "The primary email address of this user"
                              }
                            }
                          }
                        ],
                        "title": "User (Mini)",
                        "description": "A mini representation of a user, as can be returned when nested within other resources.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "user--mini"
                      },
                      {
                        "description": "The user"
                      }
                    ]
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-12-12T18:53:43.000Z",
                    "description": "When the legal item was created"
                  },
                  "is_accepted": {
                    "type": "boolean",
                    "example": true,
                    "description": "If the user has accepted the terms of services"
                  },
                  "modified_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2012-12-12T18:53:43.000Z",
                    "description": "When the legal item was modified."
                  }
                },
                "description": "The association between a Terms of Service and a user",
                "x-box-resource-id": "terms_of_service_user_status"
              }
            },
            "total_count": {
              "type": "integer",
              "format": "int64",
              "example": 2,
              "description": "The total number of objects."
            }
          },
          "description": "A list of terms of service user statuses",
          "x-box-resource-id": "terms_of_services_user_statuses"
        }
      ]
  get_users:
    description: |-
      Returns a list of all users for the Enterprise along with their `user_id`,
      `public_name`, and `login`.
      The application and the authenticated user need to
      have the permission to look up users in the entire
      enterprise.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-users/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "by": {
                        "type": "string",
                        "example": "type",
                        "description": "The field to order by"
                      },
                      "direction": {
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "type": "string",
                        "example": "ASC",
                        "description": "The direction to order by, either ascending or descending"
                      }
                    },
                    "description": "The order in which a pagination is ordered"
                  },
                  "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "offset": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2000,
                  "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "total_count": {
                  "type": "integer",
                  "format": "int64",
                  "example": 5000,
                  "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                }
              },
              "description": "The part of an API response that describes pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "User (Base)",
                            "x-box-tag": "users",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "11446498",
                                "description": "The unique identifier for this user"
                              },
                              "type": {
                                "enum": [
                                  "user"
                                ],
                                "type": "string",
                                "example": "user",
                                "nullable": false,
                                "description": "`user`"
                              }
                            },
                            "description": "A mini representation of a user, used when\nnested within another resource.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-resource-id": "user--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Aaron Levie",
                                "nullable": false,
                                "maxLength": 50,
                                "description": "The display name of this user"
                              },
                              "login": {
                                "type": "string",
                                "format": "email",
                                "example": "ceo@example.com",
                                "nullable": false,
                                "description": "The primary email address of this user"
                              }
                            }
                          }
                        ],
                        "title": "User (Mini)",
                        "description": "A mini representation of a user, as can be returned when nested within other resources.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "user--mini"
                      },
                      {
                        "properties": {
                          "phone": {
                            "type": "string",
                            "example": "6509241374",
                            "maxLength": 100,
                            "description": "The user’s phone number"
                          },
                          "status": {
                            "enum": [
                              "active",
                              "inactive",
                              "cannot_delete_edit",
                              "cannot_delete_edit_upload"
                            ],
                            "type": "string",
                            "example": "active",
                            "description": "The user's account status"
                          },
                          "address": {
                            "type": "string",
                            "example": "900 Jefferson Ave, Redwood City, CA 94063",
                            "maxLength": 255,
                            "description": "The user’s address"
                          },
                          "language": {
                            "type": "string",
                            "example": "en",
                            "description": "The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format."
                          },
                          "timezone": {
                            "type": "string",
                            "format": "timezone",
                            "example": "Africa/Bujumbura",
                            "description": "The user's timezone"
                          },
                          "job_title": {
                            "type": "string",
                            "example": "CEO",
                            "maxLength": 100,
                            "description": "The user’s job title"
                          },
                          "avatar_url": {
                            "type": "string",
                            "example": "https://www.box.com/api/avatar/large/181216415",
                            "description": "URL of the user’s avatar image"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "When the user object was created"
                          },
                          "space_used": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1237009912,
                            "description": "The amount of space in use by the user"
                          },
                          "modified_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "When the user object was last modified"
                          },
                          "space_amount": {
                            "type": "integer",
                            "format": "int64",
                            "example": 11345156112,
                            "description": "The user’s total available space amount in bytes"
                          },
                          "max_upload_size": {
                            "type": "integer",
                            "format": "int64",
                            "example": 2147483648,
                            "description": "The maximum individual file size in bytes the user can have"
                          },
                          "notification_email": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "email": {
                                "type": "string",
                                "example": "notifications@example.com",
                                "description": "The email address to send the notifications to."
                              },
                              "is_confirmed": {
                                "type": "boolean",
                                "example": true,
                                "description": "Specifies if this email address has been confirmed."
                              }
                            },
                            "description": "An alternate notification email address to which email notifications are sent. When it's confirmed, this will be the email address to which notifications are sent instead of to the primary email address."
                          }
                        }
                      }
                    ],
                    "title": "User",
                    "description": "A standard representation of a user, as returned from any\nuser API endpoints by default",
                    "x-box-variant": "standard",
                    "x-box-resource-id": "user"
                  }
                }
              }
            }
          ],
          "title": "Users",
          "x-box-tag": "users",
          "description": "A list of users.",
          "x-box-resource-id": "users"
        }
      ]
  get_users_id:
    description: |-
      Retrieves information about a user in the enterprise.
      The application and the authenticated user need to
      have the permission to look up users in the entire
      enterprise.
      This endpoint also returns a limited set of information
      for external users who are collaborated on content
      owned by the enterprise for authenticated users with the
      right scopes. In this case, disallowed fields will return
      null instead.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-users-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "User (Base)",
                  "x-box-tag": "users",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this user"
                    },
                    "type": {
                      "enum": [
                        "user"
                      ],
                      "type": "string",
                      "example": "user",
                      "nullable": false,
                      "description": "`user`"
                    }
                  },
                  "description": "A mini representation of a user, used when\nnested within another resource.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-resource-id": "user--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Aaron Levie",
                      "nullable": false,
                      "maxLength": 50,
                      "description": "The display name of this user"
                    },
                    "login": {
                      "type": "string",
                      "format": "email",
                      "example": "ceo@example.com",
                      "nullable": false,
                      "description": "The primary email address of this user"
                    }
                  }
                }
              ],
              "title": "User (Mini)",
              "description": "A mini representation of a user, as can be returned when nested within other resources.",
              "x-box-variant": "mini",
              "x-box-resource-id": "user--mini"
            },
            {
              "properties": {
                "phone": {
                  "type": "string",
                  "example": "6509241374",
                  "maxLength": 100,
                  "description": "The user’s phone number"
                },
                "status": {
                  "enum": [
                    "active",
                    "inactive",
                    "cannot_delete_edit",
                    "cannot_delete_edit_upload"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "The user's account status"
                },
                "address": {
                  "type": "string",
                  "example": "900 Jefferson Ave, Redwood City, CA 94063",
                  "maxLength": 255,
                  "description": "The user’s address"
                },
                "language": {
                  "type": "string",
                  "example": "en",
                  "description": "The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format."
                },
                "timezone": {
                  "type": "string",
                  "format": "timezone",
                  "example": "Africa/Bujumbura",
                  "description": "The user's timezone"
                },
                "job_title": {
                  "type": "string",
                  "example": "CEO",
                  "maxLength": 100,
                  "description": "The user’s job title"
                },
                "avatar_url": {
                  "type": "string",
                  "example": "https://www.box.com/api/avatar/large/181216415",
                  "description": "URL of the user’s avatar image"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the user object was created"
                },
                "space_used": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1237009912,
                  "description": "The amount of space in use by the user"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the user object was last modified"
                },
                "space_amount": {
                  "type": "integer",
                  "format": "int64",
                  "example": 11345156112,
                  "description": "The user’s total available space amount in bytes"
                },
                "max_upload_size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2147483648,
                  "description": "The maximum individual file size in bytes the user can have"
                },
                "notification_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "notifications@example.com",
                      "description": "The email address to send the notifications to."
                    },
                    "is_confirmed": {
                      "type": "boolean",
                      "example": true,
                      "description": "Specifies if this email address has been confirmed."
                    }
                  },
                  "description": "An alternate notification email address to which email\nnotifications are sent. When it's confirmed, this will be\nthe email address to which notifications are sent instead of\nto the primary email address."
                }
              }
            }
          ],
          "title": "User",
          "description": "A standard representation of a user, as returned from any\nuser API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "user"
        }
      ]
  get_users_id_avatar:
    description: |-
      Retrieves an image of a the user's avatar.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-users-id-avatar/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "string",
          "format": "binary",
          "description": "The avatar"
        }
      ]
  get_users_id_email_aliases:
    description: |-
      Retrieves all email aliases for a user. The collection
      does not include the primary login for the user.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-users-id-email-aliases/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Email aliases",
          "x-box-tag": "email_aliases",
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "title": "Email alias",
                "x-box-tag": "email_aliases",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "11446498",
                    "description": "The unique identifier for this object"
                  },
                  "type": {
                    "enum": [
                      "email_alias"
                    ],
                    "type": "string",
                    "example": "email_alias",
                    "description": "`email_alias`"
                  },
                  "email": {
                    "type": "string",
                    "example": "alias@example.com",
                    "description": "The email address"
                  },
                  "is_confirmed": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the email address has been confirmed"
                  }
                },
                "description": "An email alias for a user.",
                "x-box-resource-id": "email_alias"
              }
            },
            "total_count": {
              "type": "integer",
              "format": "int64",
              "example": 5000,
              "description": "The number of email aliases."
            }
          },
          "description": "A list of email aliases",
          "x-box-resource-id": "email_aliases"
        }
      ]
  get_users_id_memberships:
    description: |-
      Retrieves all the groups for a user. Only members of this
      group or users with admin-level permissions will be able to
      use this API.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-users-id-memberships/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "by": {
                        "type": "string",
                        "example": "type",
                        "description": "The field to order by"
                      },
                      "direction": {
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "type": "string",
                        "example": "ASC",
                        "description": "The direction to order by, either ascending or descending"
                      }
                    },
                    "description": "The order in which a pagination is ordered"
                  },
                  "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "offset": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2000,
                  "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                },
                "total_count": {
                  "type": "integer",
                  "format": "int64",
                  "example": 5000,
                  "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                }
              },
              "description": "The part of an API response that describes pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Group membership",
                    "x-box-tag": "memberships",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "11446498",
                        "description": "The unique identifier for this group membership"
                      },
                      "role": {
                        "enum": [
                          "member",
                          "admin"
                        ],
                        "type": "string",
                        "example": "member",
                        "description": "The role of the user in the group."
                      },
                      "type": {
                        "enum": [
                          "group_membership"
                        ],
                        "type": "string",
                        "example": "group_membership",
                        "description": "`group_membership`"
                      },
                      "user": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "User (Base)",
                                "x-box-tag": "users",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this user"
                                  },
                                  "type": {
                                    "enum": [
                                      "user"
                                    ],
                                    "type": "string",
                                    "example": "user",
                                    "nullable": false,
                                    "description": "`user`"
                                  }
                                },
                                "description": "A mini representation of a user, used when\nnested within another resource.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-resource-id": "user--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Aaron Levie",
                                    "nullable": false,
                                    "maxLength": 50,
                                    "description": "The display name of this user"
                                  },
                                  "login": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "ceo@example.com",
                                    "nullable": false,
                                    "description": "The primary email address of this user"
                                  }
                                }
                              }
                            ],
                            "title": "User (Mini)",
                            "description": "A mini representation of a user, as can be returned when nested within other resources.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "user--mini"
                          },
                          {
                            "description": "The user that the membership applies to"
                          }
                        ]
                      },
                      "group": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Group (Base)",
                                "x-box-tag": "groups",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this object"
                                  },
                                  "type": {
                                    "enum": [
                                      "group"
                                    ],
                                    "type": "string",
                                    "example": "group",
                                    "description": "`group`"
                                  }
                                },
                                "description": "A base representation of a group.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "group--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Support",
                                    "description": "The name of the group"
                                  },
                                  "group_type": {
                                    "enum": [
                                      "managed_group",
                                      "all_users_group"
                                    ],
                                    "type": "string",
                                    "example": "managed_group",
                                    "description": "The type of the group."
                                  }
                                }
                              }
                            ],
                            "title": "Group (Mini)",
                            "description": "Mini representation of a group, including id and name of group.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "group--mini"
                          },
                          {
                            "description": "The group that the membership applies to"
                          }
                        ]
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "The time this membership was created."
                      },
                      "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "The time this membership was last modified."
                      }
                    },
                    "description": "Membership is used to signify that a user is part of a\ngroup.",
                    "x-box-resource-id": "group_membership"
                  }
                }
              }
            }
          ],
          "title": "Group memberships",
          "x-box-tag": "memberships",
          "description": "A list of group memberships.",
          "x-box-resource-id": "group_memberships"
        }
      ]
  get_users_me:
    description: |-
      Retrieves information about the user who is currently authenticated.
      In the case of a client-side authenticated OAuth 2.0 application
      this will be the user who authorized the app.
      In the case of a JWT, server-side authenticated application
      this will be the service account that belongs to the application
      by default.
      Use the `As-User` header to change who this API call is made on behalf of.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-users-me/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "User (Base)",
                  "x-box-tag": "users",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this user"
                    },
                    "type": {
                      "enum": [
                        "user"
                      ],
                      "type": "string",
                      "example": "user",
                      "nullable": false,
                      "description": "`user`"
                    }
                  },
                  "description": "A mini representation of a user, used when\nnested within another resource.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-resource-id": "user--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Aaron Levie",
                      "nullable": false,
                      "maxLength": 50,
                      "description": "The display name of this user"
                    },
                    "login": {
                      "type": "string",
                      "format": "email",
                      "example": "ceo@example.com",
                      "nullable": false,
                      "description": "The primary email address of this user"
                    }
                  }
                }
              ],
              "title": "User (Mini)",
              "description": "A mini representation of a user, as can be returned when nested within other resources.",
              "x-box-variant": "mini",
              "x-box-resource-id": "user--mini"
            },
            {
              "properties": {
                "phone": {
                  "type": "string",
                  "example": "6509241374",
                  "maxLength": 100,
                  "description": "The user’s phone number"
                },
                "status": {
                  "enum": [
                    "active",
                    "inactive",
                    "cannot_delete_edit",
                    "cannot_delete_edit_upload"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "The user's account status"
                },
                "address": {
                  "type": "string",
                  "example": "900 Jefferson Ave, Redwood City, CA 94063",
                  "maxLength": 255,
                  "description": "The user’s address"
                },
                "language": {
                  "type": "string",
                  "example": "en",
                  "description": "The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format."
                },
                "timezone": {
                  "type": "string",
                  "format": "timezone",
                  "example": "Africa/Bujumbura",
                  "description": "The user's timezone"
                },
                "job_title": {
                  "type": "string",
                  "example": "CEO",
                  "maxLength": 100,
                  "description": "The user’s job title"
                },
                "avatar_url": {
                  "type": "string",
                  "example": "https://www.box.com/api/avatar/large/181216415",
                  "description": "URL of the user’s avatar image"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the user object was created"
                },
                "space_used": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1237009912,
                  "description": "The amount of space in use by the user"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the user object was last modified"
                },
                "space_amount": {
                  "type": "integer",
                  "format": "int64",
                  "example": 11345156112,
                  "description": "The user’s total available space amount in bytes"
                },
                "max_upload_size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2147483648,
                  "description": "The maximum individual file size in bytes the user can have"
                },
                "notification_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "notifications@example.com",
                      "description": "The email address to send the notifications to."
                    },
                    "is_confirmed": {
                      "type": "boolean",
                      "example": true,
                      "description": "Specifies if this email address has been confirmed."
                    }
                  },
                  "description": "An alternate notification email address to which email\nnotifications are sent. When it's confirmed, this will be\nthe email address to which notifications are sent instead of\nto the primary email address."
                }
              }
            }
          ],
          "title": "User",
          "description": "A standard representation of a user, as returned from any\nuser API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "user"
        }
      ]
  get_webhooks:
    description: |-
      Returns all defined webhooks for the requesting application.
      This API only returns webhooks that are applied to files or folders that are owned by the authenticated user. This means that an admin can not see webhooks created by a service account unless the admin has access to those folders, and vice versa.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-webhooks/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                },
                "next_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 3000,
                  "description": "The marker for the start of the next page of results."
                },
                "prev_marker": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "description": "The marker for the start of the previous page of results."
                }
              },
              "description": "The part of an API response that describes marker\nbased pagination"
            },
            {
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Webhook",
                    "x-box-tag": "webhooks",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "11446498",
                        "description": "The unique identifier for this webhook."
                      },
                      "type": {
                        "enum": [
                          "webhook"
                        ],
                        "type": "string",
                        "example": "webhook",
                        "description": "`webhook`"
                      },
                      "target": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "1231232",
                            "description": "The ID of the item to trigger a webhook"
                          },
                          "type": {
                            "enum": [
                              "file",
                              "folder"
                            ],
                            "type": "string",
                            "example": "file",
                            "description": "The type of item to trigger a webhook"
                          }
                        },
                        "description": "The item that will trigger the webhook"
                      },
                      "address": {
                        "type": "string",
                        "example": "https://example.com/webhooks",
                        "description": "The URL that is notified by this webhook"
                      },
                      "triggers": {
                        "type": "array",
                        "items": {
                          "enum": [
                            "FILE.UPLOADED",
                            "FILE.PREVIEWED",
                            "FILE.DOWNLOADED",
                            "FILE.TRASHED",
                            "FILE.DELETED",
                            "FILE.RESTORED",
                            "FILE.COPIED",
                            "FILE.MOVED",
                            "FILE.LOCKED",
                            "FILE.UNLOCKED",
                            "FILE.RENAMED",
                            "COMMENT.CREATED",
                            "COMMENT.UPDATED",
                            "COMMENT.DELETED",
                            "TASK_ASSIGNMENT.CREATED",
                            "TASK_ASSIGNMENT.UPDATED",
                            "METADATA_INSTANCE.CREATED",
                            "METADATA_INSTANCE.UPDATED",
                            "METADATA_INSTANCE.DELETED",
                            "FOLDER.CREATED",
                            "FOLDER.RENAMED",
                            "FOLDER.DOWNLOADED",
                            "FOLDER.RESTORED",
                            "FOLDER.DELETED",
                            "FOLDER.COPIED",
                            "FOLDER.MOVED",
                            "FOLDER.TRASHED",
                            "WEBHOOK.DELETED",
                            "COLLABORATION.CREATED",
                            "COLLABORATION.ACCEPTED",
                            "COLLABORATION.REJECTED",
                            "COLLABORATION.REMOVED",
                            "COLLABORATION.UPDATED",
                            "SHARED_LINK.DELETED",
                            "SHARED_LINK.CREATED",
                            "SHARED_LINK.UPDATED"
                          ],
                          "type": "string",
                          "title": "Webhook Trigger",
                          "example": "FILE.UPLOADED",
                          "description": "The event name that triggered this webhook"
                        },
                        "example": [
                          "FILE.UPLOADED"
                        ],
                        "description": "An array of event names that this webhook is\nto be triggered for"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "description": "A timestamp identifying the time that\nthe webhook was created."
                      },
                      "created_by": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "User (Base)",
                                "x-box-tag": "users",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this user"
                                  },
                                  "type": {
                                    "enum": [
                                      "user"
                                    ],
                                    "type": "string",
                                    "example": "user",
                                    "nullable": false,
                                    "description": "`user`"
                                  }
                                },
                                "description": "A mini representation of a user, used when\nnested within another resource.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-resource-id": "user--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Aaron Levie",
                                    "nullable": false,
                                    "maxLength": 50,
                                    "description": "The display name of this user"
                                  },
                                  "login": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "ceo@example.com",
                                    "nullable": false,
                                    "description": "The primary email address of this user"
                                  }
                                }
                              }
                            ],
                            "title": "User (Mini)",
                            "description": "A mini representation of a user, as can be returned when nested within other resources.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "user--mini"
                          },
                          {
                            "description": "The user who created the webhook"
                          }
                        ]
                      }
                    },
                    "description": "Represents a configured webhook.",
                    "x-box-resource-id": "webhook"
                  }
                }
              }
            }
          ],
          "title": "Webhooks",
          "x-box-tag": "webhooks",
          "description": "A list of webhooks.",
          "x-box-resource-id": "webhooks"
        }
      ]
  get_webhooks_id:
    description: |-
      Retrieves a specific webhook
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-webhooks-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Webhook",
          "x-box-tag": "webhooks",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this webhook."
            },
            "type": {
              "enum": [
                "webhook"
              ],
              "type": "string",
              "example": "webhook",
              "description": "`webhook`"
            },
            "target": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1231232",
                  "description": "The ID of the item to trigger a webhook"
                },
                "type": {
                  "enum": [
                    "file",
                    "folder"
                  ],
                  "type": "string",
                  "example": "file",
                  "description": "The type of item to trigger a webhook"
                }
              },
              "description": "The item that will trigger the webhook"
            },
            "address": {
              "type": "string",
              "example": "https://example.com/webhooks",
              "description": "The URL that is notified by this webhook"
            },
            "triggers": {
              "type": "array",
              "items": {
                "enum": [
                  "FILE.UPLOADED",
                  "FILE.PREVIEWED",
                  "FILE.DOWNLOADED",
                  "FILE.TRASHED",
                  "FILE.DELETED",
                  "FILE.RESTORED",
                  "FILE.COPIED",
                  "FILE.MOVED",
                  "FILE.LOCKED",
                  "FILE.UNLOCKED",
                  "FILE.RENAMED",
                  "COMMENT.CREATED",
                  "COMMENT.UPDATED",
                  "COMMENT.DELETED",
                  "TASK_ASSIGNMENT.CREATED",
                  "TASK_ASSIGNMENT.UPDATED",
                  "METADATA_INSTANCE.CREATED",
                  "METADATA_INSTANCE.UPDATED",
                  "METADATA_INSTANCE.DELETED",
                  "FOLDER.CREATED",
                  "FOLDER.RENAMED",
                  "FOLDER.DOWNLOADED",
                  "FOLDER.RESTORED",
                  "FOLDER.DELETED",
                  "FOLDER.COPIED",
                  "FOLDER.MOVED",
                  "FOLDER.TRASHED",
                  "WEBHOOK.DELETED",
                  "COLLABORATION.CREATED",
                  "COLLABORATION.ACCEPTED",
                  "COLLABORATION.REJECTED",
                  "COLLABORATION.REMOVED",
                  "COLLABORATION.UPDATED",
                  "SHARED_LINK.DELETED",
                  "SHARED_LINK.CREATED",
                  "SHARED_LINK.UPDATED"
                ],
                "type": "string",
                "title": "Webhook Trigger",
                "example": "FILE.UPLOADED",
                "description": "The event name that triggered this webhook"
              },
              "example": [
                "FILE.UPLOADED"
              ],
              "description": "An array of event names that this webhook is\nto be triggered for"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "A timestamp identifying the time that\nthe webhook was created."
            },
            "created_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who created the webhook"
                }
              ]
            }
          },
          "description": "Represents a configured webhook.",
          "x-box-resource-id": "webhook"
        }
      ]
  get_web_links_id:
    description: |-
      Retrieve information about a web link.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-web-links-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Web link (Base)",
                  "x-box-tag": "web_links",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this web link"
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "description": "The entity tag of this web link. Used with `If-Match`\nheaders."
                    },
                    "type": {
                      "enum": [
                        "web_link"
                      ],
                      "type": "string",
                      "example": "web_link",
                      "description": "`web_link`"
                    }
                  },
                  "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard"
                  ],
                  "x-box-resource-id": "web_link--base"
                },
                {
                  "properties": {
                    "url": {
                      "type": "string",
                      "example": "https://www.example.com/example/1234",
                      "description": "The URL this web link points to"
                    },
                    "name": {
                      "type": "string",
                      "example": "My Bookmark",
                      "description": "The name of the web link"
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Web link (Mini)",
              "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
              "x-box-variant": "mini",
              "x-box-resource-id": "web_link--mini"
            },
            {
              "properties": {
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The parent object the web link belongs to"
                    }
                  ]
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this web link"
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "When this file will be permanently deleted."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this file was created on Box’s servers."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this web link"
                    }
                  ]
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "When this file was last moved to the trash."
                },
                "description": {
                  "type": "string",
                  "example": "Example page",
                  "description": "The description accompanying the web link. This is\nvisible within the Box web application."
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "Whether this item is deleted or not. Values include `active`, `trashed` if the file has been moved to the trash, and `deleted` if the file has been permanently deleted"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this file was last updated on the Box\nservers."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this web link"
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link object for this item. Will be\n`null` if no shared link has been created."
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this web link is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                }
              }
            }
          ],
          "title": "Web link",
          "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
          "x-box-variant": "standard",
          "x-box-resource-id": "web_link"
        }
      ]
  get_web_links_id_trash:
    description: |-
      Retrieves a web link that has been moved to the trash.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-web-links-id-trash/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Folder (Base)",
                  "x-box-tag": "folders",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "folder"
                      ],
                      "type": "string",
                      "example": "folder",
                      "nullable": false,
                      "description": "`folder`"
                    }
                  },
                  "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "folder--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contracts",
                      "nullable": false,
                      "description": "The name of the folder."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Folder (Mini)",
              "description": "A mini representation of a file version, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "folder--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 629644,
                  "nullable": false,
                  "description": "The folder size in bytes.\nBe careful parsing this integer as its\nvalue can get very large."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The optional folder that this folder is located within.\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time and which the folder will be automatically be deleted."
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder was put in the trash."
                },
                "description": {
                  "allOf": [
                    {
                      "type": "string",
                      "example": "Legal contracts for the new ACME deal",
                      "nullable": false,
                      "maxLength": 256,
                      "description": "The optional description of this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                    }
                  ],
                  "nullable": true
                },
                "item_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1000,
                              "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                            },
                            "order": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "by": {
                                    "type": "string",
                                    "example": "type",
                                    "description": "The field to order by"
                                  },
                                  "direction": {
                                    "enum": [
                                      "ASC",
                                      "DESC"
                                    ],
                                    "type": "string",
                                    "example": "ASC",
                                    "description": "The direction to order by, either ascending or descending"
                                  }
                                },
                                "description": "The order in which a pagination is ordered"
                              },
                              "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "offset": {
                              "type": "integer",
                              "format": "int64",
                              "example": 2000,
                              "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "total_count": {
                              "type": "integer",
                              "format": "int64",
                              "example": 5000,
                              "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            }
                          },
                          "description": "The part of an API response that describes pagination"
                        },
                        {
                          "properties": {
                            "entries": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File (Base)",
                                        "x-box-tag": "files",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "file"
                                            ],
                                            "type": "string",
                                            "example": "file",
                                            "nullable": false,
                                            "description": "`file`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contract.pdf",
                                            "description": "The name of the file"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "format": "digest",
                                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                            "nullable": false,
                                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          },
                                          "file_version": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "title": "File version (Base)",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "example": "12345",
                                                        "nullable": false,
                                                        "description": "The unique identifier that represent a file version."
                                                      },
                                                      "type": {
                                                        "enum": [
                                                          "file_version"
                                                        ],
                                                        "type": "string",
                                                        "example": "file_version",
                                                        "nullable": false,
                                                        "description": "`file_version`"
                                                      }
                                                    },
                                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                    "x-box-variant": "base",
                                                    "x-box-variants": [
                                                      "base",
                                                      "mini",
                                                      "standard"
                                                    ],
                                                    "x-box-sanitized": true,
                                                    "x-box-resource-id": "file_version--base"
                                                  },
                                                  {
                                                    "properties": {
                                                      "sha1": {
                                                        "type": "string",
                                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                        "description": "The SHA1 hash of this version of the file."
                                                      }
                                                    }
                                                  }
                                                ],
                                                "title": "File version (Mini)",
                                                "description": "A mini representation of a file version, used when nested within another resource.",
                                                "x-box-variant": "mini",
                                                "x-box-resource-id": "file_version--mini"
                                              },
                                              {
                                                "description": "The information about the current version of the file."
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File (Mini)",
                                    "description": "A mini representation of a file, used when\nnested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Folder (Base)",
                                        "x-box-tag": "folders",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "folder"
                                            ],
                                            "type": "string",
                                            "example": "folder",
                                            "nullable": false,
                                            "description": "`folder`"
                                          }
                                        },
                                        "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "folder--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contracts",
                                            "nullable": false,
                                            "description": "The name of the folder."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Folder (Mini)",
                                    "description": "A mini representation of a file version, used when nested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "folder--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Web link (Base)",
                                        "x-box-tag": "web_links",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "11446498",
                                            "description": "The unique identifier for this web link"
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "description": "The entity tag of this web link. Used with `If-Match` headers."
                                          },
                                          "type": {
                                            "enum": [
                                              "web_link"
                                            ],
                                            "type": "string",
                                            "example": "web_link",
                                            "description": "`web_link`"
                                          }
                                        },
                                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-resource-id": "web_link--base"
                                      },
                                      {
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com/example/1234",
                                            "description": "The URL this web link points to"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "My Bookmark",
                                            "description": "The name of the web link"
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Web link (Mini)",
                                    "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "web_link--mini"
                                  }
                                ]
                              },
                              "description": "The items in this collection."
                            }
                          }
                        }
                      ],
                      "title": "Items",
                      "x-box-tag": "folders",
                      "description": "A list of files, folders, and web links in\ntheir mini representation.",
                      "x-box-resource-id": "items"
                    },
                    {
                      "description": "A page of the items that are in the folder.\nThis field can only be requested when querying a folder's information, not when querying a folder's items."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was originally\ncreated."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was last updated."
                },
                "folder_upload_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "upload.Contracts.asd7asd@u.box.com",
                      "nullable": false,
                      "description": "The optional upload email address for this folder."
                    },
                    "access": {
                      "enum": [
                        "open",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "nullable": false,
                      "description": "When this parameter has been set, users can email files to the email address that has been automatically created for this folder.\nTo create an email address, set this property either when creating or updating the folder.\nWhen set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.\nWhen set to `open` it will accept emails from any email address."
                    }
                  }
                }
              }
            }
          ],
          "title": "Folder",
          "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "folder"
        }
      ]
  get_zip_downloads_id_content:
    description: |-
      Returns the contents of a `zip` archive in binary format. This URL does not require any form of authentication and could be used in a user's browser to download the archive to a user's device.
      By default, this URL is only valid for a few seconds from the creation of the request for this archive. Once a download has started it can not be stopped and resumed, instead a new request for a zip archive would need to be created.
      The URL of this endpoint should not be considered as fixed. Instead, use the [Create zip download](e://post_zip_downloads) API to request to create a `zip` archive, and then follow the `download_url` field in the response to this endpoint.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-zip-downloads-id-content/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "string",
          "format": "binary",
          "description": "The binary content of the archive, which will include the items\nrequested for this download."
        }
      ]
  get_zip_downloads_id_status:
    description: |-
      Returns the download status of a `zip` archive, allowing an application to inspect the progress of the download as well as the number of items that might have been skipped.
      This endpoint can only be accessed once the download has started. Subsequently this endpoint is valid for 12 hours from the start of the download.
      The URL of this endpoint should not be considered as fixed. Instead, use the [Create zip download](e://post_zip_downloads) API to request to create a `zip` archive, and then follow the `status_url` field in the response to this endpoint.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/get-zip-downloads-id-status/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Zip download status",
          "x-box-tag": "zip_downloads",
          "properties": {
            "state": {
              "enum": [
                "in_progress",
                "failed",
                "success"
              ],
              "type": "string",
              "default": "in_progeress",
              "example": "success",
              "description": "The state of the archive being downloaded."
            },
            "total_file_count": {
              "type": "integer",
              "example": 20,
              "maximum": 10000,
              "minimum": 0,
              "description": "The total number of files in the archive."
            },
            "skipped_file_count": {
              "type": "integer",
              "example": 5,
              "minimum": 0,
              "description": "The number of files that have been skipped as they could not be downloaded. In many cases this is due to permission issues that have surfaced between the creation of the request for the archive and the archive being downloaded."
            },
            "skipped_folder_count": {
              "type": "integer",
              "example": 5,
              "minimum": 0,
              "description": "The number of folders that have been skipped as they could not be downloaded. In many cases this is due to permission issues that have surfaced between the creation of the request for the archive and the archive being downloaded."
            },
            "downloaded_file_count": {
              "type": "integer",
              "example": 10,
              "minimum": 0,
              "description": "The number of files that have already been downloaded."
            }
          },
          "description": "The status of a `zip` archive being downloaded.",
          "x-box-resource-id": "zip_download_status",
          "x-box-reference-category": "zip_downloads"
        }
      ]
  options_events:
    description: |-
      Returns a list of real-time servers that can be used for long-polling updates to the [event stream](#get-events).
      Long polling is the concept where a HTTP request is kept open until the server sends a response, then repeating the process over and over to receive updated responses.
      Long polling the event stream can only be used for user events, not for enterprise events.
      To use long polling, first use this endpoint to retrieve a list of long poll URLs. Next, make a long poll request to any of the provided URLs.
      When an event occurs in monitored account a response with the value `new_change` will be sent. The response contains no other details as it only serves as a prompt to take further action such as sending a request to the [events endpoint](#get-events) with the last known `stream_position`.
      After the server sends this response it closes the connection. You must now repeat the long poll process to begin listening for events again.
      If no events occur for a while and the connection times out you will receive a response with the value `reconnect`. When you receive this response you’ll make another call to this endpoint to restart the process.
      If you receive no events in `retry_timeout` seconds then you will need to make another request to the real-time server (one of the URLs in the response for this endpoint). This might be necessary due to network errors.
      Finally, if you receive a `max_retries` error when making a request to the real-time server, you should start over by making a call to this endpoint first.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/options-events/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "title": "Real-time servers",
          "x-box-tag": "events",
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "title": "Real-time server",
                "properties": {
                  "ttl": {
                    "type": "integer",
                    "example": 10,
                    "description": "The time in minutes for which this server is available"
                  },
                  "url": {
                    "type": "string",
                    "example": "http://2.realtime.services.box.net/subscribe?channel=cc807c9c4869ffb1c81a&stream_type=all",
                    "description": "The URL for the server."
                  },
                  "type": {
                    "type": "string",
                    "example": "realtime_server",
                    "description": "`realtime_server`"
                  },
                  "max_retries": {
                    "type": "integer",
                    "example": 10,
                    "description": "The maximum number of retries this server will\nallow before a new long poll should be started by\ngetting a [new list of server](#options-events)."
                  },
                  "retry_timeout": {
                    "type": "integer",
                    "example": 610,
                    "description": "The maximum number of seconds without a response\nafter which you should retry the long poll connection.\nThis helps to overcome network issues where the long\npoll looks to be working but no packages are coming\nthrough."
                  }
                },
                "description": "A real-time server that can be used for\nlong polling user events",
                "x-box-resource-id": "realtime_server"
              }
            },
            "chunk_size": {
              "type": "integer",
              "format": "int64",
              "example": 1,
              "description": "The number of items in this response."
            }
          },
          "description": "A list of real-time servers that can\nbe used for long-polling.",
          "x-box-resource-id": "realtime_servers"
        }
      ]
  options_files_content:
    description: |-
      Performs a check to verify that a file will be accepted by Box
      before you upload the entire file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/options-files-content/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "File.mp4",
              "description": "The name for the file"
            },
            "size": {
              "type": "integer",
              "format": "int32",
              "example": 1024,
              "description": "The size of the file in bytes"
            },
            "parent": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "123",
                      "description": "The ID of parent item"
                    }
                  },
                  "description": "The parent for this item"
                },
                {
                  "description": "The parent folder to upload the file to"
                }
              ]
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Upload URL",
          "x-box-tag": "uploads",
          "properties": {
            "upload_url": {
              "type": "string",
              "example": "https://upload-las.app.box.com/api/2.0/files/content?upload_session_id=1234",
              "description": "A URL for an upload session that can be used to upload\nthe file."
            },
            "upload_token": {
              "type": "string",
              "example": "Pc3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQP",
              "description": "An optional access token to use to upload the file"
            }
          },
          "description": "The details for the upload session for the file.",
          "x-box-resource-id": "upload_url"
        }
      ]
  post_collaborations:
    description: |-
      Adds a collaboration for a single user or a single group to a file
      or folder.
      Collaborations can be created using email address, user IDs, or a
      group IDs.
      If a collaboration is being created with a group, access to
      this endpoint is dependent on the group's ability to be invited.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-collaborations/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  post_collaboration_whitelist_entries:
    description: |-
      Creates a new entry in the list of allowed domains to allow
      collaboration for.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-collaboration-whitelist-entries/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "domain",
            "direction"
          ],
          "properties": {
            "domain": {
              "type": "string",
              "example": "example.com",
              "description": "The domain to add to the list of allowed domains."
            },
            "direction": {
              "enum": [
                "inbound",
                "outbound",
                "both"
              ],
              "type": "string",
              "example": "inbound",
              "description": "The direction in which to allow collaborations."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Allowed collaboration domain",
          "x-box-tag": "collaboration_allowlist_entries",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this entry"
            },
            "type": {
              "enum": [
                "collaboration_whitelist_entry"
              ],
              "type": "string",
              "example": "collaboration_whitelist_entry",
              "description": "`collaboration_whitelist_entry`"
            },
            "domain": {
              "type": "string",
              "example": "example.com",
              "description": "The whitelisted domain"
            },
            "direction": {
              "enum": [
                "inbound",
                "outbound",
                "both"
              ],
              "type": "string",
              "example": "both",
              "description": "The direction of the collaborations to allow."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The time the entry was created at"
            },
            "enterprise": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Enterprise",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this enterprise."
                    },
                    "name": {
                      "type": "string",
                      "example": "Acme Inc.",
                      "description": "The name of the enterprise"
                    },
                    "type": {
                      "enum": [
                        "enterprise"
                      ],
                      "type": "string",
                      "example": "enterprise",
                      "description": "`enterprise`"
                    }
                  },
                  "description": "A representation of a Box enterprise"
                },
                {
                  "description": "The enterprise this list is applied to"
                }
              ]
            }
          },
          "description": "An entry that describes an approved domain for which users can collaborate with files and folders in your enterprise or vice versa.",
          "x-box-resource-id": "collaboration_allowlist_entry"
        }
      ]
  post_collaboration_whitelist_exempt_targets:
    description: |-
      Exempts a user from the restrictions set out by the allowed list of domains for collaborations.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-collaboration-whitelist-exempt-targets/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "user"
          ],
          "properties": {
            "user": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "23522323",
                  "description": "The ID of the user to exempt."
                }
              },
              "description": "The user to exempt."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Allowed collaboration domains user exemption",
          "x-box-tag": "collaboration_allowlist_exempt_targets",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this exemption"
            },
            "type": {
              "enum": [
                "collaboration_whitelist"
              ],
              "type": "string",
              "example": "collaboration_whitelist",
              "description": "`collaboration_whitelist`"
            },
            "user": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Enterprise",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this enterprise."
                    },
                    "name": {
                      "type": "string",
                      "example": "Acme Inc.",
                      "description": "The name of the enterprise"
                    },
                    "type": {
                      "enum": [
                        "enterprise"
                      ],
                      "type": "string",
                      "example": "enterprise",
                      "description": "`enterprise`"
                    }
                  },
                  "description": "A representation of a Box enterprise"
                },
                {
                  "description": "The user that has been exempt"
                }
              ]
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The time the entry was created"
            },
            "enterprise": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Enterprise",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this enterprise."
                    },
                    "name": {
                      "type": "string",
                      "example": "Acme Inc.",
                      "description": "The name of the enterprise"
                    },
                    "type": {
                      "enum": [
                        "enterprise"
                      ],
                      "type": "string",
                      "example": "enterprise",
                      "description": "`enterprise`"
                    }
                  },
                  "description": "A representation of a Box enterprise"
                },
                {
                  "description": "The enterprise this entry belongs to"
                }
              ]
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The time the entry was modified"
            }
          },
          "description": "The user that is exempt from any of the restrictions imposed by the list of allowed collaboration domains for this enterprise.",
          "x-box-resource-id": "collaboration_allowlist_exempt_target"
        }
      ]
  post_comments:
    description: |-
      Adds a comment by the user to a specific file, or
      as a reply to an other comment.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-comments/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "message"
          ],
          "properties": {
            "item": {
              "type": "object",
              "required": [
                "id",
                "type"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "11446498",
                  "description": "The ID of the item"
                },
                "type": {
                  "enum": [
                    "file",
                    "comment"
                  ],
                  "type": "string",
                  "example": "file",
                  "description": "The type of the item that this comment will be placed on."
                }
              },
              "description": "The item to attach the comment to."
            },
            "message": {
              "type": "string",
              "example": "Review completed!",
              "description": "The text of the comment.\nTo mention a user, use the `tagged_message`\nparameter instead."
            },
            "tagged_message": {
              "type": "string",
              "example": "@[1234:John] Review completed!",
              "description": "The text of the comment, including `@[user_id:name]`\nsomewhere in the message to mention another user, which\nwill send them an email notification, letting them know\nthey have been mentioned.\nThe `user_id` is the target user's ID, where the `name`\ncan be any custom phrase. In the Box UI this name will\nlink to the user's profile.\nIf you are not mentioning another user, use `message`\ninstead."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Comment (Base)",
              "x-box-tag": "comments",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "11446498",
                  "description": "The unique identifier for this comment."
                },
                "type": {
                  "enum": [
                    "comment"
                  ],
                  "type": "string",
                  "example": "comment",
                  "description": "`comment`"
                }
              },
              "description": "Base representation of a comment.",
              "x-box-variant": "base",
              "x-box-variants": [
                "base",
                "standard",
                "full"
              ],
              "x-box-sanitized": true,
              "x-box-resource-id": "comment--base"
            },
            {
              "properties": {
                "item": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Reference",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this object"
                        },
                        "type": {
                          "type": "string",
                          "example": "file",
                          "description": "The type for this object"
                        }
                      },
                      "description": "The bare basic reference for an object"
                    },
                    {
                      "description": "The file this comment was placed on"
                    }
                  ]
                },
                "message": {
                  "type": "string",
                  "example": "@Aaron Levie these tigers are cool!",
                  "description": "The text of the comment, as provided by the user"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "The time this comment was created"
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "A mini user object representing the author of the\ncomment"
                    }
                  ]
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "The time this comment was last modified"
                },
                "is_reply_comment": {
                  "type": "boolean",
                  "example": true,
                  "description": "Whether or not this comment is a reply to another\ncomment"
                }
              }
            }
          ],
          "title": "Comment",
          "description": "Standard representation of a comment.",
          "x-box-variant": "standard",
          "x-box-resource-id": "comment"
        }
      ]
  post_file_requests_id_copy:
    description: |-
      Copies an existing file request that is already present on one folder,
      and applies it to another folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-file-requests-id-copy/
    example:
      inputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "File Request (Update)",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Please upload required documents",
                  "description": "An optional new title for the file request. This can be\nused to change the title of the file request.\nThis will default to the value on the existing file request."
                },
                "status": {
                  "enum": [
                    "active",
                    "inactive"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "An optional new status of the file request.\nWhen the status is set to `inactive`, the file request\nwill no longer accept new submissions, and any visitor\nto the file request URL will receive a `HTTP 404` status\ncode.\nThis will default to the value on the existing file request."
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2020-09-28T18:53:43.000Z",
                  "description": "The date after which a file request will no longer accept new submissions.\nAfter this date, the `status` will automatically be set to `inactive`.\nThis will default to the value on the existing file request."
                },
                "description": {
                  "type": "string",
                  "example": "Please upload required documents",
                  "description": "An optional new description for the file request. This can be used to change the description of the file request.\nThis will default to the value on the existing file request."
                },
                "is_email_required": {
                  "type": "boolean",
                  "example": true,
                  "description": "Whether a file request submitter is required to provide\ntheir email address.\nWhen this setting is set to true, the Box UI will show\nan email field on the file request form.\nThis will default to the value on the existing file request."
                },
                "is_description_required": {
                  "type": "boolean",
                  "example": true,
                  "description": "Whether a file request submitter is required to provide\na description of the files they are submitting.\nWhen this setting is set to true, the Box UI will show\na description field on the file request form.\nThis will default to the value on the existing file request."
                }
              },
              "description": "The request body to update a file request."
            },
            {
              "properties": {
                "folder": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "42037322",
                      "description": "The ID of the folder to associate the new\nfile request to."
                    },
                    "type": {
                      "enum": [
                        "folder"
                      ],
                      "type": "string",
                      "example": "folder",
                      "description": "`folder`"
                    }
                  },
                  "description": "The folder to associate the new file request to."
                }
              }
            }
          ],
          "title": "File Request (Copy)",
          "required": [
            "folder"
          ],
          "description": "The request body to copy a file request."
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "File Request",
          "x-box-tag": "file_requests",
          "properties": {
            "id": {
              "type": "string",
              "example": "42037322",
              "readOnly": true,
              "description": "The unique identifier for this file request."
            },
            "url": {
              "type": "string",
              "example": "https://cloud.app.box.com/f/19e57f40ace247278a8e3d336678c64a",
              "readOnly": true,
              "description": "The generated URL for this file request. This URL can be shared\nwith users to let them upload files to the associated folder."
            },
            "etag": {
              "type": "string",
              "example": "1",
              "nullable": true,
              "description": "The HTTP `etag` of this file. This can be used in combination with the `If-Match` header when updating a file request. By providing that header, a change will only be performed on the  file request if the `etag` on the file request still matches the `etag` provided in the `If-Match` header."
            },
            "type": {
              "enum": [
                "file-request"
              ],
              "type": "string",
              "example": "file-request",
              "readOnly": true,
              "description": "`file-request`"
            },
            "title": {
              "type": "string",
              "example": "Please upload documents",
              "description": "The title of file request. This is shown\nin the Box UI to users uploading files.\nThis defaults to title of the file request that was\ncopied to create this file request."
            },
            "folder": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Folder (Base)",
                      "x-box-tag": "folders",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                        },
                        "etag": {
                          "type": "string",
                          "example": "1",
                          "nullable": true,
                          "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                        },
                        "type": {
                          "enum": [
                            "folder"
                          ],
                          "type": "string",
                          "example": "folder",
                          "nullable": false,
                          "description": "`folder`"
                        }
                      },
                      "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "folder--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Contracts",
                          "nullable": false,
                          "description": "The name of the folder."
                        },
                        "sequence_id": {
                          "allOf": [
                            {
                              "type": "string",
                              "example": "3",
                              "nullable": false,
                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                            },
                            {
                              "nullable": false
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "title": "Folder (Mini)",
                  "description": "A mini representation of a file version, used when\nnested under another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "folder--mini"
                },
                {
                  "description": "The folder that this file request is associated with.\nFiles submitted through the file request form will be\nuploaded to this folder."
                }
              ],
              "nullable": false
            },
            "status": {
              "enum": [
                "active",
                "inactive"
              ],
              "type": "string",
              "example": "active",
              "description": "The status of the file request. This defaults\nto `active`.\nWhen the status is set to `inactive`, the file request\nwill no longer accept new submissions, and any visitor\nto the file request URL will receive a `HTTP 404` status\ncode.\nThis defaults to status of file request that was\ncopied to create this file request."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2020-09-28T18:53:43.000Z",
              "nullable": false,
              "description": "The date and time when the file request was created."
            },
            "created_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who created this file request."
                }
              ]
            },
            "expires_at": {
              "type": "string",
              "format": "date-time",
              "example": "2020-09-28T18:53:43.000Z",
              "description": "The date after which a file request will no longer accept new\nsubmissions.\nAfter this date, the `status` will automatically be set to\n`inactive`."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2020-09-28T18:53:43.000Z",
              "nullable": false,
              "description": "The date and time when the file request was last updated."
            },
            "updated_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who last modified this file request."
                },
                {
                  "nullable": false
                }
              ]
            },
            "description": {
              "type": "string",
              "example": "Following documents are requested for your process",
              "nullable": true,
              "description": "The optional description of this file request. This is\nshown in the Box UI to users uploading files.\nThis defaults to description of the file request that was\ncopied to create this file request."
            },
            "is_email_required": {
              "type": "boolean",
              "example": true,
              "description": "Whether a file request submitter is required to provide\ntheir email address.\nWhen this setting is set to true, the Box UI will show\nan email field on the file request form.\nThis defaults to setting of file request that was\ncopied to create this file request."
            },
            "is_description_required": {
              "type": "boolean",
              "example": true,
              "description": "Whether a file request submitter is required to provide\na description of the files they are submitting.\nWhen this setting is set to true, the Box UI will show\na description field on the file request form.\nThis defaults to setting of file request that was\ncopied to create this file request."
            }
          },
          "description": "A standard representation of a file request, as returned\nfrom any file request API endpoints by default.",
          "x-box-resource-id": "file_request"
        }
      ]
  post_files_content:
    description: |-
      Uploads a small file to Box. For file sizes over 50MB we recommend
      using the Chunk Upload APIs.
      # Request body order
      The `attributes` part of the body must come **before** the
      `file` part. Requests that do not follow this format when
      uploading the file will receive a HTTP `400` error with a
      `metadata_after_file_contents` error code.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-files-content/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "attributes",
            "file"
          ],
          "properties": {
            "file": {
              "type": "string",
              "format": "binary",
              "description": "The content of the file to upload to Box.\n<Message warning>\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n</Message>"
            },
            "attributes": {
              "type": "object",
              "required": [
                "name",
                "parent"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Photo.png",
                  "description": "The name of the file"
                },
                "parent": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "124132",
                      "description": "The id of the parent folder. Use\n`0` for the user's root folder."
                    }
                  },
                  "description": "The parent folder to upload the file to"
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "Defines the time the file was originally created at.\nIf not set, the upload time will be used."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "Defines the time the file was last modified at.\nIf not set, the upload time will be used."
                }
              },
              "description": "The additional attributes of the file being uploaded. Mainly the name and the parent folder. These attributes are part of the multi part request body and are in JSON format.\n<Message warning>\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n</Message>"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Files",
          "x-box-tag": "files",
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "title": "File (Base)",
                        "x-box-tag": "files",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "12345",
                            "nullable": false,
                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                          },
                          "etag": {
                            "type": "string",
                            "example": "1",
                            "nullable": true,
                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                          },
                          "type": {
                            "enum": [
                              "file"
                            ],
                            "type": "string",
                            "example": "file",
                            "nullable": false,
                            "description": "`file`"
                          }
                        },
                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                        "x-box-variant": "base",
                        "x-box-variants": [
                          "base",
                          "mini",
                          "standard",
                          "full"
                        ],
                        "x-box-sanitized": true,
                        "x-box-resource-id": "file--base"
                      },
                      {
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Contract.pdf",
                            "description": "The name of the file"
                          },
                          "sha1": {
                            "type": "string",
                            "format": "digest",
                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                            "nullable": false,
                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                          },
                          "sequence_id": {
                            "allOf": [
                              {
                                "type": "string",
                                "example": "3",
                                "nullable": false,
                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                              },
                              {
                                "nullable": false
                              }
                            ]
                          },
                          "file_version": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "File version (Base)",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "12345",
                                        "nullable": false,
                                        "description": "The unique identifier that represent a file version."
                                      },
                                      "type": {
                                        "enum": [
                                          "file_version"
                                        ],
                                        "type": "string",
                                        "example": "file_version",
                                        "nullable": false,
                                        "description": "`file_version`"
                                      }
                                    },
                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard"
                                    ],
                                    "x-box-sanitized": true,
                                    "x-box-resource-id": "file_version--base"
                                  },
                                  {
                                    "properties": {
                                      "sha1": {
                                        "type": "string",
                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                        "description": "The SHA1 hash of this version of the file."
                                      }
                                    }
                                  }
                                ],
                                "title": "File version (Mini)",
                                "description": "A mini representation of a file version, used when nested within another resource.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "file_version--mini"
                              },
                              {
                                "description": "The information about the current version of the file."
                              }
                            ]
                          }
                        }
                      }
                    ],
                    "title": "File (Mini)",
                    "description": "A mini representation of a file, used when\nnested under another resource.",
                    "x-box-variant": "mini",
                    "x-box-resource-id": "file--mini"
                  },
                  {
                    "properties": {
                      "size": {
                        "type": "integer",
                        "example": 629644,
                        "nullable": false,
                        "description": "The file size in bytes. Be careful parsing this integer as it can get very large and cause an integer overflow."
                      },
                      "parent": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          {
                            "description": "The folder that this file is located within."
                          }
                        ],
                        "nullable": true
                      },
                      "owned_by": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "User (Base)",
                                "x-box-tag": "users",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this user"
                                  },
                                  "type": {
                                    "enum": [
                                      "user"
                                    ],
                                    "type": "string",
                                    "example": "user",
                                    "nullable": false,
                                    "description": "`user`"
                                  }
                                },
                                "description": "A mini representation of a user, used when\nnested within another resource.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-resource-id": "user--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Aaron Levie",
                                    "nullable": false,
                                    "maxLength": 50,
                                    "description": "The display name of this user"
                                  },
                                  "login": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "ceo@example.com",
                                    "nullable": false,
                                    "description": "The primary email address of this user"
                                  }
                                }
                              }
                            ],
                            "title": "User (Mini)",
                            "description": "A mini representation of a user, as can be returned when nested within other resources.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "user--mini"
                          },
                          {
                            "description": "The user who owns this file"
                          },
                          {
                            "nullable": false
                          }
                        ]
                      },
                      "purged_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": true,
                        "description": "The time at which this file is expected to be purged\nfrom the trash."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": false,
                        "description": "The date and time when the file was created on Box."
                      },
                      "created_by": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "User (Base)",
                                "x-box-tag": "users",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this user"
                                  },
                                  "type": {
                                    "enum": [
                                      "user"
                                    ],
                                    "type": "string",
                                    "example": "user",
                                    "nullable": false,
                                    "description": "`user`"
                                  }
                                },
                                "description": "A mini representation of a user, used when\nnested within another resource.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-resource-id": "user--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Aaron Levie",
                                    "nullable": false,
                                    "maxLength": 50,
                                    "description": "The display name of this user"
                                  },
                                  "login": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "ceo@example.com",
                                    "nullable": false,
                                    "description": "The primary email address of this user"
                                  }
                                }
                              }
                            ],
                            "title": "User (Mini)",
                            "description": "A mini representation of a user, as can be returned when nested within other resources.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "user--mini"
                          },
                          {
                            "description": "The user who created this file"
                          }
                        ]
                      },
                      "trashed_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": true,
                        "description": "The time at which this file was put in the trash."
                      },
                      "description": {
                        "type": "string",
                        "example": "Contract for Q1 renewal",
                        "nullable": false,
                        "maxLength": 256,
                        "description": "The optional description of this file"
                      },
                      "item_status": {
                        "enum": [
                          "active",
                          "trashed",
                          "deleted"
                        ],
                        "type": "string",
                        "example": "active",
                        "nullable": false,
                        "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                      },
                      "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": false,
                        "description": "The date and time when the file was last updated on Box."
                      },
                      "modified_by": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "User (Base)",
                                "x-box-tag": "users",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this user"
                                  },
                                  "type": {
                                    "enum": [
                                      "user"
                                    ],
                                    "type": "string",
                                    "example": "user",
                                    "nullable": false,
                                    "description": "`user`"
                                  }
                                },
                                "description": "A mini representation of a user, used when\nnested within another resource.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-resource-id": "user--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Aaron Levie",
                                    "nullable": false,
                                    "maxLength": 50,
                                    "description": "The display name of this user"
                                  },
                                  "login": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "ceo@example.com",
                                    "nullable": false,
                                    "description": "The primary email address of this user"
                                  }
                                }
                              }
                            ],
                            "title": "User (Mini)",
                            "description": "A mini representation of a user, as can be returned when nested within other resources.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "user--mini"
                          },
                          {
                            "description": "The user who last modified this file"
                          },
                          {
                            "nullable": false
                          }
                        ]
                      },
                      "shared_link": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Shared link",
                            "properties": {
                              "url": {
                                "type": "string",
                                "format": "url",
                                "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                                "nullable": false,
                                "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                              },
                              "access": {
                                "enum": [
                                  "open",
                                  "company",
                                  "collaborators"
                                ],
                                "type": "string",
                                "example": "open",
                                "nullable": false,
                                "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                              },
                              "vanity_url": {
                                "type": "string",
                                "format": "url",
                                "example": "https://acme.app.box.com/v/my_url/",
                                "nullable": true,
                                "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                              },
                              "permissions": {
                                "type": "object",
                                "properties": {
                                  "can_preview": {
                                    "type": "boolean",
                                    "example": true,
                                    "nullable": false,
                                    "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                                  },
                                  "can_download": {
                                    "type": "boolean",
                                    "example": true,
                                    "nullable": false,
                                    "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                                  }
                                },
                                "description": "Defines if this link allows a user to preview and download an item."
                              },
                              "unshared_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-13T20:53:23.000Z",
                                "nullable": true,
                                "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                              },
                              "vanity_name": {
                                "type": "string",
                                "example": "my_url",
                                "nullable": true,
                                "description": "The custom name of a shared link, as used in the `vanity_url` field."
                              },
                              "download_url": {
                                "type": "string",
                                "format": "url",
                                "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                                "nullable": true,
                                "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                                "x-box-premium-feature": true
                              },
                              "preview_count": {
                                "type": "integer",
                                "example": 3,
                                "nullable": false,
                                "description": "The number of times this item has been previewed."
                              },
                              "download_count": {
                                "type": "integer",
                                "example": 3,
                                "nullable": false,
                                "description": "The number of times this item has been downloaded."
                              },
                              "effective_access": {
                                "enum": [
                                  "open",
                                  "company",
                                  "collaborators"
                                ],
                                "type": "string",
                                "example": "company",
                                "nullable": false,
                                "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                              },
                              "is_password_enabled": {
                                "type": "boolean",
                                "example": true,
                                "nullable": false,
                                "description": "Defines if the shared link requires a password to access the item."
                              },
                              "effective_permission": {
                                "enum": [
                                  "can_download",
                                  "can_preview"
                                ],
                                "type": "string",
                                "example": "can_download",
                                "nullable": false,
                                "description": "The effective permissions for this shared link."
                              }
                            },
                            "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                          },
                          {
                            "description": "The shared link for this file. This will be\n`null` if no shared link has been created for this\nfile."
                          },
                          {
                            "nullable": true
                          }
                        ]
                      },
                      "path_collection": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Path collection",
                            "properties": {
                              "entries": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "Folder (Base)",
                                      "x-box-tag": "folders",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "example": "12345",
                                          "nullable": false,
                                          "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                        },
                                        "etag": {
                                          "type": "string",
                                          "example": "1",
                                          "nullable": true,
                                          "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                        },
                                        "type": {
                                          "enum": [
                                            "folder"
                                          ],
                                          "type": "string",
                                          "example": "folder",
                                          "nullable": false,
                                          "description": "`folder`"
                                        }
                                      },
                                      "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                      "x-box-variant": "base",
                                      "x-box-variants": [
                                        "base",
                                        "mini",
                                        "standard",
                                        "full"
                                      ],
                                      "x-box-sanitized": true,
                                      "x-box-resource-id": "folder--base"
                                    },
                                    {
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "Contracts",
                                          "nullable": false,
                                          "description": "The name of the folder."
                                        },
                                        "sequence_id": {
                                          "allOf": [
                                            {
                                              "type": "string",
                                              "example": "3",
                                              "nullable": false,
                                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                            },
                                            {
                                              "nullable": false
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "title": "Folder (Mini)",
                                  "description": "A mini representation of a file version, used when nested under another resource.",
                                  "x-box-variant": "mini",
                                  "x-box-resource-id": "folder--mini"
                                },
                                "nullable": false,
                                "description": "The parent folders for this item"
                              },
                              "total_count": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1,
                                "nullable": false,
                                "description": "The number of folders in this list."
                              }
                            },
                            "description": "A list of parent folders for an item."
                          },
                          {
                            "description": "The tree of folders that this file is contained in, starting at the root."
                          },
                          {
                            "nullable": false
                          }
                        ]
                      },
                      "content_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": true,
                        "description": "The date and time at which this file was originally\ncreated, which might be before it was uploaded to Box."
                      },
                      "content_modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": true,
                        "description": "The date and time at which this file was last updated,\nwhich might be before it was uploaded to Box."
                      }
                    }
                  }
                ],
                "title": "File",
                "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
                "x-box-variant": "standard",
                "x-box-resource-id": "file"
              },
              "description": "A list of files"
            },
            "total_count": {
              "type": "integer",
              "format": "int64",
              "example": 1,
              "description": "The number of files."
            }
          },
          "description": "A list of files",
          "x-box-resource-id": "files"
        }
      ]
  post_files_id:
    description: |-
      Restores a file that has been moved to the trash.
      An optional new parent ID can be provided to restore the file to in case the original folder has been deleted.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-files-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Restored.docx",
              "description": "An optional new name for the file."
            },
            "parent": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "123",
                      "description": "The ID of parent item"
                    }
                  },
                  "description": "The parent for this item"
                },
                {
                  "description": "Specifies an optional ID of a folder to restore the file to when the original folder no longer exists.\nPlease be aware that this ID will only be used if the original folder no longer exists. Use this ID to provide a fallback location to restore the file to if the original location has been deleted."
                }
              ]
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "File (Base)",
                  "x-box-tag": "files",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "file"
                      ],
                      "type": "string",
                      "example": "file",
                      "nullable": false,
                      "description": "`file`"
                    }
                  },
                  "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "file--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contract.pdf",
                      "description": "The name of the file"
                    },
                    "sha1": {
                      "type": "string",
                      "format": "digest",
                      "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                      "nullable": false,
                      "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    },
                    "file_version": {
                      "allOf": [
                        {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "File version (Base)",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "12345",
                                  "nullable": false,
                                  "description": "The unique identifier that represent a file version."
                                },
                                "type": {
                                  "enum": [
                                    "file_version"
                                  ],
                                  "type": "string",
                                  "example": "file_version",
                                  "nullable": false,
                                  "description": "`file_version`"
                                }
                              },
                              "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                              "x-box-variant": "base",
                              "x-box-variants": [
                                "base",
                                "mini",
                                "standard"
                              ],
                              "x-box-sanitized": true,
                              "x-box-resource-id": "file_version--base"
                            },
                            {
                              "properties": {
                                "sha1": {
                                  "type": "string",
                                  "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                  "description": "The SHA1 hash of this version of the file."
                                }
                              }
                            }
                          ],
                          "title": "File version (Mini)",
                          "description": "A mini representation of a file version, used when\nnested within another resource.",
                          "x-box-variant": "mini",
                          "x-box-resource-id": "file_version--mini"
                        },
                        {
                          "description": "The information about the current version of the file."
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "File (Mini)",
              "description": "A mini representation of a file, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "file--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "example": 629644,
                  "nullable": false,
                  "description": "The file size in bytes. Be careful parsing this integer as it can get very large and cause an integer overflow."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The folder that this file is located within."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was created on Box."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this file"
                    }
                  ]
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file was put in the trash."
                },
                "description": {
                  "type": "string",
                  "example": "Contract for Q1 renewal",
                  "nullable": false,
                  "maxLength": 256,
                  "description": "The optional description of this file"
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was last updated on Box."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this file. This will be\n`null` if no shared link has been created for this\nfile."
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this file is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was originally\ncreated, which might be before it was uploaded to Box."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was last updated,\nwhich might be before it was uploaded to Box."
                }
              }
            }
          ],
          "title": "File",
          "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "file"
        }
      ]
  post_files_id_content:
    description: |-
      Update a file's content. For file sizes over 50MB we recommend
      using the Chunk Upload APIs.
      # Request body order
      The `attributes` part of the body must come **before** the
      `file` part. Requests that do not follow this format when
      uploading the file will receive a HTTP `400` error with a
      `metadata_after_file_contents` error code.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-files-id-content/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "attributes",
            "file"
          ],
          "properties": {
            "file": {
              "type": "string",
              "format": "binary",
              "description": "The content of the file to upload to Box.\n<Message warning>\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n</Message>"
            },
            "attributes": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Photo 2.0.png",
                  "description": "An optional new name for the file. If specified, the file\nwill be renamed when the new version is uploaded."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "Defines the time the file was last modified at.\nIf not set, the upload time will be used."
                }
              },
              "description": "The additional attributes of the file being uploaded. Mainly the name and the parent folder. These attributes are part of the multi part request body and are in JSON format.\n<Message warning>\n  The `attributes` part of the body must come **before** the\n  `file` part. Requests that do not follow this format when\n  uploading the file will receive a HTTP `400` error with a\n  `metadata_after_file_contents` error code.\n</Message>"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Files",
          "x-box-tag": "files",
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "title": "File (Base)",
                        "x-box-tag": "files",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "12345",
                            "nullable": false,
                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                          },
                          "etag": {
                            "type": "string",
                            "example": "1",
                            "nullable": true,
                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                          },
                          "type": {
                            "enum": [
                              "file"
                            ],
                            "type": "string",
                            "example": "file",
                            "nullable": false,
                            "description": "`file`"
                          }
                        },
                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                        "x-box-variant": "base",
                        "x-box-variants": [
                          "base",
                          "mini",
                          "standard",
                          "full"
                        ],
                        "x-box-sanitized": true,
                        "x-box-resource-id": "file--base"
                      },
                      {
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Contract.pdf",
                            "description": "The name of the file"
                          },
                          "sha1": {
                            "type": "string",
                            "format": "digest",
                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                            "nullable": false,
                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                          },
                          "sequence_id": {
                            "allOf": [
                              {
                                "type": "string",
                                "example": "3",
                                "nullable": false,
                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                              },
                              {
                                "nullable": false
                              }
                            ]
                          },
                          "file_version": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "File version (Base)",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "12345",
                                        "nullable": false,
                                        "description": "The unique identifier that represent a file version."
                                      },
                                      "type": {
                                        "enum": [
                                          "file_version"
                                        ],
                                        "type": "string",
                                        "example": "file_version",
                                        "nullable": false,
                                        "description": "`file_version`"
                                      }
                                    },
                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard"
                                    ],
                                    "x-box-sanitized": true,
                                    "x-box-resource-id": "file_version--base"
                                  },
                                  {
                                    "properties": {
                                      "sha1": {
                                        "type": "string",
                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                        "description": "The SHA1 hash of this version of the file."
                                      }
                                    }
                                  }
                                ],
                                "title": "File version (Mini)",
                                "description": "A mini representation of a file version, used when nested within another resource.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "file_version--mini"
                              },
                              {
                                "description": "The information about the current version of the file."
                              }
                            ]
                          }
                        }
                      }
                    ],
                    "title": "File (Mini)",
                    "description": "A mini representation of a file, used when\nnested under another resource.",
                    "x-box-variant": "mini",
                    "x-box-resource-id": "file--mini"
                  },
                  {
                    "properties": {
                      "size": {
                        "type": "integer",
                        "example": 629644,
                        "nullable": false,
                        "description": "The file size in bytes. Be careful parsing this integer as it can get very large and cause an integer overflow."
                      },
                      "parent": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          {
                            "description": "The folder that this file is located within."
                          }
                        ],
                        "nullable": true
                      },
                      "owned_by": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "User (Base)",
                                "x-box-tag": "users",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this user"
                                  },
                                  "type": {
                                    "enum": [
                                      "user"
                                    ],
                                    "type": "string",
                                    "example": "user",
                                    "nullable": false,
                                    "description": "`user`"
                                  }
                                },
                                "description": "A mini representation of a user, used when\nnested within another resource.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-resource-id": "user--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Aaron Levie",
                                    "nullable": false,
                                    "maxLength": 50,
                                    "description": "The display name of this user"
                                  },
                                  "login": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "ceo@example.com",
                                    "nullable": false,
                                    "description": "The primary email address of this user"
                                  }
                                }
                              }
                            ],
                            "title": "User (Mini)",
                            "description": "A mini representation of a user, as can be returned when nested within other resources.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "user--mini"
                          },
                          {
                            "description": "The user who owns this file"
                          },
                          {
                            "nullable": false
                          }
                        ]
                      },
                      "purged_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": true,
                        "description": "The time at which this file is expected to be purged\nfrom the trash."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": false,
                        "description": "The date and time when the file was created on Box."
                      },
                      "created_by": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "User (Base)",
                                "x-box-tag": "users",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this user"
                                  },
                                  "type": {
                                    "enum": [
                                      "user"
                                    ],
                                    "type": "string",
                                    "example": "user",
                                    "nullable": false,
                                    "description": "`user`"
                                  }
                                },
                                "description": "A mini representation of a user, used when\nnested within another resource.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-resource-id": "user--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Aaron Levie",
                                    "nullable": false,
                                    "maxLength": 50,
                                    "description": "The display name of this user"
                                  },
                                  "login": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "ceo@example.com",
                                    "nullable": false,
                                    "description": "The primary email address of this user"
                                  }
                                }
                              }
                            ],
                            "title": "User (Mini)",
                            "description": "A mini representation of a user, as can be returned when nested within other resources.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "user--mini"
                          },
                          {
                            "description": "The user who created this file"
                          }
                        ]
                      },
                      "trashed_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": true,
                        "description": "The time at which this file was put in the trash."
                      },
                      "description": {
                        "type": "string",
                        "example": "Contract for Q1 renewal",
                        "nullable": false,
                        "maxLength": 256,
                        "description": "The optional description of this file"
                      },
                      "item_status": {
                        "enum": [
                          "active",
                          "trashed",
                          "deleted"
                        ],
                        "type": "string",
                        "example": "active",
                        "nullable": false,
                        "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                      },
                      "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": false,
                        "description": "The date and time when the file was last updated on Box."
                      },
                      "modified_by": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "User (Base)",
                                "x-box-tag": "users",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this user"
                                  },
                                  "type": {
                                    "enum": [
                                      "user"
                                    ],
                                    "type": "string",
                                    "example": "user",
                                    "nullable": false,
                                    "description": "`user`"
                                  }
                                },
                                "description": "A mini representation of a user, used when\nnested within another resource.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-resource-id": "user--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Aaron Levie",
                                    "nullable": false,
                                    "maxLength": 50,
                                    "description": "The display name of this user"
                                  },
                                  "login": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "ceo@example.com",
                                    "nullable": false,
                                    "description": "The primary email address of this user"
                                  }
                                }
                              }
                            ],
                            "title": "User (Mini)",
                            "description": "A mini representation of a user, as can be returned when nested within other resources.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "user--mini"
                          },
                          {
                            "description": "The user who last modified this file"
                          },
                          {
                            "nullable": false
                          }
                        ]
                      },
                      "shared_link": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Shared link",
                            "properties": {
                              "url": {
                                "type": "string",
                                "format": "url",
                                "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                                "nullable": false,
                                "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                              },
                              "access": {
                                "enum": [
                                  "open",
                                  "company",
                                  "collaborators"
                                ],
                                "type": "string",
                                "example": "open",
                                "nullable": false,
                                "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                              },
                              "vanity_url": {
                                "type": "string",
                                "format": "url",
                                "example": "https://acme.app.box.com/v/my_url/",
                                "nullable": true,
                                "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                              },
                              "permissions": {
                                "type": "object",
                                "properties": {
                                  "can_preview": {
                                    "type": "boolean",
                                    "example": true,
                                    "nullable": false,
                                    "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                                  },
                                  "can_download": {
                                    "type": "boolean",
                                    "example": true,
                                    "nullable": false,
                                    "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                                  }
                                },
                                "description": "Defines if this link allows a user to preview and download an item."
                              },
                              "unshared_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-13T20:53:23.000Z",
                                "nullable": true,
                                "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                              },
                              "vanity_name": {
                                "type": "string",
                                "example": "my_url",
                                "nullable": true,
                                "description": "The custom name of a shared link, as used in the `vanity_url` field."
                              },
                              "download_url": {
                                "type": "string",
                                "format": "url",
                                "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                                "nullable": true,
                                "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                                "x-box-premium-feature": true
                              },
                              "preview_count": {
                                "type": "integer",
                                "example": 3,
                                "nullable": false,
                                "description": "The number of times this item has been previewed."
                              },
                              "download_count": {
                                "type": "integer",
                                "example": 3,
                                "nullable": false,
                                "description": "The number of times this item has been downloaded."
                              },
                              "effective_access": {
                                "enum": [
                                  "open",
                                  "company",
                                  "collaborators"
                                ],
                                "type": "string",
                                "example": "company",
                                "nullable": false,
                                "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                              },
                              "is_password_enabled": {
                                "type": "boolean",
                                "example": true,
                                "nullable": false,
                                "description": "Defines if the shared link requires a password to access the item."
                              },
                              "effective_permission": {
                                "enum": [
                                  "can_download",
                                  "can_preview"
                                ],
                                "type": "string",
                                "example": "can_download",
                                "nullable": false,
                                "description": "The effective permissions for this shared link."
                              }
                            },
                            "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                          },
                          {
                            "description": "The shared link for this file. This will be\n`null` if no shared link has been created for this\nfile."
                          },
                          {
                            "nullable": true
                          }
                        ]
                      },
                      "path_collection": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Path collection",
                            "properties": {
                              "entries": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "Folder (Base)",
                                      "x-box-tag": "folders",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "example": "12345",
                                          "nullable": false,
                                          "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                        },
                                        "etag": {
                                          "type": "string",
                                          "example": "1",
                                          "nullable": true,
                                          "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                        },
                                        "type": {
                                          "enum": [
                                            "folder"
                                          ],
                                          "type": "string",
                                          "example": "folder",
                                          "nullable": false,
                                          "description": "`folder`"
                                        }
                                      },
                                      "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                      "x-box-variant": "base",
                                      "x-box-variants": [
                                        "base",
                                        "mini",
                                        "standard",
                                        "full"
                                      ],
                                      "x-box-sanitized": true,
                                      "x-box-resource-id": "folder--base"
                                    },
                                    {
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "Contracts",
                                          "nullable": false,
                                          "description": "The name of the folder."
                                        },
                                        "sequence_id": {
                                          "allOf": [
                                            {
                                              "type": "string",
                                              "example": "3",
                                              "nullable": false,
                                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                            },
                                            {
                                              "nullable": false
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "title": "Folder (Mini)",
                                  "description": "A mini representation of a file version, used when nested under another resource.",
                                  "x-box-variant": "mini",
                                  "x-box-resource-id": "folder--mini"
                                },
                                "nullable": false,
                                "description": "The parent folders for this item"
                              },
                              "total_count": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1,
                                "nullable": false,
                                "description": "The number of folders in this list."
                              }
                            },
                            "description": "A list of parent folders for an item."
                          },
                          {
                            "description": "The tree of folders that this file is contained in, starting at the root."
                          },
                          {
                            "nullable": false
                          }
                        ]
                      },
                      "content_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": true,
                        "description": "The date and time at which this file was originally\ncreated, which might be before it was uploaded to Box."
                      },
                      "content_modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": true,
                        "description": "The date and time at which this file was last updated,\nwhich might be before it was uploaded to Box."
                      }
                    }
                  }
                ],
                "title": "File",
                "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
                "x-box-variant": "standard",
                "x-box-resource-id": "file"
              },
              "description": "A list of files"
            },
            "total_count": {
              "type": "integer",
              "format": "int64",
              "example": 1,
              "description": "The number of files."
            }
          },
          "description": "A list of files",
          "x-box-resource-id": "files"
        }
      ]
  post_files_id_copy:
    description: |-
      Creates a copy of a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-files-id-copy/
    example:
      inputs: [
        {
          "type": "object",
          "nullable": false,
          "required": [
            "parent"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "FileCopy.txt",
              "maxLength": 255,
              "description": "An optional new name for the copied file.\nThere are some restrictions to the file name. Names containing\nnon-printable ASCII characters, forward and backward slashes\n(`/`, `\\`), and protected names like `.` and `..` are\nautomatically sanitized by removing the non-allowed\ncharacters."
            },
            "parent": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0",
                  "description": "The ID of folder to copy the file to."
                }
              },
              "description": "The destination folder to copy the file to."
            },
            "version": {
              "type": "string",
              "example": "0",
              "description": "An optional ID of the specific file version to copy."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "File (Base)",
                  "x-box-tag": "files",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "file"
                      ],
                      "type": "string",
                      "example": "file",
                      "nullable": false,
                      "description": "`file`"
                    }
                  },
                  "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "file--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contract.pdf",
                      "description": "The name of the file"
                    },
                    "sha1": {
                      "type": "string",
                      "format": "digest",
                      "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                      "nullable": false,
                      "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    },
                    "file_version": {
                      "allOf": [
                        {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "File version (Base)",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "12345",
                                  "nullable": false,
                                  "description": "The unique identifier that represent a file version."
                                },
                                "type": {
                                  "enum": [
                                    "file_version"
                                  ],
                                  "type": "string",
                                  "example": "file_version",
                                  "nullable": false,
                                  "description": "`file_version`"
                                }
                              },
                              "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                              "x-box-variant": "base",
                              "x-box-variants": [
                                "base",
                                "mini",
                                "standard"
                              ],
                              "x-box-sanitized": true,
                              "x-box-resource-id": "file_version--base"
                            },
                            {
                              "properties": {
                                "sha1": {
                                  "type": "string",
                                  "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                  "description": "The SHA1 hash of this version of the file."
                                }
                              }
                            }
                          ],
                          "title": "File version (Mini)",
                          "description": "A mini representation of a file version, used when\nnested within another resource.",
                          "x-box-variant": "mini",
                          "x-box-resource-id": "file_version--mini"
                        },
                        {
                          "description": "The information about the current version of the file."
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "File (Mini)",
              "description": "A mini representation of a file, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "file--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "example": 629644,
                  "nullable": false,
                  "description": "The file size in bytes. Be careful parsing this integer as it can get very large and cause an integer overflow."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The folder that this file is located within."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was created on Box."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this file"
                    }
                  ]
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file was put in the trash."
                },
                "description": {
                  "type": "string",
                  "example": "Contract for Q1 renewal",
                  "nullable": false,
                  "maxLength": 256,
                  "description": "The optional description of this file"
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was last updated on Box."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this file. This will be\n`null` if no shared link has been created for this\nfile."
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this file is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was originally\ncreated, which might be before it was uploaded to Box."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was last updated,\nwhich might be before it was uploaded to Box."
                }
              }
            }
          ],
          "title": "File",
          "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "file"
        }
      ]
  post_files_id_metadata_enterprise_securityClassification-6VMVochwUWo:
    description: |-
      Adds a classification to a file by specifying the label of the
      classification to add.
      This API can also be called by including the enterprise ID in the
      URL explicitly, for example
      `/files/:id//enterprise_12345/securityClassification-6VMVochwUWo`.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-files-id-metadata-enterprise-securityClassification-6VMVochwUWo/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "Box__Security__Classification__Key": {
              "type": "string",
              "example": "Sensitive",
              "description": "The name of the classification to apply to this file.\nTo list the available classifications in an enterprise, use the classification API to retrieve the [classification template](e://get_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema) which lists all available classification keys."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Classification",
          "x-box-tag": "classifications",
          "properties": {
            "$type": {
              "type": "string",
              "example": "securityClassification-6VMVochwUWo-fd31537a-0f95-4d86-9f2b-5974a29978f8",
              "description": "The unique ID of this classification instance. This will be include the name of the classification template and a unique ID."
            },
            "$scope": {
              "type": "string",
              "example": "enterprise_27335",
              "description": "The scope of the enterprise that this classification has been\napplied for.\nThis will be in the format `enterprise_{enterprise_id}`."
            },
            "$parent": {
              "type": "string",
              "example": "folder_59449484661,",
              "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`."
            },
            "$canEdit": {
              "type": "boolean",
              "example": true,
              "description": "Whether an end user can change the classification."
            },
            "$version": {
              "type": "integer",
              "example": 1,
              "description": "The version of the metadata instance. This version starts at 0 and increases every time a classification is updated."
            },
            "$template": {
              "enum": [
                "securityClassification-6VMVochwUWo"
              ],
              "type": "string",
              "example": "securityClassification-6VMVochwUWo",
              "description": "`securityClassification-6VMVochwUWo`"
            },
            "$typeVersion": {
              "type": "number",
              "example": 5,
              "description": "The version of the metadata template. This version starts at 0 and increases every time the template is updated. This is mostly for internal use."
            },
            "Box__Security__Classification__Key": {
              "type": "string",
              "example": "Sensitive",
              "description": "The name of the classification applied to the item."
            }
          },
          "description": "An instance of the classification metadata template, containing\nthe classification applied to the file or folder.\nTo get more details about the classification applied to an item,\nrequest the classification metadata template.",
          "x-box-resource-id": "classification"
        }
      ]
  post_files_id_metadata_global_boxSkillsCards:
    description: |-
      Applies one or more Box Skills metadata cards to a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-files-id-metadata-global-boxSkillsCards/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  post_files_id_metadata_id_id:
    description: |-
      Applies an instance of a metadata template to a file.
      In most cases only values that are present in the metadata template will be accepted, except for the `global.properties` template which accepts any key-value pair.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-files-id-metadata-id-id/
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "name": "Aaron Levie"
          },
          "additionalProperties": {
            "type": "string",
            "example": "Aaron Levie",
            "description": "A value for each of the fields that are present on the metadata\ntemplate.\nFor the `global.properties` template this can be an a list of zero\nor more fields, as this template allows for any generic key-value\npairs to be stored on the template.",
            "x-box-example-key": "name"
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Metadata instance (Base)",
              "x-box-tag": "file_metadata",
              "properties": {
                "$scope": {
                  "type": "string",
                  "example": "enterprise_27335",
                  "description": "An ID for the scope in which this template has been applied. This will be `enterprise_{enterprise_id}` for templates defined for use in this enterprise, and `global` for general templates that are available to all enterprises using Box."
                },
                "$parent": {
                  "type": "string",
                  "example": "folder_59449484661,",
                  "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`."
                },
                "$version": {
                  "type": "integer",
                  "example": 1,
                  "description": "The version of the metadata instance. This version starts at 0 and increases every time a user-defined property is modified."
                },
                "$template": {
                  "type": "string",
                  "example": "marketingCollateral",
                  "description": "The name of the template"
                }
              },
              "description": "The base representation of a metadata instance.",
              "x-box-variant": "base",
              "x-box-variants": [
                "base",
                "standard",
                "full"
              ],
              "x-box-sanitized": true,
              "x-box-resource-id": "metadata--base"
            }
          ],
          "title": "Metadata instance",
          "x-box-tag": "file_metadata",
          "description": "An instance of a metadata template, which has been applied to a file or folder.",
          "x-box-variant": "standard",
          "x-box-resource-id": "metadata"
        }
      ]
  post_files_id_upload_sessions:
    description: |-
      Creates an upload session for an existing file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-files-id-upload-sessions/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "file_size"
          ],
          "properties": {
            "file_name": {
              "type": "string",
              "example": "Project.mov",
              "description": "The optional new name of new file"
            },
            "file_size": {
              "type": "integer",
              "format": "int64",
              "example": 104857600,
              "description": "The total number of bytes of the file to be uploaded"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Upload session",
          "x-box-tag": "chunked_uploads",
          "properties": {
            "id": {
              "type": "string",
              "example": "F971964745A5CD0C001BBE4E58196BFD",
              "description": "The unique identifier for this session"
            },
            "type": {
              "enum": [
                "upload_session"
              ],
              "type": "string",
              "example": "upload_session",
              "description": "`upload_session`"
            },
            "part_size": {
              "type": "integer",
              "format": "int64",
              "example": 1024,
              "description": "The  size in bytes that must be used for all parts of of the\nupload.\nOnly the last part is allowed to be of a smaller size."
            },
            "total_parts": {
              "type": "integer",
              "format": "int32",
              "example": 1000,
              "description": "The total number of parts expected in this upload session,\nas determined by the file size and part size."
            },
            "session_endpoints": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Session endpoints",
                  "properties": {
                    "abort": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD",
                      "description": "The URL for used to abort the session."
                    },
                    "commit": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/commit",
                      "description": "The URL used to commit the file"
                    },
                    "status": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD",
                      "description": "The URL used to get the status of the upload."
                    },
                    "log_event": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/log",
                      "description": "The URL used to get the upload log from."
                    },
                    "list_parts": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/parts",
                      "description": "The URL users to list all parts."
                    },
                    "upload_part": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD",
                      "description": "The URL to upload parts to"
                    }
                  },
                  "description": "A list of endpoints for a chunked upload session."
                },
                {
                  "description": "A list of endpoints for this session."
                }
              ]
            },
            "session_expires_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The date and time when this session expires."
            },
            "num_parts_processed": {
              "type": "integer",
              "format": "int32",
              "example": 455,
              "description": "The number of parts that have been uploaded and processed\nby the server. This starts at `0`.\nWhen committing a file files, inspecting this property can\nprovide insight if all parts have been uploaded correctly."
            }
          },
          "description": "An upload session for chunk uploading a file.",
          "x-box-resource-id": "upload_session"
        }
      ]
  post_files_id_versions_current:
    description: |-
      Revert to a previous version of a file.
      If previous versions exist, this method can be used to
      promote one of the older versions to the top of the version history.
      This actually creates a new copy of the old version and puts it at the
      top of the versions history. The file will have the exact same contents
      as the older version, with the the same hash digest, `etag`, and
      name as the original.
      Other properties such as comments do not get updated to their
      former values.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-files-id-versions-current/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The file version ID"
            },
            "type": {
              "enum": [
                "file_version"
              ],
              "type": "string",
              "example": "file_version",
              "description": "The type to revert to"
            }
          },
          "description": "The file version to revert to"
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "File version (Base)",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a file version."
                    },
                    "type": {
                      "enum": [
                        "file_version"
                      ],
                      "type": "string",
                      "example": "file_version",
                      "nullable": false,
                      "description": "`file_version`"
                    }
                  },
                  "description": "The bare basic representation of a file version, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "file_version--base"
                },
                {
                  "properties": {
                    "sha1": {
                      "type": "string",
                      "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                      "description": "The SHA1 hash of this version of the file."
                    }
                  }
                }
              ],
              "title": "File version (Mini)",
              "description": "A mini representation of a file version, used when\nnested within another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "file_version--mini"
            },
            {
              "properties": {
                "name": {
                  "type": "string",
                  "example": "tigers.jpeg",
                  "description": "The name of the file version"
                },
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 629644,
                  "description": "Size of the file version in bytes"
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "When the file version object will be permanently deleted."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the file version object was created"
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "When the file version object was trashed."
                },
                "trashed_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who trashed the file version"
                    }
                  ]
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the file version object was last updated"
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last updated the file version"
                    }
                  ]
                },
                "restored_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "When the file version was restored from the trash."
                },
                "restored_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who restored the file version from the trash."
                    }
                  ]
                },
                "uploader_display_name": {
                  "allOf": [
                    {
                      "type": "string",
                      "title": "Uploader display name",
                      "example": "Ellis Wiggins",
                      "nullable": false,
                      "description": "The display name of the user that uploaded the file. In most cases this is the name of the user logged in at the time of the upload.\nIf the file was uploaded using a File Request form that requires the user to provide an email address, this field is populated with that email address. If an email address was not required in the File Request form, this field is set to return a value of `File Request`.\nIn all other anonymous cases where no email was provided this field will default to a value of `Someone`."
                    }
                  ]
                }
              }
            }
          ],
          "title": "File version",
          "description": "A standard representation of a file version",
          "x-box-variant": "standard",
          "x-box-resource-id": "file_version"
        }
      ]
  post_files_upload_sessions:
    description: |-
      Creates an upload session for a new file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-files-upload-sessions/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "folder_id",
            "file_size",
            "file_name"
          ],
          "properties": {
            "file_name": {
              "type": "string",
              "example": "Project.mov",
              "description": "The name of new file"
            },
            "file_size": {
              "type": "integer",
              "format": "int64",
              "example": 104857600,
              "description": "The total number of bytes of the file to be uploaded"
            },
            "folder_id": {
              "type": "string",
              "example": "0",
              "description": "The ID of the folder to upload the new file to."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Upload session",
          "x-box-tag": "chunked_uploads",
          "properties": {
            "id": {
              "type": "string",
              "example": "F971964745A5CD0C001BBE4E58196BFD",
              "description": "The unique identifier for this session"
            },
            "type": {
              "enum": [
                "upload_session"
              ],
              "type": "string",
              "example": "upload_session",
              "description": "`upload_session`"
            },
            "part_size": {
              "type": "integer",
              "format": "int64",
              "example": 1024,
              "description": "The  size in bytes that must be used for all parts of of the\nupload.\nOnly the last part is allowed to be of a smaller size."
            },
            "total_parts": {
              "type": "integer",
              "format": "int32",
              "example": 1000,
              "description": "The total number of parts expected in this upload session,\nas determined by the file size and part size."
            },
            "session_endpoints": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Session endpoints",
                  "properties": {
                    "abort": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD",
                      "description": "The URL for used to abort the session."
                    },
                    "commit": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/commit",
                      "description": "The URL used to commit the file"
                    },
                    "status": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD",
                      "description": "The URL used to get the status of the upload."
                    },
                    "log_event": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/log",
                      "description": "The URL used to get the upload log from."
                    },
                    "list_parts": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/parts",
                      "description": "The URL users to list all parts."
                    },
                    "upload_part": {
                      "type": "string",
                      "example": "https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD",
                      "description": "The URL to upload parts to"
                    }
                  },
                  "description": "A list of endpoints for a chunked upload session."
                },
                {
                  "description": "A list of endpoints for this session."
                }
              ]
            },
            "session_expires_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The date and time when this session expires."
            },
            "num_parts_processed": {
              "type": "integer",
              "format": "int32",
              "example": 455,
              "description": "The number of parts that have been uploaded and processed\nby the server. This starts at `0`.\nWhen committing a file files, inspecting this property can\nprovide insight if all parts have been uploaded correctly."
            }
          },
          "description": "An upload session for chunk uploading a file.",
          "x-box-resource-id": "upload_session"
        }
      ]
  post_files_upload_sessions_id_commit:
    description: |-
      Close an upload session and create a file from the
      uploaded chunks.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-files-upload-sessions-id-commit/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "parts"
          ],
          "properties": {
            "parts": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "title": "Upload part (Mini)",
                    "x-box-tag": "chunked_uploads",
                    "properties": {
                      "size": {
                        "type": "integer",
                        "format": "int64",
                        "example": 3222784,
                        "description": "The size of the chunk in bytes."
                      },
                      "offset": {
                        "type": "integer",
                        "format": "int64",
                        "example": 16777216,
                        "description": "The offset of the chunk within the file\nin bytes. The lower bound of the position\nof the chunk within the file."
                      },
                      "part_id": {
                        "type": "string",
                        "example": "6F2D3486",
                        "description": "The unique ID of the chunk."
                      }
                    },
                    "description": "The basic representation of an upload\nsession chunk.",
                    "x-box-variant": "mini",
                    "x-box-variants": [
                      "mini",
                      "standard"
                    ],
                    "x-box-resource-id": "upload_part--mini"
                  },
                  {
                    "properties": {
                      "sha1": {
                        "type": "string",
                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                        "description": "The SHA1 hash of the chunk."
                      }
                    }
                  }
                ],
                "title": "Upload part",
                "description": "The representation of an upload\nsession chunk.",
                "x-box-variant": "standard",
                "x-box-resource-id": "upload_part"
              },
              "description": "The list details for the uploaded parts"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Files",
          "x-box-tag": "files",
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "title": "File (Base)",
                        "x-box-tag": "files",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "12345",
                            "nullable": false,
                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                          },
                          "etag": {
                            "type": "string",
                            "example": "1",
                            "nullable": true,
                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                          },
                          "type": {
                            "enum": [
                              "file"
                            ],
                            "type": "string",
                            "example": "file",
                            "nullable": false,
                            "description": "`file`"
                          }
                        },
                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                        "x-box-variant": "base",
                        "x-box-variants": [
                          "base",
                          "mini",
                          "standard",
                          "full"
                        ],
                        "x-box-sanitized": true,
                        "x-box-resource-id": "file--base"
                      },
                      {
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Contract.pdf",
                            "description": "The name of the file"
                          },
                          "sha1": {
                            "type": "string",
                            "format": "digest",
                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                            "nullable": false,
                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                          },
                          "sequence_id": {
                            "allOf": [
                              {
                                "type": "string",
                                "example": "3",
                                "nullable": false,
                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                              },
                              {
                                "nullable": false
                              }
                            ]
                          },
                          "file_version": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "File version (Base)",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "12345",
                                        "nullable": false,
                                        "description": "The unique identifier that represent a file version."
                                      },
                                      "type": {
                                        "enum": [
                                          "file_version"
                                        ],
                                        "type": "string",
                                        "example": "file_version",
                                        "nullable": false,
                                        "description": "`file_version`"
                                      }
                                    },
                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard"
                                    ],
                                    "x-box-sanitized": true,
                                    "x-box-resource-id": "file_version--base"
                                  },
                                  {
                                    "properties": {
                                      "sha1": {
                                        "type": "string",
                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                        "description": "The SHA1 hash of this version of the file."
                                      }
                                    }
                                  }
                                ],
                                "title": "File version (Mini)",
                                "description": "A mini representation of a file version, used when nested within another resource.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "file_version--mini"
                              },
                              {
                                "description": "The information about the current version of the file."
                              }
                            ]
                          }
                        }
                      }
                    ],
                    "title": "File (Mini)",
                    "description": "A mini representation of a file, used when\nnested under another resource.",
                    "x-box-variant": "mini",
                    "x-box-resource-id": "file--mini"
                  },
                  {
                    "properties": {
                      "size": {
                        "type": "integer",
                        "example": 629644,
                        "nullable": false,
                        "description": "The file size in bytes. Be careful parsing this integer as it can get very large and cause an integer overflow."
                      },
                      "parent": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          {
                            "description": "The folder that this file is located within."
                          }
                        ],
                        "nullable": true
                      },
                      "owned_by": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "User (Base)",
                                "x-box-tag": "users",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this user"
                                  },
                                  "type": {
                                    "enum": [
                                      "user"
                                    ],
                                    "type": "string",
                                    "example": "user",
                                    "nullable": false,
                                    "description": "`user`"
                                  }
                                },
                                "description": "A mini representation of a user, used when\nnested within another resource.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-resource-id": "user--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Aaron Levie",
                                    "nullable": false,
                                    "maxLength": 50,
                                    "description": "The display name of this user"
                                  },
                                  "login": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "ceo@example.com",
                                    "nullable": false,
                                    "description": "The primary email address of this user"
                                  }
                                }
                              }
                            ],
                            "title": "User (Mini)",
                            "description": "A mini representation of a user, as can be returned when nested within other resources.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "user--mini"
                          },
                          {
                            "description": "The user who owns this file"
                          },
                          {
                            "nullable": false
                          }
                        ]
                      },
                      "purged_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": true,
                        "description": "The time at which this file is expected to be purged\nfrom the trash."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": false,
                        "description": "The date and time when the file was created on Box."
                      },
                      "created_by": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "User (Base)",
                                "x-box-tag": "users",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this user"
                                  },
                                  "type": {
                                    "enum": [
                                      "user"
                                    ],
                                    "type": "string",
                                    "example": "user",
                                    "nullable": false,
                                    "description": "`user`"
                                  }
                                },
                                "description": "A mini representation of a user, used when\nnested within another resource.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-resource-id": "user--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Aaron Levie",
                                    "nullable": false,
                                    "maxLength": 50,
                                    "description": "The display name of this user"
                                  },
                                  "login": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "ceo@example.com",
                                    "nullable": false,
                                    "description": "The primary email address of this user"
                                  }
                                }
                              }
                            ],
                            "title": "User (Mini)",
                            "description": "A mini representation of a user, as can be returned when nested within other resources.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "user--mini"
                          },
                          {
                            "description": "The user who created this file"
                          }
                        ]
                      },
                      "trashed_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": true,
                        "description": "The time at which this file was put in the trash."
                      },
                      "description": {
                        "type": "string",
                        "example": "Contract for Q1 renewal",
                        "nullable": false,
                        "maxLength": 256,
                        "description": "The optional description of this file"
                      },
                      "item_status": {
                        "enum": [
                          "active",
                          "trashed",
                          "deleted"
                        ],
                        "type": "string",
                        "example": "active",
                        "nullable": false,
                        "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                      },
                      "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": false,
                        "description": "The date and time when the file was last updated on Box."
                      },
                      "modified_by": {
                        "allOf": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "User (Base)",
                                "x-box-tag": "users",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "11446498",
                                    "description": "The unique identifier for this user"
                                  },
                                  "type": {
                                    "enum": [
                                      "user"
                                    ],
                                    "type": "string",
                                    "example": "user",
                                    "nullable": false,
                                    "description": "`user`"
                                  }
                                },
                                "description": "A mini representation of a user, used when\nnested within another resource.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-resource-id": "user--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Aaron Levie",
                                    "nullable": false,
                                    "maxLength": 50,
                                    "description": "The display name of this user"
                                  },
                                  "login": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "ceo@example.com",
                                    "nullable": false,
                                    "description": "The primary email address of this user"
                                  }
                                }
                              }
                            ],
                            "title": "User (Mini)",
                            "description": "A mini representation of a user, as can be returned when nested within other resources.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "user--mini"
                          },
                          {
                            "description": "The user who last modified this file"
                          },
                          {
                            "nullable": false
                          }
                        ]
                      },
                      "shared_link": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Shared link",
                            "properties": {
                              "url": {
                                "type": "string",
                                "format": "url",
                                "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                                "nullable": false,
                                "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                              },
                              "access": {
                                "enum": [
                                  "open",
                                  "company",
                                  "collaborators"
                                ],
                                "type": "string",
                                "example": "open",
                                "nullable": false,
                                "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                              },
                              "vanity_url": {
                                "type": "string",
                                "format": "url",
                                "example": "https://acme.app.box.com/v/my_url/",
                                "nullable": true,
                                "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                              },
                              "permissions": {
                                "type": "object",
                                "properties": {
                                  "can_preview": {
                                    "type": "boolean",
                                    "example": true,
                                    "nullable": false,
                                    "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                                  },
                                  "can_download": {
                                    "type": "boolean",
                                    "example": true,
                                    "nullable": false,
                                    "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                                  }
                                },
                                "description": "Defines if this link allows a user to preview and download an item."
                              },
                              "unshared_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-13T20:53:23.000Z",
                                "nullable": true,
                                "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                              },
                              "vanity_name": {
                                "type": "string",
                                "example": "my_url",
                                "nullable": true,
                                "description": "The custom name of a shared link, as used in the `vanity_url` field."
                              },
                              "download_url": {
                                "type": "string",
                                "format": "url",
                                "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                                "nullable": true,
                                "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                                "x-box-premium-feature": true
                              },
                              "preview_count": {
                                "type": "integer",
                                "example": 3,
                                "nullable": false,
                                "description": "The number of times this item has been previewed."
                              },
                              "download_count": {
                                "type": "integer",
                                "example": 3,
                                "nullable": false,
                                "description": "The number of times this item has been downloaded."
                              },
                              "effective_access": {
                                "enum": [
                                  "open",
                                  "company",
                                  "collaborators"
                                ],
                                "type": "string",
                                "example": "company",
                                "nullable": false,
                                "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                              },
                              "is_password_enabled": {
                                "type": "boolean",
                                "example": true,
                                "nullable": false,
                                "description": "Defines if the shared link requires a password to access the item."
                              },
                              "effective_permission": {
                                "enum": [
                                  "can_download",
                                  "can_preview"
                                ],
                                "type": "string",
                                "example": "can_download",
                                "nullable": false,
                                "description": "The effective permissions for this shared link."
                              }
                            },
                            "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                          },
                          {
                            "description": "The shared link for this file. This will be\n`null` if no shared link has been created for this\nfile."
                          },
                          {
                            "nullable": true
                          }
                        ]
                      },
                      "path_collection": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Path collection",
                            "properties": {
                              "entries": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "title": "Folder (Base)",
                                      "x-box-tag": "folders",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "example": "12345",
                                          "nullable": false,
                                          "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                        },
                                        "etag": {
                                          "type": "string",
                                          "example": "1",
                                          "nullable": true,
                                          "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                        },
                                        "type": {
                                          "enum": [
                                            "folder"
                                          ],
                                          "type": "string",
                                          "example": "folder",
                                          "nullable": false,
                                          "description": "`folder`"
                                        }
                                      },
                                      "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                      "x-box-variant": "base",
                                      "x-box-variants": [
                                        "base",
                                        "mini",
                                        "standard",
                                        "full"
                                      ],
                                      "x-box-sanitized": true,
                                      "x-box-resource-id": "folder--base"
                                    },
                                    {
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "Contracts",
                                          "nullable": false,
                                          "description": "The name of the folder."
                                        },
                                        "sequence_id": {
                                          "allOf": [
                                            {
                                              "type": "string",
                                              "example": "3",
                                              "nullable": false,
                                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                            },
                                            {
                                              "nullable": false
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "title": "Folder (Mini)",
                                  "description": "A mini representation of a file version, used when nested under another resource.",
                                  "x-box-variant": "mini",
                                  "x-box-resource-id": "folder--mini"
                                },
                                "nullable": false,
                                "description": "The parent folders for this item"
                              },
                              "total_count": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1,
                                "nullable": false,
                                "description": "The number of folders in this list."
                              }
                            },
                            "description": "A list of parent folders for an item."
                          },
                          {
                            "description": "The tree of folders that this file is contained in, starting at the root."
                          },
                          {
                            "nullable": false
                          }
                        ]
                      },
                      "content_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": true,
                        "description": "The date and time at which this file was originally\ncreated, which might be before it was uploaded to Box."
                      },
                      "content_modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T18:53:43.000Z",
                        "nullable": true,
                        "description": "The date and time at which this file was last updated,\nwhich might be before it was uploaded to Box."
                      }
                    }
                  }
                ],
                "title": "File",
                "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
                "x-box-variant": "standard",
                "x-box-resource-id": "file"
              },
              "description": "A list of files"
            },
            "total_count": {
              "type": "integer",
              "format": "int64",
              "example": 1,
              "description": "The number of files."
            }
          },
          "description": "A list of files",
          "x-box-resource-id": "files"
        }
      ]
  post_folder_locks:
    description: |-
      Creates a folder lock on a folder, preventing it from being moved and/or
      deleted.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-folder-locks/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "folder"
          ],
          "properties": {
            "folder": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1234567890",
                  "description": "The ID of the folder."
                },
                "type": {
                  "type": "string",
                  "example": "folder",
                  "description": "The content type the lock is being applied to. Only `folder`\nis supported."
                }
              },
              "description": "The folder to apply the lock to."
            },
            "locked_operations": {
              "type": "object",
              "required": [
                "move",
                "delete"
              ],
              "properties": {
                "move": {
                  "type": "boolean",
                  "example": true,
                  "description": "Whether moving the folder should be locked."
                },
                "delete": {
                  "type": "boolean",
                  "example": true,
                  "description": "Whether deleting the folder should be locked."
                }
              },
              "description": "The operations to lock for the folder. If `locked_operations` is\nincluded in the request, both `move` and `delete` must also be\nincluded and both set to `true`."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Folder Lock",
          "x-box-tag": "folder_locks",
          "properties": {
            "id": {
              "type": "string",
              "example": "12345678",
              "description": "The unique identifier for this folder lock."
            },
            "type": {
              "type": "string",
              "example": "folder_lock",
              "description": "The object type, always `folder_lock`."
            },
            "folder": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Folder (Base)",
                      "x-box-tag": "folders",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                        },
                        "etag": {
                          "type": "string",
                          "example": "1",
                          "nullable": true,
                          "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                        },
                        "type": {
                          "enum": [
                            "folder"
                          ],
                          "type": "string",
                          "example": "folder",
                          "nullable": false,
                          "description": "`folder`"
                        }
                      },
                      "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "folder--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Contracts",
                          "nullable": false,
                          "description": "The name of the folder."
                        },
                        "sequence_id": {
                          "allOf": [
                            {
                              "type": "string",
                              "example": "3",
                              "nullable": false,
                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                            },
                            {
                              "nullable": false
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "title": "Folder (Mini)",
                  "description": "A mini representation of a file version, used when\nnested under another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "folder--mini"
                },
                {
                  "description": "The folder that the lock applies to."
                }
              ]
            },
            "lock_type": {
              "type": "string",
              "example": "freeze",
              "description": "The lock type, always `freeze`."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2020-09-14T23:12:53.000Z",
              "description": "When the folder lock object was created."
            },
            "created_by": {
              "allOf": [
                {
                  "type": "object",
                  "title": "User (Base)",
                  "x-box-tag": "users",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this user"
                    },
                    "type": {
                      "enum": [
                        "user"
                      ],
                      "type": "string",
                      "example": "user",
                      "nullable": false,
                      "description": "`user`"
                    }
                  },
                  "description": "A mini representation of a user, used when\nnested within another resource.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-resource-id": "user--base"
                },
                {
                  "description": "The user or group that created the lock."
                }
              ]
            },
            "locked_operations": {
              "type": "object",
              "properties": {
                "move": {
                  "type": "boolean",
                  "example": true,
                  "nullable": false,
                  "description": "Whether moving the folder is restricted."
                },
                "delete": {
                  "type": "boolean",
                  "example": true,
                  "nullable": false,
                  "description": "Whether deleting the folder is restricted."
                }
              },
              "description": "The operations that have been locked. Currently the `move` and `delete` operations cannot be locked separately, and both need to be set to `true`.\n"
            }
          },
          "description": "Folder locks define access restrictions placed by folder owners\nto prevent specific folders from being moved or deleted.",
          "x-box-resource-id": "folder_lock"
        }
      ]
  post_folders:
    description: |-
      Creates a new empty folder within the specified parent folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-folders/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  post_folders_id:
    description: |-
      Restores a folder that has been moved to the trash.
      An optional new parent ID can be provided to restore the folder to in case the original folder has been deleted.
      # Folder locking
      During this operation, part of the file tree will be locked, mainly the source folder and all of its descendants, as well as the destination folder.
      For the duration of the operation, no other move, copy, delete, or restore operation can performed on any of the locked folders.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-folders-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Restored Photos",
              "description": "An optional new name for the folder."
            },
            "parent": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "123",
                      "description": "The ID of parent item"
                    }
                  },
                  "description": "The parent for this item"
                },
                {
                  "description": "Specifies an optional ID of a folder to restore the folder to when the original folder no longer exists.\nPlease be aware that this ID will only be used if the original folder no longer exists. Use this ID to provide a fallback location to restore the folder to if the original location has been deleted."
                }
              ]
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Folder (Base)",
                  "x-box-tag": "folders",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "folder"
                      ],
                      "type": "string",
                      "example": "folder",
                      "nullable": false,
                      "description": "`folder`"
                    }
                  },
                  "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "folder--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contracts",
                      "nullable": false,
                      "description": "The name of the folder."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Folder (Mini)",
              "description": "A mini representation of a file version, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "folder--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 629644,
                  "nullable": false,
                  "description": "The folder size in bytes.\nBe careful parsing this integer as its\nvalue can get very large."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The optional folder that this folder is located within.\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time and which the folder will be automatically be deleted."
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder was put in the trash."
                },
                "description": {
                  "allOf": [
                    {
                      "type": "string",
                      "example": "Legal contracts for the new ACME deal",
                      "nullable": false,
                      "maxLength": 256,
                      "description": "The optional description of this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                    }
                  ],
                  "nullable": true
                },
                "item_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1000,
                              "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                            },
                            "order": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "by": {
                                    "type": "string",
                                    "example": "type",
                                    "description": "The field to order by"
                                  },
                                  "direction": {
                                    "enum": [
                                      "ASC",
                                      "DESC"
                                    ],
                                    "type": "string",
                                    "example": "ASC",
                                    "description": "The direction to order by, either ascending or descending"
                                  }
                                },
                                "description": "The order in which a pagination is ordered"
                              },
                              "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "offset": {
                              "type": "integer",
                              "format": "int64",
                              "example": 2000,
                              "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "total_count": {
                              "type": "integer",
                              "format": "int64",
                              "example": 5000,
                              "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            }
                          },
                          "description": "The part of an API response that describes pagination"
                        },
                        {
                          "properties": {
                            "entries": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File (Base)",
                                        "x-box-tag": "files",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "file"
                                            ],
                                            "type": "string",
                                            "example": "file",
                                            "nullable": false,
                                            "description": "`file`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contract.pdf",
                                            "description": "The name of the file"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "format": "digest",
                                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                            "nullable": false,
                                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          },
                                          "file_version": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "title": "File version (Base)",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "example": "12345",
                                                        "nullable": false,
                                                        "description": "The unique identifier that represent a file version."
                                                      },
                                                      "type": {
                                                        "enum": [
                                                          "file_version"
                                                        ],
                                                        "type": "string",
                                                        "example": "file_version",
                                                        "nullable": false,
                                                        "description": "`file_version`"
                                                      }
                                                    },
                                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                    "x-box-variant": "base",
                                                    "x-box-variants": [
                                                      "base",
                                                      "mini",
                                                      "standard"
                                                    ],
                                                    "x-box-sanitized": true,
                                                    "x-box-resource-id": "file_version--base"
                                                  },
                                                  {
                                                    "properties": {
                                                      "sha1": {
                                                        "type": "string",
                                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                        "description": "The SHA1 hash of this version of the file."
                                                      }
                                                    }
                                                  }
                                                ],
                                                "title": "File version (Mini)",
                                                "description": "A mini representation of a file version, used when nested within another resource.",
                                                "x-box-variant": "mini",
                                                "x-box-resource-id": "file_version--mini"
                                              },
                                              {
                                                "description": "The information about the current version of the file."
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File (Mini)",
                                    "description": "A mini representation of a file, used when\nnested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Folder (Base)",
                                        "x-box-tag": "folders",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "folder"
                                            ],
                                            "type": "string",
                                            "example": "folder",
                                            "nullable": false,
                                            "description": "`folder`"
                                          }
                                        },
                                        "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "folder--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contracts",
                                            "nullable": false,
                                            "description": "The name of the folder."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Folder (Mini)",
                                    "description": "A mini representation of a file version, used when nested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "folder--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Web link (Base)",
                                        "x-box-tag": "web_links",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "11446498",
                                            "description": "The unique identifier for this web link"
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "description": "The entity tag of this web link. Used with `If-Match` headers."
                                          },
                                          "type": {
                                            "enum": [
                                              "web_link"
                                            ],
                                            "type": "string",
                                            "example": "web_link",
                                            "description": "`web_link`"
                                          }
                                        },
                                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-resource-id": "web_link--base"
                                      },
                                      {
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com/example/1234",
                                            "description": "The URL this web link points to"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "My Bookmark",
                                            "description": "The name of the web link"
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Web link (Mini)",
                                    "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "web_link--mini"
                                  }
                                ]
                              },
                              "description": "The items in this collection."
                            }
                          }
                        }
                      ],
                      "title": "Items",
                      "x-box-tag": "folders",
                      "description": "A list of files, folders, and web links in\ntheir mini representation.",
                      "x-box-resource-id": "items"
                    },
                    {
                      "description": "A page of the items that are in the folder.\nThis field can only be requested when querying a folder's information, not when querying a folder's items."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was originally\ncreated."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was last updated."
                },
                "folder_upload_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "upload.Contracts.asd7asd@u.box.com",
                      "nullable": false,
                      "description": "The optional upload email address for this folder."
                    },
                    "access": {
                      "enum": [
                        "open",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "nullable": false,
                      "description": "When this parameter has been set, users can email files to the email address that has been automatically created for this folder.\nTo create an email address, set this property either when creating or updating the folder.\nWhen set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.\nWhen set to `open` it will accept emails from any email address."
                    }
                  }
                }
              }
            }
          ],
          "title": "Folder",
          "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "folder"
        }
      ]
  post_folders_id_copy:
    description: |-
      Creates a copy of a folder within a destination folder.
      The original folder will not be changed.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-folders-id-copy/
    example:
      inputs: [
        {
          "type": "object",
          "nullable": false,
          "required": [
            "parent"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "New Folder",
              "maxLength": 255,
              "minLength": 1,
              "description": "An optional new name for the copied folder.\nThere are some restrictions to the file name. Names containing\nnon-printable ASCII characters, forward and backward slashes\n(`/`, `\\`), as well as names with trailing spaces are\nprohibited.\nAdditionally, the names `.` and `..` are\nnot allowed either."
            },
            "parent": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0",
                  "description": "The ID of parent folder"
                }
              },
              "description": "The destination folder to copy the folder to."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Folder (Base)",
                  "x-box-tag": "folders",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "folder"
                      ],
                      "type": "string",
                      "example": "folder",
                      "nullable": false,
                      "description": "`folder`"
                    }
                  },
                  "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "folder--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contracts",
                      "nullable": false,
                      "description": "The name of the folder."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Folder (Mini)",
              "description": "A mini representation of a file version, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "folder--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 629644,
                  "nullable": false,
                  "description": "The folder size in bytes.\nBe careful parsing this integer as its\nvalue can get very large."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The optional folder that this folder is located within.\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time and which the folder will be automatically be deleted."
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder was put in the trash."
                },
                "description": {
                  "allOf": [
                    {
                      "type": "string",
                      "example": "Legal contracts for the new ACME deal",
                      "nullable": false,
                      "maxLength": 256,
                      "description": "The optional description of this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                    }
                  ],
                  "nullable": true
                },
                "item_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1000,
                              "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                            },
                            "order": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "by": {
                                    "type": "string",
                                    "example": "type",
                                    "description": "The field to order by"
                                  },
                                  "direction": {
                                    "enum": [
                                      "ASC",
                                      "DESC"
                                    ],
                                    "type": "string",
                                    "example": "ASC",
                                    "description": "The direction to order by, either ascending or descending"
                                  }
                                },
                                "description": "The order in which a pagination is ordered"
                              },
                              "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "offset": {
                              "type": "integer",
                              "format": "int64",
                              "example": 2000,
                              "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "total_count": {
                              "type": "integer",
                              "format": "int64",
                              "example": 5000,
                              "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            }
                          },
                          "description": "The part of an API response that describes pagination"
                        },
                        {
                          "properties": {
                            "entries": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File (Base)",
                                        "x-box-tag": "files",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "file"
                                            ],
                                            "type": "string",
                                            "example": "file",
                                            "nullable": false,
                                            "description": "`file`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contract.pdf",
                                            "description": "The name of the file"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "format": "digest",
                                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                            "nullable": false,
                                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          },
                                          "file_version": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "title": "File version (Base)",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "example": "12345",
                                                        "nullable": false,
                                                        "description": "The unique identifier that represent a file version."
                                                      },
                                                      "type": {
                                                        "enum": [
                                                          "file_version"
                                                        ],
                                                        "type": "string",
                                                        "example": "file_version",
                                                        "nullable": false,
                                                        "description": "`file_version`"
                                                      }
                                                    },
                                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                    "x-box-variant": "base",
                                                    "x-box-variants": [
                                                      "base",
                                                      "mini",
                                                      "standard"
                                                    ],
                                                    "x-box-sanitized": true,
                                                    "x-box-resource-id": "file_version--base"
                                                  },
                                                  {
                                                    "properties": {
                                                      "sha1": {
                                                        "type": "string",
                                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                        "description": "The SHA1 hash of this version of the file."
                                                      }
                                                    }
                                                  }
                                                ],
                                                "title": "File version (Mini)",
                                                "description": "A mini representation of a file version, used when nested within another resource.",
                                                "x-box-variant": "mini",
                                                "x-box-resource-id": "file_version--mini"
                                              },
                                              {
                                                "description": "The information about the current version of the file."
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File (Mini)",
                                    "description": "A mini representation of a file, used when\nnested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Folder (Base)",
                                        "x-box-tag": "folders",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "folder"
                                            ],
                                            "type": "string",
                                            "example": "folder",
                                            "nullable": false,
                                            "description": "`folder`"
                                          }
                                        },
                                        "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "folder--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contracts",
                                            "nullable": false,
                                            "description": "The name of the folder."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Folder (Mini)",
                                    "description": "A mini representation of a file version, used when nested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "folder--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Web link (Base)",
                                        "x-box-tag": "web_links",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "11446498",
                                            "description": "The unique identifier for this web link"
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "description": "The entity tag of this web link. Used with `If-Match` headers."
                                          },
                                          "type": {
                                            "enum": [
                                              "web_link"
                                            ],
                                            "type": "string",
                                            "example": "web_link",
                                            "description": "`web_link`"
                                          }
                                        },
                                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-resource-id": "web_link--base"
                                      },
                                      {
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com/example/1234",
                                            "description": "The URL this web link points to"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "My Bookmark",
                                            "description": "The name of the web link"
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Web link (Mini)",
                                    "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "web_link--mini"
                                  }
                                ]
                              },
                              "description": "The items in this collection."
                            }
                          }
                        }
                      ],
                      "title": "Items",
                      "x-box-tag": "folders",
                      "description": "A list of files, folders, and web links in\ntheir mini representation.",
                      "x-box-resource-id": "items"
                    },
                    {
                      "description": "A page of the items that are in the folder.\nThis field can only be requested when querying a folder's information, not when querying a folder's items."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was originally\ncreated."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was last updated."
                },
                "folder_upload_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "upload.Contracts.asd7asd@u.box.com",
                      "nullable": false,
                      "description": "The optional upload email address for this folder."
                    },
                    "access": {
                      "enum": [
                        "open",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "nullable": false,
                      "description": "When this parameter has been set, users can email files to the email address that has been automatically created for this folder.\nTo create an email address, set this property either when creating or updating the folder.\nWhen set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.\nWhen set to `open` it will accept emails from any email address."
                    }
                  }
                }
              }
            }
          ],
          "title": "Folder",
          "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "folder"
        }
      ]
  post_folders_id_metadata_enterprise_securityClassification-6VMVochwUWo:
    description: |-
      Adds a classification to a folder by specifying the label of the
      classification to add.
      This API can also be called by including the enterprise ID in the
      URL explicitly, for example
      `/folders/:id//enterprise_12345/securityClassification-6VMVochwUWo`.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-folders-id-metadata-enterprise-securityClassification-6VMVochwUWo/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "Box__Security__Classification__Key": {
              "type": "string",
              "example": "Sensitive",
              "description": "The name of the classification to apply to this folder.\nTo list the available classifications in an enterprise, use the classification API to retrieve the [classification template](e://get_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema) which lists all available classification keys."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Classification",
          "x-box-tag": "classifications",
          "properties": {
            "$type": {
              "type": "string",
              "example": "securityClassification-6VMVochwUWo-fd31537a-0f95-4d86-9f2b-5974a29978f8",
              "description": "The unique ID of this classification instance. This will be include the name of the classification template and a unique ID."
            },
            "$scope": {
              "type": "string",
              "example": "enterprise_27335",
              "description": "The scope of the enterprise that this classification has been\napplied for.\nThis will be in the format `enterprise_{enterprise_id}`."
            },
            "$parent": {
              "type": "string",
              "example": "folder_59449484661,",
              "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`."
            },
            "$canEdit": {
              "type": "boolean",
              "example": true,
              "description": "Whether an end user can change the classification."
            },
            "$version": {
              "type": "integer",
              "example": 1,
              "description": "The version of the metadata instance. This version starts at 0 and increases every time a classification is updated."
            },
            "$template": {
              "enum": [
                "securityClassification-6VMVochwUWo"
              ],
              "type": "string",
              "example": "securityClassification-6VMVochwUWo",
              "description": "`securityClassification-6VMVochwUWo`"
            },
            "$typeVersion": {
              "type": "number",
              "example": 5,
              "description": "The version of the metadata template. This version starts at 0 and increases every time the template is updated. This is mostly for internal use."
            },
            "Box__Security__Classification__Key": {
              "type": "string",
              "example": "Sensitive",
              "description": "The name of the classification applied to the item."
            }
          },
          "description": "An instance of the classification metadata template, containing\nthe classification applied to the file or folder.\nTo get more details about the classification applied to an item,\nrequest the classification metadata template.",
          "x-box-resource-id": "classification"
        }
      ]
  post_folders_id_metadata_id_id:
    description: |-
      Applies an instance of a metadata template to a folder.
      In most cases only values that are present in the metadata template will be accepted, except for the `global.properties` template which accepts any key-value pair.
      To display the metadata template in the Box web app the enterprise needs to be configured to enable **Cascading Folder Level Metadata** for the user in the admin console.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-folders-id-metadata-id-id/
    example:
      inputs: [
        {
          "type": "object",
          "example": {
            "name": "Aaron Levie"
          },
          "additionalProperties": {
            "type": "string",
            "example": "Aaron Levie",
            "description": "A value for each of the fields that are present on the metadata\ntemplate.\nFor the `global.properties` template this can be an a list of zero\nor more fields, as this template allows for any generic key-value\npairs to be stored on the template.",
            "x-box-example-key": "name"
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Metadata instance (Base)",
              "x-box-tag": "file_metadata",
              "properties": {
                "$scope": {
                  "type": "string",
                  "example": "enterprise_27335",
                  "description": "An ID for the scope in which this template has been applied. This will be `enterprise_{enterprise_id}` for templates defined for use in this enterprise, and `global` for general templates that are available to all enterprises using Box."
                },
                "$parent": {
                  "type": "string",
                  "example": "folder_59449484661,",
                  "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`."
                },
                "$version": {
                  "type": "integer",
                  "example": 1,
                  "description": "The version of the metadata instance. This version starts at 0 and increases every time a user-defined property is modified."
                },
                "$template": {
                  "type": "string",
                  "example": "marketingCollateral",
                  "description": "The name of the template"
                }
              },
              "description": "The base representation of a metadata instance.",
              "x-box-variant": "base",
              "x-box-variants": [
                "base",
                "standard",
                "full"
              ],
              "x-box-sanitized": true,
              "x-box-resource-id": "metadata--base"
            }
          ],
          "title": "Metadata instance",
          "x-box-tag": "file_metadata",
          "description": "An instance of a metadata template, which has been applied to a file or folder.",
          "x-box-variant": "standard",
          "x-box-resource-id": "metadata"
        }
      ]
  post_group_memberships:
    description: |-
      Creates a group membership. Only users with
      admin-level permissions will be able to use this API.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-group-memberships/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "user",
            "group"
          ],
          "properties": {
            "role": {
              "enum": [
                "member",
                "admin"
              ],
              "type": "string",
              "example": "member",
              "description": "The role of the user in the group."
            },
            "user": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1434325",
                  "description": "The ID of the user to add to the group"
                }
              },
              "description": "The user to add to the group."
            },
            "group": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "4545523",
                  "description": "The ID of the group to add the user to"
                }
              },
              "description": "The group to add the user to."
            },
            "configurable_permissions": {
              "type": "object",
              "example": {
                "can_run_reports": true
              },
              "description": "Custom configuration for the permissions an admin if a group will receive. This option has no effect on members with a role of `member`.\nSetting these permissions overwrites the default access levels of an admin.\nSpecifying a value of \"null\" for this object will disable all configurable permissions. Specifying permissions will set them accordingly, omitted permissions will be enabled by default.",
              "additionalProperties": {
                "type": "boolean",
                "example": true,
                "description": "A key value pair of custom permissions.",
                "x-box-example-key": "can_run_reports"
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Group membership",
          "x-box-tag": "memberships",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this group membership"
            },
            "role": {
              "enum": [
                "member",
                "admin"
              ],
              "type": "string",
              "example": "member",
              "description": "The role of the user in the group."
            },
            "type": {
              "enum": [
                "group_membership"
              ],
              "type": "string",
              "example": "group_membership",
              "description": "`group_membership`"
            },
            "user": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user that the membership applies to"
                }
              ]
            },
            "group": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Group (Base)",
                      "x-box-tag": "groups",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this object"
                        },
                        "type": {
                          "enum": [
                            "group"
                          ],
                          "type": "string",
                          "example": "group",
                          "description": "`group`"
                        }
                      },
                      "description": "A base representation of a group.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "group--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Support",
                          "description": "The name of the group"
                        },
                        "group_type": {
                          "enum": [
                            "managed_group",
                            "all_users_group"
                          ],
                          "type": "string",
                          "example": "managed_group",
                          "description": "The type of the group."
                        }
                      }
                    }
                  ],
                  "title": "Group (Mini)",
                  "description": "Mini representation of a group, including id and name of\ngroup.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "group--mini"
                },
                {
                  "description": "The group that the membership applies to"
                }
              ]
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The time this membership was created."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The time this membership was last modified."
            }
          },
          "description": "Membership is used to signify that a user is part of a\ngroup.",
          "x-box-resource-id": "group_membership"
        }
      ]
  post_groups:
    description: |-
      Creates a new group of users in an enterprise. Only users with admin
      permissions can create new groups.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-groups/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "Customer Support",
              "description": "The name of the new group to be created. This name must be unique within the enterprise."
            },
            "provenance": {
              "type": "string",
              "example": "Active Directory",
              "maxLength": 255,
              "description": "Keeps track of which external source this group is\ncoming, for example `Active Directory`, or `Okta`.\nSetting this will also prevent Box admins from editing\nthe group name and its members directly via the Box\nweb application.\nThis is desirable for one-way syncing of groups."
            },
            "description": {
              "type": "string",
              "example": "\"Customer Support Group - as imported from Active Directory\"",
              "maxLength": 255,
              "description": "A human readable description of the group."
            },
            "invitability_level": {
              "enum": [
                "admins_only",
                "admins_and_members",
                "all_managed_users"
              ],
              "type": "string",
              "example": "admins_only",
              "description": "Specifies who can invite the group to collaborate\non folders.\nWhen set to `admins_only` the enterprise admin, co-admins,\nand the group's admin can invite the group.\nWhen set to `admins_and_members` all the admins listed\nabove and group members can invite the group.\nWhen set to `all_managed_users` all managed users in the\nenterprise can invite the group."
            },
            "external_sync_identifier": {
              "type": "string",
              "example": "AD:123456",
              "description": "An arbitrary identifier that can be used by\nexternal group sync tools to link this Box Group to\nan external group.\nExample values of this field\ncould be an **Active Directory Object ID** or a **Google\nGroup ID**.\nWe recommend you use of this field in\norder to avoid issues when group names are updated in\neither Box or external systems."
            },
            "member_viewability_level": {
              "enum": [
                "admins_only",
                "admins_and_members",
                "all_managed_users"
              ],
              "type": "string",
              "example": "admins_only",
              "description": "Specifies who can see the members of the group.\n* `admins_only` - the enterprise admin, co-admins, group's\n  group admin\n* `admins_and_members` - all admins and group members\n* `all_managed_users` - all managed users in the\n  enterprise"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Group (Base)",
                  "x-box-tag": "groups",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this object"
                    },
                    "type": {
                      "enum": [
                        "group"
                      ],
                      "type": "string",
                      "example": "group",
                      "description": "`group`"
                    }
                  },
                  "description": "A base representation of a group.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "group--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Support",
                      "description": "The name of the group"
                    },
                    "group_type": {
                      "enum": [
                        "managed_group",
                        "all_users_group"
                      ],
                      "type": "string",
                      "example": "managed_group",
                      "description": "The type of the group."
                    }
                  }
                }
              ],
              "title": "Group (Mini)",
              "description": "Mini representation of a group, including id and name of\ngroup.",
              "x-box-variant": "mini",
              "x-box-resource-id": "group--mini"
            },
            {
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the group object was created"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the group object was last modified"
                }
              }
            }
          ],
          "title": "Group",
          "description": "A standard representation of a group, as returned from any\ngroup API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "group"
        }
      ]
  post_invites:
    description: |-
      Invites an existing external user to join an enterprise.
      The existing user can not be part of another enterprise and
      must already have a Box account. Once invited, the user will receive an
      email and are prompted to accept the invitation within the
      Box web application.
      This method requires the "Manage An Enterprise" scope enabled for
      the application, which can be enabled within the developer console.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-invites/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "enterprise",
            "actionable_by"
          ],
          "properties": {
            "enterprise": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1232234",
                  "description": "The ID of the enterprise"
                }
              },
              "description": "The enterprise to invite the user to"
            },
            "actionable_by": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "login": {
                  "type": "string",
                  "example": "john@example.com",
                  "description": "The login of the invited user"
                }
              },
              "description": "The user to invite"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Invite",
          "x-box-tag": "invites",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this invite"
            },
            "type": {
              "enum": [
                "invite"
              ],
              "type": "string",
              "example": "invite",
              "description": "`invite`"
            },
            "status": {
              "type": "string",
              "example": "pending",
              "description": "The status of the invite"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the invite was created"
            },
            "invited_by": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "User (Base)",
                  "x-box-tag": "users",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this user"
                    },
                    "type": {
                      "enum": [
                        "user"
                      ],
                      "type": "string",
                      "example": "user",
                      "nullable": false,
                      "description": "`user`"
                    }
                  },
                  "description": "A mini representation of a user, used when\nnested within another resource.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-resource-id": "user--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Aaron Levie",
                      "nullable": false,
                      "maxLength": 50,
                      "description": "The display name of this user"
                    },
                    "login": {
                      "type": "string",
                      "format": "email",
                      "example": "ceo@example.com",
                      "nullable": false,
                      "description": "The primary email address of this user"
                    }
                  }
                }
              ],
              "title": "User (Mini)",
              "description": "A mini representation of a user, as can be returned when nested within other resources.",
              "x-box-variant": "mini",
              "x-box-resource-id": "user--mini"
            },
            "invited_to": {
              "type": "object",
              "title": "Enterprise",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "11446498",
                  "description": "The unique identifier for this enterprise."
                },
                "name": {
                  "type": "string",
                  "example": "Acme Inc.",
                  "description": "The name of the enterprise"
                },
                "type": {
                  "enum": [
                    "enterprise"
                  ],
                  "type": "string",
                  "example": "enterprise",
                  "description": "`enterprise`"
                }
              },
              "description": "A representation of a Box enterprise"
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the invite was modified."
            },
            "actionable_by": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "User (Base)",
                  "x-box-tag": "users",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this user"
                    },
                    "type": {
                      "enum": [
                        "user"
                      ],
                      "type": "string",
                      "example": "user",
                      "nullable": false,
                      "description": "`user`"
                    }
                  },
                  "description": "A mini representation of a user, used when\nnested within another resource.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-resource-id": "user--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Aaron Levie",
                      "nullable": false,
                      "maxLength": 50,
                      "description": "The display name of this user"
                    },
                    "login": {
                      "type": "string",
                      "format": "email",
                      "example": "ceo@example.com",
                      "nullable": false,
                      "description": "The primary email address of this user"
                    }
                  }
                }
              ],
              "title": "User (Mini)",
              "description": "A mini representation of a user, as can be returned when nested within other resources.",
              "x-box-variant": "mini",
              "x-box-resource-id": "user--mini"
            }
          },
          "description": "An invite for a user to an enterprise.",
          "x-box-resource-id": "invite"
        }
      ]
  post_legal_hold_policies:
    description: |-
      Create a new legal hold policy.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-legal-hold-policies/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "policy_name"
          ],
          "properties": {
            "is_ongoing": {
              "type": "boolean",
              "example": true,
              "description": "Whether new assignments under this policy should\ncontinue applying to files even after initialization.\nWhen this policy is applied using a legal hold assignment,\nit will continue applying the policy to any new file versions\neven after it has been applied.\nFor example, if a legal hold assignment is placed on a user\ntoday, and that user uploads a file tomorrow, that file will\nget held. This will continue until the policy is retired.\nRequired if no filter dates are set."
            },
            "description": {
              "type": "string",
              "example": "A custom policy for the sales team",
              "maxLength": 500,
              "description": "A description for the policy."
            },
            "policy_name": {
              "type": "string",
              "example": "Sales Policy",
              "maxLength": 254,
              "description": "The name of the policy."
            },
            "filter_ended_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-18T18:53:43.000Z",
              "maxLength": 500,
              "description": "The filter end date.\nWhen this policy is applied using a `custodian` legal\nhold assignments, it will only apply to file versions\ncreated or uploaded inside of the\ndate range. Other assignment types, such as folders and\nfiles, will ignore the date filter.\nRequired if `is_ongoing` is set to `false`."
            },
            "filter_started_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "maxLength": 500,
              "description": "The filter start date.\nWhen this policy is applied using a `custodian` legal\nhold assignments, it will only apply to file versions\ncreated or uploaded inside of the\ndate range. Other assignment types, such as folders and\nfiles, will ignore the date filter.\nRequired if `is_ongoing` is set to `false`."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Legal hold policy (Mini)",
              "x-box-tag": "legal_hold_policies",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "11446498",
                  "description": "The unique identifier for this legal hold policy"
                },
                "type": {
                  "enum": [
                    "legal_hold_policy"
                  ],
                  "type": "string",
                  "example": "legal_hold_policy",
                  "description": "`legal_hold_policy`"
                }
              },
              "description": "A mini legal hold policy",
              "x-box-variant": "mini",
              "x-box-variants": [
                "mini",
                "standard"
              ],
              "x-box-resource-id": "legal_hold_policy--mini"
            },
            {
              "properties": {
                "status": {
                  "enum": [
                    "active",
                    "applying",
                    "releasing",
                    "released"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "* 'active' - the policy is not in a transition state\n* 'applying' - that the policy is in the process of\n  being applied\n* 'releasing' - that the process is in the process\n  of being released\n* 'released' - the policy is no longer active"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the legal hold policy object was created"
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created the legal hold policy object"
                    }
                  ]
                },
                "deleted_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the policy release request was sent. (Because\nit can take time for a policy to fully delete, this\nisn't quite the same time that the policy is fully deleted).\nIf `null`, the policy was not deleted."
                },
                "description": {
                  "type": "string",
                  "example": "Postman created policy",
                  "maxLength": 500,
                  "description": "Description of the legal hold policy. Optional\nproperty with a 500 character limit."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the legal hold policy object was modified.\nDoes not update when assignments are added or removed."
                },
                "policy_name": {
                  "type": "string",
                  "example": "Policy 4",
                  "maxLength": 254,
                  "description": "Name of the legal hold policy."
                },
                "release_notes": {
                  "type": "string",
                  "example": "Example",
                  "maxLength": 500,
                  "description": "Optional notes about why the policy was created."
                },
                "filter_ended_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "User-specified, optional date filter applies to\nCustodian assignments only"
                },
                "assignment_counts": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "integer",
                      "format": "int64",
                      "example": 3,
                      "description": "The number of files this policy is applied to"
                    },
                    "user": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1,
                      "description": "The number of users this policy is applied to"
                    },
                    "folder": {
                      "type": "integer",
                      "format": "int64",
                      "example": 2,
                      "description": "The number of folders this policy is applied to"
                    },
                    "file_version": {
                      "type": "integer",
                      "format": "int64",
                      "example": 4,
                      "description": "The number of file versions this policy is applied to"
                    }
                  },
                  "description": "Counts of assignments within this a legal hold policy by item type"
                },
                "filter_started_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "User-specified, optional date filter applies to\nCustodian assignments only"
                }
              }
            }
          ],
          "title": "Legal hold policy",
          "description": "Legal Hold Policy information describes the basic\ncharacteristics of the Policy, such as name, description,\nand filter dates.",
          "x-box-variant": "standard",
          "x-box-resource-id": "legal_hold_policy"
        }
      ]
  post_legal_hold_policy_assignments:
    description: |-
      Assign a legal hold to a file, file version, folder, or user.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-legal-hold-policy-assignments/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  post_metadata_cascade_policies:
    description: |-
      Creates a new metadata cascade policy that applies a given
      metadata template to a given folder and automatically
      cascades it down to any files within that folder.
      In order for the policy to be applied a metadata instance must first
      be applied to the folder the policy is to be applied to.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-metadata-cascade-policies/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "folder_id",
            "scope",
            "templateKey"
          ],
          "properties": {
            "scope": {
              "enum": [
                "global",
                "enterprise"
              ],
              "type": "string",
              "example": "enterprise",
              "description": "The scope of the targeted metadata template. This template will\nneed to already have an instance applied to the targeted folder."
            },
            "folder_id": {
              "type": "string",
              "example": "1234567",
              "description": "The ID of the folder to apply the policy to. This folder will\nneed to already have an instance of the targeted metadata\ntemplate applied to it."
            },
            "templateKey": {
              "type": "string",
              "example": "productInfo",
              "description": "The key of the targeted metadata template. This template will\nneed to already have an instance applied to the targeted folder.\nIn many cases the template key is automatically derived\nof its display name, for example `Contract Template` would\nbecome `contractTemplate`. In some cases the creator of the\ntemplate will have provided its own template key.\nPlease [list the templates for an enterprise][list], or\nget all instances on a [file][file] or [folder][folder]\nto inspect a template's key.\n[list]: e://get-metadata-templates-enterprise\n[file]: e://get-files-id-metadata\n[folder]: e://get-folders-id-metadata"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Metadata cascade policy",
          "x-box-tag": "metadata_cascade_policies",
          "properties": {
            "id": {
              "type": "string",
              "example": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
              "description": "The ID of the metadata cascade policy object"
            },
            "type": {
              "enum": [
                "metadata_cascade_policy"
              ],
              "type": "string",
              "example": "metadata_cascade_policy",
              "description": "`metadata_cascade_policy`"
            },
            "scope": {
              "enum": [
                "global",
                "enterprise_*"
              ],
              "type": "string",
              "example": "global",
              "description": "The scope of the of the template that is cascaded down to the folder's children."
            },
            "parent": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1234567",
                  "description": "The ID of the folder the policy is applied to."
                },
                "type": {
                  "enum": [
                    "folder"
                  ],
                  "type": "string",
                  "example": "folder",
                  "description": "`folder`"
                }
              },
              "description": "Represent the folder the policy is applied to."
            },
            "templateKey": {
              "type": "string",
              "example": "productInfo",
              "description": "The key of the template that is cascaded down to the folder's\nchildren.\nIn many cases the template key is automatically derived\nof its display name, for example `Contract Template` would\nbecome `contractTemplate`. In some cases the creator of the\ntemplate will have provided its own template key.\nPlease [list the templates for an enterprise][list], or\nget all instances on a [file][file] or [folder][folder]\nto inspect a template's key.\n[list]: e://get-metadata-templates-enterprise\n[file]: e://get-files-id-metadata\n[folder]: e://get-folders-id-metadata"
            },
            "owner_enterprise": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "690678",
                  "description": "The ID of the enterprise that owns the policy."
                },
                "type": {
                  "enum": [
                    "enterprise"
                  ],
                  "type": "string",
                  "example": "enterprise",
                  "description": "`enterprise`"
                }
              },
              "description": "The enterprise that owns this policy."
            }
          },
          "description": "A metadata cascade policy automatically applies a metadata template instance to all the files and folders within the targeted folder.",
          "x-box-resource-id": "metadata_cascade_policy"
        }
      ]
  post_metadata_cascade_policies_id_apply:
    description: |-
      Force the metadata on a folder with a metadata cascade policy to be applied to all of its children. This can be used after creating a new cascade policy to enforce the metadata to be cascaded down to all existing files within that folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-metadata-cascade-policies-id-apply/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "conflict_resolution"
          ],
          "properties": {
            "conflict_resolution": {
              "enum": [
                "none",
                "overwrite"
              ],
              "type": "string",
              "example": "none",
              "description": "Describes the desired behavior when dealing with the conflict\nwhere a metadata template already has an instance applied\nto a child.\n* `none` will preserve the existing value on the file\n* `overwrite` will force-apply the templates values over\n  any existing values."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  post_metadata_queries_execute_read:
    description: |-
      Create a search using SQL-like syntax to return items that match specific metadata.
      By default, this endpoint returns only the most basic info about the items for which the query matches. To get additional fields for each item, including any of the metadata, use the `fields` attribute in the query.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-metadata-queries-execute-read/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  post_metadata_templates_schema:
    description: |-
      Creates a new metadata template that can be applied to
      files and folders.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-metadata-templates-schema/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "scope",
            "displayName"
          ],
          "properties": {
            "scope": {
              "type": "string",
              "example": "enterprise",
              "description": "The scope of the metadata template to create. Applications can only create templates for use within the authenticated user's enterprise.\nThis value needs to be set to `enterprise`, as `global` scopes can not be created by applications."
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "object",
                "title": "Metadata Field (Write)",
                "required": [
                  "type",
                  "key",
                  "displayName"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "example": "category",
                    "maxLength": 256,
                    "description": "A unique identifier for the field. The identifier must\nbe unique within the template to which it belongs."
                  },
                  "type": {
                    "enum": [
                      "string",
                      "float",
                      "date",
                      "enum",
                      "multiSelect"
                    ],
                    "type": "string",
                    "example": "string",
                    "description": "The type of field. The basic fields are a `string` field for text, a `float` field for numbers, and a `date` fields to present the user with a date-time picker.\nAdditionally, metadata templates support an `enum` field for a basic list of items, and ` multiSelect` field for a similar list of items where the user can select more than one value."
                  },
                  "hidden": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether this field is hidden in the UI for the user and can only be set through the API instead."
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "title": "Metadata Option (Write)",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "example": "Category 1",
                          "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                        }
                      },
                      "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                    },
                    "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                  },
                  "description": {
                    "type": "string",
                    "example": "The category",
                    "maxLength": 4096,
                    "description": "A description of the field. This is not shown to the user."
                  },
                  "displayName": {
                    "type": "string",
                    "example": "Category",
                    "maxLength": 4096,
                    "description": "The display name of the field as it is shown to the user in the web and mobile apps."
                  }
                },
                "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
              },
              "description": "An ordered list of template fields which are part of the template. Each field can be a regular text field, date field, number field, as well as a single or multi-select list."
            },
            "hidden": {
              "type": "boolean",
              "default": false,
              "example": true,
              "description": "Defines if this template is visible in the Box web app UI, or if\nit is purely intended for usage through the API."
            },
            "displayName": {
              "type": "string",
              "example": "Product Info",
              "maxLength": 4096,
              "description": "The display name of the template."
            },
            "templateKey": {
              "type": "string",
              "example": "productInfo",
              "pattern": "^[a-zA-Z_][-a-zA-Z0-9_]*$",
              "maxLength": 64,
              "description": "A unique identifier for the template. This identifier needs to be unique across the enterprise for which the metadata template is being created.\nWhen not provided, the API will create a unique `templateKey` based on the value of the `displayName`."
            },
            "copyInstanceOnItemCopy": {
              "type": "boolean",
              "default": false,
              "example": true,
              "description": "Whether or not to copy any metadata attached to a file or folder when it is copied. By default, metadata is not copied along with a file or folder when it is copied."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Metadata template",
          "x-box-tag": "metadata_templates",
          "properties": {
            "id": {
              "type": "string",
              "example": "58063d82-4128-7b43-bba9-92f706befcdf",
              "description": "The ID of the metadata template."
            },
            "type": {
              "enum": [
                "metadata_template"
              ],
              "type": "string",
              "example": "metadata_template",
              "nullable": false,
              "description": "`metadata_template`"
            },
            "scope": {
              "type": "string",
              "example": "enterprise_123456",
              "description": "The scope of the metadata template can either be `global` or `enterprise_*`. The `global` scope is used for templates that are available to any Box enterprise. The `enterprise_*` scope represents templates that have been created within a specific enterprise, where `*` will be the ID of that enterprise."
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "title": "Metadata Field (Write)",
                    "required": [
                      "type",
                      "key",
                      "displayName"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "example": "category",
                        "maxLength": 256,
                        "description": "A unique identifier for the field. The identifier must\nbe unique within the template to which it belongs."
                      },
                      "type": {
                        "enum": [
                          "string",
                          "float",
                          "date",
                          "enum",
                          "multiSelect"
                        ],
                        "type": "string",
                        "example": "string",
                        "description": "The type of field. The basic fields are a `string` field for text, a `float` field for numbers, and a `date` fields to present the user with a date-time picker.\nAdditionally, metadata templates support an `enum` field for a basic list of items, and ` multiSelect` field for a similar list of items where the user can select more than one value."
                      },
                      "hidden": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether this field is hidden in the UI for the user and can only be set through the API instead."
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "title": "Metadata Option (Write)",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "example": "Category 1",
                              "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                            }
                          },
                          "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                        },
                        "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                      },
                      "description": {
                        "type": "string",
                        "example": "The category",
                        "maxLength": 4096,
                        "description": "A description of the field. This is not shown to the user."
                      },
                      "displayName": {
                        "type": "string",
                        "example": "Category",
                        "maxLength": 4096,
                        "description": "The display name of the field as it is shown to the user in the web and mobile apps."
                      }
                    },
                    "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
                  },
                  {
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "822227e0-47a5-921b-88a8-494760b2e6d2",
                        "description": "The unique ID of the metadata template field."
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "Metadata Option (Write)",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "example": "Category 1",
                                  "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                                }
                              },
                              "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                            },
                            {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "45dc2849-a4a7-40a9-a751-4a699a589190",
                                  "description": "The internal unique identifier of the the option."
                                }
                              }
                            }
                          ],
                          "description": "An option for a Metadata Template Field.\nOptions are only present for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                        },
                        "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                      }
                    }
                  }
                ],
                "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
              },
              "description": "An ordered list of template fields which are part of the template. Each field can be a regular text field, date field, number field, as well as a single or multi-select list."
            },
            "hidden": {
              "type": "boolean",
              "example": true,
              "description": "Defines if this template is visible in the Box web app UI, or if\nit is purely intended for usage through the API."
            },
            "displayName": {
              "type": "string",
              "example": "Product Info",
              "maxLength": 4096,
              "description": "The display name of the template. This can be seen in the Box web app and mobile apps."
            },
            "templateKey": {
              "type": "string",
              "example": "productInfo",
              "pattern": "^[a-zA-Z_][-a-zA-Z0-9_]*$",
              "maxLength": 64,
              "description": "A unique identifier for the template. This identifier is unique across the `scope` of the enterprise to which the metadata template is being applied, yet is not necessarily unique across different enterprises."
            },
            "copyInstanceOnItemCopy": {
              "type": "boolean",
              "example": true,
              "description": "Whether or not to include the metadata when a file or folder is copied."
            }
          },
          "description": "A template for metadata that can be applied to files and folders",
          "x-box-resource-id": "metadata_template"
        }
      ]
  post_metadata_templates_schema#classifications:
    description: |-
      When an enterprise does not yet have any classifications, this API call
      initializes the classification template with an initial set of
      classifications.
      If an enterprise already has a classification, the template will already
      exist and instead an API call should be made to add additional
      classifications.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-metadata-templates-schema--classifications/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "scope",
            "displayName"
          ],
          "properties": {
            "scope": {
              "enum": [
                "enterprise"
              ],
              "type": "string",
              "example": "enterprise",
              "description": "The scope in which to create the classifications. This should\nbe `enterprise` or `enterprise_{id}` where `id` is the unique\nID of the enterprise."
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "enum": [
                      "Box__Security__Classification__Key"
                    ],
                    "type": "string",
                    "example": "Box__Security__Classification__Key",
                    "description": "`Box__Security__Classification__Key`"
                  },
                  "type": {
                    "enum": [
                      "enum"
                    ],
                    "type": "string",
                    "example": "enum",
                    "description": "`enum`"
                  },
                  "hidden": {
                    "type": "boolean",
                    "example": false,
                    "description": "`false`"
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "example": "Sensitive",
                          "description": "The display name and key this classification. This\nwill be show in the Box UI."
                        },
                        "staticConfig": {
                          "type": "object",
                          "properties": {
                            "classification": {
                              "type": "object",
                              "properties": {
                                "colorID": {
                                  "type": "number",
                                  "example": 4,
                                  "description": "An identifier used to assign a color to\na classification label.\nMapping between a `colorID` and a color may\nchange without notice. Currently, the color\nmappings are as follows.\n* `0`: Yellow\n* `1`: Orange\n* `2`: Watermelon red\n* `3`: Purple rain\n* `4`: Light blue\n* `5`: Dark blue\n* `6`: Light green\n* `7`: Gray"
                                },
                                "classificationDefinition": {
                                  "type": "string",
                                  "example": "Sensitive information",
                                  "description": "A longer description of the classification."
                                }
                              },
                              "description": "Additional information about the classification."
                            }
                          },
                          "description": "Additional information about the classification."
                        }
                      },
                      "description": "An individual classification."
                    },
                    "description": "The actual list of classifications that are present on\nthis template."
                  },
                  "displayName": {
                    "enum": [
                      "Classification"
                    ],
                    "type": "string",
                    "example": "Classification",
                    "description": "`Classification`"
                  }
                },
                "description": "The `enum` field which holds all the valid classification\nvalues."
              },
              "description": "The classification template holds one field, which holds\nall the valid classification values."
            },
            "hidden": {
              "type": "boolean",
              "example": false,
              "description": "`false`"
            },
            "displayName": {
              "enum": [
                "Classification"
              ],
              "type": "string",
              "example": "Classification",
              "description": "`Classification`"
            },
            "templateKey": {
              "enum": [
                "securityClassification-6VMVochwUWo"
              ],
              "type": "string",
              "example": "securityClassification-6VMVochwUWo",
              "description": "`securityClassification-6VMVochwUWo`"
            },
            "copyInstanceOnItemCopy": {
              "type": "boolean",
              "example": false,
              "description": "`false`"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Classification Template",
          "x-box-tag": "classifications",
          "properties": {
            "id": {
              "type": "string",
              "example": "58063d82-4128-7b43-bba9-92f706befcdf",
              "description": "The ID of the classification template."
            },
            "type": {
              "enum": [
                "metadata_template"
              ],
              "type": "string",
              "example": "metadata_template",
              "nullable": false,
              "description": "`metadata_template`"
            },
            "scope": {
              "type": "string",
              "example": "enterprise_123456",
              "description": "The scope of the classification template. This is in the format\n`enterprise_{id}` where the `id` is the enterprise ID."
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "822227e0-47a5-921b-88a8-494760b2e6d2",
                    "description": "The unique ID of the field."
                  },
                  "key": {
                    "enum": [
                      "Box__Security__Classification__Key"
                    ],
                    "type": "string",
                    "example": "Box__Security__Classification__Key",
                    "description": "`Box__Security__Classification__Key`"
                  },
                  "type": {
                    "enum": [
                      "enum"
                    ],
                    "type": "string",
                    "example": "enum",
                    "description": "`enum`"
                  },
                  "hidden": {
                    "type": "boolean",
                    "example": false,
                    "description": "Classifications are always visible to web and mobile users."
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "46aea176-3483-4431-856c-6b5b13d1cc50",
                          "description": "The unique ID of this classification."
                        },
                        "key": {
                          "type": "string",
                          "example": "Sensitive",
                          "description": "The display name and key for this classification."
                        },
                        "staticConfig": {
                          "type": "object",
                          "properties": {
                            "classification": {
                              "type": "object",
                              "properties": {
                                "colorID": {
                                  "type": "number",
                                  "example": 4,
                                  "description": "An internal Box identifier used to assign a color to a classification label.\nMapping between a `colorID` and a color may change without notice. Currently, the color mappings are as follows.\n* `0`: Yellow * `1`: Orange * `2`: Watermelon red * `3`: Purple rain * `4`: Light blue * `5`: Dark blue * `6`: Light green * `7`: Gray"
                                },
                                "classificationDefinition": {
                                  "type": "string",
                                  "example": "Sensitive information",
                                  "description": "A longer description of the classification."
                                }
                              },
                              "description": "Additional information about the classification.\nThis is not an exclusive list of properties, and more object fields might be returned. These fields are used for internal Box Shield and Box Governance purposes and no additional value must be derived from these fields."
                            }
                          },
                          "description": "Additional information about the classification."
                        }
                      },
                      "description": "A single classification available in this enterprise."
                    },
                    "minItems": 1,
                    "description": "A list of classifications available in this enterprise."
                  },
                  "displayName": {
                    "enum": [
                      "Classification"
                    ],
                    "type": "string",
                    "example": "Classification",
                    "description": "`Classification`"
                  }
                },
                "description": "The metadata template field that represents the available\nclassifications."
              },
              "maxItems": 1,
              "minItems": 1,
              "description": "A list of fields for this classification template. This includes only one field, the `Box__Security__Classification__Key`, which defines the different classifications available in this enterprise."
            },
            "hidden": {
              "type": "boolean",
              "example": false,
              "description": "This template is always available in web and mobile interfaces."
            },
            "displayName": {
              "enum": [
                "Classification"
              ],
              "type": "string",
              "example": "Classification",
              "description": "The name of this template as shown in web and mobile interfaces."
            },
            "templateKey": {
              "enum": [
                "securityClassification-6VMVochwUWo"
              ],
              "type": "string",
              "example": "securityClassification-6VMVochwUWo",
              "description": "`securityClassification-6VMVochwUWo`"
            },
            "copyInstanceOnItemCopy": {
              "type": "boolean",
              "example": true,
              "description": "Classifications are always copied along when the file or folder is copied."
            }
          },
          "description": "A metadata template that holds the security classifications\ndefined by an enterprise.",
          "x-box-resource-id": "classification_template"
        }
      ]
  post_oauth2_revoke:
    description: |-
      Revoke an active Access Token, effectively logging a user out
      that has been previously authenticated.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-oauth2-revoke/
    example:
      inputs: [
        {
          "type": "object",
          "title": "Token revocation request",
          "required": [
            "grant_type"
          ],
          "properties": {
            "token": {
              "type": "string",
              "format": "token",
              "example": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW",
              "description": "The access token to revoke."
            },
            "client_id": {
              "type": "string",
              "example": "ly1nj6n11vionaie65emwzk575hnnmrk",
              "description": "The Client ID of the application requesting to revoke the\naccess token."
            },
            "client_secret": {
              "type": "string",
              "example": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1",
              "description": "The client secret of the application requesting to revoke\nan access token."
            }
          },
          "description": "A request to revoke an OAuth 2.0 token"
        }
      ]
      outputs: [
        {}
      ]
  post_oauth2_token:
    description: |-
      Request an Access Token using either a client-side obtained OAuth 2.0
      authorization code or a server-side JWT assertion.
      An Access Token is a string that enables Box to verify that a
      request belongs to an authorized session. In the normal order of
      operations you will begin by requesting authentication from the
      [authorize](#get-authorize) endpoint and Box will send you an
      authorization code.
      You will then send this code to this endpoint to exchange it for
      an Access Token. The returned Access Token can then be used to to make
      Box API calls.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-oauth2-token/
    example:
      inputs: [
        {
          "type": "object",
          "title": "Token request",
          "required": [
            "grant_type"
          ],
          "properties": {
            "code": {
              "type": "string",
              "format": "token",
              "example": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW",
              "description": "The client-side authorization code passed to your application by Box in the browser redirect after the user has successfully granted your application permission to make API calls on their behalf.\nUsed in combination with `authorization_code` as the `grant_type`."
            },
            "scope": {
              "type": "string",
              "format": "space_delimited_list",
              "example": "item_upload item_preview base_explorer",
              "description": "The space-delimited list of scopes that you want apply to the\nnew access token.\nThe `subject_token` will need to have all of these scopes or\nthe call will error with **401 Unauthorized**."
            },
            "resource": {
              "type": "string",
              "format": "url",
              "example": "https://api.box.com/2.0/files/123456",
              "description": "Full URL for the file that the token should be generated for."
            },
            "assertion": {
              "type": "string",
              "format": "jwt",
              "example": "xxxxx.yyyyy.zzzzz",
              "description": "A JWT assertion for which to request a new access token.\nUsed in combination with `urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`."
            },
            "client_id": {
              "type": "string",
              "example": "ly1nj6n11vionaie65emwzk575hnnmrk",
              "description": "The Client ID of the application requesting an access token.\nUsed in combination with `authorization_code`, `client_credentials`, or `urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`."
            },
            "grant_type": {
              "enum": [
                "authorization_code",
                "refresh_token",
                "client_credentials",
                "urn:ietf:params:oauth:grant-type:jwt-bearer",
                "urn:ietf:params:oauth:grant-type:token-exchange"
              ],
              "type": "string",
              "format": "urn",
              "example": "authorization_code",
              "description": "The type of request being made, either using a client-side obtained authorization code, a refresh token, a JWT assertion, client credentials grant or another access token for the purpose of downscoping a token."
            },
            "actor_token": {
              "type": "string",
              "format": "token",
              "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
              "description": "The token used to create an annotator token. This is a JWT assertion.\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange` as the `grant_type`."
            },
            "client_secret": {
              "type": "string",
              "example": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1",
              "description": "The client secret of the application requesting an access token.\nUsed in combination with `authorization_code`, `client_credentials`, or `urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`."
            },
            "refresh_token": {
              "type": "string",
              "format": "token",
              "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
              "description": "A refresh token used to get a new access token with.\nUsed in combination with `refresh_token` as the `grant_type`."
            },
            "subject_token": {
              "type": "string",
              "format": "token",
              "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
              "description": "The token to exchange for a downscoped token. This can be a regular access token, a JWT assertion, or an app token.\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange` as the `grant_type`."
            },
            "box_subject_id": {
              "type": "string",
              "example": "123456789",
              "description": "Used in combination with `client_credentials` as the `grant_type`. Value is determined by `box_subject_type`. If `user` use user ID and if `enterprise` use enterprise ID."
            },
            "box_shared_link": {
              "type": "string",
              "format": "url",
              "example": "https://cloud.box.com/s/123456",
              "description": "Full URL of the shared link on the file or folder\nthat the token should be generated for."
            },
            "actor_token_type": {
              "enum": [
                "urn:ietf:params:oauth:token-type:id_token"
              ],
              "type": "string",
              "format": "urn",
              "example": "urn:ietf:params:oauth:token-type:id_token",
              "description": "The type of `actor_token` passed in.\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange` as the `grant_type`."
            },
            "box_subject_type": {
              "enum": [
                "enterprise",
                "user"
              ],
              "type": "string",
              "example": "enterprise",
              "description": "Used in combination with `client_credentials` as the `grant_type`."
            },
            "subject_token_type": {
              "enum": [
                "urn:ietf:params:oauth:token-type:access_token"
              ],
              "type": "string",
              "example": "urn:ietf:params:oauth:token-type:access_token",
              "description": "The type of `subject_token` passed in.\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange` as the `grant_type`."
            }
          },
          "description": "A request for a new OAuth 2.0 token"
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Access token",
          "x-box-tag": "authorization",
          "properties": {
            "expires_in": {
              "type": "integer",
              "format": "int64",
              "example": 3600,
              "description": "The time in seconds in seconds by which this token will expire."
            },
            "token_type": {
              "enum": [
                "bearer"
              ],
              "type": "string",
              "example": "bearer",
              "description": "The type of access token returned."
            },
            "access_token": {
              "type": "string",
              "format": "token",
              "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
              "description": "The requested access token."
            },
            "refresh_token": {
              "type": "string",
              "format": "token",
              "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
              "description": "The refresh token for this access token, which can be used\nto request a new access token when the current one expires."
            },
            "restricted_to": {
              "type": "array",
              "items": {
                "type": "object",
                "title": "File scope",
                "properties": {
                  "scope": {
                    "enum": [
                      "annotation_edit",
                      "annotation_view_all",
                      "annotation_view_self",
                      "base_explorer",
                      "base_picker",
                      "base_preview",
                      "base_upload",
                      "item_delete",
                      "item_download",
                      "item_preview",
                      "item_rename",
                      "item_share"
                    ],
                    "type": "string",
                    "example": "item_download",
                    "description": "The file scopes for the file access"
                  },
                  "object": {
                    "allOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "File (Base)",
                            "x-box-tag": "files",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "12345",
                                "nullable": false,
                                "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                              },
                              "etag": {
                                "type": "string",
                                "example": "1",
                                "nullable": true,
                                "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                              },
                              "type": {
                                "enum": [
                                  "file"
                                ],
                                "type": "string",
                                "example": "file",
                                "nullable": false,
                                "description": "`file`"
                              }
                            },
                            "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-sanitized": true,
                            "x-box-resource-id": "file--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Contract.pdf",
                                "description": "The name of the file"
                              },
                              "sha1": {
                                "type": "string",
                                "format": "digest",
                                "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                "nullable": false,
                                "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                              },
                              "sequence_id": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "3",
                                    "nullable": false,
                                    "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                  },
                                  {
                                    "nullable": false
                                  }
                                ]
                              },
                              "file_version": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File version (Base)",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file version."
                                          },
                                          "type": {
                                            "enum": [
                                              "file_version"
                                            ],
                                            "type": "string",
                                            "example": "file_version",
                                            "nullable": false,
                                            "description": "`file_version`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file_version--base"
                                      },
                                      {
                                        "properties": {
                                          "sha1": {
                                            "type": "string",
                                            "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                            "description": "The SHA1 hash of this version of the file."
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File version (Mini)",
                                    "description": "A mini representation of a file version, used when nested within another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file_version--mini"
                                  },
                                  {
                                    "description": "The information about the current version of the file."
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "title": "File (Mini)",
                        "description": "A mini representation of a file, used when\nnested under another resource.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "file--mini"
                      },
                      {
                        "description": "The file for which the file can be accessed"
                      }
                    ]
                  }
                },
                "description": "A relation between a file and the scopes for which the file can be accessed"
              },
              "description": "The permissions that this access token permits,\nproviding a list of resources (files, folders, etc)\nand the scopes permitted for each of those resources."
            },
            "issued_token_type": {
              "enum": [
                "urn:ietf:params:oauth:token-type:access_token"
              ],
              "type": "string",
              "format": "urn",
              "example": "urn:ietf:params:oauth:token-type:access_token",
              "description": "The type of downscoped access token returned. This is only\nreturned if an access token has been downscoped."
            }
          },
          "description": "A token that can be used to make authenticated API calls.",
          "x-box-resource-id": "access_token"
        }
      ]
  post_oauth2_token#refresh:
    description: |-
      Refresh an Access Token using its client ID, secret, and refresh token.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-oauth2-token--refresh/
    example:
      inputs: [
        {
          "type": "object",
          "title": "Refresh access token",
          "required": [
            "grant_type",
            "client_id",
            "client_secret",
            "refresh_token"
          ],
          "properties": {
            "client_id": {
              "type": "string",
              "example": "ly1nj6n11vionaie65emwzk575hnnmrk",
              "description": "The client ID of the application requesting to refresh the token."
            },
            "grant_type": {
              "enum": [
                "refresh_token"
              ],
              "type": "string",
              "format": "urn",
              "example": "refresh_token",
              "description": "The type of request being made, in this case a refresh request."
            },
            "client_secret": {
              "type": "string",
              "example": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1",
              "description": "The client secret of the application requesting to refresh the token."
            },
            "refresh_token": {
              "type": "string",
              "format": "token",
              "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
              "description": "The refresh token to refresh."
            }
          },
          "description": "A request to refresh an Access Token. Use this API to refresh an expired Access Token using a valid Refresh Token."
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Access token",
          "x-box-tag": "authorization",
          "properties": {
            "expires_in": {
              "type": "integer",
              "format": "int64",
              "example": 3600,
              "description": "The time in seconds in seconds by which this token will expire."
            },
            "token_type": {
              "enum": [
                "bearer"
              ],
              "type": "string",
              "example": "bearer",
              "description": "The type of access token returned."
            },
            "access_token": {
              "type": "string",
              "format": "token",
              "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
              "description": "The requested access token."
            },
            "refresh_token": {
              "type": "string",
              "format": "token",
              "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
              "description": "The refresh token for this access token, which can be used\nto request a new access token when the current one expires."
            },
            "restricted_to": {
              "type": "array",
              "items": {
                "type": "object",
                "title": "File scope",
                "properties": {
                  "scope": {
                    "enum": [
                      "annotation_edit",
                      "annotation_view_all",
                      "annotation_view_self",
                      "base_explorer",
                      "base_picker",
                      "base_preview",
                      "base_upload",
                      "item_delete",
                      "item_download",
                      "item_preview",
                      "item_rename",
                      "item_share"
                    ],
                    "type": "string",
                    "example": "item_download",
                    "description": "The file scopes for the file access"
                  },
                  "object": {
                    "allOf": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "title": "File (Base)",
                            "x-box-tag": "files",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "12345",
                                "nullable": false,
                                "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                              },
                              "etag": {
                                "type": "string",
                                "example": "1",
                                "nullable": true,
                                "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                              },
                              "type": {
                                "enum": [
                                  "file"
                                ],
                                "type": "string",
                                "example": "file",
                                "nullable": false,
                                "description": "`file`"
                              }
                            },
                            "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                            "x-box-variant": "base",
                            "x-box-variants": [
                              "base",
                              "mini",
                              "standard",
                              "full"
                            ],
                            "x-box-sanitized": true,
                            "x-box-resource-id": "file--base"
                          },
                          {
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Contract.pdf",
                                "description": "The name of the file"
                              },
                              "sha1": {
                                "type": "string",
                                "format": "digest",
                                "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                "nullable": false,
                                "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                              },
                              "sequence_id": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "3",
                                    "nullable": false,
                                    "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                  },
                                  {
                                    "nullable": false
                                  }
                                ]
                              },
                              "file_version": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File version (Base)",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file version."
                                          },
                                          "type": {
                                            "enum": [
                                              "file_version"
                                            ],
                                            "type": "string",
                                            "example": "file_version",
                                            "nullable": false,
                                            "description": "`file_version`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file_version--base"
                                      },
                                      {
                                        "properties": {
                                          "sha1": {
                                            "type": "string",
                                            "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                            "description": "The SHA1 hash of this version of the file."
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File version (Mini)",
                                    "description": "A mini representation of a file version, used when nested within another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file_version--mini"
                                  },
                                  {
                                    "description": "The information about the current version of the file."
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "title": "File (Mini)",
                        "description": "A mini representation of a file, used when\nnested under another resource.",
                        "x-box-variant": "mini",
                        "x-box-resource-id": "file--mini"
                      },
                      {
                        "description": "The file for which the file can be accessed"
                      }
                    ]
                  }
                },
                "description": "A relation between a file and the scopes for which the file can be accessed"
              },
              "description": "The permissions that this access token permits,\nproviding a list of resources (files, folders, etc)\nand the scopes permitted for each of those resources."
            },
            "issued_token_type": {
              "enum": [
                "urn:ietf:params:oauth:token-type:access_token"
              ],
              "type": "string",
              "format": "urn",
              "example": "urn:ietf:params:oauth:token-type:access_token",
              "description": "The type of downscoped access token returned. This is only\nreturned if an access token has been downscoped."
            }
          },
          "description": "A token that can be used to make authenticated API calls.",
          "x-box-resource-id": "access_token"
        }
      ]
  post_retention_policies:
    description: |-
      Creates a retention policy.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-retention-policies/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "policy_name",
            "policy_type",
            "disposition_action"
          ],
          "properties": {
            "policy_name": {
              "type": "string",
              "example": "Some Policy Name",
              "description": "The name for the retention policy"
            },
            "policy_type": {
              "enum": [
                "finite",
                "indefinite"
              ],
              "type": "string",
              "example": "finite",
              "description": "The type of the retention policy. A retention\npolicy type can either be `finite`, where a\nspecific amount of time to retain the content is known\nupfront, or `indefinite`, where the amount of time\nto retain the content is still unknown."
            },
            "retention_length": {
              "type": "string",
              "format": "int32",
              "example": "365",
              "minimum": 1,
              "description": "The length of the retention policy. This length\nspecifies the duration in days that the retention\npolicy will be active for after being assigned to\ncontent.  If the policy has A `policy_type` of\n`indefinite`, the `retention_length` will also be\n`indefinite`."
            },
            "disposition_action": {
              "enum": [
                "permanently_delete",
                "remove_retention"
              ],
              "type": "string",
              "example": "permanently_delete",
              "description": "The disposition action of the retention policy.\nThis action can be `permanently_delete`, which\nwill cause the content retained by the policy\nto be permanently deleted, or `remove_retention`,\nwhich will lift the retention policy from the content,\nallowing it to be deleted by users,\nonce the retention policy has expired."
            },
            "are_owners_notified": {
              "type": "boolean",
              "example": true,
              "description": "Whether owner and co-owners of a file are notified\nwhen the policy nears expiration."
            },
            "can_owner_extend_retention": {
              "type": "boolean",
              "example": true,
              "description": "Whether the owner of a file will be allowed to\nextend the retention."
            },
            "custom_notification_recipients": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "12312312",
                    "description": "The id of the user to notify"
                  },
                  "name": {
                    "type": "string",
                    "example": "Tim Apple",
                    "description": "The name of the user to notify"
                  },
                  "type": {
                    "enum": [
                      "user"
                    ],
                    "type": "string",
                    "example": "user",
                    "description": "The type of item to notify"
                  },
                  "login": {
                    "type": "string",
                    "example": "apple@example.com",
                    "description": "The email address the user uses to notify"
                  }
                },
                "description": "A user that is notified of an event."
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Retention policy (Base)",
                  "x-box-tag": "retention_policies",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a file version."
                    },
                    "type": {
                      "enum": [
                        "retention_policy"
                      ],
                      "type": "string",
                      "example": "retention_policy",
                      "nullable": false,
                      "description": "`retention_policy`"
                    }
                  },
                  "description": "The bare basic representation of a file version, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard"
                  ],
                  "x-box-resource-id": "retention_policy--base"
                },
                {
                  "properties": {
                    "policy_name": {
                      "type": "string",
                      "example": "Some Policy Name",
                      "description": "The name given to the retention policy"
                    },
                    "retention_length": {
                      "type": "string",
                      "format": "int32",
                      "example": "365",
                      "minimum": 1,
                      "description": "The length of the retention policy. This length\nspecifies the duration in days that the retention\npolicy will be active for after being assigned to\ncontent.  If the policy has A `policy_type` of\n`indefinite`, the `retention_length` will also be\n`indefinite`."
                    },
                    "disposition_action": {
                      "enum": [
                        "permanently_delete",
                        "remove_retention"
                      ],
                      "type": "string",
                      "example": "permanently_delete",
                      "description": "The disposition action of the retention policy.\nThis action can be `permanently_delete`, which\nwill cause the content retained by the policy\nto be permanently deleted, or `remove_retention`,\nwhich will lift the retention policy from the content,\nallowing it to be deleted by users,\nonce the retention policy has expired."
                    }
                  }
                }
              ],
              "title": "Retention policy (Mini)",
              "description": "A mini representation of a retention policy, used when\nnested within another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "retention_policy--mini"
            },
            {
              "properties": {
                "status": {
                  "enum": [
                    "active",
                    "retired"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "The status of the retention policy. The status of\na policy will be `active`, unless explicitly retired by an\nadministrator, in which case the status will be `retired`.\nOnce a policy has been retired, it cannot become\nactive again."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the retention policy object was created"
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "A mini user object representing the user that\ncreated the retention policy"
                    }
                  ]
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the retention policy object was last modified"
                },
                "policy_type": {
                  "enum": [
                    "finite",
                    "indefinite"
                  ],
                  "type": "string",
                  "example": "finite",
                  "description": "The type of the retention policy. A retention\npolicy type can either be `finite`, where a\nspecific amount of time to retain the content is known\nupfront, or `indefinite`, where the amount of time\nto retain the content is still unknown."
                }
              }
            }
          ],
          "title": "Retention policy",
          "x-box-tag": "retention_policies",
          "description": "A retention policy blocks permanent deletion of content\nfor a specified amount of time. Admins can create retention\npolicies and then later assign them to specific folders\nor their entire enterprise.  To use this feature, you must\nhave the manage retention policies scope enabled\nfor your API key via your application management console.",
          "x-box-variant": "standard",
          "x-box-resource-id": "retention_policy"
        }
      ]
  post_retention_policy_assignments:
    description: |-
      Assigns a retention policy to an item.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-retention-policy-assignments/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "policy_id",
            "assign_to"
          ],
          "properties": {
            "assign_to": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "6564564",
                  "description": "The ID of item to assign the policy to.\nSet to `null` or omit when `type` is set to\n`enterprise`."
                },
                "type": {
                  "enum": [
                    "enterprise",
                    "folder",
                    "metadata_template"
                  ],
                  "type": "string",
                  "example": "folder",
                  "description": "The type of item to assign the policy to."
                }
              },
              "description": "The item to assign the policy to"
            },
            "policy_id": {
              "type": "string",
              "example": "173463",
              "description": "The ID of the retention policy to assign"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Retention policy assignment",
          "x-box-tag": "retention_policy_assignments",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this retention policy assignment"
            },
            "type": {
              "enum": [
                "retention_policy_assignment"
              ],
              "type": "string",
              "example": "retention_policy_assignment",
              "description": "`retention_policy_assignment`"
            },
            "assigned_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the retention policy assignment object was\ncreated"
            },
            "assigned_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "A mini user object representing the user that\ncreated the retention policy assignment object"
                }
              ]
            },
            "assigned_to": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Reference",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this object"
                    },
                    "type": {
                      "type": "string",
                      "example": "file",
                      "description": "The type for this object"
                    }
                  },
                  "description": "The bare basic reference for an object"
                },
                {
                  "description": "The `type` and `id` of the content that is under\nretention. The `type` can either be `folder` or `\nenterprise`."
                }
              ]
            },
            "retention_policy": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Retention policy (Base)",
                      "x-box-tag": "retention_policies",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a file version."
                        },
                        "type": {
                          "enum": [
                            "retention_policy"
                          ],
                          "type": "string",
                          "example": "retention_policy",
                          "nullable": false,
                          "description": "`retention_policy`"
                        }
                      },
                      "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard"
                      ],
                      "x-box-resource-id": "retention_policy--base"
                    },
                    {
                      "properties": {
                        "policy_name": {
                          "type": "string",
                          "example": "Some Policy Name",
                          "description": "The name given to the retention policy"
                        },
                        "retention_length": {
                          "type": "string",
                          "format": "int32",
                          "example": "365",
                          "minimum": 1,
                          "description": "The length of the retention policy. This length\nspecifies the duration in days that the retention\npolicy will be active for after being assigned to\ncontent.  If the policy has A `policy_type` of\n`indefinite`, the `retention_length` will also be\n`indefinite`."
                        },
                        "disposition_action": {
                          "enum": [
                            "permanently_delete",
                            "remove_retention"
                          ],
                          "type": "string",
                          "example": "permanently_delete",
                          "description": "The disposition action of the retention policy. This action can be `permanently_delete`, which will cause the content retained by the policy to be permanently deleted, or `remove_retention`, which will lift the retention policy from the content, allowing it to be deleted by users, once the retention policy has expired."
                        }
                      }
                    }
                  ],
                  "title": "Retention policy (Mini)",
                  "description": "A mini representation of a retention policy, used when\nnested within another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "retention_policy--mini"
                },
                {
                  "description": "A mini retention policy object representing the\nretention policy that has been assigned to this content"
                }
              ]
            }
          },
          "description": "The retention policy assignment endpoint provides a way\nfor admins to apply a retention policy on a per-folder\nbasis, or place a blanket policy over the entire\nenterprise.",
          "x-box-resource-id": "retention_policy_assignment"
        }
      ]
  post_storage_policy_assignments:
    description: |-
      Creates a storage policy assignment for an enterprise or user.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-storage-policy-assignments/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "storage_policy",
            "assigned_to"
          ],
          "properties": {
            "assigned_to": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "9987987",
                  "description": "The ID of the user or enterprise"
                },
                "type": {
                  "enum": [
                    "user",
                    "enterprise"
                  ],
                  "type": "string",
                  "example": "user",
                  "description": "The type to assign the policy to."
                }
              },
              "description": "The user or enterprise to assign the storage\npolicy to."
            },
            "storage_policy": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1434325",
                  "description": "The ID of the storage policy to assign."
                },
                "type": {
                  "enum": [
                    "storage_policy"
                  ],
                  "type": "string",
                  "example": "storage_policy",
                  "description": "The type to assign."
                }
              },
              "description": "The storage policy to assign to the user or\nenterprise"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Storage policy assignment",
          "x-box-tag": "storage_policy_assignments",
          "properties": {
            "assigned_to": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Reference",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this object"
                    },
                    "type": {
                      "type": "string",
                      "example": "file",
                      "description": "The type for this object"
                    }
                  },
                  "description": "The bare basic reference for an object"
                },
                {
                  "description": "The enterprise or use the policy is assigned to"
                }
              ]
            },
            "storage_policy": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Storage policy (Mini)",
                  "x-box-tag": "storage_policies",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this storage policy"
                    },
                    "type": {
                      "enum": [
                        "storage_policy"
                      ],
                      "type": "string",
                      "example": "storage_policy",
                      "description": "`storage_policy`"
                    }
                  },
                  "description": "A mini description of a Storage Policy object",
                  "x-box-variant": "mini",
                  "x-box-variants": [
                    "standard",
                    "mini"
                  ],
                  "x-box-resource-id": "storage_policy--mini"
                },
                {
                  "description": "The assigned storage policy"
                }
              ]
            }
          },
          "description": "The assignment of a storage policy to a user or enterprise",
          "x-box-resource-id": "storage_policy_assignment"
        }
      ]
  post_task_assignments:
    description: |-
      Assigns a task to a user.
      A task can be assigned to more than one user by creating multiple
      assignments.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-task-assignments/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "task",
            "assign_to"
          ],
          "properties": {
            "task": {
              "type": "object",
              "required": [
                "id",
                "type"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "11446498",
                  "description": "The ID of the task"
                },
                "type": {
                  "enum": [
                    "task"
                  ],
                  "type": "string",
                  "example": "task",
                  "description": "The type of the item to assign."
                }
              },
              "description": "The task to assign to a user."
            },
            "assign_to": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "3242343",
                  "description": "The ID of the user to assign to the\ntask.\nTo specify a user by their email\naddress use the `login` parameter."
                },
                "login": {
                  "type": "string",
                  "example": "john@example.com",
                  "description": "The email address of the user to assign to the task. To specify a user by their user ID please use the `id` parameter."
                }
              },
              "description": "The user to assign the task to."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Task assignment",
          "x-box-tag": "task_assignments",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this task assignment"
            },
            "item": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "File (Base)",
                      "x-box-tag": "files",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                        },
                        "etag": {
                          "type": "string",
                          "example": "1",
                          "nullable": true,
                          "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                        },
                        "type": {
                          "enum": [
                            "file"
                          ],
                          "type": "string",
                          "example": "file",
                          "nullable": false,
                          "description": "`file`"
                        }
                      },
                      "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "file--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Contract.pdf",
                          "description": "The name of the file"
                        },
                        "sha1": {
                          "type": "string",
                          "format": "digest",
                          "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                          "nullable": false,
                          "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                        },
                        "sequence_id": {
                          "allOf": [
                            {
                              "type": "string",
                              "example": "3",
                              "nullable": false,
                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                            },
                            {
                              "nullable": false
                            }
                          ]
                        },
                        "file_version": {
                          "allOf": [
                            {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "File version (Base)",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "12345",
                                      "nullable": false,
                                      "description": "The unique identifier that represent a file version."
                                    },
                                    "type": {
                                      "enum": [
                                        "file_version"
                                      ],
                                      "type": "string",
                                      "example": "file_version",
                                      "nullable": false,
                                      "description": "`file_version`"
                                    }
                                  },
                                  "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                  "x-box-variant": "base",
                                  "x-box-variants": [
                                    "base",
                                    "mini",
                                    "standard"
                                  ],
                                  "x-box-sanitized": true,
                                  "x-box-resource-id": "file_version--base"
                                },
                                {
                                  "properties": {
                                    "sha1": {
                                      "type": "string",
                                      "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                      "description": "The SHA1 hash of this version of the file."
                                    }
                                  }
                                }
                              ],
                              "title": "File version (Mini)",
                              "description": "A mini representation of a file version, used when nested within another resource.",
                              "x-box-variant": "mini",
                              "x-box-resource-id": "file_version--mini"
                            },
                            {
                              "description": "The information about the current version of the file."
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "title": "File (Mini)",
                  "description": "A mini representation of a file, used when\nnested under another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "file--mini"
                },
                {
                  "description": "The file that the task has been assigned to."
                }
              ]
            },
            "type": {
              "enum": [
                "task_assignment"
              ],
              "type": "string",
              "example": "task_assignment",
              "description": "`task_assignment`"
            },
            "message": {
              "type": "string",
              "example": "Please review",
              "description": "A message that will is included with the task assignment. This is visible to the assigned user in the web and mobile UI."
            },
            "assigned_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The date at which this task was assigned to the user."
            },
            "assigned_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who assigned this task."
                }
              ]
            },
            "assigned_to": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user that the task has been assigned to."
                }
              ]
            },
            "reminded_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The date at which the assigned user was reminded of this task\nassignment."
            },
            "completed_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The date at which this task assignment was\ncompleted. This will be `null` if the task is not completed yet."
            },
            "resolution_state": {
              "enum": [
                "completed",
                "incomplete",
                "approved",
                "rejected"
              ],
              "type": "string",
              "example": "incomplete",
              "description": "The current state of the assignment. The available states depend on the `action` value of the task object."
            }
          },
          "description": "A task assignment defines which task is assigned to which user to complete.",
          "x-box-resource-id": "task_assignment"
        }
      ]
  post_tasks:
    description: |-
      Creates a single task on a file. This task is not assigned to any user and
      will need to be assigned separately.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-tasks/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "item"
          ],
          "properties": {
            "item": {
              "type": "object",
              "required": [
                "id",
                "type"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "11446498",
                  "description": "The ID of the file"
                },
                "type": {
                  "enum": [
                    "file"
                  ],
                  "type": "string",
                  "example": "file",
                  "description": "`file`"
                }
              },
              "description": "The file to attach the task to."
            },
            "action": {
              "enum": [
                "review",
                "complete"
              ],
              "type": "string",
              "default": "review",
              "example": "review",
              "description": "The action the task assignee will be prompted to do. Must be\n* `review` defines an approval task that can be approved or\nrejected\n* `complete` defines a general task which can be completed"
            },
            "due_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "Defines when the task is due. Defaults to `null` if not\nprovided."
            },
            "message": {
              "type": "string",
              "default": "",
              "example": "Please review",
              "description": "An optional message to include with the task."
            },
            "completion_rule": {
              "enum": [
                "all_assignees",
                "any_assignee"
              ],
              "type": "string",
              "default": "all_assignees",
              "example": "all_assignees",
              "description": "Defines which assignees need to complete this task before the task is considered completed.\n* `all_assignees` (default) requires all assignees to review or approve the the task in order for it to be considered completed. * `any_assignee` accepts any one assignee to review or approve the the task in order for it to be considered completed."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Task",
          "x-box-tag": "tasks",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this task"
            },
            "item": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "File (Base)",
                      "x-box-tag": "files",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                        },
                        "etag": {
                          "type": "string",
                          "example": "1",
                          "nullable": true,
                          "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                        },
                        "type": {
                          "enum": [
                            "file"
                          ],
                          "type": "string",
                          "example": "file",
                          "nullable": false,
                          "description": "`file`"
                        }
                      },
                      "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "file--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Contract.pdf",
                          "description": "The name of the file"
                        },
                        "sha1": {
                          "type": "string",
                          "format": "digest",
                          "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                          "nullable": false,
                          "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                        },
                        "sequence_id": {
                          "allOf": [
                            {
                              "type": "string",
                              "example": "3",
                              "nullable": false,
                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                            },
                            {
                              "nullable": false
                            }
                          ]
                        },
                        "file_version": {
                          "allOf": [
                            {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "File version (Base)",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "12345",
                                      "nullable": false,
                                      "description": "The unique identifier that represent a file version."
                                    },
                                    "type": {
                                      "enum": [
                                        "file_version"
                                      ],
                                      "type": "string",
                                      "example": "file_version",
                                      "nullable": false,
                                      "description": "`file_version`"
                                    }
                                  },
                                  "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                  "x-box-variant": "base",
                                  "x-box-variants": [
                                    "base",
                                    "mini",
                                    "standard"
                                  ],
                                  "x-box-sanitized": true,
                                  "x-box-resource-id": "file_version--base"
                                },
                                {
                                  "properties": {
                                    "sha1": {
                                      "type": "string",
                                      "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                      "description": "The SHA1 hash of this version of the file."
                                    }
                                  }
                                }
                              ],
                              "title": "File version (Mini)",
                              "description": "A mini representation of a file version, used when nested within another resource.",
                              "x-box-variant": "mini",
                              "x-box-resource-id": "file_version--mini"
                            },
                            {
                              "description": "The information about the current version of the file."
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "title": "File (Mini)",
                  "description": "A mini representation of a file, used when\nnested under another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "file--mini"
                },
                {
                  "description": "The file associated with the task"
                }
              ]
            },
            "type": {
              "enum": [
                "task"
              ],
              "type": "string",
              "example": "task",
              "description": "`task`"
            },
            "action": {
              "enum": [
                "review",
                "complete"
              ],
              "type": "string",
              "example": "review",
              "description": "The type of task the task assignee will be prompted to\nperform."
            },
            "due_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the task is due"
            },
            "message": {
              "type": "string",
              "example": "Legal review",
              "description": "A message that will be included with the task"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the task object was created"
            },
            "created_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who created the task"
                }
              ]
            },
            "is_completed": {
              "type": "boolean",
              "example": true,
              "description": "Whether the task has been completed"
            },
            "completion_rule": {
              "enum": [
                "all_assignees",
                "any_assignee"
              ],
              "type": "string",
              "example": "all_assignees",
              "description": "Defines which assignees need to complete this task before the task is considered completed.\n* `all_assignees` requires all assignees to review or approve the the task in order for it to be considered completed. * `any_assignee` accepts any one assignee to review or approve the the task in order for it to be considered completed."
            },
            "task_assignment_collection": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Task assignments",
                  "x-box-tag": "task_assignments",
                  "properties": {
                    "entries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Task assignment",
                        "x-box-tag": "task_assignments",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "11446498",
                            "description": "The unique identifier for this task assignment"
                          },
                          "item": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "File (Base)",
                                    "x-box-tag": "files",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "12345",
                                        "nullable": false,
                                        "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                      },
                                      "etag": {
                                        "type": "string",
                                        "example": "1",
                                        "nullable": true,
                                        "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                      },
                                      "type": {
                                        "enum": [
                                          "file"
                                        ],
                                        "type": "string",
                                        "example": "file",
                                        "nullable": false,
                                        "description": "`file`"
                                      }
                                    },
                                    "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-sanitized": true,
                                    "x-box-resource-id": "file--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Contract.pdf",
                                        "description": "The name of the file"
                                      },
                                      "sha1": {
                                        "type": "string",
                                        "format": "digest",
                                        "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                        "nullable": false,
                                        "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                      },
                                      "sequence_id": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "example": "3",
                                            "nullable": false,
                                            "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                          },
                                          {
                                            "nullable": false
                                          }
                                        ]
                                      },
                                      "file_version": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "title": "File version (Base)",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": "12345",
                                                    "nullable": false,
                                                    "description": "The unique identifier that represent a file version."
                                                  },
                                                  "type": {
                                                    "enum": [
                                                      "file_version"
                                                    ],
                                                    "type": "string",
                                                    "example": "file_version",
                                                    "nullable": false,
                                                    "description": "`file_version`"
                                                  }
                                                },
                                                "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                "x-box-variant": "base",
                                                "x-box-variants": [
                                                  "base",
                                                  "mini",
                                                  "standard"
                                                ],
                                                "x-box-sanitized": true,
                                                "x-box-resource-id": "file_version--base"
                                              },
                                              {
                                                "properties": {
                                                  "sha1": {
                                                    "type": "string",
                                                    "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                    "description": "The SHA1 hash of this version of the file."
                                                  }
                                                }
                                              }
                                            ],
                                            "title": "File version (Mini)",
                                            "description": "A mini representation of a file version, used when nested within another resource.",
                                            "x-box-variant": "mini",
                                            "x-box-resource-id": "file_version--mini"
                                          },
                                          {
                                            "description": "The information about the current version of the file."
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ],
                                "title": "File (Mini)",
                                "description": "A mini representation of a file, used when\nnested under another resource.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "file--mini"
                              },
                              {
                                "description": "The file that the task has been assigned to."
                              }
                            ]
                          },
                          "type": {
                            "enum": [
                              "task_assignment"
                            ],
                            "type": "string",
                            "example": "task_assignment",
                            "description": "`task_assignment`"
                          },
                          "message": {
                            "type": "string",
                            "example": "Please review",
                            "description": "A message that will is included with the task assignment. This is visible to the assigned user in the web and mobile UI."
                          },
                          "assigned_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "The date at which this task was assigned to the user."
                          },
                          "assigned_by": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "User (Base)",
                                    "x-box-tag": "users",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "11446498",
                                        "description": "The unique identifier for this user"
                                      },
                                      "type": {
                                        "enum": [
                                          "user"
                                        ],
                                        "type": "string",
                                        "example": "user",
                                        "nullable": false,
                                        "description": "`user`"
                                      }
                                    },
                                    "description": "A mini representation of a user, used when\nnested within another resource.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-resource-id": "user--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Aaron Levie",
                                        "nullable": false,
                                        "maxLength": 50,
                                        "description": "The display name of this user"
                                      },
                                      "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@example.com",
                                        "nullable": false,
                                        "description": "The primary email address of this user"
                                      }
                                    }
                                  }
                                ],
                                "title": "User (Mini)",
                                "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "user--mini"
                              },
                              {
                                "description": "The user who assigned this task."
                              }
                            ]
                          },
                          "assigned_to": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "User (Base)",
                                    "x-box-tag": "users",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "11446498",
                                        "description": "The unique identifier for this user"
                                      },
                                      "type": {
                                        "enum": [
                                          "user"
                                        ],
                                        "type": "string",
                                        "example": "user",
                                        "nullable": false,
                                        "description": "`user`"
                                      }
                                    },
                                    "description": "A mini representation of a user, used when\nnested within another resource.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-resource-id": "user--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Aaron Levie",
                                        "nullable": false,
                                        "maxLength": 50,
                                        "description": "The display name of this user"
                                      },
                                      "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@example.com",
                                        "nullable": false,
                                        "description": "The primary email address of this user"
                                      }
                                    }
                                  }
                                ],
                                "title": "User (Mini)",
                                "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "user--mini"
                              },
                              {
                                "description": "The user that the task has been assigned to."
                              }
                            ]
                          },
                          "reminded_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "The date at which the assigned user was reminded of this task assignment."
                          },
                          "completed_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "The date at which this task assignment was completed. This will be `null` if the task is not completed yet."
                          },
                          "resolution_state": {
                            "enum": [
                              "completed",
                              "incomplete",
                              "approved",
                              "rejected"
                            ],
                            "type": "string",
                            "example": "incomplete",
                            "description": "The current state of the assignment. The available states depend on the `action` value of the task object."
                          }
                        },
                        "description": "A task assignment defines which task is assigned to which user to complete.",
                        "x-box-resource-id": "task_assignment"
                      }
                    },
                    "total_count": {
                      "type": "integer",
                      "format": "int64",
                      "example": 100,
                      "description": "The total number of items in this collection."
                    }
                  },
                  "description": "A list of task assignments",
                  "x-box-resource-id": "task_assignments"
                },
                {
                  "description": "A collection of task assignment objects\nassociated with the task"
                }
              ]
            }
          },
          "description": "A task allows for file-centric workflows within Box. Users can create tasks on files and assign them to other users for them to complete the tasks.",
          "x-box-resource-id": "task"
        }
      ]
  post_terms_of_services:
    description: |-
      Creates a terms of service for a given enterprise
      and type of user.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-terms-of-services/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "status",
            "text"
          ],
          "properties": {
            "text": {
              "type": "string",
              "example": "By collaborating on this file you are accepting...",
              "description": "The terms of service text to display to users.\nThe text can be set to empty if the `status` is set to `disabled`."
            },
            "status": {
              "enum": [
                "enabled",
                "disabled"
              ],
              "type": "string",
              "example": "enabled",
              "description": "Whether this terms of service is active."
            },
            "tos_type": {
              "enum": [
                "external",
                "managed"
              ],
              "type": "string",
              "example": "managed",
              "description": "The type of user to set the terms of\nservice for."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Task",
          "x-box-tag": "tasks",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this task"
            },
            "item": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "File (Base)",
                      "x-box-tag": "files",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                        },
                        "etag": {
                          "type": "string",
                          "example": "1",
                          "nullable": true,
                          "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                        },
                        "type": {
                          "enum": [
                            "file"
                          ],
                          "type": "string",
                          "example": "file",
                          "nullable": false,
                          "description": "`file`"
                        }
                      },
                      "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "file--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Contract.pdf",
                          "description": "The name of the file"
                        },
                        "sha1": {
                          "type": "string",
                          "format": "digest",
                          "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                          "nullable": false,
                          "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                        },
                        "sequence_id": {
                          "allOf": [
                            {
                              "type": "string",
                              "example": "3",
                              "nullable": false,
                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                            },
                            {
                              "nullable": false
                            }
                          ]
                        },
                        "file_version": {
                          "allOf": [
                            {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "File version (Base)",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "12345",
                                      "nullable": false,
                                      "description": "The unique identifier that represent a file version."
                                    },
                                    "type": {
                                      "enum": [
                                        "file_version"
                                      ],
                                      "type": "string",
                                      "example": "file_version",
                                      "nullable": false,
                                      "description": "`file_version`"
                                    }
                                  },
                                  "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                  "x-box-variant": "base",
                                  "x-box-variants": [
                                    "base",
                                    "mini",
                                    "standard"
                                  ],
                                  "x-box-sanitized": true,
                                  "x-box-resource-id": "file_version--base"
                                },
                                {
                                  "properties": {
                                    "sha1": {
                                      "type": "string",
                                      "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                      "description": "The SHA1 hash of this version of the file."
                                    }
                                  }
                                }
                              ],
                              "title": "File version (Mini)",
                              "description": "A mini representation of a file version, used when nested within another resource.",
                              "x-box-variant": "mini",
                              "x-box-resource-id": "file_version--mini"
                            },
                            {
                              "description": "The information about the current version of the file."
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "title": "File (Mini)",
                  "description": "A mini representation of a file, used when\nnested under another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "file--mini"
                },
                {
                  "description": "The file associated with the task"
                }
              ]
            },
            "type": {
              "enum": [
                "task"
              ],
              "type": "string",
              "example": "task",
              "description": "`task`"
            },
            "action": {
              "enum": [
                "review",
                "complete"
              ],
              "type": "string",
              "example": "review",
              "description": "The type of task the task assignee will be prompted to\nperform."
            },
            "due_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the task is due"
            },
            "message": {
              "type": "string",
              "example": "Legal review",
              "description": "A message that will be included with the task"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the task object was created"
            },
            "created_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who created the task"
                }
              ]
            },
            "is_completed": {
              "type": "boolean",
              "example": true,
              "description": "Whether the task has been completed"
            },
            "completion_rule": {
              "enum": [
                "all_assignees",
                "any_assignee"
              ],
              "type": "string",
              "example": "all_assignees",
              "description": "Defines which assignees need to complete this task before the task is considered completed.\n* `all_assignees` requires all assignees to review or approve the the task in order for it to be considered completed. * `any_assignee` accepts any one assignee to review or approve the the task in order for it to be considered completed."
            },
            "task_assignment_collection": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Task assignments",
                  "x-box-tag": "task_assignments",
                  "properties": {
                    "entries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Task assignment",
                        "x-box-tag": "task_assignments",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "11446498",
                            "description": "The unique identifier for this task assignment"
                          },
                          "item": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "File (Base)",
                                    "x-box-tag": "files",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "12345",
                                        "nullable": false,
                                        "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                      },
                                      "etag": {
                                        "type": "string",
                                        "example": "1",
                                        "nullable": true,
                                        "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                      },
                                      "type": {
                                        "enum": [
                                          "file"
                                        ],
                                        "type": "string",
                                        "example": "file",
                                        "nullable": false,
                                        "description": "`file`"
                                      }
                                    },
                                    "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-sanitized": true,
                                    "x-box-resource-id": "file--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Contract.pdf",
                                        "description": "The name of the file"
                                      },
                                      "sha1": {
                                        "type": "string",
                                        "format": "digest",
                                        "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                        "nullable": false,
                                        "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                      },
                                      "sequence_id": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "example": "3",
                                            "nullable": false,
                                            "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                          },
                                          {
                                            "nullable": false
                                          }
                                        ]
                                      },
                                      "file_version": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "title": "File version (Base)",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": "12345",
                                                    "nullable": false,
                                                    "description": "The unique identifier that represent a file version."
                                                  },
                                                  "type": {
                                                    "enum": [
                                                      "file_version"
                                                    ],
                                                    "type": "string",
                                                    "example": "file_version",
                                                    "nullable": false,
                                                    "description": "`file_version`"
                                                  }
                                                },
                                                "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                "x-box-variant": "base",
                                                "x-box-variants": [
                                                  "base",
                                                  "mini",
                                                  "standard"
                                                ],
                                                "x-box-sanitized": true,
                                                "x-box-resource-id": "file_version--base"
                                              },
                                              {
                                                "properties": {
                                                  "sha1": {
                                                    "type": "string",
                                                    "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                    "description": "The SHA1 hash of this version of the file."
                                                  }
                                                }
                                              }
                                            ],
                                            "title": "File version (Mini)",
                                            "description": "A mini representation of a file version, used when nested within another resource.",
                                            "x-box-variant": "mini",
                                            "x-box-resource-id": "file_version--mini"
                                          },
                                          {
                                            "description": "The information about the current version of the file."
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ],
                                "title": "File (Mini)",
                                "description": "A mini representation of a file, used when\nnested under another resource.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "file--mini"
                              },
                              {
                                "description": "The file that the task has been assigned to."
                              }
                            ]
                          },
                          "type": {
                            "enum": [
                              "task_assignment"
                            ],
                            "type": "string",
                            "example": "task_assignment",
                            "description": "`task_assignment`"
                          },
                          "message": {
                            "type": "string",
                            "example": "Please review",
                            "description": "A message that will is included with the task assignment. This is visible to the assigned user in the web and mobile UI."
                          },
                          "assigned_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "The date at which this task was assigned to the user."
                          },
                          "assigned_by": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "User (Base)",
                                    "x-box-tag": "users",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "11446498",
                                        "description": "The unique identifier for this user"
                                      },
                                      "type": {
                                        "enum": [
                                          "user"
                                        ],
                                        "type": "string",
                                        "example": "user",
                                        "nullable": false,
                                        "description": "`user`"
                                      }
                                    },
                                    "description": "A mini representation of a user, used when\nnested within another resource.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-resource-id": "user--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Aaron Levie",
                                        "nullable": false,
                                        "maxLength": 50,
                                        "description": "The display name of this user"
                                      },
                                      "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@example.com",
                                        "nullable": false,
                                        "description": "The primary email address of this user"
                                      }
                                    }
                                  }
                                ],
                                "title": "User (Mini)",
                                "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "user--mini"
                              },
                              {
                                "description": "The user who assigned this task."
                              }
                            ]
                          },
                          "assigned_to": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "User (Base)",
                                    "x-box-tag": "users",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "11446498",
                                        "description": "The unique identifier for this user"
                                      },
                                      "type": {
                                        "enum": [
                                          "user"
                                        ],
                                        "type": "string",
                                        "example": "user",
                                        "nullable": false,
                                        "description": "`user`"
                                      }
                                    },
                                    "description": "A mini representation of a user, used when\nnested within another resource.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-resource-id": "user--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Aaron Levie",
                                        "nullable": false,
                                        "maxLength": 50,
                                        "description": "The display name of this user"
                                      },
                                      "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@example.com",
                                        "nullable": false,
                                        "description": "The primary email address of this user"
                                      }
                                    }
                                  }
                                ],
                                "title": "User (Mini)",
                                "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "user--mini"
                              },
                              {
                                "description": "The user that the task has been assigned to."
                              }
                            ]
                          },
                          "reminded_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "The date at which the assigned user was reminded of this task assignment."
                          },
                          "completed_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "The date at which this task assignment was completed. This will be `null` if the task is not completed yet."
                          },
                          "resolution_state": {
                            "enum": [
                              "completed",
                              "incomplete",
                              "approved",
                              "rejected"
                            ],
                            "type": "string",
                            "example": "incomplete",
                            "description": "The current state of the assignment. The available states depend on the `action` value of the task object."
                          }
                        },
                        "description": "A task assignment defines which task is assigned to which user to complete.",
                        "x-box-resource-id": "task_assignment"
                      }
                    },
                    "total_count": {
                      "type": "integer",
                      "format": "int64",
                      "example": 100,
                      "description": "The total number of items in this collection."
                    }
                  },
                  "description": "A list of task assignments",
                  "x-box-resource-id": "task_assignments"
                },
                {
                  "description": "A collection of task assignment objects\nassociated with the task"
                }
              ]
            }
          },
          "description": "A task allows for file-centric workflows within Box. Users can create tasks on files and assign them to other users for them to complete the tasks.",
          "x-box-resource-id": "task"
        }
      ]
  post_terms_of_service_user_statuses:
    description: |-
      Sets the status for a terms of service for a user.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-terms-of-service-user-statuses/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "tos",
            "user",
            "is_accepted"
          ],
          "properties": {
            "tos": {
              "type": "object",
              "required": [
                "id",
                "type"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1232132",
                  "description": "The ID of terms of service"
                },
                "type": {
                  "enum": [
                    "terms_of_service"
                  ],
                  "type": "string",
                  "example": "terms_of_service",
                  "description": "The type of object."
                }
              },
              "description": "The terms of service to set the status for."
            },
            "user": {
              "type": "object",
              "required": [
                "id",
                "type"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "3423423",
                  "description": "The ID of user"
                },
                "type": {
                  "enum": [
                    "user"
                  ],
                  "type": "string",
                  "example": "user",
                  "description": "The type of object."
                }
              },
              "description": "The user to set the status for."
            },
            "is_accepted": {
              "type": "boolean",
              "example": true,
              "description": "Whether the user has accepted the terms."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Terms of service user status",
          "x-box-tag": "terms_of_service_user_statuses",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this terms of service user status"
            },
            "tos": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Terms of service (Mini)",
                  "x-box-tag": "terms_of_services",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this terms of service."
                    },
                    "type": {
                      "enum": [
                        "terms_of_service"
                      ],
                      "type": "string",
                      "example": "terms_of_service",
                      "description": "`terms_of_service`"
                    }
                  },
                  "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
                  "x-box-variant": "mini",
                  "x-box-variants": [
                    "mini",
                    "standard"
                  ],
                  "x-box-resource-id": "terms_of_service--mini"
                },
                {
                  "description": "The terms of service"
                }
              ]
            },
            "type": {
              "enum": [
                "terms_of_service_user_status"
              ],
              "type": "string",
              "example": "terms_of_service_user_status",
              "description": "`terms_of_service_user_status`"
            },
            "user": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user"
                }
              ]
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the legal item was created"
            },
            "is_accepted": {
              "type": "boolean",
              "example": true,
              "description": "If the user has accepted the terms of services"
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the legal item was modified."
            }
          },
          "description": "The association between a Terms of Service and a user",
          "x-box-resource-id": "terms_of_service_user_status"
        }
      ]
  post_users:
    description: |-
      Creates a new managed user in an enterprise. This endpoint
      is only available to users and applications with the right
      admin permissions.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-users/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "Aaron Levie",
              "maxLength": 50,
              "description": "The name of the user"
            },
            "role": {
              "enum": [
                "coadmin",
                "user"
              ],
              "type": "string",
              "example": "user",
              "description": "The user’s enterprise role"
            },
            "login": {
              "type": "string",
              "example": "boss@box.com",
              "description": "The email address the user uses to log in\nRequired, unless `is_platform_access_only`\nis set to `true`."
            },
            "phone": {
              "type": "string",
              "example": "6509241374",
              "maxLength": 100,
              "description": "The user’s phone number"
            },
            "status": {
              "enum": [
                "active",
                "inactive",
                "cannot_delete_edit",
                "cannot_delete_edit_upload"
              ],
              "type": "string",
              "example": "active",
              "description": "The user's account status"
            },
            "address": {
              "type": "string",
              "example": "900 Jefferson Ave, Redwood City, CA 94063",
              "maxLength": 255,
              "description": "The user’s address"
            },
            "language": {
              "type": "string",
              "example": "en",
              "description": "The language of the user, formatted in modified version of the\n[ISO 639-1](/guides/api-calls/language-codes) format."
            },
            "timezone": {
              "type": "string",
              "format": "timezone",
              "example": "Africa/Bujumbura",
              "description": "The user's timezone"
            },
            "job_title": {
              "type": "string",
              "example": "CEO",
              "maxLength": 100,
              "description": "The user’s job title"
            },
            "space_amount": {
              "type": "integer",
              "format": "int64",
              "example": 11345156112,
              "description": "The user’s total available space in bytes. Set this to `-1` to\nindicate unlimited storage."
            },
            "tracking_codes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "code1: 12345"
              ],
              "description": "Tracking codes allow an admin to generate reports from the admin console and assign an attribute to a specific group of users. This setting must be enabled for an enterprise before it can be used."
            },
            "is_sync_enabled": {
              "type": "boolean",
              "example": true,
              "description": "Whether the user can use Box Sync"
            },
            "external_app_user_id": {
              "type": "string",
              "example": "my-user-1234",
              "description": "An external identifier for an app user, which can be used to look up the user. This can be used to tie user IDs from external identity providers to Box users."
            },
            "can_see_managed_users": {
              "type": "boolean",
              "example": true,
              "description": "Whether the user can see other enterprise users in their\ncontact list"
            },
            "is_platform_access_only": {
              "type": "boolean",
              "example": true,
              "description": "Specifies that the user is an app user."
            },
            "is_exempt_from_device_limits": {
              "type": "boolean",
              "example": true,
              "description": "Whether to exempt the user from enterprise device limits"
            },
            "is_external_collab_restricted": {
              "type": "boolean",
              "example": true,
              "description": "Whether the user is allowed to collaborate with users outside\ntheir enterprise"
            },
            "is_exempt_from_login_verification": {
              "type": "boolean",
              "example": true,
              "description": "Whether the user must use two-factor authentication"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "User (Base)",
                  "x-box-tag": "users",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this user"
                    },
                    "type": {
                      "enum": [
                        "user"
                      ],
                      "type": "string",
                      "example": "user",
                      "nullable": false,
                      "description": "`user`"
                    }
                  },
                  "description": "A mini representation of a user, used when\nnested within another resource.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-resource-id": "user--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Aaron Levie",
                      "nullable": false,
                      "maxLength": 50,
                      "description": "The display name of this user"
                    },
                    "login": {
                      "type": "string",
                      "format": "email",
                      "example": "ceo@example.com",
                      "nullable": false,
                      "description": "The primary email address of this user"
                    }
                  }
                }
              ],
              "title": "User (Mini)",
              "description": "A mini representation of a user, as can be returned when nested within other resources.",
              "x-box-variant": "mini",
              "x-box-resource-id": "user--mini"
            },
            {
              "properties": {
                "phone": {
                  "type": "string",
                  "example": "6509241374",
                  "maxLength": 100,
                  "description": "The user’s phone number"
                },
                "status": {
                  "enum": [
                    "active",
                    "inactive",
                    "cannot_delete_edit",
                    "cannot_delete_edit_upload"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "The user's account status"
                },
                "address": {
                  "type": "string",
                  "example": "900 Jefferson Ave, Redwood City, CA 94063",
                  "maxLength": 255,
                  "description": "The user’s address"
                },
                "language": {
                  "type": "string",
                  "example": "en",
                  "description": "The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format."
                },
                "timezone": {
                  "type": "string",
                  "format": "timezone",
                  "example": "Africa/Bujumbura",
                  "description": "The user's timezone"
                },
                "job_title": {
                  "type": "string",
                  "example": "CEO",
                  "maxLength": 100,
                  "description": "The user’s job title"
                },
                "avatar_url": {
                  "type": "string",
                  "example": "https://www.box.com/api/avatar/large/181216415",
                  "description": "URL of the user’s avatar image"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the user object was created"
                },
                "space_used": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1237009912,
                  "description": "The amount of space in use by the user"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the user object was last modified"
                },
                "space_amount": {
                  "type": "integer",
                  "format": "int64",
                  "example": 11345156112,
                  "description": "The user’s total available space amount in bytes"
                },
                "max_upload_size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2147483648,
                  "description": "The maximum individual file size in bytes the user can have"
                },
                "notification_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "notifications@example.com",
                      "description": "The email address to send the notifications to."
                    },
                    "is_confirmed": {
                      "type": "boolean",
                      "example": true,
                      "description": "Specifies if this email address has been confirmed."
                    }
                  },
                  "description": "An alternate notification email address to which email\nnotifications are sent. When it's confirmed, this will be\nthe email address to which notifications are sent instead of\nto the primary email address."
                }
              }
            }
          ],
          "title": "User",
          "description": "A standard representation of a user, as returned from any\nuser API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "user"
        }
      ]
  post_users_id_email_aliases:
    description: |-
      Adds a new email alias to a user account..
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-users-id-email-aliases/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "email"
          ],
          "properties": {
            "email": {
              "type": "string",
              "example": "alias@example.com",
              "description": "The email address to add to the account as an alias."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Email alias",
          "x-box-tag": "email_aliases",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this object"
            },
            "type": {
              "enum": [
                "email_alias"
              ],
              "type": "string",
              "example": "email_alias",
              "description": "`email_alias`"
            },
            "email": {
              "type": "string",
              "example": "alias@example.com",
              "description": "The email address"
            },
            "is_confirmed": {
              "type": "boolean",
              "example": true,
              "description": "Whether the email address has been confirmed"
            }
          },
          "description": "An email alias for a user.",
          "x-box-resource-id": "email_alias"
        }
      ]
  post_webhooks:
    description: |-
      Creates a webhook.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-webhooks/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "target",
            "triggers",
            "address"
          ],
          "properties": {
            "target": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1231232",
                  "description": "The ID of the item to trigger a webhook"
                },
                "type": {
                  "enum": [
                    "file",
                    "folder"
                  ],
                  "type": "string",
                  "example": "file",
                  "description": "The type of item to trigger a webhook"
                }
              },
              "description": "The item that will trigger the webhook"
            },
            "address": {
              "type": "string",
              "example": "https://example.com/webhooks",
              "description": "The URL that is notified by this webhook"
            },
            "triggers": {
              "type": "array",
              "items": {
                "enum": [
                  "FILE.UPLOADED",
                  "FILE.PREVIEWED",
                  "FILE.DOWNLOADED",
                  "FILE.TRASHED",
                  "FILE.DELETED",
                  "FILE.RESTORED",
                  "FILE.COPIED",
                  "FILE.MOVED",
                  "FILE.LOCKED",
                  "FILE.UNLOCKED",
                  "FILE.RENAMED",
                  "COMMENT.CREATED",
                  "COMMENT.UPDATED",
                  "COMMENT.DELETED",
                  "TASK_ASSIGNMENT.CREATED",
                  "TASK_ASSIGNMENT.UPDATED",
                  "METADATA_INSTANCE.CREATED",
                  "METADATA_INSTANCE.UPDATED",
                  "METADATA_INSTANCE.DELETED",
                  "FOLDER.CREATED",
                  "FOLDER.RENAMED",
                  "FOLDER.DOWNLOADED",
                  "FOLDER.RESTORED",
                  "FOLDER.DELETED",
                  "FOLDER.COPIED",
                  "FOLDER.MOVED",
                  "FOLDER.TRASHED",
                  "WEBHOOK.DELETED",
                  "COLLABORATION.CREATED",
                  "COLLABORATION.ACCEPTED",
                  "COLLABORATION.REJECTED",
                  "COLLABORATION.REMOVED",
                  "COLLABORATION.UPDATED",
                  "SHARED_LINK.DELETED",
                  "SHARED_LINK.CREATED",
                  "SHARED_LINK.UPDATED"
                ],
                "type": "string",
                "title": "Webhook Trigger",
                "example": "FILE.UPLOADED",
                "description": "The event name that triggered this webhook"
              },
              "example": [
                "FILE.UPLOADED"
              ],
              "description": "An array of event names that this webhook is\nto be triggered for"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Webhook",
          "x-box-tag": "webhooks",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this webhook."
            },
            "type": {
              "enum": [
                "webhook"
              ],
              "type": "string",
              "example": "webhook",
              "description": "`webhook`"
            },
            "target": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1231232",
                  "description": "The ID of the item to trigger a webhook"
                },
                "type": {
                  "enum": [
                    "file",
                    "folder"
                  ],
                  "type": "string",
                  "example": "file",
                  "description": "The type of item to trigger a webhook"
                }
              },
              "description": "The item that will trigger the webhook"
            },
            "address": {
              "type": "string",
              "example": "https://example.com/webhooks",
              "description": "The URL that is notified by this webhook"
            },
            "triggers": {
              "type": "array",
              "items": {
                "enum": [
                  "FILE.UPLOADED",
                  "FILE.PREVIEWED",
                  "FILE.DOWNLOADED",
                  "FILE.TRASHED",
                  "FILE.DELETED",
                  "FILE.RESTORED",
                  "FILE.COPIED",
                  "FILE.MOVED",
                  "FILE.LOCKED",
                  "FILE.UNLOCKED",
                  "FILE.RENAMED",
                  "COMMENT.CREATED",
                  "COMMENT.UPDATED",
                  "COMMENT.DELETED",
                  "TASK_ASSIGNMENT.CREATED",
                  "TASK_ASSIGNMENT.UPDATED",
                  "METADATA_INSTANCE.CREATED",
                  "METADATA_INSTANCE.UPDATED",
                  "METADATA_INSTANCE.DELETED",
                  "FOLDER.CREATED",
                  "FOLDER.RENAMED",
                  "FOLDER.DOWNLOADED",
                  "FOLDER.RESTORED",
                  "FOLDER.DELETED",
                  "FOLDER.COPIED",
                  "FOLDER.MOVED",
                  "FOLDER.TRASHED",
                  "WEBHOOK.DELETED",
                  "COLLABORATION.CREATED",
                  "COLLABORATION.ACCEPTED",
                  "COLLABORATION.REJECTED",
                  "COLLABORATION.REMOVED",
                  "COLLABORATION.UPDATED",
                  "SHARED_LINK.DELETED",
                  "SHARED_LINK.CREATED",
                  "SHARED_LINK.UPDATED"
                ],
                "type": "string",
                "title": "Webhook Trigger",
                "example": "FILE.UPLOADED",
                "description": "The event name that triggered this webhook"
              },
              "example": [
                "FILE.UPLOADED"
              ],
              "description": "An array of event names that this webhook is\nto be triggered for"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "A timestamp identifying the time that\nthe webhook was created."
            },
            "created_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who created the webhook"
                }
              ]
            }
          },
          "description": "Represents a configured webhook.",
          "x-box-resource-id": "webhook"
        }
      ]
  post_web_links:
    description: |-
      Creates a web link object within a folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-web-links/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "parent",
            "url"
          ],
          "properties": {
            "url": {
              "type": "string",
              "example": "https://box.com",
              "description": "The URL that this web link links to. Must start with\n`\"http://\"` or `\"https://\"`."
            },
            "name": {
              "type": "string",
              "example": "Box Website",
              "description": "Name of the web link. Defaults to the URL if not set."
            },
            "parent": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0",
                  "description": "The ID of parent folder"
                }
              },
              "description": "The parent folder to create the web link within."
            },
            "description": {
              "type": "string",
              "example": "Cloud Content Management",
              "description": "Description of the web link."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Web link (Base)",
                  "x-box-tag": "web_links",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this web link"
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "description": "The entity tag of this web link. Used with `If-Match`\nheaders."
                    },
                    "type": {
                      "enum": [
                        "web_link"
                      ],
                      "type": "string",
                      "example": "web_link",
                      "description": "`web_link`"
                    }
                  },
                  "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard"
                  ],
                  "x-box-resource-id": "web_link--base"
                },
                {
                  "properties": {
                    "url": {
                      "type": "string",
                      "example": "https://www.example.com/example/1234",
                      "description": "The URL this web link points to"
                    },
                    "name": {
                      "type": "string",
                      "example": "My Bookmark",
                      "description": "The name of the web link"
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Web link (Mini)",
              "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
              "x-box-variant": "mini",
              "x-box-resource-id": "web_link--mini"
            },
            {
              "properties": {
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The parent object the web link belongs to"
                    }
                  ]
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this web link"
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "When this file will be permanently deleted."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this file was created on Box’s servers."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this web link"
                    }
                  ]
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "When this file was last moved to the trash."
                },
                "description": {
                  "type": "string",
                  "example": "Example page",
                  "description": "The description accompanying the web link. This is\nvisible within the Box web application."
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "Whether this item is deleted or not. Values include `active`, `trashed` if the file has been moved to the trash, and `deleted` if the file has been permanently deleted"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this file was last updated on the Box\nservers."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this web link"
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link object for this item. Will be\n`null` if no shared link has been created."
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this web link is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                }
              }
            }
          ],
          "title": "Web link",
          "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
          "x-box-variant": "standard",
          "x-box-resource-id": "web_link"
        }
      ]
  post_web_links_id:
    description: |-
      Restores a web link that has been moved to the trash.
      An optional new parent ID can be provided to restore the  web link to in case the original folder has been deleted.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-web-links-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Restored.docx",
              "description": "An optional new name for the web link."
            },
            "parent": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "123",
                      "description": "The ID of parent item"
                    }
                  },
                  "description": "The parent for this item"
                },
                {
                  "description": "Specifies an optional ID of a folder to restore the web link to when the original folder no longer exists.\nPlease be aware that this ID will only be used if the original folder no longer exists. Use this ID to provide a fallback location to restore the web link to if the original location has been deleted."
                }
              ]
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Web link (Base)",
                  "x-box-tag": "web_links",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this web link"
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "description": "The entity tag of this web link. Used with `If-Match`\nheaders."
                    },
                    "type": {
                      "enum": [
                        "web_link"
                      ],
                      "type": "string",
                      "example": "web_link",
                      "description": "`web_link`"
                    }
                  },
                  "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard"
                  ],
                  "x-box-resource-id": "web_link--base"
                },
                {
                  "properties": {
                    "url": {
                      "type": "string",
                      "example": "https://www.example.com/example/1234",
                      "description": "The URL this web link points to"
                    },
                    "name": {
                      "type": "string",
                      "example": "My Bookmark",
                      "description": "The name of the web link"
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Web link (Mini)",
              "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
              "x-box-variant": "mini",
              "x-box-resource-id": "web_link--mini"
            },
            {
              "properties": {
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The parent object the web link belongs to"
                    }
                  ]
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this web link"
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "When this file will be permanently deleted."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this file was created on Box’s servers."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this web link"
                    }
                  ]
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "When this file was last moved to the trash."
                },
                "description": {
                  "type": "string",
                  "example": "Example page",
                  "description": "The description accompanying the web link. This is\nvisible within the Box web application."
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "Whether this item is deleted or not. Values include `active`, `trashed` if the file has been moved to the trash, and `deleted` if the file has been permanently deleted"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this file was last updated on the Box\nservers."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this web link"
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link object for this item. Will be\n`null` if no shared link has been created."
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this web link is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                }
              }
            }
          ],
          "title": "Web link",
          "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
          "x-box-variant": "standard",
          "x-box-resource-id": "web_link"
        }
      ]
  post_zip_downloads:
    description: |-
      Creates a request to download multiple files and folders as a single `zip` archive file. This API does not return the archive but instead performs all the checks to ensure that the user has access to all the items, and then returns a `download_url` and a `status_url` that can be used to download the archive.
      The limit for an archive is either 32GB or 10,000 files, whichever limitation is met first.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/post-zip-downloads/
    example:
      inputs: [
        {
          "type": "object",
          "title": "Create a `zip` archive",
          "required": [
            "items"
          ],
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "12345",
                    "description": "The identifier of the item to add to the archive. When this item is a folder then this can not be the root folder with ID `0`."
                  },
                  "type": {
                    "enum": [
                      "file",
                      "folder."
                    ],
                    "type": "string",
                    "example": "file",
                    "description": "The type of the item to add to the archive."
                  }
                },
                "description": "An item to add to the `zip` archive. This can be a file or a folder."
              },
              "description": "A list of items to add to the `zip` archive. These can\nbe folders or files."
            },
            "download_file_name": {
              "type": "string",
              "example": "January Financials",
              "description": "The optional name of the `zip` archive. This name will be appended by the `.zip` file extension, for example `January Financials.zip`."
            }
          },
          "description": "A request to create a `zip` archive to download"
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Zip download",
          "example": {
            "expires_at": "2020-07-22T11:26:08.000Z",
            "status_url": "https://api.box.com/2.0/zip_downloads/29l00nfxDyHOt7RphI9zT_w==nDnZEDjY2S8iEWWCHEEiptFxwoWojjlibZjJ6geuE5xnXENDTPxzgbks_yY=/status",
            "download_url": "https://dl.boxcloud.com/2.0/zip_downloads/29l00nfxDyHOt7RphI9zT_w==nDnZEDjY2S8iEWWCHEEiptFxwoWojjlibZjJ6geuE5xnXENDTPxzgbks_yY=/content",
            "name_conflicts": [
              [
                {
                  "id": "12345",
                  "type": "file",
                  "download_name": "3aa6a7.pdf",
                  "original_name": "Report.pdf"
                },
                {
                  "id": "34325",
                  "type": "file",
                  "download_name": "5d53f2.pdf",
                  "original_name": "Report.pdf"
                }
              ]
            ]
          },
          "x-box-tag": "zip_downloads",
          "properties": {
            "expires_at": {
              "type": "string",
              "format": "date-time",
              "example": "2019-08-30T06:59:00.000Z",
              "description": "The time and date when this archive will expire. After this time the `status_url` and `download_url` will return an error.\nBy default, these URLs are only valid for a few seconds, unless a download is started after which the `download_url` is valid for the duration of the download, and the `status_url` is valid for 12 hours from the start of the download."
            },
            "status_url": {
              "type": "string",
              "example": "https://api.box.com/2.0/zip_downloads/Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd/status",
              "description": "The URL that can be used to get the status of the `zip` archive being downloaded. A `Get` request to this URL will return the number of files in the archive as well as the number of items already downloaded or skipped. By default, this URL is only valid for a few seconds, until the `exires_at` time, unless a download is started after which the URL is valid for 12 hours from the start of the download.\nIt is important to note that the domain and path of this URL might change between API calls, and therefore it's important to use this URL as-is."
            },
            "download_url": {
              "type": "string",
              "example": "https://dl.boxcloud.com/2.0/zip_downloads/Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd/content",
              "description": "The URL that can be used to download the `zip` archive. A `Get` request to this URL will start streaming the items requested. By default, this URL is only valid for a few seconds, until the `exires_at` time, unless a download is started after which it is valid for the duration of the download.\nIt is important to note that the domain and path of this URL might change between API calls, and therefore it's important to use this URL as-is."
            },
            "name_conflicts": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "description": "The identifier of the item"
                    },
                    "type": {
                      "enum": [
                        "file",
                        "folder"
                      ],
                      "type": "string",
                      "example": "file",
                      "description": "The type of this item"
                    },
                    "download_name": {
                      "type": "string",
                      "example": "3aa6a7.pdf",
                      "description": "The new name of this item as it will appear in the\ndownloaded `zip` archive."
                    },
                    "original_name": {
                      "type": "string",
                      "example": "Report.pdf",
                      "description": "The original name of this item"
                    }
                  },
                  "description": "A file or folder for which a conflict was encountered, This object provides the type and identifier of the original item, as well as a mapping between its original name and it's new name as it will appear in the archive."
                },
                "description": "An individual conflict that occurred when trying to create the archive. This includes an array of 2 objects, each containing the original name and the renamed filename of a file or folder for which the names conflicted."
              },
              "description": "A list of conflicts that occurred when trying to create the archive. This would occur when multiple items have been requested with the same name.\nTo solve these conflicts, the API will automatically rename an item and return a mapping between the original item's name and its new name.\nFor every conflict, both files will be renamed and therefore this list will always be a multiple of 2."
            }
          },
          "description": "Represents a successful request to create a `zip` archive of a list of files and folders.",
          "x-box-resource-id": "zip_download",
          "x-box-reference-category": "zip_downloads"
        }
      ]
  put_collaborations_id:
    description: |-
      Updates a collaboration.
      Can be used to change the owner of an item, or to
      accept collaboration invites.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-collaborations-id/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  put_comments_id:
    description: |-
      Update the message of a comment.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-comments-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "Review completed!",
              "description": "The text of the comment to update"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Comment (Base)",
              "x-box-tag": "comments",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "11446498",
                  "description": "The unique identifier for this comment."
                },
                "type": {
                  "enum": [
                    "comment"
                  ],
                  "type": "string",
                  "example": "comment",
                  "description": "`comment`"
                }
              },
              "description": "Base representation of a comment.",
              "x-box-variant": "base",
              "x-box-variants": [
                "base",
                "standard",
                "full"
              ],
              "x-box-sanitized": true,
              "x-box-resource-id": "comment--base"
            },
            {
              "properties": {
                "item": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Reference",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this object"
                        },
                        "type": {
                          "type": "string",
                          "example": "file",
                          "description": "The type for this object"
                        }
                      },
                      "description": "The bare basic reference for an object"
                    },
                    {
                      "description": "The file this comment was placed on"
                    }
                  ]
                },
                "message": {
                  "type": "string",
                  "example": "@Aaron Levie these tigers are cool!",
                  "description": "The text of the comment, as provided by the user"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "The time this comment was created"
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "A mini user object representing the author of the\ncomment"
                    }
                  ]
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "The time this comment was last modified"
                },
                "is_reply_comment": {
                  "type": "boolean",
                  "example": true,
                  "description": "Whether or not this comment is a reply to another\ncomment"
                }
              }
            }
          ],
          "title": "Comment",
          "description": "Standard representation of a comment.",
          "x-box-variant": "standard",
          "x-box-resource-id": "comment"
        }
      ]
  put_file_requests_id:
    description: |-
      Updates a file request. This can be used to activate or
      deactivate a file request.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-file-requests-id/
    example:
      inputs: [
        {
          "type": "object",
          "title": "File Request (Update)",
          "properties": {
            "title": {
              "type": "string",
              "example": "Please upload required documents",
              "description": "An optional new title for the file request. This can be\nused to change the title of the file request.\nThis will default to the value on the existing file request."
            },
            "status": {
              "enum": [
                "active",
                "inactive"
              ],
              "type": "string",
              "example": "active",
              "description": "An optional new status of the file request.\nWhen the status is set to `inactive`, the file request\nwill no longer accept new submissions, and any visitor\nto the file request URL will receive a `HTTP 404` status\ncode.\nThis will default to the value on the existing file request."
            },
            "expires_at": {
              "type": "string",
              "format": "date-time",
              "example": "2020-09-28T18:53:43.000Z",
              "description": "The date after which a file request will no longer accept new\nsubmissions.\nAfter this date, the `status` will automatically be set to\n`inactive`.\nThis will default to the value on the existing file request."
            },
            "description": {
              "type": "string",
              "example": "Please upload required documents",
              "description": "An optional new description for the file request. This can be\nused to change the description of the file request.\nThis will default to the value on the existing file request."
            },
            "is_email_required": {
              "type": "boolean",
              "example": true,
              "description": "Whether a file request submitter is required to provide\ntheir email address.\nWhen this setting is set to true, the Box UI will show\nan email field on the file request form.\nThis will default to the value on the existing file request."
            },
            "is_description_required": {
              "type": "boolean",
              "example": true,
              "description": "Whether a file request submitter is required to provide\na description of the files they are submitting.\nWhen this setting is set to true, the Box UI will show\na description field on the file request form.\nThis will default to the value on the existing file request."
            }
          },
          "description": "The request body to update a file request."
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "File Request",
          "x-box-tag": "file_requests",
          "properties": {
            "id": {
              "type": "string",
              "example": "42037322",
              "readOnly": true,
              "description": "The unique identifier for this file request."
            },
            "url": {
              "type": "string",
              "example": "https://cloud.app.box.com/f/19e57f40ace247278a8e3d336678c64a",
              "readOnly": true,
              "description": "The generated URL for this file request. This URL can be shared\nwith users to let them upload files to the associated folder."
            },
            "etag": {
              "type": "string",
              "example": "1",
              "nullable": true,
              "description": "The HTTP `etag` of this file. This can be used in combination with the `If-Match` header when updating a file request. By providing that header, a change will only be performed on the  file request if the `etag` on the file request still matches the `etag` provided in the `If-Match` header."
            },
            "type": {
              "enum": [
                "file-request"
              ],
              "type": "string",
              "example": "file-request",
              "readOnly": true,
              "description": "`file-request`"
            },
            "title": {
              "type": "string",
              "example": "Please upload documents",
              "description": "The title of file request. This is shown\nin the Box UI to users uploading files.\nThis defaults to title of the file request that was\ncopied to create this file request."
            },
            "folder": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Folder (Base)",
                      "x-box-tag": "folders",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                        },
                        "etag": {
                          "type": "string",
                          "example": "1",
                          "nullable": true,
                          "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                        },
                        "type": {
                          "enum": [
                            "folder"
                          ],
                          "type": "string",
                          "example": "folder",
                          "nullable": false,
                          "description": "`folder`"
                        }
                      },
                      "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "folder--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Contracts",
                          "nullable": false,
                          "description": "The name of the folder."
                        },
                        "sequence_id": {
                          "allOf": [
                            {
                              "type": "string",
                              "example": "3",
                              "nullable": false,
                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                            },
                            {
                              "nullable": false
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "title": "Folder (Mini)",
                  "description": "A mini representation of a file version, used when\nnested under another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "folder--mini"
                },
                {
                  "description": "The folder that this file request is associated with.\nFiles submitted through the file request form will be\nuploaded to this folder."
                }
              ],
              "nullable": false
            },
            "status": {
              "enum": [
                "active",
                "inactive"
              ],
              "type": "string",
              "example": "active",
              "description": "The status of the file request. This defaults\nto `active`.\nWhen the status is set to `inactive`, the file request\nwill no longer accept new submissions, and any visitor\nto the file request URL will receive a `HTTP 404` status\ncode.\nThis defaults to status of file request that was\ncopied to create this file request."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2020-09-28T18:53:43.000Z",
              "nullable": false,
              "description": "The date and time when the file request was created."
            },
            "created_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who created this file request."
                }
              ]
            },
            "expires_at": {
              "type": "string",
              "format": "date-time",
              "example": "2020-09-28T18:53:43.000Z",
              "description": "The date after which a file request will no longer accept new\nsubmissions.\nAfter this date, the `status` will automatically be set to\n`inactive`."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2020-09-28T18:53:43.000Z",
              "nullable": false,
              "description": "The date and time when the file request was last updated."
            },
            "updated_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who last modified this file request."
                },
                {
                  "nullable": false
                }
              ]
            },
            "description": {
              "type": "string",
              "example": "Following documents are requested for your process",
              "nullable": true,
              "description": "The optional description of this file request. This is\nshown in the Box UI to users uploading files.\nThis defaults to description of the file request that was\ncopied to create this file request."
            },
            "is_email_required": {
              "type": "boolean",
              "example": true,
              "description": "Whether a file request submitter is required to provide\ntheir email address.\nWhen this setting is set to true, the Box UI will show\nan email field on the file request form.\nThis defaults to setting of file request that was\ncopied to create this file request."
            },
            "is_description_required": {
              "type": "boolean",
              "example": true,
              "description": "Whether a file request submitter is required to provide\na description of the files they are submitting.\nWhen this setting is set to true, the Box UI will show\na description field on the file request form.\nThis defaults to setting of file request that was\ncopied to create this file request."
            }
          },
          "description": "A standard representation of a file request, as returned\nfrom any file request API endpoints by default.",
          "x-box-resource-id": "file_request"
        }
      ]
  put_files_id:
    description: |-
      Updates a file. This can be used to rename or move a file,
      create a shared link, or lock a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-files-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "lock": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "access": {
                  "enum": [
                    "lock"
                  ],
                  "type": "string",
                  "example": "lock",
                  "description": "The type of this object."
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "Defines the time at which the lock expires."
                },
                "is_download_prevented": {
                  "type": "boolean",
                  "example": true,
                  "description": "Defines if the file can be downloaded while it is locked."
                }
              },
              "description": "Defines a lock on an item. This prevents the item from being moved, renamed, or otherwise changed by anyone other than the user who created the lock.\nSet this to `null` to remove the lock."
            },
            "name": {
              "type": "string",
              "example": "NewFile.txt",
              "description": "An optional different name for the file. This can be used to\nrename the file."
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "approved"
              ],
              "maxItems": 100,
              "minItems": 1,
              "description": "The tags for this item. These tags are shown in\nthe Box web app and mobile apps next to an item.\nTo add or remove a tag, retrieve the item's current tags,\nmodify them, and then update this field.\nThere is a limit of 100 tags per item, and 10,000\nunique tags per enterprise."
            },
            "parent": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "123",
                      "description": "The ID of parent item"
                    }
                  },
                  "description": "The parent for this item"
                },
                {
                  "description": "An optional new parent folder for the file. This can be used\nto move the file to a new folder."
                }
              ]
            },
            "description": {
              "type": "string",
              "example": "The latest reports. Automatically updated",
              "maxLength": 256,
              "description": "The description for a file. This can be seen in the right-hand sidebar panel when viewing a file in the Box web app. Additionally, this index is used in the search index of the file, allowing users to find the file by the content in the description."
            },
            "permissions": {
              "type": "object",
              "properties": {
                "can_download": {
                  "enum": [
                    "open",
                    "company"
                  ],
                  "type": "string",
                  "example": "open",
                  "description": "Defines who is allowed to download this file. The possible\nvalues are either `open` for everyone or `company` for\nthe other members of the user's enterprise.\nThis setting overrides the download permissions that are\nnormally part of the `role` of a collaboration. When set to\n`company`, this essentially removes the download option for\nexternal users with `viewer` or `editor` a roles."
                }
              },
              "description": "Defines who can download a file."
            },
            "shared_link": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "access": {
                      "enum": [
                        "open",
                        "company",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "description": "The level of access for the shared link. This can be restricted to anyone with the link (`open`), only people within the company (`company`) and only those who have been invited to the folder (`collaborators`).\nIf not set, this field defaults to the access level specified by the enterprise admin. To create a shared link with this default setting pass the `shared_link` object with no `access` field, for example `{ \"shared_link\": {} }`.\nThe `company` access level is only available to paid accounts."
                    },
                    "password": {
                      "type": "string",
                      "example": "do-not-use-this-password",
                      "description": "The password required to access the shared link. Set the password to `null` to remove it.\nA password can only be set when `access` is set to `open`."
                    },
                    "permissions": {
                      "type": "object",
                      "properties": {
                        "can_download": {
                          "type": "boolean",
                          "example": true,
                          "description": "If the shared link allows for downloading of files.\nThis can only be set when `access` is set to\n`open` or `company`."
                        }
                      }
                    },
                    "unshared_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2012-12-12T18:53:43.000Z",
                      "description": "The timestamp at which this shared link will\nexpire. This field can only be set by\nusers with paid accounts."
                    },
                    "vanity_name": {
                      "type": "string",
                      "example": "my-shared-link",
                      "description": "Defines a custom vanity name to use in the shared link URL, for example `https://app.box.com/v/my-shared-link`.\nCustom URLs should not be used when sharing sensitive content as vanity URLs are a lot easier to guess than regular shared links."
                    }
                  },
                  "description": "Defines a shared link for an item. Set this to `null` to remove the shared link."
                },
                {
                  "description": "Defines a shared link for a file. Set this to `null` to remove the shared link."
                }
              ]
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "File (Base)",
                  "x-box-tag": "files",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "file"
                      ],
                      "type": "string",
                      "example": "file",
                      "nullable": false,
                      "description": "`file`"
                    }
                  },
                  "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "file--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contract.pdf",
                      "description": "The name of the file"
                    },
                    "sha1": {
                      "type": "string",
                      "format": "digest",
                      "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                      "nullable": false,
                      "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    },
                    "file_version": {
                      "allOf": [
                        {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "File version (Base)",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "12345",
                                  "nullable": false,
                                  "description": "The unique identifier that represent a file version."
                                },
                                "type": {
                                  "enum": [
                                    "file_version"
                                  ],
                                  "type": "string",
                                  "example": "file_version",
                                  "nullable": false,
                                  "description": "`file_version`"
                                }
                              },
                              "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                              "x-box-variant": "base",
                              "x-box-variants": [
                                "base",
                                "mini",
                                "standard"
                              ],
                              "x-box-sanitized": true,
                              "x-box-resource-id": "file_version--base"
                            },
                            {
                              "properties": {
                                "sha1": {
                                  "type": "string",
                                  "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                  "description": "The SHA1 hash of this version of the file."
                                }
                              }
                            }
                          ],
                          "title": "File version (Mini)",
                          "description": "A mini representation of a file version, used when\nnested within another resource.",
                          "x-box-variant": "mini",
                          "x-box-resource-id": "file_version--mini"
                        },
                        {
                          "description": "The information about the current version of the file."
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "File (Mini)",
              "description": "A mini representation of a file, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "file--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "example": 629644,
                  "nullable": false,
                  "description": "The file size in bytes. Be careful parsing this integer as it can get very large and cause an integer overflow."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The folder that this file is located within."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was created on Box."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this file"
                    }
                  ]
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file was put in the trash."
                },
                "description": {
                  "type": "string",
                  "example": "Contract for Q1 renewal",
                  "nullable": false,
                  "maxLength": 256,
                  "description": "The optional description of this file"
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was last updated on Box."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this file. This will be\n`null` if no shared link has been created for this\nfile."
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this file is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was originally\ncreated, which might be before it was uploaded to Box."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was last updated,\nwhich might be before it was uploaded to Box."
                }
              }
            }
          ],
          "title": "File",
          "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "file"
        }
      ]
  put_files_id#add_shared_link:
    description: |-
      Adds a shared link to a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-files-id--add-shared-link/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "shared_link": {
              "type": "object",
              "properties": {
                "access": {
                  "enum": [
                    "open",
                    "company",
                    "collaborators"
                  ],
                  "type": "string",
                  "example": "open",
                  "description": "The level of access for the shared link. This can be restricted to anyone with the link (`open`), only people within the company (`company`) and only those who have been invited to the file (`collaborators`).\nIf not set, this field defaults to the access level specified by the enterprise admin. To create a shared link with this default setting pass the `shared_link` object with no `access` field, for example `{ \"shared_link\": {} }`.\nThe `company` access level is only available to paid accounts."
                },
                "password": {
                  "type": "string",
                  "example": "do-not-use-this-password",
                  "description": "The password required to access the shared link. Set the\npassword to `null` to remove it.\nA password can only be set when `access` is set to `open`."
                },
                "permissions": {
                  "type": "object",
                  "properties": {
                    "can_download": {
                      "type": "boolean",
                      "example": true,
                      "description": "If the shared link allows for downloading of files.\nThis can only be set when `access` is set to\n`open` or `company`."
                    }
                  }
                },
                "unshared_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "The timestamp at which this shared link will\nexpire. This field can only be set by\nusers with paid accounts. The value must be greater than the\ncurrent date and time."
                },
                "vanity_name": {
                  "type": "string",
                  "example": "my-shared-link",
                  "description": "Defines a custom vanity name to use in the shared link URL, for example `https://app.box.com/v/my-shared-link`.\nCustom URLs should not be used when sharing sensitive content as vanity URLs are a lot easier to guess than regular shared links."
                }
              },
              "description": "The settings for the shared link to create on the file.\nUse an empty object (`{}`) to use the default settings for shared links."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "File (Base)",
                  "x-box-tag": "files",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "file"
                      ],
                      "type": "string",
                      "example": "file",
                      "nullable": false,
                      "description": "`file`"
                    }
                  },
                  "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "file--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contract.pdf",
                      "description": "The name of the file"
                    },
                    "sha1": {
                      "type": "string",
                      "format": "digest",
                      "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                      "nullable": false,
                      "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    },
                    "file_version": {
                      "allOf": [
                        {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "File version (Base)",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "12345",
                                  "nullable": false,
                                  "description": "The unique identifier that represent a file version."
                                },
                                "type": {
                                  "enum": [
                                    "file_version"
                                  ],
                                  "type": "string",
                                  "example": "file_version",
                                  "nullable": false,
                                  "description": "`file_version`"
                                }
                              },
                              "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                              "x-box-variant": "base",
                              "x-box-variants": [
                                "base",
                                "mini",
                                "standard"
                              ],
                              "x-box-sanitized": true,
                              "x-box-resource-id": "file_version--base"
                            },
                            {
                              "properties": {
                                "sha1": {
                                  "type": "string",
                                  "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                  "description": "The SHA1 hash of this version of the file."
                                }
                              }
                            }
                          ],
                          "title": "File version (Mini)",
                          "description": "A mini representation of a file version, used when\nnested within another resource.",
                          "x-box-variant": "mini",
                          "x-box-resource-id": "file_version--mini"
                        },
                        {
                          "description": "The information about the current version of the file."
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "File (Mini)",
              "description": "A mini representation of a file, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "file--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "example": 629644,
                  "nullable": false,
                  "description": "The file size in bytes. Be careful parsing this integer as it can get very large and cause an integer overflow."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The folder that this file is located within."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was created on Box."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this file"
                    }
                  ]
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file was put in the trash."
                },
                "description": {
                  "type": "string",
                  "example": "Contract for Q1 renewal",
                  "nullable": false,
                  "maxLength": 256,
                  "description": "The optional description of this file"
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was last updated on Box."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this file. This will be\n`null` if no shared link has been created for this\nfile."
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this file is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was originally\ncreated, which might be before it was uploaded to Box."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was last updated,\nwhich might be before it was uploaded to Box."
                }
              }
            }
          ],
          "title": "File",
          "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "file"
        }
      ]
  put_files_id_metadata_enterprise_securityClassification-6VMVochwUWo:
    description: |-
      Updates a classification on a file.
      The classification can only be updated if a classification has already been applied to the file before. When editing classifications, only values are defined for the enterprise will be accepted.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-files-id-metadata-enterprise-securityClassification-6VMVochwUWo/
    example:
      inputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "op": {
                "enum": [
                  "replace"
                ],
                "type": "string",
                "example": "replace",
                "description": "`replace`"
              },
              "path": {
                "enum": [
                  "/Box__Security__Classification__Key"
                ],
                "type": "string",
                "example": "/Box__Security__Classification__Key",
                "description": "`/Box__Security__Classification__Key`"
              },
              "value": {
                "type": "string",
                "example": "Sensitive",
                "description": "The name of the classification to apply to this file.\nTo list the available classifications in an enterprise, use the classification API to retrieve the [classification template](e://get_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema) which lists all available classification keys."
              }
            },
            "description": "The operation to perform on the classification\nmetadata template instance. In this case, it use\nused to replace the value stored for the\n`Box__Security__Classification__Key` field with a new\nvalue."
          },
          "description": "A list containing the one change to make, to\nupdate the classification label."
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Classification",
          "x-box-tag": "classifications",
          "properties": {
            "$type": {
              "type": "string",
              "example": "securityClassification-6VMVochwUWo-fd31537a-0f95-4d86-9f2b-5974a29978f8",
              "description": "The unique ID of this classification instance. This will be include the name of the classification template and a unique ID."
            },
            "$scope": {
              "type": "string",
              "example": "enterprise_27335",
              "description": "The scope of the enterprise that this classification has been\napplied for.\nThis will be in the format `enterprise_{enterprise_id}`."
            },
            "$parent": {
              "type": "string",
              "example": "folder_59449484661,",
              "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`."
            },
            "$canEdit": {
              "type": "boolean",
              "example": true,
              "description": "Whether an end user can change the classification."
            },
            "$version": {
              "type": "integer",
              "example": 1,
              "description": "The version of the metadata instance. This version starts at 0 and increases every time a classification is updated."
            },
            "$template": {
              "enum": [
                "securityClassification-6VMVochwUWo"
              ],
              "type": "string",
              "example": "securityClassification-6VMVochwUWo",
              "description": "`securityClassification-6VMVochwUWo`"
            },
            "$typeVersion": {
              "type": "number",
              "example": 5,
              "description": "The version of the metadata template. This version starts at 0 and increases every time the template is updated. This is mostly for internal use."
            },
            "Box__Security__Classification__Key": {
              "type": "string",
              "example": "Sensitive",
              "description": "The name of the classification applied to the item."
            }
          },
          "description": "An instance of the classification metadata template, containing\nthe classification applied to the file or folder.\nTo get more details about the classification applied to an item,\nrequest the classification metadata template.",
          "x-box-resource-id": "classification"
        }
      ]
  put_files_id_metadata_global_boxSkillsCards:
    description: |-
      Updates one or more Box Skills metadata cards to a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-files-id-metadata-global-boxSkillsCards/
    example:
      inputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "op": {
                "enum": [
                  "replace"
                ],
                "type": "string",
                "example": "replace",
                "description": "`replace`"
              },
              "path": {
                "type": "string",
                "example": "/cards/0",
                "description": "The JSON Path that represents the card to replace. In most cases this will be in the format `/cards/{index}` where `index` is the zero-indexed position of the card in the list of cards."
              },
              "value": {
                "allOf": [
                  {
                    "oneOf": [
                      {
                        "type": "object",
                        "title": "Skill Card",
                        "required": [
                          "type",
                          "skill_card_type",
                          "skill",
                          "invocation"
                        ],
                        "x-box-tag": "skills",
                        "properties": {
                          "type": {
                            "enum": [
                              "skill_card"
                            ],
                            "type": "string",
                            "example": "skill_card",
                            "description": "`skill_card`"
                          },
                          "skill": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service",
                                "description": "A custom identifier that represent the service that applied this metadata."
                              },
                              "type": {
                                "enum": [
                                  "service"
                                ],
                                "type": "string",
                                "example": "service",
                                "description": "`service`"
                              }
                            },
                            "description": "The service that applied this metadata."
                          },
                          "status": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "enum": [
                                  "invoked",
                                  "processing",
                                  "success",
                                  "transient_failure",
                                  "permanent_failure"
                                ],
                                "type": "string",
                                "example": "success",
                                "description": "A code for the status of this Skill invocation. By default each of these will have their own accompanied messages. These can be adjusted by setting the `message` value on this object."
                              },
                              "message": {
                                "type": "string",
                                "example": "We're preparing to process your file. Please hold on!",
                                "description": "A custom message that can be provided with this status. This will be shown in the web app to the end user."
                              }
                            },
                            "description": "Used with a card of type `status` to set the status of the skill. This can be used to show a message to the user while the Skill is processing the data."
                          },
                          "entries": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string",
                                  "example": "keyword1",
                                  "description": "The text of the entry. This would be the actual keyword in a `keyword` card, the line of a transcript in a `transcript` card, or the display name for an item when using the `timeline` entry."
                                },
                                "appears": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "type": "integer",
                                        "example": 20,
                                        "description": "The time in seconds when an entry should stop appearing on a timeline. For a `skill_card_type` of `transcript` this value is ignored."
                                      },
                                      "start": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "The time in seconds when an entry should start appearing on a timeline."
                                      }
                                    },
                                    "description": "The timestamp for an entry."
                                  },
                                  "required": [
                                    "start",
                                    "end"
                                  ],
                                  "description": "Defines a list of timestamps for an entry. This is used with a `skill_card_type` of `transcript` as well as `timeline` to place items on a timeline.\nFor a `skill_card_type` of `transcript` there can only be one entry in this list for each item, and only the `start` time is used to place the transcript on the timeline."
                                },
                                "image_url": {
                                  "type": "string",
                                  "example": "https://example.com/image1.jpg",
                                  "description": "The image to show on a for an entry that appears on a timeline. This image URL is required for any `timeline` cards. The image will be shown in a list of items (for example faces), and clicking the image will show the user where that entry appears during the duration of this entry."
                                }
                              },
                              "description": "An entry in the `entries` attribute of a metadata card"
                            },
                            "description": "An optional list of entries in the metadata card.\nThis field is used with a `skill_card_type` of\n`transcript`, `keyword` or `timeline`."
                          },
                          "duration": {
                            "type": "integer",
                            "example": 1000,
                            "description": "An optional total duration in seconds.\nUsed with a `skill_card_type` of `transcript` or\n`timeline`."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-13T20:53:23.000Z",
                            "description": "The optional date and time this card was created at."
                          },
                          "invocation": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service-123",
                                "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                              },
                              "type": {
                                "enum": [
                                  "skill_invocation"
                                ],
                                "type": "string",
                                "example": "skill_invocation",
                                "description": "`skill_invocation`"
                              }
                            },
                            "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                          },
                          "skill_card_type": {
                            "enum": [
                              "transcript",
                              "keyword",
                              "timeline",
                              "status"
                            ],
                            "type": "string",
                            "example": "status",
                            "description": "The type of card to add to the file."
                          },
                          "skill_card_title": {
                            "type": "object",
                            "required": [
                              "message"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "my_transcripts",
                                "description": "An optional identifier for the title."
                              },
                              "message": {
                                "type": "string",
                                "example": "My Transcripts",
                                "description": "The actual title to show in the UI."
                              }
                            },
                            "description": "The title of the card."
                          }
                        },
                        "description": "A generic Box Skill metadata card.",
                        "x-box-resource-id": "skill_card"
                      },
                      {
                        "type": "object",
                        "title": "Keyword Skill Card",
                        "required": [
                          "type",
                          "skill_card_type",
                          "skill",
                          "invocation",
                          "entries"
                        ],
                        "x-box-tag": "skills",
                        "properties": {
                          "type": {
                            "enum": [
                              "skill_card"
                            ],
                            "type": "string",
                            "example": "skill_card",
                            "description": "`skill_card`"
                          },
                          "skill": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service",
                                "description": "A custom identifier that represent the service that applied this metadata."
                              },
                              "type": {
                                "enum": [
                                  "service"
                                ],
                                "type": "string",
                                "example": "service",
                                "description": "`service`"
                              }
                            },
                            "description": "The service that applied this metadata."
                          },
                          "entries": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string",
                                  "example": "keyword1",
                                  "description": "The text of the keyword."
                                }
                              },
                              "description": "An entry in the `entries` attribute of a metadata card"
                            },
                            "description": "An list of entries in the metadata card."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-13T20:53:23.000Z",
                            "description": "The optional date and time this card was created at."
                          },
                          "invocation": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service-123",
                                "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                              },
                              "type": {
                                "enum": [
                                  "skill_invocation"
                                ],
                                "type": "string",
                                "example": "skill_invocation",
                                "description": "`skill_invocation`"
                              }
                            },
                            "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                          },
                          "skill_card_type": {
                            "enum": [
                              "keyword"
                            ],
                            "type": "string",
                            "example": "keyword",
                            "description": "`keyword`"
                          },
                          "skill_card_title": {
                            "type": "object",
                            "required": [
                              "message"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "labels",
                                "description": "An optional identifier for the title."
                              },
                              "message": {
                                "type": "string",
                                "example": "Labels",
                                "description": "The actual title to show in the UI."
                              }
                            },
                            "description": "The title of the card."
                          }
                        },
                        "description": "A skill card that contains a set of keywords",
                        "x-box-resource-id": "keyword_skill_card"
                      },
                      {
                        "type": "object",
                        "title": "Timeline Skill Card",
                        "required": [
                          "type",
                          "skill_card_type",
                          "skill",
                          "invocation",
                          "entries"
                        ],
                        "x-box-tag": "skills",
                        "properties": {
                          "type": {
                            "enum": [
                              "skill_card"
                            ],
                            "type": "string",
                            "example": "skill_card",
                            "description": "`skill_card`"
                          },
                          "skill": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service",
                                "description": "A custom identifier that represent the service that applied this metadata."
                              },
                              "type": {
                                "enum": [
                                  "service"
                                ],
                                "type": "string",
                                "example": "service",
                                "description": "`service`"
                              }
                            },
                            "description": "The service that applied this metadata."
                          },
                          "entries": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string",
                                  "example": "John",
                                  "description": "The text of the entry. This would be the display name for an item being placed on the timeline, for example the name of the person who was detected in a video."
                                },
                                "appears": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "type": "integer",
                                        "example": 20,
                                        "description": "The time in seconds when an entry should stop appearing on a timeline."
                                      },
                                      "start": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "The time in seconds when an entry should start appearing on a timeline."
                                      }
                                    },
                                    "description": "The timestamp for an entry."
                                  },
                                  "required": [
                                    "start",
                                    "end"
                                  ],
                                  "description": "Defines a list of timestamps for when this item should appear on the timeline."
                                },
                                "image_url": {
                                  "type": "string",
                                  "example": "https://example.com/image1.jpg",
                                  "description": "The image to show on a for an entry that appears on a timeline. This image URL is required for every entry.\nThe image will be shown in a list of items (for example faces), and clicking the image will show the user where that entry appears during the duration of this entry."
                                }
                              },
                              "description": "An single item that's placed on multiple items on the timeline."
                            },
                            "description": "A list of entries on the timeline."
                          },
                          "duration": {
                            "type": "integer",
                            "example": 1000,
                            "description": "An total duration in seconds of the timeline."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-13T20:53:23.000Z",
                            "description": "The optional date and time this card was created at."
                          },
                          "invocation": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service-123",
                                "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                              },
                              "type": {
                                "enum": [
                                  "skill_invocation"
                                ],
                                "type": "string",
                                "example": "skill_invocation",
                                "description": "`skill_invocation`"
                              }
                            },
                            "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                          },
                          "skill_card_type": {
                            "enum": [
                              "timeline"
                            ],
                            "type": "string",
                            "example": "timeline",
                            "description": "`timeline`"
                          },
                          "skill_card_title": {
                            "type": "object",
                            "required": [
                              "message"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "Faces",
                                "description": "An optional identifier for the title."
                              },
                              "message": {
                                "type": "string",
                                "example": "Faces",
                                "description": "The actual title to show in the UI."
                              }
                            },
                            "description": "The title of the card."
                          }
                        },
                        "description": "A Box Skill metadata card that places a list of images on a timeline.",
                        "x-box-resource-id": "timeline_skill_card"
                      },
                      {
                        "type": "object",
                        "title": "Transcript Skill Card",
                        "required": [
                          "type",
                          "skill_card_type",
                          "skill",
                          "invocation",
                          "entries"
                        ],
                        "x-box-tag": "skills",
                        "properties": {
                          "type": {
                            "enum": [
                              "skill_card"
                            ],
                            "type": "string",
                            "example": "skill_card",
                            "description": "`skill_card`"
                          },
                          "skill": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "transciption-service",
                                "description": "A custom identifier that represent the service that applied this metadata."
                              },
                              "type": {
                                "enum": [
                                  "service"
                                ],
                                "type": "string",
                                "example": "service",
                                "description": "`service`"
                              }
                            },
                            "description": "The service that applied this metadata."
                          },
                          "entries": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string",
                                  "example": "Hi, and welcome to this video...",
                                  "description": "The text of the entry. This would be the transcribed text assigned to the entry on the timeline."
                                },
                                "appears": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "start": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "The time in seconds when an entry should start appearing on a timeline."
                                      }
                                    },
                                    "description": "The timestamp for an entry."
                                  },
                                  "required": [
                                    "start"
                                  ],
                                  "description": "Defines when a transcribed bit of text appears. This only includes a start time and no end time."
                                }
                              },
                              "description": "An entry in the `entries` attribute of a metadata card"
                            },
                            "description": "An list of entries for the card. This represents the individual entries of the transcription."
                          },
                          "duration": {
                            "type": "integer",
                            "example": 1000,
                            "description": "An optional total duration in seconds.\nUsed with a `skill_card_type` of `transcript` or\n`timeline`."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-13T20:53:23.000Z",
                            "description": "The optional date and time this card was created at."
                          },
                          "invocation": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "transciption-service-123",
                                "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                              },
                              "type": {
                                "enum": [
                                  "skill_invocation"
                                ],
                                "type": "string",
                                "example": "skill_invocation",
                                "description": "`skill_invocation`"
                              }
                            },
                            "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                          },
                          "skill_card_type": {
                            "enum": [
                              "transcript"
                            ],
                            "type": "string",
                            "example": "transcript",
                            "description": "`transcript`"
                          },
                          "skill_card_title": {
                            "type": "object",
                            "required": [
                              "message"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "my_transcripts",
                                "description": "An optional identifier for the title."
                              },
                              "message": {
                                "type": "string",
                                "example": "My Transcripts",
                                "description": "The actual title to show in the UI."
                              }
                            },
                            "description": "The title of the card."
                          }
                        },
                        "description": "A Box Skill metadata card that adds a transcript to a file.",
                        "x-box-resource-id": "transcript_skill_card"
                      },
                      {
                        "type": "object",
                        "title": "Status Skill Card",
                        "required": [
                          "type",
                          "skill_card_type",
                          "skill",
                          "invocation",
                          "status"
                        ],
                        "x-box-tag": "skills",
                        "properties": {
                          "type": {
                            "enum": [
                              "skill_card"
                            ],
                            "type": "string",
                            "example": "skill_card",
                            "description": "`skill_card`"
                          },
                          "skill": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service",
                                "description": "A custom identifier that represent the service that applied this metadata."
                              },
                              "type": {
                                "enum": [
                                  "service"
                                ],
                                "type": "string",
                                "example": "service",
                                "description": "`service`"
                              }
                            },
                            "description": "The service that applied this metadata."
                          },
                          "status": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "enum": [
                                  "invoked",
                                  "processing",
                                  "success",
                                  "transient_failure",
                                  "permanent_failure"
                                ],
                                "type": "string",
                                "example": "success",
                                "description": "A code for the status of this Skill invocation. By default each of these will have their own accompanied messages. These can be adjusted by setting the `message` value on this object."
                              },
                              "message": {
                                "type": "string",
                                "example": "We're preparing to process your file. Please hold on!",
                                "description": "A custom message that can be provided with this status. This will be shown in the web app to the end user."
                              }
                            },
                            "description": "Sets the status of the skill. This can be used to show a message to the user while the Skill is processing the data, or if it was not able to process the file."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-13T20:53:23.000Z",
                            "description": "The optional date and time this card was created at."
                          },
                          "invocation": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service-123",
                                "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                              },
                              "type": {
                                "enum": [
                                  "skill_invocation"
                                ],
                                "type": "string",
                                "example": "skill_invocation",
                                "description": "`skill_invocation`"
                              }
                            },
                            "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                          },
                          "skill_card_type": {
                            "enum": [
                              "status"
                            ],
                            "type": "string",
                            "example": "status",
                            "description": "`status`"
                          },
                          "skill_card_title": {
                            "type": "object",
                            "required": [
                              "message"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "status",
                                "description": "An optional identifier for the title."
                              },
                              "message": {
                                "type": "string",
                                "example": "Status",
                                "description": "The actual title to show in the UI."
                              }
                            },
                            "description": "The title of the card."
                          }
                        },
                        "description": "A Box Skill metadata card that puts a status message in the metadata sidebar.",
                        "x-box-resource-id": "status_skill_card"
                      }
                    ]
                  },
                  {
                    "description": "The card to insert into the list of cards at the\nposition defined by `path`."
                  }
                ]
              }
            },
            "description": "An operation that replaces an existing card."
          },
          "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902)\nspecification for the changes to make to the metadata\ntemplate.\nThe changes are represented as a JSON array of\noperation objects."
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Skills metadata instance",
          "x-box-tag": "skills",
          "properties": {
            "$id": {
              "type": "string",
              "format": "uuid",
              "example": "01234500-12f1-1234-aa12-b1d234cb567e",
              "maxLength": 36,
              "description": "A UUID to identify the metadata object"
            },
            "$type": {
              "type": "string",
              "example": "properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0",
              "description": "A unique identifier for the \"type\" of this instance. This is an internal system property and should not be used by a client application."
            },
            "cards": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Skill Card",
                    "required": [
                      "type",
                      "skill_card_type",
                      "skill",
                      "invocation"
                    ],
                    "x-box-tag": "skills",
                    "properties": {
                      "type": {
                        "enum": [
                          "skill_card"
                        ],
                        "type": "string",
                        "example": "skill_card",
                        "description": "`skill_card`"
                      },
                      "skill": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service",
                            "description": "A custom identifier that represent the service that applied this metadata."
                          },
                          "type": {
                            "enum": [
                              "service"
                            ],
                            "type": "string",
                            "example": "service",
                            "description": "`service`"
                          }
                        },
                        "description": "The service that applied this metadata."
                      },
                      "status": {
                        "type": "object",
                        "required": [
                          "code"
                        ],
                        "properties": {
                          "code": {
                            "enum": [
                              "invoked",
                              "processing",
                              "success",
                              "transient_failure",
                              "permanent_failure"
                            ],
                            "type": "string",
                            "example": "success",
                            "description": "A code for the status of this Skill invocation. By default each of these will have their own accompanied messages. These can be adjusted by setting the `message` value on this object."
                          },
                          "message": {
                            "type": "string",
                            "example": "We're preparing to process your file. Please hold on!",
                            "description": "A custom message that can be provided with this status. This will be shown in the web app to the end user."
                          }
                        },
                        "description": "Used with a card of type `status` to set the status of the skill. This can be used to show a message to the user while the Skill is processing the data."
                      },
                      "entries": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "example": "keyword1",
                              "description": "The text of the entry. This would be the actual keyword in a `keyword` card, the line of a transcript in a `transcript` card, or the display name for an item when using the `timeline` entry."
                            },
                            "appears": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "end": {
                                    "type": "integer",
                                    "example": 20,
                                    "description": "The time in seconds when an entry should stop appearing on a timeline. For a `skill_card_type` of `transcript` this value is ignored."
                                  },
                                  "start": {
                                    "type": "integer",
                                    "example": 1,
                                    "description": "The time in seconds when an entry should start appearing on a timeline."
                                  }
                                },
                                "description": "The timestamp for an entry."
                              },
                              "required": [
                                "start",
                                "end"
                              ],
                              "description": "Defines a list of timestamps for an entry. This is used with a `skill_card_type` of `transcript` as well as `timeline` to place items on a timeline.\nFor a `skill_card_type` of `transcript` there can only be one entry in this list for each item, and only the `start` time is used to place the transcript on the timeline."
                            },
                            "image_url": {
                              "type": "string",
                              "example": "https://example.com/image1.jpg",
                              "description": "The image to show on a for an entry that appears on a timeline. This image URL is required for any `timeline` cards. The image will be shown in a list of items (for example faces), and clicking the image will show the user where that entry appears during the duration of this entry."
                            }
                          },
                          "description": "An entry in the `entries` attribute of a metadata card"
                        },
                        "description": "An optional list of entries in the metadata card.\nThis field is used with a `skill_card_type` of\n`transcript`, `keyword` or `timeline`."
                      },
                      "duration": {
                        "type": "integer",
                        "example": 1000,
                        "description": "An optional total duration in seconds.\nUsed with a `skill_card_type` of `transcript` or\n`timeline`."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-13T20:53:23.000Z",
                        "description": "The optional date and time this card was created at."
                      },
                      "invocation": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service-123",
                            "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                          },
                          "type": {
                            "enum": [
                              "skill_invocation"
                            ],
                            "type": "string",
                            "example": "skill_invocation",
                            "description": "`skill_invocation`"
                          }
                        },
                        "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                      },
                      "skill_card_type": {
                        "enum": [
                          "transcript",
                          "keyword",
                          "timeline",
                          "status"
                        ],
                        "type": "string",
                        "example": "status",
                        "description": "The type of card to add to the file."
                      },
                      "skill_card_title": {
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "my_transcripts",
                            "description": "An optional identifier for the title."
                          },
                          "message": {
                            "type": "string",
                            "example": "My Transcripts",
                            "description": "The actual title to show in the UI."
                          }
                        },
                        "description": "The title of the card."
                      }
                    },
                    "description": "A generic Box Skill metadata card.",
                    "x-box-resource-id": "skill_card"
                  },
                  {
                    "type": "object",
                    "title": "Keyword Skill Card",
                    "required": [
                      "type",
                      "skill_card_type",
                      "skill",
                      "invocation",
                      "entries"
                    ],
                    "x-box-tag": "skills",
                    "properties": {
                      "type": {
                        "enum": [
                          "skill_card"
                        ],
                        "type": "string",
                        "example": "skill_card",
                        "description": "`skill_card`"
                      },
                      "skill": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service",
                            "description": "A custom identifier that represent the service that applied this metadata."
                          },
                          "type": {
                            "enum": [
                              "service"
                            ],
                            "type": "string",
                            "example": "service",
                            "description": "`service`"
                          }
                        },
                        "description": "The service that applied this metadata."
                      },
                      "entries": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "example": "keyword1",
                              "description": "The text of the keyword."
                            }
                          },
                          "description": "An entry in the `entries` attribute of a metadata card"
                        },
                        "description": "An list of entries in the metadata card."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-13T20:53:23.000Z",
                        "description": "The optional date and time this card was created at."
                      },
                      "invocation": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service-123",
                            "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                          },
                          "type": {
                            "enum": [
                              "skill_invocation"
                            ],
                            "type": "string",
                            "example": "skill_invocation",
                            "description": "`skill_invocation`"
                          }
                        },
                        "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                      },
                      "skill_card_type": {
                        "enum": [
                          "keyword"
                        ],
                        "type": "string",
                        "example": "keyword",
                        "description": "`keyword`"
                      },
                      "skill_card_title": {
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "labels",
                            "description": "An optional identifier for the title."
                          },
                          "message": {
                            "type": "string",
                            "example": "Labels",
                            "description": "The actual title to show in the UI."
                          }
                        },
                        "description": "The title of the card."
                      }
                    },
                    "description": "A skill card that contains a set of keywords",
                    "x-box-resource-id": "keyword_skill_card"
                  },
                  {
                    "type": "object",
                    "title": "Timeline Skill Card",
                    "required": [
                      "type",
                      "skill_card_type",
                      "skill",
                      "invocation",
                      "entries"
                    ],
                    "x-box-tag": "skills",
                    "properties": {
                      "type": {
                        "enum": [
                          "skill_card"
                        ],
                        "type": "string",
                        "example": "skill_card",
                        "description": "`skill_card`"
                      },
                      "skill": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service",
                            "description": "A custom identifier that represent the service that applied this metadata."
                          },
                          "type": {
                            "enum": [
                              "service"
                            ],
                            "type": "string",
                            "example": "service",
                            "description": "`service`"
                          }
                        },
                        "description": "The service that applied this metadata."
                      },
                      "entries": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "example": "John",
                              "description": "The text of the entry. This would be the display name for an item being placed on the timeline, for example the name of the person who was detected in a video."
                            },
                            "appears": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "end": {
                                    "type": "integer",
                                    "example": 20,
                                    "description": "The time in seconds when an\nentry should stop appearing on a timeline."
                                  },
                                  "start": {
                                    "type": "integer",
                                    "example": 1,
                                    "description": "The time in seconds when an entry should start appearing on a timeline."
                                  }
                                },
                                "description": "The timestamp for an entry."
                              },
                              "required": [
                                "start",
                                "end"
                              ],
                              "description": "Defines a list of timestamps for when this item should appear on the timeline."
                            },
                            "image_url": {
                              "type": "string",
                              "example": "https://example.com/image1.jpg",
                              "description": "The image to show on a for an entry that appears on a timeline. This image URL is required for every entry.\nThe image will be shown in a list of items (for example faces), and clicking the image will show the user where that entry appears during the duration of this entry."
                            }
                          },
                          "description": "An single item that's placed on multiple items on the timeline."
                        },
                        "description": "A list of entries on the timeline."
                      },
                      "duration": {
                        "type": "integer",
                        "example": 1000,
                        "description": "An total duration in seconds of the timeline."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-13T20:53:23.000Z",
                        "description": "The optional date and time this card was created at."
                      },
                      "invocation": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service-123",
                            "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                          },
                          "type": {
                            "enum": [
                              "skill_invocation"
                            ],
                            "type": "string",
                            "example": "skill_invocation",
                            "description": "`skill_invocation`"
                          }
                        },
                        "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                      },
                      "skill_card_type": {
                        "enum": [
                          "timeline"
                        ],
                        "type": "string",
                        "example": "timeline",
                        "description": "`timeline`"
                      },
                      "skill_card_title": {
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "Faces",
                            "description": "An optional identifier for the title."
                          },
                          "message": {
                            "type": "string",
                            "example": "Faces",
                            "description": "The actual title to show in the UI."
                          }
                        },
                        "description": "The title of the card."
                      }
                    },
                    "description": "A Box Skill metadata card that places a list of images on a timeline.",
                    "x-box-resource-id": "timeline_skill_card"
                  },
                  {
                    "type": "object",
                    "title": "Transcript Skill Card",
                    "required": [
                      "type",
                      "skill_card_type",
                      "skill",
                      "invocation",
                      "entries"
                    ],
                    "x-box-tag": "skills",
                    "properties": {
                      "type": {
                        "enum": [
                          "skill_card"
                        ],
                        "type": "string",
                        "example": "skill_card",
                        "description": "`skill_card`"
                      },
                      "skill": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "transciption-service",
                            "description": "A custom identifier that represent the service that applied this metadata."
                          },
                          "type": {
                            "enum": [
                              "service"
                            ],
                            "type": "string",
                            "example": "service",
                            "description": "`service`"
                          }
                        },
                        "description": "The service that applied this metadata."
                      },
                      "entries": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "example": "Hi, and welcome to this video...",
                              "description": "The text of the entry. This would be the transcribed text assigned to the entry on the timeline."
                            },
                            "appears": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "start": {
                                    "type": "integer",
                                    "example": 1,
                                    "description": "The time in seconds when an entry should start appearing on a timeline."
                                  }
                                },
                                "description": "The timestamp for an entry."
                              },
                              "required": [
                                "start"
                              ],
                              "description": "Defines when a transcribed bit of text appears. This only includes a start time and no end time."
                            }
                          },
                          "description": "An entry in the `entries` attribute of a metadata card"
                        },
                        "description": "An list of entries for the card. This represents the individual entries of the transcription."
                      },
                      "duration": {
                        "type": "integer",
                        "example": 1000,
                        "description": "An optional total duration in seconds.\nUsed with a `skill_card_type` of `transcript` or\n`timeline`."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-13T20:53:23.000Z",
                        "description": "The optional date and time this card was created at."
                      },
                      "invocation": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "transciption-service-123",
                            "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                          },
                          "type": {
                            "enum": [
                              "skill_invocation"
                            ],
                            "type": "string",
                            "example": "skill_invocation",
                            "description": "`skill_invocation`"
                          }
                        },
                        "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                      },
                      "skill_card_type": {
                        "enum": [
                          "transcript"
                        ],
                        "type": "string",
                        "example": "transcript",
                        "description": "`transcript`"
                      },
                      "skill_card_title": {
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "my_transcripts",
                            "description": "An optional identifier for the title."
                          },
                          "message": {
                            "type": "string",
                            "example": "My Transcripts",
                            "description": "The actual title to show in the UI."
                          }
                        },
                        "description": "The title of the card."
                      }
                    },
                    "description": "A Box Skill metadata card that adds a transcript to a file.",
                    "x-box-resource-id": "transcript_skill_card"
                  },
                  {
                    "type": "object",
                    "title": "Status Skill Card",
                    "required": [
                      "type",
                      "skill_card_type",
                      "skill",
                      "invocation",
                      "status"
                    ],
                    "x-box-tag": "skills",
                    "properties": {
                      "type": {
                        "enum": [
                          "skill_card"
                        ],
                        "type": "string",
                        "example": "skill_card",
                        "description": "`skill_card`"
                      },
                      "skill": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service",
                            "description": "A custom identifier that represent the service that applied this metadata."
                          },
                          "type": {
                            "enum": [
                              "service"
                            ],
                            "type": "string",
                            "example": "service",
                            "description": "`service`"
                          }
                        },
                        "description": "The service that applied this metadata."
                      },
                      "status": {
                        "type": "object",
                        "required": [
                          "code"
                        ],
                        "properties": {
                          "code": {
                            "enum": [
                              "invoked",
                              "processing",
                              "success",
                              "transient_failure",
                              "permanent_failure"
                            ],
                            "type": "string",
                            "example": "success",
                            "description": "A code for the status of this Skill invocation. By default each of these will have their own accompanied messages. These can be adjusted by setting the `message` value on this object."
                          },
                          "message": {
                            "type": "string",
                            "example": "We're preparing to process your file. Please hold on!",
                            "description": "A custom message that can be provided with this status. This will be shown in the web app to the end user."
                          }
                        },
                        "description": "Sets the status of the skill. This can be used to show a message to the user while the Skill is processing the data, or if it was not able to process the file."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-04-13T20:53:23.000Z",
                        "description": "The optional date and time this card was created at."
                      },
                      "invocation": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "image-recognition-service-123",
                            "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                          },
                          "type": {
                            "enum": [
                              "skill_invocation"
                            ],
                            "type": "string",
                            "example": "skill_invocation",
                            "description": "`skill_invocation`"
                          }
                        },
                        "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                      },
                      "skill_card_type": {
                        "enum": [
                          "status"
                        ],
                        "type": "string",
                        "example": "status",
                        "description": "`status`"
                      },
                      "skill_card_title": {
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "status",
                            "description": "An optional identifier for the title."
                          },
                          "message": {
                            "type": "string",
                            "example": "Status",
                            "description": "The actual title to show in the UI."
                          }
                        },
                        "description": "The title of the card."
                      }
                    },
                    "description": "A Box Skill metadata card that puts a status message in the metadata sidebar.",
                    "x-box-resource-id": "status_skill_card"
                  }
                ]
              },
              "description": "A list of Box Skill cards that have been applied to this file."
            },
            "$scope": {
              "type": "string",
              "example": "enterprise_27335",
              "description": "An ID for the scope in which this template\nhas been applied"
            },
            "$parent": {
              "type": "string",
              "example": "folder_59449484661,",
              "description": "An ID for the parent folder"
            },
            "$canEdit": {
              "type": "boolean",
              "example": true,
              "description": "Whether the user can edit this metadata"
            },
            "$version": {
              "type": "integer",
              "example": 1,
              "description": "The version of the metadata object. Starts at 0 and increases every time a user-defined property is modified."
            },
            "$template": {
              "type": "string",
              "example": "properties",
              "description": "The name of the template"
            },
            "$typeVersion": {
              "type": "integer",
              "example": 2,
              "description": "The last-known version of the template of the object. This is an internal system property and should not be used by a client application."
            }
          },
          "description": "The metadata assigned to a using for Box skills.",
          "x-box-resource-id": "skill_cards_metadata"
        }
      ]
  put_files_id_metadata_id_id:
    description: |-
      Updates a piece of metadata on a file.
      The metadata instance can only be updated if the template has already been
      applied to the file before. When editing metadata, only values that match
      the metadata template schema will be accepted.
      The update is applied atomically. If any errors occur during the
      application of the operations, the metadata instance will not be changed.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-files-id-metadata-id-id/
    example:
      inputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "title": "A metadata instance update operation",
            "properties": {
              "op": {
                "enum": [
                  "add",
                  "replace",
                  "remove",
                  "test",
                  "move",
                  "copy"
                ],
                "type": "string",
                "example": "add",
                "description": "The type of change to perform on the template. Some\nof these are hazardous as they will change existing templates."
              },
              "from": {
                "type": "string",
                "example": "/nextState",
                "description": "The location in the metadata JSON object to move or copy a value from. Required for `move` or `copy` operations and must be in the format of a [JSON-Pointer](https://tools.ietf.org/html/rfc6901)."
              },
              "path": {
                "type": "string",
                "example": "/currentState",
                "description": "The location in the metadata JSON object to apply the changes to, in the format of a [JSON-Pointer](https://tools.ietf.org/html/rfc6901).\nThe path must always be prefixed with a `/` to represent the root of the template. The characters `~` and `/` are reserved characters and must be escaped in the key."
              },
              "value": {
                "type": "string",
                "example": "reviewed",
                "description": "The value to be set or tested.\nRequired for `add`, `replace`, and `test` operations. For `add`, if the value exists already the previous value will be overwritten by the new value. For `replace`, the value must exist before replacing.\nFor `test`, the existing value at the `path` location must match the specified value."
              }
            },
            "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902) operation for a change to make to the metadata instance."
          },
          "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902)\nspecification for the changes to make to the metadata\ninstance.\nThe changes are represented as a JSON array of\noperation objects."
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Metadata instance (Base)",
              "x-box-tag": "file_metadata",
              "properties": {
                "$scope": {
                  "type": "string",
                  "example": "enterprise_27335",
                  "description": "An ID for the scope in which this template has been applied. This will be `enterprise_{enterprise_id}` for templates defined for use in this enterprise, and `global` for general templates that are available to all enterprises using Box."
                },
                "$parent": {
                  "type": "string",
                  "example": "folder_59449484661,",
                  "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`."
                },
                "$version": {
                  "type": "integer",
                  "example": 1,
                  "description": "The version of the metadata instance. This version starts at 0 and increases every time a user-defined property is modified."
                },
                "$template": {
                  "type": "string",
                  "example": "marketingCollateral",
                  "description": "The name of the template"
                }
              },
              "description": "The base representation of a metadata instance.",
              "x-box-variant": "base",
              "x-box-variants": [
                "base",
                "standard",
                "full"
              ],
              "x-box-sanitized": true,
              "x-box-resource-id": "metadata--base"
            }
          ],
          "title": "Metadata instance",
          "x-box-tag": "file_metadata",
          "description": "An instance of a metadata template, which has been applied to a file or folder.",
          "x-box-variant": "standard",
          "x-box-resource-id": "metadata"
        }
      ]
  put_files_id#remove_shared_link:
    description: |-
      Removes a shared link from a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-files-id--remove-shared-link/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "shared_link": {
              "type": "object",
              "example": null,
              "nullable": true,
              "description": "By setting this value to `null`, the shared link\nis removed from the file."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "File (Base)",
                  "x-box-tag": "files",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "file"
                      ],
                      "type": "string",
                      "example": "file",
                      "nullable": false,
                      "description": "`file`"
                    }
                  },
                  "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "file--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contract.pdf",
                      "description": "The name of the file"
                    },
                    "sha1": {
                      "type": "string",
                      "format": "digest",
                      "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                      "nullable": false,
                      "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    },
                    "file_version": {
                      "allOf": [
                        {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "File version (Base)",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "12345",
                                  "nullable": false,
                                  "description": "The unique identifier that represent a file version."
                                },
                                "type": {
                                  "enum": [
                                    "file_version"
                                  ],
                                  "type": "string",
                                  "example": "file_version",
                                  "nullable": false,
                                  "description": "`file_version`"
                                }
                              },
                              "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                              "x-box-variant": "base",
                              "x-box-variants": [
                                "base",
                                "mini",
                                "standard"
                              ],
                              "x-box-sanitized": true,
                              "x-box-resource-id": "file_version--base"
                            },
                            {
                              "properties": {
                                "sha1": {
                                  "type": "string",
                                  "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                  "description": "The SHA1 hash of this version of the file."
                                }
                              }
                            }
                          ],
                          "title": "File version (Mini)",
                          "description": "A mini representation of a file version, used when\nnested within another resource.",
                          "x-box-variant": "mini",
                          "x-box-resource-id": "file_version--mini"
                        },
                        {
                          "description": "The information about the current version of the file."
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "File (Mini)",
              "description": "A mini representation of a file, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "file--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "example": 629644,
                  "nullable": false,
                  "description": "The file size in bytes. Be careful parsing this integer as it can get very large and cause an integer overflow."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The folder that this file is located within."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was created on Box."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this file"
                    }
                  ]
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file was put in the trash."
                },
                "description": {
                  "type": "string",
                  "example": "Contract for Q1 renewal",
                  "nullable": false,
                  "maxLength": 256,
                  "description": "The optional description of this file"
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was last updated on Box."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this file. This will be\n`null` if no shared link has been created for this\nfile."
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this file is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was originally\ncreated, which might be before it was uploaded to Box."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was last updated,\nwhich might be before it was uploaded to Box."
                }
              }
            }
          ],
          "title": "File",
          "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "file"
        }
      ]
  put_files_id#update_shared_link:
    description: |-
      Updates a shared link on a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-files-id--update-shared-link/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "shared_link": {
              "type": "object",
              "properties": {
                "access": {
                  "enum": [
                    "open",
                    "company",
                    "collaborators"
                  ],
                  "type": "string",
                  "example": "open",
                  "description": "The level of access for the shared link. This can be restricted to anyone with the link (`open`), only people within the company (`company`) and only those who have been invited to the folder (`collaborators`).\nIf not set, this field defaults to the access level specified by the enterprise admin. To create a shared link with this default setting pass the `shared_link` object with no `access` field, for example `{ \"shared_link\": {} }`.\nThe `company` access level is only available to paid accounts."
                },
                "password": {
                  "type": "string",
                  "example": "do-not-use-this-password",
                  "description": "The password required to access the shared link. Set the\npassword to `null` to remove it.\nA password can only be set when `access` is set to `open`."
                },
                "permissions": {
                  "type": "object",
                  "properties": {
                    "can_download": {
                      "type": "boolean",
                      "example": true,
                      "description": "If the shared link allows for downloading of files.\nThis can only be set when `access` is set to\n`open` or `company`."
                    }
                  }
                },
                "unshared_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "The timestamp at which this shared link will\nexpire. This field can only be set by\nusers with paid accounts. The value must be greater than the\ncurrent date and time."
                },
                "vanity_name": {
                  "type": "string",
                  "example": "my-shared-link",
                  "description": "Defines a custom vanity name to use in the shared link URL, for example `https://app.box.com/v/my-shared-link`.\nCustom URLs should not be used when sharing sensitive content as vanity URLs are a lot easier to guess than regular shared links."
                }
              },
              "description": "The settings for the shared link to update."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "File (Base)",
                  "x-box-tag": "files",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "file"
                      ],
                      "type": "string",
                      "example": "file",
                      "nullable": false,
                      "description": "`file`"
                    }
                  },
                  "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "file--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contract.pdf",
                      "description": "The name of the file"
                    },
                    "sha1": {
                      "type": "string",
                      "format": "digest",
                      "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                      "nullable": false,
                      "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    },
                    "file_version": {
                      "allOf": [
                        {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "File version (Base)",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "12345",
                                  "nullable": false,
                                  "description": "The unique identifier that represent a file version."
                                },
                                "type": {
                                  "enum": [
                                    "file_version"
                                  ],
                                  "type": "string",
                                  "example": "file_version",
                                  "nullable": false,
                                  "description": "`file_version`"
                                }
                              },
                              "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                              "x-box-variant": "base",
                              "x-box-variants": [
                                "base",
                                "mini",
                                "standard"
                              ],
                              "x-box-sanitized": true,
                              "x-box-resource-id": "file_version--base"
                            },
                            {
                              "properties": {
                                "sha1": {
                                  "type": "string",
                                  "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                  "description": "The SHA1 hash of this version of the file."
                                }
                              }
                            }
                          ],
                          "title": "File version (Mini)",
                          "description": "A mini representation of a file version, used when\nnested within another resource.",
                          "x-box-variant": "mini",
                          "x-box-resource-id": "file_version--mini"
                        },
                        {
                          "description": "The information about the current version of the file."
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "File (Mini)",
              "description": "A mini representation of a file, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "file--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "example": 629644,
                  "nullable": false,
                  "description": "The file size in bytes. Be careful parsing this integer as it can get very large and cause an integer overflow."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The folder that this file is located within."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was created on Box."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this file"
                    }
                  ]
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this file was put in the trash."
                },
                "description": {
                  "type": "string",
                  "example": "Contract for Q1 renewal",
                  "nullable": false,
                  "maxLength": 256,
                  "description": "The optional description of this file"
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": false,
                  "description": "The date and time when the file was last updated on Box."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this file"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this file. This will be\n`null` if no shared link has been created for this\nfile."
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this file is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was originally\ncreated, which might be before it was uploaded to Box."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this file was last updated,\nwhich might be before it was uploaded to Box."
                }
              }
            }
          ],
          "title": "File",
          "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "file"
        }
      ]
  put_files_id_watermark:
    description: |-
      Applies or update a watermark on a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-files-id-watermark/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "watermark"
          ],
          "properties": {
            "watermark": {
              "type": "object",
              "required": [
                "imprint"
              ],
              "properties": {
                "imprint": {
                  "enum": [
                    "default"
                  ],
                  "type": "string",
                  "example": "default",
                  "description": "The type of watermark to apply.\nCurrently only supports one option."
                }
              },
              "description": "The watermark to imprint on the file"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Watermark",
          "x-box-tag": "file_watermarks",
          "properties": {
            "watermark": {
              "type": "object",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this watermark was created"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this task was modified"
                }
              }
            }
          },
          "description": "A watermark is a semi-transparent overlay on an embedded file\npreview that displays a viewer's email address or user ID\nand the time of access over a file's content",
          "x-box-resource-id": "watermark"
        }
      ]
  put_files_upload_sessions_id:
    description: |-
      Updates a chunk of an upload session for a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-files-upload-sessions-id/
    example:
      inputs: [
        {
          "type": "string",
          "format": "binary",
          "description": "The binary content of the file"
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Uploaded part",
          "x-box-tag": "chunked_uploads",
          "properties": {
            "part": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Upload part (Mini)",
                  "x-box-tag": "chunked_uploads",
                  "properties": {
                    "size": {
                      "type": "integer",
                      "format": "int64",
                      "example": 3222784,
                      "description": "The size of the chunk in bytes."
                    },
                    "offset": {
                      "type": "integer",
                      "format": "int64",
                      "example": 16777216,
                      "description": "The offset of the chunk within the file\nin bytes. The lower bound of the position\nof the chunk within the file."
                    },
                    "part_id": {
                      "type": "string",
                      "example": "6F2D3486",
                      "description": "The unique ID of the chunk."
                    }
                  },
                  "description": "The basic representation of an upload\nsession chunk.",
                  "x-box-variant": "mini",
                  "x-box-variants": [
                    "mini",
                    "standard"
                  ],
                  "x-box-resource-id": "upload_part--mini"
                },
                {
                  "properties": {
                    "sha1": {
                      "type": "string",
                      "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                      "description": "The SHA1 hash of the chunk."
                    }
                  }
                }
              ],
              "title": "Upload part",
              "description": "The representation of an upload\nsession chunk.",
              "x-box-variant": "standard",
              "x-box-resource-id": "upload_part"
            }
          },
          "description": "A chunk of a file uploaded as part of\nan upload session, as returned by some endpoints.",
          "x-box-resource-id": "uploaded_part"
        }
      ]
  put_folders_id:
    description: |-
      Updates a folder. This can be also be used to move the folder,
      create shared links, update collaborations, and more.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-folders-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "New Folder",
              "description": "The optional new name for this folder."
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "approved"
              ],
              "maxItems": 100,
              "minItems": 1,
              "description": "The tags for this item. These tags are shown in\nthe Box web app and mobile apps next to an item.\nTo add or remove a tag, retrieve the item's current tags,\nmodify them, and then update this field.\nThere is a limit of 100 tags per item, and 10,000\nunique tags per enterprise."
            },
            "parent": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0",
                  "description": "The ID of the new parent folder"
                }
              },
              "description": "The parent folder for this folder. Use this to move\nthe folder or to restore it out of the trash."
            },
            "sync_state": {
              "enum": [
                "synced",
                "not_synced",
                "partially_synced"
              ],
              "type": "string",
              "example": "synced",
              "nullable": false,
              "description": "Specifies whether a folder should be synced to a\nuser's device or not. This is used by Box Sync\n(discontinued) and is not used by Box Drive."
            },
            "collections": {
              "type": "array",
              "items": {
                "type": "object",
                "title": "Reference",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "11446498",
                    "description": "The unique identifier for this object"
                  },
                  "type": {
                    "type": "string",
                    "example": "file",
                    "description": "The type for this object"
                  }
                },
                "description": "The bare basic reference for an object"
              },
              "description": "An array of collections to make this folder\na member of. Currently\nwe only support the `favorites` collection.\nTo get the ID for a collection, use the\n[List all collections][1] endpoint.\nPassing an empty array `[]` or `null` will remove\nthe folder from all collections.\n[1]: ../advanced-files-and-folders/#get-collections"
            },
            "description": {
              "type": "string",
              "example": "Legal contracts for the new ACME deal",
              "nullable": false,
              "maxLength": 256,
              "description": "The optional description of this folder"
            },
            "shared_link": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "access": {
                      "enum": [
                        "open",
                        "company",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "description": "The level of access for the shared link. This can be restricted to anyone with the link (`open`), only people within the company (`company`) and only those who have been invited to the folder (`collaborators`).\nIf not set, this field defaults to the access level specified by the enterprise admin. To create a shared link with this default setting pass the `shared_link` object with no `access` field, for example `{ \"shared_link\": {} }`.\nThe `company` access level is only available to paid accounts."
                    },
                    "password": {
                      "type": "string",
                      "example": "do-not-use-this-password",
                      "description": "The password required to access the shared link. Set the password to `null` to remove it.\nA password can only be set when `access` is set to `open`."
                    },
                    "permissions": {
                      "type": "object",
                      "properties": {
                        "can_download": {
                          "type": "boolean",
                          "example": true,
                          "description": "If the shared link allows for downloading of files.\nThis can only be set when `access` is set to\n`open` or `company`."
                        }
                      }
                    },
                    "unshared_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2012-12-12T18:53:43.000Z",
                      "description": "The timestamp at which this shared link will\nexpire. This field can only be set by\nusers with paid accounts."
                    },
                    "vanity_name": {
                      "type": "string",
                      "example": "my-shared-link",
                      "description": "Defines a custom vanity name to use in the shared link URL, for example `https://app.box.com/v/my-shared-link`.\nCustom URLs should not be used when sharing sensitive content as vanity URLs are a lot easier to guess than regular shared links."
                    }
                  },
                  "description": "Defines a shared link for an item. Set this to `null` to remove the shared link."
                },
                {
                  "description": "Enables the creation of a shared link for a folder."
                }
              ]
            },
            "folder_upload_email": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Folder upload email",
                  "properties": {
                    "access": {
                      "enum": [
                        "open",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "nullable": false,
                      "description": "When this parameter has been set, users can email files to the email address that has been automatically created for this folder.\nTo create an email address, set this property either when creating or updating the folder.\nWhen set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.\nWhen set to `open` it will accept emails from any email address."
                    }
                  },
                  "description": "The Write Folder Upload Email object"
                },
                {
                  "description": "Setting this object enables the upload email address.\nThis email address can be used by users to directly\nupload files directly to the folder via email.\nSetting the value to `null` will disable the email address."
                }
              ]
            },
            "can_non_owners_invite": {
              "type": "boolean",
              "example": true,
              "description": "Specifies if users who are not the owner\nof the folder can invite new collaborators to the folder."
            },
            "can_non_owners_view_collaborators": {
              "type": "boolean",
              "example": true,
              "description": "Restricts collaborators who are not the owner of\nthis folder from viewing other collaborations on\nthis folder.\nIt also restricts non-owners from inviting new\ncollaborators.\nWhen setting this field to `false`, it is required\nto also set `can_non_owners_invite_collaborators` to\n`false` if it has not already been set."
            },
            "is_collaboration_restricted_to_enterprise": {
              "type": "boolean",
              "example": true,
              "description": "Specifies if new invites to this folder are restricted to users\nwithin the enterprise. This does not affect existing\ncollaborations."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Folder (Base)",
                  "x-box-tag": "folders",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "folder"
                      ],
                      "type": "string",
                      "example": "folder",
                      "nullable": false,
                      "description": "`folder`"
                    }
                  },
                  "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "folder--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contracts",
                      "nullable": false,
                      "description": "The name of the folder."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Folder (Mini)",
              "description": "A mini representation of a file version, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "folder--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 629644,
                  "nullable": false,
                  "description": "The folder size in bytes.\nBe careful parsing this integer as its\nvalue can get very large."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The optional folder that this folder is located within.\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time and which the folder will be automatically be deleted."
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder was put in the trash."
                },
                "description": {
                  "allOf": [
                    {
                      "type": "string",
                      "example": "Legal contracts for the new ACME deal",
                      "nullable": false,
                      "maxLength": 256,
                      "description": "The optional description of this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                    }
                  ],
                  "nullable": true
                },
                "item_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1000,
                              "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                            },
                            "order": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "by": {
                                    "type": "string",
                                    "example": "type",
                                    "description": "The field to order by"
                                  },
                                  "direction": {
                                    "enum": [
                                      "ASC",
                                      "DESC"
                                    ],
                                    "type": "string",
                                    "example": "ASC",
                                    "description": "The direction to order by, either ascending or descending"
                                  }
                                },
                                "description": "The order in which a pagination is ordered"
                              },
                              "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "offset": {
                              "type": "integer",
                              "format": "int64",
                              "example": 2000,
                              "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "total_count": {
                              "type": "integer",
                              "format": "int64",
                              "example": 5000,
                              "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            }
                          },
                          "description": "The part of an API response that describes pagination"
                        },
                        {
                          "properties": {
                            "entries": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File (Base)",
                                        "x-box-tag": "files",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "file"
                                            ],
                                            "type": "string",
                                            "example": "file",
                                            "nullable": false,
                                            "description": "`file`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contract.pdf",
                                            "description": "The name of the file"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "format": "digest",
                                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                            "nullable": false,
                                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          },
                                          "file_version": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "title": "File version (Base)",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "example": "12345",
                                                        "nullable": false,
                                                        "description": "The unique identifier that represent a file version."
                                                      },
                                                      "type": {
                                                        "enum": [
                                                          "file_version"
                                                        ],
                                                        "type": "string",
                                                        "example": "file_version",
                                                        "nullable": false,
                                                        "description": "`file_version`"
                                                      }
                                                    },
                                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                    "x-box-variant": "base",
                                                    "x-box-variants": [
                                                      "base",
                                                      "mini",
                                                      "standard"
                                                    ],
                                                    "x-box-sanitized": true,
                                                    "x-box-resource-id": "file_version--base"
                                                  },
                                                  {
                                                    "properties": {
                                                      "sha1": {
                                                        "type": "string",
                                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                        "description": "The SHA1 hash of this version of the file."
                                                      }
                                                    }
                                                  }
                                                ],
                                                "title": "File version (Mini)",
                                                "description": "A mini representation of a file version, used when nested within another resource.",
                                                "x-box-variant": "mini",
                                                "x-box-resource-id": "file_version--mini"
                                              },
                                              {
                                                "description": "The information about the current version of the file."
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File (Mini)",
                                    "description": "A mini representation of a file, used when\nnested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Folder (Base)",
                                        "x-box-tag": "folders",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "folder"
                                            ],
                                            "type": "string",
                                            "example": "folder",
                                            "nullable": false,
                                            "description": "`folder`"
                                          }
                                        },
                                        "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "folder--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contracts",
                                            "nullable": false,
                                            "description": "The name of the folder."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Folder (Mini)",
                                    "description": "A mini representation of a file version, used when nested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "folder--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Web link (Base)",
                                        "x-box-tag": "web_links",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "11446498",
                                            "description": "The unique identifier for this web link"
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "description": "The entity tag of this web link. Used with `If-Match` headers."
                                          },
                                          "type": {
                                            "enum": [
                                              "web_link"
                                            ],
                                            "type": "string",
                                            "example": "web_link",
                                            "description": "`web_link`"
                                          }
                                        },
                                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-resource-id": "web_link--base"
                                      },
                                      {
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com/example/1234",
                                            "description": "The URL this web link points to"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "My Bookmark",
                                            "description": "The name of the web link"
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Web link (Mini)",
                                    "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "web_link--mini"
                                  }
                                ]
                              },
                              "description": "The items in this collection."
                            }
                          }
                        }
                      ],
                      "title": "Items",
                      "x-box-tag": "folders",
                      "description": "A list of files, folders, and web links in\ntheir mini representation.",
                      "x-box-resource-id": "items"
                    },
                    {
                      "description": "A page of the items that are in the folder.\nThis field can only be requested when querying a folder's information, not when querying a folder's items."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was originally\ncreated."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was last updated."
                },
                "folder_upload_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "upload.Contracts.asd7asd@u.box.com",
                      "nullable": false,
                      "description": "The optional upload email address for this folder."
                    },
                    "access": {
                      "enum": [
                        "open",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "nullable": false,
                      "description": "When this parameter has been set, users can email files to the email address that has been automatically created for this folder.\nTo create an email address, set this property either when creating or updating the folder.\nWhen set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.\nWhen set to `open` it will accept emails from any email address."
                    }
                  }
                }
              }
            }
          ],
          "title": "Folder",
          "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "folder"
        }
      ]
  put_folders_id#add_shared_link:
    description: |-
      Adds a shared link to a folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-folders-id--add-shared-link/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "shared_link": {
              "type": "object",
              "properties": {
                "access": {
                  "enum": [
                    "open",
                    "company",
                    "collaborators"
                  ],
                  "type": "string",
                  "example": "open",
                  "description": "The level of access for the shared link. This can be restricted to anyone with the link (`open`), only people within the company (`company`) and only those who have been invited to the folder (`collaborators`).\nIf not set, this field defaults to the access level specified by the enterprise admin. To create a shared link with this default setting pass the `shared_link` object with no `access` field, for example `{ \"shared_link\": {} }`.\nThe `company` access level is only available to paid accounts."
                },
                "password": {
                  "type": "string",
                  "example": "do-not-use-this-password",
                  "description": "The password required to access the shared link. Set the\npassword to `null` to remove it.\nA password can only be set when `access` is set to `open`."
                },
                "permissions": {
                  "type": "object",
                  "properties": {
                    "can_download": {
                      "type": "boolean",
                      "example": true,
                      "description": "If the shared link allows for downloading of folders.\nThis can only be set when `access` is set to\n`open` or `company`."
                    }
                  }
                },
                "unshared_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "The timestamp at which this shared link will\nexpire. This field can only be set by\nusers with paid accounts. The value must be greater than the\ncurrent date and time."
                }
              },
              "description": "The settings for the shared link to create on the folder.\nUse an empty object (`{}`) to use the default settings for shared links."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Folder (Base)",
                  "x-box-tag": "folders",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "folder"
                      ],
                      "type": "string",
                      "example": "folder",
                      "nullable": false,
                      "description": "`folder`"
                    }
                  },
                  "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "folder--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contracts",
                      "nullable": false,
                      "description": "The name of the folder."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Folder (Mini)",
              "description": "A mini representation of a file version, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "folder--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 629644,
                  "nullable": false,
                  "description": "The folder size in bytes.\nBe careful parsing this integer as its\nvalue can get very large."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The optional folder that this folder is located within.\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time and which the folder will be automatically be deleted."
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder was put in the trash."
                },
                "description": {
                  "allOf": [
                    {
                      "type": "string",
                      "example": "Legal contracts for the new ACME deal",
                      "nullable": false,
                      "maxLength": 256,
                      "description": "The optional description of this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                    }
                  ],
                  "nullable": true
                },
                "item_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1000,
                              "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                            },
                            "order": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "by": {
                                    "type": "string",
                                    "example": "type",
                                    "description": "The field to order by"
                                  },
                                  "direction": {
                                    "enum": [
                                      "ASC",
                                      "DESC"
                                    ],
                                    "type": "string",
                                    "example": "ASC",
                                    "description": "The direction to order by, either ascending or descending"
                                  }
                                },
                                "description": "The order in which a pagination is ordered"
                              },
                              "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "offset": {
                              "type": "integer",
                              "format": "int64",
                              "example": 2000,
                              "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "total_count": {
                              "type": "integer",
                              "format": "int64",
                              "example": 5000,
                              "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            }
                          },
                          "description": "The part of an API response that describes pagination"
                        },
                        {
                          "properties": {
                            "entries": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File (Base)",
                                        "x-box-tag": "files",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "file"
                                            ],
                                            "type": "string",
                                            "example": "file",
                                            "nullable": false,
                                            "description": "`file`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contract.pdf",
                                            "description": "The name of the file"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "format": "digest",
                                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                            "nullable": false,
                                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          },
                                          "file_version": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "title": "File version (Base)",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "example": "12345",
                                                        "nullable": false,
                                                        "description": "The unique identifier that represent a file version."
                                                      },
                                                      "type": {
                                                        "enum": [
                                                          "file_version"
                                                        ],
                                                        "type": "string",
                                                        "example": "file_version",
                                                        "nullable": false,
                                                        "description": "`file_version`"
                                                      }
                                                    },
                                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                    "x-box-variant": "base",
                                                    "x-box-variants": [
                                                      "base",
                                                      "mini",
                                                      "standard"
                                                    ],
                                                    "x-box-sanitized": true,
                                                    "x-box-resource-id": "file_version--base"
                                                  },
                                                  {
                                                    "properties": {
                                                      "sha1": {
                                                        "type": "string",
                                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                        "description": "The SHA1 hash of this version of the file."
                                                      }
                                                    }
                                                  }
                                                ],
                                                "title": "File version (Mini)",
                                                "description": "A mini representation of a file version, used when nested within another resource.",
                                                "x-box-variant": "mini",
                                                "x-box-resource-id": "file_version--mini"
                                              },
                                              {
                                                "description": "The information about the current version of the file."
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File (Mini)",
                                    "description": "A mini representation of a file, used when\nnested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Folder (Base)",
                                        "x-box-tag": "folders",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "folder"
                                            ],
                                            "type": "string",
                                            "example": "folder",
                                            "nullable": false,
                                            "description": "`folder`"
                                          }
                                        },
                                        "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "folder--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contracts",
                                            "nullable": false,
                                            "description": "The name of the folder."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Folder (Mini)",
                                    "description": "A mini representation of a file version, used when nested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "folder--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Web link (Base)",
                                        "x-box-tag": "web_links",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "11446498",
                                            "description": "The unique identifier for this web link"
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "description": "The entity tag of this web link. Used with `If-Match` headers."
                                          },
                                          "type": {
                                            "enum": [
                                              "web_link"
                                            ],
                                            "type": "string",
                                            "example": "web_link",
                                            "description": "`web_link`"
                                          }
                                        },
                                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-resource-id": "web_link--base"
                                      },
                                      {
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com/example/1234",
                                            "description": "The URL this web link points to"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "My Bookmark",
                                            "description": "The name of the web link"
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Web link (Mini)",
                                    "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "web_link--mini"
                                  }
                                ]
                              },
                              "description": "The items in this collection."
                            }
                          }
                        }
                      ],
                      "title": "Items",
                      "x-box-tag": "folders",
                      "description": "A list of files, folders, and web links in\ntheir mini representation.",
                      "x-box-resource-id": "items"
                    },
                    {
                      "description": "A page of the items that are in the folder.\nThis field can only be requested when querying a folder's information, not when querying a folder's items."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was originally\ncreated."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was last updated."
                },
                "folder_upload_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "upload.Contracts.asd7asd@u.box.com",
                      "nullable": false,
                      "description": "The optional upload email address for this folder."
                    },
                    "access": {
                      "enum": [
                        "open",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "nullable": false,
                      "description": "When this parameter has been set, users can email files to the email address that has been automatically created for this folder.\nTo create an email address, set this property either when creating or updating the folder.\nWhen set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.\nWhen set to `open` it will accept emails from any email address."
                    }
                  }
                }
              }
            }
          ],
          "title": "Folder",
          "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "folder"
        }
      ]
  put_folders_id_metadata_enterprise_securityClassification-6VMVochwUWo:
    description: |-
      Updates a classification on a folder.
      The classification can only be updated if a classification has already been applied to the folder before. When editing classifications, only values are defined for the enterprise will be accepted.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-folders-id-metadata-enterprise-securityClassification-6VMVochwUWo/
    example:
      inputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "op": {
                "enum": [
                  "replace"
                ],
                "type": "string",
                "example": "replace",
                "description": "`replace`"
              },
              "path": {
                "enum": [
                  "/Box__Security__Classification__Key"
                ],
                "type": "string",
                "example": "/Box__Security__Classification__Key",
                "description": "`/Box__Security__Classification__Key`"
              },
              "value": {
                "type": "string",
                "example": "Sensitive",
                "description": "The name of the classification to apply to this folder.\nTo list the available classifications in an enterprise, use the classification API to retrieve the [classification template](e://get_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema) which lists all available classification keys."
              }
            },
            "description": "The operation to perform on the classification\nmetadata template instance. In this case, it use\nused to replace the value stored for the\n`Box__Security__Classification__Key` field with a new\nvalue."
          },
          "description": "A list containing the one change to make, to\nupdate the classification label."
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Classification",
          "x-box-tag": "classifications",
          "properties": {
            "$type": {
              "type": "string",
              "example": "securityClassification-6VMVochwUWo-fd31537a-0f95-4d86-9f2b-5974a29978f8",
              "description": "The unique ID of this classification instance. This will be include the name of the classification template and a unique ID."
            },
            "$scope": {
              "type": "string",
              "example": "enterprise_27335",
              "description": "The scope of the enterprise that this classification has been\napplied for.\nThis will be in the format `enterprise_{enterprise_id}`."
            },
            "$parent": {
              "type": "string",
              "example": "folder_59449484661,",
              "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`."
            },
            "$canEdit": {
              "type": "boolean",
              "example": true,
              "description": "Whether an end user can change the classification."
            },
            "$version": {
              "type": "integer",
              "example": 1,
              "description": "The version of the metadata instance. This version starts at 0 and increases every time a classification is updated."
            },
            "$template": {
              "enum": [
                "securityClassification-6VMVochwUWo"
              ],
              "type": "string",
              "example": "securityClassification-6VMVochwUWo",
              "description": "`securityClassification-6VMVochwUWo`"
            },
            "$typeVersion": {
              "type": "number",
              "example": 5,
              "description": "The version of the metadata template. This version starts at 0 and increases every time the template is updated. This is mostly for internal use."
            },
            "Box__Security__Classification__Key": {
              "type": "string",
              "example": "Sensitive",
              "description": "The name of the classification applied to the item."
            }
          },
          "description": "An instance of the classification metadata template, containing\nthe classification applied to the file or folder.\nTo get more details about the classification applied to an item,\nrequest the classification metadata template.",
          "x-box-resource-id": "classification"
        }
      ]
  put_folders_id_metadata_id_id:
    description: |-
      Updates a piece of metadata on a folder.
      The metadata instance can only be updated if the template has already been applied to the folder before. When editing metadata, only values that match the metadata template schema will be accepted.
      The update is applied atomically. If any errors occur during the application of the operations, the metadata instance will not be changed.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-folders-id-metadata-id-id/
    example:
      inputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "title": "A metadata instance update operation",
            "properties": {
              "op": {
                "enum": [
                  "add",
                  "replace",
                  "remove",
                  "test",
                  "move",
                  "copy"
                ],
                "type": "string",
                "example": "add",
                "description": "The type of change to perform on the template. Some\nof these are hazardous as they will change existing templates."
              },
              "from": {
                "type": "string",
                "example": "/nextState",
                "description": "The location in the metadata JSON object to move or copy a value from. Required for `move` or `copy` operations and must be in the format of a [JSON-Pointer](https://tools.ietf.org/html/rfc6901)."
              },
              "path": {
                "type": "string",
                "example": "/currentState",
                "description": "The location in the metadata JSON object to apply the changes to, in the format of a [JSON-Pointer](https://tools.ietf.org/html/rfc6901).\nThe path must always be prefixed with a `/` to represent the root of the template. The characters `~` and `/` are reserved characters and must be escaped in the key."
              },
              "value": {
                "type": "string",
                "example": "reviewed",
                "description": "The value to be set or tested.\nRequired for `add`, `replace`, and `test` operations. For `add`, if the value exists already the previous value will be overwritten by the new value. For `replace`, the value must exist before replacing.\nFor `test`, the existing value at the `path` location must match the specified value."
              }
            },
            "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902) operation for a change to make to the metadata instance."
          },
          "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902)\nspecification for the changes to make to the metadata\ninstance.\nThe changes are represented as a JSON array of\noperation objects."
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Metadata instance (Base)",
              "x-box-tag": "file_metadata",
              "properties": {
                "$scope": {
                  "type": "string",
                  "example": "enterprise_27335",
                  "description": "An ID for the scope in which this template has been applied. This will be `enterprise_{enterprise_id}` for templates defined for use in this enterprise, and `global` for general templates that are available to all enterprises using Box."
                },
                "$parent": {
                  "type": "string",
                  "example": "folder_59449484661,",
                  "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`."
                },
                "$version": {
                  "type": "integer",
                  "example": 1,
                  "description": "The version of the metadata instance. This version starts at 0 and increases every time a user-defined property is modified."
                },
                "$template": {
                  "type": "string",
                  "example": "marketingCollateral",
                  "description": "The name of the template"
                }
              },
              "description": "The base representation of a metadata instance.",
              "x-box-variant": "base",
              "x-box-variants": [
                "base",
                "standard",
                "full"
              ],
              "x-box-sanitized": true,
              "x-box-resource-id": "metadata--base"
            }
          ],
          "title": "Metadata instance",
          "x-box-tag": "file_metadata",
          "description": "An instance of a metadata template, which has been applied to a file or folder.",
          "x-box-variant": "standard",
          "x-box-resource-id": "metadata"
        }
      ]
  put_folders_id#remove_shared_link:
    description: |-
      Removes a shared link from a folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-folders-id--remove-shared-link/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "shared_link": {
              "type": "object",
              "example": null,
              "nullable": true,
              "description": "By setting this value to `null`, the shared link\nis removed from the folder."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Folder (Base)",
                  "x-box-tag": "folders",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "folder"
                      ],
                      "type": "string",
                      "example": "folder",
                      "nullable": false,
                      "description": "`folder`"
                    }
                  },
                  "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "folder--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contracts",
                      "nullable": false,
                      "description": "The name of the folder."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Folder (Mini)",
              "description": "A mini representation of a file version, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "folder--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 629644,
                  "nullable": false,
                  "description": "The folder size in bytes.\nBe careful parsing this integer as its\nvalue can get very large."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The optional folder that this folder is located within.\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time and which the folder will be automatically be deleted."
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder was put in the trash."
                },
                "description": {
                  "allOf": [
                    {
                      "type": "string",
                      "example": "Legal contracts for the new ACME deal",
                      "nullable": false,
                      "maxLength": 256,
                      "description": "The optional description of this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                    }
                  ],
                  "nullable": true
                },
                "item_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1000,
                              "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                            },
                            "order": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "by": {
                                    "type": "string",
                                    "example": "type",
                                    "description": "The field to order by"
                                  },
                                  "direction": {
                                    "enum": [
                                      "ASC",
                                      "DESC"
                                    ],
                                    "type": "string",
                                    "example": "ASC",
                                    "description": "The direction to order by, either ascending or descending"
                                  }
                                },
                                "description": "The order in which a pagination is ordered"
                              },
                              "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "offset": {
                              "type": "integer",
                              "format": "int64",
                              "example": 2000,
                              "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "total_count": {
                              "type": "integer",
                              "format": "int64",
                              "example": 5000,
                              "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            }
                          },
                          "description": "The part of an API response that describes pagination"
                        },
                        {
                          "properties": {
                            "entries": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File (Base)",
                                        "x-box-tag": "files",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "file"
                                            ],
                                            "type": "string",
                                            "example": "file",
                                            "nullable": false,
                                            "description": "`file`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contract.pdf",
                                            "description": "The name of the file"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "format": "digest",
                                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                            "nullable": false,
                                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          },
                                          "file_version": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "title": "File version (Base)",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "example": "12345",
                                                        "nullable": false,
                                                        "description": "The unique identifier that represent a file version."
                                                      },
                                                      "type": {
                                                        "enum": [
                                                          "file_version"
                                                        ],
                                                        "type": "string",
                                                        "example": "file_version",
                                                        "nullable": false,
                                                        "description": "`file_version`"
                                                      }
                                                    },
                                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                    "x-box-variant": "base",
                                                    "x-box-variants": [
                                                      "base",
                                                      "mini",
                                                      "standard"
                                                    ],
                                                    "x-box-sanitized": true,
                                                    "x-box-resource-id": "file_version--base"
                                                  },
                                                  {
                                                    "properties": {
                                                      "sha1": {
                                                        "type": "string",
                                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                        "description": "The SHA1 hash of this version of the file."
                                                      }
                                                    }
                                                  }
                                                ],
                                                "title": "File version (Mini)",
                                                "description": "A mini representation of a file version, used when nested within another resource.",
                                                "x-box-variant": "mini",
                                                "x-box-resource-id": "file_version--mini"
                                              },
                                              {
                                                "description": "The information about the current version of the file."
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File (Mini)",
                                    "description": "A mini representation of a file, used when\nnested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Folder (Base)",
                                        "x-box-tag": "folders",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "folder"
                                            ],
                                            "type": "string",
                                            "example": "folder",
                                            "nullable": false,
                                            "description": "`folder`"
                                          }
                                        },
                                        "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "folder--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contracts",
                                            "nullable": false,
                                            "description": "The name of the folder."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Folder (Mini)",
                                    "description": "A mini representation of a file version, used when nested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "folder--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Web link (Base)",
                                        "x-box-tag": "web_links",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "11446498",
                                            "description": "The unique identifier for this web link"
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "description": "The entity tag of this web link. Used with `If-Match` headers."
                                          },
                                          "type": {
                                            "enum": [
                                              "web_link"
                                            ],
                                            "type": "string",
                                            "example": "web_link",
                                            "description": "`web_link`"
                                          }
                                        },
                                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-resource-id": "web_link--base"
                                      },
                                      {
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com/example/1234",
                                            "description": "The URL this web link points to"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "My Bookmark",
                                            "description": "The name of the web link"
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Web link (Mini)",
                                    "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "web_link--mini"
                                  }
                                ]
                              },
                              "description": "The items in this collection."
                            }
                          }
                        }
                      ],
                      "title": "Items",
                      "x-box-tag": "folders",
                      "description": "A list of files, folders, and web links in\ntheir mini representation.",
                      "x-box-resource-id": "items"
                    },
                    {
                      "description": "A page of the items that are in the folder.\nThis field can only be requested when querying a folder's information, not when querying a folder's items."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was originally\ncreated."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was last updated."
                },
                "folder_upload_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "upload.Contracts.asd7asd@u.box.com",
                      "nullable": false,
                      "description": "The optional upload email address for this folder."
                    },
                    "access": {
                      "enum": [
                        "open",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "nullable": false,
                      "description": "When this parameter has been set, users can email files to the email address that has been automatically created for this folder.\nTo create an email address, set this property either when creating or updating the folder.\nWhen set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.\nWhen set to `open` it will accept emails from any email address."
                    }
                  }
                }
              }
            }
          ],
          "title": "Folder",
          "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "folder"
        }
      ]
  put_folders_id#update_shared_link:
    description: |-
      Updates a shared link on a folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-folders-id--update-shared-link/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "shared_link": {
              "type": "object",
              "properties": {
                "access": {
                  "enum": [
                    "open",
                    "company",
                    "collaborators"
                  ],
                  "type": "string",
                  "example": "open",
                  "description": "The level of access for the shared link. This can be restricted to anyone with the link (`open`), only people within the company (`company`) and only those who have been invited to the folder (`collaborators`).\nIf not set, this field defaults to the access level specified by the enterprise admin. To create a shared link with this default setting pass the `shared_link` object with no `access` field, for example `{ \"shared_link\": {} }`.\nThe `company` access level is only available to paid accounts."
                },
                "password": {
                  "type": "string",
                  "example": "do-not-use-this-password",
                  "description": "The password required to access the shared link. Set the\npassword to `null` to remove it.\nA password can only be set when `access` is set to `open`."
                },
                "permissions": {
                  "type": "object",
                  "properties": {
                    "can_download": {
                      "type": "boolean",
                      "example": true,
                      "description": "If the shared link allows for downloading of folders.\nThis can only be set when `access` is set to\n`open` or `company`."
                    }
                  }
                },
                "unshared_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "The timestamp at which this shared link will\nexpire. This field can only be set by\nusers with paid accounts. The value must be greater than the\ncurrent date and time."
                }
              },
              "description": "The settings for the shared link to update."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Folder (Base)",
                  "x-box-tag": "folders",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "folder"
                      ],
                      "type": "string",
                      "example": "folder",
                      "nullable": false,
                      "description": "`folder`"
                    }
                  },
                  "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "folder--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contracts",
                      "nullable": false,
                      "description": "The name of the folder."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Folder (Mini)",
              "description": "A mini representation of a file version, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "folder--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 629644,
                  "nullable": false,
                  "description": "The folder size in bytes.\nBe careful parsing this integer as its\nvalue can get very large."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The optional folder that this folder is located within.\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time and which the folder will be automatically be deleted."
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder was put in the trash."
                },
                "description": {
                  "allOf": [
                    {
                      "type": "string",
                      "example": "Legal contracts for the new ACME deal",
                      "nullable": false,
                      "maxLength": 256,
                      "description": "The optional description of this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                    }
                  ],
                  "nullable": true
                },
                "item_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1000,
                              "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                            },
                            "order": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "by": {
                                    "type": "string",
                                    "example": "type",
                                    "description": "The field to order by"
                                  },
                                  "direction": {
                                    "enum": [
                                      "ASC",
                                      "DESC"
                                    ],
                                    "type": "string",
                                    "example": "ASC",
                                    "description": "The direction to order by, either ascending or descending"
                                  }
                                },
                                "description": "The order in which a pagination is ordered"
                              },
                              "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "offset": {
                              "type": "integer",
                              "format": "int64",
                              "example": 2000,
                              "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "total_count": {
                              "type": "integer",
                              "format": "int64",
                              "example": 5000,
                              "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            }
                          },
                          "description": "The part of an API response that describes pagination"
                        },
                        {
                          "properties": {
                            "entries": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File (Base)",
                                        "x-box-tag": "files",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "file"
                                            ],
                                            "type": "string",
                                            "example": "file",
                                            "nullable": false,
                                            "description": "`file`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contract.pdf",
                                            "description": "The name of the file"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "format": "digest",
                                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                            "nullable": false,
                                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          },
                                          "file_version": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "title": "File version (Base)",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "example": "12345",
                                                        "nullable": false,
                                                        "description": "The unique identifier that represent a file version."
                                                      },
                                                      "type": {
                                                        "enum": [
                                                          "file_version"
                                                        ],
                                                        "type": "string",
                                                        "example": "file_version",
                                                        "nullable": false,
                                                        "description": "`file_version`"
                                                      }
                                                    },
                                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                    "x-box-variant": "base",
                                                    "x-box-variants": [
                                                      "base",
                                                      "mini",
                                                      "standard"
                                                    ],
                                                    "x-box-sanitized": true,
                                                    "x-box-resource-id": "file_version--base"
                                                  },
                                                  {
                                                    "properties": {
                                                      "sha1": {
                                                        "type": "string",
                                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                        "description": "The SHA1 hash of this version of the file."
                                                      }
                                                    }
                                                  }
                                                ],
                                                "title": "File version (Mini)",
                                                "description": "A mini representation of a file version, used when nested within another resource.",
                                                "x-box-variant": "mini",
                                                "x-box-resource-id": "file_version--mini"
                                              },
                                              {
                                                "description": "The information about the current version of the file."
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File (Mini)",
                                    "description": "A mini representation of a file, used when\nnested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Folder (Base)",
                                        "x-box-tag": "folders",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "folder"
                                            ],
                                            "type": "string",
                                            "example": "folder",
                                            "nullable": false,
                                            "description": "`folder`"
                                          }
                                        },
                                        "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "folder--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contracts",
                                            "nullable": false,
                                            "description": "The name of the folder."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Folder (Mini)",
                                    "description": "A mini representation of a file version, used when nested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "folder--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Web link (Base)",
                                        "x-box-tag": "web_links",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "11446498",
                                            "description": "The unique identifier for this web link"
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "description": "The entity tag of this web link. Used with `If-Match` headers."
                                          },
                                          "type": {
                                            "enum": [
                                              "web_link"
                                            ],
                                            "type": "string",
                                            "example": "web_link",
                                            "description": "`web_link`"
                                          }
                                        },
                                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-resource-id": "web_link--base"
                                      },
                                      {
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com/example/1234",
                                            "description": "The URL this web link points to"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "My Bookmark",
                                            "description": "The name of the web link"
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Web link (Mini)",
                                    "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "web_link--mini"
                                  }
                                ]
                              },
                              "description": "The items in this collection."
                            }
                          }
                        }
                      ],
                      "title": "Items",
                      "x-box-tag": "folders",
                      "description": "A list of files, folders, and web links in\ntheir mini representation.",
                      "x-box-resource-id": "items"
                    },
                    {
                      "description": "A page of the items that are in the folder.\nThis field can only be requested when querying a folder's information, not when querying a folder's items."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was originally\ncreated."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was last updated."
                },
                "folder_upload_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "upload.Contracts.asd7asd@u.box.com",
                      "nullable": false,
                      "description": "The optional upload email address for this folder."
                    },
                    "access": {
                      "enum": [
                        "open",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "nullable": false,
                      "description": "When this parameter has been set, users can email files to the email address that has been automatically created for this folder.\nTo create an email address, set this property either when creating or updating the folder.\nWhen set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.\nWhen set to `open` it will accept emails from any email address."
                    }
                  }
                }
              }
            }
          ],
          "title": "Folder",
          "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "folder"
        }
      ]
  put_folders_id_watermark:
    description: |-
      Applies or update a watermark on a folder.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-folders-id-watermark/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "watermark"
          ],
          "properties": {
            "watermark": {
              "type": "object",
              "required": [
                "imprint"
              ],
              "properties": {
                "imprint": {
                  "enum": [
                    "default"
                  ],
                  "type": "string",
                  "example": "default",
                  "description": "The type of watermark to apply.\nCurrently only supports one option."
                }
              },
              "description": "The watermark to imprint on the folder"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Watermark",
          "x-box-tag": "file_watermarks",
          "properties": {
            "watermark": {
              "type": "object",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this watermark was created"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this task was modified"
                }
              }
            }
          },
          "description": "A watermark is a semi-transparent overlay on an embedded file\npreview that displays a viewer's email address or user ID\nand the time of access over a file's content",
          "x-box-resource-id": "watermark"
        }
      ]
  put_group_memberships_id:
    description: |-
      Updates a user's group membership. Only admins of this
      group or users with admin-level permissions will be able to
      use this API.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-group-memberships-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "role": {
              "enum": [
                "member",
                "admin"
              ],
              "type": "string",
              "example": "member",
              "description": "The role of the user in the group."
            },
            "configurable_permissions": {
              "type": "object",
              "example": {
                "can_run_reports": true
              },
              "description": "Custom configuration for the permissions an admin if a group will receive. This option has no effect on members with a role of `member`.\nSetting these permissions overwrites the default access levels of an admin.\nSpecifying a value of \"null\" for this object will disable all configurable permissions. Specifying permissions will set them accordingly, omitted permissions will be enabled by default.",
              "additionalProperties": {
                "type": "boolean",
                "example": true,
                "description": "A key value pair of custom permissions.",
                "x-box-example-key": "can_run_reports"
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Group membership",
          "x-box-tag": "memberships",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this group membership"
            },
            "role": {
              "enum": [
                "member",
                "admin"
              ],
              "type": "string",
              "example": "member",
              "description": "The role of the user in the group."
            },
            "type": {
              "enum": [
                "group_membership"
              ],
              "type": "string",
              "example": "group_membership",
              "description": "`group_membership`"
            },
            "user": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user that the membership applies to"
                }
              ]
            },
            "group": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Group (Base)",
                      "x-box-tag": "groups",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this object"
                        },
                        "type": {
                          "enum": [
                            "group"
                          ],
                          "type": "string",
                          "example": "group",
                          "description": "`group`"
                        }
                      },
                      "description": "A base representation of a group.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "group--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Support",
                          "description": "The name of the group"
                        },
                        "group_type": {
                          "enum": [
                            "managed_group",
                            "all_users_group"
                          ],
                          "type": "string",
                          "example": "managed_group",
                          "description": "The type of the group."
                        }
                      }
                    }
                  ],
                  "title": "Group (Mini)",
                  "description": "Mini representation of a group, including id and name of\ngroup.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "group--mini"
                },
                {
                  "description": "The group that the membership applies to"
                }
              ]
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The time this membership was created."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The time this membership was last modified."
            }
          },
          "description": "Membership is used to signify that a user is part of a\ngroup.",
          "x-box-resource-id": "group_membership"
        }
      ]
  put_groups_id:
    description: |-
      Updates a specific group. Only admins of this
      group or users with admin-level permissions will be able to
      use this API.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-groups-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Customer Support",
              "description": "The name of the new group to be created. Must be unique within the enterprise."
            },
            "provenance": {
              "type": "string",
              "example": "Active Directory",
              "maxLength": 255,
              "description": "Keeps track of which external source this group is\ncoming, for example `Active Directory`, or `Okta`.\nSetting this will also prevent Box admins from editing\nthe group name and its members directly via the Box\nweb application.\nThis is desirable for one-way syncing of groups."
            },
            "description": {
              "type": "string",
              "example": "\"Customer Support Group - as imported from Active Directory\"",
              "maxLength": 255,
              "description": "A human readable description of the group."
            },
            "invitability_level": {
              "enum": [
                "admins_only",
                "admins_and_members",
                "all_managed_users"
              ],
              "type": "string",
              "example": "admins_only",
              "description": "Specifies who can invite the group to collaborate\non folders.\nWhen set to `admins_only` the enterprise admin, co-admins,\nand the group's admin can invite the group.\nWhen set to `admins_and_members` all the admins listed\nabove and group members can invite the group.\nWhen set to `all_managed_users` all managed users in the\nenterprise can invite the group."
            },
            "external_sync_identifier": {
              "type": "string",
              "example": "AD:123456",
              "description": "An arbitrary identifier that can be used by\nexternal group sync tools to link this Box Group to\nan external group.\nExample values of this field\ncould be an **Active Directory Object ID** or a **Google\nGroup ID**.\nWe recommend you use of this field in\norder to avoid issues when group names are updated in\neither Box or external systems."
            },
            "member_viewability_level": {
              "enum": [
                "admins_only",
                "admins_and_members",
                "all_managed_users"
              ],
              "type": "string",
              "example": "admins_only",
              "description": "Specifies who can see the members of the group.\n* `admins_only` - the enterprise admin, co-admins, group's\n  group admin\n* `admins_and_members` - all admins and group members\n* `all_managed_users` - all managed users in the\n  enterprise"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Group (Base)",
                  "x-box-tag": "groups",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this object"
                    },
                    "type": {
                      "enum": [
                        "group"
                      ],
                      "type": "string",
                      "example": "group",
                      "description": "`group`"
                    }
                  },
                  "description": "A base representation of a group.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "group--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Support",
                      "description": "The name of the group"
                    },
                    "group_type": {
                      "enum": [
                        "managed_group",
                        "all_users_group"
                      ],
                      "type": "string",
                      "example": "managed_group",
                      "description": "The type of the group."
                    }
                  }
                }
              ],
              "title": "Group (Mini)",
              "description": "Mini representation of a group, including id and name of\ngroup.",
              "x-box-variant": "mini",
              "x-box-resource-id": "group--mini"
            },
            {
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the group object was created"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the group object was last modified"
                }
              }
            }
          ],
          "title": "Group",
          "description": "A standard representation of a group, as returned from any\ngroup API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "group"
        }
      ]
  put_legal_hold_policies_id:
    description: |-
      Update legal hold policy.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-legal-hold-policies-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "example": "A custom policy for the sales team",
              "maxLength": 500,
              "description": "A description for the policy."
            },
            "policy_name": {
              "type": "string",
              "example": "Sales Policy",
              "maxLength": 254,
              "description": "The name of the policy."
            },
            "release_notes": {
              "type": "string",
              "example": "Required for GDPR",
              "maxLength": 500,
              "description": "Notes around why the policy was released."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Legal hold policy (Mini)",
              "x-box-tag": "legal_hold_policies",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "11446498",
                  "description": "The unique identifier for this legal hold policy"
                },
                "type": {
                  "enum": [
                    "legal_hold_policy"
                  ],
                  "type": "string",
                  "example": "legal_hold_policy",
                  "description": "`legal_hold_policy`"
                }
              },
              "description": "A mini legal hold policy",
              "x-box-variant": "mini",
              "x-box-variants": [
                "mini",
                "standard"
              ],
              "x-box-resource-id": "legal_hold_policy--mini"
            },
            {
              "properties": {
                "status": {
                  "enum": [
                    "active",
                    "applying",
                    "releasing",
                    "released"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "* 'active' - the policy is not in a transition state\n* 'applying' - that the policy is in the process of\n  being applied\n* 'releasing' - that the process is in the process\n  of being released\n* 'released' - the policy is no longer active"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the legal hold policy object was created"
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created the legal hold policy object"
                    }
                  ]
                },
                "deleted_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the policy release request was sent. (Because\nit can take time for a policy to fully delete, this\nisn't quite the same time that the policy is fully deleted).\nIf `null`, the policy was not deleted."
                },
                "description": {
                  "type": "string",
                  "example": "Postman created policy",
                  "maxLength": 500,
                  "description": "Description of the legal hold policy. Optional\nproperty with a 500 character limit."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the legal hold policy object was modified.\nDoes not update when assignments are added or removed."
                },
                "policy_name": {
                  "type": "string",
                  "example": "Policy 4",
                  "maxLength": 254,
                  "description": "Name of the legal hold policy."
                },
                "release_notes": {
                  "type": "string",
                  "example": "Example",
                  "maxLength": 500,
                  "description": "Optional notes about why the policy was created."
                },
                "filter_ended_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "User-specified, optional date filter applies to\nCustodian assignments only"
                },
                "assignment_counts": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "integer",
                      "format": "int64",
                      "example": 3,
                      "description": "The number of files this policy is applied to"
                    },
                    "user": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1,
                      "description": "The number of users this policy is applied to"
                    },
                    "folder": {
                      "type": "integer",
                      "format": "int64",
                      "example": 2,
                      "description": "The number of folders this policy is applied to"
                    },
                    "file_version": {
                      "type": "integer",
                      "format": "int64",
                      "example": 4,
                      "description": "The number of file versions this policy is applied to"
                    }
                  },
                  "description": "Counts of assignments within this a legal hold policy by item type"
                },
                "filter_started_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "User-specified, optional date filter applies to\nCustodian assignments only"
                }
              }
            }
          ],
          "title": "Legal hold policy",
          "description": "Legal Hold Policy information describes the basic\ncharacteristics of the Policy, such as name, description,\nand filter dates.",
          "x-box-variant": "standard",
          "x-box-resource-id": "legal_hold_policy"
        }
      ]
  put_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema#add:
    description: |-
      Adds one or more new classifications to the list of classifications available to the enterprise.
      This API can also be called by including the enterprise ID in the URL explicitly, for example `/metadata_templates/enterprise_12345/securityClassification-6VMVochwUWo/schema`.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-metadata-templates-enterprise-securityClassification-6VMVochwUWo-schema--add/
    example:
      inputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "op",
              "fieldKey",
              "data"
            ],
            "properties": {
              "op": {
                "type": "string",
                "example": "addEnumOption",
                "description": "`addEnumOption`"
              },
              "data": {
                "type": "object",
                "required": [
                  "key"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "example": "Sensitive",
                    "description": "The label of the classification as shown in the web and\nmobile interfaces. This is the only field required to\nadd a classification."
                  },
                  "classification": {
                    "type": "object",
                    "properties": {
                      "colorID": {
                        "type": "number",
                        "example": 4,
                        "description": "An internal Box identifier used to assign a color to\na classification label.\nMapping between a `colorID` and a color may change\nwithout notice. Currently, the color mappings are as\nfollows.\n* `0`: Yellow\n* `1`: Orange\n* `2`: Watermelon red\n* `3`: Purple rain\n* `4`: Light blue\n* `5`: Dark blue\n* `6`: Light green\n* `7`: Gray"
                      },
                      "classificationDefinition": {
                        "type": "string",
                        "example": "Sensitive information that must not be shared.",
                        "description": "A longer description of the classification."
                      }
                    },
                    "description": "Additional details for the classification."
                  }
                },
                "description": "The details of the classification to add."
              },
              "fieldKey": {
                "type": "string",
                "example": "Box__Security__Classification__Key",
                "description": "`Box__Security__Classification__Key`"
              }
            },
            "description": "A single classification to add to the enterprise."
          },
          "description": "An array that contains one or more classifications to add to\nthe enterprise's list of classifications."
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Classification Template",
          "x-box-tag": "classifications",
          "properties": {
            "id": {
              "type": "string",
              "example": "58063d82-4128-7b43-bba9-92f706befcdf",
              "description": "The ID of the classification template."
            },
            "type": {
              "enum": [
                "metadata_template"
              ],
              "type": "string",
              "example": "metadata_template",
              "nullable": false,
              "description": "`metadata_template`"
            },
            "scope": {
              "type": "string",
              "example": "enterprise_123456",
              "description": "The scope of the classification template. This is in the format\n`enterprise_{id}` where the `id` is the enterprise ID."
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "822227e0-47a5-921b-88a8-494760b2e6d2",
                    "description": "The unique ID of the field."
                  },
                  "key": {
                    "enum": [
                      "Box__Security__Classification__Key"
                    ],
                    "type": "string",
                    "example": "Box__Security__Classification__Key",
                    "description": "`Box__Security__Classification__Key`"
                  },
                  "type": {
                    "enum": [
                      "enum"
                    ],
                    "type": "string",
                    "example": "enum",
                    "description": "`enum`"
                  },
                  "hidden": {
                    "type": "boolean",
                    "example": false,
                    "description": "Classifications are always visible to web and mobile users."
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "46aea176-3483-4431-856c-6b5b13d1cc50",
                          "description": "The unique ID of this classification."
                        },
                        "key": {
                          "type": "string",
                          "example": "Sensitive",
                          "description": "The display name and key for this classification."
                        },
                        "staticConfig": {
                          "type": "object",
                          "properties": {
                            "classification": {
                              "type": "object",
                              "properties": {
                                "colorID": {
                                  "type": "number",
                                  "example": 4,
                                  "description": "An internal Box identifier used to assign a color to a classification label.\nMapping between a `colorID` and a color may change without notice. Currently, the color mappings are as follows.\n* `0`: Yellow * `1`: Orange * `2`: Watermelon red * `3`: Purple rain * `4`: Light blue * `5`: Dark blue * `6`: Light green * `7`: Gray"
                                },
                                "classificationDefinition": {
                                  "type": "string",
                                  "example": "Sensitive information",
                                  "description": "A longer description of the classification."
                                }
                              },
                              "description": "Additional information about the classification.\nThis is not an exclusive list of properties, and more object fields might be returned. These fields are used for internal Box Shield and Box Governance purposes and no additional value must be derived from these fields."
                            }
                          },
                          "description": "Additional information about the classification."
                        }
                      },
                      "description": "A single classification available in this enterprise."
                    },
                    "minItems": 1,
                    "description": "A list of classifications available in this enterprise."
                  },
                  "displayName": {
                    "enum": [
                      "Classification"
                    ],
                    "type": "string",
                    "example": "Classification",
                    "description": "`Classification`"
                  }
                },
                "description": "The metadata template field that represents the available\nclassifications."
              },
              "maxItems": 1,
              "minItems": 1,
              "description": "A list of fields for this classification template. This includes only one field, the `Box__Security__Classification__Key`, which defines the different classifications available in this enterprise."
            },
            "hidden": {
              "type": "boolean",
              "example": false,
              "description": "This template is always available in web and mobile interfaces."
            },
            "displayName": {
              "enum": [
                "Classification"
              ],
              "type": "string",
              "example": "Classification",
              "description": "The name of this template as shown in web and mobile interfaces."
            },
            "templateKey": {
              "enum": [
                "securityClassification-6VMVochwUWo"
              ],
              "type": "string",
              "example": "securityClassification-6VMVochwUWo",
              "description": "`securityClassification-6VMVochwUWo`"
            },
            "copyInstanceOnItemCopy": {
              "type": "boolean",
              "example": true,
              "description": "Classifications are always copied along when the file or folder is copied."
            }
          },
          "description": "A metadata template that holds the security classifications\ndefined by an enterprise.",
          "x-box-resource-id": "classification_template"
        }
      ]
  put_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema#delete:
    description: |-
      Removes a classification from the list of classifications available to the enterprise.
      This API can also be called by including the enterprise ID in the URL explicitly, for example `/metadata_templates/enterprise_12345/securityClassification-6VMVochwUWo/schema`.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-metadata-templates-enterprise-securityClassification-6VMVochwUWo-schema--delete/
    example:
      inputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "op",
              "fieldKey",
              "enumOptionKey"
            ],
            "properties": {
              "op": {
                "type": "string",
                "example": "removeEnumOption",
                "description": "`removeEnumOption`"
              },
              "fieldKey": {
                "type": "string",
                "example": "Box__Security__Classification__Key",
                "description": "`Box__Security__Classification__Key`"
              },
              "enumOptionKey": {
                "type": "string",
                "example": "Sensitive",
                "description": "The label of the classification to remove."
              }
            },
            "description": "A single classification to remove."
          },
          "description": "An array that contains one or more classifications to remove."
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Classification Template",
          "x-box-tag": "classifications",
          "properties": {
            "id": {
              "type": "string",
              "example": "58063d82-4128-7b43-bba9-92f706befcdf",
              "description": "The ID of the classification template."
            },
            "type": {
              "enum": [
                "metadata_template"
              ],
              "type": "string",
              "example": "metadata_template",
              "nullable": false,
              "description": "`metadata_template`"
            },
            "scope": {
              "type": "string",
              "example": "enterprise_123456",
              "description": "The scope of the classification template. This is in the format\n`enterprise_{id}` where the `id` is the enterprise ID."
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "822227e0-47a5-921b-88a8-494760b2e6d2",
                    "description": "The unique ID of the field."
                  },
                  "key": {
                    "enum": [
                      "Box__Security__Classification__Key"
                    ],
                    "type": "string",
                    "example": "Box__Security__Classification__Key",
                    "description": "`Box__Security__Classification__Key`"
                  },
                  "type": {
                    "enum": [
                      "enum"
                    ],
                    "type": "string",
                    "example": "enum",
                    "description": "`enum`"
                  },
                  "hidden": {
                    "type": "boolean",
                    "example": false,
                    "description": "Classifications are always visible to web and mobile users."
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "46aea176-3483-4431-856c-6b5b13d1cc50",
                          "description": "The unique ID of this classification."
                        },
                        "key": {
                          "type": "string",
                          "example": "Sensitive",
                          "description": "The display name and key for this classification."
                        },
                        "staticConfig": {
                          "type": "object",
                          "properties": {
                            "classification": {
                              "type": "object",
                              "properties": {
                                "colorID": {
                                  "type": "number",
                                  "example": 4,
                                  "description": "An internal Box identifier used to assign a color to a classification label.\nMapping between a `colorID` and a color may change without notice. Currently, the color mappings are as follows.\n* `0`: Yellow * `1`: Orange * `2`: Watermelon red * `3`: Purple rain * `4`: Light blue * `5`: Dark blue * `6`: Light green * `7`: Gray"
                                },
                                "classificationDefinition": {
                                  "type": "string",
                                  "example": "Sensitive information",
                                  "description": "A longer description of the classification."
                                }
                              },
                              "description": "Additional information about the classification.\nThis is not an exclusive list of properties, and more object fields might be returned. These fields are used for internal Box Shield and Box Governance purposes and no additional value must be derived from these fields."
                            }
                          },
                          "description": "Additional information about the classification."
                        }
                      },
                      "description": "A single classification available in this enterprise."
                    },
                    "minItems": 1,
                    "description": "A list of classifications available in this enterprise."
                  },
                  "displayName": {
                    "enum": [
                      "Classification"
                    ],
                    "type": "string",
                    "example": "Classification",
                    "description": "`Classification`"
                  }
                },
                "description": "The metadata template field that represents the available\nclassifications."
              },
              "maxItems": 1,
              "minItems": 1,
              "description": "A list of fields for this classification template. This includes only one field, the `Box__Security__Classification__Key`, which defines the different classifications available in this enterprise."
            },
            "hidden": {
              "type": "boolean",
              "example": false,
              "description": "This template is always available in web and mobile interfaces."
            },
            "displayName": {
              "enum": [
                "Classification"
              ],
              "type": "string",
              "example": "Classification",
              "description": "The name of this template as shown in web and mobile interfaces."
            },
            "templateKey": {
              "enum": [
                "securityClassification-6VMVochwUWo"
              ],
              "type": "string",
              "example": "securityClassification-6VMVochwUWo",
              "description": "`securityClassification-6VMVochwUWo`"
            },
            "copyInstanceOnItemCopy": {
              "type": "boolean",
              "example": true,
              "description": "Classifications are always copied along when the file or folder is copied."
            }
          },
          "description": "A metadata template that holds the security classifications\ndefined by an enterprise.",
          "x-box-resource-id": "classification_template"
        }
      ]
  put_metadata_templates_enterprise_securityClassification-6VMVochwUWo_schema#update:
    description: |-
      Updates the labels and descriptions of one or more classifications available to the enterprise.
      This API can also be called by including the enterprise ID in the URL explicitly, for example `/metadata_templates/enterprise_12345/securityClassification-6VMVochwUWo/schema`.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-metadata-templates-enterprise-securityClassification-6VMVochwUWo-schema--update/
    example:
      inputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "op",
              "fieldKey",
              "enumOptionKey",
              "data"
            ],
            "properties": {
              "op": {
                "type": "string",
                "example": "editEnumOption",
                "description": "`editEnumOption`"
              },
              "data": {
                "type": "object",
                "required": [
                  "key"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "example": "Very Sensitive",
                    "description": "A new label for the classification, as it will be\nshown in the web and mobile interfaces."
                  },
                  "classification": {
                    "type": "object",
                    "properties": {
                      "colorID": {
                        "type": "number",
                        "example": 4,
                        "description": "An internal Box identifier used to assign a color to\na classification label.\nMapping between a `colorID` and a color may change\nwithout notice. Currently, the color mappings are as\nfollows.\n* `0`: Yellow\n* `1`: Orange\n* `2`: Watermelon red\n* `3`: Purple rain\n* `4`: Light blue\n* `5`: Dark blue\n* `6`: Light green\n* `7`: Gray"
                      },
                      "classificationDefinition": {
                        "type": "string",
                        "example": "Sensitive information that must not be shared.",
                        "description": "A longer description of the classification."
                      }
                    },
                    "description": "Additional details for the classification."
                  }
                },
                "description": "The details of the updated classification."
              },
              "fieldKey": {
                "type": "string",
                "example": "Box__Security__Classification__Key",
                "description": "`Box__Security__Classification__Key`"
              },
              "enumOptionKey": {
                "type": "string",
                "example": "Sensitive",
                "description": "The original label of the classification to change."
              }
            },
            "description": "A single classification to update."
          },
          "description": "An array that contains one or more classifications to update."
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Classification Template",
          "x-box-tag": "classifications",
          "properties": {
            "id": {
              "type": "string",
              "example": "58063d82-4128-7b43-bba9-92f706befcdf",
              "description": "The ID of the classification template."
            },
            "type": {
              "enum": [
                "metadata_template"
              ],
              "type": "string",
              "example": "metadata_template",
              "nullable": false,
              "description": "`metadata_template`"
            },
            "scope": {
              "type": "string",
              "example": "enterprise_123456",
              "description": "The scope of the classification template. This is in the format\n`enterprise_{id}` where the `id` is the enterprise ID."
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "822227e0-47a5-921b-88a8-494760b2e6d2",
                    "description": "The unique ID of the field."
                  },
                  "key": {
                    "enum": [
                      "Box__Security__Classification__Key"
                    ],
                    "type": "string",
                    "example": "Box__Security__Classification__Key",
                    "description": "`Box__Security__Classification__Key`"
                  },
                  "type": {
                    "enum": [
                      "enum"
                    ],
                    "type": "string",
                    "example": "enum",
                    "description": "`enum`"
                  },
                  "hidden": {
                    "type": "boolean",
                    "example": false,
                    "description": "Classifications are always visible to web and mobile users."
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "46aea176-3483-4431-856c-6b5b13d1cc50",
                          "description": "The unique ID of this classification."
                        },
                        "key": {
                          "type": "string",
                          "example": "Sensitive",
                          "description": "The display name and key for this classification."
                        },
                        "staticConfig": {
                          "type": "object",
                          "properties": {
                            "classification": {
                              "type": "object",
                              "properties": {
                                "colorID": {
                                  "type": "number",
                                  "example": 4,
                                  "description": "An internal Box identifier used to assign a color to a classification label.\nMapping between a `colorID` and a color may change without notice. Currently, the color mappings are as follows.\n* `0`: Yellow * `1`: Orange * `2`: Watermelon red * `3`: Purple rain * `4`: Light blue * `5`: Dark blue * `6`: Light green * `7`: Gray"
                                },
                                "classificationDefinition": {
                                  "type": "string",
                                  "example": "Sensitive information",
                                  "description": "A longer description of the classification."
                                }
                              },
                              "description": "Additional information about the classification.\nThis is not an exclusive list of properties, and more object fields might be returned. These fields are used for internal Box Shield and Box Governance purposes and no additional value must be derived from these fields."
                            }
                          },
                          "description": "Additional information about the classification."
                        }
                      },
                      "description": "A single classification available in this enterprise."
                    },
                    "minItems": 1,
                    "description": "A list of classifications available in this enterprise."
                  },
                  "displayName": {
                    "enum": [
                      "Classification"
                    ],
                    "type": "string",
                    "example": "Classification",
                    "description": "`Classification`"
                  }
                },
                "description": "The metadata template field that represents the available\nclassifications."
              },
              "maxItems": 1,
              "minItems": 1,
              "description": "A list of fields for this classification template. This includes only one field, the `Box__Security__Classification__Key`, which defines the different classifications available in this enterprise."
            },
            "hidden": {
              "type": "boolean",
              "example": false,
              "description": "This template is always available in web and mobile interfaces."
            },
            "displayName": {
              "enum": [
                "Classification"
              ],
              "type": "string",
              "example": "Classification",
              "description": "The name of this template as shown in web and mobile interfaces."
            },
            "templateKey": {
              "enum": [
                "securityClassification-6VMVochwUWo"
              ],
              "type": "string",
              "example": "securityClassification-6VMVochwUWo",
              "description": "`securityClassification-6VMVochwUWo`"
            },
            "copyInstanceOnItemCopy": {
              "type": "boolean",
              "example": true,
              "description": "Classifications are always copied along when the file or folder is copied."
            }
          },
          "description": "A metadata template that holds the security classifications\ndefined by an enterprise.",
          "x-box-resource-id": "classification_template"
        }
      ]
  put_metadata_templates_id_id_schema:
    description: |-
      Updates a metadata template.
      The metadata template can only be updated if the template
      already exists.
      The update is applied atomically. If any errors occur during the
      application of the operations, the metadata template will not be changed.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-metadata-templates-id-id-schema/
    example:
      inputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "title": "A metadata template update operation",
            "required": [
              "op"
            ],
            "properties": {
              "op": {
                "enum": [
                  "editTemplate",
                  "addField",
                  "reorderFields",
                  "addEnumOption",
                  "reorderEnumOptions",
                  "reorderMultiSelectOptions",
                  "addMultiSelectOption",
                  "editField",
                  "removeField",
                  "editEnumOption",
                  "removeEnumOption",
                  "editMultiSelectOption",
                  "removeMultiSelectOption"
                ],
                "type": "string",
                "example": "addEnumOption",
                "description": "The type of change to perform on the template. Some\nof these are hazardous as they will change existing templates."
              },
              "data": {
                "type": "object",
                "example": {
                  "name": "Aaron Levie"
                },
                "description": "The data for the operation. This will vary depending on the\noperation being performed.",
                "additionalProperties": {
                  "type": "string",
                  "example": "Aaron Levie",
                  "description": "The value of a custom data entry.",
                  "x-box-example-key": "name"
                }
              },
              "fieldKey": {
                "type": "string",
                "example": "category",
                "description": "For operations that affect a single field this defines the key of the field that is affected."
              },
              "fieldKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "category",
                  "name"
                ],
                "description": "For operations that affect multiple fields this defines the keys of the fields that are affected."
              },
              "enumOptionKey": {
                "type": "string",
                "example": "option1",
                "description": "For operations that affect a single `enum` option this defines\nthe key of the option that is affected."
              },
              "enumOptionKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "option1",
                  "option2",
                  "option3"
                ],
                "description": "For operations that affect multiple `enum` options this defines the keys of the options that are affected."
              },
              "multiSelectOptionKey": {
                "type": "string",
                "example": "option1",
                "description": "For operations that affect a single multi select option this\ndefines the key of the option that is affected."
              },
              "multiSelectOptionKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "option1",
                  "option2",
                  "option3"
                ],
                "description": "For operations that affect multiple multi select options this\ndefines the keys of the options that are affected."
              }
            },
            "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902) operation for a change to make to the metadata instance."
          },
          "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902)\nspecification for the changes to make to the metadata\ntemplate.\nThe changes are represented as a JSON array of\noperation objects."
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Metadata template",
          "x-box-tag": "metadata_templates",
          "properties": {
            "id": {
              "type": "string",
              "example": "58063d82-4128-7b43-bba9-92f706befcdf",
              "description": "The ID of the metadata template."
            },
            "type": {
              "enum": [
                "metadata_template"
              ],
              "type": "string",
              "example": "metadata_template",
              "nullable": false,
              "description": "`metadata_template`"
            },
            "scope": {
              "type": "string",
              "example": "enterprise_123456",
              "description": "The scope of the metadata template can either be `global` or `enterprise_*`. The `global` scope is used for templates that are available to any Box enterprise. The `enterprise_*` scope represents templates that have been created within a specific enterprise, where `*` will be the ID of that enterprise."
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "title": "Metadata Field (Write)",
                    "required": [
                      "type",
                      "key",
                      "displayName"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "example": "category",
                        "maxLength": 256,
                        "description": "A unique identifier for the field. The identifier must\nbe unique within the template to which it belongs."
                      },
                      "type": {
                        "enum": [
                          "string",
                          "float",
                          "date",
                          "enum",
                          "multiSelect"
                        ],
                        "type": "string",
                        "example": "string",
                        "description": "The type of field. The basic fields are a `string` field for text, a `float` field for numbers, and a `date` fields to present the user with a date-time picker.\nAdditionally, metadata templates support an `enum` field for a basic list of items, and ` multiSelect` field for a similar list of items where the user can select more than one value."
                      },
                      "hidden": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether this field is hidden in the UI for the user and can only be set through the API instead."
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "title": "Metadata Option (Write)",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "example": "Category 1",
                              "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                            }
                          },
                          "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                        },
                        "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                      },
                      "description": {
                        "type": "string",
                        "example": "The category",
                        "maxLength": 4096,
                        "description": "A description of the field. This is not shown to the user."
                      },
                      "displayName": {
                        "type": "string",
                        "example": "Category",
                        "maxLength": 4096,
                        "description": "The display name of the field as it is shown to the user in the web and mobile apps."
                      }
                    },
                    "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
                  },
                  {
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "822227e0-47a5-921b-88a8-494760b2e6d2",
                        "description": "The unique ID of the metadata template field."
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "title": "Metadata Option (Write)",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "example": "Category 1",
                                  "description": "The text value of the option. This represents both the display name of the option and the internal key used when updating templates."
                                }
                              },
                              "description": "An option for a Metadata Template Field.\nOptions only need to be provided for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                            },
                            {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "45dc2849-a4a7-40a9-a751-4a699a589190",
                                  "description": "The internal unique identifier of the the option."
                                }
                              }
                            }
                          ],
                          "description": "An option for a Metadata Template Field.\nOptions are only present for fields of type `enum` and `multiSelect`. Options represent the value(s) a user can select for the field either through the UI or through the API."
                        },
                        "description": "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types."
                      }
                    }
                  }
                ],
                "description": "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options."
              },
              "description": "An ordered list of template fields which are part of the template. Each field can be a regular text field, date field, number field, as well as a single or multi-select list."
            },
            "hidden": {
              "type": "boolean",
              "example": true,
              "description": "Defines if this template is visible in the Box web app UI, or if\nit is purely intended for usage through the API."
            },
            "displayName": {
              "type": "string",
              "example": "Product Info",
              "maxLength": 4096,
              "description": "The display name of the template. This can be seen in the Box web app and mobile apps."
            },
            "templateKey": {
              "type": "string",
              "example": "productInfo",
              "pattern": "^[a-zA-Z_][-a-zA-Z0-9_]*$",
              "maxLength": 64,
              "description": "A unique identifier for the template. This identifier is unique across the `scope` of the enterprise to which the metadata template is being applied, yet is not necessarily unique across different enterprises."
            },
            "copyInstanceOnItemCopy": {
              "type": "boolean",
              "example": true,
              "description": "Whether or not to include the metadata when a file or folder is copied."
            }
          },
          "description": "A template for metadata that can be applied to files and folders",
          "x-box-resource-id": "metadata_template"
        }
      ]
  put_retention_policies_id:
    description: |-
      Updates a retention policy.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-retention-policies-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "status": {
              "enum": [
                "retired"
              ],
              "type": "string",
              "example": "retired",
              "description": "Used to retire a retention policy.\nIf not retiring a policy, do not include this parameter\nor set it to `null`."
            },
            "policy_name": {
              "type": "string",
              "example": "Some Policy Name",
              "description": "The name for the retention policy"
            },
            "disposition_action": {
              "enum": [
                "permanently_delete",
                "remove_retention"
              ],
              "type": "string",
              "example": "permanently_delete",
              "description": "The disposition action of the retention policy.\nThis action can be `permanently_delete`, which\nwill cause the content retained by the policy\nto be permanently deleted, or `remove_retention`,\nwhich will lift the retention policy from the content,\nallowing it to be deleted by users,\nonce the retention policy has expired."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Retention policy (Base)",
                  "x-box-tag": "retention_policies",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a file version."
                    },
                    "type": {
                      "enum": [
                        "retention_policy"
                      ],
                      "type": "string",
                      "example": "retention_policy",
                      "nullable": false,
                      "description": "`retention_policy`"
                    }
                  },
                  "description": "The bare basic representation of a file version, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard"
                  ],
                  "x-box-resource-id": "retention_policy--base"
                },
                {
                  "properties": {
                    "policy_name": {
                      "type": "string",
                      "example": "Some Policy Name",
                      "description": "The name given to the retention policy"
                    },
                    "retention_length": {
                      "type": "string",
                      "format": "int32",
                      "example": "365",
                      "minimum": 1,
                      "description": "The length of the retention policy. This length\nspecifies the duration in days that the retention\npolicy will be active for after being assigned to\ncontent.  If the policy has A `policy_type` of\n`indefinite`, the `retention_length` will also be\n`indefinite`."
                    },
                    "disposition_action": {
                      "enum": [
                        "permanently_delete",
                        "remove_retention"
                      ],
                      "type": "string",
                      "example": "permanently_delete",
                      "description": "The disposition action of the retention policy.\nThis action can be `permanently_delete`, which\nwill cause the content retained by the policy\nto be permanently deleted, or `remove_retention`,\nwhich will lift the retention policy from the content,\nallowing it to be deleted by users,\nonce the retention policy has expired."
                    }
                  }
                }
              ],
              "title": "Retention policy (Mini)",
              "description": "A mini representation of a retention policy, used when\nnested within another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "retention_policy--mini"
            },
            {
              "properties": {
                "status": {
                  "enum": [
                    "active",
                    "retired"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "The status of the retention policy. The status of\na policy will be `active`, unless explicitly retired by an\nadministrator, in which case the status will be `retired`.\nOnce a policy has been retired, it cannot become\nactive again."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the retention policy object was created"
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "A mini user object representing the user that\ncreated the retention policy"
                    }
                  ]
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the retention policy object was last modified"
                },
                "policy_type": {
                  "enum": [
                    "finite",
                    "indefinite"
                  ],
                  "type": "string",
                  "example": "finite",
                  "description": "The type of the retention policy. A retention\npolicy type can either be `finite`, where a\nspecific amount of time to retain the content is known\nupfront, or `indefinite`, where the amount of time\nto retain the content is still unknown."
                }
              }
            }
          ],
          "title": "Retention policy",
          "x-box-tag": "retention_policies",
          "description": "A retention policy blocks permanent deletion of content\nfor a specified amount of time. Admins can create retention\npolicies and then later assign them to specific folders\nor their entire enterprise.  To use this feature, you must\nhave the manage retention policies scope enabled\nfor your API key via your application management console.",
          "x-box-variant": "standard",
          "x-box-resource-id": "retention_policy"
        }
      ]
  put_skill_invocations_id:
    description: |-
      An alternative method that can be used to overwrite and update all Box Skill metadata cards on a file.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-skill-invocations-id/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "status",
            "metadata",
            "file"
          ],
          "properties": {
            "file": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "3243244",
                  "description": "The ID of the file"
                },
                "type": {
                  "enum": [
                    "file"
                  ],
                  "type": "string",
                  "example": "file",
                  "description": "`file`"
                }
              },
              "description": "The file to assign the cards to."
            },
            "usage": {
              "type": "object",
              "properties": {
                "unit": {
                  "type": "string",
                  "example": "file",
                  "description": "`file`"
                },
                "value": {
                  "type": "number",
                  "example": 1,
                  "description": "`1`"
                }
              },
              "description": "A descriptor that defines what items are affected by this call.\nSet this to the default values when setting a card to a `success` state, and leave it out in most other situations."
            },
            "status": {
              "enum": [
                "invoked",
                "processing",
                "success",
                "transient_failure",
                "permanent_failure"
              ],
              "type": "string",
              "example": "success",
              "description": "Defines the status of this invocation. Set this to `success` when setting Skill cards."
            },
            "metadata": {
              "type": "object",
              "properties": {
                "cards": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "title": "Skill Card",
                        "required": [
                          "type",
                          "skill_card_type",
                          "skill",
                          "invocation"
                        ],
                        "x-box-tag": "skills",
                        "properties": {
                          "type": {
                            "enum": [
                              "skill_card"
                            ],
                            "type": "string",
                            "example": "skill_card",
                            "description": "`skill_card`"
                          },
                          "skill": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service",
                                "description": "A custom identifier that represent the service that applied this metadata."
                              },
                              "type": {
                                "enum": [
                                  "service"
                                ],
                                "type": "string",
                                "example": "service",
                                "description": "`service`"
                              }
                            },
                            "description": "The service that applied this metadata."
                          },
                          "status": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "enum": [
                                  "invoked",
                                  "processing",
                                  "success",
                                  "transient_failure",
                                  "permanent_failure"
                                ],
                                "type": "string",
                                "example": "success",
                                "description": "A code for the status of this Skill invocation. By default each of these will have their own accompanied messages. These can be adjusted by setting the `message` value on this object."
                              },
                              "message": {
                                "type": "string",
                                "example": "We're preparing to process your file. Please hold on!",
                                "description": "A custom message that can be provided with this status. This will be shown in the web app to the end user."
                              }
                            },
                            "description": "Used with a card of type `status` to set the status of the skill. This can be used to show a message to the user while the Skill is processing the data."
                          },
                          "entries": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string",
                                  "example": "keyword1",
                                  "description": "The text of the entry. This would be the actual keyword in a `keyword` card, the line of a transcript in a `transcript` card, or the display name for an item when using the `timeline` entry."
                                },
                                "appears": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "type": "integer",
                                        "example": 20,
                                        "description": "The time in seconds when an entry should stop appearing on a timeline. For a `skill_card_type` of `transcript` this value is ignored."
                                      },
                                      "start": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "The time in seconds when an entry should start appearing on a timeline."
                                      }
                                    },
                                    "description": "The timestamp for an entry."
                                  },
                                  "required": [
                                    "start",
                                    "end"
                                  ],
                                  "description": "Defines a list of timestamps for an entry. This is used with a `skill_card_type` of `transcript` as well as `timeline` to place items on a timeline.\nFor a `skill_card_type` of `transcript` there can only be one entry in this list for each item, and only the `start` time is used to place the transcript on the timeline."
                                },
                                "image_url": {
                                  "type": "string",
                                  "example": "https://example.com/image1.jpg",
                                  "description": "The image to show on a for an entry that appears on a timeline. This image URL is required for any `timeline` cards. The image will be shown in a list of items (for example faces), and clicking the image will show the user where that entry appears during the duration of this entry."
                                }
                              },
                              "description": "An entry in the `entries` attribute of a metadata card"
                            },
                            "description": "An optional list of entries in the metadata card.\nThis field is used with a `skill_card_type` of\n`transcript`, `keyword` or `timeline`."
                          },
                          "duration": {
                            "type": "integer",
                            "example": 1000,
                            "description": "An optional total duration in seconds.\nUsed with a `skill_card_type` of `transcript` or\n`timeline`."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-13T20:53:23.000Z",
                            "description": "The optional date and time this card was created at."
                          },
                          "invocation": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service-123",
                                "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                              },
                              "type": {
                                "enum": [
                                  "skill_invocation"
                                ],
                                "type": "string",
                                "example": "skill_invocation",
                                "description": "`skill_invocation`"
                              }
                            },
                            "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                          },
                          "skill_card_type": {
                            "enum": [
                              "transcript",
                              "keyword",
                              "timeline",
                              "status"
                            ],
                            "type": "string",
                            "example": "status",
                            "description": "The type of card to add to the file."
                          },
                          "skill_card_title": {
                            "type": "object",
                            "required": [
                              "message"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "my_transcripts",
                                "description": "An optional identifier for the title."
                              },
                              "message": {
                                "type": "string",
                                "example": "My Transcripts",
                                "description": "The actual title to show in the UI."
                              }
                            },
                            "description": "The title of the card."
                          }
                        },
                        "description": "A generic Box Skill metadata card.",
                        "x-box-resource-id": "skill_card"
                      },
                      {
                        "type": "object",
                        "title": "Keyword Skill Card",
                        "required": [
                          "type",
                          "skill_card_type",
                          "skill",
                          "invocation",
                          "entries"
                        ],
                        "x-box-tag": "skills",
                        "properties": {
                          "type": {
                            "enum": [
                              "skill_card"
                            ],
                            "type": "string",
                            "example": "skill_card",
                            "description": "`skill_card`"
                          },
                          "skill": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service",
                                "description": "A custom identifier that represent the service that applied this metadata."
                              },
                              "type": {
                                "enum": [
                                  "service"
                                ],
                                "type": "string",
                                "example": "service",
                                "description": "`service`"
                              }
                            },
                            "description": "The service that applied this metadata."
                          },
                          "entries": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string",
                                  "example": "keyword1",
                                  "description": "The text of the keyword."
                                }
                              },
                              "description": "An entry in the `entries` attribute of a metadata card"
                            },
                            "description": "An list of entries in the metadata card."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-13T20:53:23.000Z",
                            "description": "The optional date and time this card was created at."
                          },
                          "invocation": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service-123",
                                "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                              },
                              "type": {
                                "enum": [
                                  "skill_invocation"
                                ],
                                "type": "string",
                                "example": "skill_invocation",
                                "description": "`skill_invocation`"
                              }
                            },
                            "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                          },
                          "skill_card_type": {
                            "enum": [
                              "keyword"
                            ],
                            "type": "string",
                            "example": "keyword",
                            "description": "`keyword`"
                          },
                          "skill_card_title": {
                            "type": "object",
                            "required": [
                              "message"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "labels",
                                "description": "An optional identifier for the title."
                              },
                              "message": {
                                "type": "string",
                                "example": "Labels",
                                "description": "The actual title to show in the UI."
                              }
                            },
                            "description": "The title of the card."
                          }
                        },
                        "description": "A skill card that contains a set of keywords",
                        "x-box-resource-id": "keyword_skill_card"
                      },
                      {
                        "type": "object",
                        "title": "Timeline Skill Card",
                        "required": [
                          "type",
                          "skill_card_type",
                          "skill",
                          "invocation",
                          "entries"
                        ],
                        "x-box-tag": "skills",
                        "properties": {
                          "type": {
                            "enum": [
                              "skill_card"
                            ],
                            "type": "string",
                            "example": "skill_card",
                            "description": "`skill_card`"
                          },
                          "skill": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service",
                                "description": "A custom identifier that represent the service that applied this metadata."
                              },
                              "type": {
                                "enum": [
                                  "service"
                                ],
                                "type": "string",
                                "example": "service",
                                "description": "`service`"
                              }
                            },
                            "description": "The service that applied this metadata."
                          },
                          "entries": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string",
                                  "example": "John",
                                  "description": "The text of the entry. This would be the display name for an item being placed on the timeline, for example the name of the person who was detected in a video."
                                },
                                "appears": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "type": "integer",
                                        "example": 20,
                                        "description": "The time in seconds when an entry should stop appearing on a timeline."
                                      },
                                      "start": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "The time in seconds when an entry should start appearing on a timeline."
                                      }
                                    },
                                    "description": "The timestamp for an entry."
                                  },
                                  "required": [
                                    "start",
                                    "end"
                                  ],
                                  "description": "Defines a list of timestamps for when this item should appear on the timeline."
                                },
                                "image_url": {
                                  "type": "string",
                                  "example": "https://example.com/image1.jpg",
                                  "description": "The image to show on a for an entry that appears on a timeline. This image URL is required for every entry.\nThe image will be shown in a list of items (for example faces), and clicking the image will show the user where that entry appears during the duration of this entry."
                                }
                              },
                              "description": "An single item that's placed on multiple items on the timeline."
                            },
                            "description": "A list of entries on the timeline."
                          },
                          "duration": {
                            "type": "integer",
                            "example": 1000,
                            "description": "An total duration in seconds of the timeline."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-13T20:53:23.000Z",
                            "description": "The optional date and time this card was created at."
                          },
                          "invocation": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service-123",
                                "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                              },
                              "type": {
                                "enum": [
                                  "skill_invocation"
                                ],
                                "type": "string",
                                "example": "skill_invocation",
                                "description": "`skill_invocation`"
                              }
                            },
                            "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                          },
                          "skill_card_type": {
                            "enum": [
                              "timeline"
                            ],
                            "type": "string",
                            "example": "timeline",
                            "description": "`timeline`"
                          },
                          "skill_card_title": {
                            "type": "object",
                            "required": [
                              "message"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "Faces",
                                "description": "An optional identifier for the title."
                              },
                              "message": {
                                "type": "string",
                                "example": "Faces",
                                "description": "The actual title to show in the UI."
                              }
                            },
                            "description": "The title of the card."
                          }
                        },
                        "description": "A Box Skill metadata card that places a list of images on a timeline.",
                        "x-box-resource-id": "timeline_skill_card"
                      },
                      {
                        "type": "object",
                        "title": "Transcript Skill Card",
                        "required": [
                          "type",
                          "skill_card_type",
                          "skill",
                          "invocation",
                          "entries"
                        ],
                        "x-box-tag": "skills",
                        "properties": {
                          "type": {
                            "enum": [
                              "skill_card"
                            ],
                            "type": "string",
                            "example": "skill_card",
                            "description": "`skill_card`"
                          },
                          "skill": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "transciption-service",
                                "description": "A custom identifier that represent the service that applied this metadata."
                              },
                              "type": {
                                "enum": [
                                  "service"
                                ],
                                "type": "string",
                                "example": "service",
                                "description": "`service`"
                              }
                            },
                            "description": "The service that applied this metadata."
                          },
                          "entries": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "text": {
                                  "type": "string",
                                  "example": "Hi, and welcome to this video...",
                                  "description": "The text of the entry. This would be the transcribed text assigned to the entry on the timeline."
                                },
                                "appears": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "start": {
                                        "type": "integer",
                                        "example": 1,
                                        "description": "The time in seconds when an entry should start appearing on a timeline."
                                      }
                                    },
                                    "description": "The timestamp for an entry."
                                  },
                                  "required": [
                                    "start"
                                  ],
                                  "description": "Defines when a transcribed bit of text appears. This only includes a start time and no end time."
                                }
                              },
                              "description": "An entry in the `entries` attribute of a metadata card"
                            },
                            "description": "An list of entries for the card. This represents the individual entries of the transcription."
                          },
                          "duration": {
                            "type": "integer",
                            "example": 1000,
                            "description": "An optional total duration in seconds.\nUsed with a `skill_card_type` of `transcript` or\n`timeline`."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-13T20:53:23.000Z",
                            "description": "The optional date and time this card was created at."
                          },
                          "invocation": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "transciption-service-123",
                                "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                              },
                              "type": {
                                "enum": [
                                  "skill_invocation"
                                ],
                                "type": "string",
                                "example": "skill_invocation",
                                "description": "`skill_invocation`"
                              }
                            },
                            "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                          },
                          "skill_card_type": {
                            "enum": [
                              "transcript"
                            ],
                            "type": "string",
                            "example": "transcript",
                            "description": "`transcript`"
                          },
                          "skill_card_title": {
                            "type": "object",
                            "required": [
                              "message"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "my_transcripts",
                                "description": "An optional identifier for the title."
                              },
                              "message": {
                                "type": "string",
                                "example": "My Transcripts",
                                "description": "The actual title to show in the UI."
                              }
                            },
                            "description": "The title of the card."
                          }
                        },
                        "description": "A Box Skill metadata card that adds a transcript to a file.",
                        "x-box-resource-id": "transcript_skill_card"
                      },
                      {
                        "type": "object",
                        "title": "Status Skill Card",
                        "required": [
                          "type",
                          "skill_card_type",
                          "skill",
                          "invocation",
                          "status"
                        ],
                        "x-box-tag": "skills",
                        "properties": {
                          "type": {
                            "enum": [
                              "skill_card"
                            ],
                            "type": "string",
                            "example": "skill_card",
                            "description": "`skill_card`"
                          },
                          "skill": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service",
                                "description": "A custom identifier that represent the service that applied this metadata."
                              },
                              "type": {
                                "enum": [
                                  "service"
                                ],
                                "type": "string",
                                "example": "service",
                                "description": "`service`"
                              }
                            },
                            "description": "The service that applied this metadata."
                          },
                          "status": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "enum": [
                                  "invoked",
                                  "processing",
                                  "success",
                                  "transient_failure",
                                  "permanent_failure"
                                ],
                                "type": "string",
                                "example": "success",
                                "description": "A code for the status of this Skill invocation. By default each of these will have their own accompanied messages. These can be adjusted by setting the `message` value on this object."
                              },
                              "message": {
                                "type": "string",
                                "example": "We're preparing to process your file. Please hold on!",
                                "description": "A custom message that can be provided with this status. This will be shown in the web app to the end user."
                              }
                            },
                            "description": "Sets the status of the skill. This can be used to show a message to the user while the Skill is processing the data, or if it was not able to process the file."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-04-13T20:53:23.000Z",
                            "description": "The optional date and time this card was created at."
                          },
                          "invocation": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "image-recognition-service-123",
                                "description": "A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata."
                              },
                              "type": {
                                "enum": [
                                  "skill_invocation"
                                ],
                                "type": "string",
                                "example": "skill_invocation",
                                "description": "`skill_invocation`"
                              }
                            },
                            "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata."
                          },
                          "skill_card_type": {
                            "enum": [
                              "status"
                            ],
                            "type": "string",
                            "example": "status",
                            "description": "`status`"
                          },
                          "skill_card_title": {
                            "type": "object",
                            "required": [
                              "message"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "status",
                                "description": "An optional identifier for the title."
                              },
                              "message": {
                                "type": "string",
                                "example": "Status",
                                "description": "The actual title to show in the UI."
                              }
                            },
                            "description": "The title of the card."
                          }
                        },
                        "description": "A Box Skill metadata card that puts a status message in the metadata sidebar.",
                        "x-box-resource-id": "status_skill_card"
                      }
                    ]
                  },
                  "description": "A list of Box Skill cards to apply to this file."
                }
              },
              "description": "The metadata to set for this skill. This is a list of\nBox Skills cards. These cards will overwrite any existing Box\nskill cards on the file."
            },
            "file_version": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "731381601045",
                  "description": "The ID of the file version"
                },
                "type": {
                  "enum": [
                    "file_version"
                  ],
                  "type": "string",
                  "example": "file_version",
                  "description": "`file_version`"
                }
              },
              "description": "The optional file version to assign the cards to."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  put_storage_policy_assignments_id:
    description: |-
      Updates a specific storage policy assignment.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-storage-policy-assignments-id/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "storage_policy"
          ],
          "properties": {
            "storage_policy": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1434325",
                  "description": "The ID of the storage policy to assign."
                },
                "type": {
                  "enum": [
                    "storage_policy"
                  ],
                  "type": "string",
                  "example": "storage_policy",
                  "description": "The type to assign."
                }
              },
              "description": "The storage policy to assign to the user or\nenterprise"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Storage policy assignment",
          "x-box-tag": "storage_policy_assignments",
          "properties": {
            "assigned_to": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Reference",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this object"
                    },
                    "type": {
                      "type": "string",
                      "example": "file",
                      "description": "The type for this object"
                    }
                  },
                  "description": "The bare basic reference for an object"
                },
                {
                  "description": "The enterprise or use the policy is assigned to"
                }
              ]
            },
            "storage_policy": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Storage policy (Mini)",
                  "x-box-tag": "storage_policies",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this storage policy"
                    },
                    "type": {
                      "enum": [
                        "storage_policy"
                      ],
                      "type": "string",
                      "example": "storage_policy",
                      "description": "`storage_policy`"
                    }
                  },
                  "description": "A mini description of a Storage Policy object",
                  "x-box-variant": "mini",
                  "x-box-variants": [
                    "standard",
                    "mini"
                  ],
                  "x-box-resource-id": "storage_policy--mini"
                },
                {
                  "description": "The assigned storage policy"
                }
              ]
            }
          },
          "description": "The assignment of a storage policy to a user or enterprise",
          "x-box-resource-id": "storage_policy_assignment"
        }
      ]
  put_task_assignments_id:
    description: |-
      Updates a task assignment. This endpoint can be
      used to update the state of a task assigned to a user.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-task-assignments-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "Looks good to me",
              "description": "An optional message by the assignee that can be added to the task."
            },
            "resolution_state": {
              "enum": [
                "completed",
                "incomplete",
                "approved",
                "rejected"
              ],
              "type": "string",
              "example": "completed",
              "description": "The state of the task assigned to the user.\n* For a task with an `action` value of `complete` this can be\n`incomplete` or `completed`.\n* For a task with an `action` of `review` this can be\n`incomplete`, `approved`, or `rejected`."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Task assignment",
          "x-box-tag": "task_assignments",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this task assignment"
            },
            "item": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "File (Base)",
                      "x-box-tag": "files",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                        },
                        "etag": {
                          "type": "string",
                          "example": "1",
                          "nullable": true,
                          "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                        },
                        "type": {
                          "enum": [
                            "file"
                          ],
                          "type": "string",
                          "example": "file",
                          "nullable": false,
                          "description": "`file`"
                        }
                      },
                      "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "file--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Contract.pdf",
                          "description": "The name of the file"
                        },
                        "sha1": {
                          "type": "string",
                          "format": "digest",
                          "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                          "nullable": false,
                          "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                        },
                        "sequence_id": {
                          "allOf": [
                            {
                              "type": "string",
                              "example": "3",
                              "nullable": false,
                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                            },
                            {
                              "nullable": false
                            }
                          ]
                        },
                        "file_version": {
                          "allOf": [
                            {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "File version (Base)",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "12345",
                                      "nullable": false,
                                      "description": "The unique identifier that represent a file version."
                                    },
                                    "type": {
                                      "enum": [
                                        "file_version"
                                      ],
                                      "type": "string",
                                      "example": "file_version",
                                      "nullable": false,
                                      "description": "`file_version`"
                                    }
                                  },
                                  "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                  "x-box-variant": "base",
                                  "x-box-variants": [
                                    "base",
                                    "mini",
                                    "standard"
                                  ],
                                  "x-box-sanitized": true,
                                  "x-box-resource-id": "file_version--base"
                                },
                                {
                                  "properties": {
                                    "sha1": {
                                      "type": "string",
                                      "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                      "description": "The SHA1 hash of this version of the file."
                                    }
                                  }
                                }
                              ],
                              "title": "File version (Mini)",
                              "description": "A mini representation of a file version, used when nested within another resource.",
                              "x-box-variant": "mini",
                              "x-box-resource-id": "file_version--mini"
                            },
                            {
                              "description": "The information about the current version of the file."
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "title": "File (Mini)",
                  "description": "A mini representation of a file, used when\nnested under another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "file--mini"
                },
                {
                  "description": "The file that the task has been assigned to."
                }
              ]
            },
            "type": {
              "enum": [
                "task_assignment"
              ],
              "type": "string",
              "example": "task_assignment",
              "description": "`task_assignment`"
            },
            "message": {
              "type": "string",
              "example": "Please review",
              "description": "A message that will is included with the task assignment. This is visible to the assigned user in the web and mobile UI."
            },
            "assigned_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The date at which this task was assigned to the user."
            },
            "assigned_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who assigned this task."
                }
              ]
            },
            "assigned_to": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user that the task has been assigned to."
                }
              ]
            },
            "reminded_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The date at which the assigned user was reminded of this task\nassignment."
            },
            "completed_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "The date at which this task assignment was\ncompleted. This will be `null` if the task is not completed yet."
            },
            "resolution_state": {
              "enum": [
                "completed",
                "incomplete",
                "approved",
                "rejected"
              ],
              "type": "string",
              "example": "incomplete",
              "description": "The current state of the assignment. The available states depend on the `action` value of the task object."
            }
          },
          "description": "A task assignment defines which task is assigned to which user to complete.",
          "x-box-resource-id": "task_assignment"
        }
      ]
  put_tasks_id:
    description: |-
      Updates a task. This can be used to update a task's configuration, or to
      update its completion state.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-tasks-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "action": {
              "enum": [
                "review",
                "complete"
              ],
              "type": "string",
              "example": "review",
              "description": "The action the task assignee will be prompted to do. Must be\n* `review` defines an approval task that can be approved or\nrejected\n* `complete` defines a general task which can be completed"
            },
            "due_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the task is due at."
            },
            "message": {
              "type": "string",
              "example": "Please review",
              "description": "The message included with the task."
            },
            "completion_rule": {
              "enum": [
                "all_assignees",
                "any_assignee"
              ],
              "type": "string",
              "example": "all_assignees",
              "description": "Defines which assignees need to complete this task before the task is considered completed.\n* `all_assignees` (default) requires all assignees to review or approve the the task in order for it to be considered completed. * `any_assignee` accepts any one assignee to review or approve the the task in order for it to be considered completed."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Task",
          "x-box-tag": "tasks",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this task"
            },
            "item": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "File (Base)",
                      "x-box-tag": "files",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12345",
                          "nullable": false,
                          "description": "The unique identifier that represent a file.\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
                        },
                        "etag": {
                          "type": "string",
                          "example": "1",
                          "nullable": true,
                          "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                        },
                        "type": {
                          "enum": [
                            "file"
                          ],
                          "type": "string",
                          "example": "file",
                          "nullable": false,
                          "description": "`file`"
                        }
                      },
                      "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-sanitized": true,
                      "x-box-resource-id": "file--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Contract.pdf",
                          "description": "The name of the file"
                        },
                        "sha1": {
                          "type": "string",
                          "format": "digest",
                          "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                          "nullable": false,
                          "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                        },
                        "sequence_id": {
                          "allOf": [
                            {
                              "type": "string",
                              "example": "3",
                              "nullable": false,
                              "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                            },
                            {
                              "nullable": false
                            }
                          ]
                        },
                        "file_version": {
                          "allOf": [
                            {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "File version (Base)",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "12345",
                                      "nullable": false,
                                      "description": "The unique identifier that represent a file version."
                                    },
                                    "type": {
                                      "enum": [
                                        "file_version"
                                      ],
                                      "type": "string",
                                      "example": "file_version",
                                      "nullable": false,
                                      "description": "`file_version`"
                                    }
                                  },
                                  "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                  "x-box-variant": "base",
                                  "x-box-variants": [
                                    "base",
                                    "mini",
                                    "standard"
                                  ],
                                  "x-box-sanitized": true,
                                  "x-box-resource-id": "file_version--base"
                                },
                                {
                                  "properties": {
                                    "sha1": {
                                      "type": "string",
                                      "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                      "description": "The SHA1 hash of this version of the file."
                                    }
                                  }
                                }
                              ],
                              "title": "File version (Mini)",
                              "description": "A mini representation of a file version, used when nested within another resource.",
                              "x-box-variant": "mini",
                              "x-box-resource-id": "file_version--mini"
                            },
                            {
                              "description": "The information about the current version of the file."
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "title": "File (Mini)",
                  "description": "A mini representation of a file, used when\nnested under another resource.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "file--mini"
                },
                {
                  "description": "The file associated with the task"
                }
              ]
            },
            "type": {
              "enum": [
                "task"
              ],
              "type": "string",
              "example": "task",
              "description": "`task`"
            },
            "action": {
              "enum": [
                "review",
                "complete"
              ],
              "type": "string",
              "example": "review",
              "description": "The type of task the task assignee will be prompted to\nperform."
            },
            "due_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the task is due"
            },
            "message": {
              "type": "string",
              "example": "Legal review",
              "description": "A message that will be included with the task"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the task object was created"
            },
            "created_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who created the task"
                }
              ]
            },
            "is_completed": {
              "type": "boolean",
              "example": true,
              "description": "Whether the task has been completed"
            },
            "completion_rule": {
              "enum": [
                "all_assignees",
                "any_assignee"
              ],
              "type": "string",
              "example": "all_assignees",
              "description": "Defines which assignees need to complete this task before the task is considered completed.\n* `all_assignees` requires all assignees to review or approve the the task in order for it to be considered completed. * `any_assignee` accepts any one assignee to review or approve the the task in order for it to be considered completed."
            },
            "task_assignment_collection": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Task assignments",
                  "x-box-tag": "task_assignments",
                  "properties": {
                    "entries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "Task assignment",
                        "x-box-tag": "task_assignments",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "11446498",
                            "description": "The unique identifier for this task assignment"
                          },
                          "item": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "File (Base)",
                                    "x-box-tag": "files",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "12345",
                                        "nullable": false,
                                        "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                      },
                                      "etag": {
                                        "type": "string",
                                        "example": "1",
                                        "nullable": true,
                                        "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                      },
                                      "type": {
                                        "enum": [
                                          "file"
                                        ],
                                        "type": "string",
                                        "example": "file",
                                        "nullable": false,
                                        "description": "`file`"
                                      }
                                    },
                                    "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-sanitized": true,
                                    "x-box-resource-id": "file--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Contract.pdf",
                                        "description": "The name of the file"
                                      },
                                      "sha1": {
                                        "type": "string",
                                        "format": "digest",
                                        "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                        "nullable": false,
                                        "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                      },
                                      "sequence_id": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "example": "3",
                                            "nullable": false,
                                            "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                          },
                                          {
                                            "nullable": false
                                          }
                                        ]
                                      },
                                      "file_version": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "title": "File version (Base)",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": "12345",
                                                    "nullable": false,
                                                    "description": "The unique identifier that represent a file version."
                                                  },
                                                  "type": {
                                                    "enum": [
                                                      "file_version"
                                                    ],
                                                    "type": "string",
                                                    "example": "file_version",
                                                    "nullable": false,
                                                    "description": "`file_version`"
                                                  }
                                                },
                                                "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                "x-box-variant": "base",
                                                "x-box-variants": [
                                                  "base",
                                                  "mini",
                                                  "standard"
                                                ],
                                                "x-box-sanitized": true,
                                                "x-box-resource-id": "file_version--base"
                                              },
                                              {
                                                "properties": {
                                                  "sha1": {
                                                    "type": "string",
                                                    "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                    "description": "The SHA1 hash of this version of the file."
                                                  }
                                                }
                                              }
                                            ],
                                            "title": "File version (Mini)",
                                            "description": "A mini representation of a file version, used when nested within another resource.",
                                            "x-box-variant": "mini",
                                            "x-box-resource-id": "file_version--mini"
                                          },
                                          {
                                            "description": "The information about the current version of the file."
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ],
                                "title": "File (Mini)",
                                "description": "A mini representation of a file, used when\nnested under another resource.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "file--mini"
                              },
                              {
                                "description": "The file that the task has been assigned to."
                              }
                            ]
                          },
                          "type": {
                            "enum": [
                              "task_assignment"
                            ],
                            "type": "string",
                            "example": "task_assignment",
                            "description": "`task_assignment`"
                          },
                          "message": {
                            "type": "string",
                            "example": "Please review",
                            "description": "A message that will is included with the task assignment. This is visible to the assigned user in the web and mobile UI."
                          },
                          "assigned_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "The date at which this task was assigned to the user."
                          },
                          "assigned_by": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "User (Base)",
                                    "x-box-tag": "users",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "11446498",
                                        "description": "The unique identifier for this user"
                                      },
                                      "type": {
                                        "enum": [
                                          "user"
                                        ],
                                        "type": "string",
                                        "example": "user",
                                        "nullable": false,
                                        "description": "`user`"
                                      }
                                    },
                                    "description": "A mini representation of a user, used when\nnested within another resource.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-resource-id": "user--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Aaron Levie",
                                        "nullable": false,
                                        "maxLength": 50,
                                        "description": "The display name of this user"
                                      },
                                      "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@example.com",
                                        "nullable": false,
                                        "description": "The primary email address of this user"
                                      }
                                    }
                                  }
                                ],
                                "title": "User (Mini)",
                                "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "user--mini"
                              },
                              {
                                "description": "The user who assigned this task."
                              }
                            ]
                          },
                          "assigned_to": {
                            "allOf": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "User (Base)",
                                    "x-box-tag": "users",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "11446498",
                                        "description": "The unique identifier for this user"
                                      },
                                      "type": {
                                        "enum": [
                                          "user"
                                        ],
                                        "type": "string",
                                        "example": "user",
                                        "nullable": false,
                                        "description": "`user`"
                                      }
                                    },
                                    "description": "A mini representation of a user, used when\nnested within another resource.",
                                    "x-box-variant": "base",
                                    "x-box-variants": [
                                      "base",
                                      "mini",
                                      "standard",
                                      "full"
                                    ],
                                    "x-box-resource-id": "user--base"
                                  },
                                  {
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Aaron Levie",
                                        "nullable": false,
                                        "maxLength": 50,
                                        "description": "The display name of this user"
                                      },
                                      "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ceo@example.com",
                                        "nullable": false,
                                        "description": "The primary email address of this user"
                                      }
                                    }
                                  }
                                ],
                                "title": "User (Mini)",
                                "description": "A mini representation of a user, as can be returned when nested within other resources.",
                                "x-box-variant": "mini",
                                "x-box-resource-id": "user--mini"
                              },
                              {
                                "description": "The user that the task has been assigned to."
                              }
                            ]
                          },
                          "reminded_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "The date at which the assigned user was reminded of this task assignment."
                          },
                          "completed_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2012-12-12T18:53:43.000Z",
                            "description": "The date at which this task assignment was completed. This will be `null` if the task is not completed yet."
                          },
                          "resolution_state": {
                            "enum": [
                              "completed",
                              "incomplete",
                              "approved",
                              "rejected"
                            ],
                            "type": "string",
                            "example": "incomplete",
                            "description": "The current state of the assignment. The available states depend on the `action` value of the task object."
                          }
                        },
                        "description": "A task assignment defines which task is assigned to which user to complete.",
                        "x-box-resource-id": "task_assignment"
                      }
                    },
                    "total_count": {
                      "type": "integer",
                      "format": "int64",
                      "example": 100,
                      "description": "The total number of items in this collection."
                    }
                  },
                  "description": "A list of task assignments",
                  "x-box-resource-id": "task_assignments"
                },
                {
                  "description": "A collection of task assignment objects\nassociated with the task"
                }
              ]
            }
          },
          "description": "A task allows for file-centric workflows within Box. Users can create tasks on files and assign them to other users for them to complete the tasks.",
          "x-box-resource-id": "task"
        }
      ]
  put_terms_of_services_id:
    description: |-
      Updates a specific terms of service.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-terms-of-services-id/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "status",
            "text"
          ],
          "properties": {
            "text": {
              "type": "string",
              "example": "By collaborating on this file you are accepting...",
              "description": "The terms of service text to display to users.\nThe text can be set to empty if the `status` is set to `disabled`."
            },
            "status": {
              "enum": [
                "enabled",
                "disabled"
              ],
              "type": "string",
              "example": "enabled",
              "description": "Whether this terms of service is active."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "title": "Terms of service (Mini)",
              "x-box-tag": "terms_of_services",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "11446498",
                  "description": "The unique identifier for this terms of service."
                },
                "type": {
                  "enum": [
                    "terms_of_service"
                  ],
                  "type": "string",
                  "example": "terms_of_service",
                  "description": "`terms_of_service`"
                }
              },
              "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
              "x-box-variant": "mini",
              "x-box-variants": [
                "mini",
                "standard"
              ],
              "x-box-resource-id": "terms_of_service--mini"
            },
            {
              "properties": {
                "text": {
                  "type": "string",
                  "example": "By using this service, you agree to ...",
                  "description": "The text for your terms and conditions. This text could be\nempty if the `status` is set to `disabled`."
                },
                "status": {
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "type": "string",
                  "example": "enabled",
                  "description": "Whether these terms are enabled or not"
                },
                "tos_type": {
                  "enum": [
                    "managed",
                    "external"
                  ],
                  "type": "string",
                  "example": "managed",
                  "description": "Whether to apply these terms to managed users or external users"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the legal item was created"
                },
                "enterprise": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Enterprise",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this enterprise."
                        },
                        "name": {
                          "type": "string",
                          "example": "Acme Inc.",
                          "description": "The name of the enterprise"
                        },
                        "type": {
                          "enum": [
                            "enterprise"
                          ],
                          "type": "string",
                          "example": "enterprise",
                          "description": "`enterprise`"
                        }
                      },
                      "description": "A representation of a Box enterprise"
                    },
                    {
                      "description": "The enterprise these terms apply to"
                    }
                  ]
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the legal item was modified."
                }
              }
            }
          ],
          "title": "Terms of service",
          "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
          "x-box-variant": "standard",
          "x-box-resource-id": "terms_of_service"
        }
      ]
  put_terms_of_service_user_statuses_id:
    description: |-
      Updates the status for a terms of service for a user.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-terms-of-service-user-statuses-id/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "is_accepted"
          ],
          "properties": {
            "is_accepted": {
              "type": "boolean",
              "example": true,
              "description": "Whether the user has accepted the terms."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Terms of service user status",
          "x-box-tag": "terms_of_service_user_statuses",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this terms of service user status"
            },
            "tos": {
              "allOf": [
                {
                  "type": "object",
                  "title": "Terms of service (Mini)",
                  "x-box-tag": "terms_of_services",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this terms of service."
                    },
                    "type": {
                      "enum": [
                        "terms_of_service"
                      ],
                      "type": "string",
                      "example": "terms_of_service",
                      "description": "`terms_of_service`"
                    }
                  },
                  "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
                  "x-box-variant": "mini",
                  "x-box-variants": [
                    "mini",
                    "standard"
                  ],
                  "x-box-resource-id": "terms_of_service--mini"
                },
                {
                  "description": "The terms of service"
                }
              ]
            },
            "type": {
              "enum": [
                "terms_of_service_user_status"
              ],
              "type": "string",
              "example": "terms_of_service_user_status",
              "description": "`terms_of_service_user_status`"
            },
            "user": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user"
                }
              ]
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the legal item was created"
            },
            "is_accepted": {
              "type": "boolean",
              "example": true,
              "description": "If the user has accepted the terms of services"
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "When the legal item was modified."
            }
          },
          "description": "The association between a Terms of Service and a user",
          "x-box-resource-id": "terms_of_service_user_status"
        }
      ]
  put_users_id:
    description: |-
      Updates a managed user in an enterprise. This endpoint
      is only available to users and applications with the right
      admin permissions.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-users-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Aaron Levie",
              "maxLength": 50,
              "description": "The name of the user"
            },
            "role": {
              "enum": [
                "coadmin",
                "user"
              ],
              "type": "string",
              "example": "user",
              "description": "The user’s enterprise role"
            },
            "login": {
              "type": "string",
              "example": "boss@box.com",
              "description": "The email address the user uses to log in"
            },
            "phone": {
              "type": "string",
              "example": "6509241374",
              "maxLength": 100,
              "description": "The user’s phone number"
            },
            "notify": {
              "type": "boolean",
              "example": true,
              "description": "Whether the user should receive an email when they\nare rolled out of an enterprise"
            },
            "status": {
              "enum": [
                "active",
                "inactive",
                "cannot_delete_edit",
                "cannot_delete_edit_upload"
              ],
              "type": "string",
              "example": "active",
              "description": "The user's account status"
            },
            "address": {
              "type": "string",
              "example": "900 Jefferson Ave, Redwood City, CA 94063",
              "maxLength": 255,
              "description": "The user’s address"
            },
            "language": {
              "type": "string",
              "example": "en",
              "description": "The language of the user, formatted in modified version of the\n[ISO 639-1](/guides/api-calls/language-codes) format."
            },
            "timezone": {
              "type": "string",
              "format": "timezone",
              "example": "Africa/Bujumbura",
              "description": "The user's timezone"
            },
            "job_title": {
              "type": "string",
              "example": "CEO",
              "maxLength": 100,
              "description": "The user’s job title"
            },
            "enterprise": {
              "type": "string",
              "example": null,
              "nullable": true,
              "description": "Set this to `null` to roll the user out of the enterprise\nand make them a free user"
            },
            "space_amount": {
              "type": "integer",
              "format": "int64",
              "example": 11345156112,
              "description": "The user’s total available space in bytes. Set this to `-1` to\nindicate unlimited storage."
            },
            "tracking_codes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "code1: 12345"
              ],
              "description": "Tracking codes allow an admin to generate reports from the admin console and assign an attribute to a specific group of users. This setting must be enabled for an enterprise before it can be used."
            },
            "is_sync_enabled": {
              "type": "boolean",
              "example": true,
              "description": "Whether the user can use Box Sync"
            },
            "notification_email": {
              "type": "object",
              "nullable": true,
              "properties": {
                "email": {
                  "type": "string",
                  "example": "notifications@example.com",
                  "description": "The email address to send the notifications to."
                }
              },
              "description": "An alternate notification email address to which email\nnotifications are sent. When it's confirmed, this will be\nthe email address to which notifications are sent instead of\nto the primary email address.\nSet this value to `null` to remove the notification email."
            },
            "can_see_managed_users": {
              "type": "boolean",
              "example": true,
              "description": "Whether the user can see other enterprise users in their\ncontact list"
            },
            "is_password_reset_required": {
              "type": "boolean",
              "example": true,
              "description": "Whether the user is required to reset their password"
            },
            "is_exempt_from_device_limits": {
              "type": "boolean",
              "example": true,
              "description": "Whether to exempt the user from enterprise device limits"
            },
            "is_external_collab_restricted": {
              "type": "boolean",
              "example": true,
              "description": "Whether the user is allowed to collaborate with users outside\ntheir enterprise"
            },
            "is_exempt_from_login_verification": {
              "type": "boolean",
              "example": true,
              "description": "Whether the user must use two-factor authentication"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "User (Base)",
                  "x-box-tag": "users",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this user"
                    },
                    "type": {
                      "enum": [
                        "user"
                      ],
                      "type": "string",
                      "example": "user",
                      "nullable": false,
                      "description": "`user`"
                    }
                  },
                  "description": "A mini representation of a user, used when\nnested within another resource.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-resource-id": "user--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Aaron Levie",
                      "nullable": false,
                      "maxLength": 50,
                      "description": "The display name of this user"
                    },
                    "login": {
                      "type": "string",
                      "format": "email",
                      "example": "ceo@example.com",
                      "nullable": false,
                      "description": "The primary email address of this user"
                    }
                  }
                }
              ],
              "title": "User (Mini)",
              "description": "A mini representation of a user, as can be returned when nested within other resources.",
              "x-box-variant": "mini",
              "x-box-resource-id": "user--mini"
            },
            {
              "properties": {
                "phone": {
                  "type": "string",
                  "example": "6509241374",
                  "maxLength": 100,
                  "description": "The user’s phone number"
                },
                "status": {
                  "enum": [
                    "active",
                    "inactive",
                    "cannot_delete_edit",
                    "cannot_delete_edit_upload"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "The user's account status"
                },
                "address": {
                  "type": "string",
                  "example": "900 Jefferson Ave, Redwood City, CA 94063",
                  "maxLength": 255,
                  "description": "The user’s address"
                },
                "language": {
                  "type": "string",
                  "example": "en",
                  "description": "The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format."
                },
                "timezone": {
                  "type": "string",
                  "format": "timezone",
                  "example": "Africa/Bujumbura",
                  "description": "The user's timezone"
                },
                "job_title": {
                  "type": "string",
                  "example": "CEO",
                  "maxLength": 100,
                  "description": "The user’s job title"
                },
                "avatar_url": {
                  "type": "string",
                  "example": "https://www.box.com/api/avatar/large/181216415",
                  "description": "URL of the user’s avatar image"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the user object was created"
                },
                "space_used": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1237009912,
                  "description": "The amount of space in use by the user"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When the user object was last modified"
                },
                "space_amount": {
                  "type": "integer",
                  "format": "int64",
                  "example": 11345156112,
                  "description": "The user’s total available space amount in bytes"
                },
                "max_upload_size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 2147483648,
                  "description": "The maximum individual file size in bytes the user can have"
                },
                "notification_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "notifications@example.com",
                      "description": "The email address to send the notifications to."
                    },
                    "is_confirmed": {
                      "type": "boolean",
                      "example": true,
                      "description": "Specifies if this email address has been confirmed."
                    }
                  },
                  "description": "An alternate notification email address to which email\nnotifications are sent. When it's confirmed, this will be\nthe email address to which notifications are sent instead of\nto the primary email address."
                }
              }
            }
          ],
          "title": "User",
          "description": "A standard representation of a user, as returned from any\nuser API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "user"
        }
      ]
  put_users_id_folders_0:
    description: |-
      Move all of the items (files, folders and workflows) owned by a user into another user's account
      Only the root folder (`0`) can be transferred.
      Folders can only be moved across users by users with administrative permissions.
      All existing shared links and folder-level collaborations are transferred during the operation. Please note that while collaborations at the individual file-level are transferred during the operation, the collaborations are deleted when the original user is deleted.
      This call will be performed synchronously which might lead to a slow response when the source user has a large number of items in all of its folders.
      If the destination path has a metadata cascade policy attached to any of the parent folders, a metadata cascade operation will be kicked off asynchronously.
      There is currently no way to check for when this operation is finished.
      The destination folder's name will be in the format `{User}'s Files and Folders`, where `{User}` is the display name of the user.
      To make this API call your application will need to have the "Read and write all files and folders stored in Box" scope enabled.
      Please make sure the destination user has access to `Relay` or `Relay Lite`, and has access to the files and folders involved in the workflows being transferred.
      Admins will receive an email when the operation is completed.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-users-id-folders-0/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "owned_by"
          ],
          "properties": {
            "owned_by": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1232234",
                  "description": "The ID of the user who the folder will be\ntransferred to"
                }
              },
              "description": "The user who the folder will be transferred to"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Folder (Base)",
                  "x-box-tag": "folders",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345",
                      "nullable": false,
                      "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "nullable": true,
                      "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                    },
                    "type": {
                      "enum": [
                        "folder"
                      ],
                      "type": "string",
                      "example": "folder",
                      "nullable": false,
                      "description": "`folder`"
                    }
                  },
                  "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard",
                    "full"
                  ],
                  "x-box-sanitized": true,
                  "x-box-resource-id": "folder--base"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Contracts",
                      "nullable": false,
                      "description": "The name of the folder."
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Folder (Mini)",
              "description": "A mini representation of a file version, used when\nnested under another resource.",
              "x-box-variant": "mini",
              "x-box-resource-id": "folder--mini"
            },
            {
              "properties": {
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 629644,
                  "nullable": false,
                  "description": "The folder size in bytes.\nBe careful parsing this integer as its\nvalue can get very large."
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The optional folder that this folder is located within.\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                    }
                  ],
                  "nullable": true
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder is expected to be purged\nfrom the trash."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time and which the folder will be automatically be deleted."
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The time at which this folder was put in the trash."
                },
                "description": {
                  "allOf": [
                    {
                      "type": "string",
                      "example": "Legal contracts for the new ACME deal",
                      "nullable": false,
                      "maxLength": 256,
                      "description": "The optional description of this folder"
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "nullable": false,
                  "description": "Defines if this item has been deleted or not.\n* `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted."
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this folder."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                    }
                  ],
                  "nullable": true
                },
                "item_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1000,
                              "description": "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API."
                            },
                            "order": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "by": {
                                    "type": "string",
                                    "example": "type",
                                    "description": "The field to order by"
                                  },
                                  "direction": {
                                    "enum": [
                                      "ASC",
                                      "DESC"
                                    ],
                                    "type": "string",
                                    "example": "ASC",
                                    "description": "The direction to order by, either ascending or descending"
                                  }
                                },
                                "description": "The order in which a pagination is ordered"
                              },
                              "description": "The order by which items are returned.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "offset": {
                              "type": "integer",
                              "format": "int64",
                              "example": 2000,
                              "description": "The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            },
                            "total_count": {
                              "type": "integer",
                              "format": "int64",
                              "example": 5000,
                              "description": "One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.\nThis field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted."
                            }
                          },
                          "description": "The part of an API response that describes pagination"
                        },
                        {
                          "properties": {
                            "entries": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "File (Base)",
                                        "x-box-tag": "files",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a file.\nThe ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "file"
                                            ],
                                            "type": "string",
                                            "example": "file",
                                            "nullable": false,
                                            "description": "`file`"
                                          }
                                        },
                                        "description": "The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "file--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contract.pdf",
                                            "description": "The name of the file"
                                          },
                                          "sha1": {
                                            "type": "string",
                                            "format": "digest",
                                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                                            "nullable": false,
                                            "description": "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          },
                                          "file_version": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "title": "File version (Base)",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "example": "12345",
                                                        "nullable": false,
                                                        "description": "The unique identifier that represent a file version."
                                                      },
                                                      "type": {
                                                        "enum": [
                                                          "file_version"
                                                        ],
                                                        "type": "string",
                                                        "example": "file_version",
                                                        "nullable": false,
                                                        "description": "`file_version`"
                                                      }
                                                    },
                                                    "description": "The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.",
                                                    "x-box-variant": "base",
                                                    "x-box-variants": [
                                                      "base",
                                                      "mini",
                                                      "standard"
                                                    ],
                                                    "x-box-sanitized": true,
                                                    "x-box-resource-id": "file_version--base"
                                                  },
                                                  {
                                                    "properties": {
                                                      "sha1": {
                                                        "type": "string",
                                                        "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                                                        "description": "The SHA1 hash of this version of the file."
                                                      }
                                                    }
                                                  }
                                                ],
                                                "title": "File version (Mini)",
                                                "description": "A mini representation of a file version, used when nested within another resource.",
                                                "x-box-variant": "mini",
                                                "x-box-resource-id": "file_version--mini"
                                              },
                                              {
                                                "description": "The information about the current version of the file."
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "File (Mini)",
                                    "description": "A mini representation of a file, used when\nnested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "file--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Folder (Base)",
                                        "x-box-tag": "folders",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "12345",
                                            "nullable": false,
                                            "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "nullable": true,
                                            "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                          },
                                          "type": {
                                            "enum": [
                                              "folder"
                                            ],
                                            "type": "string",
                                            "example": "folder",
                                            "nullable": false,
                                            "description": "`folder`"
                                          }
                                        },
                                        "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard",
                                          "full"
                                        ],
                                        "x-box-sanitized": true,
                                        "x-box-resource-id": "folder--base"
                                      },
                                      {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "Contracts",
                                            "nullable": false,
                                            "description": "The name of the folder."
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Folder (Mini)",
                                    "description": "A mini representation of a file version, used when nested under another resource.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "folder--mini"
                                  },
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "title": "Web link (Base)",
                                        "x-box-tag": "web_links",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "11446498",
                                            "description": "The unique identifier for this web link"
                                          },
                                          "etag": {
                                            "type": "string",
                                            "example": "1",
                                            "description": "The entity tag of this web link. Used with `If-Match` headers."
                                          },
                                          "type": {
                                            "enum": [
                                              "web_link"
                                            ],
                                            "type": "string",
                                            "example": "web_link",
                                            "description": "`web_link`"
                                          }
                                        },
                                        "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                        "x-box-variant": "base",
                                        "x-box-variants": [
                                          "base",
                                          "mini",
                                          "standard"
                                        ],
                                        "x-box-resource-id": "web_link--base"
                                      },
                                      {
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com/example/1234",
                                            "description": "The URL this web link points to"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "My Bookmark",
                                            "description": "The name of the web link"
                                          },
                                          "sequence_id": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "3",
                                                "nullable": false,
                                                "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                              },
                                              {
                                                "nullable": false
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Web link (Mini)",
                                    "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                                    "x-box-variant": "mini",
                                    "x-box-resource-id": "web_link--mini"
                                  }
                                ]
                              },
                              "description": "The items in this collection."
                            }
                          }
                        }
                      ],
                      "title": "Items",
                      "x-box-tag": "folders",
                      "description": "A list of files, folders, and web links in\ntheir mini representation.",
                      "x-box-resource-id": "items"
                    },
                    {
                      "description": "A page of the items that are in the folder.\nThis field can only be requested when querying a folder's information, not when querying a folder's items."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                },
                "content_created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was originally\ncreated."
                },
                "content_modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "The date and time at which this folder was last updated."
                },
                "folder_upload_email": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "upload.Contracts.asd7asd@u.box.com",
                      "nullable": false,
                      "description": "The optional upload email address for this folder."
                    },
                    "access": {
                      "enum": [
                        "open",
                        "collaborators"
                      ],
                      "type": "string",
                      "example": "open",
                      "nullable": false,
                      "description": "When this parameter has been set, users can email files to the email address that has been automatically created for this folder.\nTo create an email address, set this property either when creating or updating the folder.\nWhen set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.\nWhen set to `open` it will accept emails from any email address."
                    }
                  }
                }
              }
            }
          ],
          "title": "Folder",
          "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
          "x-box-variant": "standard",
          "x-box-resource-id": "folder"
        }
      ]
  put_webhooks_id:
    description: |-
      Updates a webhook.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-webhooks-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "target": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1231232",
                  "description": "The ID of the item to trigger a webhook"
                },
                "type": {
                  "enum": [
                    "file",
                    "folder"
                  ],
                  "type": "string",
                  "example": "file",
                  "description": "The type of item to trigger a webhook"
                }
              },
              "description": "The item that will trigger the webhook"
            },
            "address": {
              "type": "string",
              "example": "https://example.com/webhooks",
              "description": "The URL that is notified by this webhook"
            },
            "triggers": {
              "type": "array",
              "items": {
                "enum": [
                  "FILE.UPLOADED",
                  "FILE.PREVIEWED",
                  "FILE.DOWNLOADED",
                  "FILE.TRASHED",
                  "FILE.DELETED",
                  "FILE.RESTORED",
                  "FILE.COPIED",
                  "FILE.MOVED",
                  "FILE.LOCKED",
                  "FILE.UNLOCKED",
                  "FILE.RENAMED",
                  "COMMENT.CREATED",
                  "COMMENT.UPDATED",
                  "COMMENT.DELETED",
                  "TASK_ASSIGNMENT.CREATED",
                  "TASK_ASSIGNMENT.UPDATED",
                  "METADATA_INSTANCE.CREATED",
                  "METADATA_INSTANCE.UPDATED",
                  "METADATA_INSTANCE.DELETED",
                  "FOLDER.CREATED",
                  "FOLDER.RENAMED",
                  "FOLDER.DOWNLOADED",
                  "FOLDER.RESTORED",
                  "FOLDER.DELETED",
                  "FOLDER.COPIED",
                  "FOLDER.MOVED",
                  "FOLDER.TRASHED",
                  "WEBHOOK.DELETED",
                  "COLLABORATION.CREATED",
                  "COLLABORATION.ACCEPTED",
                  "COLLABORATION.REJECTED",
                  "COLLABORATION.REMOVED",
                  "COLLABORATION.UPDATED",
                  "SHARED_LINK.DELETED",
                  "SHARED_LINK.CREATED",
                  "SHARED_LINK.UPDATED"
                ],
                "type": "string",
                "title": "Webhook Trigger",
                "example": "FILE.UPLOADED",
                "description": "The event name that triggered this webhook"
              },
              "example": [
                "FILE.UPLOADED"
              ],
              "description": "An array of event names that this webhook is\nto be triggered for"
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "title": "Webhook",
          "x-box-tag": "webhooks",
          "properties": {
            "id": {
              "type": "string",
              "example": "11446498",
              "description": "The unique identifier for this webhook."
            },
            "type": {
              "enum": [
                "webhook"
              ],
              "type": "string",
              "example": "webhook",
              "description": "`webhook`"
            },
            "target": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1231232",
                  "description": "The ID of the item to trigger a webhook"
                },
                "type": {
                  "enum": [
                    "file",
                    "folder"
                  ],
                  "type": "string",
                  "example": "file",
                  "description": "The type of item to trigger a webhook"
                }
              },
              "description": "The item that will trigger the webhook"
            },
            "address": {
              "type": "string",
              "example": "https://example.com/webhooks",
              "description": "The URL that is notified by this webhook"
            },
            "triggers": {
              "type": "array",
              "items": {
                "enum": [
                  "FILE.UPLOADED",
                  "FILE.PREVIEWED",
                  "FILE.DOWNLOADED",
                  "FILE.TRASHED",
                  "FILE.DELETED",
                  "FILE.RESTORED",
                  "FILE.COPIED",
                  "FILE.MOVED",
                  "FILE.LOCKED",
                  "FILE.UNLOCKED",
                  "FILE.RENAMED",
                  "COMMENT.CREATED",
                  "COMMENT.UPDATED",
                  "COMMENT.DELETED",
                  "TASK_ASSIGNMENT.CREATED",
                  "TASK_ASSIGNMENT.UPDATED",
                  "METADATA_INSTANCE.CREATED",
                  "METADATA_INSTANCE.UPDATED",
                  "METADATA_INSTANCE.DELETED",
                  "FOLDER.CREATED",
                  "FOLDER.RENAMED",
                  "FOLDER.DOWNLOADED",
                  "FOLDER.RESTORED",
                  "FOLDER.DELETED",
                  "FOLDER.COPIED",
                  "FOLDER.MOVED",
                  "FOLDER.TRASHED",
                  "WEBHOOK.DELETED",
                  "COLLABORATION.CREATED",
                  "COLLABORATION.ACCEPTED",
                  "COLLABORATION.REJECTED",
                  "COLLABORATION.REMOVED",
                  "COLLABORATION.UPDATED",
                  "SHARED_LINK.DELETED",
                  "SHARED_LINK.CREATED",
                  "SHARED_LINK.UPDATED"
                ],
                "type": "string",
                "title": "Webhook Trigger",
                "example": "FILE.UPLOADED",
                "description": "The event name that triggered this webhook"
              },
              "example": [
                "FILE.UPLOADED"
              ],
              "description": "An array of event names that this webhook is\nto be triggered for"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2012-12-12T18:53:43.000Z",
              "description": "A timestamp identifying the time that\nthe webhook was created."
            },
            "created_by": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "User (Base)",
                      "x-box-tag": "users",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "11446498",
                          "description": "The unique identifier for this user"
                        },
                        "type": {
                          "enum": [
                            "user"
                          ],
                          "type": "string",
                          "example": "user",
                          "nullable": false,
                          "description": "`user`"
                        }
                      },
                      "description": "A mini representation of a user, used when\nnested within another resource.",
                      "x-box-variant": "base",
                      "x-box-variants": [
                        "base",
                        "mini",
                        "standard",
                        "full"
                      ],
                      "x-box-resource-id": "user--base"
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Aaron Levie",
                          "nullable": false,
                          "maxLength": 50,
                          "description": "The display name of this user"
                        },
                        "login": {
                          "type": "string",
                          "format": "email",
                          "example": "ceo@example.com",
                          "nullable": false,
                          "description": "The primary email address of this user"
                        }
                      }
                    }
                  ],
                  "title": "User (Mini)",
                  "description": "A mini representation of a user, as can be returned when nested within other resources.",
                  "x-box-variant": "mini",
                  "x-box-resource-id": "user--mini"
                },
                {
                  "description": "The user who created the webhook"
                }
              ]
            }
          },
          "description": "Represents a configured webhook.",
          "x-box-resource-id": "webhook"
        }
      ]
  put_web_links_id:
    description: |-
      Updates a web link object.
    versions:
      from: 2.0.0
    link: https://developer.box.com/reference/put-web-links-id/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "example": "https://box.com",
              "description": "The new URL that the web link links to. Must start with\n`\"http://\"` or `\"https://\"`."
            },
            "name": {
              "type": "string",
              "example": "Box Website",
              "description": "A new name for the web link. Defaults to the URL if not set."
            },
            "parent": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "123",
                      "description": "The ID of parent item"
                    }
                  },
                  "description": "The parent for this item"
                },
                {
                  "description": "The new parent folder to put the web link in.\nUse this to move the web link to a different folder."
                }
              ]
            },
            "description": {
              "type": "string",
              "example": "Cloud Content Management",
              "description": "A new description of the web link."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "title": "Web link (Base)",
                  "x-box-tag": "web_links",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "11446498",
                      "description": "The unique identifier for this web link"
                    },
                    "etag": {
                      "type": "string",
                      "example": "1",
                      "description": "The entity tag of this web link. Used with `If-Match`\nheaders."
                    },
                    "type": {
                      "enum": [
                        "web_link"
                      ],
                      "type": "string",
                      "example": "web_link",
                      "description": "`web_link`"
                    }
                  },
                  "description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects, they will also support most actions that apply to regular files.",
                  "x-box-variant": "base",
                  "x-box-variants": [
                    "base",
                    "mini",
                    "standard"
                  ],
                  "x-box-resource-id": "web_link--base"
                },
                {
                  "properties": {
                    "url": {
                      "type": "string",
                      "example": "https://www.example.com/example/1234",
                      "description": "The URL this web link points to"
                    },
                    "name": {
                      "type": "string",
                      "example": "My Bookmark",
                      "description": "The name of the web link"
                    },
                    "sequence_id": {
                      "allOf": [
                        {
                          "type": "string",
                          "example": "3",
                          "nullable": false,
                          "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                        },
                        {
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "title": "Web link (Mini)",
              "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
              "x-box-variant": "mini",
              "x-box-resource-id": "web_link--mini"
            },
            {
              "properties": {
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "Folder (Base)",
                          "x-box-tag": "folders",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "12345",
                              "nullable": false,
                              "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
                            },
                            "etag": {
                              "type": "string",
                              "example": "1",
                              "nullable": true,
                              "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                            },
                            "type": {
                              "enum": [
                                "folder"
                              ],
                              "type": "string",
                              "example": "folder",
                              "nullable": false,
                              "description": "`folder`"
                            }
                          },
                          "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-sanitized": true,
                          "x-box-resource-id": "folder--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Contracts",
                              "nullable": false,
                              "description": "The name of the folder."
                            },
                            "sequence_id": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "example": "3",
                                  "nullable": false,
                                  "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                },
                                {
                                  "nullable": false
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "title": "Folder (Mini)",
                      "description": "A mini representation of a file version, used when\nnested under another resource.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "folder--mini"
                    },
                    {
                      "description": "The parent object the web link belongs to"
                    }
                  ]
                },
                "owned_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who owns this web link"
                    }
                  ]
                },
                "purged_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "When this file will be permanently deleted."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this file was created on Box’s servers."
                },
                "created_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who created this web link"
                    }
                  ]
                },
                "trashed_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "nullable": true,
                  "description": "When this file was last moved to the trash."
                },
                "description": {
                  "type": "string",
                  "example": "Example page",
                  "description": "The description accompanying the web link. This is\nvisible within the Box web application."
                },
                "item_status": {
                  "enum": [
                    "active",
                    "trashed",
                    "deleted"
                  ],
                  "type": "string",
                  "example": "active",
                  "description": "Whether this item is deleted or not. Values include `active`, `trashed` if the file has been moved to the trash, and `deleted` if the file has been permanently deleted"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2012-12-12T18:53:43.000Z",
                  "description": "When this file was last updated on the Box\nservers."
                },
                "modified_by": {
                  "allOf": [
                    {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "title": "User (Base)",
                          "x-box-tag": "users",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "11446498",
                              "description": "The unique identifier for this user"
                            },
                            "type": {
                              "enum": [
                                "user"
                              ],
                              "type": "string",
                              "example": "user",
                              "nullable": false,
                              "description": "`user`"
                            }
                          },
                          "description": "A mini representation of a user, used when\nnested within another resource.",
                          "x-box-variant": "base",
                          "x-box-variants": [
                            "base",
                            "mini",
                            "standard",
                            "full"
                          ],
                          "x-box-resource-id": "user--base"
                        },
                        {
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Aaron Levie",
                              "nullable": false,
                              "maxLength": 50,
                              "description": "The display name of this user"
                            },
                            "login": {
                              "type": "string",
                              "format": "email",
                              "example": "ceo@example.com",
                              "nullable": false,
                              "description": "The primary email address of this user"
                            }
                          }
                        }
                      ],
                      "title": "User (Mini)",
                      "description": "A mini representation of a user, as can be returned when nested within other resources.",
                      "x-box-variant": "mini",
                      "x-box-resource-id": "user--mini"
                    },
                    {
                      "description": "The user who last modified this web link"
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Shared link",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
                          "nullable": false,
                          "description": "The URL that can be used to access the item on Box.\nThis URL will display the item in Box's preview UI where the file can be downloaded if allowed.\nThis URL will continue to work even when a custom `vanity_url` has been set for this shared link."
                        },
                        "access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "open",
                          "nullable": false,
                          "description": "The access level for this shared link.\n* `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are\n   collaborators on this item\nIf this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin."
                        },
                        "vanity_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://acme.app.box.com/v/my_url/",
                          "nullable": true,
                          "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_preview": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be previewed.\nThis value is always `true`. For shared links on folders this also applies to any items in the folder."
                            },
                            "can_download": {
                              "type": "boolean",
                              "example": true,
                              "nullable": false,
                              "description": "Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.\nThis value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`."
                            }
                          },
                          "description": "Defines if this link allows a user to preview and download an item."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-04-13T20:53:23.000Z",
                          "nullable": true,
                          "description": "The date and time when this link will be unshared. This field can only be set by users with paid accounts."
                        },
                        "vanity_name": {
                          "type": "string",
                          "example": "my_url",
                          "nullable": true,
                          "description": "The custom name of a shared link, as used in the `vanity_url` field."
                        },
                        "download_url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
                          "nullable": true,
                          "description": "A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.\nThis property will be `null` for folders.",
                          "x-box-premium-feature": true
                        },
                        "preview_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been previewed."
                        },
                        "download_count": {
                          "type": "integer",
                          "example": 3,
                          "nullable": false,
                          "description": "The number of times this item has been downloaded."
                        },
                        "effective_access": {
                          "enum": [
                            "open",
                            "company",
                            "collaborators"
                          ],
                          "type": "string",
                          "example": "company",
                          "nullable": false,
                          "description": "The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels."
                        },
                        "is_password_enabled": {
                          "type": "boolean",
                          "example": true,
                          "nullable": false,
                          "description": "Defines if the shared link requires a password to access the item."
                        },
                        "effective_permission": {
                          "enum": [
                            "can_download",
                            "can_preview"
                          ],
                          "type": "string",
                          "example": "can_download",
                          "nullable": false,
                          "description": "The effective permissions for this shared link."
                        }
                      },
                      "description": "Shared links provide direct, read-only access to files or folder on Box.\nShared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users."
                    },
                    {
                      "description": "The shared link object for this item. Will be\n`null` if no shared link has been created."
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "path_collection": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Path collection",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Folder (Base)",
                                "x-box-tag": "folders",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "12345",
                                    "nullable": false,
                                    "description": "The unique identifier that represent a folder.\nThe ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`."
                                  },
                                  "etag": {
                                    "type": "string",
                                    "example": "1",
                                    "nullable": true,
                                    "description": "The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened."
                                  },
                                  "type": {
                                    "enum": [
                                      "folder"
                                    ],
                                    "type": "string",
                                    "example": "folder",
                                    "nullable": false,
                                    "description": "`folder`"
                                  }
                                },
                                "description": "The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.",
                                "x-box-variant": "base",
                                "x-box-variants": [
                                  "base",
                                  "mini",
                                  "standard",
                                  "full"
                                ],
                                "x-box-sanitized": true,
                                "x-box-resource-id": "folder--base"
                              },
                              {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Contracts",
                                    "nullable": false,
                                    "description": "The name of the folder."
                                  },
                                  "sequence_id": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "3",
                                        "nullable": false,
                                        "description": "A numeric identifier that represents the most recent user event that has been applied to this item.\nThis can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.\nAn example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource."
                                      },
                                      {
                                        "nullable": false
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "title": "Folder (Mini)",
                            "description": "A mini representation of a file version, used when\nnested under another resource.",
                            "x-box-variant": "mini",
                            "x-box-resource-id": "folder--mini"
                          },
                          "nullable": false,
                          "description": "The parent folders for this item"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1,
                          "nullable": false,
                          "description": "The number of folders in this list."
                        }
                      },
                      "description": "A list of parent folders for an item."
                    },
                    {
                      "description": "The tree of folders that this web link is contained in,\nstarting at the root."
                    },
                    {
                      "nullable": false
                    }
                  ]
                }
              }
            }
          ],
          "title": "Web link",
          "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
          "x-box-variant": "standard",
          "x-box-resource-id": "web_link"
        }
      ]