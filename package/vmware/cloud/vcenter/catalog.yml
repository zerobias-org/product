Product:
  name: vCenter Server
  versions: [6.7.0,7.0.0]
  package: vmware.cloud.vcenter
  description: |-
    VMware vCenter Server is an advanced server management software that provides a centralized platform for controlling vSphere environments for visibility across hybrid clouds.
  link: https://www.vmware.com/products/vcenter-server.html
  contentType: json
Operations:
  listHVCLinks:
    description: |-
      Enumerates the list of registered hybrid links. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/hvc/links/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "display_name",
                  "link"
                ],
                "properties": {
                  "link": {
                    "type": "string",
                    "description": "Unique identifier for the link. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                  },
                  "display_name": {
                    "type": "string",
                    "description": "The display name is set to the domain name which was set during create. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                  }
                }
              }
            }
          }
        }
      ]
  deleteHVCLink:
    description: |-
      Deletes an existing hybrid link. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/hvc/links/link/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  resetHVCSyncLink:
    description: |-
      Resets the sync state between the linked domains by initiating a fresh sync for all providers. If an existing sync is in progress this cancels the sync. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/hvc/links/link/syncactionreset/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  listHVCLinkSyncProviders:
    description: |-
      Enumerates the sync providers. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/hvc/links/link/sync/providers/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "provider"
                ],
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "Sync provider id Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                  }
                }
              }
            }
          }
        }
      ]
  startHVCLinkSyncProvider:
    description: |-
      Initiates synchronization between the local and remote replicas for the sync provider. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/hvc/links/link/sync/providers/provideractionstart/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "credentials": {
              "type": "object",
              "required": [
                "password",
                "user_name"
              ],
              "properties": {
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "Password for the user. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                },
                "user_name": {
                  "type": "string",
                  "description": "Name of the user to authenticate Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getHVCLinkSyncProvider:
    description: |-
      Gets Sync information for a sync provider. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/hvc/links/link/sync/providers/provider/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "polling_interval_in_seconds",
                "status"
              ],
              "properties": {
                "status": {
                  "enum": [
                    "SUCCEEDED",
                    "FAILED",
                    "NO_SYNC_FOUND"
                  ],
                  "type": "string",
                  "description": "The {@name Status} {@term enumerated type} defines valid sync status. Warning: This enumeration is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                },
                "last_sync_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last sync time for the provider. This indicates the last time that either a background sync or a force sync was started for the provider Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                },
                "status_message": {
                  "type": "object",
                  "required": [
                    "id",
                    "default_message",
                    "args"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                    },
                    "args": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Arguments to be substituted into a message template."
                    },
                    "default_message": {
                      "type": "string",
                      "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                    }
                  }
                },
                "current_session_info": {
                  "type": "object",
                  "required": [
                    "completed_work",
                    "stage",
                    "start_time",
                    "total_work"
                  ],
                  "properties": {
                    "stage": {
                      "enum": [
                        "CHANGE_DETECTION",
                        "CHANGE_ENUMERATION",
                        "CHANGE_APPLICATION",
                        "COMPLETED",
                        "FAILED",
                        "WAITING"
                      ],
                      "type": "string",
                      "description": "The {@name Stage} {@term structure} defines the different stages of Sync. Warning: This enumeration is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                    },
                    "exception": {
                      "type": "object",
                      "required": [
                        "id",
                        "default_message",
                        "args"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                        },
                        "args": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Arguments to be substituted into a message template."
                        },
                        "default_message": {
                          "type": "string",
                          "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                        }
                      }
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which force sync was initiated. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                    },
                    "total_work": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total work for the session. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                    },
                    "completed_work": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Completed work for the session. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                    },
                    "completion_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which forced sync session was completed. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                    }
                  }
                },
                "polling_interval_in_seconds": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Sync Polling interval between local and remote replicas for the provider Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                }
              }
            }
          }
        }
      ]
  createHVCLink:
    description: |-
      Creates a new hybrid link between the local and foreign PSC. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/hvc/links/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "domain_name",
                "password",
                "psc_hostname",
                "username"
              ],
              "properties": {
                "port": {
                  "type": "string",
                  "description": "The HTTPS port of the PSC to be linked. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "The administrator password of the PSC. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                },
                "username": {
                  "type": "string",
                  "description": "The administrator username of the PSC. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                },
                "domain_name": {
                  "type": "string",
                  "description": "The domain to which the PSC belongs. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                },
                "admin_groups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of groups to be added to enable administrator access to. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.",
                  "uniqueItems": true
                },
                "psc_hostname": {
                  "type": "string",
                  "description": "The PSC hostname for the domain to be linked. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                },
                "ssl_thumbprint": {
                  "type": "string",
                  "description": "The ssl thumbprint of the server. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  addHVCManagementAdministrator:
    description: |-
      Add the local sso group with the new group. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/hvc/management/administratorsactionadd/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "group_name"
          ],
          "properties": {
            "group_name": {
              "type": "string",
              "description": "Name of the new group to be added. Ex - xyz@abc.com where xyz is the group name and abc.com is the domain name"
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  removeHVCManagementAdministrator:
    description: |-
      Remove the group from the local sso group. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/hvc/management/administratorsactionremove/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "group_name"
          ],
          "properties": {
            "group_name": {
              "type": "string",
              "description": "Name of the group to be removed. Ex - xyz@abc.com where xyz is the group name and abc.com is the domain name"
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listHVCManagementAdministrators:
    description: |-
      Enumerates the set of all the groups in the local sso group. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/hvc/management/administrators/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          }
        }
      ]
  setHVCManagementAdministrator:
    description: |-
      Sets the groups in the local sso group. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/hvc/management/administrators/put/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "group_names"
          ],
          "properties": {
            "group_names": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Names the groups to be in the CloudAdminGroup Ex - xyz@abc.com where xyz is the group name and abc.com is the domain name",
              "uniqueItems": true
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  renewCertificateManagementvCenterTLS:
    description: |-
      Renews the TLS certificate for the given duration period. 
      After this operation completes, the services using the certificate will be restarted for the new certificate to take effect.
      
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires CertificateManagement.Administer. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/certificate-management/vcenter/tlsactionrenew/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "duration": {
              "type": "integer",
              "format": "int64",
              "description": "The duration (in days) of the new TLS certificate. The duration should be less than or equal to 730 days.\nIf unset, the duration will be 730 days (two years)."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  replaceCertificateManagementvCenterVMCASigned:
    description: |-
      Replace MACHINE SSL with VMCA signed one with the given Spec.The system will go for restart. 
       After this operation completes, the services using the certificate will be restarted for the new certificate to take effect.
      
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires CertificateManagement.Administer. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/certificate-management/vcenter/tlsactionreplace-vmca-signed/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "organization",
                "organization_unit",
                "locality",
                "state_or_province",
                "country",
                "email_address"
              ],
              "properties": {
                "country": {
                  "type": "string",
                  "description": "Country field in certificate subject"
                },
                "key_size": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The size of the key to be used for public and private key generation.\nIf unset the key size will be '2048'."
                },
                "locality": {
                  "type": "string",
                  "description": "Locality field in certificate subject"
                },
                "common_name": {
                  "type": "string",
                  "description": "The common name of the host for which certificate is generated\nIf unset will default to PNID of host."
                },
                "organization": {
                  "type": "string",
                  "description": "Organization field in certificate subject"
                },
                "email_address": {
                  "type": "string",
                  "description": "Email field in Certificate extensions"
                },
                "subject_alt_name": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "SubjectAltName is list of Dns Names and Ip addresses\nIf unset PNID of host will be used as IPAddress or Hostname for certificate generation ."
                },
                "organization_unit": {
                  "type": "string",
                  "description": "Organization unit field in certificate subject"
                },
                "state_or_province": {
                  "type": "string",
                  "description": "State field in certificate subject"
                }
              },
              "description": "The information needed to generate VMCA signed Machine SSL"
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  createCertificateManagementvCenterTLSCSR:
    description: |-
      Generates a CSR with the given Spec.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires CertificateManagement.Manage and CertificateManagement.Administer. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/certificate-management/vcenter/tls-csr/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "organization",
                "organization_unit",
                "locality",
                "state_or_province",
                "country",
                "email_address"
              ],
              "properties": {
                "country": {
                  "type": "string",
                  "description": "Country field in certificate subject"
                },
                "key_size": {
                  "type": "integer",
                  "format": "int64",
                  "description": "keySize will take 2048 bits if not modified."
                },
                "locality": {
                  "type": "string",
                  "description": "Locality field in certificate subject"
                },
                "common_name": {
                  "type": "string",
                  "description": "commonName will take PNID if not modified."
                },
                "organization": {
                  "type": "string",
                  "description": "Organization field in certificate subject"
                },
                "email_address": {
                  "type": "string",
                  "description": "Email field in Certificate extensions"
                },
                "subject_alt_name": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "subjectAltName is list of Dns Names and Ip addresses"
                },
                "organization_unit": {
                  "type": "string",
                  "description": "Organization unit field in certificate subject"
                },
                "state_or_province": {
                  "type": "string",
                  "description": "State field in certificate subject"
                }
              },
              "description": "The information needed to create a CSR."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "csr"
              ],
              "properties": {
                "csr": {
                  "type": "string",
                  "description": "Certificate Signing Request in PEM format."
                }
              }
            }
          }
        }
      ]
  getCertificateManagementvCenterTLS:
    description: |-
      Returns the rhttpproxy TLS certificate.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires System.Read. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/certificate-management/vcenter/tls/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  setCertificateManagementvCenterTLS:
    description: |-
      Replaces the rhttpproxy TLS certificate with the specified certificate. This operation can be used in three scenarios : 
         1.  When the CSR is created and the private key is already stored, this operation can replace the certificate. The Tls.Spec.cert (but not Tls.Spec.key and Tls.Spec.root-cert) must be provided as input. 
         2.  When the certificate is signed by a third party certificate authority/VMCA and the root certificate of the third party certificate authority/VMCA is already one of the trusted roots in the trust store, this operation can replace the certificate and private key. The Tls.Spec.cert and Tls.Spec.key (but not Tls.Spec.root-cert) must be provided as input. 
         3.  When the certificate is signed by a third party certificate authority and the root certificate of the third party certificate authority is not one of the trusted roots in the trust store, this operation can replace the certificate, private key and root CA certificate. The Tls.Spec.cert,Tls.Spec.key and Tls.Spec.root-cert must be provided as input. 
        After this operation completes, the services using the certificate will be restarted for the new certificate to take effect. 
      The above three scenarios are only supported from vsphere 7.0 onwards.
      
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires CertificateManagement.Administer. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/certificate-management/vcenter/tls/put/
    example:
      inputs: [
        {
          "spec": {
            "type": "object",
            "required": [
              "cert"
            ],
            "properties": {
              "key": {
                "type": "string",
                "format": "password",
                "description": "Private key string in PEM format.\nIf unset the private key from the certificate store will be used. It is required when replacing the certificate with a third party signed certificate."
              },
              "cert": {
                "type": "string",
                "description": "Certificate string in PEM format."
              },
              "root_cert": {
                "type": "string",
                "description": "Third party Root CA certificate in PEM format.\nIf unset the new third party root CA certificate will not be added to the trust store. It is required when replacing the certificate with a third party signed certificate if the root certificate of the third party is not already a trusted root."
              }
            },
            "description": "The information needed to replace the TLS certificate."
          }
        }
      ]
      outputs: [
        {}
      ]
  deleteCertificateManagementTrustedRootChain:
    description: |-
      Deletes trusted root certificate chain for a given identifier.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires CertificateManagement.Manage and CertificateManagement.Administer. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/certificate-management/vcenter/trusted-root-chains/chain/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getCertificateManagementTrustedRootChain:
    description: |-
      Retrieve a trusted root certificate chain for a given identifier.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires System.Read. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/certificate-management/vcenter/trusted-root-chains/chain/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  listCertificateManagementTrustedRootChains:
    description: |-
      Returns summary information for each trusted root certificate chain.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires System.Read. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/certificate-management/vcenter/trusted-root-chains/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  createCertificateManagementTrustedRootChain:
    description: |-
      Creates a new trusted root certificate chain from the CreateSpec.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires CertificateManagement.Manage and CertificateManagement.Administer. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/certificate-management/vcenter/trusted-root-chains/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "cert_chain"
              ],
              "properties": {
                "chain": {
                  "type": "string",
                  "description": "Unique identifier for this trusted root. Client can specify at creation as long as it is unique, otherwise one will be generated. An example of a client providing the identifier would be if this trusted root is associated with a VC trust. In this case the identifier would be the domain id.\nA unique id will be generated if not given."
                },
                "cert_chain": {
                  "type": "object",
                  "required": [
                    "cert_chain"
                  ],
                  "properties": {
                    "cert_chain": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Certificate chain in base64 format"
                    }
                  },
                  "description": "Certificate chain in base64 encoding"
                }
              },
              "description": "The information needed to create a trusted root certificate chain."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  createCertificateManagementVMCARoot:
    description: |-
      Replace Root Certificate with VMCA signed one using the given Spec. 
      After this operation completes, the services using the certificate will be restarted for the new certificate to take effect.
      
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires CertificateManagement.Administer. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/certificate-management/vcenter/vmca-root/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "country": {
                  "type": "string",
                  "description": "Country field in certificate subject.\nIf unset the country will be 'US'."
                },
                "key_size": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The size of the key to be used for public and private key generation.\nIf unset the key size will be 2048."
                },
                "locality": {
                  "type": "string",
                  "description": "Locality field in certificate subject.\nIf unset the locality will be 'Palo Alto'."
                },
                "common_name": {
                  "type": "string",
                  "description": "The common name of the host for which certificate is generated.\nIf unset the common name will be the primary network identifier (PNID) of the vCenter Virtual Server Appliance (VCSA)."
                },
                "organization": {
                  "type": "string",
                  "description": "Organization field in certificate subject.\nIf unset the organization will be 'VMware'."
                },
                "email_address": {
                  "type": "string",
                  "description": "Email field in Certificate extensions.\nIf unset the emailAddress will be 'email@acme.com'."
                },
                "subject_alt_name": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "SubjectAltName is list of Dns Names and Ip addresses.\nIf unset PNID of host will be used as IPAddress or Hostname for certificate generation."
                },
                "organization_unit": {
                  "type": "string",
                  "description": "Organization unit field in certificate subject.\nIf unset the organization unit will be 'VMware Engineering'."
                },
                "state_or_province": {
                  "type": "string",
                  "description": "State field in certificate subject.\nIf unset the state will be 'California'."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getComputePolicyCapability:
    description: |-
      Returns information about a specific compute policy capability in VMware Cloud on AWS. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/compute/policies/capabilities/capability/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "name",
            "description",
            "create_spec_type",
            "info_type"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the capability. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
            },
            "info_type": {
              "type": "string",
              "description": "Identifier of the {@term structure} returned when retrieving information about a policy based on this capability. See {@link vcenter.compute.Policies#get}. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
            },
            "description": {
              "type": "string",
              "description": "Description of the capability. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
            },
            "create_spec_type": {
              "type": "string",
              "description": "Identifier of the {@term structure} used to create a policy based on this capability. See {@link vcenter.compute.Policies#create}. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
            }
          }
        }
      ]
  listComputePolicyCapabilities:
    description: |-
      Returns information about the compute policy capabilities available in this vCenter server in VMware Cloud on AWS. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/compute/policies/capabilities/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "capability",
              "name",
              "description"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the capability. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
              },
              "capability": {
                "type": "string",
                "description": "Identifier of the capability. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
              },
              "description": {
                "type": "string",
                "description": "Description of the capability. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
              }
            }
          }
        }
      ]
  listComputePolicies:
    description: |-
      Returns information about the compute policies available in this vCenter server in VMware Cloud on AWS. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/compute/policies/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "policy",
              "name",
              "description",
              "capability"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the policy. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
              },
              "policy": {
                "type": "string",
                "description": "Identifier of the policy. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
              },
              "capability": {
                "type": "string",
                "description": "Identifier of the capability this policy is based on. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
              },
              "description": {
                "type": "string",
                "description": "Description of the policy. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
              }
            }
          }
        }
      ]
  deleteComputePolicy:
    description: |-
      Deletes a specific compute policy in VMware Cloud on AWS. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/compute/policies/policy/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getComputePolicy:
    description: |-
      Returns information about a specific compute policy in VMware Cloud on AWS. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/compute/policies/policy/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object"
        }
      ]
  createComputePolicy:
    description: |-
      Creates a new compute policy in VMware Cloud on AWS. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/compute/policies/post/
    example:
      inputs: [
        {
          "type": "object",
          "description": "Specification for the new policy to be created. The new policy will be an instance of the capability that has the creation type (see {@link vcenter.compute.policies.Capabilities.Info#createSpecType}) equal to the type of the specified value (see {@param.name spec})."
        }
      ]
      outputs: [
        {}
      ]
  listComputePolicyTagUsage:
    description: |-
      Returns information about the tags used by policies available in this vCenter server matching the {@link FilterSpec} in VMware Cloud on AWS. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/compute/policies/tag-usage/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "policy",
              "tag_type",
              "tag",
              "tag_name",
              "category_name"
            ],
            "properties": {
              "tag": {
                "type": "string",
                "description": "Identifier of the tag used by the policy indicated by {@link #policy}. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
              },
              "policy": {
                "type": "string",
                "description": "Identifier of the policy that uses the tag indicated by {@link #tag}. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
              },
              "tag_name": {
                "type": "string",
                "description": "Name of the tag used by the policy indicated by {@link #policy}. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
              },
              "tag_type": {
                "type": "string",
                "description": "Identifier of the tag type used by the policy indicated by {@link #policy}. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
              },
              "category_name": {
                "type": "string",
                "description": "Name of the category that has {@link #tag}. Warning: This attribute is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
              }
            }
          }
        }
      ]
  listContentHarborRegistries:
    description: |-
      Returns basic information of all Harbor registries.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/content/registries/harbor/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "registry",
                  "version",
                  "ui_access_url"
                ],
                "properties": {
                  "cluster": {
                    "type": "string",
                    "description": "Identifier of the cluster."
                  },
                  "version": {
                    "type": "string",
                    "description": "Version of the registry."
                  },
                  "registry": {
                    "type": "string",
                    "description": "Identifier of the registry."
                  },
                  "ui_access_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL to access the UI of the registry."
                  }
                }
              }
            }
          }
        }
      ]
  createContentHarborRegistry:
    description: |-
      Creates a Harbor registry in the cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/content/registries/harbor/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "storage"
              ],
              "properties": {
                "cluster": {
                  "type": "string",
                  "description": "Identifier of the cluster hosting the registry."
                },
                "storage": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "policy"
                    ],
                    "properties": {
                      "limit": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The maximum amount of storage (in mebibytes) which can be utilized by the registry for this specification."
                      },
                      "policy": {
                        "type": "string",
                        "description": "Identifier of the storage policy."
                      }
                    }
                  },
                  "description": "Storage associated with the Harbor registry. The list contains only one storage backing in this version."
                },
                "garbage_collection": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "hour": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Hour at which garbage collection should run."
                    },
                    "type": {
                      "enum": [
                        "NONE",
                        "DAILY",
                        "WEEKLY"
                      ],
                      "type": "string",
                      "description": "Frequency of garbage collection."
                    },
                    "minute": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Minute at which garbage collection should run."
                    },
                    "day_of_week": {
                      "enum": [
                        "SUNDAY",
                        "MONDAY",
                        "TUESDAY",
                        "WEDNESDAY",
                        "THURSDAY",
                        "FRIDAY",
                        "SATURDAY"
                      ],
                      "type": "string",
                      "description": "Day of the week when garbage collection should run."
                    }
                  },
                  "description": "Garbage collection configuration for the Harbor registry."
                }
              },
              "description": "Specification for creating the Harbor registry."
            },
            "client_token": {
              "type": "string",
              "description": "A unique token generated on the client for each creation request. The token should be a universally unique identifier (UUID), for example: {@code b8a2a2e3-2314-43cd-a871-6ede0f429751}. This token can be used to guarantee idempotent creation."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  deleteContentRegistryHarbor:
    description: |-
      Delete the Harbor registry in the cluster. All Harbor projects, repositories and images will be deleted upon Harbor registry deletion.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/content/registries/harbor/registry/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getContentRegistryHarbor:
    description: |-
      Get detailed information of the Harbor registry.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/content/registries/harbor/registry/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "version",
                "creation_time",
                "ui_access_url",
                "cert_chain",
                "garbage_collection",
                "storage",
                "health"
              ],
              "properties": {
                "health": {
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "enum": [
                        "STARTING",
                        "RUNNING",
                        "WARNING",
                        "ERROR",
                        "DELETING"
                      ],
                      "type": "string",
                      "description": "The {@name Status} {@term enumerated type} describes the status of the container registry."
                    },
                    "details": {
                      "type": "object",
                      "required": [
                        "id",
                        "default_message",
                        "args"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                        },
                        "args": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Arguments to be substituted into a message template."
                        },
                        "default_message": {
                          "type": "string",
                          "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                        }
                      },
                      "description": "Details about the status."
                    }
                  },
                  "description": "Health status of the container registry."
                },
                "cluster": {
                  "type": "string",
                  "description": "Identifier of the cluster."
                },
                "storage": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "policy",
                      "capacity",
                      "used"
                    ],
                    "properties": {
                      "used": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Overall storage used by the registry (in mebibytes). This is the sum of used storage associated with storage policies configured for the registry."
                      },
                      "policy": {
                        "type": "string",
                        "description": "Identifier of the storage policy."
                      },
                      "capacity": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total capacity for the registry storage (in mebibytes). This is the storage limit set on the Harbor registry. If a storage limit was not set on the registry, the default registry capacity - 204800 mebibytes is used."
                      }
                    }
                  },
                  "description": "Storage information associated with the registry."
                },
                "version": {
                  "type": "string",
                  "description": "Version of the registry."
                },
                "namespace": {
                  "type": "string",
                  "description": "Identifier of the Harbor namespace in case it is created in a Kubernetes environment."
                },
                "cert_chain": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Harbor certificate chain in base64 format."
                },
                "creation_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time when the harbor registry was created."
                },
                "ui_access_url": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to access the UI of the registry."
                },
                "garbage_collection": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "hour": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Hour at which garbage collection should run."
                    },
                    "type": {
                      "enum": [
                        "NONE",
                        "DAILY",
                        "WEEKLY"
                      ],
                      "type": "string",
                      "description": "Frequency of garbage collection."
                    },
                    "minute": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Minute at which garbage collection should run."
                    },
                    "day_of_week": {
                      "enum": [
                        "SUNDAY",
                        "MONDAY",
                        "TUESDAY",
                        "WEDNESDAY",
                        "THURSDAY",
                        "FRIDAY",
                        "SATURDAY"
                      ],
                      "type": "string",
                      "description": "Day of the week when garbage collection should run."
                    }
                  },
                  "description": "Garbage collection information for the registry."
                }
              }
            }
          }
        }
      ]
  listContentRegistryHarborProjects:
    description: |-
      Returns basic information of all projects in a Harbor registry.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/content/registries/harbor/registry/projects/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "project",
                  "name",
                  "scope"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the Harbor project. Should be between 1-63 characters long alphanumeric string and may contain the following characters: a-z,0-9, and '-'. Must be starting with characters or numbers, with the '-' character allowed anywhere except the first or last character."
                  },
                  "scope": {
                    "enum": [
                      "PUBLIC",
                      "PRIVATE"
                    ],
                    "type": "string",
                    "description": "Access type of a Harbor project."
                  },
                  "project": {
                    "type": "string",
                    "description": "Identifier of the harbor project."
                  }
                }
              }
            }
          }
        }
      ]
  createContentRegistryHarborProject:
    description: |-
      Creates a project in a Harbor registry using the supplied specification. In vSphere 7.0, a Harbor registry is deployed in a vSphere cluster with vSphere namespaces enabled. When a namespace is created, a project with same name as the namespace is created in the Harbor registry, so this {@term operation} should not be called.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/content/registries/harbor/registry/projects/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "name",
                "scope"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the Harbor project. Should be between 1-63 characters long alphanumeric string and may contain the following characters: a-z,0-9, and '-'. Must be starting with characters or numbers, with the '-' character allowed anywhere except the first or last character."
                },
                "scope": {
                  "enum": [
                    "PUBLIC",
                    "PRIVATE"
                  ],
                  "type": "string",
                  "description": "Access type of a Harbor project."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  purgeContentRegistryHarborProjects:
    description: |-
      Remove all repositories, images and members in the project. Storage space of deleted images in the project will be reclaimed through next scheduled Harbor registry garbage collection.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/content/registries/harbor/registry/projects/projectactionpurge/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteContentRegistryHarborProject:
    description: |-
      Deletes the specified project from Harbor registry. Repositories and images in the project will be removed upon project deletion. Storage space of deleted images in the project will be reclaimed through next scheduled Harbor registry garbage collection. In vSphere 7.0, a Harbor registry is deployed in a vSphere cluster with vSphere namespaces enabled. When a namespace is deleted, a project with same name as the namespace is deleted from the Harbor registry, so this {@term operation} should not be called.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/content/registries/harbor/registry/projects/project/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getContentRegistryHarborProject:
    description: |-
      Returns detailed information about the specified Harbor project.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/content/registries/harbor/registry/projects/project/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "name",
                "config_status",
                "scope",
                "creation_time"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the Harbor project. Should be between 1-63 characters long alphanumeric string and may contain the following characters: a-z,0-9, and '-'. Must be starting with characters or numbers, with the '-' character allowed anywhere except the first or last character."
                },
                "scope": {
                  "enum": [
                    "PUBLIC",
                    "PRIVATE"
                  ],
                  "type": "string",
                  "description": "The access type of a Harbor project."
                },
                "message": {
                  "type": "object",
                  "required": [
                    "id",
                    "default_message",
                    "args"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                    },
                    "args": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Arguments to be substituted into a message template."
                    },
                    "default_message": {
                      "type": "string",
                      "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                    }
                  },
                  "description": "Details about the ERROR project status."
                },
                "access_url": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to access the harbor project through docker client."
                },
                "update_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time when the harbor project purge API was triggered. In case no purge was triggered, {@name #updateTime} is same as {@name #creationTime}."
                },
                "config_status": {
                  "enum": [
                    "PENDING",
                    "REMOVING",
                    "ERROR",
                    "READY"
                  ],
                  "type": "string",
                  "description": "The status of the Harbor project."
                },
                "creation_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time when the harbor project creation API was triggered and project identifier generated."
                }
              }
            }
          }
        }
      ]
  getContentRegistryHealth:
    description: |-
      Returns the health information of a container registry in the vCenter.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/content/registries/registry/health/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "status"
              ],
              "properties": {
                "status": {
                  "enum": [
                    "STARTING",
                    "RUNNING",
                    "WARNING",
                    "ERROR",
                    "DELETING"
                  ],
                  "type": "string",
                  "description": "The {@name Status} {@term enumerated type} describes the status of the container registry."
                },
                "details": {
                  "type": "object",
                  "required": [
                    "id",
                    "default_message",
                    "args"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                    },
                    "args": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Arguments to be substituted into a message template."
                    },
                    "default_message": {
                      "type": "string",
                      "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                    }
                  },
                  "description": "Details about the status."
                }
              }
            }
          }
        }
      ]
  checkDeploymentInstallPSCReplicated:
    description: |-
      Checks whether the provided remote PSC is reachable and can be replicated.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/deployment/install/psc/replicatedactioncheck/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "partner_hostname",
                "sso_admin_password"
              ],
              "properties": {
                "https_port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The HTTPS port of the external PSC appliance."
                },
                "ssl_verify": {
                  "type": "boolean",
                  "description": "SSL verification should be enabled or disabled."
                },
                "sso_site_name": {
                  "type": "string",
                  "description": "The SSO sitename that will be used in PSC replication."
                },
                "ssl_thumbprint": {
                  "type": "string",
                  "description": "SHA1 thumbprint of the server SSL certificate will be used for verification."
                },
                "partner_hostname": {
                  "type": "string",
                  "description": "The IP address or DNS resolvable name of the partner PSC appliance."
                },
                "sso_admin_password": {
                  "type": "string",
                  "description": "The SSO administrator account password."
                }
              },
              "description": "Information to configure a replicated PSC."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "status"
              ],
              "properties": {
                "result": {
                  "type": "object",
                  "properties": {
                    "info": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Info notification messages reported."
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Error notification messages reported."
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Warning notification messages reported."
                    }
                  },
                  "description": "Result of the check."
                },
                "status": {
                  "enum": [
                    "SUCCESS",
                    "FAILED"
                  ],
                  "type": "string",
                  "description": "Status of the check."
                }
              }
            }
          }
        }
      ]
  cancelDeploymentMigration:
    description: |-
      Cancel the appliance migration that is in progress.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/deployment/migrateactioncancel/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  checkDeploymentMigration:
    description: |-
      Run sanity checks using the MigrateSpec parameters passed.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/deployment/migrateactioncheck/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "source_vc_windows",
                "existing_migration_assistant"
              ],
              "properties": {
                "psc": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled for this Platform Services Controller migration."
                    }
                  },
                  "description": "Information specific to a Platform Services Controller."
                },
                "history": {
                  "type": "object",
                  "required": [
                    "data_set"
                  ],
                  "properties": {
                    "data_set": {
                      "enum": [
                        "EVENTS_TASKS",
                        "ALL"
                      ],
                      "type": "string",
                      "description": "Defines what part of vCenter historical data will be migrated along with core data."
                    },
                    "defer_import": {
                      "type": "boolean",
                      "description": "Defines how vCenter history will be migrated. If set to true, vCenter history will be migrated separately after successful upgrade or migration, otherwise it will be migrated along with core data during the upgrade or migration process."
                    }
                  },
                  "description": "Determines how vCenter history will be migrated during the migration process. vCenter history consists of: <ul> <li>Statistics</li> <li>Events</li> <li>Tasks</li> </ul> By default only core data will be migrated. Use this spec to define which part of vCenter history data will be migrated and when."
                },
                "auto_answer": {
                  "type": "boolean",
                  "description": "Use the default option for any questions that may come up during appliance configuration."
                },
                "vcsa_embedded": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled for this embedded vCenter Server migration."
                    }
                  },
                  "description": "Information specific to an embedded vCenter Server."
                },
                "active_directory": {
                  "type": "object",
                  "required": [
                    "domain",
                    "username",
                    "password"
                  ],
                  "properties": {
                    "domain": {
                      "type": "string",
                      "description": "The domain name of the Active Directory server to which the migrated vCenter Server appliance should be joined."
                    },
                    "password": {
                      "type": "string",
                      "description": "Active Directory user password that has permission to join the Active Directory after the vCenter Server is migrated to appliance."
                    },
                    "username": {
                      "type": "string",
                      "description": "Active Directory user that has permission to join the Active Directory after the vCenter Server is migrated to appliance."
                    }
                  },
                  "description": "Information specific to the Active Directory server to which the source windows vCenter Server is joined."
                },
                "source_vc_windows": {
                  "type": "object",
                  "required": [
                    "hostname",
                    "username",
                    "password"
                  ],
                  "properties": {
                    "hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the source Windows machine."
                    },
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "The SSO administrator account password."
                    },
                    "username": {
                      "type": "string",
                      "description": "The SSO account with administrative privilege to perform the migration operation."
                    }
                  },
                  "description": "Information specific to the Windows vCenter Server."
                },
                "existing_migration_assistant": {
                  "type": "object",
                  "required": [
                    "ssl_thumbprint"
                  ],
                  "properties": {
                    "https_port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The HTTPS port being used by Migration Assistant."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 thumbprint of the Migration Assistant SSL certificate that will be used for verification."
                    }
                  },
                  "description": "Information specific to the Migration Assistant that is running on the Windows vCenter Server."
                }
              },
              "description": "MigrateSpec parameters to run sanity check on."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "status"
              ],
              "properties": {
                "result": {
                  "type": "object",
                  "properties": {
                    "info": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Info notification messages reported."
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Error notification messages reported."
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Warning notification messages reported."
                    }
                  },
                  "description": "Result of the check."
                },
                "status": {
                  "enum": [
                    "SUCCESS",
                    "FAILED"
                  ],
                  "type": "string",
                  "description": "Status of the check."
                }
              }
            }
          }
        }
      ]
  startDeploymentMigration:
    description: |-
      Start the appliance migration.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/deployment/migrateactionstart/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "source_vc_windows",
                "existing_migration_assistant"
              ],
              "properties": {
                "psc": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled for this Platform Services Controller migration."
                    }
                  },
                  "description": "Information specific to a Platform Services Controller."
                },
                "history": {
                  "type": "object",
                  "required": [
                    "data_set"
                  ],
                  "properties": {
                    "data_set": {
                      "enum": [
                        "EVENTS_TASKS",
                        "ALL"
                      ],
                      "type": "string",
                      "description": "Defines what part of vCenter historical data will be migrated along with core data."
                    },
                    "defer_import": {
                      "type": "boolean",
                      "description": "Defines how vCenter history will be migrated. If set to true, vCenter history will be migrated separately after successful upgrade or migration, otherwise it will be migrated along with core data during the upgrade or migration process."
                    }
                  },
                  "description": "Determines how vCenter history will be migrated during the migration process. vCenter history consists of: <ul> <li>Statistics</li> <li>Events</li> <li>Tasks</li> </ul> By default only core data will be migrated. Use this spec to define which part of vCenter history data will be migrated and when."
                },
                "auto_answer": {
                  "type": "boolean",
                  "description": "Use the default option for any questions that may come up during appliance configuration."
                },
                "vcsa_embedded": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled for this embedded vCenter Server migration."
                    }
                  },
                  "description": "Information specific to an embedded vCenter Server."
                },
                "active_directory": {
                  "type": "object",
                  "required": [
                    "domain",
                    "username",
                    "password"
                  ],
                  "properties": {
                    "domain": {
                      "type": "string",
                      "description": "The domain name of the Active Directory server to which the migrated vCenter Server appliance should be joined."
                    },
                    "password": {
                      "type": "string",
                      "description": "Active Directory user password that has permission to join the Active Directory after the vCenter Server is migrated to appliance."
                    },
                    "username": {
                      "type": "string",
                      "description": "Active Directory user that has permission to join the Active Directory after the vCenter Server is migrated to appliance."
                    }
                  },
                  "description": "Information specific to the Active Directory server to which the source windows vCenter Server is joined."
                },
                "source_vc_windows": {
                  "type": "object",
                  "required": [
                    "hostname",
                    "username",
                    "password"
                  ],
                  "properties": {
                    "hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the source Windows machine."
                    },
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "The SSO administrator account password."
                    },
                    "username": {
                      "type": "string",
                      "description": "The SSO account with administrative privilege to perform the migration operation."
                    }
                  },
                  "description": "Information specific to the Windows vCenter Server."
                },
                "existing_migration_assistant": {
                  "type": "object",
                  "required": [
                    "ssl_thumbprint"
                  ],
                  "properties": {
                    "https_port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The HTTPS port being used by Migration Assistant."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 thumbprint of the Migration Assistant SSL certificate that will be used for verification."
                    }
                  },
                  "description": "Information specific to the Migration Assistant that is running on the Windows vCenter Server."
                }
              },
              "description": "MigrateSpec parameters to configure the appliance migration."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  checkDeploymentADMigration:
    description: |-
      Checks whether the provided Active Directory user has permission to join the migrated vCenter Server appliance to the domain.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/deployment/migrate/active-directoryactioncheck/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "dns_servers",
                "domain",
                "username",
                "password"
              ],
              "properties": {
                "domain": {
                  "type": "string",
                  "description": "The domain name of the Active Directory server to which the migrated vCenter Server appliance should be joined."
                },
                "password": {
                  "type": "string",
                  "description": "Active Directory user password that has permission to join the Active Directory after the vCenter Server is migrated to appliance."
                },
                "username": {
                  "type": "string",
                  "description": "Active Directory user that has permission to join the Active Directory after the vCenter Server is migrated to appliance."
                },
                "dns_servers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "IP addresses of the DNS servers of the Active Directory server."
                }
              },
              "description": "Information to connect to Active Directory."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "status"
              ],
              "properties": {
                "result": {
                  "type": "object",
                  "properties": {
                    "info": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Info notification messages reported."
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Error notification messages reported."
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Warning notification messages reported."
                    }
                  },
                  "description": "Result of the check."
                },
                "status": {
                  "enum": [
                    "SUCCESS",
                    "FAILED"
                  ],
                  "type": "string",
                  "description": "Status of the check."
                }
              }
            }
          }
        }
      ]
  getDeploymentMigration:
    description: |-
      Get the MigrateSpec parameters used to configure the ongoing appliance migration.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/deployment/migrate/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "source_vc_windows",
                "existing_migration_assistant"
              ],
              "properties": {
                "psc": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled for this Platform Services Controller migration."
                    }
                  },
                  "description": "Information specific to a Platform Services Controller."
                },
                "history": {
                  "type": "object",
                  "required": [
                    "data_set"
                  ],
                  "properties": {
                    "data_set": {
                      "enum": [
                        "EVENTS_TASKS",
                        "ALL"
                      ],
                      "type": "string",
                      "description": "Defines what part of vCenter historical data will be migrated along with core data."
                    },
                    "defer_import": {
                      "type": "boolean",
                      "description": "Defines how vCenter history will be migrated. If set to true, vCenter history will be migrated separately after successful upgrade or migration, otherwise it will be migrated along with core data during the upgrade or migration process."
                    }
                  },
                  "description": "Determines how vCenter history will be migrated during the migration process. vCenter history consists of: <ul> <li>Statistics</li> <li>Events</li> <li>Tasks</li> </ul> By default only core data will be migrated. Use this spec to define which part of vCenter history data will be migrated and when."
                },
                "auto_answer": {
                  "type": "boolean",
                  "description": "Use the default option for any questions that may come up during appliance configuration."
                },
                "vcsa_embedded": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled for this embedded vCenter Server migration."
                    }
                  },
                  "description": "Information specific to an embedded vCenter Server."
                },
                "active_directory": {
                  "type": "object",
                  "required": [
                    "domain",
                    "username",
                    "password"
                  ],
                  "properties": {
                    "domain": {
                      "type": "string",
                      "description": "The domain name of the Active Directory server to which the migrated vCenter Server appliance should be joined."
                    },
                    "password": {
                      "type": "string",
                      "description": "Active Directory user password that has permission to join the Active Directory after the vCenter Server is migrated to appliance."
                    },
                    "username": {
                      "type": "string",
                      "description": "Active Directory user that has permission to join the Active Directory after the vCenter Server is migrated to appliance."
                    }
                  },
                  "description": "Information specific to the Active Directory server to which the source windows vCenter Server is joined."
                },
                "source_vc_windows": {
                  "type": "object",
                  "required": [
                    "hostname",
                    "username",
                    "password"
                  ],
                  "properties": {
                    "hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the source Windows machine."
                    },
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "The SSO administrator account password."
                    },
                    "username": {
                      "type": "string",
                      "description": "The SSO account with administrative privilege to perform the migration operation."
                    }
                  },
                  "description": "Information specific to the Windows vCenter Server."
                },
                "existing_migration_assistant": {
                  "type": "object",
                  "required": [
                    "ssl_thumbprint"
                  ],
                  "properties": {
                    "https_port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The HTTPS port being used by Migration Assistant."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 thumbprint of the Migration Assistant SSL certificate that will be used for verification."
                    }
                  },
                  "description": "Information specific to the Migration Assistant that is running on the Windows vCenter Server."
                }
              }
            }
          }
        }
      ]
  importGuestCustomizationSpec:
    description: |-
      Converts a well formatted string to a CustomizationSpecs.CreateSpec. The resulting object can be passed to CustomizationSpecs.create operation.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/guest/customization-specsactionimport/post/
    example:
      inputs: [
        {
          "properties": {
            "customization_spec": {
              "type": "string",
              "description": "content to be converted to the spec."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "spec",
                "description",
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the specification."
                },
                "spec": {
                  "type": "object",
                  "required": [
                    "configuration_spec",
                    "global_DNS_settings",
                    "interfaces"
                  ],
                  "properties": {
                    "interfaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "adapter"
                        ],
                        "properties": {
                          "adapter": {
                            "type": "object",
                            "properties": {
                              "ipv4": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "DHCP",
                                      "STATIC",
                                      "USER_INPUT_REQUIRED"
                                    ],
                                    "type": "string",
                                    "description": "The type of the IPv4 configuration."
                                  },
                                  "prefix": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The IPv4 CIDR prefix, for example, 24. See http://www.oav.net/mirrors/cidr.html for netmask-to-prefix conversion.\nThis field is optional and it is only relevant when the value of Ipv4.type is STATIC."
                                  },
                                  "gateways": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Gateways for the IPv4 address.\nIf unset, no gateways are set."
                                  },
                                  "ip_address": {
                                    "type": "string",
                                    "description": "The static IPv4 address\nThis field is optional and it is only relevant when the value of Ipv4.type is STATIC."
                                  }
                                },
                                "description": "Specification to configure IPv4 address, subnet mask and gateway info for this virtual network adapter.\nIf unset, no IPv4 addresses are set."
                              },
                              "ipv6": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "ipv6": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "ip_address",
                                        "prefix"
                                      ],
                                      "properties": {
                                        "prefix": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "The CIDR prefix for the interface."
                                        },
                                        "ip_address": {
                                          "type": "string",
                                          "description": "Static IPv6 Address."
                                        }
                                      }
                                    },
                                    "description": "IPv6 address\nThis field is optional and it is only relevant when the value of Ipv6.type is STATIC."
                                  },
                                  "type": {
                                    "enum": [
                                      "DHCP",
                                      "STATIC",
                                      "USER_INPUT_REQUIRED"
                                    ],
                                    "type": "string",
                                    "description": "The IPv6 configuration type"
                                  },
                                  "gateways": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "gateways for the IPv6 address.\nIf unset, no gateways are set."
                                  }
                                },
                                "description": "Specification to configure IPv6 address, subnet mask and gateway info for this virtual network adapter.\nIf unset, no IPv6 addresses are set."
                              },
                              "windows": {
                                "type": "object",
                                "properties": {
                                  "dns_domain": {
                                    "type": "string",
                                    "description": "A DNS domain suffix such as vmware.com.\nIf unset, no DNS domain is set."
                                  },
                                  "dns_servers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "A list of server IP addresses to use for DNS lookup in a Windows guest operating system. \n These servers should be specified in the order of preference. If this list is not empty, and if a DHCP IP address is used, then these settings override the DHCP settings.\n\nIf unset, no DNS servers are set."
                                  },
                                  "wins_servers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "List of WINS Servers to set for the Windows guest operating system. A Maximum of two IP addresses can be specified in this list. The first IP address will be set as the primary WINS server. The second IP address will be set as the secondary WINS server.\nIf unset, no WINS Servers are set."
                                  },
                                  "net_BIOS_mode": {
                                    "enum": [
                                      "USE_DHCP",
                                      "ENABLE",
                                      "DISABLE"
                                    ],
                                    "type": "string",
                                    "description": "NetBIOS setting for Windows.\nIf unset, existing NetBIOS mode will be retained."
                                  }
                                },
                                "description": "Windows settings to be configured for this specific virtual Network adapter. This is valid only for Windows guest operating systems.\nIf unset, no specific Windows settings are set."
                              }
                            },
                            "description": "The IP settings for the associated virtual network adapter."
                          },
                          "mac_address": {
                            "type": "string",
                            "description": "The MAC address of a network adapter being customized.\nIf unset, the customization process maps the the settings from the list of AdapterMappings.IPSettings in the CustomizationSpec.interfaces to the virtual machine's network adapters, in PCI slot order. The first virtual network adapter on the PCI bus is assigned interfaces[0].IPSettings, the second adapter is assigned interfaces[1].IPSettings, and so on."
                          }
                        }
                      },
                      "description": "IP settings that are specific to a particular virtual network adapter. The AdapterMapping structure maps a network adapter's MAC address to its IPSettings. May be empty if there are no network adapters, else should match number of network adapters configured for the VM."
                    },
                    "configuration_spec": {
                      "type": "object",
                      "properties": {
                        "linux_config": {
                          "type": "object",
                          "required": [
                            "hostname",
                            "domain"
                          ],
                          "properties": {
                            "domain": {
                              "type": "string",
                              "description": "The fully qualified domain name."
                            },
                            "hostname": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "enum": [
                                    "FIXED",
                                    "PREFIX",
                                    "VIRTUAL_MACHINE",
                                    "USER_INPUT_REQUIRED"
                                  ],
                                  "type": "string",
                                  "description": "The type of the Name Generator"
                                },
                                "prefix": {
                                  "type": "string",
                                  "description": "Base prefix, to which a unique number is appended.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is PREFIX."
                                },
                                "fixed_name": {
                                  "type": "string",
                                  "description": "The virtual machine name specified by the client.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is FIXED."
                                }
                              },
                              "description": "The network host name of the Linux virtual machine."
                            },
                            "time_zone": {
                              "type": "string",
                              "description": "The case-sensitive time zone, such as Europe/Sofia. Valid time zone values are based on the tz (time zone) database used by Linux. The values are strings (string) in the form \"Area/Location,\" in which Area is a continent or ocean name, and Location is the city, island, or other regional designation. \n See the https://kb.vmware.com/kb/2145518 for a list of supported time zones for different versions in Linux.\n\nIf unset, time zone is not modified inside guest operating system."
                            },
                            "script_text": {
                              "type": "string",
                              "description": "The script to run before and after Linux guest customization.\n The max size of the script is 1500 bytes. As long as the script (shell, perl, python...) has the right \"#!\" in the header, it is supported. The caller should not assume any environment variables when the script is run. \n The script is invoked by the customization engine using the command line: 1) with argument \"precustomization\" before customization, 2) with argument \"postcustomization\" after customization. The script should parse this argument and implement pre-customization or post-customization task code details in the corresponding block. \n\n A Linux shell script example: \n\n  #!/bin/sh\n if [ x$1 == x\"precustomization\" ]; then\n echo \"Do Precustomization tasks\"\n #code for pre-customization actions...\n elif [ x$1 == x\"postcustomization\" ]; then\n echo \"Do Postcustomization tasks\"\n #code for post-customization actions...\n fi\n\n \n\nIf unset, no script will be executed."
                            }
                          },
                          "description": "Guest customization specification for a linux guest operating system\nIf unset, ConfigurationSpec.windows-config must be set. Otherwise, an appropriate fault will be thrown."
                        },
                        "windows_config": {
                          "type": "object",
                          "properties": {
                            "reboot": {
                              "enum": [
                                "REBOOT",
                                "NO_REBOOT",
                                "SHUTDOWN"
                              ],
                              "type": "string",
                              "description": "A value specifying the action that should be taken after customization.\nIf unset, the REBOOT option will be chosen."
                            },
                            "sysprep": {
                              "type": "object",
                              "required": [
                                "user_data",
                                "gui_unattended"
                              ],
                              "properties": {
                                "domain": {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "WORKGROUP",
                                        "DOMAIN"
                                      ],
                                      "type": "string",
                                      "description": "The type of network to join after the customization."
                                    },
                                    "domain": {
                                      "type": "string",
                                      "description": "The domain to which the virtual machine should be joined.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                    },
                                    "workgroup": {
                                      "type": "string",
                                      "description": "The workgroup that the virtual machine should join.\nThis field is optional and it is only relevant when the value of Domain.type is WORKGROUP."
                                    },
                                    "domain_password": {
                                      "type": "string",
                                      "format": "password",
                                      "description": "The domain user password that has permission to join the Domain.domain-username after customization.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                    },
                                    "domain_username": {
                                      "type": "string",
                                      "description": "The domain user that has permission to join the domain after virtual machine is joined.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                    }
                                  },
                                  "description": "Information needed to join a workgroup or domain.\nIf unset, the guest will not be joined to any workgroup or a domain."
                                },
                                "user_data": {
                                  "type": "object",
                                  "required": [
                                    "computer_name",
                                    "full_name",
                                    "organization",
                                    "product_key"
                                  ],
                                  "properties": {
                                    "full_name": {
                                      "type": "string",
                                      "description": "Full name of the end user. Note that this is not the username but full name specified in \"Firstname Lastname\" format."
                                    },
                                    "product_key": {
                                      "type": "string",
                                      "description": "The product Key to use for activating Windows guest operating system."
                                    },
                                    "organization": {
                                      "type": "string",
                                      "description": "Name of the organization that owns the computer."
                                    },
                                    "computer_name": {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "enum": [
                                            "FIXED",
                                            "PREFIX",
                                            "VIRTUAL_MACHINE",
                                            "USER_INPUT_REQUIRED"
                                          ],
                                          "type": "string",
                                          "description": "The type of the Name Generator"
                                        },
                                        "prefix": {
                                          "type": "string",
                                          "description": "Base prefix, to which a unique number is appended.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is PREFIX."
                                        },
                                        "fixed_name": {
                                          "type": "string",
                                          "description": "The virtual machine name specified by the client.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is FIXED."
                                        }
                                      },
                                      "description": "The computer name of the (Windows) virtual machine. A computer name may contain letters (A-Z), numbers(0-9) and hyphens (-) but no spaces or periods (.). The name may not consist entirely of digits. A computer name is restricted to 15 characters in length. If the computer name is longer than 15 characters, it will be truncated to 15 characters. Check HostnameGenerator for various options."
                                    }
                                  },
                                  "description": "Personal data pertaining to the owner of the virtual machine."
                                },
                                "gui_unattended": {
                                  "type": "object",
                                  "required": [
                                    "auto_logon",
                                    "auto_logon_count",
                                    "time_zone"
                                  ],
                                  "properties": {
                                    "password": {
                                      "type": "string",
                                      "format": "password",
                                      "description": "The new administrator password for the machine. To specify that the password should be set to blank (that is, no password), leave it unset.\nIf unset, blank password will be used."
                                    },
                                    "time_zone": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The time zone index for the virtual machine. Numbers correspond to time zones at https://support.microsoft.com/en-us/help/973627/microsoft-time-zone-index-values"
                                    },
                                    "auto_logon": {
                                      "type": "boolean",
                                      "description": "Flag to determine whether or not the machine automatically logs on as Administrator. See the GuiUnattended.password property. If GuiUnattended.auto-logon flag is set, then GuiUnattended.password must not be unset or the guest customization will fail."
                                    },
                                    "auto_logon_count": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "If the GuiUnattended.auto-logon flag is set, then this property specifies the number of times the machine should automatically log on as Administrator. Generally it should be 1, but if the setup requires a number of reboots, you may want to increase it. This number may be determined by the list of commands."
                                    }
                                  },
                                  "description": "Information related to unattended installation."
                                },
                                "gui_run_once_commands": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "A list of commands to run at first user logon, after customizing the guest. These commands are directly mapped to the GuiRunOnce key in the sysprep.xml answer file. These commands are transferred into the sysprep.xml file that VirtualCenter stores on the target virtual disk. For more information about performing unattended installation, check https://technet.microsoft.com/en-us/library/cc771830(v=ws.10).aspx The commands listed here ar executed when a user logs on the first time after customization completes. The logon may be driven by GuiUnattended.auto-logon setting. These commands are directly mapped to the GuiRunOnce key in the\nIf unset, no commands are run."
                                }
                              },
                              "description": "Customization settings like user details, administrator details, etc for the windows guest operating system. Exactly one of WindowsConfiguration.sysprep or WindowsConfiguration.sysprep-xml must be specified.\nIf unset, sysprep settings will not be applied to the windows guest operating system."
                            },
                            "sysprep_xml": {
                              "type": "string",
                              "description": "All settings specified in a XML format. This is the content of a typical answer.xml file that is used by System administrators during the Windows image customization. Check https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/update-windows-settings-and-scripts-create-your-own-answer-file-sxs Exactly one of WindowsConfiguration.sysprep or WindowsConfiguration.sysprep-xml must be specified.\nIf unset, sysprep settings will not be applied to the windows guest operating system."
                            }
                          },
                          "description": "Guest customization specification for a Windows guest operating system\nIf unset, ConfigurationSpec.linux-config must be set. Otherwise, an appropriate fault will be thrown."
                        }
                      },
                      "description": "Settings to be applied to the guest during the customization."
                    },
                    "global_DNS_settings": {
                      "type": "object",
                      "properties": {
                        "dns_servers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of DNS servers, for a virtual network adapter with a static IP address. If this list is empty, then the guest operating system is expected to use a DHCP server to get its DNS server settings. These settings configure the virtual machine to use the specified DNS servers. These DNS server settings are listed in the order of preference.\nIf unset, no DNS servers are set."
                        },
                        "dns_suffix_list": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of name resolution suffixes for the virtual network adapter. This list applies to both Windows and Linux guest customization. For Linux, this setting is global, whereas in Windows, this setting is listed on a per-adapter basis.\nIf unset, no DNS suffixes are set."
                        }
                      },
                      "description": "Global DNS settings constitute the DNS settings that are not specific to a particular virtual network adapter."
                    }
                  },
                  "description": "The specification object."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the specification."
                }
              }
            }
          }
        }
      ]
  listGuestCustomizationSpecs:
    description: |-
      Returns information about at most 1000 visible (subject to permission checks) guest customization specifications in vCenter matching the CustomizationSpecs.FilterSpec.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/guest/customization-specs/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "description",
                  "OS_type",
                  "last_modified"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the guest customization specification.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.guest.CustomizationSpec. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.guest.CustomizationSpec."
                  },
                  "OS_type": {
                    "enum": [
                      "WINDOWS",
                      "LINUX"
                    ],
                    "type": "string",
                    "description": "Guest operating system type for which that this guest customization specification applies."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the guest customization specification."
                  },
                  "last_modified": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and tme when this guest customization specification was last modified."
                  }
                }
              }
            }
          }
        }
      ]
  exportGuestCustomizationSpec:
    description: |-
      Returns the content of the customization specification in the specified format. Note that any passwords in the customization specification will be set to blank values during the export operation.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/guest/customization-specs/nameactionexport/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "format"
          ],
          "properties": {
            "format": {
              "enum": [
                "JSON",
                "XML"
              ],
              "type": "string",
              "description": "The format in which the customization specification has to be returned."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  deleteGuestCustomizationSpec:
    description: |-
      Deletes a customization specification with the specified identifier.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/guest/customization-specs/name/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getGuestCustomizationSpec:
    description: |-
      Returns the guest customization specification from vCenter with the specified identifier.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/guest/customization-specs/name/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "last_modified",
                "spec"
              ],
              "properties": {
                "spec": {
                  "type": "object",
                  "required": [
                    "fingerprint",
                    "spec",
                    "description",
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the specification."
                    },
                    "spec": {
                      "type": "object",
                      "required": [
                        "configuration_spec",
                        "global_DNS_settings",
                        "interfaces"
                      ],
                      "properties": {
                        "interfaces": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "adapter"
                            ],
                            "properties": {
                              "adapter": {
                                "type": "object",
                                "properties": {
                                  "ipv4": {
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "DHCP",
                                          "STATIC",
                                          "USER_INPUT_REQUIRED"
                                        ],
                                        "type": "string",
                                        "description": "The type of the IPv4 configuration."
                                      },
                                      "prefix": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "The IPv4 CIDR prefix, for example, 24. See http://www.oav.net/mirrors/cidr.html for netmask-to-prefix conversion.\nThis field is optional and it is only relevant when the value of Ipv4.type is STATIC."
                                      },
                                      "gateways": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "Gateways for the IPv4 address.\nIf unset, no gateways are set."
                                      },
                                      "ip_address": {
                                        "type": "string",
                                        "description": "The static IPv4 address\nThis field is optional and it is only relevant when the value of Ipv4.type is STATIC."
                                      }
                                    },
                                    "description": "Specification to configure IPv4 address, subnet mask and gateway info for this virtual network adapter.\nIf unset, no IPv4 addresses are set."
                                  },
                                  "ipv6": {
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "ipv6": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "ip_address",
                                            "prefix"
                                          ],
                                          "properties": {
                                            "prefix": {
                                              "type": "integer",
                                              "format": "int64",
                                              "description": "The CIDR prefix for the interface."
                                            },
                                            "ip_address": {
                                              "type": "string",
                                              "description": "Static IPv6 Address."
                                            }
                                          }
                                        },
                                        "description": "IPv6 address\nThis field is optional and it is only relevant when the value of Ipv6.type is STATIC."
                                      },
                                      "type": {
                                        "enum": [
                                          "DHCP",
                                          "STATIC",
                                          "USER_INPUT_REQUIRED"
                                        ],
                                        "type": "string",
                                        "description": "The IPv6 configuration type"
                                      },
                                      "gateways": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "gateways for the IPv6 address.\nIf unset, no gateways are set."
                                      }
                                    },
                                    "description": "Specification to configure IPv6 address, subnet mask and gateway info for this virtual network adapter.\nIf unset, no IPv6 addresses are set."
                                  },
                                  "windows": {
                                    "type": "object",
                                    "properties": {
                                      "dns_domain": {
                                        "type": "string",
                                        "description": "A DNS domain suffix such as vmware.com.\nIf unset, no DNS domain is set."
                                      },
                                      "dns_servers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "A list of server IP addresses to use for DNS lookup in a Windows guest operating system. \n These servers should be specified in the order of preference. If this list is not empty, and if a DHCP IP address is used, then these settings override the DHCP settings.\n\nIf unset, no DNS servers are set."
                                      },
                                      "wins_servers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "List of WINS Servers to set for the Windows guest operating system. A Maximum of two IP addresses can be specified in this list. The first IP address will be set as the primary WINS server. The second IP address will be set as the secondary WINS server.\nIf unset, no WINS Servers are set."
                                      },
                                      "net_BIOS_mode": {
                                        "enum": [
                                          "USE_DHCP",
                                          "ENABLE",
                                          "DISABLE"
                                        ],
                                        "type": "string",
                                        "description": "NetBIOS setting for Windows.\nIf unset, existing NetBIOS mode will be retained."
                                      }
                                    },
                                    "description": "Windows settings to be configured for this specific virtual Network adapter. This is valid only for Windows guest operating systems.\nIf unset, no specific Windows settings are set."
                                  }
                                },
                                "description": "The IP settings for the associated virtual network adapter."
                              },
                              "mac_address": {
                                "type": "string",
                                "description": "The MAC address of a network adapter being customized.\nIf unset, the customization process maps the the settings from the list of AdapterMappings.IPSettings in the CustomizationSpec.interfaces to the virtual machine's network adapters, in PCI slot order. The first virtual network adapter on the PCI bus is assigned interfaces[0].IPSettings, the second adapter is assigned interfaces[1].IPSettings, and so on."
                              }
                            }
                          },
                          "description": "IP settings that are specific to a particular virtual network adapter. The AdapterMapping structure maps a network adapter's MAC address to its IPSettings. May be empty if there are no network adapters, else should match number of network adapters configured for the VM."
                        },
                        "configuration_spec": {
                          "type": "object",
                          "properties": {
                            "linux_config": {
                              "type": "object",
                              "required": [
                                "hostname",
                                "domain"
                              ],
                              "properties": {
                                "domain": {
                                  "type": "string",
                                  "description": "The fully qualified domain name."
                                },
                                "hostname": {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "FIXED",
                                        "PREFIX",
                                        "VIRTUAL_MACHINE",
                                        "USER_INPUT_REQUIRED"
                                      ],
                                      "type": "string",
                                      "description": "The type of the Name Generator"
                                    },
                                    "prefix": {
                                      "type": "string",
                                      "description": "Base prefix, to which a unique number is appended.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is PREFIX."
                                    },
                                    "fixed_name": {
                                      "type": "string",
                                      "description": "The virtual machine name specified by the client.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is FIXED."
                                    }
                                  },
                                  "description": "The network host name of the Linux virtual machine."
                                },
                                "time_zone": {
                                  "type": "string",
                                  "description": "The case-sensitive time zone, such as Europe/Sofia. Valid time zone values are based on the tz (time zone) database used by Linux. The values are strings (string) in the form \"Area/Location,\" in which Area is a continent or ocean name, and Location is the city, island, or other regional designation. \n See the https://kb.vmware.com/kb/2145518 for a list of supported time zones for different versions in Linux.\n\nIf unset, time zone is not modified inside guest operating system."
                                },
                                "script_text": {
                                  "type": "string",
                                  "description": "The script to run before and after Linux guest customization.\n The max size of the script is 1500 bytes. As long as the script (shell, perl, python...) has the right \"#!\" in the header, it is supported. The caller should not assume any environment variables when the script is run. \n The script is invoked by the customization engine using the command line: 1) with argument \"precustomization\" before customization, 2) with argument \"postcustomization\" after customization. The script should parse this argument and implement pre-customization or post-customization task code details in the corresponding block. \n\n A Linux shell script example: \n\n  #!/bin/sh\n if [ x$1 == x\"precustomization\" ]; then\n echo \"Do Precustomization tasks\"\n #code for pre-customization actions...\n elif [ x$1 == x\"postcustomization\" ]; then\n echo \"Do Postcustomization tasks\"\n #code for post-customization actions...\n fi\n\n \n\nIf unset, no script will be executed."
                                }
                              },
                              "description": "Guest customization specification for a linux guest operating system\nIf unset, ConfigurationSpec.windows-config must be set. Otherwise, an appropriate fault will be thrown."
                            },
                            "windows_config": {
                              "type": "object",
                              "properties": {
                                "reboot": {
                                  "enum": [
                                    "REBOOT",
                                    "NO_REBOOT",
                                    "SHUTDOWN"
                                  ],
                                  "type": "string",
                                  "description": "A value specifying the action that should be taken after customization.\nIf unset, the REBOOT option will be chosen."
                                },
                                "sysprep": {
                                  "type": "object",
                                  "required": [
                                    "user_data",
                                    "gui_unattended"
                                  ],
                                  "properties": {
                                    "domain": {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "enum": [
                                            "WORKGROUP",
                                            "DOMAIN"
                                          ],
                                          "type": "string",
                                          "description": "The type of network to join after the customization."
                                        },
                                        "domain": {
                                          "type": "string",
                                          "description": "The domain to which the virtual machine should be joined.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                        },
                                        "workgroup": {
                                          "type": "string",
                                          "description": "The workgroup that the virtual machine should join.\nThis field is optional and it is only relevant when the value of Domain.type is WORKGROUP."
                                        },
                                        "domain_password": {
                                          "type": "string",
                                          "format": "password",
                                          "description": "The domain user password that has permission to join the Domain.domain-username after customization.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                        },
                                        "domain_username": {
                                          "type": "string",
                                          "description": "The domain user that has permission to join the domain after virtual machine is joined.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                        }
                                      },
                                      "description": "Information needed to join a workgroup or domain.\nIf unset, the guest will not be joined to any workgroup or a domain."
                                    },
                                    "user_data": {
                                      "type": "object",
                                      "required": [
                                        "computer_name",
                                        "full_name",
                                        "organization",
                                        "product_key"
                                      ],
                                      "properties": {
                                        "full_name": {
                                          "type": "string",
                                          "description": "Full name of the end user. Note that this is not the username but full name specified in \"Firstname Lastname\" format."
                                        },
                                        "product_key": {
                                          "type": "string",
                                          "description": "The product Key to use for activating Windows guest operating system."
                                        },
                                        "organization": {
                                          "type": "string",
                                          "description": "Name of the organization that owns the computer."
                                        },
                                        "computer_name": {
                                          "type": "object",
                                          "required": [
                                            "type"
                                          ],
                                          "properties": {
                                            "type": {
                                              "enum": [
                                                "FIXED",
                                                "PREFIX",
                                                "VIRTUAL_MACHINE",
                                                "USER_INPUT_REQUIRED"
                                              ],
                                              "type": "string",
                                              "description": "The type of the Name Generator"
                                            },
                                            "prefix": {
                                              "type": "string",
                                              "description": "Base prefix, to which a unique number is appended.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is PREFIX."
                                            },
                                            "fixed_name": {
                                              "type": "string",
                                              "description": "The virtual machine name specified by the client.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is FIXED."
                                            }
                                          },
                                          "description": "The computer name of the (Windows) virtual machine. A computer name may contain letters (A-Z), numbers(0-9) and hyphens (-) but no spaces or periods (.). The name may not consist entirely of digits. A computer name is restricted to 15 characters in length. If the computer name is longer than 15 characters, it will be truncated to 15 characters. Check HostnameGenerator for various options."
                                        }
                                      },
                                      "description": "Personal data pertaining to the owner of the virtual machine."
                                    },
                                    "gui_unattended": {
                                      "type": "object",
                                      "required": [
                                        "auto_logon",
                                        "auto_logon_count",
                                        "time_zone"
                                      ],
                                      "properties": {
                                        "password": {
                                          "type": "string",
                                          "format": "password",
                                          "description": "The new administrator password for the machine. To specify that the password should be set to blank (that is, no password), leave it unset.\nIf unset, blank password will be used."
                                        },
                                        "time_zone": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "The time zone index for the virtual machine. Numbers correspond to time zones at https://support.microsoft.com/en-us/help/973627/microsoft-time-zone-index-values"
                                        },
                                        "auto_logon": {
                                          "type": "boolean",
                                          "description": "Flag to determine whether or not the machine automatically logs on as Administrator. See the GuiUnattended.password property. If GuiUnattended.auto-logon flag is set, then GuiUnattended.password must not be unset or the guest customization will fail."
                                        },
                                        "auto_logon_count": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "If the GuiUnattended.auto-logon flag is set, then this property specifies the number of times the machine should automatically log on as Administrator. Generally it should be 1, but if the setup requires a number of reboots, you may want to increase it. This number may be determined by the list of commands."
                                        }
                                      },
                                      "description": "Information related to unattended installation."
                                    },
                                    "gui_run_once_commands": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A list of commands to run at first user logon, after customizing the guest. These commands are directly mapped to the GuiRunOnce key in the sysprep.xml answer file. These commands are transferred into the sysprep.xml file that VirtualCenter stores on the target virtual disk. For more information about performing unattended installation, check https://technet.microsoft.com/en-us/library/cc771830(v=ws.10).aspx The commands listed here ar executed when a user logs on the first time after customization completes. The logon may be driven by GuiUnattended.auto-logon setting. These commands are directly mapped to the GuiRunOnce key in the\nIf unset, no commands are run."
                                    }
                                  },
                                  "description": "Customization settings like user details, administrator details, etc for the windows guest operating system. Exactly one of WindowsConfiguration.sysprep or WindowsConfiguration.sysprep-xml must be specified.\nIf unset, sysprep settings will not be applied to the windows guest operating system."
                                },
                                "sysprep_xml": {
                                  "type": "string",
                                  "description": "All settings specified in a XML format. This is the content of a typical answer.xml file that is used by System administrators during the Windows image customization. Check https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/update-windows-settings-and-scripts-create-your-own-answer-file-sxs Exactly one of WindowsConfiguration.sysprep or WindowsConfiguration.sysprep-xml must be specified.\nIf unset, sysprep settings will not be applied to the windows guest operating system."
                                }
                              },
                              "description": "Guest customization specification for a Windows guest operating system\nIf unset, ConfigurationSpec.linux-config must be set. Otherwise, an appropriate fault will be thrown."
                            }
                          },
                          "description": "Settings to be applied to the guest during the customization."
                        },
                        "global_DNS_settings": {
                          "type": "object",
                          "properties": {
                            "dns_servers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "List of DNS servers, for a virtual network adapter with a static IP address. If this list is empty, then the guest operating system is expected to use a DHCP server to get its DNS server settings. These settings configure the virtual machine to use the specified DNS servers. These DNS server settings are listed in the order of preference.\nIf unset, no DNS servers are set."
                            },
                            "dns_suffix_list": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "List of name resolution suffixes for the virtual network adapter. This list applies to both Windows and Linux guest customization. For Linux, this setting is global, whereas in Windows, this setting is listed on a per-adapter basis.\nIf unset, no DNS suffixes are set."
                            }
                          },
                          "description": "Global DNS settings constitute the DNS settings that are not specific to a particular virtual network adapter."
                        }
                      },
                      "description": "The specification object."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the specification."
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "The fingerprint is a unique identifier for a given version of the configuration. Each change to the configuration will update this value. A client cannot change this value. If specified when updating a specification, the changes will only be applied if the current fingerprint matches the specified fingerprint. This field can be used to guard against updates that has happened between the specification content was read and until it is applied."
                    }
                  },
                  "description": "The Spec object including specification and metadata information."
                },
                "last_modified": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when the specification was last modified."
                }
              }
            }
          }
        }
      ]
  setGuestCustomizationSpec:
    description: |-
      Sets an existing specification, possibly after retrieving (by using CustomizationSpecs.get) and editing it.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/guest/customization-specs/name/put/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "fingerprint",
                "spec",
                "description",
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the specification."
                },
                "spec": {
                  "type": "object",
                  "required": [
                    "configuration_spec",
                    "global_DNS_settings",
                    "interfaces"
                  ],
                  "properties": {
                    "interfaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "adapter"
                        ],
                        "properties": {
                          "adapter": {
                            "type": "object",
                            "properties": {
                              "ipv4": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "DHCP",
                                      "STATIC",
                                      "USER_INPUT_REQUIRED"
                                    ],
                                    "type": "string",
                                    "description": "The type of the IPv4 configuration."
                                  },
                                  "prefix": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The IPv4 CIDR prefix, for example, 24. See http://www.oav.net/mirrors/cidr.html for netmask-to-prefix conversion.\nThis field is optional and it is only relevant when the value of Ipv4.type is STATIC."
                                  },
                                  "gateways": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Gateways for the IPv4 address.\nIf unset, no gateways are set."
                                  },
                                  "ip_address": {
                                    "type": "string",
                                    "description": "The static IPv4 address\nThis field is optional and it is only relevant when the value of Ipv4.type is STATIC."
                                  }
                                },
                                "description": "Specification to configure IPv4 address, subnet mask and gateway info for this virtual network adapter.\nIf unset, no IPv4 addresses are set."
                              },
                              "ipv6": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "ipv6": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "ip_address",
                                        "prefix"
                                      ],
                                      "properties": {
                                        "prefix": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "The CIDR prefix for the interface."
                                        },
                                        "ip_address": {
                                          "type": "string",
                                          "description": "Static IPv6 Address."
                                        }
                                      }
                                    },
                                    "description": "IPv6 address\nThis field is optional and it is only relevant when the value of Ipv6.type is STATIC."
                                  },
                                  "type": {
                                    "enum": [
                                      "DHCP",
                                      "STATIC",
                                      "USER_INPUT_REQUIRED"
                                    ],
                                    "type": "string",
                                    "description": "The IPv6 configuration type"
                                  },
                                  "gateways": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "gateways for the IPv6 address.\nIf unset, no gateways are set."
                                  }
                                },
                                "description": "Specification to configure IPv6 address, subnet mask and gateway info for this virtual network adapter.\nIf unset, no IPv6 addresses are set."
                              },
                              "windows": {
                                "type": "object",
                                "properties": {
                                  "dns_domain": {
                                    "type": "string",
                                    "description": "A DNS domain suffix such as vmware.com.\nIf unset, no DNS domain is set."
                                  },
                                  "dns_servers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "A list of server IP addresses to use for DNS lookup in a Windows guest operating system. \n These servers should be specified in the order of preference. If this list is not empty, and if a DHCP IP address is used, then these settings override the DHCP settings.\n\nIf unset, no DNS servers are set."
                                  },
                                  "wins_servers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "List of WINS Servers to set for the Windows guest operating system. A Maximum of two IP addresses can be specified in this list. The first IP address will be set as the primary WINS server. The second IP address will be set as the secondary WINS server.\nIf unset, no WINS Servers are set."
                                  },
                                  "net_BIOS_mode": {
                                    "enum": [
                                      "USE_DHCP",
                                      "ENABLE",
                                      "DISABLE"
                                    ],
                                    "type": "string",
                                    "description": "NetBIOS setting for Windows.\nIf unset, existing NetBIOS mode will be retained."
                                  }
                                },
                                "description": "Windows settings to be configured for this specific virtual Network adapter. This is valid only for Windows guest operating systems.\nIf unset, no specific Windows settings are set."
                              }
                            },
                            "description": "The IP settings for the associated virtual network adapter."
                          },
                          "mac_address": {
                            "type": "string",
                            "description": "The MAC address of a network adapter being customized.\nIf unset, the customization process maps the the settings from the list of AdapterMappings.IPSettings in the CustomizationSpec.interfaces to the virtual machine's network adapters, in PCI slot order. The first virtual network adapter on the PCI bus is assigned interfaces[0].IPSettings, the second adapter is assigned interfaces[1].IPSettings, and so on."
                          }
                        }
                      },
                      "description": "IP settings that are specific to a particular virtual network adapter. The AdapterMapping structure maps a network adapter's MAC address to its IPSettings. May be empty if there are no network adapters, else should match number of network adapters configured for the VM."
                    },
                    "configuration_spec": {
                      "type": "object",
                      "properties": {
                        "linux_config": {
                          "type": "object",
                          "required": [
                            "hostname",
                            "domain"
                          ],
                          "properties": {
                            "domain": {
                              "type": "string",
                              "description": "The fully qualified domain name."
                            },
                            "hostname": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "enum": [
                                    "FIXED",
                                    "PREFIX",
                                    "VIRTUAL_MACHINE",
                                    "USER_INPUT_REQUIRED"
                                  ],
                                  "type": "string",
                                  "description": "The type of the Name Generator"
                                },
                                "prefix": {
                                  "type": "string",
                                  "description": "Base prefix, to which a unique number is appended.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is PREFIX."
                                },
                                "fixed_name": {
                                  "type": "string",
                                  "description": "The virtual machine name specified by the client.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is FIXED."
                                }
                              },
                              "description": "The network host name of the Linux virtual machine."
                            },
                            "time_zone": {
                              "type": "string",
                              "description": "The case-sensitive time zone, such as Europe/Sofia. Valid time zone values are based on the tz (time zone) database used by Linux. The values are strings (string) in the form \"Area/Location,\" in which Area is a continent or ocean name, and Location is the city, island, or other regional designation. \n See the https://kb.vmware.com/kb/2145518 for a list of supported time zones for different versions in Linux.\n\nIf unset, time zone is not modified inside guest operating system."
                            },
                            "script_text": {
                              "type": "string",
                              "description": "The script to run before and after Linux guest customization.\n The max size of the script is 1500 bytes. As long as the script (shell, perl, python...) has the right \"#!\" in the header, it is supported. The caller should not assume any environment variables when the script is run. \n The script is invoked by the customization engine using the command line: 1) with argument \"precustomization\" before customization, 2) with argument \"postcustomization\" after customization. The script should parse this argument and implement pre-customization or post-customization task code details in the corresponding block. \n\n A Linux shell script example: \n\n  #!/bin/sh\n if [ x$1 == x\"precustomization\" ]; then\n echo \"Do Precustomization tasks\"\n #code for pre-customization actions...\n elif [ x$1 == x\"postcustomization\" ]; then\n echo \"Do Postcustomization tasks\"\n #code for post-customization actions...\n fi\n\n \n\nIf unset, no script will be executed."
                            }
                          },
                          "description": "Guest customization specification for a linux guest operating system\nIf unset, ConfigurationSpec.windows-config must be set. Otherwise, an appropriate fault will be thrown."
                        },
                        "windows_config": {
                          "type": "object",
                          "properties": {
                            "reboot": {
                              "enum": [
                                "REBOOT",
                                "NO_REBOOT",
                                "SHUTDOWN"
                              ],
                              "type": "string",
                              "description": "A value specifying the action that should be taken after customization.\nIf unset, the REBOOT option will be chosen."
                            },
                            "sysprep": {
                              "type": "object",
                              "required": [
                                "user_data",
                                "gui_unattended"
                              ],
                              "properties": {
                                "domain": {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "WORKGROUP",
                                        "DOMAIN"
                                      ],
                                      "type": "string",
                                      "description": "The type of network to join after the customization."
                                    },
                                    "domain": {
                                      "type": "string",
                                      "description": "The domain to which the virtual machine should be joined.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                    },
                                    "workgroup": {
                                      "type": "string",
                                      "description": "The workgroup that the virtual machine should join.\nThis field is optional and it is only relevant when the value of Domain.type is WORKGROUP."
                                    },
                                    "domain_password": {
                                      "type": "string",
                                      "format": "password",
                                      "description": "The domain user password that has permission to join the Domain.domain-username after customization.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                    },
                                    "domain_username": {
                                      "type": "string",
                                      "description": "The domain user that has permission to join the domain after virtual machine is joined.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                    }
                                  },
                                  "description": "Information needed to join a workgroup or domain.\nIf unset, the guest will not be joined to any workgroup or a domain."
                                },
                                "user_data": {
                                  "type": "object",
                                  "required": [
                                    "computer_name",
                                    "full_name",
                                    "organization",
                                    "product_key"
                                  ],
                                  "properties": {
                                    "full_name": {
                                      "type": "string",
                                      "description": "Full name of the end user. Note that this is not the username but full name specified in \"Firstname Lastname\" format."
                                    },
                                    "product_key": {
                                      "type": "string",
                                      "description": "The product Key to use for activating Windows guest operating system."
                                    },
                                    "organization": {
                                      "type": "string",
                                      "description": "Name of the organization that owns the computer."
                                    },
                                    "computer_name": {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "enum": [
                                            "FIXED",
                                            "PREFIX",
                                            "VIRTUAL_MACHINE",
                                            "USER_INPUT_REQUIRED"
                                          ],
                                          "type": "string",
                                          "description": "The type of the Name Generator"
                                        },
                                        "prefix": {
                                          "type": "string",
                                          "description": "Base prefix, to which a unique number is appended.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is PREFIX."
                                        },
                                        "fixed_name": {
                                          "type": "string",
                                          "description": "The virtual machine name specified by the client.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is FIXED."
                                        }
                                      },
                                      "description": "The computer name of the (Windows) virtual machine. A computer name may contain letters (A-Z), numbers(0-9) and hyphens (-) but no spaces or periods (.). The name may not consist entirely of digits. A computer name is restricted to 15 characters in length. If the computer name is longer than 15 characters, it will be truncated to 15 characters. Check HostnameGenerator for various options."
                                    }
                                  },
                                  "description": "Personal data pertaining to the owner of the virtual machine."
                                },
                                "gui_unattended": {
                                  "type": "object",
                                  "required": [
                                    "auto_logon",
                                    "auto_logon_count",
                                    "time_zone"
                                  ],
                                  "properties": {
                                    "password": {
                                      "type": "string",
                                      "format": "password",
                                      "description": "The new administrator password for the machine. To specify that the password should be set to blank (that is, no password), leave it unset.\nIf unset, blank password will be used."
                                    },
                                    "time_zone": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The time zone index for the virtual machine. Numbers correspond to time zones at https://support.microsoft.com/en-us/help/973627/microsoft-time-zone-index-values"
                                    },
                                    "auto_logon": {
                                      "type": "boolean",
                                      "description": "Flag to determine whether or not the machine automatically logs on as Administrator. See the GuiUnattended.password property. If GuiUnattended.auto-logon flag is set, then GuiUnattended.password must not be unset or the guest customization will fail."
                                    },
                                    "auto_logon_count": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "If the GuiUnattended.auto-logon flag is set, then this property specifies the number of times the machine should automatically log on as Administrator. Generally it should be 1, but if the setup requires a number of reboots, you may want to increase it. This number may be determined by the list of commands."
                                    }
                                  },
                                  "description": "Information related to unattended installation."
                                },
                                "gui_run_once_commands": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "A list of commands to run at first user logon, after customizing the guest. These commands are directly mapped to the GuiRunOnce key in the sysprep.xml answer file. These commands are transferred into the sysprep.xml file that VirtualCenter stores on the target virtual disk. For more information about performing unattended installation, check https://technet.microsoft.com/en-us/library/cc771830(v=ws.10).aspx The commands listed here ar executed when a user logs on the first time after customization completes. The logon may be driven by GuiUnattended.auto-logon setting. These commands are directly mapped to the GuiRunOnce key in the\nIf unset, no commands are run."
                                }
                              },
                              "description": "Customization settings like user details, administrator details, etc for the windows guest operating system. Exactly one of WindowsConfiguration.sysprep or WindowsConfiguration.sysprep-xml must be specified.\nIf unset, sysprep settings will not be applied to the windows guest operating system."
                            },
                            "sysprep_xml": {
                              "type": "string",
                              "description": "All settings specified in a XML format. This is the content of a typical answer.xml file that is used by System administrators during the Windows image customization. Check https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/update-windows-settings-and-scripts-create-your-own-answer-file-sxs Exactly one of WindowsConfiguration.sysprep or WindowsConfiguration.sysprep-xml must be specified.\nIf unset, sysprep settings will not be applied to the windows guest operating system."
                            }
                          },
                          "description": "Guest customization specification for a Windows guest operating system\nIf unset, ConfigurationSpec.linux-config must be set. Otherwise, an appropriate fault will be thrown."
                        }
                      },
                      "description": "Settings to be applied to the guest during the customization."
                    },
                    "global_DNS_settings": {
                      "type": "object",
                      "properties": {
                        "dns_servers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of DNS servers, for a virtual network adapter with a static IP address. If this list is empty, then the guest operating system is expected to use a DHCP server to get its DNS server settings. These settings configure the virtual machine to use the specified DNS servers. These DNS server settings are listed in the order of preference.\nIf unset, no DNS servers are set."
                        },
                        "dns_suffix_list": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of name resolution suffixes for the virtual network adapter. This list applies to both Windows and Linux guest customization. For Linux, this setting is global, whereas in Windows, this setting is listed on a per-adapter basis.\nIf unset, no DNS suffixes are set."
                        }
                      },
                      "description": "Global DNS settings constitute the DNS settings that are not specific to a particular virtual network adapter."
                    }
                  },
                  "description": "The specification object."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the specification."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "The fingerprint is a unique identifier for a given version of the configuration. Each change to the configuration will update this value. A client cannot change this value. If specified when updating a specification, the changes will only be applied if the current fingerprint matches the specified fingerprint. This field can be used to guard against updates that has happened between the specification content was read and until it is applied."
                }
              },
              "description": "The new specification that will overwrite the existing specification."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  createGuestCustomizationSpec:
    description: |-
      Creates a customization specification.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/guest/customization-specs/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "spec",
                "description",
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the specification."
                },
                "spec": {
                  "type": "object",
                  "required": [
                    "configuration_spec",
                    "global_DNS_settings",
                    "interfaces"
                  ],
                  "properties": {
                    "interfaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "adapter"
                        ],
                        "properties": {
                          "adapter": {
                            "type": "object",
                            "properties": {
                              "ipv4": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "DHCP",
                                      "STATIC",
                                      "USER_INPUT_REQUIRED"
                                    ],
                                    "type": "string",
                                    "description": "The type of the IPv4 configuration."
                                  },
                                  "prefix": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The IPv4 CIDR prefix, for example, 24. See http://www.oav.net/mirrors/cidr.html for netmask-to-prefix conversion.\nThis field is optional and it is only relevant when the value of Ipv4.type is STATIC."
                                  },
                                  "gateways": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Gateways for the IPv4 address.\nIf unset, no gateways are set."
                                  },
                                  "ip_address": {
                                    "type": "string",
                                    "description": "The static IPv4 address\nThis field is optional and it is only relevant when the value of Ipv4.type is STATIC."
                                  }
                                },
                                "description": "Specification to configure IPv4 address, subnet mask and gateway info for this virtual network adapter.\nIf unset, no IPv4 addresses are set."
                              },
                              "ipv6": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "ipv6": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "ip_address",
                                        "prefix"
                                      ],
                                      "properties": {
                                        "prefix": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "The CIDR prefix for the interface."
                                        },
                                        "ip_address": {
                                          "type": "string",
                                          "description": "Static IPv6 Address."
                                        }
                                      }
                                    },
                                    "description": "IPv6 address\nThis field is optional and it is only relevant when the value of Ipv6.type is STATIC."
                                  },
                                  "type": {
                                    "enum": [
                                      "DHCP",
                                      "STATIC",
                                      "USER_INPUT_REQUIRED"
                                    ],
                                    "type": "string",
                                    "description": "The IPv6 configuration type"
                                  },
                                  "gateways": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "gateways for the IPv6 address.\nIf unset, no gateways are set."
                                  }
                                },
                                "description": "Specification to configure IPv6 address, subnet mask and gateway info for this virtual network adapter.\nIf unset, no IPv6 addresses are set."
                              },
                              "windows": {
                                "type": "object",
                                "properties": {
                                  "dns_domain": {
                                    "type": "string",
                                    "description": "A DNS domain suffix such as vmware.com.\nIf unset, no DNS domain is set."
                                  },
                                  "dns_servers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "A list of server IP addresses to use for DNS lookup in a Windows guest operating system. \n These servers should be specified in the order of preference. If this list is not empty, and if a DHCP IP address is used, then these settings override the DHCP settings.\n\nIf unset, no DNS servers are set."
                                  },
                                  "wins_servers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "List of WINS Servers to set for the Windows guest operating system. A Maximum of two IP addresses can be specified in this list. The first IP address will be set as the primary WINS server. The second IP address will be set as the secondary WINS server.\nIf unset, no WINS Servers are set."
                                  },
                                  "net_BIOS_mode": {
                                    "enum": [
                                      "USE_DHCP",
                                      "ENABLE",
                                      "DISABLE"
                                    ],
                                    "type": "string",
                                    "description": "NetBIOS setting for Windows.\nIf unset, existing NetBIOS mode will be retained."
                                  }
                                },
                                "description": "Windows settings to be configured for this specific virtual Network adapter. This is valid only for Windows guest operating systems.\nIf unset, no specific Windows settings are set."
                              }
                            },
                            "description": "The IP settings for the associated virtual network adapter."
                          },
                          "mac_address": {
                            "type": "string",
                            "description": "The MAC address of a network adapter being customized.\nIf unset, the customization process maps the the settings from the list of AdapterMappings.IPSettings in the CustomizationSpec.interfaces to the virtual machine's network adapters, in PCI slot order. The first virtual network adapter on the PCI bus is assigned interfaces[0].IPSettings, the second adapter is assigned interfaces[1].IPSettings, and so on."
                          }
                        }
                      },
                      "description": "IP settings that are specific to a particular virtual network adapter. The AdapterMapping structure maps a network adapter's MAC address to its IPSettings. May be empty if there are no network adapters, else should match number of network adapters configured for the VM."
                    },
                    "configuration_spec": {
                      "type": "object",
                      "properties": {
                        "linux_config": {
                          "type": "object",
                          "required": [
                            "hostname",
                            "domain"
                          ],
                          "properties": {
                            "domain": {
                              "type": "string",
                              "description": "The fully qualified domain name."
                            },
                            "hostname": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "enum": [
                                    "FIXED",
                                    "PREFIX",
                                    "VIRTUAL_MACHINE",
                                    "USER_INPUT_REQUIRED"
                                  ],
                                  "type": "string",
                                  "description": "The type of the Name Generator"
                                },
                                "prefix": {
                                  "type": "string",
                                  "description": "Base prefix, to which a unique number is appended.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is PREFIX."
                                },
                                "fixed_name": {
                                  "type": "string",
                                  "description": "The virtual machine name specified by the client.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is FIXED."
                                }
                              },
                              "description": "The network host name of the Linux virtual machine."
                            },
                            "time_zone": {
                              "type": "string",
                              "description": "The case-sensitive time zone, such as Europe/Sofia. Valid time zone values are based on the tz (time zone) database used by Linux. The values are strings (string) in the form \"Area/Location,\" in which Area is a continent or ocean name, and Location is the city, island, or other regional designation. \n See the https://kb.vmware.com/kb/2145518 for a list of supported time zones for different versions in Linux.\n\nIf unset, time zone is not modified inside guest operating system."
                            },
                            "script_text": {
                              "type": "string",
                              "description": "The script to run before and after Linux guest customization.\n The max size of the script is 1500 bytes. As long as the script (shell, perl, python...) has the right \"#!\" in the header, it is supported. The caller should not assume any environment variables when the script is run. \n The script is invoked by the customization engine using the command line: 1) with argument \"precustomization\" before customization, 2) with argument \"postcustomization\" after customization. The script should parse this argument and implement pre-customization or post-customization task code details in the corresponding block. \n\n A Linux shell script example: \n\n  #!/bin/sh\n if [ x$1 == x\"precustomization\" ]; then\n echo \"Do Precustomization tasks\"\n #code for pre-customization actions...\n elif [ x$1 == x\"postcustomization\" ]; then\n echo \"Do Postcustomization tasks\"\n #code for post-customization actions...\n fi\n\n \n\nIf unset, no script will be executed."
                            }
                          },
                          "description": "Guest customization specification for a linux guest operating system\nIf unset, ConfigurationSpec.windows-config must be set. Otherwise, an appropriate fault will be thrown."
                        },
                        "windows_config": {
                          "type": "object",
                          "properties": {
                            "reboot": {
                              "enum": [
                                "REBOOT",
                                "NO_REBOOT",
                                "SHUTDOWN"
                              ],
                              "type": "string",
                              "description": "A value specifying the action that should be taken after customization.\nIf unset, the REBOOT option will be chosen."
                            },
                            "sysprep": {
                              "type": "object",
                              "required": [
                                "user_data",
                                "gui_unattended"
                              ],
                              "properties": {
                                "domain": {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "WORKGROUP",
                                        "DOMAIN"
                                      ],
                                      "type": "string",
                                      "description": "The type of network to join after the customization."
                                    },
                                    "domain": {
                                      "type": "string",
                                      "description": "The domain to which the virtual machine should be joined.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                    },
                                    "workgroup": {
                                      "type": "string",
                                      "description": "The workgroup that the virtual machine should join.\nThis field is optional and it is only relevant when the value of Domain.type is WORKGROUP."
                                    },
                                    "domain_password": {
                                      "type": "string",
                                      "format": "password",
                                      "description": "The domain user password that has permission to join the Domain.domain-username after customization.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                    },
                                    "domain_username": {
                                      "type": "string",
                                      "description": "The domain user that has permission to join the domain after virtual machine is joined.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                    }
                                  },
                                  "description": "Information needed to join a workgroup or domain.\nIf unset, the guest will not be joined to any workgroup or a domain."
                                },
                                "user_data": {
                                  "type": "object",
                                  "required": [
                                    "computer_name",
                                    "full_name",
                                    "organization",
                                    "product_key"
                                  ],
                                  "properties": {
                                    "full_name": {
                                      "type": "string",
                                      "description": "Full name of the end user. Note that this is not the username but full name specified in \"Firstname Lastname\" format."
                                    },
                                    "product_key": {
                                      "type": "string",
                                      "description": "The product Key to use for activating Windows guest operating system."
                                    },
                                    "organization": {
                                      "type": "string",
                                      "description": "Name of the organization that owns the computer."
                                    },
                                    "computer_name": {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "enum": [
                                            "FIXED",
                                            "PREFIX",
                                            "VIRTUAL_MACHINE",
                                            "USER_INPUT_REQUIRED"
                                          ],
                                          "type": "string",
                                          "description": "The type of the Name Generator"
                                        },
                                        "prefix": {
                                          "type": "string",
                                          "description": "Base prefix, to which a unique number is appended.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is PREFIX."
                                        },
                                        "fixed_name": {
                                          "type": "string",
                                          "description": "The virtual machine name specified by the client.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is FIXED."
                                        }
                                      },
                                      "description": "The computer name of the (Windows) virtual machine. A computer name may contain letters (A-Z), numbers(0-9) and hyphens (-) but no spaces or periods (.). The name may not consist entirely of digits. A computer name is restricted to 15 characters in length. If the computer name is longer than 15 characters, it will be truncated to 15 characters. Check HostnameGenerator for various options."
                                    }
                                  },
                                  "description": "Personal data pertaining to the owner of the virtual machine."
                                },
                                "gui_unattended": {
                                  "type": "object",
                                  "required": [
                                    "auto_logon",
                                    "auto_logon_count",
                                    "time_zone"
                                  ],
                                  "properties": {
                                    "password": {
                                      "type": "string",
                                      "format": "password",
                                      "description": "The new administrator password for the machine. To specify that the password should be set to blank (that is, no password), leave it unset.\nIf unset, blank password will be used."
                                    },
                                    "time_zone": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The time zone index for the virtual machine. Numbers correspond to time zones at https://support.microsoft.com/en-us/help/973627/microsoft-time-zone-index-values"
                                    },
                                    "auto_logon": {
                                      "type": "boolean",
                                      "description": "Flag to determine whether or not the machine automatically logs on as Administrator. See the GuiUnattended.password property. If GuiUnattended.auto-logon flag is set, then GuiUnattended.password must not be unset or the guest customization will fail."
                                    },
                                    "auto_logon_count": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "If the GuiUnattended.auto-logon flag is set, then this property specifies the number of times the machine should automatically log on as Administrator. Generally it should be 1, but if the setup requires a number of reboots, you may want to increase it. This number may be determined by the list of commands."
                                    }
                                  },
                                  "description": "Information related to unattended installation."
                                },
                                "gui_run_once_commands": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "A list of commands to run at first user logon, after customizing the guest. These commands are directly mapped to the GuiRunOnce key in the sysprep.xml answer file. These commands are transferred into the sysprep.xml file that VirtualCenter stores on the target virtual disk. For more information about performing unattended installation, check https://technet.microsoft.com/en-us/library/cc771830(v=ws.10).aspx The commands listed here ar executed when a user logs on the first time after customization completes. The logon may be driven by GuiUnattended.auto-logon setting. These commands are directly mapped to the GuiRunOnce key in the\nIf unset, no commands are run."
                                }
                              },
                              "description": "Customization settings like user details, administrator details, etc for the windows guest operating system. Exactly one of WindowsConfiguration.sysprep or WindowsConfiguration.sysprep-xml must be specified.\nIf unset, sysprep settings will not be applied to the windows guest operating system."
                            },
                            "sysprep_xml": {
                              "type": "string",
                              "description": "All settings specified in a XML format. This is the content of a typical answer.xml file that is used by System administrators during the Windows image customization. Check https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/update-windows-settings-and-scripts-create-your-own-answer-file-sxs Exactly one of WindowsConfiguration.sysprep or WindowsConfiguration.sysprep-xml must be specified.\nIf unset, sysprep settings will not be applied to the windows guest operating system."
                            }
                          },
                          "description": "Guest customization specification for a Windows guest operating system\nIf unset, ConfigurationSpec.linux-config must be set. Otherwise, an appropriate fault will be thrown."
                        }
                      },
                      "description": "Settings to be applied to the guest during the customization."
                    },
                    "global_DNS_settings": {
                      "type": "object",
                      "properties": {
                        "dns_servers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of DNS servers, for a virtual network adapter with a static IP address. If this list is empty, then the guest operating system is expected to use a DHCP server to get its DNS server settings. These settings configure the virtual machine to use the specified DNS servers. These DNS server settings are listed in the order of preference.\nIf unset, no DNS servers are set."
                        },
                        "dns_suffix_list": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of name resolution suffixes for the virtual network adapter. This list applies to both Windows and Linux guest customization. For Linux, this setting is global, whereas in Windows, this setting is listed on a per-adapter basis.\nIf unset, no DNS suffixes are set."
                        }
                      },
                      "description": "Global DNS settings constitute the DNS settings that are not specific to a particular virtual network adapter."
                    }
                  },
                  "description": "The specification object."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the specification."
                }
              },
              "description": "The information i.e. name, description and the settings i.e hostname, ip address etc for the new customization specification that needs to be created."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  listIdentityProviders:
    description: |-
      Retrieve all identity providers.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/identity/providers/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "config_tag",
                  "is_default",
                  "provider"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user friendly name for the provider"
                  },
                  "oidc": {
                    "type": "object",
                    "required": [
                      "auth_endpoint",
                      "auth_query_params",
                      "authentication_header",
                      "client_id",
                      "token_endpoint"
                    ],
                    "properties": {
                      "client_id": {
                        "type": "string",
                        "description": "Client identifier to connect to the provider"
                      },
                      "auth_endpoint": {
                        "type": "string",
                        "format": "uri",
                        "description": "Authentication/authorization endpoint of the provider"
                      },
                      "token_endpoint": {
                        "type": "string",
                        "format": "uri",
                        "description": "Token endpoint of the provider"
                      },
                      "logout_endpoint": {
                        "type": "string",
                        "format": "uri",
                        "description": "The endpoint to use for terminating the user's session at the identity provider. This value is automatically derived from the metadata information provided by the OIDC discovery endpoint."
                      },
                      "auth_query_params": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "description": "<p>key/value pairs that are to be appended to the authEndpoint request.</p> <p>How to append to authEndpoint request:</p> If the map is not empty, a \"?\" is added to the endpoint URL, and combination of each k and each string in the v is added with an \"&\" delimiter. Details:<ul> <li>If the value contains only one string, then the key is added with \"k=v\".</li> <li>If the value is an empty list, then the key is added without a \"=v\".</li> <li>If the value contains multiple strings, then the key is repeated in the query-string for each string in the value.</li></ul>"
                      },
                      "discovery_endpoint": {
                        "type": "string",
                        "format": "uri",
                        "description": "Endpoint to retrieve the provider metadata"
                      },
                      "authentication_header": {
                        "type": "string",
                        "description": "The authentication data used as part of request header to acquire or refresh an OAuth2 token. The data format depends on the authentication method used. Example of basic authentication format: Authorization: Basic [base64Encode(clientId + \":\" + secret)]"
                      }
                    }
                  },
                  "oauth2": {
                    "type": "object",
                    "required": [
                      "auth_endpoint",
                      "auth_query_params",
                      "authentication_header",
                      "client_id",
                      "token_endpoint"
                    ],
                    "properties": {
                      "client_id": {
                        "type": "string",
                        "description": "Client identifier to connect to the provider"
                      },
                      "auth_endpoint": {
                        "type": "string",
                        "format": "uri",
                        "description": "Authentication/authorization endpoint of the provider"
                      },
                      "token_endpoint": {
                        "type": "string",
                        "format": "uri",
                        "description": "Token endpoint of the provider"
                      },
                      "auth_query_params": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "description": "<p>key/value pairs that are to be appended to the authEndpoint request.</p> <p>How to append to authEndpoint request:</p> If the map is not empty, a \"?\" is added to the endpoint URL, and combination of each k and each string in the v is added with an \"&\" delimiter. Details:<ul> <li>If the value contains only one string, then the key is added with \"k=v\".</li> <li>If the value is an empty list, then the key is added without a \"=v\".</li> <li>If the value contains multiple strings, then the key is repeated in the query-string for each string in the value.</li></ul>"
                      },
                      "authentication_header": {
                        "type": "string",
                        "description": "The authentication data used as part of request header to acquire or refresh an OAuth2 token. The data format depends on the authentication method used. Example of basic authentication format: Authorization: Basic [base64Encode(clientId + \":\" + secret)]"
                      }
                    }
                  },
                  "provider": {
                    "type": "string",
                    "description": "The identifier of the provider"
                  },
                  "config_tag": {
                    "enum": [
                      "Oauth2",
                      "Oidc"
                    ],
                    "type": "string",
                    "description": "The {@name ConfigType} {@term structure} contains the possible types of vCenter Server identity providers."
                  },
                  "is_default": {
                    "type": "boolean",
                    "description": "Specifies whether the provider is the default provider."
                  },
                  "domain_names": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Set of fully qualified domain names to trust when federating with this identity provider. Tokens from this identity provider will only be validated if the user belongs to one of these domains, and any domain-qualified groups in the tokens will be filtered to include only those groups that belong to one of these domains. If domainNames is an empty set, domain validation behavior at login with this identity provider will be as follows: the user's domain will be parsed from the User Principal Name (UPN) value that is found in the tokens returned by the identity provider. This domain will then be implicitly trusted and used to filter any groups that are also provided in the tokens.",
                    "uniqueItems": true
                  },
                  "auth_query_params": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "description": "<p>key/value pairs that are to be appended to the authEndpoint request.</p> <p>How to append to authEndpoint request:</p> If the map is not empty, a \"?\" is added to the endpoint URL, and combination of each k and each string in the v is added with an \"&\" delimiter. Details:<ul> <li>If the value contains only one string, then the key is added with \"k=v\".</li> <li>If the value is an empty list, then the key is added without a \"=v\".</li> <li>If the value contains multiple strings, then the key is repeated in the query-string for each string in the value.</li></ul>"
                  }
                }
              }
            }
          }
        }
      ]
  createIdentityProvider:
    description: |-
      Create a vCenter Server identity provider.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/identity/providers/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "config_tag"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The user friendly name for the provider. This name can be used for human-readable identification purposes, but it does not have to be unique, as the system will use internal UUIDs to differentiate providers."
                },
                "oidc": {
                  "type": "object",
                  "required": [
                    "claim_map",
                    "client_id",
                    "client_secret",
                    "discovery_endpoint"
                  ],
                  "properties": {
                    "claim_map": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "The map used to transform an OAuth2 claim to a corresponding claim that vCenter Server understands. Currently only the key \"perms\" is supported. The key \"perms\" is used for mapping the \"perms\" claim of incoming JWT. The value is another map with an external group as the key and a vCenter Server group as value."
                    },
                    "client_id": {
                      "type": "string",
                      "description": "Client identifier to connect to the provider"
                    },
                    "client_secret": {
                      "type": "string",
                      "description": "The secret shared between the client and the provider"
                    },
                    "discovery_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "description": "Endpoint to retrieve the provider metadata"
                    }
                  }
                },
                "oauth2": {
                  "type": "object",
                  "required": [
                    "auth_endpoint",
                    "authentication_method",
                    "claim_map",
                    "client_id",
                    "client_secret",
                    "issuer",
                    "public_key_uri",
                    "token_endpoint"
                  ],
                  "properties": {
                    "issuer": {
                      "type": "string",
                      "description": "The identity provider namespace. It is used to validate the issuer in the acquired OAuth2 token."
                    },
                    "claim_map": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "The map used to transform an OAuth2 claim to a corresponding claim that vCenter Server understands. Currently only the key \"perms\" is supported. The key \"perms\" is used for mapping the \"perms\" claim of incoming JWT. The value is another map with an external group as the key and a vCenter Server group as value."
                    },
                    "client_id": {
                      "type": "string",
                      "description": "Client identifier to connect to the provider"
                    },
                    "auth_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "description": "Authentication/authorization endpoint of the provider"
                    },
                    "client_secret": {
                      "type": "string",
                      "description": "The secret shared between the client and the provider"
                    },
                    "public_key_uri": {
                      "type": "string",
                      "format": "uri",
                      "description": "Endpoint to retrieve the provider public key for validation"
                    },
                    "token_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "description": "Token endpoint of the provider"
                    },
                    "auth_query_params": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "description": "<p>key/value pairs that are to be appended to the authEndpoint request.</p> <p>How to append to authEndpoint request:</p> If the map is not empty, a \"?\" is added to the endpoint URL, and combination of each k and each string in the v is added with an \"&\" delimiter. Details:<ul> <li>If the value contains only one string, then the key is added with \"k=v\".</li> <li>If the value is an empty list, then the key is added without a \"=v\".</li> <li>If the value contains multiple strings, then the key is repeated in the query-string for each string in the value.</li></ul>"
                    },
                    "authentication_method": {
                      "enum": [
                        "CLIENT_SECRET_BASIC",
                        "CLIENT_SECRET_POST",
                        "CLIENT_SECRET_JWT",
                        "PRIVATE_KEY_JWT"
                      ],
                      "type": "string",
                      "description": "The {@name Oauth2AuthenticationMethod} {@term structure} contains the possible types of OAuth2 authentication methods."
                    }
                  }
                },
                "org_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The set of orgIds as part of SDDC creation which provides the basis for tenancy",
                  "uniqueItems": true
                },
                "upn_claim": {
                  "type": "string",
                  "description": "Specifies which claim provides the user principal name (UPN) for the user."
                },
                "config_tag": {
                  "enum": [
                    "Oauth2",
                    "Oidc"
                  ],
                  "type": "string",
                  "description": "The {@name ConfigType} {@term structure} contains the possible types of vCenter Server identity providers."
                },
                "is_default": {
                  "type": "boolean",
                  "description": "Specifies whether the provider is the default provider. Setting {@name CreateSpec#isDefault} of current provider to True makes all other providers non-default. If no other providers created in this vCenter Server before, this parameter will be disregarded, and the provider will always be set to the default."
                },
                "domain_names": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Set of fully qualified domain names to trust when federating with this identity provider. Tokens from this identity provider will only be validated if the user belongs to one of these domains, and any domain-qualified groups in the tokens will be filtered to include only those groups that belong to one of these domains.",
                  "uniqueItems": true
                },
                "groups_claim": {
                  "type": "string",
                  "description": "Specifies which claim provides the group membership for the token subject. These groups will be used for mapping to local groups per the claim map."
                },
                "idm_protocol": {
                  "enum": [
                    "REST",
                    "SCIM",
                    "LDAP"
                  ],
                  "type": "string",
                  "description": "The {@name IdmProtocol} {@term structure} contains the possible types of communication protocols to the identity management endpoints."
                },
                "idm_endpoints": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  },
                  "description": "Identity management endpoints. When specified, at least one endpoint must be provided."
                },
                "auth_query_params": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "<p>key/value pairs that are to be appended to the authEndpoint request.</p> <p>How to append to authEndpoint request:</p> If the map is not empty, a \"?\" is added to the endpoint URL, and combination of each k and each string in the v is added with an \"&\" delimiter. Details:<ul> <li>If the value contains only one string, then the key is added with \"k=v\".</li> <li>If the value is an empty list, then the key is added without a \"=v\".</li> <li>If the value contains multiple strings, then the key is repeated in the query-string for each string in the value.</li></ul>"
                },
                "active_directory_over_ldap": {
                  "type": "object",
                  "required": [
                    "groups_base_dn",
                    "password",
                    "server_endpoints",
                    "user_name",
                    "users_base_dn"
                  ],
                  "properties": {
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "Password to connect to the active directory server."
                    },
                    "user_name": {
                      "type": "string",
                      "description": "User name to connect to the active directory server."
                    },
                    "cert_chain": {
                      "type": "object",
                      "required": [
                        "cert_chain"
                      ],
                      "properties": {
                        "cert_chain": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Certificate chain in base64 format"
                        }
                      }
                    },
                    "users_base_dn": {
                      "type": "string",
                      "description": "Base distinguished name for users"
                    },
                    "groups_base_dn": {
                      "type": "string",
                      "description": "Base distinguished name for groups"
                    },
                    "server_endpoints": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      },
                      "description": "Active directory server endpoints. At least one active directory server endpoint must be set."
                    }
                  }
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  deleteIdentityProvider:
    description: |-
      Delete a vCenter Server identity provider.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/identity/providers/provider/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getIdentityProvider:
    description: |-
      Retrieve detailed information of the specified identity provider.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/identity/providers/provider/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "config_tag",
                "is_default",
                "org_ids"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The user friendly name for the provider"
                },
                "oidc": {
                  "type": "object",
                  "required": [
                    "auth_endpoint",
                    "auth_query_params",
                    "authentication_method",
                    "claim_map",
                    "client_id",
                    "client_secret",
                    "discovery_endpoint",
                    "issuer",
                    "public_key_uri",
                    "token_endpoint"
                  ],
                  "properties": {
                    "issuer": {
                      "type": "string",
                      "description": "The identity provider namespace. It is used to validate the issuer in the acquired OAuth2 token"
                    },
                    "claim_map": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "The map used to transform an OAuth2 claim to a corresponding claim that vCenter Server understands. Currently only the key \"perms\" is supported. The key \"perms\" is used for mapping the \"perms\" claim of incoming JWT. The value is another map with an external group as the key and a vCenter Server group as value."
                    },
                    "client_id": {
                      "type": "string",
                      "description": "Client identifier to connect to the provider"
                    },
                    "auth_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "description": "Authentication/authorization endpoint of the provider"
                    },
                    "client_secret": {
                      "type": "string",
                      "description": "The secret shared between the client and the provider"
                    },
                    "public_key_uri": {
                      "type": "string",
                      "format": "uri",
                      "description": "Endpoint to retrieve the provider public key for validation"
                    },
                    "token_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "description": "Token endpoint of the provider"
                    },
                    "logout_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "description": "The endpoint to use for terminating the user's session at the identity provider. This value is automatically derived from the metadata information provided by the OIDC discovery endpoint."
                    },
                    "auth_query_params": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "description": "<p>key/value pairs that are to be appended to the authEndpoint request.</p> <p>How to append to authEndpoint request:</p> If the map is not empty, a \"?\" is added to the endpoint URL, and combination of each k and each string in the v is added with an \"&\" delimiter. Details:<ul> <li>If the value contains only one string, then the key is added with \"k=v\".</li> <li>If the value is an empty list, then the key is added without a \"=v\".</li> <li>If the value contains multiple strings, then the key is repeated in the query-string for each string in the value.</li></ul>"
                    },
                    "discovery_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "description": "Endpoint to retrieve the provider metadata"
                    },
                    "authentication_method": {
                      "enum": [
                        "CLIENT_SECRET_BASIC",
                        "CLIENT_SECRET_POST",
                        "CLIENT_SECRET_JWT",
                        "PRIVATE_KEY_JWT"
                      ],
                      "type": "string",
                      "description": "The {@name Oauth2AuthenticationMethod} {@term structure} contains the possible types of OAuth2 authentication methods."
                    }
                  }
                },
                "oauth2": {
                  "type": "object",
                  "required": [
                    "auth_endpoint",
                    "auth_query_params",
                    "authentication_method",
                    "claim_map",
                    "client_id",
                    "client_secret",
                    "issuer",
                    "public_key_uri",
                    "token_endpoint"
                  ],
                  "properties": {
                    "issuer": {
                      "type": "string",
                      "description": "The identity provider namespace. It is used to validate the issuer in the acquired OAuth2 token"
                    },
                    "claim_map": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "The map used to transform an OAuth2 claim to a corresponding claim that vCenter Server understands. Currently only the key \"perms\" is supported. The key \"perms\" is used for mapping the \"perms\" claim of incoming JWT. The value is another map with an external group as the key and a vCenter Server group as value."
                    },
                    "client_id": {
                      "type": "string",
                      "description": "Client identifier to connect to the provider"
                    },
                    "auth_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "description": "Authentication/authorization endpoint of the provider"
                    },
                    "client_secret": {
                      "type": "string",
                      "description": "The secret shared between the client and the provider"
                    },
                    "public_key_uri": {
                      "type": "string",
                      "format": "uri",
                      "description": "Endpoint to retrieve the provider public key for validation"
                    },
                    "token_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "description": "Token endpoint of the provider"
                    },
                    "auth_query_params": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "description": "<p>key/value pairs that are to be appended to the authEndpoint request.</p> <p>How to append to authEndpoint request:</p> If the map is not empty, a \"?\" is added to the endpoint URL, and combination of each k and each string in the v is added with an \"&\" delimiter. Details:<ul> <li>If the value contains only one string, then the key is added with \"k=v\".</li> <li>If the value is an empty list, then the key is added without a \"=v\".</li> <li>If the value contains multiple strings, then the key is repeated in the query-string for each string in the value.</li></ul>"
                    },
                    "authentication_method": {
                      "enum": [
                        "CLIENT_SECRET_BASIC",
                        "CLIENT_SECRET_POST",
                        "CLIENT_SECRET_JWT",
                        "PRIVATE_KEY_JWT"
                      ],
                      "type": "string",
                      "description": "The {@name Oauth2AuthenticationMethod} {@term structure} contains the possible types of OAuth2 authentication methods."
                    }
                  }
                },
                "org_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The set of orgIds as part of SDDC creation which provides the basis for tenancy",
                  "uniqueItems": true
                },
                "upn_claim": {
                  "type": "string",
                  "description": "Specifies which claim provides the user principal name (UPN) for the user."
                },
                "config_tag": {
                  "enum": [
                    "Oauth2",
                    "Oidc"
                  ],
                  "type": "string",
                  "description": "The {@name ConfigType} {@term structure} contains the possible types of vCenter Server identity providers."
                },
                "is_default": {
                  "type": "boolean",
                  "description": "Specifies whether the provider is the default provider."
                },
                "domain_names": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Set of fully qualified domain names to trust when federating with this identity provider. Tokens from this identity provider will only be validated if the user belongs to one of these domains, and any domain-qualified groups in the tokens will be filtered to include only those groups that belong to one of these domains. If domainNames is an empty set, domain validation behavior at login with this identity provider will be as follows: the user's domain will be parsed from the User Principal Name (UPN) value that is found in the tokens returned by the identity provider. This domain will then be implicitly trusted and used to filter any groups that are also provided in the tokens.",
                  "uniqueItems": true
                },
                "groups_claim": {
                  "type": "string",
                  "description": "Specifies which claim provides the group membership for the token subject. If empty, the default behavior for CSP is used. In this case, the groups for the subject will be comprised of the groups in 'group_names' and 'group_ids' claims."
                },
                "idm_protocol": {
                  "enum": [
                    "REST",
                    "SCIM",
                    "LDAP"
                  ],
                  "type": "string",
                  "description": "The {@name IdmProtocol} {@term structure} contains the possible types of communication protocols to the identity management endpoints."
                },
                "idm_endpoints": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  },
                  "description": "Identity management endpoints."
                },
                "auth_query_params": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "<p>key/value pairs that are to be appended to the authEndpoint request.</p> <p>How to append to authEndpoint request:</p> If the map is not empty, a \"?\" is added to the endpoint URL, and combination of each k and each string in the v is added with an \"&\" delimiter. Details:<ul> <li>If the value contains only one string, then the key is added with \"k=v\".</li> <li>If the value is an empty list, then the key is added without a \"=v\".</li> <li>If the value contains multiple strings, then the key is repeated in the query-string for each string in the value.</li></ul>"
                },
                "active_directory_over_ldap": {
                  "type": "object",
                  "required": [
                    "groups_base_dn",
                    "password",
                    "server_endpoints",
                    "user_name",
                    "users_base_dn"
                  ],
                  "properties": {
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "Password to connect to the active directory server."
                    },
                    "user_name": {
                      "type": "string",
                      "description": "User name to connect to the active directory server."
                    },
                    "cert_chain": {
                      "type": "object",
                      "required": [
                        "cert_chain"
                      ],
                      "properties": {
                        "cert_chain": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Certificate chain in base64 format"
                        }
                      }
                    },
                    "users_base_dn": {
                      "type": "string",
                      "description": "Base distinguished name for users"
                    },
                    "groups_base_dn": {
                      "type": "string",
                      "description": "Base distinguished name for groups"
                    },
                    "server_endpoints": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      },
                      "description": "Active directory server endpoints. At least one active directory server endpoint must be set."
                    }
                  }
                }
              }
            }
          }
        }
      ]
  updateIdentityProvider:
    description: |-
      Update a vCenter Server identity provider.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/identity/providers/provider/patch/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "config_tag"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The user friendly name for the provider. This name can be used for human-readable identification purposes, but it does not have to be unique, as the system will use internal UUIDs to differentiate providers."
                },
                "oidc": {
                  "type": "object",
                  "properties": {
                    "claim_map": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "The map used to transform an OAuth2 claim to a corresponding claim that vCenter Server understands. Currently only the key \"perms\" is supported. The key \"perms\" is used for mapping the \"perms\" claim of incoming JWT. The value is another map with an external group as the key and a vCenter Server group as value."
                    },
                    "client_id": {
                      "type": "string",
                      "description": "Client identifier to connect to the provider"
                    },
                    "client_secret": {
                      "type": "string",
                      "description": "The secret shared between the client and the provider"
                    },
                    "discovery_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "description": "Endpoint to retrieve the provider metadata"
                    }
                  }
                },
                "oauth2": {
                  "type": "object",
                  "properties": {
                    "issuer": {
                      "type": "string",
                      "description": "The identity provider namespace. It is used to validate the issuer in the acquired OAuth2 token"
                    },
                    "claim_map": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "The map used to transform an OAuth2 claim to a corresponding claim that vCenter Server understands. Currently only the key \"perms\" is supported. The key \"perms\" is used for mapping the \"perms\" claim of incoming JWT. The value is another map with an external group as the key and a vCenter Server group as value."
                    },
                    "client_id": {
                      "type": "string",
                      "description": "Client identifier to connect to the provider"
                    },
                    "auth_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "description": "Authentication/authorization endpoint of the provider"
                    },
                    "client_secret": {
                      "type": "string",
                      "description": "Shared secret between identity provider and client"
                    },
                    "public_key_uri": {
                      "type": "string",
                      "format": "uri",
                      "description": "Endpoint to retrieve the provider public key for validation"
                    },
                    "token_endpoint": {
                      "type": "string",
                      "format": "uri",
                      "description": "Token endpoint of the provider."
                    },
                    "auth_query_params": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "description": "key/value pairs that are to be appended to the authEndpoint request. How to append to authEndpoint request: If the map is not empty, a \"?\" is added to the endpoint URL, and combination of each k and each string in the v is added with an \"&\" delimiter. Details: If the value contains only one string, then the key is added with \"k=v\". If the value is an empty list, then the key is added without a \"=v\". If the value contains multiple strings, then the key is repeated in the query-string for each string in the value. If the map is empty, deletes all params."
                    },
                    "authentication_method": {
                      "enum": [
                        "CLIENT_SECRET_BASIC",
                        "CLIENT_SECRET_POST",
                        "CLIENT_SECRET_JWT",
                        "PRIVATE_KEY_JWT"
                      ],
                      "type": "string",
                      "description": "The {@name Oauth2AuthenticationMethod} {@term structure} contains the possible types of OAuth2 authentication methods."
                    }
                  }
                },
                "org_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The set orgIds as part of SDDC creation which provides the basis for tenancy",
                  "uniqueItems": true
                },
                "upn_claim": {
                  "type": "string",
                  "description": "Specifies which claim provides the user principal name (UPN) for the subject of the token."
                },
                "config_tag": {
                  "enum": [
                    "Oauth2",
                    "Oidc"
                  ],
                  "type": "string",
                  "description": "The {@name ConfigType} {@term structure} contains the possible types of vCenter Server identity providers."
                },
                "domain_names": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Set of fully qualified domain names to trust when federating with this identity provider. Tokens from this identity provider will only be validated if the user belongs to one of these domains, and any domain-qualified groups in the tokens will be filtered to include only those groups that belong to one of these domains.",
                  "uniqueItems": true
                },
                "groups_claim": {
                  "type": "string",
                  "description": "Specifies which claim provides the group membership for the token subject."
                },
                "idm_protocol": {
                  "enum": [
                    "REST",
                    "SCIM",
                    "LDAP"
                  ],
                  "type": "string",
                  "description": "The {@name IdmProtocol} {@term structure} contains the possible types of communication protocols to the identity management endpoints."
                },
                "make_default": {
                  "type": "boolean",
                  "description": "Specifies whether to make this the default provider. If {@name UpdateSpec#makeDefault} is set to true, this provider will be flagged as the default provider and any other providers that had previously been flagged as the default will be made non-default. If {@name UpdateSpec#makeDefault} is set to false, this provider's default flag will not be modified."
                },
                "idm_endpoints": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  },
                  "description": "Identity management endpoints. When specified, at least one endpoint must be provided."
                },
                "reset_upn_claim": {
                  "type": "boolean",
                  "description": "Flag indicating whether the user principal name (UPN) claim should be set back to its default value. If this field is set to {@code true}, the user principal name (UPN) claim will be set to 'acct', which is used for backwards compatibility with CSP. If this field is set to {@code false}, the existing user principal name (UPN) claim will be changed to the value specified in {@link #upnClaim}, if any."
                },
                "auth_query_params": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "key/value pairs that are to be appended to the authEndpoint request. How to append to authEndpoint request: If the map is not empty, a \"?\" is added to the endpoint URL, and combination of each k and each string in the v is added with an \"&\" delimiter. Details: If the value contains only one string, then the key is added with \"k=v\". If the value is an empty list, then the key is added without a \"=v\". If the value contains multiple strings, then the key is repeated in the query-string for each string in the value. If the map is empty, deletes all params."
                },
                "reset_groups_claim": {
                  "type": "boolean",
                  "description": "Flag indicating whether any existing groups claim value should be removed. If this field is set to {@code true}, the existing groups claim value is removed which defaults to backwards compatibility with CSP. In this case, the groups for the subject will be comprised of the groups in 'group_names' and 'group_ids' claims. If this field is set to {@code false}, the existing groups claim will be changed to the value specified in {@link #groupsClaim}, if any."
                },
                "active_directory_over_ldap": {
                  "type": "object",
                  "required": [
                    "groups_base_dn",
                    "password",
                    "server_endpoints",
                    "user_name",
                    "users_base_dn"
                  ],
                  "properties": {
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "Password to connect to the active directory server."
                    },
                    "user_name": {
                      "type": "string",
                      "description": "User name to connect to the active directory server."
                    },
                    "cert_chain": {
                      "type": "object",
                      "required": [
                        "cert_chain"
                      ],
                      "properties": {
                        "cert_chain": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Certificate chain in base64 format"
                        }
                      }
                    },
                    "users_base_dn": {
                      "type": "string",
                      "description": "Base distinguished name for users"
                    },
                    "groups_base_dn": {
                      "type": "string",
                      "description": "Base distinguished name for groups"
                    },
                    "server_endpoints": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      },
                      "description": "Active directory server endpoints. At least one active directory server endpoint must be set."
                    }
                  }
                }
              }
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listLCMDiscoveryProducts:
    description: |-
      Retrieves a list of all associated VMware product deployments with vCenter Server in the environment. The list contains both product deployments discovered automatically and deployments registered manually through the API.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires VcLifecycle.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/lcm/discovery/associated-products/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "auto",
              "installed_product",
              "name",
              "version"
            ],
            "properties": {
              "auto": {
                "type": "boolean",
                "description": "Indicates if the product is auto-detected by the system or manually added. If it is set to true it means it is auto-detected."
              },
              "name": {
                "type": "string",
                "description": "A public official product name."
              },
              "version": {
                "type": "string",
                "description": "Current product version."
              },
              "deployments": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The list of hostname/IPs of the instances of the VMware products deployed in the environment. This field would be empty for manually added products."
              },
              "target_version": {
                "type": "string",
                "description": "Future version of the product after upgrade.\nProduct.target-version may not be applicable."
              },
              "installed_product": {
                "type": "string",
                "description": "Identifies a product and a version uniquely. \nThe identifier consists of product internal name and version.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: PRODUCT. When operations return a value of this structure as a result, the field will be an identifier for the resource type: PRODUCT."
              }
            }
          }
        }
      ]
  createLCMDiscoveryProduct:
    description: |-
      Associates a VMware product with vCenter Server manually. The product must be taken from the product catalog API.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires VcLifecycle.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/lcm/discovery/associated-products/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "product_name",
            "version"
          ],
          "properties": {
            "version": {
              "type": "string",
              "description": "Current product version."
            },
            "deployments": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of hostname/IPs of the instances of the VMware products deployed in the environment."
            },
            "product_name": {
              "type": "string",
              "description": "The name of the product."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  deleteLCMDiscoveryProduct:
    description: |-
      Deletes or dissociates a VMware product associated with vCenter Server which was added manually. Automatically discovered VMware products cannot be deleted or dissociated.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires VcLifecycle.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/lcm/discovery/associated-products/product/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getLCMDiscoveryProduct:
    description: |-
      Returns the detailed information of a product associated with vCenter Server.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires VcLifecycle.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/lcm/discovery/associated-products/product/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "auto",
            "installed_product",
            "name",
            "version"
          ],
          "properties": {
            "auto": {
              "type": "boolean",
              "description": "Indicates if the product is auto-detected by the system or manually added. If it is set to true it means it is auto-detected."
            },
            "name": {
              "type": "string",
              "description": "A public official product name."
            },
            "version": {
              "type": "string",
              "description": "Current product version."
            },
            "deployments": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of hostname/IPs of the instances of the VMware products deployed in the environment. This field would be empty for manually added products."
            },
            "target_version": {
              "type": "string",
              "description": "Future version of the product after upgrade.\nProduct.target-version may not be applicable."
            },
            "installed_product": {
              "type": "string",
              "description": "Identifies a product and a version uniquely. \nThe identifier consists of product internal name and version.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: PRODUCT. When operations return a value of this structure as a result, the field will be an identifier for the resource type: PRODUCT."
            }
          }
        }
      ]
  updateLCMDiscoveryProduct:
    description: |-
      Modifies a VMware product associated with vCenter Server which was added manually. Automatically discovered VMware products cannot be modified.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires VcLifecycle.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/lcm/discovery/associated-products/product/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "deployments": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of hostname/IPs of the instances of the VMware products deployed in the environment."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  createLCMDiscoveryInteropReportTask:
    description: |-
      Creates interoperability report between a vCenter Server release version and all registered products with the vCenter Server instance. 
       The result of this operation can be queried by calling the cis.Tasks#get operation where task is the response of this operation.
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/lcm/discovery/interop-reportvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "target_version"
          ],
          "properties": {
            "target_version": {
              "type": "string",
              "description": "The vCenter Server version. \n It is used for checking against the other products registered with that instance of vCenter Server.\n"
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listLCMDiscoveryProductCatalogs:
    description: |-
      Retrieves a list of all VMware products that can be associated with vCenter Server.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires VcLifecycle.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/lcm/discovery/product-catalog/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "versions"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "A product name that the customer is aware of."
              },
              "versions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of versions the customer can select from."
              }
            }
          }
        }
      ]
  getLCMReport:
    description: |-
      Returns the location Reports.Location information for downloading the report for the specified file name. 
       Retrieving a report involves two steps: 
      
         - Step 1: Invoke the Reports.get operation to provision a token and a URI.
         - Step 2: Make an HTTP GET request by using the URI and the token returned in step 1 to retrieve the report.
        
       The HTTP GET request will: 
      
         -  Return 401 (Not Authorized) if the download URI is recognized, but the token is invalid, 404 if the URL is not recognized otherwise return 200 (OK)
         -  Provide the CSV contents as the output of the request. The API accepts the file name as input, reads the contents of that CSV file, and returns this text as the result of the API. 
      
       
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires VcLifecycle.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/lcm/reports/report/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "download_file_token",
            "uri"
          ],
          "properties": {
            "uri": {
              "type": "string",
              "format": "uri",
              "description": "Report Download URI."
            },
            "download_file_token": {
              "type": "object",
              "required": [
                "expiry",
                "token"
              ],
              "properties": {
                "token": {
                  "type": "string",
                  "description": "A one-time, short-lived token required in the HTTP header of the request to the url. This token needs to be passed in as a header with the name \"session-id\"."
                },
                "expiry": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Expiry time of the token"
                }
              }
            }
          }
        }
      ]
  listLCMPendingUpdates:
    description: |-
      Lists all available minor and major updates.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires VcLifecycle.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/lcm/update/pending/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "last_check_time",
            "updates"
          ],
          "properties": {
            "issues": {
              "type": "object",
              "properties": {
                "info": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "message"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The notification id."
                      },
                      "time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the notification was raised/found.\nOnly if the time information is available."
                      },
                      "message": {
                        "type": "object",
                        "required": [
                          "id",
                          "default_message",
                          "args"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                          },
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Arguments to be substituted into a message template."
                          },
                          "default_message": {
                            "type": "string",
                            "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                          }
                        }
                      },
                      "resolution": {
                        "type": "object",
                        "required": [
                          "id",
                          "default_message",
                          "args"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                          },
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Arguments to be substituted into a message template."
                          },
                          "default_message": {
                            "type": "string",
                            "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                          }
                        }
                      }
                    }
                  },
                  "description": "Info notification messages reported.\nOnly set if an info was reported by the appliance task."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "message"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The notification id."
                      },
                      "time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the notification was raised/found.\nOnly if the time information is available."
                      },
                      "message": {
                        "type": "object",
                        "required": [
                          "id",
                          "default_message",
                          "args"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                          },
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Arguments to be substituted into a message template."
                          },
                          "default_message": {
                            "type": "string",
                            "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                          }
                        }
                      },
                      "resolution": {
                        "type": "object",
                        "required": [
                          "id",
                          "default_message",
                          "args"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                          },
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Arguments to be substituted into a message template."
                          },
                          "default_message": {
                            "type": "string",
                            "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                          }
                        }
                      }
                    }
                  },
                  "description": "Error notification messages reported.\nOnly set if an error was reported by the appliance task."
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "message"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The notification id."
                      },
                      "time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the notification was raised/found.\nOnly if the time information is available."
                      },
                      "message": {
                        "type": "object",
                        "required": [
                          "id",
                          "default_message",
                          "args"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                          },
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Arguments to be substituted into a message template."
                          },
                          "default_message": {
                            "type": "string",
                            "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                          }
                        }
                      },
                      "resolution": {
                        "type": "object",
                        "required": [
                          "id",
                          "default_message",
                          "args"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                          },
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Arguments to be substituted into a message template."
                          },
                          "default_message": {
                            "type": "string",
                            "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                          }
                        }
                      }
                    }
                  },
                  "description": "Warning notification messages reported.\nOnly set if an warning was reported by the appliance task."
                }
              }
            },
            "updates": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "build",
                  "category",
                  "execute_URL",
                  "pending_update",
                  "reboot_required",
                  "release_date",
                  "release_notes",
                  "severity",
                  "update_type",
                  "version"
                ],
                "properties": {
                  "build": {
                    "type": "string",
                    "description": "Build number of the vCenter Release"
                  },
                  "version": {
                    "type": "string",
                    "description": "Version of the vSphere update or patch"
                  },
                  "category": {
                    "enum": [
                      "SECURITY",
                      "FIX",
                      "UPDATE",
                      "UPGRADE"
                    ],
                    "type": "string",
                    "description": "The Pending.Category enumerated type defines the type of payload this release has on top of previous release"
                  },
                  "severity": {
                    "enum": [
                      "CRITICAL",
                      "IMPORTANT",
                      "MODERATE",
                      "LOW"
                    ],
                    "type": "string",
                    "description": "Level of severity for applying a given patch or update."
                  },
                  "execute_URL": {
                    "type": "string",
                    "format": "uri",
                    "description": "VAMI or ISO URL for update or upgrade execute phase redirection"
                  },
                  "update_type": {
                    "enum": [
                      "PATCH",
                      "UPDATE",
                      "UPGRADE"
                    ],
                    "type": "string",
                    "description": "The Pending.UpdateType enumerated type defines update type"
                  },
                  "release_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Release date of the vSphere update or patch"
                  },
                  "release_notes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "description": "List of URI pointing to patch or update release notes"
                  },
                  "pending_update": {
                    "type": "string",
                    "description": "Identifier of the given vSphere update\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.lcm.update.pending. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.lcm.update.pending."
                  },
                  "reboot_required": {
                    "type": "boolean",
                    "description": "Flag to suggest a reboot after the release is applied"
                  }
                }
              },
              "description": "List of pending update details"
            },
            "update_count": {
              "type": "integer",
              "format": "int64",
              "description": "Number of pending updates\nOnly set if there are available updates"
            },
            "upgrade_count": {
              "type": "integer",
              "format": "int64",
              "description": "Number of pending upgrades\nOnly set if there are available upgrades"
            },
            "last_check_time": {
              "type": "string",
              "format": "date-time",
              "description": "Time when the software depo was last checked."
            }
          }
        }
      ]
  getLCMPendingUpdate:
    description: |-
      Gets detailed update information.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires VcLifecycle.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/lcm/update/pending/version/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "build",
            "category",
            "description",
            "execute_URL",
            "pending_update",
            "reboot_required",
            "release_date",
            "release_notes",
            "severity",
            "update_type",
            "version"
          ],
          "properties": {
            "build": {
              "type": "string",
              "description": "Build number of the vCenter Release"
            },
            "version": {
              "type": "string",
              "description": "Version of the vSphere update or patch"
            },
            "category": {
              "enum": [
                "SECURITY",
                "FIX",
                "UPDATE",
                "UPGRADE"
              ],
              "type": "string",
              "description": "The Pending.Category enumerated type defines the type of payload this release has on top of previous release"
            },
            "severity": {
              "enum": [
                "CRITICAL",
                "IMPORTANT",
                "MODERATE",
                "LOW"
              ],
              "type": "string",
              "description": "Level of severity for applying a given patch or update."
            },
            "description": {
              "type": "string",
              "description": "Description of the vSphere update"
            },
            "execute_URL": {
              "type": "string",
              "format": "uri",
              "description": "VAMI or ISO URL for update or upgrade execute phase redirection"
            },
            "update_type": {
              "enum": [
                "PATCH",
                "UPDATE",
                "UPGRADE"
              ],
              "type": "string",
              "description": "The Pending.UpdateType enumerated type defines update type"
            },
            "release_date": {
              "type": "string",
              "format": "date-time",
              "description": "Release date of the vSphere update or patch"
            },
            "release_notes": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "description": "List of URI pointing to patch or update release notes"
            },
            "pending_update": {
              "type": "string",
              "description": "Identifier of the given vSphere update\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.lcm.update.pending. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.lcm.update.pending."
            },
            "reboot_required": {
              "type": "boolean",
              "description": "Flag to suggest a reboot after the release is applied"
            }
          }
        }
      ]
  createLCMUpdatePrecheckReport:
    description: |-
      Creates a vCenter Server pre-update compatibility check report for the pending update version. The report can be exported and downloaded in CSV format. 
       The result of this operation can be queried by calling the cis.Tasks#get operation where task is the response of this operation.
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/lcm/update/pending/version/precheck-reportvmw-tasktrue/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getHostsConfig:
    description: |-
      Returns support and licensing information about hosts under a VC.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/capability/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "namespaces_licensed",
            "namespaces_supported"
          ],
          "properties": {
            "namespaces_licensed": {
              "type": "boolean",
              "description": "True if vSphere Namespace feature is licensed on any hosts in this VC."
            },
            "namespaces_supported": {
              "type": "boolean",
              "description": "True if vSphere Namespace feature is supported in this VC."
            }
          }
        }
      ]
  listClusterCompatibility:
    description: |-
      Returns Namespaces compatibility information for all clusters in vCenter matching the ClusterCompatibility.FilterSpec. The result contains only visible (subject to permission checks) clusters.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/cluster-compatibility/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "cluster",
              "compatible",
              "incompatibility_reasons"
            ],
            "properties": {
              "cluster": {
                "type": "string",
                "description": "Identifier of the cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
              },
              "compatible": {
                "type": "boolean",
                "description": "Compatibility of this cluster."
              },
              "incompatibility_reasons": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "default_message",
                    "args"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                    },
                    "args": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Arguments to be substituted into a message template."
                    },
                    "default_message": {
                      "type": "string",
                      "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                    }
                  }
                },
                "description": "Reasons for incompatibility."
              }
            }
          }
        }
      ]
  disableNamespacesOnCluster:
    description: |-
      Disable vSphere Namespaces on the cluster. This operation tears down the Kubernetes instance and the worker nodes associated with vSphere Namespaces enabled cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/clusters/clusteractiondisable/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  enableCluster:
    description: |-
      Enable vSphere Namespaces on the cluster. This operation sets up Kubernetes instance for the cluster along with worker nodes.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/clusters/clusteractionenable/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "ephemeral_storage_policy",
            "image_storage",
            "master_management_network",
            "master_storage_policy",
            "network_provider",
            "service_cidr",
            "size_hint"
          ],
          "properties": {
            "size_hint": {
              "enum": [
                "TINY",
                "SMALL",
                "MEDIUM",
                "LARGE"
              ],
              "type": "string",
              "description": "The SizingHint enumerated type determines the configuration of Kubernetes API server and the worker nodes. It also determines the default values associated with the maximum number of pods and services. Use ClusterSizeInfo.get to get information associated with a SizingHint."
            },
            "master_DNS": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of DNS server IP addresses to use on Kubernetes API server, specified in order of preference.\nIf unset, no default DNS servers are set."
            },
            "worker_DNS": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of DNS server IP addresses to use on the worker nodes, specified in order of preference.\nIf unset, no default DNS servers are set."
            },
            "login_banner": {
              "type": "string",
              "description": "Disclaimer to be displayed prior to login via the Kubectl plugin.\nIf unset, just skip it."
            },
            "service_cidr": {
              "type": "object",
              "required": [
                "address",
                "prefix"
              ],
              "properties": {
                "prefix": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The CIDR prefix."
                },
                "address": {
                  "type": "string",
                  "description": "The IPv4 address."
                }
              }
            },
            "image_storage": {
              "type": "object",
              "required": [
                "storage_policy"
              ],
              "properties": {
                "storage_policy": {
                  "type": "string",
                  "description": "Identifier of the storage policy.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile."
                }
              }
            },
            "nsx_deployment": {
              "enum": [
                "EMBEDDED"
              ],
              "type": "string",
              "description": "Identifies the type of NSX deployment used for this vSphere Namespaces Cluster. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
            },
            "nsx_enable_spec": {
              "type": "object",
              "required": [
                "cluster_enable_spec",
                "edge_cluster_enable_spec"
              ],
              "properties": {
                "cluster_enable_spec": {
                  "type": "object",
                  "required": [
                    "dv_switch",
                    "overlay_network"
                  ],
                  "properties": {
                    "dv_switch": {
                      "type": "string",
                      "description": "The vSphere Distributed Switch (VDS) to be used for hosts' transport node configuration. All the hosts in the vSphere cluster must be connected to this VDS. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: DistributedVirtualSwitch. When operations return a value of this structure as a result, the field will be an identifier for the resource type: DistributedVirtualSwitch."
                    },
                    "overlay_network": {
                      "type": "object",
                      "properties": {
                        "mode": {
                          "enum": [
                            "DHCP",
                            "IP_POOL"
                          ],
                          "type": "string",
                          "description": "The IpAllocationMode enumerated type defines different address allocation modes. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                        },
                        "vlan": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The VLAN identifier for this network. Possible values: \n   -  A value from 1 to 4094 specifies a VLAN ID for the network. \n  -  Any other value (including 0) is invalid. \n. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is currently required. It is optional for future development."
                        },
                        "ip_pool": {
                          "type": "string",
                          "description": "ID(Name) of the existing NSX IP pool. If the ClusterOverlayNetworkSpec.mode is set to IP_POOL and ClusterOverlayNetworkSpec.create-ip-pool is set to false, then this field contains the ID of an existing NSX IP pool to be used for the network interface. The IP address from this NSX IP pool is assigned to a new vmnic on each host in the vSphere cluster. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nTo be unset when ClusterOverlayNetworkSpec.create-ip-pool is true. If it is set when ClusterOverlayNetworkSpec.create-ip-pool is set to true, then it is ignored.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: nsx.pools.ip_pool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: nsx.pools.ip_pool."
                        },
                        "ip_pool_spec": {
                          "type": "object",
                          "required": [
                            "gateway",
                            "name"
                          ],
                          "properties": {
                            "cidr": {
                              "type": "object",
                              "required": [
                                "address",
                                "prefix"
                              ],
                              "properties": {
                                "prefix": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The prefix length in the IPv4 CIDR notation. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                                },
                                "address": {
                                  "type": "string",
                                  "description": "The IPv4 address. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                                }
                              }
                            },
                            "name": {
                              "type": "string",
                              "description": "The ID(Name) of the NSX IP pool. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: nsx.pools.ip_pool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: nsx.pools.ip_pool."
                            },
                            "gateway": {
                              "type": "string",
                              "description": "The IPv4 address of the gateway associated with the NSX IP pool. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                            },
                            "ip_range": {
                              "type": "object",
                              "required": [
                                "size_specifier",
                                "starting_address",
                                "subnet_mask"
                              ],
                              "properties": {
                                "subnet_mask": {
                                  "type": "string",
                                  "description": "The subnet mask to be set. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                                },
                                "address_count": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "A positive number denoting the number of IP addresses in the range. Addresses are derived by incrementing Ipv4Range.starting-address. This field is for future use. It is not supported yet. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Ipv4Range.size-specifier is ADDRESS_COUNT."
                                },
                                "ending_address": {
                                  "type": "string",
                                  "description": "The IPv4 address denoting the end of the range. The range includes the Ipv4Range.ending-address. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Ipv4Range.size-specifier is ENDING_ADDRESS."
                                },
                                "size_specifier": {
                                  "enum": [
                                    "ENDING_ADDRESS",
                                    "ADDRESS_COUNT"
                                  ],
                                  "type": "string",
                                  "description": "The Ipv4Range.SizeSpecifier enumerated type defines the ways to specify the ending address in an IPv4 address range. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                                },
                                "starting_address": {
                                  "type": "string",
                                  "description": "The IPv4 address denoting the start of the range. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                                }
                              }
                            }
                          }
                        },
                        "create_ip_pool": {
                          "type": "boolean",
                          "description": "Specifies if a new NSX IP pool must be used for IP address allocation for this network interface. This field is required if ClusterOverlayNetworkSpec.mode is set to IP_POOL. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of ClusterOverlayNetworkSpec.mode is IP_POOL."
                        }
                      }
                    }
                  }
                },
                "edge_cluster_enable_spec": {
                  "type": "object",
                  "required": [
                    "edge_nodes",
                    "management_network",
                    "overlay_network",
                    "placement",
                    "uplink_network"
                  ],
                  "properties": {
                    "placement": {
                      "type": "object",
                      "required": [
                        "create_resource_pool"
                      ],
                      "properties": {
                        "resource_pool": {
                          "type": "string",
                          "description": "Identifier for the resource pool associated with the NSX Edge node(s). Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nTo be unset when PlacementSpec.create-resource-pool is true. If unset and PlacementSpec.create-resource-pool is set to false, then the root resource pool will be associated with the NSX Edge node(s).\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool."
                        },
                        "resource_pool_name": {
                          "type": "string",
                          "description": "Name of the new resource pool to be created and associated with the NSX Edge node(s). Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nTo be unset when PlacementSpec.create-resource-pool is false."
                        },
                        "create_resource_pool": {
                          "type": "boolean",
                          "description": "Specifies if a new resource pool should be created. If it is set to true, a new resource pool with the name PlacementSpec.resource-pool-name will be created and used for NSX Edge node(s). If it is set to false and PlacementSpec.resource-pool is set, then the existing resource pool identified by PlacementSpec.resource-pool will be used for NSX Edge node(s). If it is set to false and PlacementSpec.resource-pool unset, then the root resource pool will be associated with the NSX Edge node(s). Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                        }
                      }
                    },
                    "edge_nodes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "datastore",
                          "management_ip_address",
                          "uplink_ip_address"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the virtual machine for the NSX Edge node. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is currently required. It is optional for future development."
                          },
                          "hostname": {
                            "type": "string",
                            "description": "A fully qualified domain name (FQDN) for the NSX Edge node. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is currently required. It is optional for future development."
                          },
                          "password": {
                            "type": "string",
                            "format": "password",
                            "description": "Password of the virtual machine for the NSX Edge node. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is currently required. It is optional for future development."
                          },
                          "datastore": {
                            "type": "string",
                            "description": "Identifier for the datastore associated with the NSX Edge node. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore."
                          },
                          "uplink_ip_address": {
                            "type": "string",
                            "description": "IP address for the interface on the uplink network. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                          },
                          "management_ip_address": {
                            "type": "string",
                            "description": "IP address for the interface on the management network. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                          }
                        }
                      },
                      "description": "List of specifications for the NSX Edge node(s). This list must have two elements. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                    },
                    "uplink_network": {
                      "type": "object",
                      "required": [
                        "gateway",
                        "subnet_mask"
                      ],
                      "properties": {
                        "vlan": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The VLAN identifier for the network. Possible values: \n   -  A value from 1 to 4094 specifies a VLAN ID for the network. \n  -  Any other value (including 0) is invalid. \n. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is currently required. It is optional for future development."
                        },
                        "gateway": {
                          "type": "string",
                          "description": "Gateway IP address for the interface on the network. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                        },
                        "subnet_mask": {
                          "type": "string",
                          "description": "Subnet mask for the interface on the network. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                        }
                      }
                    },
                    "overlay_network": {
                      "type": "object",
                      "required": [
                        "create_ip_pool"
                      ],
                      "properties": {
                        "vlan": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The VLAN identifier for this network. Possible values: \n   -  A value from 1 to 4094 specifies a VLAN ID for the network. \n  -  Any other value (including 0) is invalid. \n. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is currently required. It is optional for future development."
                        },
                        "ip_pool": {
                          "type": "string",
                          "description": "ID(Name) of the existing NSX IP pool. If EdgeOverlayNetworkSpec.create-ip-pool is set to false, then this field contains the ID of an existing NSX IP pool to be used for the network interface. The IP address from this NSX IP pool is assigned to the tunnel endpoint on each NSX Edge node in the vSphere cluster. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nTo be unset when EdgeOverlayNetworkSpec.create-ip-pool is true. If it is set when EdgeOverlayNetworkSpec.create-ip-pool is set to true, then it is ignored.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: nsx.pools.ip_pool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: nsx.pools.ip_pool."
                        },
                        "ip_pool_spec": {
                          "type": "object",
                          "required": [
                            "gateway",
                            "name"
                          ],
                          "properties": {
                            "cidr": {
                              "type": "object",
                              "required": [
                                "address",
                                "prefix"
                              ],
                              "properties": {
                                "prefix": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The prefix length in the IPv4 CIDR notation. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                                },
                                "address": {
                                  "type": "string",
                                  "description": "The IPv4 address. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                                }
                              }
                            },
                            "name": {
                              "type": "string",
                              "description": "The ID(Name) of the NSX IP pool. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: nsx.pools.ip_pool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: nsx.pools.ip_pool."
                            },
                            "gateway": {
                              "type": "string",
                              "description": "The IPv4 address of the gateway associated with the NSX IP pool. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                            },
                            "ip_range": {
                              "type": "object",
                              "required": [
                                "size_specifier",
                                "starting_address",
                                "subnet_mask"
                              ],
                              "properties": {
                                "subnet_mask": {
                                  "type": "string",
                                  "description": "The subnet mask to be set. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                                },
                                "address_count": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "A positive number denoting the number of IP addresses in the range. Addresses are derived by incrementing Ipv4Range.starting-address. This field is for future use. It is not supported yet. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Ipv4Range.size-specifier is ADDRESS_COUNT."
                                },
                                "ending_address": {
                                  "type": "string",
                                  "description": "The IPv4 address denoting the end of the range. The range includes the Ipv4Range.ending-address. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Ipv4Range.size-specifier is ENDING_ADDRESS."
                                },
                                "size_specifier": {
                                  "enum": [
                                    "ENDING_ADDRESS",
                                    "ADDRESS_COUNT"
                                  ],
                                  "type": "string",
                                  "description": "The Ipv4Range.SizeSpecifier enumerated type defines the ways to specify the ending address in an IPv4 address range. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                                },
                                "starting_address": {
                                  "type": "string",
                                  "description": "The IPv4 address denoting the start of the range. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                                }
                              }
                            }
                          }
                        },
                        "create_ip_pool": {
                          "type": "boolean",
                          "description": "Specifies if a new NSX IP pool must be used for IP address allocation for this network interface. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                        }
                      }
                    },
                    "management_network": {
                      "type": "object",
                      "required": [
                        "gateway",
                        "network",
                        "subnet_mask"
                      ],
                      "properties": {
                        "gateway": {
                          "type": "string",
                          "description": "Gateway IP address for the interface on the network. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                        },
                        "network": {
                          "type": "string",
                          "description": "Identifier for the network. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: DistributedVirtualPortgroup. When operations return a value of this structure as a result, the field will be an identifier for the resource type: DistributedVirtualPortgroup."
                        },
                        "subnet_mask": {
                          "type": "string",
                          "description": "Subnet mask for the interface on the network. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                        }
                      }
                    }
                  }
                }
              }
            },
            "Master_DNS_names": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of additional DNS names to associate with the Kubernetes API server. These DNS names are embedded in the TLS certificate presented by the API server.\nIf unset, no additional DNS names are embedded in the TLS certificate."
            },
            "network_provider": {
              "enum": [
                "NSXT_CONTAINER_PLUGIN"
              ],
              "type": "string",
              "description": "Identifies the network plugin that cluster networking functionalities for this vSphere Namespaces Cluster."
            },
            "master_NTP_servers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of NTP server DNS names or IP addresses to use on Kubernetes API server, specified in order of preference.\nIf unset, VMware Tools based time synchronization is enabled."
            },
            "master_storage_policy": {
              "type": "string",
              "description": "Identifier of storage policy associated with Kubernetes API server.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile."
            },
            "default_image_registry": {
              "type": "object",
              "required": [
                "hostname"
              ],
              "properties": {
                "port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Port number of the container image registry.\nIf unset, defaults to 443."
                },
                "hostname": {
                  "type": "string",
                  "description": "IP address or the hostname of container image registry."
                }
              }
            },
            "default_image_repository": {
              "type": "string",
              "description": "Default image repository to use when Kubernetes Pod container specification does not specify it as part of the container image name.\nIf unset, defaults to Docker Hub official repository in case of Docker Hub image registry, otherwise defaults to empty string."
            },
            "ephemeral_storage_policy": {
              "type": "string",
              "description": "Identifier of storage policy associated with ephemeral disks of all the Kubernetes Pods in the cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile."
            },
            "ncp_cluster_network_spec": {
              "type": "object",
              "required": [
                "egress_cidrs",
                "ingress_cidrs",
                "pod_cidrs"
              ],
              "properties": {
                "pod_cidrs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "address",
                      "prefix"
                    ],
                    "properties": {
                      "prefix": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The CIDR prefix."
                      },
                      "address": {
                        "type": "string",
                        "description": "The IPv4 address."
                      }
                    }
                  },
                  "description": "CIDR blocks from which Kubernetes allocates pod IP addresses. This range should not overlap with those in vcenter.namespace_management.EnableSpec#serviceCidr, Clusters.NCPClusterNetworkEnableSpec.ingress-cidrs, Clusters.NCPClusterNetworkEnableSpec.egress-cidrs, or other services running in the datacenter. All Pod CIDR blocks must be of at least subnet size /23."
                },
                "egress_cidrs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "address",
                      "prefix"
                    ],
                    "properties": {
                      "prefix": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The CIDR prefix."
                      },
                      "address": {
                        "type": "string",
                        "description": "The IPv4 address."
                      }
                    }
                  },
                  "description": "CIDR blocks from which NSX assigns IP addresses used for performing SNAT from container IPs to external IPs. These ranges should not overlap with those in Clusters.NCPClusterNetworkEnableSpec.pod-cidrs, vcenter.namespace_management.EnableSpec#serviceCidr, Clusters.NCPClusterNetworkEnableSpec.ingress-cidrs, or other services running in the datacenter."
                },
                "ingress_cidrs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "address",
                      "prefix"
                    ],
                    "properties": {
                      "prefix": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The CIDR prefix."
                      },
                      "address": {
                        "type": "string",
                        "description": "The IPv4 address."
                      }
                    }
                  },
                  "description": "CIDR blocks from which NSX assigns IP addresses for Kubernetes Ingresses and Kubernetes Services of type LoadBalancer. These ranges should not overlap with those in Clusters.NCPClusterNetworkEnableSpec.pod-cidrs, vcenter.namespace_management.EnableSpec#serviceCidr, Clusters.NCPClusterNetworkEnableSpec.egress-cidrs, or other services running in the datacenter."
                },
                "nsx_edge_cluster": {
                  "type": "string",
                  "description": "NSX Edge Cluster to be used for Kubernetes Services of type LoadBalancer, Kubernetes Ingresses, and NSX SNAT.\nThis field is required when configuring a cluster that uses NSX-T. If unset and using NSXe, the system will choose a suitable NSX Edge Cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: NSXEdgeCluster. When operations return a value of this structure as a result, the field will be an identifier for the resource type: NSXEdgeCluster."
                },
                "cluster_distributed_switch": {
                  "type": "string",
                  "description": "vSphere Distributed Switch used to connect this cluster.\nThis field is required when configuring a cluster that uses NSX-T. If unset and using NSXe, the system will choose a suitable vSphere Distributed Switch.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vSphereDistributedSwitch. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vSphereDistributedSwitch."
                }
              }
            },
            "master_DNS_search_domains": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of domains (for example \"vmware.com\") to be searched when trying to lookup a host name on Kubernetes API server, specified in order of preference.\nIf unset, no default DNS search domains are set."
            },
            "master_management_network": {
              "type": "object",
              "required": [
                "mode",
                "network"
              ],
              "properties": {
                "mode": {
                  "enum": [
                    "DHCP",
                    "STATICRANGE"
                  ],
                  "type": "string",
                  "description": "The Clusters.NetworkSpec.Ipv4Mode enumerated type defines various IPv4 address assignment modes."
                },
                "network": {
                  "type": "string",
                  "description": "Identifier for the network.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network."
                },
                "floating_IP": {
                  "type": "string",
                  "description": "Optionally specify the Floating IP used by the HA master cluster in the DHCP case.\nThis field is optional and it is only relevant when the value of Clusters.NetworkSpec.mode is DHCP."
                },
                "address_range": {
                  "type": "object",
                  "required": [
                    "address_count",
                    "gateway",
                    "starting_address",
                    "subnet_mask"
                  ],
                  "properties": {
                    "gateway": {
                      "type": "string",
                      "description": "The IPv4 address of the gateway associated with the range indicated by Clusters.Ipv4Range.starting-address and Clusters.Ipv4Range.address-count."
                    },
                    "subnet_mask": {
                      "type": "string",
                      "description": "Subnet mask to be set."
                    },
                    "address_count": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The number of IP addresses in the range. Addresses are derived by incrementing Clusters.Ipv4Range.starting-address."
                    },
                    "starting_address": {
                      "type": "string",
                      "description": "The IPv4 address denoting the start of the range."
                    }
                  }
                }
              }
            },
            "default_kubernetes_service_content_library": {
              "type": "string",
              "description": "Identifier of the Content Library which holds the VM Images for vSphere Kubernetes Service. This Content Library should be subscribed to VMware's hosted vSphere Kubernetes Service Repository.\nIf unset, the Content Library identifier will not be set.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  rotatePasswordCluster:
    description: |-
      Request a new root password for all control plane nodes in the cluster. This operation generates a new root password and configures every control plane node in the cluster to accept it for authentication.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/clusters/clusteractionrotate_password/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getNamespaceManagementCluster:
    description: |-
      Returns information about a specific cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/clusters/cluster/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "api_server_cluster_endpoint",
            "api_server_management_endpoint",
            "api_servers",
            "config_status",
            "kubernetes_status",
            "kubernetes_status_messages",
            "messages",
            "network_provider",
            "service_cidr",
            "stat_summary"
          ],
          "properties": {
            "messages": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "severity"
                ],
                "properties": {
                  "details": {
                    "type": "object",
                    "required": [
                      "id",
                      "default_message",
                      "args"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                      },
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Arguments to be substituted into a message template."
                      },
                      "default_message": {
                        "type": "string",
                        "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                      }
                    }
                  },
                  "severity": {
                    "enum": [
                      "INFO",
                      "WARNING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "The Clusters.Message.Severity enumerated type represents the severity of the message."
                  }
                }
              },
              "description": "Current set of messages associated with the object."
            },
            "master_DNS": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of DNS server IP addresses to use on Kubernetes API server, specified in order of preference."
            },
            "worker_DNS": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of DNS server IP addresses to use for pods that execute on the worker nodes (which are native pods on ESXi hosts in the vSphere Namespaces Supervisor)."
            },
            "api_servers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Identifier of the Kubernetes API servers. These are the IP addresses of the VM instances for the Kubernetes control plane on the management network.",
              "uniqueItems": true
            },
            "service_cidr": {
              "type": "object",
              "required": [
                "address",
                "prefix"
              ],
              "properties": {
                "prefix": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The CIDR prefix."
                },
                "address": {
                  "type": "string",
                  "description": "The IPv4 address."
                }
              }
            },
            "stat_summary": {
              "type": "object",
              "required": [
                "cpu_capacity",
                "cpu_used",
                "memory_capacity",
                "memory_used",
                "storage_capacity",
                "storage_used"
              ],
              "properties": {
                "cpu_used": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Overall CPU usage of the cluster, in MHz. This is the sum of CPU usage across all worker nodes in the cluster."
                },
                "memory_used": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Overall memory usage of the cluster, in mebibytes. This is the sum of memory usage across all worker nodes in the cluster."
                },
                "cpu_capacity": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total CPU capacity in the cluster available for vSphere Namespaces, in MHz. This is the sum of CPU capacities from all worker nodes in the cluster."
                },
                "storage_used": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Overall storage used by the cluster, in mebibytes. This is the sum of storage used across all worker nodes in the cluster."
                },
                "memory_capacity": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total memory capacity of the cluster available for vSphere Namespaces, in mebibytes. This is the sum of memory capacities from all worker nodesin the cluster."
                },
                "storage_capacity": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Overall storage capacity of the cluster available for vSphere Namespaces, in mebibytes. This is the sum of total storage available from all worker nodes in the cluster."
                }
              }
            },
            "config_status": {
              "enum": [
                "CONFIGURING",
                "REMOVING",
                "RUNNING",
                "ERROR"
              ],
              "type": "string",
              "description": "The Clusters.ConfigStatus enumerated type describes the status of reaching the desired state configuration for the cluster."
            },
            "network_provider": {
              "enum": [
                "NSXT_CONTAINER_PLUGIN"
              ],
              "type": "string",
              "description": "Identifies the network plugin that cluster networking functionalities for this vSphere Namespaces Cluster."
            },
            "kubernetes_status": {
              "enum": [
                "READY",
                "WARNING",
                "ERROR"
              ],
              "type": "string",
              "description": "The Clusters.KubernetesStatus enumerated type describes the cluster's ability to deploy pods."
            },
            "ncp_cluster_network_info": {
              "type": "object",
              "required": [
                "cluster_distributed_switch",
                "default_ingress_tls_certificate",
                "egress_cidrs",
                "ingress_cidrs",
                "nsx_edge_cluster",
                "pod_cidrs"
              ],
              "properties": {
                "pod_cidrs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "address",
                      "prefix"
                    ],
                    "properties": {
                      "prefix": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The CIDR prefix."
                      },
                      "address": {
                        "type": "string",
                        "description": "The IPv4 address."
                      }
                    }
                  },
                  "description": "CIDR blocks from which Kubernetes allocates pod IP addresses."
                },
                "egress_cidrs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "address",
                      "prefix"
                    ],
                    "properties": {
                      "prefix": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The CIDR prefix."
                      },
                      "address": {
                        "type": "string",
                        "description": "The IPv4 address."
                      }
                    }
                  },
                  "description": "CIDR blocks from which NSX assigns IP addresses used for performing SNAT from container IPs to external IPs."
                },
                "ingress_cidrs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "address",
                      "prefix"
                    ],
                    "properties": {
                      "prefix": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The CIDR prefix."
                      },
                      "address": {
                        "type": "string",
                        "description": "The IPv4 address."
                      }
                    }
                  },
                  "description": "CIDR blocks from which NSX assigns IP addresses for Kubernetes Ingresses and Kubernetes Services of type LoadBalancer."
                },
                "nsx_edge_cluster": {
                  "type": "string",
                  "description": "NSX Edge Cluster to be used for Kubernetes Services of type LoadBalancer, Kubernetes Ingresses, and NSX SNAT.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: NSXEdgeCluster. When operations return a value of this structure as a result, the field will be an identifier for the resource type: NSXEdgeCluster."
                },
                "cluster_distributed_switch": {
                  "type": "string",
                  "description": "vSphere Distributed Switch used to connect this cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vSphereDistributedSwitch. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vSphereDistributedSwitch."
                },
                "default_ingress_tls_certificate": {
                  "type": "string",
                  "description": "PEM-encoded x509 certificate used by NSX as a default fallback certificate for Kubernetes Ingress services."
                }
              }
            },
            "tls_endpoint_certificate": {
              "type": "string",
              "description": "PEM-encoded x509 certificate used by TLS endpoint on Kubernetes API servers when accessed via the load balancer, e.g. devops user on corporate network. This certificate is only valid for use with the apiServerClusterEndpoint."
            },
            "master_DNS_search_domains": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of domains (for example \"vmware.com\") to be searched when trying to lookup a host name on Kubernetes API server, specified in order of preference."
            },
            "kubernetes_status_messages": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "severity"
                ],
                "properties": {
                  "details": {
                    "type": "object",
                    "required": [
                      "id",
                      "default_message",
                      "args"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                      },
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Arguments to be substituted into a message template."
                      },
                      "default_message": {
                        "type": "string",
                        "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                      }
                    }
                  },
                  "severity": {
                    "enum": [
                      "INFO",
                      "WARNING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "The Clusters.Message.Severity enumerated type represents the severity of the message."
                  }
                }
              },
              "description": "Current set of messages associated with the object."
            },
            "api_server_cluster_endpoint": {
              "type": "string",
              "description": "Kubernetes API Server IP address via cluster network. This is the IP address of the Kubernetes LoadBalancer type service fronting the apiservers. This endpoint is the one configured in kubeconfig after login, and used for most human and application interaction with Kubernetes."
            },
            "api_server_management_endpoint": {
              "type": "string",
              "description": "Kubernetes API Server IP address on the management network. This is a floating IP and assigned to one of the control plane VMs on the management network. This endpoint is used by vSphere components."
            },
            "tls_management_endpoint_certificate": {
              "type": "string",
              "description": "PEM-encoded x509 certificate used by TLS endpoint on Kubernetes API servers when accessed from the management network, e.g. from ESX servers or VCSA. This certificate is only valid for use with the apiServerManagementEndpoint."
            },
            "default_kubernetes_service_content_library": {
              "type": "string",
              "description": "Identifier of the Content Library which holds the VM Images for vSphere Kubernetes Service. This Content Library should be subscribed to VMware's hosted vSphere Kubernetes Service Repository.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library."
            }
          }
        }
      ]
  updateCluster:
    description: |-
      Update configuration on the cluster object. The specified configuration is applied partially and unset fields in spec will leave those parts of configuration as-is.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/clusters/cluster/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "size_hint": {
              "enum": [
                "TINY",
                "SMALL",
                "MEDIUM",
                "LARGE"
              ],
              "type": "string",
              "description": "The SizingHint enumerated type determines the configuration of Kubernetes API server and the worker nodes. It also determines the default values associated with the maximum number of pods and services. Use ClusterSizeInfo.get to get information associated with a SizingHint."
            },
            "master_DNS": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of DNS server IP addresses to use on Kubernetes API server, specified in order of preference.\nIf set, DNS servers set on Kubernetes API server will be replaced. Otherwise, they will not be modified."
            },
            "worker_DNS": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of DNS server IP addresses to use on the worker nodes, specified in order of preference.\nIf set, DNS servers set on worker nodes will be replaced. Otherwise, they will not be modified."
            },
            "login_banner": {
              "type": "string",
              "description": "Disclaimer to be displayed prior to login via the Kubectl plugin.\nIf unset, disclaimer to be displayed prior to login via the Kubectl plugin will not be modified."
            },
            "image_storage": {
              "type": "object",
              "required": [
                "storage_policy"
              ],
              "properties": {
                "storage_policy": {
                  "type": "string",
                  "description": "Identifier of the storage policy.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile."
                }
              }
            },
            "network_provider": {
              "enum": [
                "NSXT_CONTAINER_PLUGIN"
              ],
              "type": "string",
              "description": "Identifies the network plugin that cluster networking functionalities for this vSphere Namespaces Cluster."
            },
            "master_NTP_servers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of NTP server DNS names or IP addresses to use on Kubernetes API server, specified in order of preference.\nIf set, NTP servers on Kubernetes API server will be replaced. Otherwise, they will not be modified."
            },
            "master_storage_policy": {
              "type": "string",
              "description": "Identifier of storage policy associated with Kubernetes API server.\nIf unset, storage policy associated with Kubernetes API server will not be modified.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile."
            },
            "default_image_registry": {
              "type": "object",
              "required": [
                "hostname"
              ],
              "properties": {
                "port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Port number of the container image registry.\nIf unset, defaults to 443."
                },
                "hostname": {
                  "type": "string",
                  "description": "IP address or the hostname of container image registry."
                }
              }
            },
            "default_image_repository": {
              "type": "string",
              "description": "Default image repository to use when Kubernetes Pod container specification does not specify it as part of the container image name.\nIf unset, default image repository will not be modified."
            },
            "ephemeral_storage_policy": {
              "type": "string",
              "description": "Identifier of storage policy associated with ephemeral disks of all the Kubernetes Pods in the cluster.\nIf unset, storage policy associated with ephemeral disks of all the Kubernetes Pods will not be modified.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile."
            },
            "ncp_cluster_network_spec": {
              "type": "object",
              "properties": {
                "pod_cidrs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "address",
                      "prefix"
                    ],
                    "properties": {
                      "prefix": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The CIDR prefix."
                      },
                      "address": {
                        "type": "string",
                        "description": "The IPv4 address."
                      }
                    }
                  },
                  "description": "CIDR blocks from which Kubernetes allocates pod IP addresses. This range should not overlap with those in vcenter.namespace_management.EnableSpec#serviceCidr, Clusters.NCPClusterNetworkUpdateSpec.ingress-cidrs, Clusters.NCPClusterNetworkUpdateSpec.egress-cidrs, or other services running in the datacenter. An update operation only allows for addition of new CIDR blocks to the existing list. All Pod CIDR blocks must be of at least subnet size /23.\nIf unset, CIDRs from which Kubernetes allocates pod IP addresses will not be modified."
                },
                "egress_cidrs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "address",
                      "prefix"
                    ],
                    "properties": {
                      "prefix": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The CIDR prefix."
                      },
                      "address": {
                        "type": "string",
                        "description": "The IPv4 address."
                      }
                    }
                  },
                  "description": "CIDR blocks from which NSX assigns IP addresses used for performing SNAT from container IPs to external IPs. These ranges should not overlap with those in Clusters.NCPClusterNetworkUpdateSpec.pod-cidrs, vcenter.namespace_management.EnableSpec#serviceCidr, Clusters.NCPClusterNetworkUpdateSpec.ingress-cidrs, or other services running in the datacenter. An update operation only allows for addition of new CIDR blocks to the existing list.\nIf unset, CIDR from which Kubernetes allocates egress IP addresses will not be modified."
                },
                "ingress_cidrs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "address",
                      "prefix"
                    ],
                    "properties": {
                      "prefix": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The CIDR prefix."
                      },
                      "address": {
                        "type": "string",
                        "description": "The IPv4 address."
                      }
                    }
                  },
                  "description": "CIDR blocks from which NSX assigns IP addresses for Kubernetes Ingresses and Kubernetes Services of type LoadBalancer. These ranges should not overlap with those in Clusters.NCPClusterNetworkUpdateSpec.pod-cidrs, vcenter.namespace_management.EnableSpec#serviceCidr, Clusters.NCPClusterNetworkUpdateSpec.egress-cidrs, or other services running in the datacenter. An update operation only allows for addition of new CIDR blocks to the existing list.\nIf unset, CIDRs from which Kubernetes allocates ingress IP addresses will not be modified."
                },
                "default_ingress_tls_certificate": {
                  "type": "string",
                  "description": "PEM-encoded x509 certificate used by NSX as a default fallback certificate for Kubernetes Ingress services."
                }
              }
            },
            "tls_endpoint_certificate": {
              "type": "string",
              "description": "Certificate issued for Kubernetes API Server. Certificate used must be created by signing the Certificate Signing Request obtained from vcenter.namespace_management.certificates.Request.create Because a CertificateSigningRequest is created on an existing Namespaces-enabled Cluster, you must use the Clusters.UpdateSpec to specify this tlsEndpointCertificate on an existing Cluster rather than during initially enabling Namespaces on a Cluster.\nIf unset, Kubernetes API Server certificate will not be modified."
            },
            "master_DNS_search_domains": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of domains (for example \"vmware.com\") to be searched when trying to lookup a host name on Kubernetes API server, specified in order of preference.\nIf set, DNS search domains on Kubernetes API server will be replaced. Otherwise, they will not be modified."
            },
            "default_kubernetes_service_content_library": {
              "type": "string",
              "description": "Identifier of the Content Library which holds the VM Images for vSphere Kubernetes Service. This Content Library should be subscribed to VMware's hosted vSphere Kubernetes Service Repository. Modifying or clearing the Content Library identifier will not affect existing vSphere Kubernetes Service clusters. However, upgrades or scale-out of existing clusters may be affected if the new Content Library doesn't have the necessary VM Images.\nIf unset, the Content Library identifier will not be modified.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  setClusterConfiguration:
    description: |-
      Set a new configuration on the cluster object. The specified configuration is applied in entirety and will replace the current configuration fully.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/clusters/cluster/put/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "ephemeral_storage_policy",
            "image_storage",
            "master_storage_policy",
            "network_provider",
            "size_hint"
          ],
          "properties": {
            "size_hint": {
              "enum": [
                "TINY",
                "SMALL",
                "MEDIUM",
                "LARGE"
              ],
              "type": "string",
              "description": "The SizingHint enumerated type determines the configuration of Kubernetes API server and the worker nodes. It also determines the default values associated with the maximum number of pods and services. Use ClusterSizeInfo.get to get information associated with a SizingHint."
            },
            "master_DNS": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of DNS server IP addresses to use on Kubernetes API server, specified in order of preference.\nIf unset, DNS servers set on Kubernetes API server will be cleared."
            },
            "worker_DNS": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of DNS server IP addresses to use on the worker nodes, specified in order of preference.\nIf unset, DNS servers set on worker nodes will be cleared."
            },
            "login_banner": {
              "type": "string",
              "description": "Disclaimer to be displayed prior to login via the Kubectl plugin.\nIf unset, disclaimer to be displayed prior to login via the Kubectl plugin will be cleared."
            },
            "image_storage": {
              "type": "object",
              "required": [
                "storage_policy"
              ],
              "properties": {
                "storage_policy": {
                  "type": "string",
                  "description": "Identifier of the storage policy.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile."
                }
              }
            },
            "network_provider": {
              "enum": [
                "NSXT_CONTAINER_PLUGIN"
              ],
              "type": "string",
              "description": "Identifies the network plugin that cluster networking functionalities for this vSphere Namespaces Cluster."
            },
            "master_NTP_servers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of NTP server DNS names or IP addresses to use on Kubernetes API server, specified in order of preference.\nIf unset, VMware Tools based time synchronization is enabled and any set NTP servers are cleared."
            },
            "master_storage_policy": {
              "type": "string",
              "description": "Identifier of storage policy associated with Kubernetes API server.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile."
            },
            "default_image_registry": {
              "type": "object",
              "required": [
                "hostname"
              ],
              "properties": {
                "port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Port number of the container image registry.\nIf unset, defaults to 443."
                },
                "hostname": {
                  "type": "string",
                  "description": "IP address or the hostname of container image registry."
                }
              }
            },
            "default_image_repository": {
              "type": "string",
              "description": "Default image repository to use when Kubernetes Pod container specification does not specify it as part of the container image name.\nIf unset, default image repository will be set to Docker Hub official repository in case of Docker Hub image registry, otherwise will be set to empty string."
            },
            "ephemeral_storage_policy": {
              "type": "string",
              "description": "Identifier of storage policy associated with ephemeral disks of all the Kubernetes Pods in the cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile."
            },
            "ncp_cluster_network_spec": {
              "type": "object",
              "required": [
                "default_ingress_tls_certificate",
                "egress_cidrs",
                "ingress_cidrs",
                "pod_cidrs"
              ],
              "properties": {
                "pod_cidrs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "address",
                      "prefix"
                    ],
                    "properties": {
                      "prefix": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The CIDR prefix."
                      },
                      "address": {
                        "type": "string",
                        "description": "The IPv4 address."
                      }
                    }
                  },
                  "description": "CIDR blocks from which Kubernetes allocates pod IP addresses. This range should not overlap with those in vcenter.namespace_management.EnableSpec#serviceCidr, Clusters.NCPClusterNetworkSetSpec.ingress-cidrs, Clusters.NCPClusterNetworkSetSpec.egress-cidrs, or other services running in the datacenter. A set operation only allows for addition of new CIDR blocks to the existing list. All Pod CIDR blocks must be of at least subnet size /23."
                },
                "egress_cidrs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "address",
                      "prefix"
                    ],
                    "properties": {
                      "prefix": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The CIDR prefix."
                      },
                      "address": {
                        "type": "string",
                        "description": "The IPv4 address."
                      }
                    }
                  },
                  "description": "CIDR blocks from which NSX assigns IP addresses used for performing SNAT from container IPs to external IPs. These ranges should not overlap with those in Clusters.NCPClusterNetworkSetSpec.pod-cidrs, vcenter.namespace_management.EnableSpec#serviceCidr, Clusters.NCPClusterNetworkSetSpec.ingress-cidrs, or other services running in the datacenter. A set operation only allows for addition of new CIDR blocks to the existing list."
                },
                "ingress_cidrs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "address",
                      "prefix"
                    ],
                    "properties": {
                      "prefix": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The CIDR prefix."
                      },
                      "address": {
                        "type": "string",
                        "description": "The IPv4 address."
                      }
                    }
                  },
                  "description": "CIDR blocks from which NSX assigns IP addresses for Kubernetes Ingresses and Kubernetes Services of type LoadBalancer. These ranges should not overlap with those in Clusters.NCPClusterNetworkSetSpec.pod-cidrs, vcenter.namespace_management.EnableSpec#serviceCidr, Clusters.NCPClusterNetworkSetSpec.egress-cidrs, or other services running in the datacenter. A set operation only allows for addition of new CIDR blocks to the existing list."
                },
                "default_ingress_tls_certificate": {
                  "type": "string",
                  "description": "PEM-encoded x509 certificate used by NSX as a default fallback certificate for Kubernetes Ingress services."
                }
              }
            },
            "master_DNS_search_domains": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of domains (for example \"vmware.com\") to be searched when trying to lookup a host name on Kubernetes API server, specified in order of preference.\nIf unset, DNS search domains set on Kubernetes API server will be cleared."
            },
            "default_kubernetes_service_content_library": {
              "type": "string",
              "description": "Identifier of the Content Library which holds the VM Images for vSphere Kubernetes Service. This Content Library should be subscribed to VMware's hosted vSphere Kubernetes Service Repository. Modifying or clearing the Content Library identifier will not affect existing vSphere Kubernetes Service clusters. However, upgrades or scale-out of existing clusters may be affected if the new Content Library doesn't have the necessary VM Images.\nIf unset, the Content Library identifier will be cleared.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getNamespaceResourceOptions:
    description: |-
      Get the information about the objects used to set and update resource quota keys for version of Kubernetes running on {#link cluster}.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/clusters/cluster/workload-resource-options/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "create_resource_quota_type",
            "update_resource_quota_type"
          ],
          "properties": {
            "create_resource_quota_type": {
              "type": "string",
              "description": "Identifier of the structure used to set resource quotas on the namespace. See vcenter.namespaces.Instances#create and vcenter.namespaces.Instances#set.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vapi.structure. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vapi.structure."
            },
            "update_resource_quota_type": {
              "type": "string",
              "description": "Identifier of the structure used to update resource quotas on the namespace. See vcenter.namespaces.Instances#update.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vapi.structure. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vapi.structure."
            }
          }
        }
      ]
  listNamespaceManagementClusters:
    description: |-
      Returns information about all clusters on which vSphere Namespaces are enabled on this vCenter.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/clusters/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "cluster",
              "cluster_name",
              "config_status",
              "kubernetes_status",
              "stats"
            ],
            "properties": {
              "stats": {
                "type": "object",
                "required": [
                  "cpu_capacity",
                  "cpu_used",
                  "memory_capacity",
                  "memory_used",
                  "storage_capacity",
                  "storage_used"
                ],
                "properties": {
                  "cpu_used": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Overall CPU usage of the cluster, in MHz. This is the sum of CPU usage across all worker nodes in the cluster."
                  },
                  "memory_used": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Overall memory usage of the cluster, in mebibytes. This is the sum of memory usage across all worker nodes in the cluster."
                  },
                  "cpu_capacity": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total CPU capacity in the cluster available for vSphere Namespaces, in MHz. This is the sum of CPU capacities from all worker nodes in the cluster."
                  },
                  "storage_used": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Overall storage used by the cluster, in mebibytes. This is the sum of storage used across all worker nodes in the cluster."
                  },
                  "memory_capacity": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total memory capacity of the cluster available for vSphere Namespaces, in mebibytes. This is the sum of memory capacities from all worker nodesin the cluster."
                  },
                  "storage_capacity": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Overall storage capacity of the cluster available for vSphere Namespaces, in mebibytes. This is the sum of total storage available from all worker nodes in the cluster."
                  }
                }
              },
              "cluster": {
                "type": "string",
                "description": "Identifier for the cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
              },
              "cluster_name": {
                "type": "string",
                "description": "Name of the cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource.name. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource.name."
              },
              "config_status": {
                "enum": [
                  "CONFIGURING",
                  "REMOVING",
                  "RUNNING",
                  "ERROR"
                ],
                "type": "string",
                "description": "The Clusters.ConfigStatus enumerated type describes the status of reaching the desired state configuration for the cluster."
              },
              "kubernetes_status": {
                "enum": [
                  "READY",
                  "WARNING",
                  "ERROR"
                ],
                "type": "string",
                "description": "The Clusters.KubernetesStatus enumerated type describes the cluster's ability to deploy pods."
              }
            }
          }
        }
      ]
  getClusterSizeInfo:
    description: |-
      Get information about the default values associated with various sizes.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/cluster-size-info/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "required": [
              "default_pod_cidr",
              "default_service_cidr",
              "master_vm_info",
              "num_supported_pods",
              "num_supported_services"
            ],
            "properties": {
              "master_vm_info": {
                "type": "object",
                "required": [
                  "capacity",
                  "cores_per_socket",
                  "count",
                  "memory"
                ],
                "properties": {
                  "count": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of CPU cores."
                  },
                  "memory": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Memory size, in mebibytes."
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Overall capacity of the disks in the virtual machine, in mebibytes."
                  },
                  "cores_per_socket": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of CPU cores per socket."
                  }
                }
              },
              "worker_vm_info": {
                "type": "object",
                "required": [
                  "capacity",
                  "cores_per_socket",
                  "count",
                  "memory"
                ],
                "properties": {
                  "count": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of CPU cores."
                  },
                  "memory": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Memory size, in mebibytes."
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Overall capacity of the disks in the virtual machine, in mebibytes."
                  },
                  "cores_per_socket": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of CPU cores per socket."
                  }
                }
              },
              "default_pod_cidr": {
                "type": "object",
                "required": [
                  "address",
                  "prefix"
                ],
                "properties": {
                  "prefix": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The CIDR prefix."
                  },
                  "address": {
                    "type": "string",
                    "description": "The IPv4 address."
                  }
                }
              },
              "num_supported_pods": {
                "type": "integer",
                "format": "int64",
                "description": "The maximum number of supported pods."
              },
              "default_service_cidr": {
                "type": "object",
                "required": [
                  "address",
                  "prefix"
                ],
                "properties": {
                  "prefix": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The CIDR prefix."
                  },
                  "address": {
                    "type": "string",
                    "description": "The IPv4 address."
                  }
                }
              },
              "num_supported_services": {
                "type": "integer",
                "format": "int64",
                "description": "The maximum number of supported services."
              }
            }
          }
        }
      ]
  listDistributedSwitchCompatibility:
    description: |-
      Returns Namespaces compatibility information of Distributed Switches in vCenter associated with the vCenter cluster, matching the DistributedSwitchCompatibility.FilterSpec.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/distributed-switch-compatibility/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "compatible",
              "distributed_switch"
            ],
            "properties": {
              "compatible": {
                "type": "boolean",
                "description": "Compatibility of this switch with vSphere Namespaces."
              },
              "distributed_switch": {
                "type": "string",
                "description": "Identifier of the switch.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vSphereDistributedSwitch. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vSphereDistributedSwitch."
              },
              "incompatibility_reasons": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "default_message",
                    "args"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                    },
                    "args": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Arguments to be substituted into a message template."
                    },
                    "default_message": {
                      "type": "string",
                      "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                    }
                  }
                },
                "description": "List of reasons for incompatibility.\nIf unset, this Distributed Switch is compatible."
              }
            }
          }
        }
      ]
  listEdgeClusterCompatibility:
    description: |-
      Returns Namespaces compatibility information of NSX-T Edge Clusters matching the EdgeClusterCompatibility.FilterSpec.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/edge-cluster-compatibility/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "compatible",
              "display_name",
              "edge_cluster"
            ],
            "properties": {
              "compatible": {
                "type": "boolean",
                "description": "Compatibility of this Edge Cluster with Namespaces feature."
              },
              "display_name": {
                "type": "string",
                "description": "Display name of the Edge Cluster."
              },
              "edge_cluster": {
                "type": "string",
                "description": "Identifier of the Edge Cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: NSXEdgeCluster. When operations return a value of this structure as a result, the field will be an identifier for the resource type: NSXEdgeCluster."
              },
              "incompatibility_reasons": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "default_message",
                    "args"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                    },
                    "args": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Arguments to be substituted into a message template."
                    },
                    "default_message": {
                      "type": "string",
                      "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                    }
                  }
                },
                "description": "List of reasons for incompatibility.\nIf unset, this Edge Cluster is compatible."
              }
            }
          }
        }
      ]
  listAvailableClusterVersions:
    description: |-
      Get information about each available upgrade.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/software/cluster-available-versions/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "description",
              "name",
              "release_date",
              "release_notes",
              "version"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the upgrade."
              },
              "version": {
                "type": "string",
                "description": "Version of the upgrade."
              },
              "description": {
                "type": "string",
                "description": "Description of the upgrade."
              },
              "release_date": {
                "type": "string",
                "format": "date-time",
                "description": "Release date of the upgrade."
              },
              "release_notes": {
                "type": "string",
                "description": "Release details of the upgrade."
              }
            }
          }
        }
      ]
  upgradeMultipleSoftwareClusters:
    description: |-
      Upgrade a set of clusters to its corresponding specific version.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/software/clustersactionupgradeMultiple/post/
    example:
      inputs: [
        {
          "type": "object",
          "description": "Specifications for upgrading selected clusters.\nThe key in the parameter map must be an identifier for the resource type: ClusterComputeResource.",
          "additionalProperties": {
            "type": "object",
            "required": [
              "desired_version"
            ],
            "properties": {
              "desired_version": {
                "type": "string",
                "description": "Version number the cluster is going to be upgraded to."
              },
              "ignore_precheck_warnings": {
                "type": "boolean",
                "description": "If true, the upgrade workflow will ignore any pre-check warnings and proceed with the upgrade.\nIf unset, the upgrade workflow will not ignore pre-check warnings and fail the upgrade. It is equivalent to setting the value to false. The workflow adopts a conservative approach of failing the upgrade if unset to solely let the user decide whether to force the upgrade despite the warnings."
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "required": [
              "res"
            ],
            "properties": {
              "res": {
                "enum": [
                  "STARTED",
                  "REJECTED"
                ],
                "type": "string",
                "description": "The Clusters.Result.Res enumerated type represents the upgrade invocation result for each cluster."
              },
              "exception": {
                "type": "string",
                "description": "Exception when cluster pre-check failed during upgrade invocation.\nThis field is optional and it is only relevant when the value of Clusters.Result.res is REJECTED."
              }
            }
          }
        }
      ]
  upgradeSoftwareCluster:
    description: |-
      Upgrade the cluster to a specific version. This operation upgrades the components on control plane VMs and worker plane hosts based on the selected version. Before upgrading, this operation performs pre-checks and sets the evaluation response in Info.UpgradeStatus.messages with various Message.Severity levels. Depending on the severity, the upgrade may or may not proceed beyond prechecks. Here is a list of severities and corresponding behavior: - ERROR: Upgrade does not proceed beyond precheck operation - WARNING: Upgrade proceeds beyond precheck operation only if UpgradeSpec.ignorePrecheckWarnings is set to true - INFO: Upgrade proceeds beyond precheck operation uninterrupted
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/software/clusters/clusteractionupgrade/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "desired_version"
          ],
          "properties": {
            "desired_version": {
              "type": "string",
              "description": "Version number the cluster is going to be upgraded to."
            },
            "ignore_precheck_warnings": {
              "type": "boolean",
              "description": "If true, the upgrade workflow will ignore any pre-check warnings and proceed with the upgrade.\nIf unset, the upgrade workflow will not ignore pre-check warnings and fail the upgrade. It is equivalent to setting the value to false. The workflow adopts a conservative approach of failing the upgrade if unset to solely let the user decide whether to force the upgrade despite the warnings."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getSoftwareCluster:
    description: |-
      Returns upgrade related information of a specific cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/software/clusters/cluster/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "available_versions",
            "current_version",
            "messages",
            "state"
          ],
          "properties": {
            "state": {
              "enum": [
                "PENDING",
                "READY",
                "ERROR"
              ],
              "type": "string",
              "description": "The Clusters.State enumerated type describes the state of the upgrade."
            },
            "messages": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "details",
                  "severity"
                ],
                "properties": {
                  "details": {
                    "type": "object",
                    "required": [
                      "id",
                      "default_message",
                      "args"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                      },
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Arguments to be substituted into a message template."
                      },
                      "default_message": {
                        "type": "string",
                        "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                      }
                    }
                  },
                  "severity": {
                    "enum": [
                      "INFO",
                      "WARNING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "The Clusters.Message.Severity enumerated type represents the severity of the message."
                  }
                }
              },
              "description": "Current set of messages associated with the cluster version."
            },
            "upgrade_status": {
              "type": "object",
              "required": [
                "messages"
              ],
              "properties": {
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "details",
                      "severity"
                    ],
                    "properties": {
                      "details": {
                        "type": "object",
                        "required": [
                          "id",
                          "default_message",
                          "args"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                          },
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Arguments to be substituted into a message template."
                          },
                          "default_message": {
                            "type": "string",
                            "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                          }
                        }
                      },
                      "severity": {
                        "enum": [
                          "INFO",
                          "WARNING",
                          "ERROR"
                        ],
                        "type": "string",
                        "description": "The Clusters.Message.Severity enumerated type represents the severity of the message."
                      }
                    }
                  },
                  "description": "Current set of messages associated with the upgrade state."
                },
                "progress": {
                  "type": "object",
                  "required": [
                    "completed",
                    "message",
                    "total"
                  ],
                  "properties": {
                    "total": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Total amount of the work for the operation. The work here represents the number of master nodes in the cluster need to be upgraded."
                    },
                    "message": {
                      "type": "object",
                      "required": [
                        "id",
                        "default_message",
                        "args"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                        },
                        "args": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Arguments to be substituted into a message template."
                        },
                        "default_message": {
                          "type": "string",
                          "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                        }
                      }
                    },
                    "completed": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The amount of work completed for the operation. The value can only be incremented. The number or master nodes which upgrade completed."
                    }
                  }
                },
                "desired_version": {
                  "type": "string",
                  "description": "Desired version the cluster will be upgraded to.\nIf unset, the cluster upgrade is not in progress."
                }
              }
            },
            "current_version": {
              "type": "string",
              "description": "Current version of the cluster."
            },
            "available_versions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Set of available versions can be upgraded to."
            },
            "last_upgraded_date": {
              "type": "string",
              "format": "date-time",
              "description": "Date of last successful upgrade.\nIf unset, the cluster has not yet been upgraded."
            }
          }
        }
      ]
  listSoftwareClusters:
    description: |-
      Returns upgrade related information about all WCP enabled clusters.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/software/clusters/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "available_versions",
              "cluster",
              "cluster_name",
              "current_version",
              "state"
            ],
            "properties": {
              "state": {
                "enum": [
                  "PENDING",
                  "READY",
                  "ERROR"
                ],
                "type": "string",
                "description": "The Clusters.State enumerated type describes the state of the upgrade."
              },
              "cluster": {
                "type": "string",
                "description": "Identifier for the cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
              },
              "cluster_name": {
                "type": "string",
                "description": "Name of the cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource.name. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource.name."
              },
              "current_version": {
                "type": "string",
                "description": "Current version of the cluster."
              },
              "desired_version": {
                "type": "string",
                "description": "Desired version the cluster will be upgraded to.\nIf unset, the cluster upgrade is not in progress."
              },
              "available_versions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Set of versions available for upgrade."
              },
              "last_upgraded_date": {
                "type": "string",
                "format": "date-time",
                "description": "Date of last successful upgrade.\nIf unset, the cluster has not yet been upgraded."
              }
            }
          }
        }
      ]
  getNamespaceManagementStatsTimeSeries:
    description: |-
      Gather statistical values for a cluster, namespace, or pod.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespace-management/stats/time-series/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "counter",
              "time_stamps",
              "values"
            ],
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "Sequence of sampled values corresponding to the timestamps in tss."
              },
              "counter": {
                "type": "string",
                "description": "Counter identifier."
              },
              "time_stamps": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "Sequence of UNIX timestamp values at which statistical values were sampled. https://en.wikipedia.org/wiki/Unix_time"
              }
            }
          }
        }
      ]
  listNamespaceInstances:
    description: |-
      Returns the information about all namespaces on this vCenter.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespaces/instances/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "cluster",
              "config_status",
              "description",
              "namespace",
              "stats"
            ],
            "properties": {
              "stats": {
                "type": "object",
                "required": [
                  "cpu_used",
                  "memory_used",
                  "storage_used"
                ],
                "properties": {
                  "cpu_used": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Overall CPU usage of the namespace, in MHz. This is the sum of CPU usage across all pods in the Kubernetes namespace."
                  },
                  "memory_used": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Overall memory usage of the namespace (in mebibytes). This is the sum of memory usage across all pods."
                  },
                  "storage_used": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Overall storage used by the namespace (in mebibytes). This is the sum of storage used by pods across all datastores in the cluster associated with storage policies configured for the namespace."
                  }
                }
              },
              "cluster": {
                "type": "string",
                "description": "Identifier for the cluster hosting the namespace.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
              },
              "namespace": {
                "type": "string",
                "description": "Identifier of the namespace.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.namespaces.Instance. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.namespaces.Instance."
              },
              "description": {
                "type": "string",
                "description": "Description of the namespace."
              },
              "config_status": {
                "enum": [
                  "CONFIGURING",
                  "REMOVING",
                  "RUNNING",
                  "ERROR"
                ],
                "type": "string",
                "description": "The Instances.ConfigStatus enumerated type describes the status of reaching the desired state configuration for the namespace."
              }
            }
          }
        }
      ]
  deleteNamespaceAccess:
    description: |-
      Remove access control of the subject on given domain from the namespace.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespaces/instances/namespace/access/domain/subject/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getNamespaceAccess:
    description: |-
      Get the information about the access control of the subject on given domain on the namespace.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespaces/instances/namespace/access/domain/subject/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "role"
          ],
          "properties": {
            "role": {
              "enum": [
                "EDIT",
                "VIEW"
              ],
              "type": "string",
              "description": "The Access.Role enumerated type lists the default roles which can be associated with a subject on a domain on the namespace."
            }
          }
        }
      ]
  createNamespaceAccess:
    description: |-
      Set up access control for the subject on given domain on the namespace.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespaces/instances/namespace/access/domain/subject/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  setNamespaceAccess:
    description: |-
      Set new access control on the namespace for the subject on given domain.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespaces/instances/namespace/access/domain/subject/put/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteNamespaceInstance:
    description: |-
      Delete the namespace object in the cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespaces/instances/namespace/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getNamespaceInstance:
    description: |-
      Returns information about a specific namespace.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespaces/instances/namespace/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "access_list",
            "cluster",
            "config_status",
            "description",
            "messages",
            "stats",
            "storage_specs"
          ],
          "properties": {
            "stats": {
              "type": "object",
              "required": [
                "cpu_used",
                "memory_used",
                "storage_used"
              ],
              "properties": {
                "cpu_used": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Overall CPU usage of the namespace, in MHz. This is the sum of CPU usage across all pods in the Kubernetes namespace."
                },
                "memory_used": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Overall memory usage of the namespace (in mebibytes). This is the sum of memory usage across all pods."
                },
                "storage_used": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Overall storage used by the namespace (in mebibytes). This is the sum of storage used by pods across all datastores in the cluster associated with storage policies configured for the namespace."
                }
              }
            },
            "cluster": {
              "type": "string",
              "description": "Identifier for the cluster hosting the namespace.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
            },
            "messages": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "severity"
                ],
                "properties": {
                  "details": {
                    "type": "object",
                    "required": [
                      "id",
                      "default_message",
                      "args"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                      },
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Arguments to be substituted into a message template."
                      },
                      "default_message": {
                        "type": "string",
                        "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                      }
                    }
                  },
                  "severity": {
                    "enum": [
                      "INFO",
                      "WARNING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "The Instances.Message.MessageSeverity enumerated type represents the severity of the message."
                  }
                }
              },
              "description": "Current set of messages associated with the object."
            },
            "access_list": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "domain",
                  "role",
                  "subject",
                  "subject_type"
                ],
                "properties": {
                  "role": {
                    "enum": [
                      "EDIT",
                      "VIEW"
                    ],
                    "type": "string",
                    "description": "The Access.Role enumerated type lists the default roles which can be associated with a subject on a domain on the namespace."
                  },
                  "domain": {
                    "type": "string",
                    "description": "Domain of the subject."
                  },
                  "subject": {
                    "type": "string",
                    "description": "Name of the subject."
                  },
                  "subject_type": {
                    "enum": [
                      "USER",
                      "GROUP"
                    ],
                    "type": "string",
                    "description": "The Access.SubjectType enumerated type lists the types of subjects who can be associated with a Access.Role on the namespace."
                  }
                }
              },
              "description": "Access controls associated with the namespace."
            },
            "description": {
              "type": "string",
              "description": "Description of the namespace."
            },
            "config_status": {
              "enum": [
                "CONFIGURING",
                "REMOVING",
                "RUNNING",
                "ERROR"
              ],
              "type": "string",
              "description": "The Instances.ConfigStatus enumerated type describes the status of reaching the desired state configuration for the namespace."
            },
            "resource_spec": {
              "type": "object",
              "properties": {},
              "description": "Quotas on the namespace resources. Refer to vcenter.namespace_management.NamespaceResourceOptions#get for the type of the value for this field.\nIf unset, no resource constraints are associated with the namespace."
            },
            "storage_specs": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "policy"
                ],
                "properties": {
                  "limit": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The maximum amount of storage (in mebibytes) which can be utilized by the namespace for this specification.\nIf unset, no limits are placed."
                  },
                  "policy": {
                    "type": "string",
                    "description": "ID of the storage policy. A Kubernetes storage class is created for this storage policy if it does not exist already.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile."
                  }
                }
              },
              "description": "Storage associated with the namespace."
            }
          }
        }
      ]
  updateNamespaceInstance:
    description: |-
      Update the namespace object. The specified configuration is applied partially and unset fields in spec will leave those parts of configuration as-is.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespaces/instances/namespace/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "access_list": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "domain",
                  "role",
                  "subject",
                  "subject_type"
                ],
                "properties": {
                  "role": {
                    "enum": [
                      "EDIT",
                      "VIEW"
                    ],
                    "type": "string",
                    "description": "The Access.Role enumerated type lists the default roles which can be associated with a subject on a domain on the namespace."
                  },
                  "domain": {
                    "type": "string",
                    "description": "Domain of the subject."
                  },
                  "subject": {
                    "type": "string",
                    "description": "Name of the subject."
                  },
                  "subject_type": {
                    "enum": [
                      "USER",
                      "GROUP"
                    ],
                    "type": "string",
                    "description": "The Access.SubjectType enumerated type lists the types of subjects who can be associated with a Access.Role on the namespace."
                  }
                }
              },
              "description": "Access control associated with the namespace.\nIf unset, access controls on the namespace will not be modified. Existing pods from users will continue to run."
            },
            "description": {
              "type": "string",
              "description": "Description for the namespace.\nIf unset, the description of the namespace will not be modified."
            },
            "resource_spec": {
              "type": "object",
              "properties": {},
              "description": "Resource quota updates on the namespace. Refer to vcenter.namespace_management.NamespaceResourceOptions.Info#updateResourceQuotaType and use vcenter.namespace_management.NamespaceResourceOptions#get for retrieving the type for the value for this field. For an example of this, see ResourceQuotaOptionsV1Update.\nIf unset, the resource constraints on the namespace will not be modified."
            },
            "storage_specs": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "policy"
                ],
                "properties": {
                  "limit": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The maximum amount of storage (in mebibytes) which can be utilized by the namespace for this specification.\nIf unset, no limits are placed."
                  },
                  "policy": {
                    "type": "string",
                    "description": "ID of the storage policy. A Kubernetes storage class is created for this storage policy if it does not exist already.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile."
                  }
                }
              },
              "description": "Storage associated with the namespace.\nIf unset, storage policies and their limit will not be modified. Pods which are already using persistent storage from the earlier version of storage policies will be able to access them till the datastores are attached to the worker nodes."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  setNamespaceInstance:
    description: |-
      Set a new configuration on the namespace object. The specified configuration is applied in entirety and will replace the current configuration fully.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespaces/instances/namespace/put/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "access_list": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "domain",
                  "role",
                  "subject",
                  "subject_type"
                ],
                "properties": {
                  "role": {
                    "enum": [
                      "EDIT",
                      "VIEW"
                    ],
                    "type": "string",
                    "description": "The Access.Role enumerated type lists the default roles which can be associated with a subject on a domain on the namespace."
                  },
                  "domain": {
                    "type": "string",
                    "description": "Domain of the subject."
                  },
                  "subject": {
                    "type": "string",
                    "description": "Name of the subject."
                  },
                  "subject_type": {
                    "enum": [
                      "USER",
                      "GROUP"
                    ],
                    "type": "string",
                    "description": "The Access.SubjectType enumerated type lists the types of subjects who can be associated with a Access.Role on the namespace."
                  }
                }
              },
              "description": "Access control associated with the namespace.\nIf unset, the existing access controls on the namespace will be removed and users will not be able to access this namespace to create new pods. Existing pods from users will continue to run."
            },
            "description": {
              "type": "string",
              "description": "Description for the namespace.\nIf unset, the description of the namespace will be cleared."
            },
            "resource_spec": {
              "type": "object",
              "properties": {},
              "description": "Resource quota for the namespace. This will replace the existing resource constraints on the namespace in entirety. Refer to vcenter.namespace_management.NamespaceResourceOptions.Info#createResourceQuotaType and use vcenter.namespace_management.NamespaceResourceOptions#get for retrieving the type for the value for this field. For an example of this, see ResourceQuotaOptionsV1.\nIf unset, the resource constraints on the namespace will be cleared."
            },
            "storage_specs": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "policy"
                ],
                "properties": {
                  "limit": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The maximum amount of storage (in mebibytes) which can be utilized by the namespace for this specification.\nIf unset, no limits are placed."
                  },
                  "policy": {
                    "type": "string",
                    "description": "ID of the storage policy. A Kubernetes storage class is created for this storage policy if it does not exist already.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile."
                  }
                }
              },
              "description": "Storage associated with the namespace.\nIf unset, the existing storage policies will be disassociated with the namespace and existing limits will be cleared. Pods which are already using persistent storage from the earlier version of storage policies will be able to access them till the datastores are attached to the worker nodes."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  createNamespaceInstance:
    description: |-
      Create namespace object in the cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespaces/instances/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "cluster",
            "namespace"
          ],
          "properties": {
            "cluster": {
              "type": "string",
              "description": "Identifier of the cluster on which the namespace is being created.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
            },
            "namespace": {
              "type": "string",
              "description": "Identifier of the namespace. This has DNS_LABEL restrictions as specified in . This must be an alphanumeric (a-z and 0-9) string and with maximum length of 63 characters and with the '-' character allowed anywhere except the first or last character. This name is unique across all Namespaces in this vCenter server. In this version, this maps to the name of a Kubernetes namespace.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.namespaces.Instance. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.namespaces.Instance."
            },
            "access_list": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "domain",
                  "role",
                  "subject",
                  "subject_type"
                ],
                "properties": {
                  "role": {
                    "enum": [
                      "EDIT",
                      "VIEW"
                    ],
                    "type": "string",
                    "description": "The Access.Role enumerated type lists the default roles which can be associated with a subject on a domain on the namespace."
                  },
                  "domain": {
                    "type": "string",
                    "description": "Domain of the subject."
                  },
                  "subject": {
                    "type": "string",
                    "description": "Name of the subject."
                  },
                  "subject_type": {
                    "enum": [
                      "USER",
                      "GROUP"
                    ],
                    "type": "string",
                    "description": "The Access.SubjectType enumerated type lists the types of subjects who can be associated with a Access.Role on the namespace."
                  }
                }
              },
              "description": "Access controls associated with the namespace.\nIf unset, only users with Administrator role can access the namespace."
            },
            "description": {
              "type": "string",
              "description": "Description for the namespace.\nIf unset, no description is added to the namespace."
            },
            "resource_spec": {
              "type": "object",
              "properties": {},
              "description": "Resource quota on the namespace. Refer to vcenter.namespace_management.NamespaceResourceOptions.Info#createResourceQuotaType and use vcenter.namespace_management.NamespaceResourceOptions#get for retrieving the type for the value for this field. For an example of this, see ResourceQuotaOptionsV1.\nIf unset, no resource limits will be set on the namespace."
            },
            "storage_specs": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "policy"
                ],
                "properties": {
                  "limit": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The maximum amount of storage (in mebibytes) which can be utilized by the namespace for this specification.\nIf unset, no limits are placed."
                  },
                  "policy": {
                    "type": "string",
                    "description": "ID of the storage policy. A Kubernetes storage class is created for this storage policy if it does not exist already.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile."
                  }
                }
              },
              "description": "Storage associated with the namespace.\nIf unset, storage policies will not be associated with the namespace which will prevent users from being able to provision pods with persistent storage on the namespace. Users will be able to provision pods which use local storage."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listNamespaceUserInstances:
    description: |-
      Returns namespaces that user making the call is authorized to access.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/namespaces-user/namespaces/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "master_host",
              "namespace"
            ],
            "properties": {
              "namespace": {
                "type": "string",
                "description": "Identifier of the namespace.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.namespaces.Instance. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.namespaces.Instance."
              },
              "master_host": {
                "type": "string",
                "description": "IP address or FQDN of the API endpoint for the given namespace."
              }
            }
          }
        }
      ]
  createResourcePool:
    description: |-
      Creates a resource pool.
      if you do not have all of the privileges described as follows: 
         -  The resource ResourcePool referenced by the attribute ResourcePool.CreateSpec.parent requires Resource.CreatePool. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/resource-pool/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "name",
                "parent"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the resource pool."
                },
                "parent": {
                  "type": "string",
                  "description": "Parent of the created resource pool.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool."
                },
                "cpu_allocation": {
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The utilization of a resource pool will not exceed this limit, even if there are available resources. This is typically used to ensure a consistent performance of resource pools independent of available resources. If set to -1, then there is no fixed limit on resource usage (only bounded by available resources and shares). Units are MB for memory, and MHz for CPU.\nIf unset or empty, ResourcePool.ResourceAllocationCreateSpec.limit will be set to -1."
                    },
                    "shares": {
                      "type": "object",
                      "required": [
                        "level"
                      ],
                      "properties": {
                        "level": {
                          "enum": [
                            "LOW",
                            "NORMAL",
                            "HIGH",
                            "CUSTOM"
                          ],
                          "type": "string",
                          "description": "The ResourcePool.SharesInfo.Level enumerated type defines the possible values for the allocation level."
                        },
                        "shares": {
                          "type": "integer",
                          "format": "int64",
                          "description": "When ResourcePool.SharesInfo.level is set to CUSTOM, it is the number of shares allocated. Otherwise, this value is ignored. \n There is no unit for this value. It is a relative measure based on the settings for other resource pools.\n\nThis field is optional and it is only relevant when the value of ResourcePool.SharesInfo.level is CUSTOM."
                        }
                      }
                    },
                    "reservation": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Amount of resource that is guaranteed available to a resource pool. Reserved resources are not wasted if they are not used. If the utilization is less than the reservation, the resources can be utilized by other running virtual machines. Units are MB fo memory, and MHz for CPU.\nIf unset or empty, ResourcePool.ResourceAllocationCreateSpec.reservation will be set to 0."
                    },
                    "expandable_reservation": {
                      "type": "boolean",
                      "description": "In a resource pool with an expandable reservation, the reservation can grow beyond the specified value, if the parent resource pool has unreserved resources. A non-expandable reservation is called a fixed reservation.\nIf unset or empty, ResourcePool.ResourceAllocationCreateSpec.expandable-reservation will be set to true."
                    }
                  }
                },
                "memory_allocation": {
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The utilization of a resource pool will not exceed this limit, even if there are available resources. This is typically used to ensure a consistent performance of resource pools independent of available resources. If set to -1, then there is no fixed limit on resource usage (only bounded by available resources and shares). Units are MB for memory, and MHz for CPU.\nIf unset or empty, ResourcePool.ResourceAllocationCreateSpec.limit will be set to -1."
                    },
                    "shares": {
                      "type": "object",
                      "required": [
                        "level"
                      ],
                      "properties": {
                        "level": {
                          "enum": [
                            "LOW",
                            "NORMAL",
                            "HIGH",
                            "CUSTOM"
                          ],
                          "type": "string",
                          "description": "The ResourcePool.SharesInfo.Level enumerated type defines the possible values for the allocation level."
                        },
                        "shares": {
                          "type": "integer",
                          "format": "int64",
                          "description": "When ResourcePool.SharesInfo.level is set to CUSTOM, it is the number of shares allocated. Otherwise, this value is ignored. \n There is no unit for this value. It is a relative measure based on the settings for other resource pools.\n\nThis field is optional and it is only relevant when the value of ResourcePool.SharesInfo.level is CUSTOM."
                        }
                      }
                    },
                    "reservation": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Amount of resource that is guaranteed available to a resource pool. Reserved resources are not wasted if they are not used. If the utilization is less than the reservation, the resources can be utilized by other running virtual machines. Units are MB fo memory, and MHz for CPU.\nIf unset or empty, ResourcePool.ResourceAllocationCreateSpec.reservation will be set to 0."
                    },
                    "expandable_reservation": {
                      "type": "boolean",
                      "description": "In a resource pool with an expandable reservation, the reservation can grow beyond the specified value, if the parent resource pool has unreserved resources. A non-expandable reservation is called a fixed reservation.\nIf unset or empty, ResourcePool.ResourceAllocationCreateSpec.expandable-reservation will be set to true."
                    }
                  }
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  deleteResourcePool:
    description: |-
      Deletes a resource pool.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/resource-pool/resource_pool/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  updateResourcePool:
    description: |-
      Updates the configuration of a resource pool.
      if you do not have all of the privileges described as follows: 
         -  The resource ResourcePool referenced by the parameter resourcePool requires Resource.EditPool. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/resource-pool/resource_pool/patch/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the resource pool.\nif unset or empty, the name of the resource pool will not be changed."
                },
                "cpu_allocation": {
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The utilization of a resource pool will not exceed this limit, even if there are available resources. This is typically used to ensure a consistent performance of resource pools independent of available resources. If set to -1, then there is no fixed limit on resource usage (only bounded by available resources and shares). Units are MB for memory, and MHz for CPU.\nIf unset or empty, ResourcePool.ResourceAllocationUpdateSpec.limit will be set to -1."
                    },
                    "shares": {
                      "type": "object",
                      "required": [
                        "level"
                      ],
                      "properties": {
                        "level": {
                          "enum": [
                            "LOW",
                            "NORMAL",
                            "HIGH",
                            "CUSTOM"
                          ],
                          "type": "string",
                          "description": "The ResourcePool.SharesInfo.Level enumerated type defines the possible values for the allocation level."
                        },
                        "shares": {
                          "type": "integer",
                          "format": "int64",
                          "description": "When ResourcePool.SharesInfo.level is set to CUSTOM, it is the number of shares allocated. Otherwise, this value is ignored. \n There is no unit for this value. It is a relative measure based on the settings for other resource pools.\n\nThis field is optional and it is only relevant when the value of ResourcePool.SharesInfo.level is CUSTOM."
                        }
                      }
                    },
                    "reservation": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Amount of resource that is guaranteed available to a resource pool. Reserved resources are not wasted if they are not used. If the utilization is less than the reservation, the resources can be utilized by other running virtual machines. Units are MB fo memory, and MHz for CPU.\nIf unset or empty, ResourcePool.ResourceAllocationUpdateSpec.reservation will be set to 0."
                    },
                    "expandable_reservation": {
                      "type": "boolean",
                      "description": "In a resource pool with an expandable reservation, the reservation can grow beyond the specified value, if the parent resource pool has unreserved resources. A non-expandable reservation is called a fixed reservation.\nIf unset or empty, ResourcePool.ResourceAllocationUpdateSpec.expandable-reservation will be set to true."
                    }
                  }
                },
                "memory_allocation": {
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The utilization of a resource pool will not exceed this limit, even if there are available resources. This is typically used to ensure a consistent performance of resource pools independent of available resources. If set to -1, then there is no fixed limit on resource usage (only bounded by available resources and shares). Units are MB for memory, and MHz for CPU.\nIf unset or empty, ResourcePool.ResourceAllocationUpdateSpec.limit will be set to -1."
                    },
                    "shares": {
                      "type": "object",
                      "required": [
                        "level"
                      ],
                      "properties": {
                        "level": {
                          "enum": [
                            "LOW",
                            "NORMAL",
                            "HIGH",
                            "CUSTOM"
                          ],
                          "type": "string",
                          "description": "The ResourcePool.SharesInfo.Level enumerated type defines the possible values for the allocation level."
                        },
                        "shares": {
                          "type": "integer",
                          "format": "int64",
                          "description": "When ResourcePool.SharesInfo.level is set to CUSTOM, it is the number of shares allocated. Otherwise, this value is ignored. \n There is no unit for this value. It is a relative measure based on the settings for other resource pools.\n\nThis field is optional and it is only relevant when the value of ResourcePool.SharesInfo.level is CUSTOM."
                        }
                      }
                    },
                    "reservation": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Amount of resource that is guaranteed available to a resource pool. Reserved resources are not wasted if they are not used. If the utilization is less than the reservation, the resources can be utilized by other running virtual machines. Units are MB fo memory, and MHz for CPU.\nIf unset or empty, ResourcePool.ResourceAllocationUpdateSpec.reservation will be set to 0."
                    },
                    "expandable_reservation": {
                      "type": "boolean",
                      "description": "In a resource pool with an expandable reservation, the reservation can grow beyond the specified value, if the parent resource pool has unreserved resources. A non-expandable reservation is called a fixed reservation.\nIf unset or empty, ResourcePool.ResourceAllocationUpdateSpec.expandable-reservation will be set to true."
                    }
                  }
                }
              }
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listTaggingAssociations:
    description: |-
      Returns tag associations that match the specified iteration spec.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/tagging/associations/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "associations",
            "status"
          ],
          "properties": {
            "marker": {
              "type": "string",
              "description": "Marker is an opaque data structure that allows the caller to request the next page of tag associations.\nIf unset or empty, there are no more tag associations to request.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.tagging.associations.Marker. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.tagging.associations.Marker."
            },
            "status": {
              "enum": [
                "READY",
                "END_OF_DATA"
              ],
              "type": "string",
              "description": "The last status for the iterator. A field of this type is returned as part of the result and indicates to the caller of the API whether it can continue to make requests for more data. \n The last status only reports on the state of the iteration at the time data was last returned. As a result, it not does guarantee if the next call will succeed in getting more data or not. \n\n Failures to retrieve results will be returned as Error responses. These last statuses are only returned when the iterator is operating as expected.\n"
            },
            "associations": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "object",
                  "tag"
                ],
                "properties": {
                  "tag": {
                    "type": "string",
                    "description": "The identifier of a tag.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: cis.tagging.Tag. When operations return a value of this structure as a result, the field will be an identifier for the resource type: cis.tagging.Tag."
                  },
                  "object": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier for a resource whose type is specified by {@link #type}."
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of resource being identified (for example {@code com.acme.Person}). <p> {@term Services} that contain {@term operations} for creating and deleting resources typically contain a {@term constant} specifying the resource type for the resources being created and deleted. The API metamodel metadata {@term services} include a {@term service} that allows retrieving all the known resource types."
                      }
                    }
                  }
                }
              },
              "description": "List of tag associations."
            }
          }
        }
      ]
  listTopologyNodes:
    description: |-
      Returns information about all vCenter and Platform Services Controller nodes matching the Nodes.FilterSpec.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires System.Read. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/topology/nodes/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "node",
                  "type"
                ],
                "properties": {
                  "node": {
                    "type": "string",
                    "description": "Identifier for the vCenter or Platform Services Controller node. Identifier can be either IP address or DNS resolvable name of the node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.VCenter.name. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.VCenter.name."
                  },
                  "type": {
                    "enum": [
                      "VCSA_EMBEDDED",
                      "VCSA_EXTERNAL",
                      "PSC_EXTERNAL"
                    ],
                    "type": "string"
                  },
                  "client_affinity": {
                    "type": "string",
                    "description": "Identifier of the affinitized Platform Services Controller node. Identifier can be either IP address or DNS resolvable name of the affinitized node.\nThis field is optional and it is only relevant when the value of Nodes.Summary.type is VCSA_EXTERNAL.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.VCenter.name. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.VCenter.name."
                  },
                  "replication_partners": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of replication partners' node identifiers. Identifiers can be either IP address or DNS resolvable name of the partner node.\nThis field is optional and it is only relevant when the value of Nodes.Summary.type is one of VCSA_EMBEDDED or PSC_EXTERNAL.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.VCenter.name. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.VCenter.name."
                  }
                }
              }
            }
          }
        }
      ]
  getTopologyNode:
    description: |-
      Retrieve details for a given identifier of the vCenter or Platform Services Controller node.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires System.Read. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/topology/nodes/node/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "domain",
                "type"
              ],
              "properties": {
                "type": {
                  "enum": [
                    "VCSA_EMBEDDED",
                    "VCSA_EXTERNAL",
                    "PSC_EXTERNAL"
                  ],
                  "type": "string"
                },
                "domain": {
                  "type": "string",
                  "description": "Domain name of the node."
                },
                "client_affinity": {
                  "type": "string",
                  "description": "Identifier of the affinitized Platform Services Controller node. Identifier can be either IP address or DNS resolvable name of the affinitized node.\nThis field is optional and it is only relevant when the value of Nodes.Info.type is VCSA_EXTERNAL.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.VCenter.name. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.VCenter.name."
                },
                "replication_partners": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of replication partners' node identifiers. Identifiers can be either IP address or DNS resolvable name of the partner node.\nThis field is optional and it is only relevant when the value of Nodes.Info.type is one of VCSA_EMBEDDED or PSC_EXTERNAL.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.VCenter.name. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.VCenter.name."
                }
              }
            }
          }
        }
      ]
  listTopologyReplicationStatus:
    description: |-
      Returns the replication information of vCenter and Platform Services Controller nodes of type VCSA_EMBEDDED/PSC_EXTERNAL (see Nodes.Info.type) matching the ReplicationStatus.FilterSpec.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires System.Read. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/topology/replication-status/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "node",
                  "partner_available",
                  "replication_partner",
                  "status_available"
                ],
                "properties": {
                  "node": {
                    "type": "string",
                    "description": "Identifier for the vCenter or Platform Services Controller node. Identifier can be either IP address or DNS resolvable name of the node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.VCenter.name. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.VCenter.name."
                  },
                  "change_lag": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of replication changes node is behind the replication partner.\nThis field will be unset if the partner host or replication status is not available, i.e, if ReplicationStatus.Summary.partner-available or ReplicationStatus.Summary.status-available is false."
                  },
                  "replicating": {
                    "type": "boolean",
                    "description": "Indicates if node is processing replication changes from the replication partner.\nThis field will be unset if the partner host or replication status is not available, i.e, if ReplicationStatus.Summary.partner-available or ReplicationStatus.Summary.status-available is false."
                  },
                  "status_available": {
                    "type": "boolean",
                    "description": "Indicates if the replication status for the node with respect to replication partner can be retrieved or not."
                  },
                  "partner_available": {
                    "type": "boolean",
                    "description": "Indicates if the VMware Directory Service on partner is reachable or not."
                  },
                  "replication_partner": {
                    "type": "string",
                    "description": "Identifier for the vCenter or Platform Services Controller replication partner. Identifier can be either IP address or DNS resolvable name of the replication partner.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.VCenter.name. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.VCenter.name."
                  }
                }
              }
            }
          }
        }
      ]
  listTrustedInfrastructureAttestationServices:
    description: |-
      Returns detailed information about all registered Attestation Service instances in this vCenter.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadTrustedHosts. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/attestation/servicesactionquery/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "group": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The group specifies the Key Provider Service instances that can accept reports issued by this Attestation Service instance.\nIf unset, the services will not be filtered by group.",
              "uniqueItems": true
            },
            "address": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "hostname"
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The port of the service.\nIf unset, port 443 will be used."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The IP address or DNS resolvable name of the service."
                  }
                }
              },
              "description": "A set of address by which to filter.\nIf unset, the services will not be filtered by address."
            },
            "services": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A set of IDs by which to filter the services.\nIf unset, the services will not be filtered by ID.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.trusted_infrastructure.attestation.Service. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.trusted_infrastructure.attestation.Service.",
              "uniqueItems": true
            },
            "trust_authority_cluster": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The cluster specifies the Trust Authority Cluster this Attestation Service belongs to.\nIf unset, the services will not be filtered by trustAuthorityCluster.",
              "uniqueItems": true
            }
          }
        }
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "address",
              "group",
              "service",
              "trust_authority_cluster"
            ],
            "properties": {
              "group": {
                "type": "string",
                "description": "The group specifies the Key Provider Service instances that can accept reports issued by this Attestation Service instance."
              },
              "address": {
                "type": "object",
                "required": [
                  "hostname"
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The port of the service.\nIf unset, port 443 will be used."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The IP address or DNS resolvable name of the service."
                  }
                }
              },
              "service": {
                "type": "string",
                "description": "The service's unique identifier.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.trusted_infrastructure.attestation.Service. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.trusted_infrastructure.attestation.Service."
              },
              "trust_authority_cluster": {
                "type": "string",
                "description": "The cluster specifies the Trust Authority Cluster this Attestation Service instance belongs to."
              }
            }
          }
        }
      ]
  createTrustedInfrastructureAttestationService:
    description: |-
      Registers a new Attestation Service instance in this vCenter.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ManageTrustedHosts. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/attestation/services/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "address",
            "group",
            "trust_authority_cluster",
            "trusted_CA"
          ],
          "properties": {
            "group": {
              "type": "string",
              "description": "The group specifies the Key Provider Service instances that can accept reports issued by this Attestation Service instance."
            },
            "address": {
              "type": "object",
              "required": [
                "hostname"
              ],
              "properties": {
                "port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The port of the service.\nIf unset, port 443 will be used."
                },
                "hostname": {
                  "type": "string",
                  "description": "The IP address or DNS resolvable name of the service."
                }
              }
            },
            "trusted_CA": {
              "type": "object",
              "required": [
                "cert_chain"
              ],
              "properties": {
                "cert_chain": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Certificate chain in base64 format"
                }
              }
            },
            "trust_authority_cluster": {
              "type": "string",
              "description": "The cluster specifies the Trust Authority Cluster this Attestation Service belongs to."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  deleteTrustedInfrastructureAttestationService:
    description: |-
      Removes a registered Attestation Service instance from this vCenter.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ManageTrustedHosts. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/attestation/services/service/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureAttestationService:
    description: |-
      Returns the detailed information about a registered Attestation Service instance in this vCenter.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadTrustedHosts. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/attestation/services/service/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  listTrustedInfrastructureKMSServices:
    description: |-
      Returns basic information about all registered Key Provider Service instances in this vCenter.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadTrustedHosts. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/kms/servicesactionquery/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "group": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The group determines the Attestation Service instances this Key Provider Service can accept reports from.\nIf unset, the Services will not be filtered by group.",
              "uniqueItems": true
            },
            "address": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "hostname"
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The port of the service.\nIf unset, port 443 will be used."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The IP address or DNS resolvable name of the service."
                  }
                }
              },
              "description": "A set of address by which to filter.\nIf unset, the services will not be filtered by address."
            },
            "services": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A set of IDs by which to filter the services.\nIf unset, the services will not be filtered by ID.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.trusted_infrastructure.kms.Service. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.trusted_infrastructure.kms.Service.",
              "uniqueItems": true
            },
            "trust_authority_cluster": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The cluster specifies the Trust Authority Cluster this Key Provider Service belongs to.\nIf unset, the Services will not be filtered by trustAuthorityCluster.",
              "uniqueItems": true
            }
          }
        }
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "address",
              "group",
              "service",
              "trust_authority_cluster"
            ],
            "properties": {
              "group": {
                "type": "string",
                "description": "The group determines the Attestation Service instances this Key Provider Service can accept reports from."
              },
              "address": {
                "type": "object",
                "required": [
                  "hostname"
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The port of the service.\nIf unset, port 443 will be used."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The IP address or DNS resolvable name of the service."
                  }
                }
              },
              "service": {
                "type": "string",
                "description": "The service's unique identifier.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.trusted_infrastructure.kms.Service. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.trusted_infrastructure.kms.Service."
              },
              "trust_authority_cluster": {
                "type": "string",
                "description": "The cluster specifies the Trust Authority Cluster this Key Provider service belongs to."
              }
            }
          }
        }
      ]
  createTrustedInfrastructureKMSService:
    description: |-
      Registers a Key Provider Service instance in this vCenter.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ManageTrustedHosts. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/kms/services/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "address",
            "group",
            "trust_authority_cluster",
            "trusted_CA"
          ],
          "properties": {
            "group": {
              "type": "string",
              "description": "The group determines the Attestation Service instances this Key Provider service can accept reports from."
            },
            "address": {
              "type": "object",
              "required": [
                "hostname"
              ],
              "properties": {
                "port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The port of the service.\nIf unset, port 443 will be used."
                },
                "hostname": {
                  "type": "string",
                  "description": "The IP address or DNS resolvable name of the service."
                }
              }
            },
            "trusted_CA": {
              "type": "object",
              "required": [
                "cert_chain"
              ],
              "properties": {
                "cert_chain": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Certificate chain in base64 format"
                }
              }
            },
            "trust_authority_cluster": {
              "type": "string",
              "description": "The cluster specifies the Trust Authority Cluster this Key Provider Service belongs to."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  deleteTrustedInfrastructureKMSService:
    description: |-
      Removes a currently registered Key Provider Service instance from this vCenter.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ManageTrustedHosts. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/kms/services/service/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureKMSService:
    description: |-
      Returns the detailed information about a registered Key Provider Service instance in this vCenter.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadTrustedHosts. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/kms/services/service/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "address",
            "group",
            "trust_authority_cluster",
            "trusted_CA"
          ],
          "properties": {
            "group": {
              "type": "string",
              "description": "The group determines the Attestation Service instances this Key Provider Service can accept reports from."
            },
            "address": {
              "type": "object",
              "required": [
                "hostname"
              ],
              "properties": {
                "port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The port of the service.\nIf unset, port 443 will be used."
                },
                "hostname": {
                  "type": "string",
                  "description": "The IP address or DNS resolvable name of the service."
                }
              }
            },
            "trusted_CA": {
              "type": "object",
              "required": [
                "cert_chain"
              ],
              "properties": {
                "cert_chain": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Certificate chain in base64 format"
                }
              }
            },
            "trust_authority_cluster": {
              "type": "string",
              "description": "The cluster specifies the Trust Authority Cluster this Key Provider Service belongs to."
            }
          }
        }
      ]
  getTrustedInfrastructurePrincipal:
    description: |-
      Returns information about the STS used by this vCenter instance.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadStsInfo. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/principal/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "certificates",
            "issuer",
            "name",
            "principal"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The user-friednly name of the vCenter."
            },
            "issuer": {
              "type": "string",
              "description": "The service which created and signed the security token."
            },
            "principal": {
              "type": "object",
              "required": [
                "id",
                "type"
              ],
              "properties": {
                "id": {
                  "type": "object",
                  "required": [
                    "domain",
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The principal's username."
                    },
                    "domain": {
                      "type": "string",
                      "description": "The principal's domain."
                    }
                  }
                },
                "type": {
                  "enum": [
                    "STS_USER",
                    "STS_GROUP"
                  ],
                  "type": "string",
                  "description": "The StsPrincipalType enum can be either users or groups."
                }
              }
            },
            "certificates": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "cert_chain"
                ],
                "properties": {
                  "cert_chain": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Certificate chain in base64 format"
                  }
                }
              },
              "description": "The certificates used by the STS to sign tokens for this vCenter."
            }
          }
        }
      ]
  importTrustedInfrastructureTrustAuthorityClusterAttestationOSESXBaseImage:
    description: |-
      Import ESX metadata as a new trusted base image to each host in the cluster. 
       Import a boot_imgdb.tgz file which contains metadata that describes a trusted ESX base image. A boot_imgdb.tgz file can be downloaded from a representative host.
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/os/esx/base-imagesactionimport-from-imgdbvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "string",
          "format": "binary",
          "description": "ESX metadata on a cluster level."
        }
      ]
      outputs: [
        {}
      ]
  deleteTrustedInfrastructureTrustAuthorityClusterAttestationOSESXBaseImage:
    description: |-
      Remove a trusted ESX base image of each ESX in the cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/os/esx/base-images/versionvmw-tasktrue/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureTrustAuthorityClusterAttestationOSESXBaseImage:
    description: |-
      Get the trusted ESX base version details.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/os/esx/base-images/versionvmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  listTrustedInfrastructureTrustAuthorityClusterAttestationOSESXBaseImages:
    description: |-
      Return a list of trusted ESX base images.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/os/esx/base-imagesvmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureTrustAuthorityClusterAttestationServiceStatus:
    description: |-
      Return the Attestation service health in the given cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/service-statusvmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteTrustedInfrastructureTrustAuthorityClusterAttestationTPM2CaCertificate:
    description: |-
      Remove a TPM CA certificate on a cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/tpm2/ca-certificates/namevmw-tasktrue/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureTrustAuthorityClusterAttestationTPM2CaCertificate:
    description: |-
      Get the TPM CA certificate details on a cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/tpm2/ca-certificates/namevmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  listTrustedInfrastructureTrustAuthorityClusterAttestationTPM2CaCertificate:
    description: |-
      Return a list of configured TPM CA certificates on a cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/tpm2/ca-certificatesvmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  createTrustedInfrastructureTrustAuthorityClusterAttestationTPM2CaCertificate:
    description: |-
      Add a new TPM CA certificate on a cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/tpm2/ca-certificatesvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "A unique name for the TPM CA certificate.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.trusted_infrastructure.trust_authority_clusters.attestation.tpm2.CaCertificate. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.trusted_infrastructure.trust_authority_clusters.attestation.tpm2.CaCertificate."
            },
            "cert_chain": {
              "type": "object",
              "required": [
                "cert_chain"
              ],
              "properties": {
                "cert_chain": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Certificate chain in base64 format"
                }
              }
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  deleteTrustedInfrastructureTrustAuthorityClusterAttestationTPM2EndorsementKey:
    description: |-
      Remove a TPM endorsement key on a cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/tpm2/endorsement-keys/namevmw-tasktrue/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureTrustAuthorityClusterAttestationTPM2EndorsementKey:
    description: |-
      Get the TPM endorsement key details on a cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/tpm2/endorsement-keys/namevmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  listTrustedInfrastructureTrustAuthorityClusterAttestationTPM2EndorsementKeys:
    description: |-
      Return a list of configured TPM endorsement keys in a cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/tpm2/endorsement-keysvmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  createTrustedInfrastructureTrustAuthorityClusterAttestationTPM2EndorsementKey:
    description: |-
      Add a new TPM endorsement key on a cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/tpm2/endorsement-keysvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "A unique name for the TPM endorsement key. \n The unique name should be something that an administrator can use to easily identify the remote system. For example, the hostname, or hardware UUID.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.trusted_infrastructure.trust_authority_clusters.attestation.tpm2.EndorsementKey. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.trusted_infrastructure.trust_authority_clusters.attestation.tpm2.EndorsementKey."
            },
            "public_key": {
              "type": "string",
              "description": "TPM public endorsement key in PEM format.\nIf unset EndorsementKeys.CreateSpec.certificate must be set."
            },
            "certificate": {
              "type": "string",
              "description": "TPM endorsement key certificate in PEM format. \n When a endorsement key certificate is provided, it will be verified against the CA certificate list. Endorsement key certificates that are not signed by one of the CA certificates will be rejected. \n\n Using this format allows for failures to be caught during configuration rather than later during attestation.\n\nIf unset EndorsementKeys.CreateSpec.public-key must be set."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureTrustAuthorityClusterAttestationTPM2Setting:
    description: |-
      Return the TPM 2.0 protocol settings.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/tpm2/settingsvmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  updateTrustedInfrastructureTrustAuthorityClusterAttestationTPM2Setting:
    description: |-
      Set the TPM 2.0 protocol settings.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/attestation/tpm2/settingsvmw-tasktrue/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "require_endorsement_keys": {
              "type": "boolean",
              "description": "Require registered TPM endorsement keys.\nIf unset the current state will remain unchanged."
            },
            "require_certificate_validation": {
              "type": "boolean",
              "description": "Require TPM endorsement key certificate validation.\nIf unset the current state will remain unchanged."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listTrustedInfrastructureTrustAuthorityClusterConsumerPrincipals:
    description: |-
      Lists all policies configured on a specific cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/consumer-principalsactionqueryvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The unqiue identifier of a connection profile.\nIf unset, no filtration will be performed by ID.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: esx.authentication.clientprofile. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: esx.authentication.clientprofile.",
              "uniqueItems": true
            },
            "issuer": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The service which created and signed the security token.\nIf unset, no filtration will be performed by issuer.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: esx.authentication.trust.security-token-issuer. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: esx.authentication.trust.security-token-issuer.",
              "uniqueItems": true
            },
            "principals": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "id",
                  "type"
                ],
                "properties": {
                  "id": {
                    "type": "object",
                    "required": [
                      "domain",
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The principal's username."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The principal's domain."
                      }
                    }
                  },
                  "type": {
                    "enum": [
                      "STS_USER",
                      "STS_GROUP"
                    ],
                    "type": "string",
                    "description": "The StsPrincipalType enum can be either users or groups."
                  }
                }
              },
              "description": "The principal used by the vCenter to retrieve tokens.\nIf unset, no filtration will be performed by principals."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  deleteTrustedInfrastructureTrustAuthorityClusterConsumerPrincipal:
    description: |-
      Removes the read-only policy configured on ESX for a specific principal.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/consumer-principals/profilevmw-tasktrue/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureTrustAuthorityClusterConsumerPrincipal:
    description: |-
      Retrieve information for a specific profile.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/consumer-principals/profilevmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  createTrustedInfrastructureTrustAuthorityClusterConsumerPrincipal:
    description: |-
      Creates a profile with the specified connection information on all hosts from a Trust Authority Cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/consumer-principalsvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "certificates",
            "issuer",
            "issuer_alias",
            "principal"
          ],
          "properties": {
            "issuer": {
              "type": "string",
              "description": "The service which created and signed the security token."
            },
            "principal": {
              "type": "object",
              "required": [
                "id",
                "type"
              ],
              "properties": {
                "id": {
                  "type": "object",
                  "required": [
                    "domain",
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The principal's username."
                    },
                    "domain": {
                      "type": "string",
                      "description": "The principal's domain."
                    }
                  }
                },
                "type": {
                  "enum": [
                    "STS_USER",
                    "STS_GROUP"
                  ],
                  "type": "string",
                  "description": "The StsPrincipalType enum can be either users or groups."
                }
              }
            },
            "certificates": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "cert_chain"
                ],
                "properties": {
                  "cert_chain": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Certificate chain in base64 format"
                  }
                }
              },
              "description": "The certificates used by the vCenter STS to sign tokens."
            },
            "issuer_alias": {
              "type": "string",
              "description": "A user-friendly alias of the service which created and signed the security token.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: esx.authentication.trust.security-token-issuer. When operations return a value of this structure as a result, the field will be an identifier for the resource type: esx.authentication.trust.security-token-issuer."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureAuthorityCluster:
    description: |-
      Get the result of the last Update operation which matches the cluster id.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadTrustedHosts. 
        -  The resource ClusterComputeResource referenced by the parameter cluster requires System.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "cluster",
            "state"
          ],
          "properties": {
            "state": {
              "enum": [
                "ENABLE",
                "DISABLE"
              ],
              "type": "string"
            },
            "cluster": {
              "type": "string",
              "description": "Identifies the cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
            }
          }
        }
      ]
  getTrustedInfrastructureTrustAuthorityClusterKMSProviderClientCertificateCSR:
    description: |-
      Get existing certificate signing request (CSR) for the client certificate. 
       The CSR will allow the certificate to be signed by a third party. Once the CSR is signed, certificate may be added as a client certificate. 
      
      
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/providers/provider/client-certificate/csrvmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  createTrustedInfrastructureTrustAuthorityClusterKMSProviderClientCertificateCSR:
    description: |-
      Generate a certificate signing request (CSR) for the client certificate. This overwrites any existing CSR. 
       The CSR will allow the certificate to be signed by a third party. Once the CSR is signed, certificate may be added as a client certificate. 
      
       Calling the API repeatedly will result in a generating a new CSR each time.
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/providers/provider/client-certificate/csrvmw-tasktrue/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureTrustAuthorityClusterKMSProviderClientCertificate:
    description: |-
      Return the existing client certificate.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/providers/provider/client-certificatevmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  updateTrustedInfrastructureTrustAuthorityClusterKMSProviderClientCertificate:
    description: |-
      Update the client certificate. 
       The key server will use this certificate to validate the client connection. If a client certificate already exists, it will be replaced. 
      
       An optional private key can be specified if the certificate has already been provisioned.
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/providers/provider/client-certificatevmw-tasktrue/patch/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "certificate"
          ],
          "properties": {
            "certificate": {
              "type": "string",
              "description": "Public certificate used by every host in the cluster."
            },
            "private_key": {
              "type": "string",
              "format": "password",
              "description": "Private part of the certificate.\nIf unset, the update request is for a public/private client certificate pair, not for a signed CSR."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  createTrustedInfrastructureTrustAuthorityClusterKMSProviderClientCertificate:
    description: |-
      Generate a new self signed client certificate. Existing client certificate is overwritten. The key server will use this certificate to validate the client connection.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/providers/provider/client-certificatevmw-tasktrue/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  setTrustedInfrastructureTrustAuthorityClusterKMSProviderCredential:
    description: |-
      Set the key server credential.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/providers/provider/credentialvmw-tasktrue/put/
    example:
      inputs: [
        {
          "type": "string",
          "format": "password",
          "description": "KMIP KMS password or AWS access key."
        }
      ]
      outputs: [
        {}
      ]
  listTrustedInfrastructureTrustAuthorityClusterKMSProviderCurrentPeerCertificates:
    description: |-
      Return the remote server certificates. 
       Contacts the configured key servers and attempts to retrieve their certificates. These certificates might not yet be trusted. 
      
       If the returned certificates are to be considered trustworthy, then it must be added to the list of trusted server certificates by adding to the certificates returned by TrustedPeerCertificates.get and invoking TrustedPeerCertificates.update with the updated list of certificates.
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/providers/provider/peer-certs/currentvmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  listTrustedInfrastructureTrustAuthorityClusterKMSProviderTrustedPeerCertificates:
    description: |-
      Return the list of trusted server certificates.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/providers/provider/peer-certs/trustedvmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  updateTrustedInfrastructureTrustAuthorityClusterKMSProviderTrustedPeerCertificate:
    description: |-
      Update trusted server certificate(s). 
       The client will use these certificates to validate the server connection. The existing list of trusted certificates will be overwritten. 
      
       The client will not trust the server connection until a server certificate has been set.
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/providers/provider/peer-certs/trustedvmw-tasktrue/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "certificates": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Public certificates of key server to trust.\nIf unset, the trusted server certificates will not be updated."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  deleteTrustedInfrastructureTrustAuthorityClusterKMSProvider:
    description: |-
      Remove a Key Provider.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/providers/providervmw-tasktrue/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureTrustAuthorityClusterKMSProvider:
    description: |-
      Return information about a Key Provider.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/providers/providervmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  updateTrustedInfrastructureTrustAuthorityClusterKMSProvider:
    description: |-
      Update an existing Key Provider.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/providers/providervmw-tasktrue/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "key_server": {
              "type": "object",
              "properties": {
                "type": {
                  "enum": [
                    "KMIP"
                  ],
                  "type": "string",
                  "description": "The Providers.KeyServerUpdateSpec.Type enumerated type list the key server types."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the key server. \n\n\nIf unset, description will remain unchanged."
                },
                "kmip_server": {
                  "type": "object",
                  "properties": {
                    "servers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "address",
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the server. \n A unique string chosen by the client.\n"
                          },
                          "address": {
                            "type": "object",
                            "required": [
                              "hostname"
                            ],
                            "properties": {
                              "port": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The port of the service.\nIf unset, port 443 will be used."
                              },
                              "hostname": {
                                "type": "string",
                                "description": "The IP address or DNS resolvable name of the service."
                              }
                            }
                          }
                        }
                      },
                      "description": "List of KMIP compliant key servers. \n Key servers must be configured for active-active replication. If the server port is unset, a default value for KMIP's port will be used. \n\n\n\nIf unset, server configuration will remain unchanged."
                    },
                    "username": {
                      "type": "string",
                      "description": "Username for authentication. \n\n\nIf unset, username will remain unchanged."
                    }
                  }
                },
                "proxy_server": {
                  "type": "object",
                  "required": [
                    "hostname"
                  ],
                  "properties": {
                    "port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The port of the service.\nIf unset, port 443 will be used."
                    },
                    "hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the service."
                    }
                  }
                },
                "connection_timeout": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Connection timeout in seconds. \n\n\nIf unset, connection timeout will remain unchanged."
                }
              }
            },
            "master_key_id": {
              "type": "string",
              "description": "Master key identifier created for the provider. \n A unique Key identifier. \n\n\n\nIf unset, masterKeyId will remain unchanged."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listTrustedInfrastructureTrustAuthorityClusterKMSProviders:
    description: |-
      Return a list of summary of Key Providers.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/providersvmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  createTrustedInfrastructureTrustAuthorityClusterKMSProvider:
    description: |-
      Add a new Key Provider.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/providersvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "key_server",
            "master_key_id",
            "provider"
          ],
          "properties": {
            "provider": {
              "type": "string",
              "description": "Name of the provider. \n A unique string chosen by the client.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.trusted_infrastructure.trust_authority_clusters.kms.Provider. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.trusted_infrastructure.trust_authority_clusters.kms.Provider."
            },
            "key_server": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "enum": [
                    "KMIP"
                  ],
                  "type": "string",
                  "description": "The Providers.KeyServerCreateSpec.Type enumerated type lists the key server types."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the key server.\nIf unset, description will not be added."
                },
                "kmip_server": {
                  "type": "object",
                  "required": [
                    "servers"
                  ],
                  "properties": {
                    "servers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "address",
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the server. \n A unique string chosen by the client.\n"
                          },
                          "address": {
                            "type": "object",
                            "required": [
                              "hostname"
                            ],
                            "properties": {
                              "port": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The port of the service.\nIf unset, port 443 will be used."
                              },
                              "hostname": {
                                "type": "string",
                                "description": "The IP address or DNS resolvable name of the service."
                              }
                            }
                          }
                        }
                      },
                      "description": "List of Key Management Interoperability Protocol (KMIP) compliant key servers. \n Key servers must be configured for active-active replication. If the server port is unset, a default value for KMIP's port will be used.\n"
                    },
                    "username": {
                      "type": "string",
                      "description": "Username for authentication.\nIf unset, no username will be added."
                    }
                  }
                },
                "proxy_server": {
                  "type": "object",
                  "required": [
                    "hostname"
                  ],
                  "properties": {
                    "port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The port of the service.\nIf unset, port 443 will be used."
                    },
                    "hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the service."
                    }
                  }
                },
                "connection_timeout": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Connection timeout in seconds.\nIf unset, connection timeout will not be set."
                }
              }
            },
            "master_key_id": {
              "type": "string",
              "description": "Master key ID created for the provider. \n A unique Key ID.\n"
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureTrustAuthorityClusterKMSServiceStatus:
    description: |-
      Return the Key Provider Service health in the given cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/cluster/kms/service-statusvmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  updateTrustedInfrastructureTrustAuthorityCluster:
    description: |-
      Updates the state of a cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/clustervmw-tasktrue/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "state": {
              "enum": [
                "ENABLE",
                "DISABLE"
              ],
              "type": "string"
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listTrustedInfrastructureAuthorityClusters:
    description: |-
      Returns a list of clusters for this vCenter instance which matches the TrustAuthorityClusters.FilterSpec.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadTrustedHosts. 
        -  The resource ClusterComputeResource referenced by the attribute TrustAuthorityClusters.FilterSpec.cluster requires System.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "cluster",
              "state"
            ],
            "properties": {
              "state": {
                "enum": [
                  "ENABLE",
                  "DISABLE"
                ],
                "type": "string"
              },
              "cluster": {
                "type": "string",
                "description": "Identifies the cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
              }
            }
          }
        }
      ]
  listTrustedInfrastructureTrustAuthorityClusters:
    description: |-
      Returns a list of the hosts running a Attestation Service matching the specified Attestation.FilterSpec.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadTrustedHosts. 
        -  The resource HostSystem referenced by the attribute Attestation.FilterSpec.hosts requires System.View. 
        -  The resource ClusterComputeResource referenced by the attribute Attestation.FilterSpec.clusters requires System.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-clusters/get/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "hosts": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A set of host IDs by which to filter the services.\nIf unset, the services will not be filtered by the hosts on which they run.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: HostSystem. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: HostSystem.",
              "uniqueItems": true
            },
            "groups": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The group IDs determines which Attestation Service instances this Attestation Service can communicate with.\nIf unset, the services will not be filtered by groupId.",
              "uniqueItems": true
            },
            "address": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "hostname"
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The port of the service.\nIf unset, port 443 will be used."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The IP address or DNS resolvable name of the service."
                  }
                }
              },
              "description": "The service's address.\nIf unset, the services will not be filtered by address."
            },
            "clusters": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A set of cluster IDs by which to filter the services.\nIf unset, the services will not be filtered by the clusters on which they run.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ClusterComputeResource.",
              "uniqueItems": true
            }
          }
        }
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "summary_type"
            ],
            "properties": {
              "host": {
                "type": "string",
                "description": "The trusted ESX on which the service runs.\nThis field is optional and it is only relevant when the value of Attestation.Summary.summary-type is one of BRIEF, NORMAL, or FULL.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem."
              },
              "group": {
                "type": "string",
                "description": "The group ID determines which Attestation Service instances this Attestation Service can communicate with.\nThis field is optional and it is only relevant when the value of Attestation.Summary.summary-type is one of NORMAL or FULL."
              },
              "address": {
                "type": "object",
                "required": [
                  "hostname"
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The port of the service.\nIf unset, port 443 will be used."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The IP address or DNS resolvable name of the service."
                  }
                }
              },
              "cluster": {
                "type": "string",
                "description": "The opaque string identifier of the cluster in which the Attestation Service is part of.\nThis field is optional and it is only relevant when the value of Attestation.Summary.summary-type is one of NORMAL or FULL."
              },
              "trusted_CA": {
                "type": "object",
                "required": [
                  "cert_chain"
                ],
                "properties": {
                  "cert_chain": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Certificate chain in base64 format"
                  }
                }
              },
              "summary_type": {
                "enum": [
                  "FULL",
                  "NORMAL",
                  "BRIEF"
                ],
                "type": "string",
                "description": "The connection information could include the certificates or be a shorter summary."
              }
            }
          }
        }
      ]
  getTrustedInfrastructureTrustAuthorityHostsAttestation:
    description: |-
      Returns the connection info about the Attestation Service running on the specified host.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadTrustedHosts. 
        -  The resource HostSystem referenced by the parameter host requires System.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-hosts/host/attestation/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "address",
            "cluster",
            "group",
            "host",
            "trusted_CA"
          ],
          "properties": {
            "host": {
              "type": "string",
              "description": "The trusted ESX on which the service runs.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem."
            },
            "group": {
              "type": "string",
              "description": "The group ID determines which Attestation Service instances this Attestation Service can communicate with."
            },
            "address": {
              "type": "object",
              "required": [
                "hostname"
              ],
              "properties": {
                "port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The port of the service.\nIf unset, port 443 will be used."
                },
                "hostname": {
                  "type": "string",
                  "description": "The IP address or DNS resolvable name of the service."
                }
              }
            },
            "cluster": {
              "type": "string",
              "description": "The opaque string identifier of the cluster in which the Attestation Service is part of."
            },
            "trusted_CA": {
              "type": "object",
              "required": [
                "cert_chain"
              ],
              "properties": {
                "cert_chain": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Certificate chain in base64 format"
                }
              }
            }
          }
        }
      ]
  getTrustedInfrastructureTrustAuthorityHostsKMS:
    description: |-
      Returns the connection info about the Key Provider Service running on the specified host.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadTrustedHosts. 
        -  The resource HostSystem referenced by the parameter host requires System.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-hosts/host/kms/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "address",
            "cluster",
            "group",
            "host",
            "trusted_CA"
          ],
          "properties": {
            "host": {
              "type": "string",
              "description": "The trusted ESX on which the service runs.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem."
            },
            "group": {
              "type": "string",
              "description": "The group ID determines which Attestation Service instances this Key Provider Service can communicate with."
            },
            "address": {
              "type": "object",
              "required": [
                "hostname"
              ],
              "properties": {
                "port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The port of the service.\nIf unset, port 443 will be used."
                },
                "hostname": {
                  "type": "string",
                  "description": "The IP address or DNS resolvable name of the service."
                }
              }
            },
            "cluster": {
              "type": "string",
              "description": "The opaque string identifier of the cluster in which the Key Provider Service is part of."
            },
            "trusted_CA": {
              "type": "object",
              "required": [
                "cert_chain"
              ],
              "properties": {
                "cert_chain": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Certificate chain in base64 format"
                }
              }
            }
          }
        }
      ]
  listTrustedInfrastructureTrustAuthorityHostsKMS:
    description: |-
      Returns a list of the hosts running a Key Provider Service matching the specified Kms.FilterSpec.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadTrustedHosts. 
        -  The resource HostSystem referenced by the attribute Kms.FilterSpec.hosts requires System.View. 
        -  The resource ClusterComputeResource referenced by the attribute Kms.FilterSpec.clusters requires System.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trust-authority-hosts/kmsactionquery/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "hosts": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A set of host IDs by which to filter the services.\nIf unset, the services will not be filtered by the hosts on which they run.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: HostSystem. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: HostSystem.",
              "uniqueItems": true
            },
            "groups": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The group determines reports issued by which Attestation Service instances this Key Provider Service can accept.\nIf unset, the services will not be filtered by groupId.",
              "uniqueItems": true
            },
            "address": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "hostname"
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The port of the service.\nIf unset, port 443 will be used."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The IP address or DNS resolvable name of the service."
                  }
                }
              },
              "description": "The service's address.\nIf unset, the services will not be filtered by address."
            },
            "clusters": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A set of cluster IDs by which to filter the services.\nIf unset, the services will not be filtered by the clusters on which they run.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ClusterComputeResource.",
              "uniqueItems": true
            }
          }
        }
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "summary_type"
            ],
            "properties": {
              "host": {
                "type": "string",
                "description": "The trusted ESX on which the service runs.\nThis field is optional and it is only relevant when the value of Kms.Summary.summary-type is one of BRIEF, NORMAL, or FULL.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem."
              },
              "group": {
                "type": "string",
                "description": "The group ID determines which Attestation Service instances this Key Provider Service can communicate with.\nThis field is optional and it is only relevant when the value of Kms.Summary.summary-type is one of NORMAL or FULL."
              },
              "address": {
                "type": "object",
                "required": [
                  "hostname"
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The port of the service.\nIf unset, port 443 will be used."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The IP address or DNS resolvable name of the service."
                  }
                }
              },
              "cluster": {
                "type": "string",
                "description": "The opaque string identifier of the cluster in which the Key Provider Service is part of.\nThis field is optional and it is only relevant when the value of Kms.Summary.summary-type is one of NORMAL or FULL."
              },
              "trusted_CA": {
                "type": "object",
                "required": [
                  "cert_chain"
                ],
                "properties": {
                  "cert_chain": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Certificate chain in base64 format"
                  }
                }
              },
              "summary_type": {
                "enum": [
                  "FULL",
                  "NORMAL",
                  "BRIEF"
                ],
                "type": "string",
                "description": "The connection information could include the certificates or be a shorter summary."
              }
            }
          }
        }
      ]
  listTrustedInfrastructureTrustedClusterAttestationServices:
    description: |-
      Returns the basic information about all configured Attestation Service instances used by this cluster.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadTrustedHosts. 
        -  The resource ClusterComputeResource referenced by the parameter cluster requires System.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/attestation/servicesactionquery/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "group": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The group specifies the Key Provider Service instances can accept reports issued by this Attestation Service instance.\nIf unset, the services will not be filtered by group.",
              "uniqueItems": true
            },
            "address": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "hostname"
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The port of the service.\nIf unset, port 443 will be used."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The IP address or DNS resolvable name of the service."
                  }
                }
              },
              "description": "The service's address.\nIf unset, the services will not be filtered by address."
            },
            "services": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A set of IDs by which to filter the services.\nIf unset, the services will not be filtered by ID.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.trusted_infrastructure.attestation.Service. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.trusted_infrastructure.attestation.Service.",
              "uniqueItems": true
            },
            "trust_authority_cluster": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The cluster specifies the Trust Authority Cluster this Attestation Service instance belongs to.\nIf unset, the services will not be filtered by trustAuthorityCluster.",
              "uniqueItems": true
            }
          }
        }
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "address",
              "group",
              "service",
              "trust_authority_cluster"
            ],
            "properties": {
              "group": {
                "type": "string",
                "description": "The group specifies the Key Provider Service instances can accept reports issued by this Attestation Service instance."
              },
              "address": {
                "type": "object",
                "required": [
                  "hostname"
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The port of the service.\nIf unset, port 443 will be used."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The IP address or DNS resolvable name of the service."
                  }
                }
              },
              "service": {
                "type": "string",
                "description": "The service's unique identifier.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.trusted_infrastructure.attestation.Service. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.trusted_infrastructure.attestation.Service."
              },
              "trust_authority_cluster": {
                "type": "string",
                "description": "The cluster specifies the Trust Authority Cluster this Attestation Service belongs to."
              }
            }
          }
        }
      ]
  listTrustedInfrastructureTrustedClustersAttestationServicesAppliedConfigs:
    description: |-
      Returns basic information about the health of all Attestation Service configurations applied to the cluster with respect to the desired state. Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/attestation/services-applied-configactionqueryvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "health": {
              "type": "array",
              "items": {
                "enum": [
                  "NONE",
                  "OK",
                  "ERROR"
                ],
                "type": "string",
                "description": "The ServicesAppliedConfig.Health enumerated type is an indicator for the consistency of the applied Attestation Service configuration in a cluster with respect to the desired state. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
              },
              "description": "The health of the applied Attestation Service configuration. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf unset, no filtration will be performed by health.",
              "uniqueItems": true
            },
            "address": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "hostname"
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The port of the service.\nIf unset, port 443 will be used."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The IP address or DNS resolvable name of the service."
                  }
                }
              },
              "description": "The network address of the Attestation Service configured for use in the Trusted Cluster. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf unset, no filtration will be performed by network address."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  deleteTrustedInfrastructureTrustedClustersAttestationServicesAppliedConfig:
    description: |-
      Delete the Attestation Service configuration that has been applied to the given cluster. This method has no affect on the desired state, it only removes applied Attestation Service configuration from any Trusted Hosts within the given cluster. Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/attestation/services-applied-configvmw-tasktrue/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureTrustedClustersAttestationServicesAppliedConfig:
    description: |-
      Returns detailed information about the health of the specified Attestation Service configuration applied to the cluster with respect to the desired state. Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/attestation/services-applied-configvmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  updateTrustedInfrastructureTrustedClustersAttestationServicesAppliedConfig:
    description: |-
      Update the applied Attestation Service configuration on the given Trusted Cluster to be consistent with the desired state. This method has no affect on the desired state, apart from it being used as a reference point for the remediation. If the cluster is not a Trusted Cluster, the method will throw an InvalidArgument. Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/attestation/services-applied-configvmw-tasktrue/patch/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureTrustedClusterAttestationService:
    description: |-
      Returns detailed information about the given registered Attestation Service instance that is configured for the given cluster.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadTrustedHosts. 
        -  The resource ClusterComputeResource referenced by the parameter cluster requires System.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/attestation/services/service/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "address",
            "group",
            "trust_authority_cluster",
            "trusted_CA"
          ],
          "properties": {
            "group": {
              "type": "string",
              "description": "The group determines the Key Provider Service instances can accept reports issued by this Attestation Service instance."
            },
            "address": {
              "type": "object",
              "required": [
                "hostname"
              ],
              "properties": {
                "port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The port of the service.\nIf unset, port 443 will be used."
                },
                "hostname": {
                  "type": "string",
                  "description": "The IP address or DNS resolvable name of the service."
                }
              }
            },
            "trusted_CA": {
              "type": "object",
              "required": [
                "cert_chain"
              ],
              "properties": {
                "cert_chain": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Certificate chain in base64 format"
                }
              }
            },
            "trust_authority_cluster": {
              "type": "string",
              "description": "The cluster specifies the Trust Authority Cluster this Attestation Service belongs to."
            }
          }
        }
      ]
  deleteTrustedInfrastructureTrustedClusterAttestationService:
    description: |-
      Removes the Attestation Service instance from the configuration of the given cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/attestation/services/servicevmw-tasktrue/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  createTrustedInfrastructureTrustedClusterAttestationService:
    description: |-
      Configures the cluster to use a the given registered Attestation Service.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/attestation/servicesvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "enum": [
                "SERVICE",
                "CLUSTER"
              ],
              "type": "string",
              "description": "The Services.CreateSpec.SourceType enumerated type specifies the source of truth the Attestation Service will use for its configuration."
            },
            "service": {
              "type": "string",
              "description": "The service's unique ID.\nThis field is optional and it is only relevant when the value of Services.CreateSpec.type is SERVICE.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.trusted_infrastructure.attestation.Service. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.trusted_infrastructure.attestation.Service."
            },
            "trust_authority_cluster": {
              "type": "string",
              "description": "The attestation cluster's unique ID.\nThis field is optional and it is only relevant when the value of Services.CreateSpec.type is CLUSTER."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listTrustedInfrastructureTrustedClusterKMSServices:
    description: |-
      Returns basic information about all configured Key Provider Service instances used by this cluster.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadTrustedHosts. 
        -  The resource ClusterComputeResource referenced by the parameter cluster requires System.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/kms/servicesactionquery/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "group": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The group determines the Attestation Service instances this Key Provider Service can accept reports from.\nIf unset, the services will not be filtered by group.",
              "uniqueItems": true
            },
            "address": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "hostname"
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The port of the service.\nIf unset, port 443 will be used."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The IP address or DNS resolvable name of the service."
                  }
                }
              },
              "description": "The service's address.\nIf unset, the services will not be filtered by address."
            },
            "services": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A set of IDs by which to filter the services.\nIf unset, the services will not be filtered by ID.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.trusted_infrastructure.kms.Service. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.trusted_infrastructure.kms.Service.",
              "uniqueItems": true
            },
            "trust_authority_cluster": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The cluster specifies the Trust Authority Cluster this Key Provider Service instance belongs to.\nIf unset, the services will not be filtered by trustAuthorityCluster.",
              "uniqueItems": true
            }
          }
        }
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "address",
              "group",
              "service",
              "trust_authority_cluster"
            ],
            "properties": {
              "group": {
                "type": "string",
                "description": "The group determines the Attestation Service instances this Key Provider Service can accept reports from."
              },
              "address": {
                "type": "object",
                "required": [
                  "hostname"
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The port of the service.\nIf unset, port 443 will be used."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The IP address or DNS resolvable name of the service."
                  }
                }
              },
              "service": {
                "type": "string",
                "description": "The service's unique identifier.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.trusted_infrastructure.kms.Service. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.trusted_infrastructure.kms.Service."
              },
              "trust_authority_cluster": {
                "type": "string",
                "description": "The cluster specifies the Trust Authority Cluster this Key Provider Service belongs to."
              }
            }
          }
        }
      ]
  listTrustedInfrastructureTrustedClusterKMSServicesAppliedConfigs:
    description: |-
      Returns basic information about the health of all Key Provider Service configurations applied to the cluster with respect to the desired state. Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/kms/services-applied-configactionqueryvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "health": {
              "type": "array",
              "items": {
                "enum": [
                  "NONE",
                  "OK",
                  "ERROR"
                ],
                "type": "string",
                "description": "The ServicesAppliedConfig.Health enumerated type is an indicator for the consistency of the applied Key Provider Service configuration in a cluster with respect to the desired state. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
              },
              "description": "The health of the applied Key Provider Service configuration. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf unset, no filtration will be performed by health.",
              "uniqueItems": true
            },
            "address": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "hostname"
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The port of the service.\nIf unset, port 443 will be used."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The IP address or DNS resolvable name of the service."
                  }
                }
              },
              "description": "The network address of the Key Provider Service configured for use in the Trusted Cluster. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf unset, no filtration will be performed by network address."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  deleteTrustedInfrastructureTrustedClusterKMSServicesAppliedConfig:
    description: |-
      Delete the Key Provider Service configuration that has been applied to the given cluster. This method has no affect on the desired state, it only removes applied Key Provider Service configuration from any Trusted Hosts within the given cluster. Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/kms/services-applied-configvmw-tasktrue/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureTrustedClusterKMSServicesAppliedConfig:
    description: |-
      Returns detailed information about the health of the specified Key Provider Service configuration applied to the cluster with respect to the desired state. Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/kms/services-applied-configvmw-tasktrue/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  updateTrustedInfrastructureTrustedClusterKMSServicesAppliedConfig:
    description: |-
      Update the applied Key Provider Service configuration on the given Trusted Cluster to be consistent with the desired state. This method has no affect on the desired state, apart from it being used as a reference point for the remediation. If the cluster is not a Trusted Cluster, the method will throw an InvalidArgument. Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/kms/services-applied-configvmw-tasktrue/patch/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getTrustedInfrastructureTrustedClusterKMSService:
    description: |-
      Returns detailed information about the given Key Provider Service instance used by the given cluster.
      if you do not have all of the privileges described as follows: 
         -  Operation execution requires TrustedAdmin.ReadTrustedHosts. 
        -  The resource ClusterComputeResource referenced by the parameter cluster requires System.View. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/kms/services/service/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "address",
            "group",
            "trust_authority_cluster",
            "trusted_CA"
          ],
          "properties": {
            "group": {
              "type": "string",
              "description": "The group determines the Attestation Service instances this Key Provider Service can accept reports from."
            },
            "address": {
              "type": "object",
              "required": [
                "hostname"
              ],
              "properties": {
                "port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The port of the service.\nIf unset, port 443 will be used."
                },
                "hostname": {
                  "type": "string",
                  "description": "The IP address or DNS resolvable name of the service."
                }
              }
            },
            "trusted_CA": {
              "type": "object",
              "required": [
                "cert_chain"
              ],
              "properties": {
                "cert_chain": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Certificate chain in base64 format"
                }
              }
            },
            "trust_authority_cluster": {
              "type": "string",
              "description": "The cluster specifies the Trust Authority Cluster this Key Provider Service belongs to."
            }
          }
        }
      ]
  deleteTrustedInfrastructureTrustedClusterKMSService:
    description: |-
      Removes the Key Provider Service instance from the configuration of the given cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/kms/services/servicevmw-tasktrue/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  createTrustedInfrastructureTrustedClusterKMSService:
    description: |-
      Configures the cluster to use a the given registered Key Provider Service.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/trusted-infrastructure/trusted-clusters/cluster/kms/servicesvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "enum": [
                "SERVICE",
                "CLUSTER"
              ],
              "type": "string",
              "description": "The Services.CreateSpec.SourceType enumerated type specifies source of truth the Key Provider Service will use for its configuration."
            },
            "service": {
              "type": "string",
              "description": "The service's unique ID.\nThis field is optional and it is only relevant when the value of Services.CreateSpec.type is SERVICE.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.trusted_infrastructure.kms.Service. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.trusted_infrastructure.kms.Service."
            },
            "trust_authority_cluster": {
              "type": "string",
              "description": "The attestation cluster's unique ID.\nThis field is optional and it is only relevant when the value of Services.CreateSpec.type is CLUSTER."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  deployVCHACluster:
    description: |-
      Prepares, clones, and configures a VCHA cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vcha/clusteractiondeployvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "active",
                "deployment",
                "passive",
                "witness"
              ],
              "properties": {
                "active": {
                  "type": "object",
                  "required": [
                    "ha_ip"
                  ],
                  "properties": {
                    "ha_ip": {
                      "type": "object",
                      "required": [
                        "ip_family"
                      ],
                      "properties": {
                        "ipv4": {
                          "type": "object",
                          "required": [
                            "address"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix for the interface.\nIf unset and the Ipv4Spec.subnet-mask field is unset, this an error will be reported.\n If unset and the Ipv4Spec.subnet-mask field is set, then the Ipv4Spec.subnet-mask field will be used.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                            },
                            "address": {
                              "type": "string",
                              "description": "IPV4 address to be used to configure the interface."
                            },
                            "subnet_mask": {
                              "type": "string",
                              "description": "The subnet mask for the interface.\nIf unset and the Ipv4Spec.prefix field is unset, then an error will be reported.\n If unset and the Ipv4Spec.prefix field is set, then the Ipv4Spec.prefix field will be used to create a subnet mask whose first prefix bits are 1 and the remaining bits 0.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                            }
                          }
                        },
                        "ipv6": {
                          "type": "object",
                          "required": [
                            "address",
                            "prefix"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix for the interface."
                            },
                            "address": {
                              "type": "string",
                              "description": "IPv6 address to be used to configure the interface."
                            }
                          }
                        },
                        "ip_family": {
                          "enum": [
                            "IPV4",
                            "IPV6"
                          ],
                          "type": "string",
                          "description": "The IpFamily enumerated type defines the Ip address family."
                        },
                        "dns_servers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The list of IP addresses of the DNS servers for this interface. This list is a comma separated list.\nIf unset, DNS servers will not be used for the network interface."
                        },
                        "default_gateway": {
                          "type": "string",
                          "description": "The IP address of the Gateway for this interface.\nIf unset, gateway will not be used for the network interface."
                        }
                      }
                    },
                    "ha_network": {
                      "type": "string",
                      "description": "The identifier of the Network object used for the HA network.\n If the Cluster.ActiveSpec.ha-network field is set, then the Cluster.ActiveSpec.ha-network-type field must be set.\n If the Cluster.ActiveSpec.ha-network field is unset, then the Cluster.ActiveSpec.ha-network-type field is ignored.\nIf unset and the Cluster.ActiveSpec.ha-network-type field is unset, then the second NIC is assumed to be already configured.\n If unset and the Cluster.ActiveSpec.ha-network field is set, then an error is reported.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                    },
                    "ha_network_type": {
                      "enum": [
                        "STANDARD_PORTGROUP",
                        "DISTRIBUTED_PORTGROUP"
                      ],
                      "type": "string",
                      "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                    }
                  }
                },
                "passive": {
                  "type": "object",
                  "required": [
                    "ha_ip"
                  ],
                  "properties": {
                    "ha_ip": {
                      "type": "object",
                      "required": [
                        "ip_family"
                      ],
                      "properties": {
                        "ipv4": {
                          "type": "object",
                          "required": [
                            "address"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix for the interface.\nIf unset and the Ipv4Spec.subnet-mask field is unset, this an error will be reported.\n If unset and the Ipv4Spec.subnet-mask field is set, then the Ipv4Spec.subnet-mask field will be used.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                            },
                            "address": {
                              "type": "string",
                              "description": "IPV4 address to be used to configure the interface."
                            },
                            "subnet_mask": {
                              "type": "string",
                              "description": "The subnet mask for the interface.\nIf unset and the Ipv4Spec.prefix field is unset, then an error will be reported.\n If unset and the Ipv4Spec.prefix field is set, then the Ipv4Spec.prefix field will be used to create a subnet mask whose first prefix bits are 1 and the remaining bits 0.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                            }
                          }
                        },
                        "ipv6": {
                          "type": "object",
                          "required": [
                            "address",
                            "prefix"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix for the interface."
                            },
                            "address": {
                              "type": "string",
                              "description": "IPv6 address to be used to configure the interface."
                            }
                          }
                        },
                        "ip_family": {
                          "enum": [
                            "IPV4",
                            "IPV6"
                          ],
                          "type": "string",
                          "description": "The IpFamily enumerated type defines the Ip address family."
                        },
                        "dns_servers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The list of IP addresses of the DNS servers for this interface. This list is a comma separated list.\nIf unset, DNS servers will not be used for the network interface."
                        },
                        "default_gateway": {
                          "type": "string",
                          "description": "The IP address of the Gateway for this interface.\nIf unset, gateway will not be used for the network interface."
                        }
                      }
                    },
                    "placement": {
                      "type": "object",
                      "required": [
                        "folder",
                        "name"
                      ],
                      "properties": {
                        "host": {
                          "type": "string",
                          "description": "The identifier of the host to deploy the VCHA node to.\nIf unset, see vim.vm.RelocateSpec.host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter."
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the VCHA node to be used for the virtual machine name."
                        },
                        "folder": {
                          "type": "string",
                          "description": "The identifier of the folder to deploy the VCHA node to.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder:VCenter."
                        },
                        "storage": {
                          "type": "object",
                          "properties": {
                            "datastore": {
                              "type": "string",
                              "description": "The identifier of the datastore to put all the virtual disks on.\nThis field needs to be set. If unset, then see vim.vm.RelocateSpec.datastore.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore:VCenter."
                            }
                          }
                        },
                        "ha_network": {
                          "type": "string",
                          "description": "The identifier of the Network object used for the HA network.\n If the PlacementSpec.ha-network field is set, then the {#link #haNetworkType} field must be set.\n If the PlacementSpec.ha-network field is unset, then the PlacementSpec.ha-network-type field is ignored.\nIf unset and the PlacementSpec.ha-network-type field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                        },
                        "resource_pool": {
                          "type": "string",
                          "description": "The identifier of the resource pool to deploy the VCHA node to.\nIf unset, then the active node's resource pool will be used.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool:VCenter."
                        },
                        "ha_network_type": {
                          "enum": [
                            "STANDARD_PORTGROUP",
                            "DISTRIBUTED_PORTGROUP"
                          ],
                          "type": "string",
                          "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                        },
                        "management_network": {
                          "type": "string",
                          "description": "The identifier of the Network object used for the Management network. If the PlacementSpec.management-network field is set, then the PlacementSpec.management-network-type field must be set.\n If the PlacementSpec.management-network field is unset, then the PlacementSpec.management-network-type field is ignored.\nIf unset and the PlacementSpec.management-network-type field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                        },
                        "management_network_type": {
                          "enum": [
                            "STANDARD_PORTGROUP",
                            "DISTRIBUTED_PORTGROUP"
                          ],
                          "type": "string",
                          "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                        }
                      }
                    },
                    "failover_ip": {
                      "type": "object",
                      "required": [
                        "ip_family"
                      ],
                      "properties": {
                        "ipv4": {
                          "type": "object",
                          "required": [
                            "address"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix for the interface.\nIf unset and the Ipv4Spec.subnet-mask field is unset, this an error will be reported.\n If unset and the Ipv4Spec.subnet-mask field is set, then the Ipv4Spec.subnet-mask field will be used.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                            },
                            "address": {
                              "type": "string",
                              "description": "IPV4 address to be used to configure the interface."
                            },
                            "subnet_mask": {
                              "type": "string",
                              "description": "The subnet mask for the interface.\nIf unset and the Ipv4Spec.prefix field is unset, then an error will be reported.\n If unset and the Ipv4Spec.prefix field is set, then the Ipv4Spec.prefix field will be used to create a subnet mask whose first prefix bits are 1 and the remaining bits 0.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                            }
                          }
                        },
                        "ipv6": {
                          "type": "object",
                          "required": [
                            "address",
                            "prefix"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix for the interface."
                            },
                            "address": {
                              "type": "string",
                              "description": "IPv6 address to be used to configure the interface."
                            }
                          }
                        },
                        "ip_family": {
                          "enum": [
                            "IPV4",
                            "IPV6"
                          ],
                          "type": "string",
                          "description": "The IpFamily enumerated type defines the Ip address family."
                        },
                        "dns_servers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The list of IP addresses of the DNS servers for this interface. This list is a comma separated list.\nIf unset, DNS servers will not be used for the network interface."
                        },
                        "default_gateway": {
                          "type": "string",
                          "description": "The IP address of the Gateway for this interface.\nIf unset, gateway will not be used for the network interface."
                        }
                      }
                    }
                  }
                },
                "vc_spec": {
                  "type": "object",
                  "required": [
                    "active_location"
                  ],
                  "properties": {
                    "active_location": {
                      "type": "object",
                      "required": [
                        "hostname"
                      ],
                      "properties": {
                        "port": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Port number.\nIf unset, port 443 will be used."
                        },
                        "hostname": {
                          "type": "string",
                          "description": "IP Address or DNS of the vCenter."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Password for the specified user.\nThis field is currently required. If unset, an empty password is assumed. In the future, if this field is unset, the system will attempt to authenticate the user. If a user cannot be identified, then the requested operation will fail."
                        },
                        "username": {
                          "type": "string",
                          "description": "Username to access the server.\nThis field is currently required. If unset, an error is returned. In the future, if this field is unset, the system will attempt to identify the user. If a user cannot be identified, then the requested operation will fail."
                        },
                        "ssl_thumbprint": {
                          "type": "string",
                          "description": "SHA1 hash of the server SSL certificate.\nIf unset, empty ssl thumbprint is assumed."
                        }
                      }
                    }
                  }
                },
                "witness": {
                  "type": "object",
                  "required": [
                    "ha_ip"
                  ],
                  "properties": {
                    "ha_ip": {
                      "type": "object",
                      "required": [
                        "ip_family"
                      ],
                      "properties": {
                        "ipv4": {
                          "type": "object",
                          "required": [
                            "address"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix for the interface.\nIf unset and the Ipv4Spec.subnet-mask field is unset, this an error will be reported.\n If unset and the Ipv4Spec.subnet-mask field is set, then the Ipv4Spec.subnet-mask field will be used.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                            },
                            "address": {
                              "type": "string",
                              "description": "IPV4 address to be used to configure the interface."
                            },
                            "subnet_mask": {
                              "type": "string",
                              "description": "The subnet mask for the interface.\nIf unset and the Ipv4Spec.prefix field is unset, then an error will be reported.\n If unset and the Ipv4Spec.prefix field is set, then the Ipv4Spec.prefix field will be used to create a subnet mask whose first prefix bits are 1 and the remaining bits 0.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                            }
                          }
                        },
                        "ipv6": {
                          "type": "object",
                          "required": [
                            "address",
                            "prefix"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix for the interface."
                            },
                            "address": {
                              "type": "string",
                              "description": "IPv6 address to be used to configure the interface."
                            }
                          }
                        },
                        "ip_family": {
                          "enum": [
                            "IPV4",
                            "IPV6"
                          ],
                          "type": "string",
                          "description": "The IpFamily enumerated type defines the Ip address family."
                        },
                        "dns_servers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The list of IP addresses of the DNS servers for this interface. This list is a comma separated list.\nIf unset, DNS servers will not be used for the network interface."
                        },
                        "default_gateway": {
                          "type": "string",
                          "description": "The IP address of the Gateway for this interface.\nIf unset, gateway will not be used for the network interface."
                        }
                      }
                    },
                    "placement": {
                      "type": "object",
                      "required": [
                        "folder",
                        "name"
                      ],
                      "properties": {
                        "host": {
                          "type": "string",
                          "description": "The identifier of the host to deploy the VCHA node to.\nIf unset, see vim.vm.RelocateSpec.host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter."
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the VCHA node to be used for the virtual machine name."
                        },
                        "folder": {
                          "type": "string",
                          "description": "The identifier of the folder to deploy the VCHA node to.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder:VCenter."
                        },
                        "storage": {
                          "type": "object",
                          "properties": {
                            "datastore": {
                              "type": "string",
                              "description": "The identifier of the datastore to put all the virtual disks on.\nThis field needs to be set. If unset, then see vim.vm.RelocateSpec.datastore.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore:VCenter."
                            }
                          }
                        },
                        "ha_network": {
                          "type": "string",
                          "description": "The identifier of the Network object used for the HA network.\n If the PlacementSpec.ha-network field is set, then the {#link #haNetworkType} field must be set.\n If the PlacementSpec.ha-network field is unset, then the PlacementSpec.ha-network-type field is ignored.\nIf unset and the PlacementSpec.ha-network-type field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                        },
                        "resource_pool": {
                          "type": "string",
                          "description": "The identifier of the resource pool to deploy the VCHA node to.\nIf unset, then the active node's resource pool will be used.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool:VCenter."
                        },
                        "ha_network_type": {
                          "enum": [
                            "STANDARD_PORTGROUP",
                            "DISTRIBUTED_PORTGROUP"
                          ],
                          "type": "string",
                          "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                        },
                        "management_network": {
                          "type": "string",
                          "description": "The identifier of the Network object used for the Management network. If the PlacementSpec.management-network field is set, then the PlacementSpec.management-network-type field must be set.\n If the PlacementSpec.management-network field is unset, then the PlacementSpec.management-network-type field is ignored.\nIf unset and the PlacementSpec.management-network-type field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                        },
                        "management_network_type": {
                          "enum": [
                            "STANDARD_PORTGROUP",
                            "DISTRIBUTED_PORTGROUP"
                          ],
                          "type": "string",
                          "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                        }
                      }
                    }
                  }
                },
                "deployment": {
                  "enum": [
                    "AUTO",
                    "MANUAL"
                  ],
                  "type": "string",
                  "description": "The Cluster.Type enumerated type defines the possible deployment types for a VCHA Cluster."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  failoverVCHACluster:
    description: |-
      Initiates failover from the active vCenter node to the passive node. 
       For forced failover, Active node immediately initiates a failover. This may result into a data loss after failover. 
      
       For planned failover, Active node flushes all the state to the Passive node, waits for the flush to complete before causing a failover. After the failover, Passive node starts without any data loss. 
      
       A failover is allowed only in the following cases: 
      
         1.  Cluster's mode is enabled and all cluster members are present.
         2.  Cluster's mode is maintenance and all cluster members are present.
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vcha/clusteractionfailovervmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "planned"
          ],
          "properties": {
            "planned": {
              "type": "boolean",
              "description": "If false, a failover is initiated immediately and may result in data loss.\n If true, a failover is initated after the Active node flushes its state to Passive and there is no data loss."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  getVCHACluster:
    description: |-
      Retrieves the status of a VCHA cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vcha/clusteractionget/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "partial": {
              "type": "boolean",
              "description": "If true, then return only the information that does not require connecting to the Active vCenter Server.\n If false or unset, then return all the information.\nIf unset, then return all the information."
            },
            "vc_spec": {
              "type": "object",
              "required": [
                "active_location"
              ],
              "properties": {
                "active_location": {
                  "type": "object",
                  "required": [
                    "hostname"
                  ],
                  "properties": {
                    "port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Port number.\nIf unset, port 443 will be used."
                    },
                    "hostname": {
                      "type": "string",
                      "description": "IP Address or DNS of the vCenter."
                    },
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "Password for the specified user.\nThis field is currently required. If unset, an empty password is assumed. In the future, if this field is unset, the system will attempt to authenticate the user. If a user cannot be identified, then the requested operation will fail."
                    },
                    "username": {
                      "type": "string",
                      "description": "Username to access the server.\nThis field is currently required. If unset, an error is returned. In the future, if this field is unset, the system will attempt to identify the user. If a user cannot be identified, then the requested operation will fail."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 hash of the server SSL certificate.\nIf unset, empty ssl thumbprint is assumed."
                    }
                  }
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "properties": {
                "mode": {
                  "enum": [
                    "ENABLED",
                    "DISABLED",
                    "MAINTENANCE"
                  ],
                  "type": "string",
                  "description": "The Cluster.ClusterMode enumerated type defines the possible modes for a VCHA Cluster."
                },
                "node1": {
                  "type": "object",
                  "required": [
                    "ha_ip"
                  ],
                  "properties": {
                    "ha_ip": {
                      "type": "object",
                      "required": [
                        "ip_family"
                      ],
                      "properties": {
                        "ipv4": {
                          "type": "object",
                          "required": [
                            "address",
                            "subnet_mask"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix of the interface.\nIf unset , then the subnet mask is invalid."
                            },
                            "address": {
                              "type": "string",
                              "description": "IP address of the configured network interface."
                            },
                            "subnet_mask": {
                              "type": "string",
                              "description": "The subnet mask of the interface."
                            }
                          }
                        },
                        "ipv6": {
                          "type": "object",
                          "required": [
                            "address",
                            "prefix"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix of the interface."
                            },
                            "address": {
                              "type": "string",
                              "description": "IP address of the configured network interface."
                            }
                          }
                        },
                        "ip_family": {
                          "enum": [
                            "IPV4",
                            "IPV6"
                          ],
                          "type": "string",
                          "description": "The Cluster.IpFamily enumerated type defines the IP address family."
                        },
                        "gateway_ip": {
                          "type": "string",
                          "description": "Gateway IP address.\nIf unset, no gateway is specified."
                        }
                      }
                    },
                    "runtime": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "enum": [
                            "ACTIVE",
                            "PASSIVE",
                            "WITNESS"
                          ],
                          "type": "string",
                          "description": "The Cluster.NodeRole enumerated type defines the role node can be in a VCHA Cluster."
                        },
                        "state": {
                          "enum": [
                            "UP",
                            "DOWN"
                          ],
                          "type": "string",
                          "description": "The Cluster.NodeState enumerated type defines possible state a node can be in a VCHA Cluster."
                        },
                        "placement": {
                          "type": "object",
                          "required": [
                            "datacenter",
                            "datacenter_name",
                            "host",
                            "host_name",
                            "management_network",
                            "management_network_name",
                            "management_network_type",
                            "management_vcenter_name",
                            "storage",
                            "vm_name"
                          ],
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "The identifier of the host of the VCHA node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter."
                            },
                            "cluster": {
                              "type": "string",
                              "description": "The identifier of the cluster of which PlacementInfo.host is member.\nIf unset, PlacementInfo.host is a standalone host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource:VCenter."
                            },
                            "storage": {
                              "type": "object",
                              "required": [
                                "datastore",
                                "datastore_name"
                              ],
                              "properties": {
                                "datastore": {
                                  "type": "string",
                                  "description": "The identifier of the datastore to put all the virtual disks on.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore:VCenter."
                                },
                                "datastore_name": {
                                  "type": "string",
                                  "description": "The name of the datastore."
                                }
                              }
                            },
                            "vm_name": {
                              "type": "string",
                              "description": "The virtual machine name of the VCHA node."
                            },
                            "bios_uuid": {
                              "type": "string",
                              "description": "BIOS UUID for the node.\nIf unset, the information is currently unavailable."
                            },
                            "host_name": {
                              "type": "string",
                              "description": "The name of the host of the VCHA node."
                            },
                            "datacenter": {
                              "type": "string",
                              "description": "The identifier of the datacenter of the VCHA node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datacenter:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datacenter:VCenter."
                            },
                            "ha_network": {
                              "type": "string",
                              "description": "The identifier of the Network object used for the HA network.\nIf unset, the information is currently unavailable or the haNetwork is not configured.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                            },
                            "cluster_name": {
                              "type": "string",
                              "description": "The name of the cluster of which PlacementInfo.host is member.\nIf unset, PlacementInfo.host is a standalone host."
                            },
                            "datacenter_name": {
                              "type": "string",
                              "description": "The name of the datacenter of the VCHA node."
                            },
                            "ha_network_name": {
                              "type": "string",
                              "description": "The name of the Network object used for the HA network.\nIf unset, the information is currently unavailable or the haNetwork is not configured."
                            },
                            "ha_network_type": {
                              "enum": [
                                "STANDARD_PORTGROUP",
                                "DISTRIBUTED_PORTGROUP"
                              ],
                              "type": "string",
                              "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                            },
                            "management_network": {
                              "type": "string",
                              "description": "The identifier of the Network object used for the Management network.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                            },
                            "management_network_name": {
                              "type": "string",
                              "description": "The name of the Network object used for the Management network."
                            },
                            "management_network_type": {
                              "enum": [
                                "STANDARD_PORTGROUP",
                                "DISTRIBUTED_PORTGROUP"
                              ],
                              "type": "string",
                              "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                            },
                            "management_vcenter_name": {
                              "type": "string",
                              "description": "The hostname of the vCenter server that is managing the VCHA node."
                            },
                            "management_vcenter_server_guid": {
                              "type": "string",
                              "description": "The unique identifier of the vCenter server that is managing the VCHA node.\nThis field is optional because it was added in a newer version than its parent node."
                            }
                          }
                        }
                      }
                    },
                    "failover_ip": {
                      "type": "object",
                      "required": [
                        "ip_family"
                      ],
                      "properties": {
                        "ipv4": {
                          "type": "object",
                          "required": [
                            "address",
                            "subnet_mask"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix of the interface.\nIf unset , then the subnet mask is invalid."
                            },
                            "address": {
                              "type": "string",
                              "description": "IP address of the configured network interface."
                            },
                            "subnet_mask": {
                              "type": "string",
                              "description": "The subnet mask of the interface."
                            }
                          }
                        },
                        "ipv6": {
                          "type": "object",
                          "required": [
                            "address",
                            "prefix"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix of the interface."
                            },
                            "address": {
                              "type": "string",
                              "description": "IP address of the configured network interface."
                            }
                          }
                        },
                        "ip_family": {
                          "enum": [
                            "IPV4",
                            "IPV6"
                          ],
                          "type": "string",
                          "description": "The Cluster.IpFamily enumerated type defines the IP address family."
                        },
                        "gateway_ip": {
                          "type": "string",
                          "description": "Gateway IP address.\nIf unset, no gateway is specified."
                        }
                      }
                    }
                  }
                },
                "node2": {
                  "type": "object",
                  "required": [
                    "ha_ip"
                  ],
                  "properties": {
                    "ha_ip": {
                      "type": "object",
                      "required": [
                        "ip_family"
                      ],
                      "properties": {
                        "ipv4": {
                          "type": "object",
                          "required": [
                            "address",
                            "subnet_mask"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix of the interface.\nIf unset , then the subnet mask is invalid."
                            },
                            "address": {
                              "type": "string",
                              "description": "IP address of the configured network interface."
                            },
                            "subnet_mask": {
                              "type": "string",
                              "description": "The subnet mask of the interface."
                            }
                          }
                        },
                        "ipv6": {
                          "type": "object",
                          "required": [
                            "address",
                            "prefix"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix of the interface."
                            },
                            "address": {
                              "type": "string",
                              "description": "IP address of the configured network interface."
                            }
                          }
                        },
                        "ip_family": {
                          "enum": [
                            "IPV4",
                            "IPV6"
                          ],
                          "type": "string",
                          "description": "The Cluster.IpFamily enumerated type defines the IP address family."
                        },
                        "gateway_ip": {
                          "type": "string",
                          "description": "Gateway IP address.\nIf unset, no gateway is specified."
                        }
                      }
                    },
                    "runtime": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "enum": [
                            "ACTIVE",
                            "PASSIVE",
                            "WITNESS"
                          ],
                          "type": "string",
                          "description": "The Cluster.NodeRole enumerated type defines the role node can be in a VCHA Cluster."
                        },
                        "state": {
                          "enum": [
                            "UP",
                            "DOWN"
                          ],
                          "type": "string",
                          "description": "The Cluster.NodeState enumerated type defines possible state a node can be in a VCHA Cluster."
                        },
                        "placement": {
                          "type": "object",
                          "required": [
                            "datacenter",
                            "datacenter_name",
                            "host",
                            "host_name",
                            "management_network",
                            "management_network_name",
                            "management_network_type",
                            "management_vcenter_name",
                            "storage",
                            "vm_name"
                          ],
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "The identifier of the host of the VCHA node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter."
                            },
                            "cluster": {
                              "type": "string",
                              "description": "The identifier of the cluster of which PlacementInfo.host is member.\nIf unset, PlacementInfo.host is a standalone host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource:VCenter."
                            },
                            "storage": {
                              "type": "object",
                              "required": [
                                "datastore",
                                "datastore_name"
                              ],
                              "properties": {
                                "datastore": {
                                  "type": "string",
                                  "description": "The identifier of the datastore to put all the virtual disks on.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore:VCenter."
                                },
                                "datastore_name": {
                                  "type": "string",
                                  "description": "The name of the datastore."
                                }
                              }
                            },
                            "vm_name": {
                              "type": "string",
                              "description": "The virtual machine name of the VCHA node."
                            },
                            "bios_uuid": {
                              "type": "string",
                              "description": "BIOS UUID for the node.\nIf unset, the information is currently unavailable."
                            },
                            "host_name": {
                              "type": "string",
                              "description": "The name of the host of the VCHA node."
                            },
                            "datacenter": {
                              "type": "string",
                              "description": "The identifier of the datacenter of the VCHA node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datacenter:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datacenter:VCenter."
                            },
                            "ha_network": {
                              "type": "string",
                              "description": "The identifier of the Network object used for the HA network.\nIf unset, the information is currently unavailable or the haNetwork is not configured.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                            },
                            "cluster_name": {
                              "type": "string",
                              "description": "The name of the cluster of which PlacementInfo.host is member.\nIf unset, PlacementInfo.host is a standalone host."
                            },
                            "datacenter_name": {
                              "type": "string",
                              "description": "The name of the datacenter of the VCHA node."
                            },
                            "ha_network_name": {
                              "type": "string",
                              "description": "The name of the Network object used for the HA network.\nIf unset, the information is currently unavailable or the haNetwork is not configured."
                            },
                            "ha_network_type": {
                              "enum": [
                                "STANDARD_PORTGROUP",
                                "DISTRIBUTED_PORTGROUP"
                              ],
                              "type": "string",
                              "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                            },
                            "management_network": {
                              "type": "string",
                              "description": "The identifier of the Network object used for the Management network.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                            },
                            "management_network_name": {
                              "type": "string",
                              "description": "The name of the Network object used for the Management network."
                            },
                            "management_network_type": {
                              "enum": [
                                "STANDARD_PORTGROUP",
                                "DISTRIBUTED_PORTGROUP"
                              ],
                              "type": "string",
                              "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                            },
                            "management_vcenter_name": {
                              "type": "string",
                              "description": "The hostname of the vCenter server that is managing the VCHA node."
                            },
                            "management_vcenter_server_guid": {
                              "type": "string",
                              "description": "The unique identifier of the vCenter server that is managing the VCHA node.\nThis field is optional because it was added in a newer version than its parent node."
                            }
                          }
                        }
                      }
                    },
                    "failover_ip": {
                      "type": "object",
                      "required": [
                        "ip_family"
                      ],
                      "properties": {
                        "ipv4": {
                          "type": "object",
                          "required": [
                            "address",
                            "subnet_mask"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix of the interface.\nIf unset , then the subnet mask is invalid."
                            },
                            "address": {
                              "type": "string",
                              "description": "IP address of the configured network interface."
                            },
                            "subnet_mask": {
                              "type": "string",
                              "description": "The subnet mask of the interface."
                            }
                          }
                        },
                        "ipv6": {
                          "type": "object",
                          "required": [
                            "address",
                            "prefix"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix of the interface."
                            },
                            "address": {
                              "type": "string",
                              "description": "IP address of the configured network interface."
                            }
                          }
                        },
                        "ip_family": {
                          "enum": [
                            "IPV4",
                            "IPV6"
                          ],
                          "type": "string",
                          "description": "The Cluster.IpFamily enumerated type defines the IP address family."
                        },
                        "gateway_ip": {
                          "type": "string",
                          "description": "Gateway IP address.\nIf unset, no gateway is specified."
                        }
                      }
                    }
                  }
                },
                "witness": {
                  "type": "object",
                  "required": [
                    "ha_ip"
                  ],
                  "properties": {
                    "ha_ip": {
                      "type": "object",
                      "required": [
                        "ip_family"
                      ],
                      "properties": {
                        "ipv4": {
                          "type": "object",
                          "required": [
                            "address",
                            "subnet_mask"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix of the interface.\nIf unset , then the subnet mask is invalid."
                            },
                            "address": {
                              "type": "string",
                              "description": "IP address of the configured network interface."
                            },
                            "subnet_mask": {
                              "type": "string",
                              "description": "The subnet mask of the interface."
                            }
                          }
                        },
                        "ipv6": {
                          "type": "object",
                          "required": [
                            "address",
                            "prefix"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The CIDR prefix of the interface."
                            },
                            "address": {
                              "type": "string",
                              "description": "IP address of the configured network interface."
                            }
                          }
                        },
                        "ip_family": {
                          "enum": [
                            "IPV4",
                            "IPV6"
                          ],
                          "type": "string",
                          "description": "The Cluster.IpFamily enumerated type defines the IP address family."
                        },
                        "gateway_ip": {
                          "type": "string",
                          "description": "Gateway IP address.\nIf unset, no gateway is specified."
                        }
                      }
                    },
                    "runtime": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "enum": [
                            "ACTIVE",
                            "PASSIVE",
                            "WITNESS"
                          ],
                          "type": "string",
                          "description": "The Cluster.NodeRole enumerated type defines the role node can be in a VCHA Cluster."
                        },
                        "state": {
                          "enum": [
                            "UP",
                            "DOWN"
                          ],
                          "type": "string",
                          "description": "The Cluster.NodeState enumerated type defines possible state a node can be in a VCHA Cluster."
                        },
                        "placement": {
                          "type": "object",
                          "required": [
                            "datacenter",
                            "datacenter_name",
                            "host",
                            "host_name",
                            "management_network",
                            "management_network_name",
                            "management_network_type",
                            "management_vcenter_name",
                            "storage",
                            "vm_name"
                          ],
                          "properties": {
                            "host": {
                              "type": "string",
                              "description": "The identifier of the host of the VCHA node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter."
                            },
                            "cluster": {
                              "type": "string",
                              "description": "The identifier of the cluster of which PlacementInfo.host is member.\nIf unset, PlacementInfo.host is a standalone host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource:VCenter."
                            },
                            "storage": {
                              "type": "object",
                              "required": [
                                "datastore",
                                "datastore_name"
                              ],
                              "properties": {
                                "datastore": {
                                  "type": "string",
                                  "description": "The identifier of the datastore to put all the virtual disks on.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore:VCenter."
                                },
                                "datastore_name": {
                                  "type": "string",
                                  "description": "The name of the datastore."
                                }
                              }
                            },
                            "vm_name": {
                              "type": "string",
                              "description": "The virtual machine name of the VCHA node."
                            },
                            "bios_uuid": {
                              "type": "string",
                              "description": "BIOS UUID for the node.\nIf unset, the information is currently unavailable."
                            },
                            "host_name": {
                              "type": "string",
                              "description": "The name of the host of the VCHA node."
                            },
                            "datacenter": {
                              "type": "string",
                              "description": "The identifier of the datacenter of the VCHA node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datacenter:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datacenter:VCenter."
                            },
                            "ha_network": {
                              "type": "string",
                              "description": "The identifier of the Network object used for the HA network.\nIf unset, the information is currently unavailable or the haNetwork is not configured.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                            },
                            "cluster_name": {
                              "type": "string",
                              "description": "The name of the cluster of which PlacementInfo.host is member.\nIf unset, PlacementInfo.host is a standalone host."
                            },
                            "datacenter_name": {
                              "type": "string",
                              "description": "The name of the datacenter of the VCHA node."
                            },
                            "ha_network_name": {
                              "type": "string",
                              "description": "The name of the Network object used for the HA network.\nIf unset, the information is currently unavailable or the haNetwork is not configured."
                            },
                            "ha_network_type": {
                              "enum": [
                                "STANDARD_PORTGROUP",
                                "DISTRIBUTED_PORTGROUP"
                              ],
                              "type": "string",
                              "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                            },
                            "management_network": {
                              "type": "string",
                              "description": "The identifier of the Network object used for the Management network.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                            },
                            "management_network_name": {
                              "type": "string",
                              "description": "The name of the Network object used for the Management network."
                            },
                            "management_network_type": {
                              "enum": [
                                "STANDARD_PORTGROUP",
                                "DISTRIBUTED_PORTGROUP"
                              ],
                              "type": "string",
                              "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                            },
                            "management_vcenter_name": {
                              "type": "string",
                              "description": "The hostname of the vCenter server that is managing the VCHA node."
                            },
                            "management_vcenter_server_guid": {
                              "type": "string",
                              "description": "The unique identifier of the vCenter server that is managing the VCHA node.\nThis field is optional because it was added in a newer version than its parent node."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "config_state": {
                  "enum": [
                    "CONFIGURED",
                    "NOTCONFIGURED",
                    "INVALID",
                    "PREPARED"
                  ],
                  "type": "string",
                  "description": "The Cluster.ConfigState enumerated type defines the VCHA configuration state."
                },
                "health_state": {
                  "enum": [
                    "HEALTHY",
                    "DEGRADED",
                    "ISOLATED"
                  ],
                  "type": "string",
                  "description": "The Cluster.ClusterState enumerated type defines the possible for a VCHA Cluster."
                },
                "health_warnings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "object",
                        "required": [
                          "id",
                          "default_message",
                          "args"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                          },
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Arguments to be substituted into a message template."
                          },
                          "default_message": {
                            "type": "string",
                            "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                          }
                        }
                      },
                      "recommendation": {
                        "type": "object",
                        "required": [
                          "id",
                          "default_message",
                          "args"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                          },
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Arguments to be substituted into a message template."
                          },
                          "default_message": {
                            "type": "string",
                            "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                          }
                        }
                      }
                    }
                  },
                  "description": "A collection of messages describing the reason for a non-healthy Cluster.\nIf unset, then the cluster is in a healthy state."
                },
                "health_exception": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "default_message",
                      "args"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                      },
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Arguments to be substituted into a message template."
                      },
                      "default_message": {
                        "type": "string",
                        "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                      }
                    }
                  },
                  "description": "Health warning messages if the health information is unavailable.\nIf unset, then the cluster is in a healthy state."
                },
                "auto_failover_allowed": {
                  "type": "boolean",
                  "description": "Specifies if automatic failover is allowed.\nIf unset, then the cluster state healthy and automatic failover allowance in accordance with the cluster mode."
                },
                "manual_failover_allowed": {
                  "type": "boolean",
                  "description": "Specifies if manual failover is allowed.\nIf unset, then the cluster state healthy and manual failover allowance in accordance with the cluster mode."
                }
              }
            }
          }
        }
      ]
  undeployVCHACluster:
    description: |-
      Destroys the VCHA cluster and removes all VCHA specific information from the VCVA appliance. Optionally, the passive and witness node virtual machines will be deleted only if VCHA was deployed using automatic deployment. The active node in the cluster continues to run as a standalone VCVA appliance after the destroy operation has been performed. 
       If the VCHA cluster is in a transition state and not configured, then the VCHA cluster specific information is removed.
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vcha/clusteractionundeployvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "vms": {
                  "type": "object",
                  "required": [
                    "passive",
                    "witness"
                  ],
                  "properties": {
                    "passive": {
                      "type": "object",
                      "required": [
                        "bios_uuid",
                        "vm"
                      ],
                      "properties": {
                        "vm": {
                          "type": "string",
                          "description": "The identifier of the virtual machine of the VCHA node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: VirtualMachine:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: VirtualMachine:VCenter."
                        },
                        "bios_uuid": {
                          "type": "string",
                          "description": "BIOS UUID for the node."
                        }
                      }
                    },
                    "witness": {
                      "type": "object",
                      "required": [
                        "bios_uuid",
                        "vm"
                      ],
                      "properties": {
                        "vm": {
                          "type": "string",
                          "description": "The identifier of the virtual machine of the VCHA node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: VirtualMachine:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: VirtualMachine:VCenter."
                        },
                        "bios_uuid": {
                          "type": "string",
                          "description": "BIOS UUID for the node."
                        }
                      }
                    }
                  }
                },
                "vc_spec": {
                  "type": "object",
                  "required": [
                    "active_location"
                  ],
                  "properties": {
                    "active_location": {
                      "type": "object",
                      "required": [
                        "hostname"
                      ],
                      "properties": {
                        "port": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Port number.\nIf unset, port 443 will be used."
                        },
                        "hostname": {
                          "type": "string",
                          "description": "IP Address or DNS of the vCenter."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Password for the specified user.\nThis field is currently required. If unset, an empty password is assumed. In the future, if this field is unset, the system will attempt to authenticate the user. If a user cannot be identified, then the requested operation will fail."
                        },
                        "username": {
                          "type": "string",
                          "description": "Username to access the server.\nThis field is currently required. If unset, an error is returned. In the future, if this field is unset, the system will attempt to identify the user. If a user cannot be identified, then the requested operation will fail."
                        },
                        "ssl_thumbprint": {
                          "type": "string",
                          "description": "SHA1 hash of the server SSL certificate.\nIf unset, empty ssl thumbprint is assumed."
                        }
                      }
                    }
                  }
                },
                "force_delete": {
                  "type": "boolean",
                  "description": "Flag controlling in what circumstances the virtual machines will be deleted. For this flag to take effect, the VCHA cluster should have been successfully configured using automatic deployment. \n   -  If true, the Cluster.UndeploySpec.vms field will be ignored, the VCHA cluster specific information is removed, and the passive and witness virtual machines will be deleted.\n   -  If false, the Cluster.UndeploySpec.vms field contains the information identifying the passive and witness virtual machines.\n \n     =  If the Cluster.UndeploySpec.vms field is set, then it will be validated prior to deleting the passive and witness virtual machines and VCHA cluster specific information is removed.\n     =  If the Cluster.UndeploySpec.vms field is unset, then the passive and witness virtual machines will not be deleted. The customer should delete them in order to cleanup completely. VCHA cluster specific information is removed.\n\n  \nIf unset, the Cluster.UndeploySpec.vms field contains the information identifying the passive and witness virtual machines. \n   -  If the Cluster.UndeploySpec.vms field is set, then it will be validated prior to deleting the passive and witness virtual machines. VCHA cluster specific information is removed.\n   -  If the Cluster.UndeploySpec.vms field is unset, then the passive and witness virtual machines will not be deleted. The customer should delete them in order to cleanup completely. VCHA cluster specific information is removed.\n"
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  getVCHAActiveCluster:
    description: |-
      Retrieves information about the active node of a VCHA cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vcha/cluster/activeactionget/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "partial": {
              "type": "boolean",
              "description": "If true, then return only the information that does not require connecting to the Active vCenter Server. \n If false or unset, then return all the information.\nIf unset, then return all the information."
            },
            "vc_spec": {
              "type": "object",
              "required": [
                "active_location"
              ],
              "properties": {
                "active_location": {
                  "type": "object",
                  "required": [
                    "hostname"
                  ],
                  "properties": {
                    "port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Port number.\nIf unset, port 443 will be used."
                    },
                    "hostname": {
                      "type": "string",
                      "description": "IP Address or DNS of the vCenter."
                    },
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "Password for the specified user.\nThis field is currently required. If unset, an empty password is assumed. In the future, if this field is unset, the system will attempt to authenticate the user. If a user cannot be identified, then the requested operation will fail."
                    },
                    "username": {
                      "type": "string",
                      "description": "Username to access the server.\nThis field is currently required. If unset, an error is returned. In the future, if this field is unset, the system will attempt to identify the user. If a user cannot be identified, then the requested operation will fail."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 hash of the server SSL certificate.\nIf unset, empty ssl thumbprint is assumed."
                    }
                  }
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "management"
              ],
              "properties": {
                "ha": {
                  "type": "object",
                  "required": [
                    "ip_family"
                  ],
                  "properties": {
                    "ipv4": {
                      "type": "object",
                      "required": [
                        "address"
                      ],
                      "properties": {
                        "prefix": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The CIDR prefix for the interface.\nIf unset and the Ipv4Spec.subnet-mask field is unset, this an error will be reported.\n If unset and the Ipv4Spec.subnet-mask field is set, then the Ipv4Spec.subnet-mask field will be used.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                        },
                        "address": {
                          "type": "string",
                          "description": "IPV4 address to be used to configure the interface."
                        },
                        "subnet_mask": {
                          "type": "string",
                          "description": "The subnet mask for the interface.\nIf unset and the Ipv4Spec.prefix field is unset, then an error will be reported.\n If unset and the Ipv4Spec.prefix field is set, then the Ipv4Spec.prefix field will be used to create a subnet mask whose first prefix bits are 1 and the remaining bits 0.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                        }
                      }
                    },
                    "ipv6": {
                      "type": "object",
                      "required": [
                        "address",
                        "prefix"
                      ],
                      "properties": {
                        "prefix": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The CIDR prefix for the interface."
                        },
                        "address": {
                          "type": "string",
                          "description": "IPv6 address to be used to configure the interface."
                        }
                      }
                    },
                    "ip_family": {
                      "enum": [
                        "IPV4",
                        "IPV6"
                      ],
                      "type": "string",
                      "description": "The IpFamily enumerated type defines the Ip address family."
                    },
                    "dns_servers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of IP addresses of the DNS servers for this interface. This list is a comma separated list.\nIf unset, DNS servers will not be used for the network interface."
                    },
                    "default_gateway": {
                      "type": "string",
                      "description": "The IP address of the Gateway for this interface.\nIf unset, gateway will not be used for the network interface."
                    }
                  }
                },
                "placement": {
                  "type": "object",
                  "required": [
                    "datacenter",
                    "datacenter_name",
                    "host",
                    "host_name",
                    "management_network",
                    "management_network_name",
                    "management_network_type",
                    "management_vcenter_name",
                    "storage",
                    "vm_name"
                  ],
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "The identifier of the host of the VCHA node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter."
                    },
                    "cluster": {
                      "type": "string",
                      "description": "The identifier of the cluster of which PlacementInfo.host is member.\nIf unset, PlacementInfo.host is a standalone host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource:VCenter."
                    },
                    "storage": {
                      "type": "object",
                      "required": [
                        "datastore",
                        "datastore_name"
                      ],
                      "properties": {
                        "datastore": {
                          "type": "string",
                          "description": "The identifier of the datastore to put all the virtual disks on.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore:VCenter."
                        },
                        "datastore_name": {
                          "type": "string",
                          "description": "The name of the datastore."
                        }
                      }
                    },
                    "vm_name": {
                      "type": "string",
                      "description": "The virtual machine name of the VCHA node."
                    },
                    "bios_uuid": {
                      "type": "string",
                      "description": "BIOS UUID for the node.\nIf unset, the information is currently unavailable."
                    },
                    "host_name": {
                      "type": "string",
                      "description": "The name of the host of the VCHA node."
                    },
                    "datacenter": {
                      "type": "string",
                      "description": "The identifier of the datacenter of the VCHA node.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datacenter:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datacenter:VCenter."
                    },
                    "ha_network": {
                      "type": "string",
                      "description": "The identifier of the Network object used for the HA network.\nIf unset, the information is currently unavailable or the haNetwork is not configured.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                    },
                    "cluster_name": {
                      "type": "string",
                      "description": "The name of the cluster of which PlacementInfo.host is member.\nIf unset, PlacementInfo.host is a standalone host."
                    },
                    "datacenter_name": {
                      "type": "string",
                      "description": "The name of the datacenter of the VCHA node."
                    },
                    "ha_network_name": {
                      "type": "string",
                      "description": "The name of the Network object used for the HA network.\nIf unset, the information is currently unavailable or the haNetwork is not configured."
                    },
                    "ha_network_type": {
                      "enum": [
                        "STANDARD_PORTGROUP",
                        "DISTRIBUTED_PORTGROUP"
                      ],
                      "type": "string",
                      "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                    },
                    "management_network": {
                      "type": "string",
                      "description": "The identifier of the Network object used for the Management network.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                    },
                    "management_network_name": {
                      "type": "string",
                      "description": "The name of the Network object used for the Management network."
                    },
                    "management_network_type": {
                      "enum": [
                        "STANDARD_PORTGROUP",
                        "DISTRIBUTED_PORTGROUP"
                      ],
                      "type": "string",
                      "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                    },
                    "management_vcenter_name": {
                      "type": "string",
                      "description": "The hostname of the vCenter server that is managing the VCHA node."
                    },
                    "management_vcenter_server_guid": {
                      "type": "string",
                      "description": "The unique identifier of the vCenter server that is managing the VCHA node.\nThis field is optional because it was added in a newer version than its parent node."
                    }
                  }
                },
                "management": {
                  "type": "object",
                  "required": [
                    "ip_family"
                  ],
                  "properties": {
                    "ipv4": {
                      "type": "object",
                      "required": [
                        "address"
                      ],
                      "properties": {
                        "prefix": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The CIDR prefix for the interface.\nIf unset and the Ipv4Spec.subnet-mask field is unset, this an error will be reported.\n If unset and the Ipv4Spec.subnet-mask field is set, then the Ipv4Spec.subnet-mask field will be used.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                        },
                        "address": {
                          "type": "string",
                          "description": "IPV4 address to be used to configure the interface."
                        },
                        "subnet_mask": {
                          "type": "string",
                          "description": "The subnet mask for the interface.\nIf unset and the Ipv4Spec.prefix field is unset, then an error will be reported.\n If unset and the Ipv4Spec.prefix field is set, then the Ipv4Spec.prefix field will be used to create a subnet mask whose first prefix bits are 1 and the remaining bits 0.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                        }
                      }
                    },
                    "ipv6": {
                      "type": "object",
                      "required": [
                        "address",
                        "prefix"
                      ],
                      "properties": {
                        "prefix": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The CIDR prefix for the interface."
                        },
                        "address": {
                          "type": "string",
                          "description": "IPv6 address to be used to configure the interface."
                        }
                      }
                    },
                    "ip_family": {
                      "enum": [
                        "IPV4",
                        "IPV6"
                      ],
                      "type": "string",
                      "description": "The IpFamily enumerated type defines the Ip address family."
                    },
                    "dns_servers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of IP addresses of the DNS servers for this interface. This list is a comma separated list.\nIf unset, DNS servers will not be used for the network interface."
                    },
                    "default_gateway": {
                      "type": "string",
                      "description": "The IP address of the Gateway for this interface.\nIf unset, gateway will not be used for the network interface."
                    }
                  }
                }
              }
            }
          }
        }
      ]
  getVCHADeploymentType:
    description: |-
      Retrieves the deployment type of a VCHA cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vcha/cluster/deployment-type/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "deployment_type"
              ],
              "properties": {
                "deployment_type": {
                  "enum": [
                    "NONE",
                    "AUTO",
                    "MANUAL"
                  ],
                  "type": "string",
                  "description": "The DeploymentType.Type enumerated type defines the possible deployment types for a VCHA Cluster."
                }
              }
            }
          }
        }
      ]
  getVCHAClusterMode:
    description: |-
      Retrieves the current mode of a VCHA cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vcha/cluster/mode/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "mode"
              ],
              "properties": {
                "mode": {
                  "enum": [
                    "ENABLED",
                    "DISABLED",
                    "MAINTENANCE"
                  ],
                  "type": "string",
                  "description": "The Mode.ClusterMode enumerated type defines the possible modes for a VCHA Cluster."
                }
              }
            }
          }
        }
      ]
  setVCHAClusterMode:
    description: |-
      Manipulates the mode of a VCHA Cluster. Following mode transitions are allowed:
       enabled -> disabled - Allowed only in healthy and degraded states.
       enabled -> maintenance - Allowed only in healthy state.
       disabled -> enabled - Allowed only in healthy state.
       maintenance -> enabled - Allowed only in healthy state with all nodes are running the same version.
       maintenance -> disabled - Allowed only in healthy state with all nodes are running the same version.
       All other transitions are not allowed. 
       VCHA Cluster configuration remains intact in any of the cluster modes.
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vcha/cluster/modevmw-tasktrue/put/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "mode"
          ],
          "properties": {
            "mode": {
              "enum": [
                "ENABLED",
                "DISABLED",
                "MAINTENANCE"
              ],
              "type": "string",
              "description": "The Mode.ClusterMode enumerated type defines the possible modes for a VCHA Cluster."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  checkVCHAClusterPassive:
    description: |-
      Validates the specified passive node's placement configuration.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vcha/cluster/passiveactioncheck/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "placement"
              ],
              "properties": {
                "vc_spec": {
                  "type": "object",
                  "required": [
                    "active_location"
                  ],
                  "properties": {
                    "active_location": {
                      "type": "object",
                      "required": [
                        "hostname"
                      ],
                      "properties": {
                        "port": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Port number.\nIf unset, port 443 will be used."
                        },
                        "hostname": {
                          "type": "string",
                          "description": "IP Address or DNS of the vCenter."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Password for the specified user.\nThis field is currently required. If unset, an empty password is assumed. In the future, if this field is unset, the system will attempt to authenticate the user. If a user cannot be identified, then the requested operation will fail."
                        },
                        "username": {
                          "type": "string",
                          "description": "Username to access the server.\nThis field is currently required. If unset, an error is returned. In the future, if this field is unset, the system will attempt to identify the user. If a user cannot be identified, then the requested operation will fail."
                        },
                        "ssl_thumbprint": {
                          "type": "string",
                          "description": "SHA1 hash of the server SSL certificate.\nIf unset, empty ssl thumbprint is assumed."
                        }
                      }
                    }
                  }
                },
                "placement": {
                  "type": "object",
                  "required": [
                    "folder",
                    "name"
                  ],
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "The identifier of the host to deploy the VCHA node to.\nIf unset, see vim.vm.RelocateSpec.host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the VCHA node to be used for the virtual machine name."
                    },
                    "folder": {
                      "type": "string",
                      "description": "The identifier of the folder to deploy the VCHA node to.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder:VCenter."
                    },
                    "storage": {
                      "type": "object",
                      "properties": {
                        "datastore": {
                          "type": "string",
                          "description": "The identifier of the datastore to put all the virtual disks on.\nThis field needs to be set. If unset, then see vim.vm.RelocateSpec.datastore.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore:VCenter."
                        }
                      }
                    },
                    "ha_network": {
                      "type": "string",
                      "description": "The identifier of the Network object used for the HA network.\n If the PlacementSpec.ha-network field is set, then the {#link #haNetworkType} field must be set.\n If the PlacementSpec.ha-network field is unset, then the PlacementSpec.ha-network-type field is ignored.\nIf unset and the PlacementSpec.ha-network-type field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                    },
                    "resource_pool": {
                      "type": "string",
                      "description": "The identifier of the resource pool to deploy the VCHA node to.\nIf unset, then the active node's resource pool will be used.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool:VCenter."
                    },
                    "ha_network_type": {
                      "enum": [
                        "STANDARD_PORTGROUP",
                        "DISTRIBUTED_PORTGROUP"
                      ],
                      "type": "string",
                      "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                    },
                    "management_network": {
                      "type": "string",
                      "description": "The identifier of the Network object used for the Management network. If the PlacementSpec.management-network field is set, then the PlacementSpec.management-network-type field must be set.\n If the PlacementSpec.management-network field is unset, then the PlacementSpec.management-network-type field is ignored.\nIf unset and the PlacementSpec.management-network-type field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                    },
                    "management_network_type": {
                      "enum": [
                        "STANDARD_PORTGROUP",
                        "DISTRIBUTED_PORTGROUP"
                      ],
                      "type": "string",
                      "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                    }
                  }
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "errors",
                "warnings"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "default_message",
                      "args"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                      },
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Arguments to be substituted into a message template."
                      },
                      "default_message": {
                        "type": "string",
                        "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                      }
                    }
                  },
                  "description": "A list of problems which are fatal to the operation and the operation will fail."
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "default_message",
                      "args"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                      },
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Arguments to be substituted into a message template."
                      },
                      "default_message": {
                        "type": "string",
                        "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                      }
                    }
                  },
                  "description": "A list of problems which may require attention, but which are not fatal."
                }
              }
            }
          }
        }
      ]
  redeployVCHAClusterPassive:
    description: |-
      Creates the passive node in a degraded cluster with node location information and pre-existing VCHA cluster configuration from the active node.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vcha/cluster/passiveactionredeployvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "placement"
              ],
              "properties": {
                "ha_ip": {
                  "type": "object",
                  "required": [
                    "ip_family"
                  ],
                  "properties": {
                    "ipv4": {
                      "type": "object",
                      "required": [
                        "address"
                      ],
                      "properties": {
                        "prefix": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The CIDR prefix for the interface.\nIf unset and the Ipv4Spec.subnet-mask field is unset, this an error will be reported.\n If unset and the Ipv4Spec.subnet-mask field is set, then the Ipv4Spec.subnet-mask field will be used.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                        },
                        "address": {
                          "type": "string",
                          "description": "IPV4 address to be used to configure the interface."
                        },
                        "subnet_mask": {
                          "type": "string",
                          "description": "The subnet mask for the interface.\nIf unset and the Ipv4Spec.prefix field is unset, then an error will be reported.\n If unset and the Ipv4Spec.prefix field is set, then the Ipv4Spec.prefix field will be used to create a subnet mask whose first prefix bits are 1 and the remaining bits 0.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                        }
                      }
                    },
                    "ipv6": {
                      "type": "object",
                      "required": [
                        "address",
                        "prefix"
                      ],
                      "properties": {
                        "prefix": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The CIDR prefix for the interface."
                        },
                        "address": {
                          "type": "string",
                          "description": "IPv6 address to be used to configure the interface."
                        }
                      }
                    },
                    "ip_family": {
                      "enum": [
                        "IPV4",
                        "IPV6"
                      ],
                      "type": "string",
                      "description": "The IpFamily enumerated type defines the Ip address family."
                    },
                    "dns_servers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of IP addresses of the DNS servers for this interface. This list is a comma separated list.\nIf unset, DNS servers will not be used for the network interface."
                    },
                    "default_gateway": {
                      "type": "string",
                      "description": "The IP address of the Gateway for this interface.\nIf unset, gateway will not be used for the network interface."
                    }
                  }
                },
                "vc_spec": {
                  "type": "object",
                  "required": [
                    "active_location"
                  ],
                  "properties": {
                    "active_location": {
                      "type": "object",
                      "required": [
                        "hostname"
                      ],
                      "properties": {
                        "port": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Port number.\nIf unset, port 443 will be used."
                        },
                        "hostname": {
                          "type": "string",
                          "description": "IP Address or DNS of the vCenter."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Password for the specified user.\nThis field is currently required. If unset, an empty password is assumed. In the future, if this field is unset, the system will attempt to authenticate the user. If a user cannot be identified, then the requested operation will fail."
                        },
                        "username": {
                          "type": "string",
                          "description": "Username to access the server.\nThis field is currently required. If unset, an error is returned. In the future, if this field is unset, the system will attempt to identify the user. If a user cannot be identified, then the requested operation will fail."
                        },
                        "ssl_thumbprint": {
                          "type": "string",
                          "description": "SHA1 hash of the server SSL certificate.\nIf unset, empty ssl thumbprint is assumed."
                        }
                      }
                    }
                  }
                },
                "placement": {
                  "type": "object",
                  "required": [
                    "folder",
                    "name"
                  ],
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "The identifier of the host to deploy the VCHA node to.\nIf unset, see vim.vm.RelocateSpec.host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the VCHA node to be used for the virtual machine name."
                    },
                    "folder": {
                      "type": "string",
                      "description": "The identifier of the folder to deploy the VCHA node to.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder:VCenter."
                    },
                    "storage": {
                      "type": "object",
                      "properties": {
                        "datastore": {
                          "type": "string",
                          "description": "The identifier of the datastore to put all the virtual disks on.\nThis field needs to be set. If unset, then see vim.vm.RelocateSpec.datastore.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore:VCenter."
                        }
                      }
                    },
                    "ha_network": {
                      "type": "string",
                      "description": "The identifier of the Network object used for the HA network.\n If the PlacementSpec.ha-network field is set, then the {#link #haNetworkType} field must be set.\n If the PlacementSpec.ha-network field is unset, then the PlacementSpec.ha-network-type field is ignored.\nIf unset and the PlacementSpec.ha-network-type field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                    },
                    "resource_pool": {
                      "type": "string",
                      "description": "The identifier of the resource pool to deploy the VCHA node to.\nIf unset, then the active node's resource pool will be used.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool:VCenter."
                    },
                    "ha_network_type": {
                      "enum": [
                        "STANDARD_PORTGROUP",
                        "DISTRIBUTED_PORTGROUP"
                      ],
                      "type": "string",
                      "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                    },
                    "management_network": {
                      "type": "string",
                      "description": "The identifier of the Network object used for the Management network. If the PlacementSpec.management-network field is set, then the PlacementSpec.management-network-type field must be set.\n If the PlacementSpec.management-network field is unset, then the PlacementSpec.management-network-type field is ignored.\nIf unset and the PlacementSpec.management-network-type field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                    },
                    "management_network_type": {
                      "enum": [
                        "STANDARD_PORTGROUP",
                        "DISTRIBUTED_PORTGROUP"
                      ],
                      "type": "string",
                      "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                    }
                  }
                },
                "failover_ip": {
                  "type": "object",
                  "required": [
                    "ip_family"
                  ],
                  "properties": {
                    "ipv4": {
                      "type": "object",
                      "required": [
                        "address"
                      ],
                      "properties": {
                        "prefix": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The CIDR prefix for the interface.\nIf unset and the Ipv4Spec.subnet-mask field is unset, this an error will be reported.\n If unset and the Ipv4Spec.subnet-mask field is set, then the Ipv4Spec.subnet-mask field will be used.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                        },
                        "address": {
                          "type": "string",
                          "description": "IPV4 address to be used to configure the interface."
                        },
                        "subnet_mask": {
                          "type": "string",
                          "description": "The subnet mask for the interface.\nIf unset and the Ipv4Spec.prefix field is unset, then an error will be reported.\n If unset and the Ipv4Spec.prefix field is set, then the Ipv4Spec.prefix field will be used to create a subnet mask whose first prefix bits are 1 and the remaining bits 0.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                        }
                      }
                    },
                    "ipv6": {
                      "type": "object",
                      "required": [
                        "address",
                        "prefix"
                      ],
                      "properties": {
                        "prefix": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The CIDR prefix for the interface."
                        },
                        "address": {
                          "type": "string",
                          "description": "IPv6 address to be used to configure the interface."
                        }
                      }
                    },
                    "ip_family": {
                      "enum": [
                        "IPV4",
                        "IPV6"
                      ],
                      "type": "string",
                      "description": "The IpFamily enumerated type defines the Ip address family."
                    },
                    "dns_servers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of IP addresses of the DNS servers for this interface. This list is a comma separated list.\nIf unset, DNS servers will not be used for the network interface."
                    },
                    "default_gateway": {
                      "type": "string",
                      "description": "The IP address of the Gateway for this interface.\nIf unset, gateway will not be used for the network interface."
                    }
                  }
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  checkVCHAClusterWitness:
    description: |-
      Validates the specified witness node's placement configuration.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vcha/cluster/witnessactioncheck/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "placement"
              ],
              "properties": {
                "vc_spec": {
                  "type": "object",
                  "required": [
                    "active_location"
                  ],
                  "properties": {
                    "active_location": {
                      "type": "object",
                      "required": [
                        "hostname"
                      ],
                      "properties": {
                        "port": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Port number.\nIf unset, port 443 will be used."
                        },
                        "hostname": {
                          "type": "string",
                          "description": "IP Address or DNS of the vCenter."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Password for the specified user.\nThis field is currently required. If unset, an empty password is assumed. In the future, if this field is unset, the system will attempt to authenticate the user. If a user cannot be identified, then the requested operation will fail."
                        },
                        "username": {
                          "type": "string",
                          "description": "Username to access the server.\nThis field is currently required. If unset, an error is returned. In the future, if this field is unset, the system will attempt to identify the user. If a user cannot be identified, then the requested operation will fail."
                        },
                        "ssl_thumbprint": {
                          "type": "string",
                          "description": "SHA1 hash of the server SSL certificate.\nIf unset, empty ssl thumbprint is assumed."
                        }
                      }
                    }
                  }
                },
                "placement": {
                  "type": "object",
                  "required": [
                    "folder",
                    "name"
                  ],
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "The identifier of the host to deploy the VCHA node to.\nIf unset, see vim.vm.RelocateSpec.host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the VCHA node to be used for the virtual machine name."
                    },
                    "folder": {
                      "type": "string",
                      "description": "The identifier of the folder to deploy the VCHA node to.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder:VCenter."
                    },
                    "storage": {
                      "type": "object",
                      "properties": {
                        "datastore": {
                          "type": "string",
                          "description": "The identifier of the datastore to put all the virtual disks on.\nThis field needs to be set. If unset, then see vim.vm.RelocateSpec.datastore.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore:VCenter."
                        }
                      }
                    },
                    "ha_network": {
                      "type": "string",
                      "description": "The identifier of the Network object used for the HA network.\n If the PlacementSpec.ha-network field is set, then the {#link #haNetworkType} field must be set.\n If the PlacementSpec.ha-network field is unset, then the PlacementSpec.ha-network-type field is ignored.\nIf unset and the PlacementSpec.ha-network-type field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                    },
                    "resource_pool": {
                      "type": "string",
                      "description": "The identifier of the resource pool to deploy the VCHA node to.\nIf unset, then the active node's resource pool will be used.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool:VCenter."
                    },
                    "ha_network_type": {
                      "enum": [
                        "STANDARD_PORTGROUP",
                        "DISTRIBUTED_PORTGROUP"
                      ],
                      "type": "string",
                      "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                    },
                    "management_network": {
                      "type": "string",
                      "description": "The identifier of the Network object used for the Management network. If the PlacementSpec.management-network field is set, then the PlacementSpec.management-network-type field must be set.\n If the PlacementSpec.management-network field is unset, then the PlacementSpec.management-network-type field is ignored.\nIf unset and the PlacementSpec.management-network-type field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                    },
                    "management_network_type": {
                      "enum": [
                        "STANDARD_PORTGROUP",
                        "DISTRIBUTED_PORTGROUP"
                      ],
                      "type": "string",
                      "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                    }
                  }
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "errors",
                "warnings"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "default_message",
                      "args"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                      },
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Arguments to be substituted into a message template."
                      },
                      "default_message": {
                        "type": "string",
                        "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                      }
                    }
                  },
                  "description": "A list of problems which are fatal to the operation and the operation will fail."
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "default_message",
                      "args"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                      },
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Arguments to be substituted into a message template."
                      },
                      "default_message": {
                        "type": "string",
                        "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                      }
                    }
                  },
                  "description": "A list of problems which may require attention, but which are not fatal."
                }
              }
            }
          }
        }
      ]
  redeployVCHAClusterWitness:
    description: |-
      Creates the witness node in a degraded cluster with node location information and pre-existing VCHA cluster configuration from the active node.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vcha/cluster/witnessactionredeployvmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "placement"
              ],
              "properties": {
                "ha_ip": {
                  "type": "object",
                  "required": [
                    "ip_family"
                  ],
                  "properties": {
                    "ipv4": {
                      "type": "object",
                      "required": [
                        "address"
                      ],
                      "properties": {
                        "prefix": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The CIDR prefix for the interface.\nIf unset and the Ipv4Spec.subnet-mask field is unset, this an error will be reported.\n If unset and the Ipv4Spec.subnet-mask field is set, then the Ipv4Spec.subnet-mask field will be used.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                        },
                        "address": {
                          "type": "string",
                          "description": "IPV4 address to be used to configure the interface."
                        },
                        "subnet_mask": {
                          "type": "string",
                          "description": "The subnet mask for the interface.\nIf unset and the Ipv4Spec.prefix field is unset, then an error will be reported.\n If unset and the Ipv4Spec.prefix field is set, then the Ipv4Spec.prefix field will be used to create a subnet mask whose first prefix bits are 1 and the remaining bits 0.\n If both the Ipv4Spec.subnet-mask field and the Ipv4Spec.prefix field are set and they do not represent the same value, then an error will be reported."
                        }
                      }
                    },
                    "ipv6": {
                      "type": "object",
                      "required": [
                        "address",
                        "prefix"
                      ],
                      "properties": {
                        "prefix": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The CIDR prefix for the interface."
                        },
                        "address": {
                          "type": "string",
                          "description": "IPv6 address to be used to configure the interface."
                        }
                      }
                    },
                    "ip_family": {
                      "enum": [
                        "IPV4",
                        "IPV6"
                      ],
                      "type": "string",
                      "description": "The IpFamily enumerated type defines the Ip address family."
                    },
                    "dns_servers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of IP addresses of the DNS servers for this interface. This list is a comma separated list.\nIf unset, DNS servers will not be used for the network interface."
                    },
                    "default_gateway": {
                      "type": "string",
                      "description": "The IP address of the Gateway for this interface.\nIf unset, gateway will not be used for the network interface."
                    }
                  }
                },
                "vc_spec": {
                  "type": "object",
                  "required": [
                    "active_location"
                  ],
                  "properties": {
                    "active_location": {
                      "type": "object",
                      "required": [
                        "hostname"
                      ],
                      "properties": {
                        "port": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Port number.\nIf unset, port 443 will be used."
                        },
                        "hostname": {
                          "type": "string",
                          "description": "IP Address or DNS of the vCenter."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Password for the specified user.\nThis field is currently required. If unset, an empty password is assumed. In the future, if this field is unset, the system will attempt to authenticate the user. If a user cannot be identified, then the requested operation will fail."
                        },
                        "username": {
                          "type": "string",
                          "description": "Username to access the server.\nThis field is currently required. If unset, an error is returned. In the future, if this field is unset, the system will attempt to identify the user. If a user cannot be identified, then the requested operation will fail."
                        },
                        "ssl_thumbprint": {
                          "type": "string",
                          "description": "SHA1 hash of the server SSL certificate.\nIf unset, empty ssl thumbprint is assumed."
                        }
                      }
                    }
                  }
                },
                "placement": {
                  "type": "object",
                  "required": [
                    "folder",
                    "name"
                  ],
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "The identifier of the host to deploy the VCHA node to.\nIf unset, see vim.vm.RelocateSpec.host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the VCHA node to be used for the virtual machine name."
                    },
                    "folder": {
                      "type": "string",
                      "description": "The identifier of the folder to deploy the VCHA node to.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder:VCenter."
                    },
                    "storage": {
                      "type": "object",
                      "properties": {
                        "datastore": {
                          "type": "string",
                          "description": "The identifier of the datastore to put all the virtual disks on.\nThis field needs to be set. If unset, then see vim.vm.RelocateSpec.datastore.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore:VCenter."
                        }
                      }
                    },
                    "ha_network": {
                      "type": "string",
                      "description": "The identifier of the Network object used for the HA network.\n If the PlacementSpec.ha-network field is set, then the {#link #haNetworkType} field must be set.\n If the PlacementSpec.ha-network field is unset, then the PlacementSpec.ha-network-type field is ignored.\nIf unset and the PlacementSpec.ha-network-type field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                    },
                    "resource_pool": {
                      "type": "string",
                      "description": "The identifier of the resource pool to deploy the VCHA node to.\nIf unset, then the active node's resource pool will be used.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool:VCenter."
                    },
                    "ha_network_type": {
                      "enum": [
                        "STANDARD_PORTGROUP",
                        "DISTRIBUTED_PORTGROUP"
                      ],
                      "type": "string",
                      "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                    },
                    "management_network": {
                      "type": "string",
                      "description": "The identifier of the Network object used for the Management network. If the PlacementSpec.management-network field is set, then the PlacementSpec.management-network-type field must be set.\n If the PlacementSpec.management-network field is unset, then the PlacementSpec.management-network-type field is ignored.\nIf unset and the PlacementSpec.management-network-type field is unset, then the same network present on the Active node virtual machine is used to deploy the virtual machine with an assumption that the network is present on the destination.\n\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter."
                    },
                    "management_network_type": {
                      "enum": [
                        "STANDARD_PORTGROUP",
                        "DISTRIBUTED_PORTGROUP"
                      ],
                      "type": "string",
                      "description": "The NetworkType enumerated type defines the type of a vCenter Server network."
                    }
                  }
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  getVCHAOperation:
    description: |-
      Retrieves the current active and disabled operations of a VCHA cluster.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vcha/operations/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "active",
                "disabled"
              ],
              "properties": {
                "active": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Identifiers of the operations that are currently running. These operation strings are one of \"vcenter.vcha.cluster.deploy\", \"vcenter.vcha.cluster.failover\", \"vcenter.vcha.cluster.passive.redeploy\", \"vcenter.vcha.cluster.witness.redeploy\", \"vcenter.vcha.cluster.mode.set\", and \"vcenter.vcha.cluster.undeploy\".\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vapi.operation. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vapi.operation.",
                  "uniqueItems": true
                },
                "disabled": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Identifiers of the operations that are current disabled. These operation strings are one of \"vcenter.vcha.cluster.deploy\", \"vcenter.vcha.cluster.failover\", \"vcenter.vcha.cluster.passive.redeploy\", \"vcenter.vcha.cluster.witness.redeploy\", \"vcenter.vcha.cluster.mode.set\", \"vcenter.vcha.cluster.undeploy\" and \"vcenter.vcha.cluster.get\".\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vapi.operation. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vapi.operation.",
                  "uniqueItems": true
                }
              }
            }
          }
        }
      ]
  cloneVM:
    description: |-
      Creates a virtual machine from an existing virtual machine. 
      
      
      if you do not have all of the privileges described as follows: 
         -  The resource Datastore referenced by the attribute VM.DiskCloneSpec.datastore requires Datastore.AllocateSpace. 
        -  The resource Datastore referenced by the attribute VM.ClonePlacementSpec.datastore requires Datastore.AllocateSpace. 
        -  The resource Folder referenced by the attribute VM.ClonePlacementSpec.folder requires VirtualMachine.Inventory.CreateFromExisting. 
        -  The resource ResourcePool referenced by the attribute VM.ClonePlacementSpec.resource-pool requires Resource.AssignVMToPool. 
        -  The resource VirtualMachine referenced by the attribute VM.CloneSpec.source requires VirtualMachine.Provisioning.Clone. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vmactionclone/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "name",
                "source"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Virtual machine name."
                },
                "source": {
                  "type": "string",
                  "description": "Virtual machine to clone from.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: VirtualMachine. When operations return a value of this structure as a result, the field will be an identifier for the resource type: VirtualMachine."
                },
                "power_on": {
                  "type": "boolean",
                  "description": "Attempt to perform a VM.CloneSpec.power-on after clone.\nIf unset, the virtual machine will not be powered on."
                },
                "placement": {
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "Host onto which the cloned virtual machine should be placed. \n If VM.ClonePlacementSpec.host and VM.ClonePlacementSpec.resource-pool are both specified, VM.ClonePlacementSpec.resource-pool must belong to VM.ClonePlacementSpec.host. \n\n If VM.ClonePlacementSpec.host and VM.ClonePlacementSpec.cluster are both specified, VM.ClonePlacementSpec.host must be a member of VM.ClonePlacementSpec.cluster.\n\nIf this field is unset, if VM.ClonePlacementSpec.resource-pool is unset, the cloned virtual machine will use the host of the source virtual machine. if VM.ClonePlacementSpec.resource-pool is set, and the target is a standalone host, the host is used. if VM.ClonePlacementSpec.resource-pool is set, and the target is a DRS cluster, a host will be picked by DRS. if VM.ClonePlacementSpec.resource-pool is set, and the target is a cluster without DRS, InvalidArgument will be thrown.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem."
                    },
                    "folder": {
                      "type": "string",
                      "description": "Virtual machine folder into which the cloned virtual machine should be placed.\nIf field is unset, the system will use the virtual machine folder of the source virtual machine. If this results in a conflict due to other placement parameters, the virtual machine clone operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder."
                    },
                    "cluster": {
                      "type": "string",
                      "description": "Cluster into which the cloned virtual machine should be placed. \n If VM.ClonePlacementSpec.cluster and VM.ClonePlacementSpec.resource-pool are both specified, VM.ClonePlacementSpec.resource-pool must belong to VM.ClonePlacementSpec.cluster. \n\n If VM.ClonePlacementSpec.cluster and VM.ClonePlacementSpec.host are both specified, VM.ClonePlacementSpec.host must be a member of VM.ClonePlacementSpec.cluster.\n\nIf VM.ClonePlacementSpec.resource-pool or VM.ClonePlacementSpec.host is specified, it is recommended that this field be unset.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
                    },
                    "datastore": {
                      "type": "string",
                      "description": "Datastore on which the cloned virtual machine's configuration state should be stored. This datastore will also be used for any virtual disks that are created as part of the virtual machine clone operation unless individually overridden.\nIf field is unset, the system will use the datastore of the source virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore."
                    },
                    "resource_pool": {
                      "type": "string",
                      "description": "Resource pool into which the cloned virtual machine should be placed.\nIf field is unset, the system will use the resource pool of the source virtual machine. If this results in a conflict due to other placement parameters, the virtual machine clone operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool."
                    }
                  }
                },
                "disks_to_remove": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Set of Disks to Remove.\nIf unset, all disks will be copied. If the same identifier is in VM.CloneSpec.disks-to-update InvalidArgument fault will be returned.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.vm.hardware.Disk.",
                  "uniqueItems": true
                },
                "disks_to_update": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "properties": {
                          "datastore": {
                            "type": "string",
                            "description": "Destination datastore to clone disk.\nThis field is currently required. In the future, if this field is unset disk will be copied to the datastore specified in the VM.ClonePlacementSpec.datastore field of VM.CloneSpec.placement.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore."
                          },
                          "storage_policy": {
                            "type": "object",
                            "required": [
                              "policy"
                            ],
                            "properties": {
                              "policy": {
                                "type": "string",
                                "description": "Identifier of the storage policy which should be associated with the VMDK file.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Map of Disks to Update.\nIf unset, all disks will copied to the datastore specified in the VM.ClonePlacementSpec.datastore field of VM.CloneSpec.placement. If the same identifier is in VM.CloneSpec.disks-to-remove InvalidArgument fault will be thrown.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Disk."
                },
                "disk_storage_policy": {
                  "type": "object",
                  "required": [
                    "policy"
                  ],
                  "properties": {
                    "policy": {
                      "type": "string",
                      "description": "Identifier of the storage policy which should be associated with the virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                    }
                  }
                },
                "vm_home_storage_policy": {
                  "type": "object",
                  "required": [
                    "policy"
                  ],
                  "properties": {
                    "policy": {
                      "type": "string",
                      "description": "Identifier of the storage policy which should be associated with the virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                    }
                  }
                },
                "guest_customization_spec": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the customization specification.\nIf unset, no guest customization is performed."
                    }
                  }
                },
                "fallback_to_datastore_default_policy": {
                  "type": "boolean",
                  "description": "Flag used by the server to auto assign storage policy when a target storage policy is not explicitly specified for the operation and the source virtual machine storage policy is not compatible with target datastore. If flag is set to true, the server will use the default storage policy of the target datastore. Otherwise, the server will throw an error for the operation. See also the storage policy assignment rules for the VM.clone operation. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf unset, the default value is false, the server will throw an error if source policy is not compatible with the target datastore."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  cloneVMTask:
    description: |-
      Creates a virtual machine from an existing virtual machine. 
      
      
      if you do not have all of the privileges described as follows: 
         -  The resource Datastore referenced by the attribute VM.DiskCloneSpec.datastore requires Datastore.AllocateSpace. 
        -  The resource Datastore referenced by the attribute VM.ClonePlacementSpec.datastore requires Datastore.AllocateSpace. 
        -  The resource Folder referenced by the attribute VM.ClonePlacementSpec.folder requires VirtualMachine.Inventory.CreateFromExisting. 
        -  The resource ResourcePool referenced by the attribute VM.ClonePlacementSpec.resource-pool requires Resource.AssignVMToPool. 
        -  The resource VirtualMachine referenced by the attribute VM.CloneSpec.source requires VirtualMachine.Provisioning.Clone. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vmactionclonevmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "name",
                "source"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Virtual machine name."
                },
                "source": {
                  "type": "string",
                  "description": "Virtual machine to clone from.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: VirtualMachine. When operations return a value of this structure as a result, the field will be an identifier for the resource type: VirtualMachine."
                },
                "power_on": {
                  "type": "boolean",
                  "description": "Attempt to perform a VM.CloneSpec.power-on after clone.\nIf unset, the virtual machine will not be powered on."
                },
                "placement": {
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "Host onto which the cloned virtual machine should be placed. \n If VM.ClonePlacementSpec.host and VM.ClonePlacementSpec.resource-pool are both specified, VM.ClonePlacementSpec.resource-pool must belong to VM.ClonePlacementSpec.host. \n\n If VM.ClonePlacementSpec.host and VM.ClonePlacementSpec.cluster are both specified, VM.ClonePlacementSpec.host must be a member of VM.ClonePlacementSpec.cluster.\n\nIf this field is unset, if VM.ClonePlacementSpec.resource-pool is unset, the cloned virtual machine will use the host of the source virtual machine. if VM.ClonePlacementSpec.resource-pool is set, and the target is a standalone host, the host is used. if VM.ClonePlacementSpec.resource-pool is set, and the target is a DRS cluster, a host will be picked by DRS. if VM.ClonePlacementSpec.resource-pool is set, and the target is a cluster without DRS, InvalidArgument will be thrown.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem."
                    },
                    "folder": {
                      "type": "string",
                      "description": "Virtual machine folder into which the cloned virtual machine should be placed.\nIf field is unset, the system will use the virtual machine folder of the source virtual machine. If this results in a conflict due to other placement parameters, the virtual machine clone operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder."
                    },
                    "cluster": {
                      "type": "string",
                      "description": "Cluster into which the cloned virtual machine should be placed. \n If VM.ClonePlacementSpec.cluster and VM.ClonePlacementSpec.resource-pool are both specified, VM.ClonePlacementSpec.resource-pool must belong to VM.ClonePlacementSpec.cluster. \n\n If VM.ClonePlacementSpec.cluster and VM.ClonePlacementSpec.host are both specified, VM.ClonePlacementSpec.host must be a member of VM.ClonePlacementSpec.cluster.\n\nIf VM.ClonePlacementSpec.resource-pool or VM.ClonePlacementSpec.host is specified, it is recommended that this field be unset.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
                    },
                    "datastore": {
                      "type": "string",
                      "description": "Datastore on which the cloned virtual machine's configuration state should be stored. This datastore will also be used for any virtual disks that are created as part of the virtual machine clone operation unless individually overridden.\nIf field is unset, the system will use the datastore of the source virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore."
                    },
                    "resource_pool": {
                      "type": "string",
                      "description": "Resource pool into which the cloned virtual machine should be placed.\nIf field is unset, the system will use the resource pool of the source virtual machine. If this results in a conflict due to other placement parameters, the virtual machine clone operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool."
                    }
                  }
                },
                "disks_to_remove": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Set of Disks to Remove.\nIf unset, all disks will be copied. If the same identifier is in VM.CloneSpec.disks-to-update InvalidArgument fault will be returned.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.vm.hardware.Disk.",
                  "uniqueItems": true
                },
                "disks_to_update": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "properties": {
                          "datastore": {
                            "type": "string",
                            "description": "Destination datastore to clone disk.\nThis field is currently required. In the future, if this field is unset disk will be copied to the datastore specified in the VM.ClonePlacementSpec.datastore field of VM.CloneSpec.placement.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore."
                          },
                          "storage_policy": {
                            "type": "object",
                            "required": [
                              "policy"
                            ],
                            "properties": {
                              "policy": {
                                "type": "string",
                                "description": "Identifier of the storage policy which should be associated with the VMDK file.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Map of Disks to Update.\nIf unset, all disks will copied to the datastore specified in the VM.ClonePlacementSpec.datastore field of VM.CloneSpec.placement. If the same identifier is in VM.CloneSpec.disks-to-remove InvalidArgument fault will be thrown.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Disk."
                },
                "disk_storage_policy": {
                  "type": "object",
                  "required": [
                    "policy"
                  ],
                  "properties": {
                    "policy": {
                      "type": "string",
                      "description": "Identifier of the storage policy which should be associated with the virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                    }
                  }
                },
                "vm_home_storage_policy": {
                  "type": "object",
                  "required": [
                    "policy"
                  ],
                  "properties": {
                    "policy": {
                      "type": "string",
                      "description": "Identifier of the storage policy which should be associated with the virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                    }
                  }
                },
                "guest_customization_spec": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the customization specification.\nIf unset, no guest customization is performed."
                    }
                  }
                },
                "fallback_to_datastore_default_policy": {
                  "type": "boolean",
                  "description": "Flag used by the server to auto assign storage policy when a target storage policy is not explicitly specified for the operation and the source virtual machine storage policy is not compatible with target datastore. If flag is set to true, the server will use the default storage policy of the target datastore. Otherwise, the server will throw an error for the operation. See also the storage policy assignment rules for the VM.clone operation. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf unset, the default value is false, the server will throw an error if source policy is not compatible with the target datastore."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  instantCloneVM:
    description: |-
      Create an instant clone of an existing virtual machine.
      if you do not have all of the privileges described as follows: 
         -  The resource VirtualMachine referenced by the attribute VM.InstantCloneSpec.source requires VirtualMachine.Provisioning.Clone and VirtualMachine.Inventory.CreateFromExisting. 
        -  The resource Folder referenced by the attribute VM.InstantClonePlacementSpec.folder requires VirtualMachine.Interact.PowerOn. 
        -  The resource ResourcePool referenced by the attribute VM.InstantClonePlacementSpec.resource-pool requires Resource.AssignVMToPool. 
        -  The resource Datastore referenced by the attribute VM.InstantClonePlacementSpec.datastore requires Datastore.AllocateSpace. 
        -  The resource Network referenced by the attribute Ethernet.BackingSpec.network requires Network.Assign. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vmactioninstant-clone/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "name",
                "source"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the new virtual machine."
                },
                "source": {
                  "type": "string",
                  "description": "Virtual machine to InstantClone from.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: VirtualMachine. When operations return a value of this structure as a result, the field will be an identifier for the resource type: VirtualMachine."
                },
                "bios_uuid": {
                  "type": "string",
                  "description": "128-bit SMBIOS UUID of a virtual machine represented as a hexadecimal string in \"12345678-abcd-1234-cdef-123456789abc\" format.\nIf unset, will be generated."
                },
                "placement": {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "Virtual machine folder into which the InstantCloned virtual machine should be placed.\nIf field is unset, the system will use the virtual machine folder of the source virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder."
                    },
                    "datastore": {
                      "type": "string",
                      "description": "Datastore on which the InstantCloned virtual machine's configuration state should be stored. This datastore will also be used for any virtual disks that are created as part of the virtual machine InstantClone operation.\nIf field is unset, the system will use the datastore of the source virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore."
                    },
                    "resource_pool": {
                      "type": "string",
                      "description": "Resource pool into which the InstantCloned virtual machine should be placed.\nIf field is unset, the system will use the resource pool of the source virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool."
                    }
                  }
                },
                "nics_to_update": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "properties": {
                          "backing": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "enum": [
                                  "STANDARD_PORTGROUP",
                                  "HOST_DEVICE",
                                  "DISTRIBUTED_PORTGROUP",
                                  "OPAQUE_NETWORK"
                                ],
                                "type": "string",
                                "description": "Backing type for the virtual Ethernet adapter."
                              },
                              "network": {
                                "type": "string",
                                "description": "Identifier of the network that backs the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingSpec.type is one of STANDARD_PORTGROUP, DISTRIBUTED_PORTGROUP, or OPAQUE_NETWORK.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network."
                              },
                              "distributed_port": {
                                "type": "string",
                                "description": "Key of the distributed virtual port that backs the virtual Ethernet adapter. Depending on the type of the Portgroup, the port may be specified using this field. If the portgroup type is early-binding (also known as static), a port is assigned when the Ethernet adapter is configured to use the port. The port may be either automatically or specifically assigned based on the value of this field. If the portgroup type is ephemeral, the port is created and assigned to a virtual machine when it is powered on and the Ethernet adapter is connected. This field cannot be specified as no free ports exist before use.\nMay be used to specify a port when the network specified on the Ethernet.BackingSpec.network field is a static or early binding distributed portgroup. If unset, the port will be automatically assigned to the Ethernet adapter based on the policy embodied by the portgroup type."
                              }
                            },
                            "description": "Physical resource backing for the virtual Ethernet adapter. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged."
                          },
                          "mac_type": {
                            "enum": [
                              "MANUAL",
                              "GENERATED",
                              "ASSIGNED"
                            ],
                            "type": "string",
                            "description": "MAC address type. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged."
                          },
                          "mac_address": {
                            "type": "string",
                            "description": "MAC address. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged. Must be specified if Ethernet.UpdateSpec.mac-type is MANUAL. Must be unset if the MAC address type is not MANUAL."
                          },
                          "start_connected": {
                            "type": "boolean",
                            "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nIf unset, the value is unchanged."
                          },
                          "allow_guest_control": {
                            "type": "boolean",
                            "description": "Flag indicating whether the guest can connect and disconnect the device.\nIf unset, the value is unchanged."
                          },
                          "wake_on_lan_enabled": {
                            "type": "boolean",
                            "description": "Flag indicating whether wake-on-LAN shoud be enabled on this virtual Ethernet adapter. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged."
                          },
                          "upt_compatibility_enabled": {
                            "type": "boolean",
                            "description": "Flag indicating whether Universal Pass-Through (UPT) compatibility should be enabled on this virtual Ethernet adapter. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged. Must be unset if the emulation type of the virtual Ethernet adapter is not VMXNET3."
                          }
                        }
                      }
                    }
                  },
                  "description": "Map of NICs to update.\nIf unset, no NICs will be updated.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Ethernet. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Ethernet."
                },
                "disconnect_all_nics": {
                  "type": "boolean",
                  "description": "Indicates whether all NICs on the destination virtual machine should be disconnected from the newtwork\nIf unset, connection status of all NICs on the destination virtual machine will be the same as on the source virtual machine."
                },
                "serial_ports_to_update": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "properties": {
                          "backing": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "file": {
                                "type": "string",
                                "description": "Path of the file backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is FILE."
                              },
                              "pipe": {
                                "type": "string",
                                "description": "Name of the pipe backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is one of PIPE_SERVER or PIPE_CLIENT."
                              },
                              "type": {
                                "enum": [
                                  "FILE",
                                  "HOST_DEVICE",
                                  "PIPE_SERVER",
                                  "PIPE_CLIENT",
                                  "NETWORK_SERVER",
                                  "NETWORK_CLIENT"
                                ],
                                "type": "string",
                                "description": "Backing type for the virtual serial port."
                              },
                              "proxy": {
                                "type": "string",
                                "format": "uri",
                                "description": "Proxy service that provides network access to the network backing. If set, the virtual machine initiates a connection with the proxy service and forwards the traffic to the proxy.\nIf unset, no proxy service should be used."
                              },
                              "no_rx_loss": {
                                "type": "boolean",
                                "description": "Flag that enables optimized data transfer over the pipe. When the value is true, the host buffers data to prevent data overrun. This allows the virtual machine to read all of the data transferred over the pipe with no data loss.\nIf unset, defaults to false."
                              },
                              "host_device": {
                                "type": "string",
                                "description": "Name of the device backing the virtual serial port. \n\n\nIf unset, the virtual serial port will be configured to automatically detect a suitable host device."
                              },
                              "network_location": {
                                "type": "string",
                                "format": "uri",
                                "description": "URI specifying the location of the network service backing the virtual serial port. \n   - If Serial.BackingSpec.type is NETWORK_SERVER, this field is the location used by clients to connect to this server. The hostname part of the URI should either be empty or should specify the address of the host on which the virtual machine is running.\n   - If Serial.BackingSpec.type is NETWORK_CLIENT, this field is the location used by the virtual machine to connect to the remote server.\n\n \nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is one of NETWORK_SERVER or NETWORK_CLIENT."
                              }
                            },
                            "description": "Physical resource backing for the virtual serial port. \n This field may only be modified if the virtual machine is not powered on or the virtual serial port is not connected.\n\nIf unset, the value is unchanged."
                          },
                          "yield_on_poll": {
                            "type": "boolean",
                            "description": "CPU yield behavior. If set to true, the virtual machine will periodically relinquish the processor if its sole task is polling the virtual serial port. The amount of time it takes to regain the processor will depend on the degree of other virtual machine activity on the host. \n This field may be modified at any time, and changes applied to a connected virtual serial port take effect immediately.\n\nIf unset, the value is unchanged."
                          },
                          "start_connected": {
                            "type": "boolean",
                            "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nIf unset, the value is unchanged."
                          },
                          "allow_guest_control": {
                            "type": "boolean",
                            "description": "Flag indicating whether the guest can connect and disconnect the device.\nIf unset, the value is unchanged."
                          }
                        }
                      }
                    }
                  },
                  "description": "Map of serial ports to Update.\nIf unset, no serial ports will be updated.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.SerialPort. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.SerialPort."
                },
                "parallel_ports_to_update": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "properties": {
                          "backing": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "file": {
                                "type": "string",
                                "description": "Path of the file that should be used as the virtual parallel port backing.\nThis field is optional and it is only relevant when the value of Parallel.BackingSpec.type is FILE."
                              },
                              "type": {
                                "enum": [
                                  "FILE",
                                  "HOST_DEVICE"
                                ],
                                "type": "string",
                                "description": "Backing type for the virtual parallel port."
                              },
                              "host_device": {
                                "type": "string",
                                "description": "Name of the device that should be used as the virtual parallel port backing.\nIf unset, the virtual parallel port will be configured to automatically detect a suitable host device."
                              }
                            },
                            "description": "Physical resource backing for the virtual parallel port. \n This field may only be modified if the virtual machine is not powered on or the virtual parallel port is not connected.\n\nIf unset, the value is unchanged."
                          },
                          "start_connected": {
                            "type": "boolean",
                            "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nIf unset, the value is unchanged."
                          },
                          "allow_guest_control": {
                            "type": "boolean",
                            "description": "Flag indicating whether the guest can connect and disconnect the device.\nIf unset, the value is unchanged."
                          }
                        }
                      }
                    }
                  },
                  "description": "Map of parallel ports to Update.\nIf unset, no parallel ports will be updated.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.ParallelPort. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.ParallelPort."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  registerVM:
    description: |-
      Creates a virtual machine from existing virtual machine files on storage.
      if you do not have all of the privileges described as follows: 
         -  The resource Datastore referenced by the attribute VM.RegisterSpec.datastore requires System.Read. 
        -  The resource Folder referenced by the attribute VM.InventoryPlacementSpec.folder requires VirtualMachine.Inventory.Register. 
        -  The resource ResourcePool referenced by the attribute VM.ComputePlacementSpec.resource-pool requires Resource.AssignVMToPool. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vmactionregister/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Virtual machine name.\nIf unset, the display name from the virtual machine's configuration file will be used."
                },
                "path": {
                  "type": "string",
                  "description": "Path to the virtual machine's configuration file on the datastore corresponding to {@link #datastore).\nIf unset, VM.RegisterSpec.datastore must also be unset and VM.RegisterSpec.datastore-path must be set."
                },
                "datastore": {
                  "type": "string",
                  "description": "Identifier of the datastore on which the virtual machine's configuration state is stored.\nIf unset, VM.RegisterSpec.path must also be unset and VM.RegisterSpec.datastore-path must be set.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore."
                },
                "placement": {
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "Host onto which the virtual machine should be placed. \n If VM.ComputePlacementSpec.host and VM.ComputePlacementSpec.resource-pool are both specified, VM.ComputePlacementSpec.resource-pool must belong to VM.ComputePlacementSpec.host. \n\n If VM.ComputePlacementSpec.host and VM.ComputePlacementSpec.cluster are both specified, VM.ComputePlacementSpec.host must be a member of VM.ComputePlacementSpec.cluster.\n\nThis field may be unset if VM.ComputePlacementSpec.resource-pool or VM.ComputePlacementSpec.cluster is specified. If unset, the system will attempt to choose a suitable host for the virtual machine; if a host cannot be chosen, the virtual machine creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem."
                    },
                    "folder": {
                      "type": "string",
                      "description": "Virtual machine folder into which the virtual machine should be placed.\nThis field is currently required. In the future, if this field is unset, the system will attempt to choose a suitable folder for the virtual machine; if a folder cannot be chosen, the virtual machine creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder."
                    },
                    "cluster": {
                      "type": "string",
                      "description": "Cluster into which the virtual machine should be placed. \n If VM.ComputePlacementSpec.cluster and VM.ComputePlacementSpec.resource-pool are both specified, VM.ComputePlacementSpec.resource-pool must belong to VM.ComputePlacementSpec.cluster. \n\n If VM.ComputePlacementSpec.cluster and VM.ComputePlacementSpec.host are both specified, VM.ComputePlacementSpec.host must be a member of VM.ComputePlacementSpec.cluster.\n\nIf VM.ComputePlacementSpec.resource-pool or VM.ComputePlacementSpec.host is specified, it is recommended that this field be unset.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
                    },
                    "resource_pool": {
                      "type": "string",
                      "description": "Resource pool into which the virtual machine should be placed.\nThis field is currently required if both VM.ComputePlacementSpec.host and VM.ComputePlacementSpec.cluster are unset. In the future, if this field is unset, the system will attempt to choose a suitable resource pool for the virtual machine; if a resource pool cannot be chosen, the virtual machine creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool."
                    }
                  }
                },
                "datastore_path": {
                  "type": "string",
                  "description": "Datastore path for the virtual machine's configuration file in the format \"[datastore name] path\". For example \"[storage1] Test-VM/Test-VM.vmx\".\nIf unset, both VM.RegisterSpec.datastore and VM.RegisterSpec.path must be set."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  relocateVM:
    description: |-
      Relocates a virtual machine based on the specification. The parts of the virtual machine that can move are: FOLDER, RESOURCE_POOL, HOST, CLUSTER and DATASTORE of home of the virtual machine and disks. 
      
      
      if you do not have all of the privileges described as follows: 
         -  The resource VirtualMachine referenced by the parameter vm requires Resource.ColdMigrate. 
        -  The resource ResourcePool referenced by the attribute VM.RelocatePlacementSpec.resource-pool requires Resource.AssignVMToPool. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vmactionrelocate/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "disks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "properties": {
                          "datastore": {
                            "type": "string",
                            "description": "Destination datastore to relocate disk.\nThis field is currently required. In the future, if this field is unset, disk will use the datastore specified in VM.RelocatePlacementSpec.datastore field of VM.RelocateSpec.placement.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore."
                          },
                          "storage_policy": {
                            "type": "object",
                            "required": [
                              "policy"
                            ],
                            "properties": {
                              "policy": {
                                "type": "string",
                                "description": "Identifier of the storage policy which should be associated with the VMDK file.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Individual disk relocation map.\nIf unset, all disks will migrate to the datastore specified in the VM.RelocatePlacementSpec.datastore field of VM.RelocateSpec.placement.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Disk."
                },
                "placement": {
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "Host onto which the virtual machine should be placed. \n If VM.RelocatePlacementSpec.host and VM.RelocatePlacementSpec.resource-pool are both specified, VM.RelocatePlacementSpec.resource-pool must belong to VM.RelocatePlacementSpec.host. \n\n If VM.RelocatePlacementSpec.host and VM.RelocatePlacementSpec.cluster are both specified, VM.RelocatePlacementSpec.host must be a member of VM.RelocatePlacementSpec.cluster.\n\nIf this field is unset, if VM.RelocatePlacementSpec.resource-pool is unset, the virtual machine will remain on the current host. if VM.RelocatePlacementSpec.resource-pool is set, and the target is a standalone host, the host is used. if VM.RelocatePlacementSpec.resource-pool is set, and the target is a DRS cluster, a host will be picked by DRS. if VM.RelocatePlacementSpec.resource-pool is set, and the target is a cluster without DRS, InvalidArgument will be thrown.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem."
                    },
                    "folder": {
                      "type": "string",
                      "description": "Virtual machine folder into which the virtual machine should be placed.\nIf this field is unset, the virtual machine will stay in the current folder.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder."
                    },
                    "cluster": {
                      "type": "string",
                      "description": "Cluster into which the virtual machine should be placed. \n If VM.RelocatePlacementSpec.cluster and VM.RelocatePlacementSpec.resource-pool are both specified, VM.RelocatePlacementSpec.resource-pool must belong to VM.RelocatePlacementSpec.cluster. \n\n If VM.RelocatePlacementSpec.cluster and VM.RelocatePlacementSpec.host are both specified, VM.RelocatePlacementSpec.host must be a member of VM.RelocatePlacementSpec.cluster.\n\nIf VM.RelocatePlacementSpec.resource-pool or VM.RelocatePlacementSpec.host is specified, it is recommended that this field be unset.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
                    },
                    "datastore": {
                      "type": "string",
                      "description": "Datastore on which the virtual machine's configuration state should be stored. This datastore will also be used for any virtual disks that are associated with the virtual machine, unless individually overridden.\nIf this field is unset, the virtual machine will remain on the current datastore.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore."
                    },
                    "resource_pool": {
                      "type": "string",
                      "description": "Resource pool into which the virtual machine should be placed.\nIf this field is unset, the virtual machine will stay in the current resource pool.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool."
                    }
                  }
                },
                "disk_storage_policy": {
                  "type": "object",
                  "required": [
                    "policy"
                  ],
                  "properties": {
                    "policy": {
                      "type": "string",
                      "description": "Identifier of the storage policy which should be associated with the virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                    }
                  }
                },
                "vm_home_storage_policy": {
                  "type": "object",
                  "required": [
                    "policy"
                  ],
                  "properties": {
                    "policy": {
                      "type": "string",
                      "description": "Identifier of the storage policy which should be associated with the virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                    }
                  }
                },
                "fallback_to_datastore_default_policy": {
                  "type": "boolean",
                  "description": "Flag used by the server to auto assign storage policy when a storage policy is not explicitly specified for the operation and the original virtual machine storage policy is not compatible with the target datastore. If flag is set to true, the server will use the default storage policy of the target datastore. Otherwise, the server will throw an error for the operation. See also the storage policy assignment rules for the VM.relocate operation. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf unset, the default value is false, the server will throw an error if source policy is not compatible with target datastore."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  relocateVMTask:
    description: |-
      Relocates a virtual machine based on the specification. The parts of the virtual machine that can move are: FOLDER, RESOURCE_POOL, HOST, CLUSTER and DATASTORE of home of the virtual machine and disks. 
      
      
      if you do not have all of the privileges described as follows: 
         -  The resource VirtualMachine referenced by the parameter vm requires Resource.ColdMigrate. 
        -  The resource ResourcePool referenced by the attribute VM.RelocatePlacementSpec.resource-pool requires Resource.AssignVMToPool. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vmactionrelocatevmw-tasktrue/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "disks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "properties": {
                          "datastore": {
                            "type": "string",
                            "description": "Destination datastore to relocate disk.\nThis field is currently required. In the future, if this field is unset, disk will use the datastore specified in VM.RelocatePlacementSpec.datastore field of VM.RelocateSpec.placement.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore."
                          },
                          "storage_policy": {
                            "type": "object",
                            "required": [
                              "policy"
                            ],
                            "properties": {
                              "policy": {
                                "type": "string",
                                "description": "Identifier of the storage policy which should be associated with the VMDK file.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Individual disk relocation map.\nIf unset, all disks will migrate to the datastore specified in the VM.RelocatePlacementSpec.datastore field of VM.RelocateSpec.placement.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Disk."
                },
                "placement": {
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "Host onto which the virtual machine should be placed. \n If VM.RelocatePlacementSpec.host and VM.RelocatePlacementSpec.resource-pool are both specified, VM.RelocatePlacementSpec.resource-pool must belong to VM.RelocatePlacementSpec.host. \n\n If VM.RelocatePlacementSpec.host and VM.RelocatePlacementSpec.cluster are both specified, VM.RelocatePlacementSpec.host must be a member of VM.RelocatePlacementSpec.cluster.\n\nIf this field is unset, if VM.RelocatePlacementSpec.resource-pool is unset, the virtual machine will remain on the current host. if VM.RelocatePlacementSpec.resource-pool is set, and the target is a standalone host, the host is used. if VM.RelocatePlacementSpec.resource-pool is set, and the target is a DRS cluster, a host will be picked by DRS. if VM.RelocatePlacementSpec.resource-pool is set, and the target is a cluster without DRS, InvalidArgument will be thrown.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem."
                    },
                    "folder": {
                      "type": "string",
                      "description": "Virtual machine folder into which the virtual machine should be placed.\nIf this field is unset, the virtual machine will stay in the current folder.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder."
                    },
                    "cluster": {
                      "type": "string",
                      "description": "Cluster into which the virtual machine should be placed. \n If VM.RelocatePlacementSpec.cluster and VM.RelocatePlacementSpec.resource-pool are both specified, VM.RelocatePlacementSpec.resource-pool must belong to VM.RelocatePlacementSpec.cluster. \n\n If VM.RelocatePlacementSpec.cluster and VM.RelocatePlacementSpec.host are both specified, VM.RelocatePlacementSpec.host must be a member of VM.RelocatePlacementSpec.cluster.\n\nIf VM.RelocatePlacementSpec.resource-pool or VM.RelocatePlacementSpec.host is specified, it is recommended that this field be unset.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
                    },
                    "datastore": {
                      "type": "string",
                      "description": "Datastore on which the virtual machine's configuration state should be stored. This datastore will also be used for any virtual disks that are associated with the virtual machine, unless individually overridden.\nIf this field is unset, the virtual machine will remain on the current datastore.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore."
                    },
                    "resource_pool": {
                      "type": "string",
                      "description": "Resource pool into which the virtual machine should be placed.\nIf this field is unset, the virtual machine will stay in the current resource pool.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool."
                    }
                  }
                },
                "disk_storage_policy": {
                  "type": "object",
                  "required": [
                    "policy"
                  ],
                  "properties": {
                    "policy": {
                      "type": "string",
                      "description": "Identifier of the storage policy which should be associated with the virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                    }
                  }
                },
                "vm_home_storage_policy": {
                  "type": "object",
                  "required": [
                    "policy"
                  ],
                  "properties": {
                    "policy": {
                      "type": "string",
                      "description": "Identifier of the storage policy which should be associated with the virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                    }
                  }
                },
                "fallback_to_datastore_default_policy": {
                  "type": "boolean",
                  "description": "Flag used by the server to auto assign storage policy when a storage policy is not explicitly specified for the operation and the original virtual machine storage policy is not compatible with the target datastore. If flag is set to true, the server will use the default storage policy of the target datastore. Otherwise, the server will throw an error for the operation. See also the storage policy assignment rules for the VM.relocate operation. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf unset, the default value is false, the server will throw an error if source policy is not compatible with target datastore."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  unregisterVM:
    description: |-
      Removes the virtual machine corresponding to vm from the vCenter inventory without removing any of the virtual machine's files from storage. All high-level information stored with the management server (ESXi or vCenter) is removed, including information such as statistics, resource pool association, permissions, and alarms.
      if you do not have all of the privileges described as follows: 
         -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.Inventory.Unregister. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vmactionunregister/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getVMComputePolicies:
    description: |-
      Returns information about the compliance of a virtual machine with a compute policy in VMware Cloud on AWS. Usage beyond VMware Cloud on AWS is not supported. Warning: This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/compute/policies/policy/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "enum": [
                "NOT_APPLICABLE",
                "COMPLIANT",
                "NOT_COMPLIANT",
                "UNKNOWN"
              ],
              "type": "string",
              "description": "The {@name ObjectCompliance} {@term enumerated type} defines the compliance states a policy can be in on a particular object in VMware Cloud on AWS. Usage beyond VMware Cloud on AWS is not supported. Warning: This enumeration is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments."
            }
          }
        }
      ]
  createVMConsoleTicket:
    description: |-
      Creates a virtual machine console ticket of a given ticket type. The created ticket is a one time use URI. The validity of the ticket is 30 minutes, if not used with in the time frame the ticket expires. 
       The VMRC ticket contains the IP address or the DNS resolvable name of the vCenter server. This ticket requires installation of VMware Workstation, VMware Fusion or VMRC to be installed on the machine where the ticket has to be opened. This ticket can be acquired even when the VM is turned off. 
      
       The WEBMKS ticket contains the IP address of the DNS resolvable name of the ESX server. This ticket requires user to embed this ticket in a HTML page using VMware HTML Console SDK - https://www.vmware.com/support/developer/html-console This ticket can be acquired only when the VM is turned on.
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/console/tickets/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "enum": [
                    "VMRC",
                    "WEBMKS"
                  ],
                  "type": "string",
                  "description": "The Tickets.Type enumerated type defines the types of console tickets."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "ticket"
              ],
              "properties": {
                "ticket": {
                  "type": "string",
                  "format": "uri",
                  "description": "Console ticket URI"
                }
              }
            }
          }
        }
      ]
  setVMGuestCustomization:
    description: |-
      Applies a customization specification in spec on the virtual machine in vm. This operation only sets the specification settings for the virtual machine. The actual customization happens inside the guest when the virtual machine is powered on. If spec has unset values, then any pending customization settings for the virtual machine are cleared. If there is a pending customization for the virtual machine and spec has valid content, then the existing customization setting will be overwritten with the new settings.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/customization/put/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the customization specification that has be retrieved from the virtual center inventory and applied for the virtual machine. Either one of Customization.SetSpec.name or Customization.SetSpec.spec or none of them should be specified.\nIf unset and Customization.SetSpec.spec is also unset when executing Customization.set operationg, then any pending customization for the virtual machine will be cleared."
                },
                "spec": {
                  "type": "object",
                  "required": [
                    "configuration_spec",
                    "global_DNS_settings",
                    "interfaces"
                  ],
                  "properties": {
                    "interfaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "adapter"
                        ],
                        "properties": {
                          "adapter": {
                            "type": "object",
                            "properties": {
                              "ipv4": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "DHCP",
                                      "STATIC",
                                      "USER_INPUT_REQUIRED"
                                    ],
                                    "type": "string",
                                    "description": "The type of the IPv4 configuration."
                                  },
                                  "prefix": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The IPv4 CIDR prefix, for example, 24. See http://www.oav.net/mirrors/cidr.html for netmask-to-prefix conversion.\nThis field is optional and it is only relevant when the value of Ipv4.type is STATIC."
                                  },
                                  "gateways": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Gateways for the IPv4 address.\nIf unset, no gateways are set."
                                  },
                                  "ip_address": {
                                    "type": "string",
                                    "description": "The static IPv4 address\nThis field is optional and it is only relevant when the value of Ipv4.type is STATIC."
                                  }
                                },
                                "description": "Specification to configure IPv4 address, subnet mask and gateway info for this virtual network adapter.\nIf unset, no IPv4 addresses are set."
                              },
                              "ipv6": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "ipv6": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "ip_address",
                                        "prefix"
                                      ],
                                      "properties": {
                                        "prefix": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "The CIDR prefix for the interface."
                                        },
                                        "ip_address": {
                                          "type": "string",
                                          "description": "Static IPv6 Address."
                                        }
                                      }
                                    },
                                    "description": "IPv6 address\nThis field is optional and it is only relevant when the value of Ipv6.type is STATIC."
                                  },
                                  "type": {
                                    "enum": [
                                      "DHCP",
                                      "STATIC",
                                      "USER_INPUT_REQUIRED"
                                    ],
                                    "type": "string",
                                    "description": "The IPv6 configuration type"
                                  },
                                  "gateways": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "gateways for the IPv6 address.\nIf unset, no gateways are set."
                                  }
                                },
                                "description": "Specification to configure IPv6 address, subnet mask and gateway info for this virtual network adapter.\nIf unset, no IPv6 addresses are set."
                              },
                              "windows": {
                                "type": "object",
                                "properties": {
                                  "dns_domain": {
                                    "type": "string",
                                    "description": "A DNS domain suffix such as vmware.com.\nIf unset, no DNS domain is set."
                                  },
                                  "dns_servers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "A list of server IP addresses to use for DNS lookup in a Windows guest operating system. \n These servers should be specified in the order of preference. If this list is not empty, and if a DHCP IP address is used, then these settings override the DHCP settings.\n\nIf unset, no DNS servers are set."
                                  },
                                  "wins_servers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "List of WINS Servers to set for the Windows guest operating system. A Maximum of two IP addresses can be specified in this list. The first IP address will be set as the primary WINS server. The second IP address will be set as the secondary WINS server.\nIf unset, no WINS Servers are set."
                                  },
                                  "net_BIOS_mode": {
                                    "enum": [
                                      "USE_DHCP",
                                      "ENABLE",
                                      "DISABLE"
                                    ],
                                    "type": "string",
                                    "description": "NetBIOS setting for Windows.\nIf unset, existing NetBIOS mode will be retained."
                                  }
                                },
                                "description": "Windows settings to be configured for this specific virtual Network adapter. This is valid only for Windows guest operating systems.\nIf unset, no specific Windows settings are set."
                              }
                            },
                            "description": "The IP settings for the associated virtual network adapter."
                          },
                          "mac_address": {
                            "type": "string",
                            "description": "The MAC address of a network adapter being customized.\nIf unset, the customization process maps the the settings from the list of AdapterMappings.IPSettings in the CustomizationSpec.interfaces to the virtual machine's network adapters, in PCI slot order. The first virtual network adapter on the PCI bus is assigned interfaces[0].IPSettings, the second adapter is assigned interfaces[1].IPSettings, and so on."
                          }
                        }
                      },
                      "description": "IP settings that are specific to a particular virtual network adapter. The AdapterMapping structure maps a network adapter's MAC address to its IPSettings. May be empty if there are no network adapters, else should match number of network adapters configured for the VM."
                    },
                    "configuration_spec": {
                      "type": "object",
                      "properties": {
                        "linux_config": {
                          "type": "object",
                          "required": [
                            "hostname",
                            "domain"
                          ],
                          "properties": {
                            "domain": {
                              "type": "string",
                              "description": "The fully qualified domain name."
                            },
                            "hostname": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "enum": [
                                    "FIXED",
                                    "PREFIX",
                                    "VIRTUAL_MACHINE",
                                    "USER_INPUT_REQUIRED"
                                  ],
                                  "type": "string",
                                  "description": "The type of the Name Generator"
                                },
                                "prefix": {
                                  "type": "string",
                                  "description": "Base prefix, to which a unique number is appended.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is PREFIX."
                                },
                                "fixed_name": {
                                  "type": "string",
                                  "description": "The virtual machine name specified by the client.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is FIXED."
                                }
                              },
                              "description": "The network host name of the Linux virtual machine."
                            },
                            "time_zone": {
                              "type": "string",
                              "description": "The case-sensitive time zone, such as Europe/Sofia. Valid time zone values are based on the tz (time zone) database used by Linux. The values are strings (string) in the form \"Area/Location,\" in which Area is a continent or ocean name, and Location is the city, island, or other regional designation. \n See the https://kb.vmware.com/kb/2145518 for a list of supported time zones for different versions in Linux.\n\nIf unset, time zone is not modified inside guest operating system."
                            },
                            "script_text": {
                              "type": "string",
                              "description": "The script to run before and after Linux guest customization.\n The max size of the script is 1500 bytes. As long as the script (shell, perl, python...) has the right \"#!\" in the header, it is supported. The caller should not assume any environment variables when the script is run. \n The script is invoked by the customization engine using the command line: 1) with argument \"precustomization\" before customization, 2) with argument \"postcustomization\" after customization. The script should parse this argument and implement pre-customization or post-customization task code details in the corresponding block. \n\n A Linux shell script example: \n\n  #!/bin/sh\n if [ x$1 == x\"precustomization\" ]; then\n echo \"Do Precustomization tasks\"\n #code for pre-customization actions...\n elif [ x$1 == x\"postcustomization\" ]; then\n echo \"Do Postcustomization tasks\"\n #code for post-customization actions...\n fi\n\n \n\nIf unset, no script will be executed."
                            }
                          },
                          "description": "Guest customization specification for a linux guest operating system\nIf unset, ConfigurationSpec.windows-config must be set. Otherwise, an appropriate fault will be thrown."
                        },
                        "windows_config": {
                          "type": "object",
                          "properties": {
                            "reboot": {
                              "enum": [
                                "REBOOT",
                                "NO_REBOOT",
                                "SHUTDOWN"
                              ],
                              "type": "string",
                              "description": "A value specifying the action that should be taken after customization.\nIf unset, the REBOOT option will be chosen."
                            },
                            "sysprep": {
                              "type": "object",
                              "required": [
                                "user_data",
                                "gui_unattended"
                              ],
                              "properties": {
                                "domain": {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "WORKGROUP",
                                        "DOMAIN"
                                      ],
                                      "type": "string",
                                      "description": "The type of network to join after the customization."
                                    },
                                    "domain": {
                                      "type": "string",
                                      "description": "The domain to which the virtual machine should be joined.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                    },
                                    "workgroup": {
                                      "type": "string",
                                      "description": "The workgroup that the virtual machine should join.\nThis field is optional and it is only relevant when the value of Domain.type is WORKGROUP."
                                    },
                                    "domain_password": {
                                      "type": "string",
                                      "format": "password",
                                      "description": "The domain user password that has permission to join the Domain.domain-username after customization.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                    },
                                    "domain_username": {
                                      "type": "string",
                                      "description": "The domain user that has permission to join the domain after virtual machine is joined.\nThis field is optional and it is only relevant when the value of Domain.type is DOMAIN."
                                    }
                                  },
                                  "description": "Information needed to join a workgroup or domain.\nIf unset, the guest will not be joined to any workgroup or a domain."
                                },
                                "user_data": {
                                  "type": "object",
                                  "required": [
                                    "computer_name",
                                    "full_name",
                                    "organization",
                                    "product_key"
                                  ],
                                  "properties": {
                                    "full_name": {
                                      "type": "string",
                                      "description": "Full name of the end user. Note that this is not the username but full name specified in \"Firstname Lastname\" format."
                                    },
                                    "product_key": {
                                      "type": "string",
                                      "description": "The product Key to use for activating Windows guest operating system."
                                    },
                                    "organization": {
                                      "type": "string",
                                      "description": "Name of the organization that owns the computer."
                                    },
                                    "computer_name": {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "enum": [
                                            "FIXED",
                                            "PREFIX",
                                            "VIRTUAL_MACHINE",
                                            "USER_INPUT_REQUIRED"
                                          ],
                                          "type": "string",
                                          "description": "The type of the Name Generator"
                                        },
                                        "prefix": {
                                          "type": "string",
                                          "description": "Base prefix, to which a unique number is appended.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is PREFIX."
                                        },
                                        "fixed_name": {
                                          "type": "string",
                                          "description": "The virtual machine name specified by the client.\nThis field is optional and it is only relevant when the value of HostnameGenerator.type is FIXED."
                                        }
                                      },
                                      "description": "The computer name of the (Windows) virtual machine. A computer name may contain letters (A-Z), numbers(0-9) and hyphens (-) but no spaces or periods (.). The name may not consist entirely of digits. A computer name is restricted to 15 characters in length. If the computer name is longer than 15 characters, it will be truncated to 15 characters. Check HostnameGenerator for various options."
                                    }
                                  },
                                  "description": "Personal data pertaining to the owner of the virtual machine."
                                },
                                "gui_unattended": {
                                  "type": "object",
                                  "required": [
                                    "auto_logon",
                                    "auto_logon_count",
                                    "time_zone"
                                  ],
                                  "properties": {
                                    "password": {
                                      "type": "string",
                                      "format": "password",
                                      "description": "The new administrator password for the machine. To specify that the password should be set to blank (that is, no password), leave it unset.\nIf unset, blank password will be used."
                                    },
                                    "time_zone": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The time zone index for the virtual machine. Numbers correspond to time zones at https://support.microsoft.com/en-us/help/973627/microsoft-time-zone-index-values"
                                    },
                                    "auto_logon": {
                                      "type": "boolean",
                                      "description": "Flag to determine whether or not the machine automatically logs on as Administrator. See the GuiUnattended.password property. If GuiUnattended.auto-logon flag is set, then GuiUnattended.password must not be unset or the guest customization will fail."
                                    },
                                    "auto_logon_count": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "If the GuiUnattended.auto-logon flag is set, then this property specifies the number of times the machine should automatically log on as Administrator. Generally it should be 1, but if the setup requires a number of reboots, you may want to increase it. This number may be determined by the list of commands."
                                    }
                                  },
                                  "description": "Information related to unattended installation."
                                },
                                "gui_run_once_commands": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "A list of commands to run at first user logon, after customizing the guest. These commands are directly mapped to the GuiRunOnce key in the sysprep.xml answer file. These commands are transferred into the sysprep.xml file that VirtualCenter stores on the target virtual disk. For more information about performing unattended installation, check https://technet.microsoft.com/en-us/library/cc771830(v=ws.10).aspx The commands listed here ar executed when a user logs on the first time after customization completes. The logon may be driven by GuiUnattended.auto-logon setting. These commands are directly mapped to the GuiRunOnce key in the\nIf unset, no commands are run."
                                }
                              },
                              "description": "Customization settings like user details, administrator details, etc for the windows guest operating system. Exactly one of WindowsConfiguration.sysprep or WindowsConfiguration.sysprep-xml must be specified.\nIf unset, sysprep settings will not be applied to the windows guest operating system."
                            },
                            "sysprep_xml": {
                              "type": "string",
                              "description": "All settings specified in a XML format. This is the content of a typical answer.xml file that is used by System administrators during the Windows image customization. Check https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/update-windows-settings-and-scripts-create-your-own-answer-file-sxs Exactly one of WindowsConfiguration.sysprep or WindowsConfiguration.sysprep-xml must be specified.\nIf unset, sysprep settings will not be applied to the windows guest operating system."
                            }
                          },
                          "description": "Guest customization specification for a Windows guest operating system\nIf unset, ConfigurationSpec.linux-config must be set. Otherwise, an appropriate fault will be thrown."
                        }
                      },
                      "description": "Settings to be applied to the guest during the customization."
                    },
                    "global_DNS_settings": {
                      "type": "object",
                      "properties": {
                        "dns_servers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of DNS servers, for a virtual network adapter with a static IP address. If this list is empty, then the guest operating system is expected to use a DHCP server to get its DNS server settings. These settings configure the virtual machine to use the specified DNS servers. These DNS server settings are listed in the order of preference.\nIf unset, no DNS servers are set."
                        },
                        "dns_suffix_list": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of name resolution suffixes for the virtual network adapter. This list applies to both Windows and Linux guest customization. For Linux, this setting is global, whereas in Windows, this setting is listed on a per-adapter basis.\nIf unset, no DNS suffixes are set."
                        }
                      },
                      "description": "Global DNS settings constitute the DNS settings that are not specific to a particular virtual network adapter."
                    }
                  }
                }
              }
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listVMGuestEnvironmentVariables:
    description: |-
      Reads a list of environment variables from the guest operating system. 
       If the authentication uses Credentials.interactive-session, then the environment being read will be that of the user logged into the desktop. Otherwise it's the environment of the system user. 
      
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/environmentactionlist/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "credentials",
            "names"
          ],
          "properties": {
            "names": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The names of the variables to be read. If the set is empty, then all the environment variables are returned.",
              "uniqueItems": true
            },
            "credentials": {
              "type": "object",
              "required": [
                "interactive_session",
                "type"
              ],
              "properties": {
                "type": {
                  "enum": [
                    "USERNAME_PASSWORD",
                    "SAML_BEARER_TOKEN"
                  ],
                  "type": "string",
                  "description": "Types of guest credentials. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "password. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Credentials.type is USERNAME_PASSWORD."
                },
                "user_name": {
                  "type": "string",
                  "description": "For SAML_BEARER_TOKEN, this is the guest user to be associated with the credentials. For USERNAME_PASSWORD this is the guest username. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf no user is specified for SAML_BEARER_TOKEN, a guest dependent mapping will decide what guest user account is applied."
                },
                "saml_token": {
                  "type": "string",
                  "format": "password",
                  "description": "SAML Bearer Token. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Credentials.type is SAML_BEARER_TOKEN."
                },
                "interactive_session": {
                  "type": "boolean",
                  "description": "If set, the operation will interact with the logged-in desktop session in the guest. This requires that the logged-on user matches the user specified by the Credentials. This is currently only supported for USERNAME_PASSWORD. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      ]
  getVMGuestEnvironmentVariable:
    description: |-
      Reads a single environment variable from the guest operating system. 
       If the authentication uses Credentials.interactive-session, then the environment being read will be that of the user logged into the desktop. Otherwise it's the environment of the system user. 
      
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/environment/nameactionget/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "credentials"
          ],
          "properties": {
            "credentials": {
              "type": "object",
              "required": [
                "interactive_session",
                "type"
              ],
              "properties": {
                "type": {
                  "enum": [
                    "USERNAME_PASSWORD",
                    "SAML_BEARER_TOKEN"
                  ],
                  "type": "string",
                  "description": "Types of guest credentials. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "password. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Credentials.type is USERNAME_PASSWORD."
                },
                "user_name": {
                  "type": "string",
                  "description": "For SAML_BEARER_TOKEN, this is the guest user to be associated with the credentials. For USERNAME_PASSWORD this is the guest username. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf no user is specified for SAML_BEARER_TOKEN, a guest dependent mapping will decide what guest user account is applied."
                },
                "saml_token": {
                  "type": "string",
                  "format": "password",
                  "description": "SAML Bearer Token. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Credentials.type is SAML_BEARER_TOKEN."
                },
                "interactive_session": {
                  "type": "boolean",
                  "description": "If set, the operation will interact with the logged-in desktop session in the guest. This requires that the logged-on user matches the user specified by the Credentials. This is currently only supported for USERNAME_PASSWORD. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  createVMGuestFilesystemTransfer:
    description: |-
      Initiates an operation to transfer a file to the guest. 
       Obtains a URL to the file inside the guest to be transferred from the client. The user should send a HTTP PUT request specifying the file content in the body of the request. Multiple PUT request cannot be sent to the URL simultaneously. URL will be invalidated after a successful PUT request is sent. If the power state of the Virtual Machine is changed when the file transfer is in progress, or the Virtual Machine is migrated, then the transfer operation is aborted. 
      
       In order to ensure a secure connection to the host when transferring a file using HTTPS, the X.509 certificate for the host must be used to authenticate the remote end of the connection. The certificate of the host that the virtual machine is running on can be retrieved using the following fields: XXX insert link to certificate in Host config XXX 
      
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/filesystemactioncreate/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "string",
          "format": "uri"
        }
      ]
  createVMGuestFilesystemDirectory:
    description: |-
      Creates a directory in the guest operating system. 
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/filesystem/directoriesactioncreate/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  createTemporaryVMGuestFilesystemDirectory:
    description: |-
      Creates a temporary directory. 
       Creates a new unique temporary directory for the user to use as needed. The guest operating system may clean up the directory after a guest specific amount of time if parentPath is not set, or the user can remove the directory when no longer needed. 
      
       The new directory name will be created in a guest-specific format using prefix, a guest generated string and suffix in parentPath. 
      
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/filesystem/directoriesactioncreateTemporary/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteVMGuestFilesystemDirectory:
    description: |-
      Deletes a directory in the guest operating system. 
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/filesystem/directoriesactiondelete/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  moveVMGuestFilesystemDirectory:
    description: |-
      Renames a directory in the guest. 
       Renames the directory, or copies and deletes the old contents as required by the underlying filsystem. 
      
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/filesystem/directoriesactionmove/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  createTemporaryVMGuestFilesystemFile:
    description: |-
      Creates a temporary file. 
       Creates a new unique temporary file for the user to use as needed. The user is responsible for removing it when it is no longer needed. 
      
       The new file name will be created in a guest-specific format using prefix, a guest generated string and suffix in parentPath. 
      
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/filesystem/filesactioncreateTemporary/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  listVMGuestFilesystemFiles:
    description: |-
      Returns information about files and directories in the guest. 
       The results could be extremely large, so to minimize the size of the return value for cases where a UI only needs to show the first N results, the answer is batched. Files are returned in operating system-specific (inode) order. If the directory is modified between queries, missing or duplicate results can occur. 
      
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/filesystem/filesactionlist/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "files",
            "remaining"
          ],
          "properties": {
            "files": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "attributes",
                  "path",
                  "size",
                  "type"
                ],
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The complete path to the file. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                  },
                  "size": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The file size in bytes. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                  },
                  "type": {
                    "enum": [
                      "FILE",
                      "DIRECTORY",
                      "SYMLINK"
                    ],
                    "type": "string",
                    "description": "Types of files. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                  },
                  "attributes": {
                    "type": "object",
                    "required": [
                      "filesystem_family",
                      "last_accessed",
                      "last_modified"
                    ],
                    "properties": {
                      "last_accessed": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time the file was last accessed. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                      },
                      "last_modified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time the file was last modified. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                      },
                      "symlink_target": {
                        "type": "string",
                        "description": "The target for the file if it's a symbolic link. This is currently only set for Posix guest operating systems, but may be supported in the future on Windows guest operating systems that support symbolic links. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nSet if the file is a symbolic link."
                      },
                      "win_attributes": {
                        "type": "object",
                        "required": [
                          "created",
                          "hidden",
                          "read_only"
                        ],
                        "properties": {
                          "hidden": {
                            "type": "boolean",
                            "description": "The file is hidden. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                          },
                          "created": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time the file was created. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                          },
                          "read_only": {
                            "type": "boolean",
                            "description": "The file is read-only. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                          }
                        }
                      },
                      "posix_attributes": {
                        "type": "object",
                        "required": [
                          "group",
                          "owner",
                          "permissions"
                        ],
                        "properties": {
                          "group": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The group ID. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                          },
                          "owner": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The owner ID. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                          },
                          "permissions": {
                            "type": "string",
                            "description": "The file permissions in chmod(2) format. This field is presented as octal. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                          }
                        }
                      },
                      "filesystem_family": {
                        "enum": [
                          "WINDOWS",
                          "POSIX"
                        ],
                        "type": "string",
                        "description": "The Files.FilesystemFamily enumerated type defines the types of guest operating fllesystem. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                      }
                    }
                  }
                }
              },
              "description": "A list of Files.Info structures containing information for all the matching files. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
            },
            "remaining": {
              "type": "integer",
              "format": "int64",
              "description": "The number of files left to be returned. If non-zero, then the next set of files can be retreived by calling Files.list again with the index set to the number of results already returned. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
            }
          }
        }
      ]
  moveVMGuestFilesystemFile:
    description: |-
      Renames a file in the guest. 
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/filesystem/filesactionmove/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  updateVMGuestFilesystemFile:
    description: |-
      Changes the file attributes of a specified file or directory inside the guest. 
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/filesystem/filesactionupdate/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteVMGuestFilesystemFile:
    description: |-
      Deletes a file in the guest operating system 
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/filesystem/files/pathactiondelete/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getVMGuestFilesystemFile:
    description: |-
      Returns information about a file or directory in the guest. 
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/filesystem/files/pathactionget/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "attributes",
            "path",
            "size",
            "type"
          ],
          "properties": {
            "path": {
              "type": "string",
              "description": "The complete path to the file. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
            },
            "size": {
              "type": "integer",
              "format": "int64",
              "description": "The file size in bytes. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
            },
            "type": {
              "enum": [
                "FILE",
                "DIRECTORY",
                "SYMLINK"
              ],
              "type": "string",
              "description": "Types of files. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
            },
            "attributes": {
              "type": "object",
              "required": [
                "filesystem_family",
                "last_accessed",
                "last_modified"
              ],
              "properties": {
                "last_accessed": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time the file was last accessed. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "last_modified": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date and time the file was last modified. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "symlink_target": {
                  "type": "string",
                  "description": "The target for the file if it's a symbolic link. This is currently only set for Posix guest operating systems, but may be supported in the future on Windows guest operating systems that support symbolic links. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nSet if the file is a symbolic link."
                },
                "win_attributes": {
                  "type": "object",
                  "required": [
                    "created",
                    "hidden",
                    "read_only"
                  ],
                  "properties": {
                    "hidden": {
                      "type": "boolean",
                      "description": "The file is hidden. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the file was created. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                    },
                    "read_only": {
                      "type": "boolean",
                      "description": "The file is read-only. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                    }
                  }
                },
                "posix_attributes": {
                  "type": "object",
                  "required": [
                    "group",
                    "owner",
                    "permissions"
                  ],
                  "properties": {
                    "group": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The group ID. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                    },
                    "owner": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The owner ID. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                    },
                    "permissions": {
                      "type": "string",
                      "description": "The file permissions in chmod(2) format. This field is presented as octal. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                    }
                  }
                },
                "filesystem_family": {
                  "enum": [
                    "WINDOWS",
                    "POSIX"
                  ],
                  "type": "string",
                  "description": "The Files.FilesystemFamily enumerated type defines the types of guest operating fllesystem. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                }
              }
            }
          }
        }
      ]
  listVMGuestNetworkingInterfaces:
    description: |-
      Returns information about the networking interfaces in the guest operating system.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/networking/interfaces/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "object",
                    "required": [
                      "ip_addresses"
                    ],
                    "properties": {
                      "dhcp": {
                        "type": "object",
                        "required": [
                          "ipv4_enabled",
                          "ipv6_enabled"
                        ],
                        "properties": {
                          "ipv4_enabled": {
                            "type": "boolean",
                            "description": "True if IPv4 DHCP is enabled, false otherwise."
                          },
                          "ipv6_enabled": {
                            "type": "boolean",
                            "description": "True if IPv6 DHCP is enabled, false otherwise."
                          }
                        }
                      },
                      "ip_addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "ip_address",
                            "prefix_length",
                            "state"
                          ],
                          "properties": {
                            "state": {
                              "enum": [
                                "PREFERRED",
                                "DEPRECATED",
                                "INVALID",
                                "INACCESSIBLE",
                                "UNKNOWN",
                                "TENTATIVE",
                                "DUPLICATE"
                              ],
                              "type": "string",
                              "description": "The Interfaces.IpAddressStatus enumerated type defines the present status of an address on an interface. See RFC 4293 IpAddressStatusTC."
                            },
                            "origin": {
                              "enum": [
                                "OTHER",
                                "MANUAL",
                                "DHCP",
                                "LINKLAYER",
                                "RANDOM"
                              ],
                              "type": "string",
                              "description": "The Interfaces.IpAddressOrigin enumerated type specifies how an IP address was obtained for an interface. See RFC 4293 IpAddressOriginTC."
                            },
                            "ip_address": {
                              "type": "string",
                              "description": "IPv4 address is specified using dotted decimal notation. For example, \"192.0.2.1\". IPv6 addresses are 128-bit addresses specified using eight fields of up to four hexadecimal digits. A colon separates each field (:). For example, 2001:DB8:101::230:6eff:fe04:d9ff. The address can also consist of the symbol '::' to represent multiple 16-bit groups of contiguous 0's only once in an address as described in RFC 2373."
                            },
                            "prefix_length": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Denotes the length of a generic Internet network address prefix. Prefix length: the valid range of values is 0-32 for IPv4, and 0-128 for IPv6. A value of n corresponds to an IP address mask that has n contiguous 1-bits from the most significant bit (MSB), with all other bits set to 0. A value of zero is valid only if the calling context defines it."
                            }
                          }
                        },
                        "description": "IP addresses configured on the interface."
                      }
                    }
                  },
                  "dns": {
                    "type": "object",
                    "required": [
                      "ip_addresses",
                      "search_domains"
                    ],
                    "properties": {
                      "ip_addresses": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The IP addresses of the DNS servers in order of use. IPv4 addresses are specified using dotted decimal notation. For example, \"192.0.2.1\". IPv6 addresses are 128-bit addresses represented as eight fields of up to four hexadecimal digits. A colon separates each field (:). For example, 2001:DB8:101::230:6eff:fe04:d9ff. The address can also consist of the symbol '::' to represent multiple 16-bit groups of contiguous 0's only once in an address as described in RFC 2373."
                      },
                      "search_domains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The domain in which to search for hosts, placed in order of preference. These are the domain name portion of the DNS names."
                      }
                    }
                  },
                  "nic": {
                    "type": "string",
                    "description": "Link to the corresponding virtual device.\nIf unset then the interface is not backed by a virtual device.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.vm.hardware.Ethernet. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.vm.hardware.Ethernet."
                  },
                  "dns_values": {
                    "type": "object",
                    "required": [
                      "domain_name",
                      "host_name"
                    ],
                    "properties": {
                      "host_name": {
                        "type": "string",
                        "description": "The host name portion of DNS name. For example, \"esx01\" part of esx01.example.com."
                      },
                      "domain_name": {
                        "type": "string",
                        "description": "The domain name portion of the DNS name. \"example.com\" part of esx01.example.com."
                      }
                    }
                  },
                  "mac_address": {
                    "type": "string",
                    "description": "MAC address of the adapter.\nIf unset then not supported by the Guest OS."
                  },
                  "wins_servers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The IP addresses of any WINS name servers for the adapter.\nIf unset then not supported by the Guest OS."
                  }
                }
              }
            }
          }
        }
      ]
  listVMGuestNetworkingRoutes:
    description: |-
      Returns information about network routing in the guest operating system.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/networking/routes/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "network",
                  "prefix_length"
                ],
                "properties": {
                  "network": {
                    "type": "string",
                    "description": "IP Address of the destination IP network. IPv4 address is specified using dotted decimal notation. For example, \"192.0.2.1\". IPv6 addresses are 128-bit specified using as eight fields of up to four hexadecimal digits. A colon separates each field (:). For example, 2001:DB8:101::230:6eff:fe04:d9ff. The address can also consist of symbol '::' to represent multiple 16-bit groups of contiguous 0's only once in an address as described in RFC 2373."
                  },
                  "prefix_length": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The prefix length. For IPv4 the value range is 0-32. For IPv6 prefixLength is a decimal value range 0-128. The property represents the number of contiguous, higher-order bits of the address that make up the network portion of the IP address."
                  },
                  "gateway_address": {
                    "type": "string",
                    "description": "Where to send the packets for this route. Unicast IP Address of the next hop router. IPv4 address is specified using dotted decimal notation. For example, \"192.0.2.1\". IPv6 addresses are 128-bit specified using as eight fields of up to four hexadecimal digits. A colon separates each field (:). For example, 2001:DB8:101::230:6eff:fe04:d9ff. The address can also consist of symbol '::' to represent multiple 16-bit groups of contiguous 0's only once in an address as described in RFC 2373.\nIf unset no gateway is set for the route."
                  },
                  "interface_index": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The network interface associated with this route. This is an index into the result of Interfaces.list The index refers to the relative position of an element in a list. For example, an index of 0 refers to the first element in the list while an index of 1 refers to the second element.\nIf unset the route is not associated with a network interface."
                  }
                }
              }
            }
          }
        }
      ]
  getVMGuestOperation:
    description: |-
      Get information about the guest operation status. Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
      if you do not have all of the privileges described as follows: 
         -  The resource VirtualMachine referenced by the parameter vm requires System.Read. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/operations/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "guest_operations_ready",
                "interactive_guest_operations_ready"
              ],
              "properties": {
                "guest_operations_ready": {
                  "type": "boolean",
                  "description": "Guest operations availability. If set, the virtual machine is ready to process guest operations. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "interactive_guest_operations_ready": {
                  "type": "boolean",
                  "description": "Interactive guest operations availability. If set, the virtual machine is ready to process interactive guest operations. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                }
              }
            }
          }
        }
      ]
  createVMGuestProcess:
    description: |-
      Starts a program in the guest operating system. 
       A process started this way can have its status queried with Processes.list or Processes.get. When the process completes, its exit code and end time will be available for 5 minutes after completion. 
      
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
      if you do not have all of the privileges described as follows: 
         -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Execute. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/processesactioncreate/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "credentials",
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "environment_variables",
                "path"
              ],
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The absolute path to the program to start. \n For Linux guest operating systems, /bin/bash is used to start the program. \n\n For Solaris guest operating systems, if /bin/bash exists, its used to start the program, otherwise /bin/sh is used. If /bin/sh is used, then the process ID returned by Processes.create will be that of the shell used to start the program, rather than the program itself, due to the differences in how /bin/sh and /bin/bash work. This PID will still be usable for watching the process with Processes.list to find its exit code and elapsed time. \n\n For Windows, no shell is used. Using a simple batch file instead by prepending c:\\windows\\system32\\cmd.exe /c will allow stdio redirection to work if passed in the Processes.CreateSpec.arguments parameter.\n. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "arguments": {
                  "type": "string",
                  "description": "The arguments to the program. \n Characters which must be escaped to the shell should also be escaped in Processes.CreateSpec.arguments. \n\n In Linux and Solaris guest operating systems, stdio redirection arguments may be used. \n\n For Windows, stdio redirection can be added to the argments if Processes.CreateSpec.path is prefixed with c:\\windows\\system32\\cmd.exe /c.\n. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf this value is unset no arguments are passed to the program."
                },
                "start_minimized": {
                  "type": "boolean",
                  "description": "Makes any program window start minimized in Windows operating systems. Returns an error if set for non-Windows guests. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nDefaults to false."
                },
                "working_directory": {
                  "type": "string",
                  "description": "The absolute path of the working directory for the program to be run. VMware recommends explicitly setting the working directory for the program to be run. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\n If this value is unset or is an empty string, the behavior depends on the guest operating system. For Linux guest operating systems, if this value is unset or is an empty string, the working directory will be the home directory of the user associated with the guest authentication. For other guest operating systems, if this value is unset, the behavior is unspecified."
                },
                "environment_variables": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "A map of environment variables, specified using the guest OS rules (for example PATH, c:\\bin;c:\\windows\\system32 or LD_LIBRARY_PATH,/usr/lib:/lib), to be set for the program being run. Note that these are not additions to the default environment variables; they define the complete set available to the program. If this value is empty, then the environment variables used are guest dependent defaults. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                }
              }
            },
            "credentials": {
              "type": "object",
              "required": [
                "interactive_session",
                "type"
              ],
              "properties": {
                "type": {
                  "enum": [
                    "USERNAME_PASSWORD",
                    "SAML_BEARER_TOKEN"
                  ],
                  "type": "string",
                  "description": "Types of guest credentials. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "password. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Credentials.type is USERNAME_PASSWORD."
                },
                "user_name": {
                  "type": "string",
                  "description": "For SAML_BEARER_TOKEN, this is the guest user to be associated with the credentials. For USERNAME_PASSWORD this is the guest username. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf no user is specified for SAML_BEARER_TOKEN, a guest dependent mapping will decide what guest user account is applied."
                },
                "saml_token": {
                  "type": "string",
                  "format": "password",
                  "description": "SAML Bearer Token. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Credentials.type is SAML_BEARER_TOKEN."
                },
                "interactive_session": {
                  "type": "boolean",
                  "description": "If set, the operation will interact with the logged-in desktop session in the guest. This requires that the logged-on user matches the user specified by the Credentials. This is currently only supported for USERNAME_PASSWORD. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
  listVMGuestProcesses:
    description: |-
      List the processes running in the guest operating system, plus those started by Processes.create that have recently completed. 
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
      if you do not have all of the privileges described as follows: 
         -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Query. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/processesactionlist/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "credentials"
          ],
          "properties": {
            "pids": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "description": "Specifies which processes should be listed. If a specified processes does not exist, nothing will be returned for that process.\nIf unset information about all processes is returned."
            },
            "credentials": {
              "type": "object",
              "required": [
                "interactive_session",
                "type"
              ],
              "properties": {
                "type": {
                  "enum": [
                    "USERNAME_PASSWORD",
                    "SAML_BEARER_TOKEN"
                  ],
                  "type": "string",
                  "description": "Types of guest credentials. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "password. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Credentials.type is USERNAME_PASSWORD."
                },
                "user_name": {
                  "type": "string",
                  "description": "For SAML_BEARER_TOKEN, this is the guest user to be associated with the credentials. For USERNAME_PASSWORD this is the guest username. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf no user is specified for SAML_BEARER_TOKEN, a guest dependent mapping will decide what guest user account is applied."
                },
                "saml_token": {
                  "type": "string",
                  "format": "password",
                  "description": "SAML Bearer Token. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Credentials.type is SAML_BEARER_TOKEN."
                },
                "interactive_session": {
                  "type": "boolean",
                  "description": "If set, the operation will interact with the logged-in desktop session in the guest. This requires that the logged-on user matches the user specified by the Credentials. This is currently only supported for USERNAME_PASSWORD. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "command",
                  "name",
                  "owner",
                  "pid",
                  "started"
                ],
                "properties": {
                  "pid": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The process ID. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                  },
                  "name": {
                    "type": "string",
                    "description": "The process name. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                  },
                  "owner": {
                    "type": "string",
                    "description": "The process owner. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                  },
                  "command": {
                    "type": "string",
                    "description": "The full command line of the process. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                  },
                  "started": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start time of the process. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                  },
                  "finished": {
                    "type": "string",
                    "format": "date-time",
                    "description": "If the process was started using Processes.create then the process completion time will be available if queried within 5 minutes after it completes. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nSet if the process was started with Processes.create and has recently exited."
                  },
                  "exit_code": {
                    "type": "integer",
                    "format": "int64",
                    "description": "If the process was started using Processes.create then the process exit code will be available if queried within 5 minutes after it completes. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nSet if the process was started with Processes.create and has recently exited."
                  }
                }
              }
            }
          }
        }
      ]
  deleteVMGuestProcess:
    description: |-
      Terminates a process in the guest OS. 
       On Posix guests, the process is sent a TERM signal. If that doesn't terminate the process, a KILL signal is sent. A process may still be running if it's stuck. 
      
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
      if you do not have all of the privileges described as follows: 
         -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Execute. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/processes/pidactiondelete/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "credentials"
          ],
          "properties": {
            "credentials": {
              "type": "object",
              "required": [
                "interactive_session",
                "type"
              ],
              "properties": {
                "type": {
                  "enum": [
                    "USERNAME_PASSWORD",
                    "SAML_BEARER_TOKEN"
                  ],
                  "type": "string",
                  "description": "Types of guest credentials. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "password. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Credentials.type is USERNAME_PASSWORD."
                },
                "user_name": {
                  "type": "string",
                  "description": "For SAML_BEARER_TOKEN, this is the guest user to be associated with the credentials. For USERNAME_PASSWORD this is the guest username. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf no user is specified for SAML_BEARER_TOKEN, a guest dependent mapping will decide what guest user account is applied."
                },
                "saml_token": {
                  "type": "string",
                  "format": "password",
                  "description": "SAML Bearer Token. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Credentials.type is SAML_BEARER_TOKEN."
                },
                "interactive_session": {
                  "type": "boolean",
                  "description": "If set, the operation will interact with the logged-in desktop session in the guest. This requires that the logged-on user matches the user specified by the Credentials. This is currently only supported for USERNAME_PASSWORD. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getVMGuestProcess:
    description: |-
      Gets the status of a process running in the guest operating system, including those started by Processes.create that may have recently completed. 
      
      . Warning: This operation is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.
      if you do not have all of the privileges described as follows: 
         -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Query. 
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/guest/processes/pidactionget/post/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "credentials"
          ],
          "properties": {
            "credentials": {
              "type": "object",
              "required": [
                "interactive_session",
                "type"
              ],
              "properties": {
                "type": {
                  "enum": [
                    "USERNAME_PASSWORD",
                    "SAML_BEARER_TOKEN"
                  ],
                  "type": "string",
                  "description": "Types of guest credentials. Warning: This enumeration is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "password. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Credentials.type is USERNAME_PASSWORD."
                },
                "user_name": {
                  "type": "string",
                  "description": "For SAML_BEARER_TOKEN, this is the guest user to be associated with the credentials. For USERNAME_PASSWORD this is the guest username. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nIf no user is specified for SAML_BEARER_TOKEN, a guest dependent mapping will decide what guest user account is applied."
                },
                "saml_token": {
                  "type": "string",
                  "format": "password",
                  "description": "SAML Bearer Token. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nThis field is optional and it is only relevant when the value of Credentials.type is SAML_BEARER_TOKEN."
                },
                "interactive_session": {
                  "type": "boolean",
                  "description": "If set, the operation will interact with the logged-in desktop session in the guest. This requires that the logged-on user matches the user specified by the Credentials. This is currently only supported for USERNAME_PASSWORD. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "command",
                "name",
                "owner",
                "pid",
                "started"
              ],
              "properties": {
                "pid": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The process ID. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "name": {
                  "type": "string",
                  "description": "The process name. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "owner": {
                  "type": "string",
                  "description": "The process owner. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "command": {
                  "type": "string",
                  "description": "The full command line of the process. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "started": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The start time of the process. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented."
                },
                "finished": {
                  "type": "string",
                  "format": "date-time",
                  "description": "If the process was started using Processes.create then the process completion time will be available if queried within 5 minutes after it completes. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nSet if the process was started with Processes.create and has recently exited."
                },
                "exit_code": {
                  "type": "integer",
                  "format": "int64",
                  "description": "If the process was started using Processes.create then the process exit code will be available if queried within 5 minutes after it completes. Warning: This attribute is part of a new feature in development. It may be changed at any time and may not have all supported functionality implemented.\nSet if the process was started with Processes.create and has recently exited."
                }
              }
            }
          }
        }
      ]
  getVMLibraryItem:
    description: |-
      Returns the information about the library item associated with the virtual machine.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/library-item/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "properties": {
                "check_out": {
                  "type": "object",
                  "required": [
                    "library_item"
                  ],
                  "properties": {
                    "library_item": {
                      "type": "string",
                      "description": "Identifier of the library item that the virtual machine is checked out from.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.library.Item. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.library.Item."
                    }
                  }
                }
              }
            }
          }
        }
      ]
  upgradeVMTools:
    description: |-
      Begins the Tools upgrade process. To monitor the status of the Tools upgrade, clients should check the Tools status by calling Tools.get and examining Tools.Info.version-status and Tools.Info.run-state.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/toolsactionupgrade/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "command_line_options": {
              "type": "string",
              "description": "Command line options passed to the installer to modify the installation procedure for Tools.\nSet if any additional options are desired."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getVMTools:
    description: |-
      Get the properties of VMware Tools.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/tools/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "auto_update_supported",
                "run_state",
                "upgrade_policy"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error that happened, if any, during last attempt to upgrade or install Tools.\nOnly set if a the last Tools install or upgrade attempt failed."
                },
                "version": {
                  "type": "string",
                  "description": "Version of VMware Tools installed on the guest operating system. This is a human-readable value that should not be parsed.\nOnly set if Tools is installed."
                },
                "run_state": {
                  "enum": [
                    "NOT_RUNNING",
                    "RUNNING",
                    "EXECUTING_SCRIPTS"
                  ],
                  "type": "string",
                  "description": "Current run state of VMware Tools in the guest operating system."
                },
                "install_type": {
                  "enum": [
                    "UNKNOWN",
                    "MSI",
                    "TAR",
                    "OSP",
                    "OPEN_VM_TOOLS"
                  ],
                  "type": "string",
                  "description": "The Tools.ToolsInstallType enumerated type defines the installation type of the Tools in the guest operating system."
                },
                "upgrade_policy": {
                  "enum": [
                    "MANUAL",
                    "UPGRADE_AT_POWER_CYCLE"
                  ],
                  "type": "string",
                  "description": "The Tools.UpgradePolicy enumerated type defines when Tools are auto-upgraded for a virtual machine."
                },
                "version_number": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Version of VMware Tools installed on the guest operating system.\nOnly set if Tools is installed. This is an integer constructed as follows: (((MJR) << 10) + ((MNR) << 5) + (REV)) Where MJR is tha major verson, MNR is the minor version and REV is the revision. Tools version = T Tools Version Major = MJR = (T / 1024) Tools Version Minor = MNR = ((T % 1024) / 32) Tools Version Revision = BASE = ((T % 1024) % 32) Tools actual version = MJR.MNR.REV"
                },
                "version_status": {
                  "enum": [
                    "NOT_INSTALLED",
                    "CURRENT",
                    "UNMANAGED",
                    "TOO_OLD_UNSUPPORTED",
                    "SUPPORTED_OLD",
                    "SUPPORTED_NEW",
                    "TOO_NEW",
                    "BLACKLISTED"
                  ],
                  "type": "string",
                  "description": "The Tools.VersionStatus enumerated type defines the version status types of VMware Tools installed in the guest operating system."
                },
                "auto_update_supported": {
                  "type": "boolean",
                  "description": "Set if the virtual machine supports auto-upgrading Tools via Tools.UpgradePolicy."
                },
                "install_attempt_count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Number of attempts that have been made to install or upgrade the version of Tools installed on this virtual machine.\nOnly set if there was a recent Tools install or upgrade attempt."
                }
              }
            }
          }
        }
      ]
  connectVMToolsInstaller:
    description: |-
      Connects the VMware Tools CD installer as a CD-ROM for the guest operating system. On Windows guest operating systems with autorun, this should cause the installer to initiate the Tools installation which will need user input to complete. On other (non-Windows) guest operating systems this will make the Tools installation available, and a a user will need to do guest-specific actions. On Linux, this includes opening an archive and running the installer. To monitor the status of the Tools install, clients should check the Tools.Info.version-status and Tools.Info.run-state from Tools.get
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/tools/installeractionconnect/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  disconnectVMToolsInstaller:
    description: |-
      Disconnect the VMware Tools installer CD image.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/tools/installeractiondisconnect/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getVMToolsInstaller:
    description: |-
      Get information about the VMware Tools installer.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/tools/installer/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "is_connected"
              ],
              "properties": {
                "is_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the VMware Tools installer is mounted as a CD-ROM."
                }
              }
            }
          }
        }
      ]
  updateVMTools:
    description: |-
      Update the properties of VMware Tools.
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/latest/vcenter/api/vcenter/vm/vm/tools/patch/
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "upgrade_policy": {
                  "enum": [
                    "MANUAL",
                    "UPGRADE_AT_POWER_CYCLE"
                  ],
                  "type": "string",
                  "description": "The Tools.UpgradePolicy enumerated type defines when Tools are auto-upgraded for a virtual machine."
                }
              }
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getOVFCapability:
    description: |-
      Returns information about the capability of the given vCenter server.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/ovf/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "import_ova",
                "export_ova"
              ],
              "properties": {
                "export_ova": {
                  "type": "boolean",
                  "description": "Boolean flag to show whether or not export OVA template is supported."
                },
                "import_ova": {
                  "type": "boolean",
                  "description": "Boolean flag to show whether or not import OVA template is supported."
                }
              }
            }
          }
        }
      ]
  findInventoryDatastore:
    description: |-
      Returns datastore information for the specified datastores. The key in the {@term result} {@term map} is the datastore identifier and the value in the {@term map} is the datastore information.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/com/vmware/vcenter/inventory/datastore~actionfind/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "datastores": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Identifiers of the datastores for which information will be returned."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of the datastore."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
  findInventoryNetwork:
    description: |-
      Returns network information for the specified vCenter Server networks. The key in the {@term result} {@term map} is the network identifier and the value in the {@term map} is the network information.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/com/vmware/vcenter/inventory/network~actionfind/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "networks": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Identifiers of the vCenter Server networks for which information will be returned."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of the vCenter Server network."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
  mountISOImage:
    description: |-
      Mounts an ISO image from a content library on a virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/com/vmware/vcenter/iso/image/idlibrary_item~actionmount/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "vm": {
              "type": "string",
              "description": "The identifier of the virtual machine where the specified ISO image will be mounted."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  unmountISOImage:
    description: |-
      Unmounts a previously mounted CD-ROM using an ISO image as a backing.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/com/vmware/vcenter/iso/image/idvm~actionunmount/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "cdrom": {
              "type": "string",
              "description": "The device identifier of the CD-ROM."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listOVFExportFlags:
    description: |-
      Returns information about the supported export flags by the server. <p> The supported flags are: <dl> <dt>PRESERVE_MAC</dt> <dd>Include MAC addresses for network adapters.</dd> <dt>EXTRA_CONFIG</dt> <dd>Include extra configuration in OVF export.</dd> </dl> <p> Future server versions might support additional flags.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/com/vmware/vcenter/ovf/export-flag/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "option",
                  "description"
                ],
                "properties": {
                  "option": {
                    "type": "string",
                    "description": "The name of the export flag that is supported by the server."
                  },
                  "description": {
                    "type": "object",
                    "required": [
                      "id",
                      "default_message",
                      "args"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                      },
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Arguments to be substituted into a message template."
                      },
                      "default_message": {
                        "type": "string",
                        "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                      }
                    },
                    "description": "Localizable description of the export flag."
                  }
                }
              }
            }
          }
        }
      ]
  listOVFImportFlags:
    description: |-
      Returns information about the import flags supported by the deployment platform. <p> The supported flags are: <dl> <dt>LAX</dt> <dd>Lax mode parsing of the OVF descriptor.</dd> </dl> <p> Future server versions might support additional flags.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/com/vmware/vcenter/ovf/import-flag/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "option",
                  "description"
                ],
                "properties": {
                  "option": {
                    "type": "string",
                    "description": "The name of the import flag that is supported by the deployment platform."
                  },
                  "description": {
                    "type": "object",
                    "required": [
                      "id",
                      "default_message",
                      "args"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                      },
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Arguments to be substituted into a message template."
                      },
                      "default_message": {
                        "type": "string",
                        "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                      }
                    },
                    "description": "Localizable description of the import flag."
                  }
                }
              }
            }
          }
        }
      ]
  deployOVFLibraryItem:
    description: |-
      Deploys an OVF package stored in content library to a newly created virtual machine or virtual appliance. <p> This {@term operation} deploys an OVF package which is stored in the library item specified by {@param.name ovfLibraryItemId}. It uses the deployment specification in {@param.name deploymentSpec} to deploy the OVF package to the location specified by {@param.name target}. </p>
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/com/vmware/vcenter/ovf/library-item/idovf_library_item_id~actiondeploy/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "target": {
              "type": "object",
              "required": [
                "resource_pool_id"
              ],
              "properties": {
                "host_id": {
                  "type": "string",
                  "description": "Identifier of the target host on which the virtual machine or virtual appliance will run. The target host must be a member of the cluster that contains the resource pool identified by {@link #resourcePoolId}."
                },
                "folder_id": {
                  "type": "string",
                  "description": "Identifier of the vCenter folder that should contain the virtual machine or virtual appliance. The folder must be virtual machine folder."
                },
                "resource_pool_id": {
                  "type": "string",
                  "description": "Identifier of the resource pool to which the virtual machine or virtual appliance should be attached."
                }
              },
              "description": "Specification of the deployment target."
            },
            "client_token": {
              "type": "string",
              "description": "Client-generated token used to retry a request if the client fails to get a response from the server. If the original request succeeded, the result of that request will be returned, otherwise the operation will be retried."
            },
            "deployment_spec": {
              "type": "object",
              "required": [
                "accept_all_EULA"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name assigned to the deployed target virtual machine or virtual appliance."
                },
                "flags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Flags to be use for deployment. The supported flag values can be obtained using {@link ImportFlag#list}."
                },
                "locale": {
                  "type": "string",
                  "description": "The locale to use for parsing the OVF descriptor."
                },
                "annotation": {
                  "type": "string",
                  "description": "Annotation assigned to the deployed target virtual machine or virtual appliance."
                },
                "accept_all_EULA": {
                  "type": "boolean",
                  "description": "Whether to accept all End User License Agreements. See {@link OvfSummary#eulas}."
                },
                "network_mappings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Specification of the target network to use for sections of type ovf:NetworkSection in the OVF descriptor. The key in the {@term map} is the section identifier of the ovf:NetworkSection section in the OVF descriptor and the value is the target network to be used for deployment."
                },
                "storage_mappings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "enum": [
                              "DATASTORE",
                              "STORAGE_PROFILE"
                            ],
                            "type": "string",
                            "description": "Type of storage deployment target to use for the vmw:StorageGroupSection section. The specified value must be {@link Type#DATASTORE} or {@link Type#STORAGE_PROFILE}."
                          },
                          "datastore_id": {
                            "type": "string",
                            "description": "Target datastore to be used for the storage group."
                          },
                          "provisioning": {
                            "enum": [
                              "thin",
                              "thick",
                              "eagerZeroedThick"
                            ],
                            "type": "string",
                            "description": "Target provisioning type to use for the storage group."
                          },
                          "storage_profile_id": {
                            "type": "string",
                            "description": "Target storage profile to be used for the storage group."
                          }
                        }
                      }
                    }
                  },
                  "description": "Specification of the target storage to use for sections of type vmw:StorageGroupSection in the OVF descriptor. The key in the {@term map} is the section identifier of the ovf:StorageGroupSection section in the OVF descriptor and the value is the target storage specification to be used for deployment. See {@link StorageGroupMapping}."
                },
                "storage_profile_id": {
                  "type": "string",
                  "description": "Default storage profile to use for all sections of type vmw:StorageSection in the OVF descriptor."
                },
                "default_datastore_id": {
                  "type": "string",
                  "description": "Default datastore to use for all sections of type vmw:StorageSection in the OVF descriptor."
                },
                "storage_provisioning": {
                  "enum": [
                    "thin",
                    "thick",
                    "eagerZeroedThick"
                  ],
                  "type": "string",
                  "description": "Default storage provisioning type to use for all sections of type vmw:StorageSection in the OVF descriptor."
                },
                "additional_parameters": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": "Additional OVF parameters that may be needed for the deployment. Additional OVF parameters may be required by the OVF descriptor of the OVF package in the library item. Examples of OVF parameters that can be specified through this {@term field} include, but are not limited to: <ul> <li>{@link DeploymentOptionParams}</li> <li>{@link ExtraConfigParams}</li> <li>{@link IpAllocationParams}</li> <li>{@link PropertyParams}</li> <li>{@link ScaleOutParams}</li> <li>{@link VcenterExtensionParams}</li> </ul>"
                }
              },
              "description": "Specification of how the OVF package should be deployed to the target."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "succeeded"
              ],
              "properties": {
                "error": {
                  "type": "object",
                  "required": [
                    "errors",
                    "warnings",
                    "information"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "category"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of input parameter."
                          },
                          "error": {
                            "type": "object",
                            "description": "Represents a server {@link Error}."
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of input parameter."
                          },
                          "issues": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "category",
                                "file",
                                "line_number",
                                "column_number",
                                "message"
                              ],
                              "properties": {
                                "file": {
                                  "type": "string",
                                  "description": "The name of the file in which the parse issue was found."
                                },
                                "message": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "default_message",
                                    "args"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                                    },
                                    "args": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Arguments to be substituted into a message template."
                                    },
                                    "default_message": {
                                      "type": "string",
                                      "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                                    }
                                  },
                                  "description": "A localizable message describing the parse issue."
                                },
                                "category": {
                                  "enum": [
                                    "VALUE_ILLEGAL",
                                    "ATTRIBUTE_REQUIRED",
                                    "ATTRIBUTE_ILLEGAL",
                                    "ELEMENT_REQUIRED",
                                    "ELEMENT_ILLEGAL",
                                    "ELEMENT_UNKNOWN",
                                    "SECTION_UNKNOWN",
                                    "SECTION_RESTRICTION",
                                    "PARSE_ERROR",
                                    "GENERATE_ERROR",
                                    "VALIDATION_ERROR",
                                    "EXPORT_ERROR",
                                    "INTERNAL_ERROR"
                                  ],
                                  "type": "string",
                                  "description": "The category of the parse issue."
                                },
                                "line_number": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The line number of the line in the file (see {@link #file}) where the parse issue was found (or -1 if not applicable)."
                                },
                                "column_number": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The position in the line (see {@link #lineNumber}) (or -1 if not applicable)."
                                }
                              }
                            },
                            "description": "{@term List} of parse issues (see {@link ParseIssue})."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "A localizable message."
                          },
                          "category": {
                            "enum": [
                              "VALIDATION",
                              "INPUT",
                              "SERVER"
                            ],
                            "type": "string",
                            "description": "The message category."
                          }
                        }
                      },
                      "description": "Errors reported by the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation}. These errors would have prevented the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation} from completing successfully."
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "category"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of input parameter."
                          },
                          "error": {
                            "type": "object",
                            "description": "Represents a server {@link Error}."
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of input parameter."
                          },
                          "issues": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "category",
                                "file",
                                "line_number",
                                "column_number",
                                "message"
                              ],
                              "properties": {
                                "file": {
                                  "type": "string",
                                  "description": "The name of the file in which the parse issue was found."
                                },
                                "message": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "default_message",
                                    "args"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                                    },
                                    "args": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Arguments to be substituted into a message template."
                                    },
                                    "default_message": {
                                      "type": "string",
                                      "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                                    }
                                  },
                                  "description": "A localizable message describing the parse issue."
                                },
                                "category": {
                                  "enum": [
                                    "VALUE_ILLEGAL",
                                    "ATTRIBUTE_REQUIRED",
                                    "ATTRIBUTE_ILLEGAL",
                                    "ELEMENT_REQUIRED",
                                    "ELEMENT_ILLEGAL",
                                    "ELEMENT_UNKNOWN",
                                    "SECTION_UNKNOWN",
                                    "SECTION_RESTRICTION",
                                    "PARSE_ERROR",
                                    "GENERATE_ERROR",
                                    "VALIDATION_ERROR",
                                    "EXPORT_ERROR",
                                    "INTERNAL_ERROR"
                                  ],
                                  "type": "string",
                                  "description": "The category of the parse issue."
                                },
                                "line_number": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The line number of the line in the file (see {@link #file}) where the parse issue was found (or -1 if not applicable)."
                                },
                                "column_number": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The position in the line (see {@link #lineNumber}) (or -1 if not applicable)."
                                }
                              }
                            },
                            "description": "{@term List} of parse issues (see {@link ParseIssue})."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "A localizable message."
                          },
                          "category": {
                            "enum": [
                              "VALIDATION",
                              "INPUT",
                              "SERVER"
                            ],
                            "type": "string",
                            "description": "The message category."
                          }
                        }
                      },
                      "description": "Warnings reported by the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation}. These warnings would not have prevented the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation} from completing successfully, but there might be issues that warrant attention."
                    },
                    "information": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "messages"
                        ],
                        "properties": {
                          "messages": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "default_message",
                                "args"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                                },
                                "args": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Arguments to be substituted into a message template."
                                },
                                "default_message": {
                                  "type": "string",
                                  "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                                }
                              }
                            },
                            "description": "A {@term list} of localizable messages (see {@link LocalizableMessage})."
                          }
                        }
                      },
                      "description": "Information messages reported by the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation}. For example, a non-required parameter was ignored."
                    }
                  },
                  "description": "Errors, warnings, and informational messages produced by the {@name LibraryItem#deploy} {@term operation}."
                },
                "succeeded": {
                  "type": "boolean",
                  "description": "Whether the {@name LibraryItem#deploy} {@term operation} completed successfully."
                },
                "resource_id": {
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Identifier of the deployable resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the deployable resource."
                    }
                  },
                  "description": "Identifier of the deployed resource entity."
                }
              }
            }
          }
        }
      ]
  filterOVFLibraryItem:
    description: |-
      Queries an OVF package stored in content library to retrieve information to use when deploying the package. See {@link #deploy}. <p> This {@term operation} retrieves information from the descriptor of the OVF package stored in the library item specified by {@param.name ovfLibraryItemId}. The information returned by the {@term operation} can be used to populate the deployment specification (see {@link ResourcePoolDeploymentSpec} when deploying the OVF package to the deployment target specified by {@param.name target}. </p>
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/com/vmware/vcenter/ovf/library-item/idovf_library_item_id~actionfilter/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "target": {
              "type": "object",
              "required": [
                "resource_pool_id"
              ],
              "properties": {
                "host_id": {
                  "type": "string",
                  "description": "Identifier of the target host on which the virtual machine or virtual appliance will run. The target host must be a member of the cluster that contains the resource pool identified by {@link #resourcePoolId}."
                },
                "folder_id": {
                  "type": "string",
                  "description": "Identifier of the vCenter folder that should contain the virtual machine or virtual appliance. The folder must be virtual machine folder."
                },
                "resource_pool_id": {
                  "type": "string",
                  "description": "Identifier of the resource pool to which the virtual machine or virtual appliance should be attached."
                }
              },
              "description": "Specification of the deployment target."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "EULAs"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Default name for the virtual machine or virtual appliance."
                },
                "EULAs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "End User License Agreements specified in the OVF descriptor. All end user license agreements must be accepted in order for the {@name LibraryItem#deploy} {@term operation} to succeed. See {@link ResourcePoolDeploymentSpec#acceptAllEula}."
                },
                "networks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Section identifiers for sections of type ovf:NetworkSection in the OVF descriptor. These identifiers can be used as keys in {@link ResourcePoolDeploymentSpec#networkMappings}."
                },
                "annotation": {
                  "type": "string",
                  "description": "Default annotation for the virtual machine or virtual appliance."
                },
                "storage_groups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Section identifiers for sections of type vmw:StorageGroupSection in the OVF descriptor. These identifiers can be used as keys in {@link ResourcePoolDeploymentSpec#storageMappings}."
                },
                "additional_params": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": "Additional OVF parameters which can be specified for the deployment target. These OVF parameters can be inspected, optionally modified, and used as values in {@link ResourcePoolDeploymentSpec#additionalParameters} for the {@name LibraryItem#deploy} {@term operation}."
                }
              }
            }
          }
        }
      ]
  createOVFLibraryItem:
    description: |-
      Creates a library item in content library from a virtual machine or virtual appliance. <p> This {@term operation} creates a library item in content library whose content is an OVF package derived from a source virtual machine or virtual appliance, using the supplied create specification. The OVF package may be stored as in a newly created library item or in an in an existing library item. For an existing library item whose content is updated by this {@term operation}, the original content is overwritten. </p>
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/com/vmware/vcenter/ovf/library-item/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "source": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Identifier of the deployable resource."
                },
                "type": {
                  "type": "string",
                  "description": "Type of the deployable resource."
                }
              },
              "description": "Identifier of the virtual machine or virtual appliance to use as the source."
            },
            "target": {
              "type": "object",
              "properties": {
                "library_id": {
                  "type": "string",
                  "description": "Identifier of the library in which a new library item should be created. This {@term field} is not used if the {@name #libraryItemId} {@term field} is specified."
                },
                "library_item_id": {
                  "type": "string",
                  "description": "Identifier of the library item that should be should be updated."
                }
              },
              "description": "Specification of the target content library and library item."
            },
            "create_spec": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name to use in the OVF descriptor stored in the library item."
                },
                "flags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Flags to use for OVF package creation. The supported flags can be obtained using {@link ExportFlag#list}."
                },
                "description": {
                  "type": "string",
                  "description": "Description to use in the OVF descriptor stored in the library item."
                }
              },
              "description": "Information used to create the OVF package from the source virtual machine or virtual appliance."
            },
            "client_token": {
              "type": "string",
              "description": "Client-generated token used to retry a request if the client fails to get a response from the server. If the original request succeeded, the result of that request will be returned, otherwise the operation will be retried."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "succeeded"
              ],
              "properties": {
                "error": {
                  "type": "object",
                  "required": [
                    "errors",
                    "warnings",
                    "information"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "category"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of input parameter."
                          },
                          "error": {
                            "type": "object",
                            "description": "Represents a server {@link Error}."
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of input parameter."
                          },
                          "issues": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "category",
                                "file",
                                "line_number",
                                "column_number",
                                "message"
                              ],
                              "properties": {
                                "file": {
                                  "type": "string",
                                  "description": "The name of the file in which the parse issue was found."
                                },
                                "message": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "default_message",
                                    "args"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                                    },
                                    "args": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Arguments to be substituted into a message template."
                                    },
                                    "default_message": {
                                      "type": "string",
                                      "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                                    }
                                  },
                                  "description": "A localizable message describing the parse issue."
                                },
                                "category": {
                                  "enum": [
                                    "VALUE_ILLEGAL",
                                    "ATTRIBUTE_REQUIRED",
                                    "ATTRIBUTE_ILLEGAL",
                                    "ELEMENT_REQUIRED",
                                    "ELEMENT_ILLEGAL",
                                    "ELEMENT_UNKNOWN",
                                    "SECTION_UNKNOWN",
                                    "SECTION_RESTRICTION",
                                    "PARSE_ERROR",
                                    "GENERATE_ERROR",
                                    "VALIDATION_ERROR",
                                    "EXPORT_ERROR",
                                    "INTERNAL_ERROR"
                                  ],
                                  "type": "string",
                                  "description": "The category of the parse issue."
                                },
                                "line_number": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The line number of the line in the file (see {@link #file}) where the parse issue was found (or -1 if not applicable)."
                                },
                                "column_number": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The position in the line (see {@link #lineNumber}) (or -1 if not applicable)."
                                }
                              }
                            },
                            "description": "{@term List} of parse issues (see {@link ParseIssue})."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "A localizable message."
                          },
                          "category": {
                            "enum": [
                              "VALIDATION",
                              "INPUT",
                              "SERVER"
                            ],
                            "type": "string",
                            "description": "The message category."
                          }
                        }
                      },
                      "description": "Errors reported by the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation}. These errors would have prevented the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation} from completing successfully."
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "category"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of input parameter."
                          },
                          "error": {
                            "type": "object",
                            "description": "Represents a server {@link Error}."
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of input parameter."
                          },
                          "issues": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "category",
                                "file",
                                "line_number",
                                "column_number",
                                "message"
                              ],
                              "properties": {
                                "file": {
                                  "type": "string",
                                  "description": "The name of the file in which the parse issue was found."
                                },
                                "message": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "default_message",
                                    "args"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                                    },
                                    "args": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Arguments to be substituted into a message template."
                                    },
                                    "default_message": {
                                      "type": "string",
                                      "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                                    }
                                  },
                                  "description": "A localizable message describing the parse issue."
                                },
                                "category": {
                                  "enum": [
                                    "VALUE_ILLEGAL",
                                    "ATTRIBUTE_REQUIRED",
                                    "ATTRIBUTE_ILLEGAL",
                                    "ELEMENT_REQUIRED",
                                    "ELEMENT_ILLEGAL",
                                    "ELEMENT_UNKNOWN",
                                    "SECTION_UNKNOWN",
                                    "SECTION_RESTRICTION",
                                    "PARSE_ERROR",
                                    "GENERATE_ERROR",
                                    "VALIDATION_ERROR",
                                    "EXPORT_ERROR",
                                    "INTERNAL_ERROR"
                                  ],
                                  "type": "string",
                                  "description": "The category of the parse issue."
                                },
                                "line_number": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The line number of the line in the file (see {@link #file}) where the parse issue was found (or -1 if not applicable)."
                                },
                                "column_number": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The position in the line (see {@link #lineNumber}) (or -1 if not applicable)."
                                }
                              }
                            },
                            "description": "{@term List} of parse issues (see {@link ParseIssue})."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "A localizable message."
                          },
                          "category": {
                            "enum": [
                              "VALIDATION",
                              "INPUT",
                              "SERVER"
                            ],
                            "type": "string",
                            "description": "The message category."
                          }
                        }
                      },
                      "description": "Warnings reported by the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation}. These warnings would not have prevented the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation} from completing successfully, but there might be issues that warrant attention."
                    },
                    "information": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "messages"
                        ],
                        "properties": {
                          "messages": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "default_message",
                                "args"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                                },
                                "args": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Arguments to be substituted into a message template."
                                },
                                "default_message": {
                                  "type": "string",
                                  "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                                }
                              }
                            },
                            "description": "A {@term list} of localizable messages (see {@link LocalizableMessage})."
                          }
                        }
                      },
                      "description": "Information messages reported by the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation}. For example, a non-required parameter was ignored."
                    }
                  },
                  "description": "Errors, warnings, and informational messages produced by the {@name LibraryItem#create} {@term operation}."
                },
                "succeeded": {
                  "type": "boolean",
                  "description": "Whether the {@name LibraryItem#create} {@term operation} completed successfully."
                },
                "ovf_library_item_id": {
                  "type": "string",
                  "description": "Identifier of the created or updated library item."
                }
              }
            }
          }
        }
      ]
  getCluster:
    description: |-
      Retrieves information about the cluster corresponding to cluster.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/cluster/cluster/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "name",
                "resource_pool"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the cluster"
                },
                "resource_pool": {
                  "type": "string",
                  "description": "Identifier of the root resource pool of the cluster\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool."
                }
              }
            }
          }
        }
      ]
  listClusters:
    description: |-
      Returns information about at most 1000 visible (subject to permission checks) clusters in vCenter matching the Cluster.FilterSpec.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/cluster/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "cluster",
                  "name",
                  "ha_enabled",
                  "drs_enabled"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the cluster."
                  },
                  "cluster": {
                    "type": "string",
                    "description": "Identifier of the cluster.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
                  },
                  "ha_enabled": {
                    "type": "boolean",
                    "description": "Flag indicating whether the vSphere HA feature is enabled for the cluster."
                  },
                  "drs_enabled": {
                    "type": "boolean",
                    "description": "Flag indicating whether the vSphere DRS service is enabled for the cluster."
                  }
                }
              }
            }
          }
        }
      ]
  deleteDatacenter:
    description: |-
      Delete an empty datacenter from the vCenter Server
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/datacenter/datacenter/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getDatacenter:
    description: |-
      Retrieves information about the datacenter corresponding to datacenter.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/datacenter/datacenter/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "name",
                "datastore_folder",
                "host_folder",
                "network_folder",
                "vm_folder"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the datacenter."
                },
                "vm_folder": {
                  "type": "string",
                  "description": "The root virtual machine folder associated with the datacenter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder."
                },
                "host_folder": {
                  "type": "string",
                  "description": "The root host and cluster folder associated with the datacenter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder."
                },
                "network_folder": {
                  "type": "string",
                  "description": "The root network folder associated with the datacenter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder."
                },
                "datastore_folder": {
                  "type": "string",
                  "description": "The root datastore folder associated with the datacenter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder."
                }
              }
            }
          }
        }
      ]
  listDatacenters:
    description: |-
      Returns information about at most 1000 visible (subject to permission checks) datacenters in vCenter matching the Datacenter.FilterSpec.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/datacenter/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "datacenter",
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the datacenter."
                  },
                  "datacenter": {
                    "type": "string",
                    "description": "Identifier of the datacenter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datacenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datacenter."
                  }
                }
              }
            }
          }
        }
      ]
  createDatacenter:
    description: |-
      Create a new datacenter in the vCenter inventory
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/datacenter/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the datacenter to be created."
                },
                "folder": {
                  "type": "string",
                  "description": "Datacenter folder in which the new datacenter should be created.\nThis field is currently required. In the future, if this field is unset, the system will attempt to choose a suitable folder for the datacenter; if a folder cannot be chosen, the datacenter creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder."
                }
              },
              "description": "Specification for the new datacenter to be created."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  getDatastoreDefaultPolicy:
    description: |-
      Returns the identifier of the current default storage policy associated with the specified datastore.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/datastore/datastore/default-policy/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  getDatastore:
    description: |-
      Retrieves information about the datastore indicated by datastore.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/datastore/datastore/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "name",
                "type",
                "accessible",
                "multiple_host_access",
                "thin_provisioning_supported"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the datastore."
                },
                "type": {
                  "enum": [
                    "VMFS",
                    "NFS",
                    "NFS41",
                    "CIFS",
                    "VSAN",
                    "VFFS",
                    "VVOL"
                  ],
                  "type": "string",
                  "description": "Type (Type) of the datastore."
                },
                "accessible": {
                  "type": "boolean",
                  "description": "Whether or not this datastore is accessible."
                },
                "free_space": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Available space of this datastore, in bytes. \n The server periodically updates this value.\n\nThis field will be unset if the available space of this datastore is not known."
                },
                "multiple_host_access": {
                  "type": "boolean",
                  "description": "Whether or not ore than one host in the datacenter has been configured with access to the datastore."
                },
                "thin_provisioning_supported": {
                  "type": "boolean",
                  "description": "Whether or not the datastore supports thin provisioning on a per file basis. When thin provisioning is used, backing storage is lazily allocated."
                }
              }
            }
          }
        }
      ]
  listDatastores:
    description: |-
      Returns information about at most 1000 visible (subject to permission checks) datastores in vCenter matching the Datastore.FilterSpec.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/datastore/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "datastore",
                  "name",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the datastore."
                  },
                  "type": {
                    "enum": [
                      "VMFS",
                      "NFS",
                      "NFS41",
                      "CIFS",
                      "VSAN",
                      "VFFS",
                      "VVOL"
                    ],
                    "type": "string",
                    "description": "Type (Type) of the datatore."
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Capacity of this datastore, in bytes. \n The server periodically updates this value.\n\nThis field will be unset if the capacity of this datastore is not known."
                  },
                  "datastore": {
                    "type": "string",
                    "description": "Identifier of the datastore.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore."
                  },
                  "free_space": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Available space of this datastore, in bytes. \n The server periodically updates this value.\n\nThis field will be unset if the available space of this datastore is not known."
                  }
                }
              }
            }
          }
        }
      ]
  rollbackDeployment:
    description: |-
      Rollback a failed appliance so it can be configured once again.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deploymentactionrollback/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getDeploymentApplicance:
    description: |-
      Get the current status of the appliance deployment.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "state",
                "description",
                "service",
                "operation",
                "status",
                "cancelable"
              ],
              "properties": {
                "user": {
                  "type": "string",
                  "description": "Name of the user who performed the operation."
                },
                "error": {
                  "type": "string",
                  "description": "Description of the error if the operation status is \"FAILED\"."
                },
                "state": {
                  "enum": [
                    "NOT_INITIALIZED",
                    "INITIALIZED",
                    "CONFIG_IN_PROGRESS",
                    "QUESTION_RAISED",
                    "FAILED",
                    "CONFIGURED"
                  ],
                  "type": "string",
                  "description": "State of the vCenter Server Appliance."
                },
                "parent": {
                  "type": "string",
                  "description": "Parent of the current task."
                },
                "status": {
                  "description": "Status of the operation associated with the task."
                },
                "target": {
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The identifier for a resource whose type is specified by {@link #type}."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of resource being identified (for example {@code com.acme.Person}). <p> {@term Services} that contain {@term operations} for creating and deleting resources typically contain a {@term constant} specifying the resource type for the resources being created and deleted. The API metamodel metadata {@term services} include a {@term service} that allows retrieving all the known resource types."
                    }
                  },
                  "description": "Identifier of the target created by the operation or an existing one the operation performed on."
                },
                "service": {
                  "type": "string",
                  "description": "Name of the service containing the operation."
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when the operation is completed."
                },
                "progress": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number"
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "args": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "default_message": {
                          "type": "string"
                        }
                      }
                    },
                    "completed": {
                      "type": "number"
                    }
                  },
                  "description": "The progress info of the current appliance status."
                },
                "subtasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "required": [
                          "description",
                          "service",
                          "operation",
                          "status",
                          "cancelable"
                        ],
                        "properties": {
                          "user": {
                            "type": "string",
                            "description": "Name of the user who performed the operation."
                          },
                          "error": {
                            "type": "string",
                            "description": "Description of the error if the operation status is \"FAILED\"."
                          },
                          "parent": {
                            "type": "string",
                            "description": "Parent of the current task."
                          },
                          "result": {
                            "type": "object",
                            "properties": {
                              "info": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "message"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The notification id."
                                    },
                                    "time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The time the notification was raised/found."
                                    },
                                    "message": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "default_message",
                                        "args"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                                        },
                                        "args": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Arguments to be substituted into a message template."
                                        },
                                        "default_message": {
                                          "type": "string",
                                          "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                                        }
                                      },
                                      "description": "The notification message."
                                    },
                                    "resolution": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "default_message",
                                        "args"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                                        },
                                        "args": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Arguments to be substituted into a message template."
                                        },
                                        "default_message": {
                                          "type": "string",
                                          "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                                        }
                                      },
                                      "description": "The resolution message, if any."
                                    }
                                  }
                                },
                                "description": "Info notification messages reported."
                              },
                              "errors": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "message"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The notification id."
                                    },
                                    "time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The time the notification was raised/found."
                                    },
                                    "message": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "default_message",
                                        "args"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                                        },
                                        "args": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Arguments to be substituted into a message template."
                                        },
                                        "default_message": {
                                          "type": "string",
                                          "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                                        }
                                      },
                                      "description": "The notification message."
                                    },
                                    "resolution": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "default_message",
                                        "args"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                                        },
                                        "args": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Arguments to be substituted into a message template."
                                        },
                                        "default_message": {
                                          "type": "string",
                                          "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                                        }
                                      },
                                      "description": "The resolution message, if any."
                                    }
                                  }
                                },
                                "description": "Error notification messages reported."
                              },
                              "warnings": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "message"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The notification id."
                                    },
                                    "time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The time the notification was raised/found."
                                    },
                                    "message": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "default_message",
                                        "args"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                                        },
                                        "args": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Arguments to be substituted into a message template."
                                        },
                                        "default_message": {
                                          "type": "string",
                                          "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                                        }
                                      },
                                      "description": "The notification message."
                                    },
                                    "resolution": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "default_message",
                                        "args"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                                        },
                                        "args": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Arguments to be substituted into a message template."
                                        },
                                        "default_message": {
                                          "type": "string",
                                          "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                                        }
                                      },
                                      "description": "The resolution message, if any."
                                    }
                                  }
                                },
                                "description": "Warning notification messages reported."
                              }
                            },
                            "description": "Result of the task."
                          },
                          "status": {
                            "description": "Status of the operation associated with the task."
                          },
                          "target": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The identifier for a resource whose type is specified by {@link #type}."
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of resource being identified (for example {@code com.acme.Person}). <p> {@term Services} that contain {@term operations} for creating and deleting resources typically contain a {@term constant} specifying the resource type for the resources being created and deleted. The API metamodel metadata {@term services} include a {@term service} that allows retrieving all the known resource types."
                              }
                            },
                            "description": "Identifier of the target created by the operation or an existing one the operation performed on."
                          },
                          "service": {
                            "type": "string",
                            "description": "Name of the service containing the operation."
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time when the operation is completed."
                          },
                          "progress": {
                            "type": "object",
                            "properties": {
                              "total": {
                                "type": "number"
                              },
                              "message": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "args": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "default_message": {
                                    "type": "string"
                                  }
                                }
                              },
                              "completed": {
                                "type": "number"
                              }
                            },
                            "description": "The progress info of this deployment task."
                          },
                          "operation": {
                            "type": "string",
                            "description": "Name of the operation associated with the task."
                          },
                          "cancelable": {
                            "type": "boolean",
                            "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses."
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time when the operation is started."
                          },
                          "description": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "Description of the operation associated with the task."
                          }
                        }
                      }
                    }
                  },
                  "description": "The map of the deployment subtasks and their status infomation."
                },
                "operation": {
                  "type": "string",
                  "description": "Name of the operation associated with the task."
                },
                "cancelable": {
                  "type": "boolean",
                  "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses."
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when the operation is started."
                },
                "description": {
                  "type": "object",
                  "required": [
                    "id",
                    "default_message",
                    "args"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                    },
                    "args": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Arguments to be substituted into a message template."
                    },
                    "default_message": {
                      "type": "string",
                      "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                    }
                  },
                  "description": "Description of the operation associated with the task."
                },
                "subtask_order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The ordered list of subtasks for this deployment operation."
                }
              }
            }
          }
        }
      ]
  cancelDeploymentImportHistory:
    description: |-
      Cancels the task for importing vCenter historical data.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/historyactioncancel/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  pauseDeploymentImportHistory:
    description: |-
      Pauses the task for importing vCenter historical data.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/historyactionpause/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  resumeDeploymentImportHistory:
    description: |-
      Resumes the task for importing vCenter historical data.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/historyactionresume/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  startDeploymentImportHistory:
    description: |-
      Creates and starts task for importing vCenter historical data.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/historyactionstart/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "name",
                "description"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the vCenter history import task"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the vCenter history import task."
                }
              },
              "description": "An optional {@name CreateSpec} info that can be passed for creating a new historical data import task and starts it."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getDeploymentImportHistory:
    description: |-
      Get the current status of the vCenter historical data import.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/history/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "description",
                "service",
                "operation",
                "status",
                "cancelable"
              ],
              "properties": {
                "user": {
                  "type": "string",
                  "description": "Name of the user who performed the operation."
                },
                "error": {
                  "type": "string",
                  "description": "Description of the error if the operation status is \"FAILED\"."
                },
                "parent": {
                  "type": "string",
                  "description": "Parent of the current task."
                },
                "result": {
                  "type": "object",
                  "properties": {
                    "info": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Info notification messages reported."
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Error notification messages reported."
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Warning notification messages reported."
                    }
                  },
                  "description": "Result of the operation. If an operation reports partial results before it completes, this {@term field} could be {@term set} before the {@link cis.task.CommonInfo#status} has the value {@link Status#SUCCEEDED}. The value could change as the operation progresses."
                },
                "status": {
                  "description": "Status of the operation associated with the task."
                },
                "target": {
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The identifier for a resource whose type is specified by {@link #type}."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of resource being identified (for example {@code com.acme.Person}). <p> {@term Services} that contain {@term operations} for creating and deleting resources typically contain a {@term constant} specifying the resource type for the resources being created and deleted. The API metamodel metadata {@term services} include a {@term service} that allows retrieving all the known resource types."
                    }
                  },
                  "description": "Identifier of the target created by the operation or an existing one the operation performed on."
                },
                "service": {
                  "type": "string",
                  "description": "Name of the service containing the operation."
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when the operation is completed."
                },
                "progress": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number"
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "args": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "default_message": {
                          "type": "string"
                        }
                      }
                    },
                    "completed": {
                      "type": "number"
                    }
                  },
                  "description": "The progress info of this task."
                },
                "operation": {
                  "type": "string",
                  "description": "Name of the operation associated with the task."
                },
                "cancelable": {
                  "type": "boolean",
                  "description": "Flag to indicate whether or not the operation can be cancelled. The value may change as the operation progresses."
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when the operation is started."
                },
                "description": {
                  "type": "object",
                  "required": [
                    "id",
                    "default_message",
                    "args"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                    },
                    "args": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Arguments to be substituted into a message template."
                    },
                    "default_message": {
                      "type": "string",
                      "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                    }
                  },
                  "description": "Description of the operation associated with the task."
                }
              }
            }
          }
        }
      ]
  cancelDeploymentInstall:
    description: |-
      Cancel the appliance installation that is in progress.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/installactioncancel/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  checkDeploymentInstall:
    description: |-
      Run sanity checks using the InstallSpec parameters passed.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/installactioncheck/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "psc": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "replicated": {
                      "type": "object",
                      "required": [
                        "partner_hostname",
                        "sso_admin_password"
                      ],
                      "properties": {
                        "https_port": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The HTTPS port of the external PSC appliance."
                        },
                        "ssl_verify": {
                          "type": "boolean",
                          "description": "SSL verification should be enabled or disabled."
                        },
                        "sso_site_name": {
                          "type": "string",
                          "description": "The SSO sitename that will be used in PSC replication."
                        },
                        "ssl_thumbprint": {
                          "type": "string",
                          "description": "SHA1 thumbprint of the server SSL certificate will be used for verification."
                        },
                        "partner_hostname": {
                          "type": "string",
                          "description": "The IP address or DNS resolvable name of the partner PSC appliance."
                        },
                        "sso_admin_password": {
                          "type": "string",
                          "description": "The SSO administrator account password."
                        }
                      },
                      "description": "Spec used to configure a replicated Platform Services Controller. This field describes how the replicated PSC should be configured."
                    },
                    "standalone": {
                      "type": "object",
                      "required": [
                        "sso_admin_password"
                      ],
                      "properties": {
                        "sso_site_name": {
                          "type": "string",
                          "description": "The SSO site name used for this PSC."
                        },
                        "sso_domain_name": {
                          "type": "string",
                          "description": "The SSO domain name to be used to configure this appliance."
                        },
                        "sso_admin_password": {
                          "type": "string",
                          "description": "The SSO administrator account password."
                        }
                      },
                      "description": "Spec used to configure a standalone Platform Services Controller. This field describes how the standalone PSC should be configured."
                    },
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled."
                    }
                  },
                  "description": "Spec used to configure a Platform Services Controller. This field describes how the Platform Services Controller appliance should be configured."
                },
                "auto_answer": {
                  "type": "boolean",
                  "description": "Use the default option for any questions that may come up during appliance configuration."
                },
                "vcsa_embedded": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "replicated": {
                      "type": "object",
                      "required": [
                        "partner_hostname",
                        "sso_admin_password"
                      ],
                      "properties": {
                        "https_port": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The HTTPS port of the external PSC appliance."
                        },
                        "ssl_verify": {
                          "type": "boolean",
                          "description": "SSL verification should be enabled or disabled."
                        },
                        "ssl_thumbprint": {
                          "type": "string",
                          "description": "SHA1 thumbprint of the server SSL certificate will be used for verification."
                        },
                        "partner_hostname": {
                          "type": "string",
                          "description": "The IP address or DNS resolvable name of the partner PSC appliance."
                        },
                        "sso_admin_password": {
                          "type": "string",
                          "description": "The SSO administrator account password."
                        }
                      },
                      "description": "Spec used to configure a replicated embedded vCenter Server. This field describes how the replicated vCenter Server appliance should be configured."
                    },
                    "standalone": {
                      "type": "object",
                      "required": [
                        "sso_admin_password"
                      ],
                      "properties": {
                        "sso_domain_name": {
                          "type": "string",
                          "description": "The SSO domain name to be used to configure this appliance."
                        },
                        "sso_admin_password": {
                          "type": "string",
                          "description": "The SSO administrator account password."
                        }
                      },
                      "description": "Spec used to configure a standalone embedded vCenter Server. This field describes how the standalone vCenter Server appliance should be configured."
                    },
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Whether CEIP should be enabled or disabled."
                    }
                  },
                  "description": "Spec used to configure an embedded vCenter Server. This field describes how the embedded vCenter Server appliance should be configured."
                },
                "vcsa_external": {
                  "type": "object",
                  "required": [
                    "psc_hostname",
                    "sso_admin_password"
                  ],
                  "properties": {
                    "https_port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The HTTPS port of the external PSC appliance."
                    },
                    "ssl_verify": {
                      "type": "boolean",
                      "description": "SSL verification should be enabled or disabled. If {@name #sslVerify} is true and and {@name #sslThumbprint} is {@term unset}, the CA certificate will be used for verification. If {@name #sslVerify} is true and {@name #sslThumbprint} is set then the thumbprint will be used for verification. No verification will be performed if {@name #sslVerify} value is set to false."
                    },
                    "psc_hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the remote PSC to which this configuring vCenter Server will be registered to."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 thumbprint of the server SSL certificate will be used for verification when ssl_verify field is set to true."
                    },
                    "sso_admin_password": {
                      "type": "string",
                      "description": "The SSO administrator account password."
                    }
                  },
                  "description": "Spec used to configure a vCenter Server registered with an external PSC. This fields represent the remote external PSC that the configuring vCenter Server will be registering with."
                }
              },
              "description": "InstallSpec parameters to run sanity check with."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "status"
              ],
              "properties": {
                "result": {
                  "type": "object",
                  "properties": {
                    "info": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Info notification messages reported."
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Error notification messages reported."
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Warning notification messages reported."
                    }
                  },
                  "description": "Result of the check."
                },
                "status": {
                  "enum": [
                    "SUCCESS",
                    "FAILED"
                  ],
                  "type": "string",
                  "description": "Status of the check."
                }
              }
            }
          }
        }
      ]
  startDeploymentInstall:
    description: |-
      Start the appliance installation.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/installactionstart/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "psc": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "replicated": {
                      "type": "object",
                      "required": [
                        "partner_hostname",
                        "sso_admin_password"
                      ],
                      "properties": {
                        "https_port": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The HTTPS port of the external PSC appliance."
                        },
                        "ssl_verify": {
                          "type": "boolean",
                          "description": "SSL verification should be enabled or disabled."
                        },
                        "sso_site_name": {
                          "type": "string",
                          "description": "The SSO sitename that will be used in PSC replication."
                        },
                        "ssl_thumbprint": {
                          "type": "string",
                          "description": "SHA1 thumbprint of the server SSL certificate will be used for verification."
                        },
                        "partner_hostname": {
                          "type": "string",
                          "description": "The IP address or DNS resolvable name of the partner PSC appliance."
                        },
                        "sso_admin_password": {
                          "type": "string",
                          "description": "The SSO administrator account password."
                        }
                      },
                      "description": "Spec used to configure a replicated Platform Services Controller. This field describes how the replicated PSC should be configured."
                    },
                    "standalone": {
                      "type": "object",
                      "required": [
                        "sso_admin_password"
                      ],
                      "properties": {
                        "sso_site_name": {
                          "type": "string",
                          "description": "The SSO site name used for this PSC."
                        },
                        "sso_domain_name": {
                          "type": "string",
                          "description": "The SSO domain name to be used to configure this appliance."
                        },
                        "sso_admin_password": {
                          "type": "string",
                          "description": "The SSO administrator account password."
                        }
                      },
                      "description": "Spec used to configure a standalone Platform Services Controller. This field describes how the standalone PSC should be configured."
                    },
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled."
                    }
                  },
                  "description": "Spec used to configure a Platform Services Controller. This field describes how the Platform Services Controller appliance should be configured."
                },
                "auto_answer": {
                  "type": "boolean",
                  "description": "Use the default option for any questions that may come up during appliance configuration."
                },
                "vcsa_embedded": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "replicated": {
                      "type": "object",
                      "required": [
                        "partner_hostname",
                        "sso_admin_password"
                      ],
                      "properties": {
                        "https_port": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The HTTPS port of the external PSC appliance."
                        },
                        "ssl_verify": {
                          "type": "boolean",
                          "description": "SSL verification should be enabled or disabled."
                        },
                        "ssl_thumbprint": {
                          "type": "string",
                          "description": "SHA1 thumbprint of the server SSL certificate will be used for verification."
                        },
                        "partner_hostname": {
                          "type": "string",
                          "description": "The IP address or DNS resolvable name of the partner PSC appliance."
                        },
                        "sso_admin_password": {
                          "type": "string",
                          "description": "The SSO administrator account password."
                        }
                      },
                      "description": "Spec used to configure a replicated embedded vCenter Server. This field describes how the replicated vCenter Server appliance should be configured."
                    },
                    "standalone": {
                      "type": "object",
                      "required": [
                        "sso_admin_password"
                      ],
                      "properties": {
                        "sso_domain_name": {
                          "type": "string",
                          "description": "The SSO domain name to be used to configure this appliance."
                        },
                        "sso_admin_password": {
                          "type": "string",
                          "description": "The SSO administrator account password."
                        }
                      },
                      "description": "Spec used to configure a standalone embedded vCenter Server. This field describes how the standalone vCenter Server appliance should be configured."
                    },
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Whether CEIP should be enabled or disabled."
                    }
                  },
                  "description": "Spec used to configure an embedded vCenter Server. This field describes how the embedded vCenter Server appliance should be configured."
                },
                "vcsa_external": {
                  "type": "object",
                  "required": [
                    "psc_hostname",
                    "sso_admin_password"
                  ],
                  "properties": {
                    "https_port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The HTTPS port of the external PSC appliance."
                    },
                    "ssl_verify": {
                      "type": "boolean",
                      "description": "SSL verification should be enabled or disabled. If {@name #sslVerify} is true and and {@name #sslThumbprint} is {@term unset}, the CA certificate will be used for verification. If {@name #sslVerify} is true and {@name #sslThumbprint} is set then the thumbprint will be used for verification. No verification will be performed if {@name #sslVerify} value is set to false."
                    },
                    "psc_hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the remote PSC to which this configuring vCenter Server will be registered to."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 thumbprint of the server SSL certificate will be used for verification when ssl_verify field is set to true."
                    },
                    "sso_admin_password": {
                      "type": "string",
                      "description": "The SSO administrator account password."
                    }
                  },
                  "description": "Spec used to configure a vCenter Server registered with an external PSC. This fields represent the remote external PSC that the configuring vCenter Server will be registering with."
                }
              },
              "description": "InstallSpec parameters to configure the appliance install."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getDeploymentInstall:
    description: |-
      Get the parameters used to configure the ongoing appliance installation.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/install/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "properties": {
                "psc": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "replicated": {
                      "type": "object",
                      "required": [
                        "partner_hostname",
                        "sso_admin_password"
                      ],
                      "properties": {
                        "https_port": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The HTTPS port of the external PSC appliance."
                        },
                        "ssl_verify": {
                          "type": "boolean",
                          "description": "SSL verification should be enabled or disabled."
                        },
                        "sso_site_name": {
                          "type": "string",
                          "description": "The SSO sitename that will be used in PSC replication."
                        },
                        "ssl_thumbprint": {
                          "type": "string",
                          "description": "SHA1 thumbprint of the server SSL certificate will be used for verification."
                        },
                        "partner_hostname": {
                          "type": "string",
                          "description": "The IP address or DNS resolvable name of the partner PSC appliance."
                        },
                        "sso_admin_password": {
                          "type": "string",
                          "description": "The SSO administrator account password."
                        }
                      },
                      "description": "Spec used to configure a replicated Platform Services Controller. This field describes how the replicated PSC should be configured."
                    },
                    "standalone": {
                      "type": "object",
                      "required": [
                        "sso_admin_password"
                      ],
                      "properties": {
                        "sso_site_name": {
                          "type": "string",
                          "description": "The SSO site name used for this PSC."
                        },
                        "sso_domain_name": {
                          "type": "string",
                          "description": "The SSO domain name to be used to configure this appliance."
                        },
                        "sso_admin_password": {
                          "type": "string",
                          "description": "The SSO administrator account password."
                        }
                      },
                      "description": "Spec used to configure a standalone Platform Services Controller. This field describes how the standalone PSC should be configured."
                    },
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled."
                    }
                  },
                  "description": "Spec used to configure a Platform Services Controller. This field describes how the Platform Services Controller appliance should be configured."
                },
                "auto_answer": {
                  "type": "boolean",
                  "description": "Use the default option for any questions that may come up during appliance configuration."
                },
                "vcsa_embedded": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "replicated": {
                      "type": "object",
                      "required": [
                        "partner_hostname",
                        "sso_admin_password"
                      ],
                      "properties": {
                        "https_port": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The HTTPS port of the external PSC appliance."
                        },
                        "ssl_verify": {
                          "type": "boolean",
                          "description": "SSL verification should be enabled or disabled."
                        },
                        "ssl_thumbprint": {
                          "type": "string",
                          "description": "SHA1 thumbprint of the server SSL certificate will be used for verification."
                        },
                        "partner_hostname": {
                          "type": "string",
                          "description": "The IP address or DNS resolvable name of the partner PSC appliance."
                        },
                        "sso_admin_password": {
                          "type": "string",
                          "description": "The SSO administrator account password."
                        }
                      },
                      "description": "Spec used to configure a replicated embedded vCenter Server. This field describes how the replicated vCenter Server appliance should be configured."
                    },
                    "standalone": {
                      "type": "object",
                      "required": [
                        "sso_admin_password"
                      ],
                      "properties": {
                        "sso_domain_name": {
                          "type": "string",
                          "description": "The SSO domain name to be used to configure this appliance."
                        },
                        "sso_admin_password": {
                          "type": "string",
                          "description": "The SSO administrator account password."
                        }
                      },
                      "description": "Spec used to configure a standalone embedded vCenter Server. This field describes how the standalone vCenter Server appliance should be configured."
                    },
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Whether CEIP should be enabled or disabled."
                    }
                  },
                  "description": "Spec used to configure an embedded vCenter Server. This field describes how the embedded vCenter Server appliance should be configured."
                },
                "vcsa_external": {
                  "type": "object",
                  "required": [
                    "psc_hostname",
                    "sso_admin_password"
                  ],
                  "properties": {
                    "https_port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The HTTPS port of the external PSC appliance."
                    },
                    "ssl_verify": {
                      "type": "boolean",
                      "description": "SSL verification should be enabled or disabled. If {@name #sslVerify} is true and and {@name #sslThumbprint} is {@term unset}, the CA certificate will be used for verification. If {@name #sslVerify} is true and {@name #sslThumbprint} is set then the thumbprint will be used for verification. No verification will be performed if {@name #sslVerify} value is set to false."
                    },
                    "psc_hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the remote PSC to which this configuring vCenter Server will be registered to."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 thumbprint of the server SSL certificate will be used for verification when ssl_verify field is set to true."
                    },
                    "sso_admin_password": {
                      "type": "string",
                      "description": "The SSO administrator account password."
                    }
                  },
                  "description": "Spec used to configure a vCenter Server registered with an external PSC. This fields represent the remote external PSC that the configuring vCenter Server will be registering with."
                }
              }
            }
          }
        }
      ]
  getDeploymentRemotePSCThumbprint:
    description: |-
      Gets the SHA1 thumbprint of the remote PSC.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/install/initial-config/remote-psc/thumbprint/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  checkDeploymentInstallPSCStandalone:
    description: |-
      Checks that the information to configure a non-replicated PSC satisfies the requirements.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/install/psc/standaloneactioncheck/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "sso_admin_password"
              ],
              "properties": {
                "sso_site_name": {
                  "type": "string",
                  "description": "The SSO site name used for this PSC."
                },
                "sso_domain_name": {
                  "type": "string",
                  "description": "The SSO domain name to be used to configure this appliance."
                },
                "sso_admin_password": {
                  "type": "string",
                  "description": "The SSO administrator account password."
                }
              },
              "description": "Information to configure a non-replicated PSC."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "status"
              ],
              "properties": {
                "result": {
                  "type": "object",
                  "properties": {
                    "info": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Info notification messages reported."
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Error notification messages reported."
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Warning notification messages reported."
                    }
                  },
                  "description": "Result of the check."
                },
                "status": {
                  "enum": [
                    "SUCCESS",
                    "FAILED"
                  ],
                  "type": "string",
                  "description": "Status of the check."
                }
              }
            }
          }
        }
      ]
  checkDeploymentInstallRemotePSC:
    description: |-
      Checks whether the remote PSC is reachable and the deployed vCenter Server can be registered with the remote PSC.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/install/remote-pscactioncheck/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "psc_hostname",
                "sso_admin_password"
              ],
              "properties": {
                "https_port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The HTTPS port of the external PSC appliance."
                },
                "ssl_verify": {
                  "type": "boolean",
                  "description": "SSL verification should be enabled or disabled. If {@name #sslVerify} is true and and {@name #sslThumbprint} is {@term unset}, the CA certificate will be used for verification. If {@name #sslVerify} is true and {@name #sslThumbprint} is set then the thumbprint will be used for verification. No verification will be performed if {@name #sslVerify} value is set to false."
                },
                "psc_hostname": {
                  "type": "string",
                  "description": "The IP address or DNS resolvable name of the remote PSC to which this configuring vCenter Server will be registered to."
                },
                "ssl_thumbprint": {
                  "type": "string",
                  "description": "SHA1 thumbprint of the server SSL certificate will be used for verification when ssl_verify field is set to true."
                },
                "sso_admin_password": {
                  "type": "string",
                  "description": "The SSO administrator account password."
                }
              },
              "description": "Information to connect to the remote PSC."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "status"
              ],
              "properties": {
                "result": {
                  "type": "object",
                  "properties": {
                    "info": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Info notification messages reported."
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Error notification messages reported."
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Warning notification messages reported."
                    }
                  },
                  "description": "Result of the check."
                },
                "status": {
                  "enum": [
                    "SUCCESS",
                    "FAILED"
                  ],
                  "type": "string",
                  "description": "Status of the check."
                }
              }
            }
          }
        }
      ]
  answerDeploymentQuestion:
    description: |-
      Supply answer to the raised question.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/questionactionanswer/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "question_id",
                "answer_val"
              ],
              "properties": {
                "answer_val": {
                  "type": "string",
                  "description": "The answer value."
                },
                "question_id": {
                  "type": "string",
                  "description": "Id of the question being answered."
                }
              },
              "description": "AnswerSpec with the answer to the raised question."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getDeploymentQuestion:
    description: |-
      Get the question that was raised during the configuration.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/question/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "questions"
              ],
              "properties": {
                "questions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "question",
                      "type",
                      "default_answer",
                      "possible_answers"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id of the question raised."
                      },
                      "type": {
                        "enum": [
                          "YES_NO",
                          "OK_CANCEL",
                          "ABORT_RETRY_IGNORE"
                        ],
                        "type": "string",
                        "description": "Type of the question raised."
                      },
                      "question": {
                        "type": "object",
                        "required": [
                          "id",
                          "default_message",
                          "args"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                          },
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Arguments to be substituted into a message template."
                          },
                          "default_message": {
                            "type": "string",
                            "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                          }
                        },
                        "description": "Message describing the question."
                      },
                      "default_answer": {
                        "type": "string",
                        "description": "Default answer value."
                      },
                      "possible_answers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Possible answers values."
                      }
                    }
                  },
                  "description": "One or more questions raised during the deployment."
                }
              }
            }
          }
        }
      ]
  cancelDeploymentUpgrade:
    description: |-
      Cancel the appliance upgrade that is in progress.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/upgradeactioncancel/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  checkDeploymentUpgrade:
    description: |-
      Run sanity checks using the UpgradeSpec parameters passed.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/upgradeactioncheck/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "source_appliance",
                "source_location"
              ],
              "properties": {
                "psc": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled for this Platform Services Controller upgrade."
                    }
                  },
                  "description": "Information that are specific to this Platform Services Controller."
                },
                "history": {
                  "type": "object",
                  "required": [
                    "data_set"
                  ],
                  "properties": {
                    "data_set": {
                      "enum": [
                        "EVENTS_TASKS",
                        "ALL"
                      ],
                      "type": "string",
                      "description": "Defines what part of vCenter historical data will be migrated along with core data."
                    },
                    "defer_import": {
                      "type": "boolean",
                      "description": "Defines how vCenter history will be migrated. If set to true, vCenter history will be migrated separately after successful upgrade or migration, otherwise it will be migrated along with core data during the upgrade or migration process."
                    }
                  },
                  "description": "Determines how vCenter history will be migrated during the upgrade process. vCenter history consists of: <ul> <li>Statistics</li> <li>Events</li> <li>Tasks</li> </ul> By default only core data will be migrated. Use this spec to define which part of vCenter history data will be migrated and when."
                },
                "auto_answer": {
                  "type": "boolean",
                  "description": "Use the default option for any questions that may come up during appliance configuration."
                },
                "vcsa_embedded": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled for this embedded vCenter Server upgrade."
                    }
                  },
                  "description": "Information that are specific to this embedded vCenter Server."
                },
                "source_location": {
                  "type": "object",
                  "required": [
                    "hostname",
                    "username",
                    "password"
                  ],
                  "properties": {
                    "hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the container."
                    },
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "The administrator account password."
                    },
                    "username": {
                      "type": "string",
                      "description": "The administrator account on the host."
                    },
                    "https_port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The HTTPS port of the container."
                    },
                    "ssl_verify": {
                      "type": "boolean",
                      "description": "SSL verification should be enabled or disabled. If {@name #sslVerify} is true and and {@name #sslThumbprint} is {@term unset}, the CA certificate will be used for verification. If {@name #sslVerify} is true and {@name #sslThumbprint} is set then the thumbprint will be used for verification. No verification will be performed if {@name #sslVerify} value is set to false."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 thumbprint of the server SSL certificate will be used for verification."
                    }
                  },
                  "description": "Source location spec."
                },
                "source_appliance": {
                  "type": "object",
                  "required": [
                    "hostname",
                    "sso_admin_username",
                    "sso_admin_password",
                    "root_password"
                  ],
                  "properties": {
                    "hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the source appliance."
                    },
                    "https_port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The HTTPS port of the source appliance."
                    },
                    "ssh_verify": {
                      "type": "boolean",
                      "description": "Appliance SSH verification should be enabled or disabled. By default it is disabled and will not use any verification. If thumbprint is provided, thumbprint verification will be performed."
                    },
                    "ssl_verify": {
                      "type": "boolean",
                      "description": "SSL verification should be enabled or disabled for the source appliance validations. By default it is enabled and will use SSL certificate for verification. If thumbprint is provided, will use thumbprint for the verification."
                    },
                    "root_password": {
                      "type": "string",
                      "format": "password",
                      "description": "The password of the root user on the source appliance."
                    },
                    "ssh_thumbprint": {
                      "type": "string",
                      "description": "MD5 thumbprint of the server SSH key will be used for verification."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 thumbprint of the server SSL certificate will be used for verification."
                    },
                    "sso_admin_password": {
                      "type": "string",
                      "format": "password",
                      "description": "The SSO administrator account password."
                    },
                    "sso_admin_username": {
                      "type": "string",
                      "description": "The SSO administrator account on the source appliance."
                    }
                  },
                  "description": "Source appliance spec."
                }
              },
              "description": "UpgradeSpec parameters to run sanity check on."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "status"
              ],
              "properties": {
                "result": {
                  "type": "object",
                  "properties": {
                    "info": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Info notification messages reported."
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Error notification messages reported."
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "message"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The notification id."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time the notification was raised/found."
                          },
                          "message": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The notification message."
                          },
                          "resolution": {
                            "type": "object",
                            "required": [
                              "id",
                              "default_message",
                              "args"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                              },
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Arguments to be substituted into a message template."
                              },
                              "default_message": {
                                "type": "string",
                                "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                              }
                            },
                            "description": "The resolution message, if any."
                          }
                        }
                      },
                      "description": "Warning notification messages reported."
                    }
                  },
                  "description": "Result of the check."
                },
                "status": {
                  "enum": [
                    "SUCCESS",
                    "FAILED"
                  ],
                  "type": "string",
                  "description": "Status of the check."
                }
              }
            }
          }
        }
      ]
  startDeploymentUpgrade:
    description: |-
      Start the appliance installation.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/upgradeactionstart/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "source_appliance",
                "source_location"
              ],
              "properties": {
                "psc": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled for this Platform Services Controller upgrade."
                    }
                  },
                  "description": "Information that are specific to this Platform Services Controller."
                },
                "history": {
                  "type": "object",
                  "required": [
                    "data_set"
                  ],
                  "properties": {
                    "data_set": {
                      "enum": [
                        "EVENTS_TASKS",
                        "ALL"
                      ],
                      "type": "string",
                      "description": "Defines what part of vCenter historical data will be migrated along with core data."
                    },
                    "defer_import": {
                      "type": "boolean",
                      "description": "Defines how vCenter history will be migrated. If set to true, vCenter history will be migrated separately after successful upgrade or migration, otherwise it will be migrated along with core data during the upgrade or migration process."
                    }
                  },
                  "description": "Determines how vCenter history will be migrated during the upgrade process. vCenter history consists of: <ul> <li>Statistics</li> <li>Events</li> <li>Tasks</li> </ul> By default only core data will be migrated. Use this spec to define which part of vCenter history data will be migrated and when."
                },
                "auto_answer": {
                  "type": "boolean",
                  "description": "Use the default option for any questions that may come up during appliance configuration."
                },
                "vcsa_embedded": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled for this embedded vCenter Server upgrade."
                    }
                  },
                  "description": "Information that are specific to this embedded vCenter Server."
                },
                "source_location": {
                  "type": "object",
                  "required": [
                    "hostname",
                    "username",
                    "password"
                  ],
                  "properties": {
                    "hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the container."
                    },
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "The administrator account password."
                    },
                    "username": {
                      "type": "string",
                      "description": "The administrator account on the host."
                    },
                    "https_port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The HTTPS port of the container."
                    },
                    "ssl_verify": {
                      "type": "boolean",
                      "description": "SSL verification should be enabled or disabled. If {@name #sslVerify} is true and and {@name #sslThumbprint} is {@term unset}, the CA certificate will be used for verification. If {@name #sslVerify} is true and {@name #sslThumbprint} is set then the thumbprint will be used for verification. No verification will be performed if {@name #sslVerify} value is set to false."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 thumbprint of the server SSL certificate will be used for verification."
                    }
                  },
                  "description": "Source location spec."
                },
                "source_appliance": {
                  "type": "object",
                  "required": [
                    "hostname",
                    "sso_admin_username",
                    "sso_admin_password",
                    "root_password"
                  ],
                  "properties": {
                    "hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the source appliance."
                    },
                    "https_port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The HTTPS port of the source appliance."
                    },
                    "ssh_verify": {
                      "type": "boolean",
                      "description": "Appliance SSH verification should be enabled or disabled. By default it is disabled and will not use any verification. If thumbprint is provided, thumbprint verification will be performed."
                    },
                    "ssl_verify": {
                      "type": "boolean",
                      "description": "SSL verification should be enabled or disabled for the source appliance validations. By default it is enabled and will use SSL certificate for verification. If thumbprint is provided, will use thumbprint for the verification."
                    },
                    "root_password": {
                      "type": "string",
                      "format": "password",
                      "description": "The password of the root user on the source appliance."
                    },
                    "ssh_thumbprint": {
                      "type": "string",
                      "description": "MD5 thumbprint of the server SSH key will be used for verification."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 thumbprint of the server SSL certificate will be used for verification."
                    },
                    "sso_admin_password": {
                      "type": "string",
                      "format": "password",
                      "description": "The SSO administrator account password."
                    },
                    "sso_admin_username": {
                      "type": "string",
                      "description": "The SSO administrator account on the source appliance."
                    }
                  },
                  "description": "Source appliance spec."
                }
              },
              "description": "UpgradeSpec parameters to configure the appliance upgrade."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getDeploymentUpgrade:
    description: |-
      Get the UpgradeSpec parameters used to configure the ongoing appliance upgrade.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/deployment/upgrade/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "source_appliance",
                "source_location"
              ],
              "properties": {
                "psc": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled for this Platform Services Controller upgrade."
                    }
                  },
                  "description": "Information that are specific to this Platform Services Controller."
                },
                "history": {
                  "type": "object",
                  "required": [
                    "data_set"
                  ],
                  "properties": {
                    "data_set": {
                      "enum": [
                        "EVENTS_TASKS",
                        "ALL"
                      ],
                      "type": "string",
                      "description": "Defines what part of vCenter historical data will be migrated along with core data."
                    },
                    "defer_import": {
                      "type": "boolean",
                      "description": "Defines how vCenter history will be migrated. If set to true, vCenter history will be migrated separately after successful upgrade or migration, otherwise it will be migrated along with core data during the upgrade or migration process."
                    }
                  },
                  "description": "Determines how vCenter history will be migrated during the upgrade process. vCenter history consists of: <ul> <li>Statistics</li> <li>Events</li> <li>Tasks</li> </ul> By default only core data will be migrated. Use this spec to define which part of vCenter history data will be migrated and when."
                },
                "auto_answer": {
                  "type": "boolean",
                  "description": "Use the default option for any questions that may come up during appliance configuration."
                },
                "vcsa_embedded": {
                  "type": "object",
                  "required": [
                    "ceip_enabled"
                  ],
                  "properties": {
                    "ceip_enabled": {
                      "type": "boolean",
                      "description": "Customer experience improvement program should be enabled or disabled for this embedded vCenter Server upgrade."
                    }
                  },
                  "description": "Information that are specific to this embedded vCenter Server."
                },
                "source_location": {
                  "type": "object",
                  "required": [
                    "hostname",
                    "username",
                    "password"
                  ],
                  "properties": {
                    "hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the container."
                    },
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "The administrator account password."
                    },
                    "username": {
                      "type": "string",
                      "description": "The administrator account on the host."
                    },
                    "https_port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The HTTPS port of the container."
                    },
                    "ssl_verify": {
                      "type": "boolean",
                      "description": "SSL verification should be enabled or disabled. If {@name #sslVerify} is true and and {@name #sslThumbprint} is {@term unset}, the CA certificate will be used for verification. If {@name #sslVerify} is true and {@name #sslThumbprint} is set then the thumbprint will be used for verification. No verification will be performed if {@name #sslVerify} value is set to false."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 thumbprint of the server SSL certificate will be used for verification."
                    }
                  },
                  "description": "Source location spec."
                },
                "source_appliance": {
                  "type": "object",
                  "required": [
                    "hostname",
                    "sso_admin_username",
                    "sso_admin_password",
                    "root_password"
                  ],
                  "properties": {
                    "hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the source appliance."
                    },
                    "https_port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The HTTPS port of the source appliance."
                    },
                    "ssh_verify": {
                      "type": "boolean",
                      "description": "Appliance SSH verification should be enabled or disabled. By default it is disabled and will not use any verification. If thumbprint is provided, thumbprint verification will be performed."
                    },
                    "ssl_verify": {
                      "type": "boolean",
                      "description": "SSL verification should be enabled or disabled for the source appliance validations. By default it is enabled and will use SSL certificate for verification. If thumbprint is provided, will use thumbprint for the verification."
                    },
                    "root_password": {
                      "type": "string",
                      "format": "password",
                      "description": "The password of the root user on the source appliance."
                    },
                    "ssh_thumbprint": {
                      "type": "string",
                      "description": "MD5 thumbprint of the server SSH key will be used for verification."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 thumbprint of the server SSL certificate will be used for verification."
                    },
                    "sso_admin_password": {
                      "type": "string",
                      "format": "password",
                      "description": "The SSO administrator account password."
                    },
                    "sso_admin_username": {
                      "type": "string",
                      "description": "The SSO administrator account on the source appliance."
                    }
                  },
                  "description": "Source appliance spec."
                }
              }
            }
          }
        }
      ]
  listFolders:
    description: |-
      Returns information about at most 1000 visible (subject to permission checks) folders in vCenter matching the Folder.FilterSpec.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/folder/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "folder",
                  "name",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the vCenter Server folder."
                  },
                  "type": {
                    "enum": [
                      "DATACENTER",
                      "DATASTORE",
                      "HOST",
                      "NETWORK",
                      "VIRTUAL_MACHINE"
                    ],
                    "type": "string",
                    "description": "Type (Type) of the vCenter Server folder."
                  },
                  "folder": {
                    "type": "string",
                    "description": "Identifier of the folder.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder."
                  }
                }
              }
            }
          }
        }
      ]
  listHosts:
    description: |-
      Returns information about at most 1000 visible (subject to permission checks) hosts in vCenter matching the Host.FilterSpec.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/host/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "host",
                  "name",
                  "connection_state"
                ],
                "properties": {
                  "host": {
                    "type": "string",
                    "description": "Identifier of the host.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the host."
                  },
                  "power_state": {
                    "enum": [
                      "POWERED_ON",
                      "POWERED_OFF",
                      "STANDBY"
                    ],
                    "type": "string",
                    "description": "Power state of the host\nThis field is optional and it is only relevant when the value of Host.Summary.connection-state is CONNECTED."
                  },
                  "connection_state": {
                    "enum": [
                      "CONNECTED",
                      "DISCONNECTED",
                      "NOT_RESPONDING"
                    ],
                    "type": "string",
                    "description": "Connection status of the host"
                  }
                }
              }
            }
          }
        }
      ]
  connectToHost:
    description: |-
      Connect to the host corresponding to host previously added to the vCenter server.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/host/host/connect/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteHost:
    description: |-
      Remove a standalone host from the vCenter Server.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/host/host/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  disconnectHost:
    description: |-
      Disconnect the host corresponding to host from the vCenter server
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/host/host/disconnect/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  createHost:
    description: |-
      Add a new standalone host in the vCenter inventory. The newly connected host will be in connected state. The vCenter Server will verify the SSL certificate before adding the host to its inventory. In the case where the SSL certificate cannot be verified because the Certificate Authority is not recognized or the certificate is self signed, the vCenter Server will fall back to thumbprint verification mode as defined by Host.CreateSpec.ThumbprintVerification.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/host/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "hostname",
                "user_name",
                "password",
                "thumbprint_verification"
              ],
              "properties": {
                "port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The port of the host.\nIf unset, port 443 will be used."
                },
                "folder": {
                  "type": "string",
                  "description": "Host and cluster folder in which the new standalone host should be created.\nThis field is currently required. In the future, if this field is unset, the system will attempt to choose a suitable folder for the host; if a folder cannot be chosen, the host creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder."
                },
                "hostname": {
                  "type": "string",
                  "description": "The IP address or DNS resolvable name of the host."
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "The password for the administrator account on the host."
                },
                "force_add": {
                  "type": "boolean",
                  "description": "Whether host should be added to the vCenter Server even if it is being managed by another vCenter Server. The original vCenterServer loses connection to the host.\nIf unset, forceAdd is default to false."
                },
                "user_name": {
                  "type": "string",
                  "description": "The administrator account on the host."
                },
                "thumbprint": {
                  "type": "string",
                  "description": "The thumbprint of the SSL certificate, which the host is expected to have. The thumbprint is always computed using the SHA1 hash and is the string representation of that hash in the format: xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx where, 'x' represents a hexadecimal digit.\nThis field is optional and it is only relevant when the value of Host.CreateSpec.thumbprint-verification is THUMBPRINT."
                },
                "thumbprint_verification": {
                  "enum": [
                    "NONE",
                    "THUMBPRINT"
                  ],
                  "type": "string",
                  "description": "Type of host's SSL certificate verification to be done."
                }
              },
              "description": "Specification for the new host to be created."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  listNetworks:
    description: |-
      Returns information about at most 1000 visible (subject to permission checks) networks in vCenter matching the Network.FilterSpec.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/network/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "network",
                  "name",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the network."
                  },
                  "type": {
                    "enum": [
                      "STANDARD_PORTGROUP",
                      "DISTRIBUTED_PORTGROUP",
                      "OPAQUE_NETWORK"
                    ],
                    "type": "string",
                    "description": "Type (Type) of the vCenter Server network."
                  },
                  "network": {
                    "type": "string",
                    "description": "Identifier of the network.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network."
                  }
                }
              }
            }
          }
        }
      ]
  listResourcePools:
    description: |-
      Returns information about at most 1000 visible (subject to permission checks) resource pools in vCenter matching the ResourcePool.FilterSpec.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/resource-pool/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "resource_pool",
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the resource pool."
                  },
                  "resource_pool": {
                    "type": "string",
                    "description": "Identifier of the resource pool.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool."
                  }
                }
              }
            }
          }
        }
      ]
  getResourcePool:
    description: |-
      Retrieves information about the resource pool indicated by resourcePool.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/resource-pool/resource_pool/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "name",
                "resource_pools"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the vCenter Server resource pool."
                },
                "resource_pools": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Identifiers of the child resource pools contained in this resource pool.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ResourcePool.",
                  "uniqueItems": true
                }
              }
            }
          }
        }
      ]
  listServices:
    description: |-
      Lists details of vCenter services.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/services/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "required": [
                      "name_key",
                      "description_key",
                      "startup_type",
                      "state"
                    ],
                    "properties": {
                      "state": {
                        "enum": [
                          "STARTING",
                          "STOPPING",
                          "STARTED",
                          "STOPPED"
                        ],
                        "type": "string",
                        "description": "Running State."
                      },
                      "health": {
                        "enum": [
                          "DEGRADED",
                          "HEALTHY",
                          "HEALTHY_WITH_WARNINGS"
                        ],
                        "type": "string",
                        "description": "Health of service."
                      },
                      "name_key": {
                        "type": "string",
                        "description": "Service name key. Can be used to lookup resource bundle"
                      },
                      "startup_type": {
                        "enum": [
                          "MANUAL",
                          "AUTOMATIC",
                          "DISABLED"
                        ],
                        "type": "string",
                        "description": "Startup Type."
                      },
                      "description_key": {
                        "type": "string",
                        "description": "Service description key. Can be used to lookup resource bundle"
                      },
                      "health_messages": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "id",
                            "default_message",
                            "args"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                            },
                            "args": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Arguments to be substituted into a message template."
                            },
                            "default_message": {
                              "type": "string",
                              "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                            }
                          }
                        },
                        "description": "Localizable messages associated with the health of the service"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
  getService:
    description: |-
      Returns the state of a service.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/services/service/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "name_key",
                "description_key",
                "startup_type",
                "state"
              ],
              "properties": {
                "state": {
                  "enum": [
                    "STARTING",
                    "STOPPING",
                    "STARTED",
                    "STOPPED"
                  ],
                  "type": "string",
                  "description": "Running State."
                },
                "health": {
                  "enum": [
                    "DEGRADED",
                    "HEALTHY",
                    "HEALTHY_WITH_WARNINGS"
                  ],
                  "type": "string",
                  "description": "Health of service."
                },
                "name_key": {
                  "type": "string",
                  "description": "Service name key. Can be used to lookup resource bundle"
                },
                "startup_type": {
                  "enum": [
                    "MANUAL",
                    "AUTOMATIC",
                    "DISABLED"
                  ],
                  "type": "string",
                  "description": "Startup Type."
                },
                "description_key": {
                  "type": "string",
                  "description": "Service description key. Can be used to lookup resource bundle"
                },
                "health_messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "default_message",
                      "args"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                      },
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Arguments to be substituted into a message template."
                      },
                      "default_message": {
                        "type": "string",
                        "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                      }
                    }
                  },
                  "description": "Localizable messages associated with the health of the service"
                }
              }
            }
          }
        }
      ]
  updateService:
    description: |-
      Updates the properties of a service.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/services/service/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "startup_type": {
                  "enum": [
                    "MANUAL",
                    "AUTOMATIC",
                    "DISABLED"
                  ],
                  "type": "string",
                  "description": "Startup Type"
                }
              },
              "description": "Service Update specification."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  restartService:
    description: |-
      Restarts a service
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/services/service/restart/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  startService:
    description: |-
      Starts a service
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/services/service/start/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  stopService:
    description: |-
      Stops a service
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/services/service/stop/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  listStoragePolicyVMCompliances:
    description: |-
      Returns compliance information about at most 1000 virtual machines matching the filter VM.FilterSpec. If there are no virtual machines matching the VM.FilterSpec an empty List is returned. Virtual machines without storage policy association are not returned.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/storage/policies/compliance/vm/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "required": [
                      "disks"
                    ],
                    "properties": {
                      "disks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "value": {
                              "enum": [
                                "COMPLIANT",
                                "NON_COMPLIANT",
                                "UNKNOWN_COMPLIANCE",
                                "NOT_APPLICABLE",
                                "OUT_OF_DATE"
                              ],
                              "type": "string"
                            }
                          }
                        },
                        "description": "A Map of virtual disks and their compliance status If empty, the virtual machine does not have any disks or its disks are not associated with a storage policy.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Disk."
                      },
                      "vm_home": {
                        "enum": [
                          "COMPLIANT",
                          "NON_COMPLIANT",
                          "UNKNOWN_COMPLIANCE",
                          "NOT_APPLICABLE",
                          "OUT_OF_DATE"
                        ],
                        "type": "string",
                        "description": "Compliance status of the virtual machine home.\nIf unset or empty, virtual machine home is not associated with a storage policy."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
  listStoragePolicyCompliances:
    description: |-
      Returns compliance information about entities matching the filter Compliance.FilterSpec. Entities without storage policy association are not returned.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/storage/policies/entities/compliance/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "vm"
                ],
                "properties": {
                  "vm": {
                    "type": "string",
                    "description": "Identifier of virtual machine\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: VirtualMachine. When operations return a value of this structure as a result, the field will be an identifier for the resource type: VirtualMachine."
                  },
                  "disks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "enum": [
                            "COMPLIANT",
                            "NON_COMPLIANT",
                            "UNKNOWN",
                            "NOT_APPLICABLE",
                            "OUT_OF_DATE"
                          ],
                          "type": "string"
                        }
                      }
                    },
                    "description": "List of the virtual hard disk.\nIf unset or empty, virtual machine entity does not have any disks or its disks are not associated with a storage policy.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Disk."
                  },
                  "vm_home": {
                    "enum": [
                      "COMPLIANT",
                      "NON_COMPLIANT",
                      "UNKNOWN",
                      "NOT_APPLICABLE",
                      "OUT_OF_DATE"
                    ],
                    "type": "string",
                    "description": "Compliance status of the virtual machine home.\nIf unset or empty, vmHome is not associated with a storage policy."
                  }
                }
              }
            }
          }
        }
      ]
  listStoragePolicies:
    description: |-
      Returns information about at most 1024 visible (subject to permission checks) storage solicies availabe in vCenter. These storage policies can be used for provisioning virtual machines or disks.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/storage/policies/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "policy",
                  "name",
                  "description"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the storage policy."
                  },
                  "policy": {
                    "type": "string",
                    "description": "Identifier of the storage policy.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the storage policy."
                  }
                }
              }
            }
          }
        }
      ]
  checkStoragePolicyCompatibility:
    description: |-
      Returns datastore compatibility summary about a specific storage policy.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/storage/policies/policyactioncheck-compatibility/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "datastores": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Datastores used to check compatibility against a storage policy. The number of datastores is limited to 1024.\nThe parameter must contain identifiers for the resource type: Datastore.",
              "uniqueItems": true
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "compatible_datastores"
              ],
              "properties": {
                "compatible_datastores": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "datastore"
                    ],
                    "properties": {
                      "datastore": {
                        "type": "string",
                        "description": "Identifier of the datastore.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore."
                      }
                    }
                  },
                  "description": "Info about a list of datastores compatible with a specific storage policy."
                }
              }
            }
          }
        }
      ]
  listVMStoragePolicies:
    description: |-
      Returns information about the virtual machines and/or their virtual disks that are associated with the given storage policy.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/storage/policies/policy/vm/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "required": [
                      "vm_home",
                      "disks"
                    ],
                    "properties": {
                      "disks": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of the virtual disks that are associated with the given storage policy.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.vm.hardware.Disk."
                      },
                      "vm_home": {
                        "type": "boolean",
                        "description": "Flag to indicate whether or not the virtual machine home is associated with the given storage policy."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
  getSystemConfigDeploymentType:
    description: |-
      Get the type of the vCenter appliance.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/system-config/deployment-type/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "enum": [
                    "VCSA_EMBEDDED",
                    "VCSA_EXTERNAL",
                    "PSC_EXTERNAL"
                  ],
                  "type": "string",
                  "description": "The type of the appliance."
                }
              }
            }
          }
        }
      ]
  reconfigureSystemConfigDeploymentType:
    description: |-
      Reconfigure the type of the vCenter appliance.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/system-config/deployment-type/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "enum": [
                    "VCSA_EMBEDDED",
                    "VCSA_EXTERNAL",
                    "PSC_EXTERNAL"
                  ],
                  "type": "string",
                  "description": "The type of the appliance."
                },
                "remote_psc": {
                  "type": "object",
                  "required": [
                    "psc_hostname",
                    "sso_admin_password"
                  ],
                  "properties": {
                    "https_port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The HTTPS port of the external PSC appliance."
                    },
                    "ssl_verify": {
                      "type": "boolean",
                      "description": "SSL verification should be enabled or disabled. If {@name #sslVerify} is true and and {@name #sslThumbprint} is {@term unset}, the CA certificate will be used for verification. If {@name #sslVerify} is true and {@name #sslThumbprint} is set then the thumbprint will be used for verification. No verification will be performed if {@name #sslVerify} value is set to false."
                    },
                    "psc_hostname": {
                      "type": "string",
                      "description": "The IP address or DNS resolvable name of the remote PSC to which this configuring vCenter Server will be registered to."
                    },
                    "ssl_thumbprint": {
                      "type": "string",
                      "description": "SHA1 thumbprint of the server SSL certificate will be used for verification when ssl_verify field is set to true."
                    },
                    "sso_admin_password": {
                      "type": "string",
                      "description": "The SSO administrator account password."
                    }
                  },
                  "description": "External PSC to register with when reconfiguring a VCSA_EMBEDDED appliance to a VCSA_EXTERNAL appliance."
                }
              },
              "description": "ReconfigureSpec to set the appliance type."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getSystemConfigPSCRegistration:
    description: |-
      Get information of the PSC that this appliance is registered with.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/system-config/psc-registration/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "address",
                "https_port",
                "sso_domain"
              ],
              "properties": {
                "address": {
                  "type": "string",
                  "description": "The IP address or DNS resolvable name of the PSC this appliance is registered with."
                },
                "https_port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The HTTPs port used by the external PSC."
                },
                "sso_domain": {
                  "type": "string",
                  "description": "The Single Sign-On domain name of the external PSC."
                }
              }
            }
          }
        }
      ]
  repointSystemConfigPSCRegistration:
    description: |-
      Repoint this vCenter Server appliance to a different external PSC.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/system-config/psc-registration/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "psc_hostname",
                "sso_admin_password"
              ],
              "properties": {
                "https_port": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The HTTPS port of the external PSC appliance."
                },
                "ssl_verify": {
                  "type": "boolean",
                  "description": "SSL verification should be enabled or disabled. If {@name #sslVerify} is true and and {@name #sslThumbprint} is {@term unset}, the CA certificate will be used for verification. If {@name #sslVerify} is true and {@name #sslThumbprint} is set then the thumbprint will be used for verification. No verification will be performed if {@name #sslVerify} value is set to false."
                },
                "psc_hostname": {
                  "type": "string",
                  "description": "The IP address or DNS resolvable name of the remote PSC to which this configuring vCenter Server will be registered to."
                },
                "ssl_thumbprint": {
                  "type": "string",
                  "description": "SHA1 thumbprint of the server SSL certificate will be used for verification when ssl_verify field is set to true."
                },
                "sso_admin_password": {
                  "type": "string",
                  "description": "The SSO administrator account password."
                }
              },
              "description": "RemotePscSpec structure containing information about the external PSC node to repoint this vCenter Server appliance to."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listVMs:
    description: |-
      Returns information about at most 1000 visible (subject to permission checks) virtual machines in vCenter matching the VM.FilterSpec.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "vm",
                  "name",
                  "power_state"
                ],
                "properties": {
                  "vm": {
                    "type": "string",
                    "description": "Identifier of the virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: VirtualMachine. When operations return a value of this structure as a result, the field will be an identifier for the resource type: VirtualMachine."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the Virtual machine."
                  },
                  "cpu_count": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of CPU cores.\nThis field will be unset if the virtual machine configuration is not available. For example, the configuration information would be unavailable if the server is unable to access the virtual machine files on disk, and is often also unavailable during the intial phases of virtual machine creation."
                  },
                  "power_state": {
                    "enum": [
                      "POWERED_OFF",
                      "POWERED_ON",
                      "SUSPENDED"
                    ],
                    "type": "string",
                    "description": "Power state of the virtual machine."
                  },
                  "memory_size_MiB": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Memory size in mebibytes.\nThis field will be unset if the virtual machine configuration is not available. For example, the configuration information would be unavailable if the server is unable to access the virtual machine files on disk, and is often also unavailable during the intial phases of virtual machine creation."
                  }
                }
              }
            }
          }
        }
      ]
  createVM:
    description: |-
      Creates a virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "required": [
                "guest_OS"
              ],
              "properties": {
                "cpu": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int64",
                      "description": "New number of CPU cores. The number of CPU cores in the virtual machine must be a multiple of the number of cores per socket. \n The supported range of CPU counts is constrained by the configured guest operating system and virtual hardware version of the virtual machine. \n\n If the virtual machine is running, the number of CPU cores may only be increased if Cpu.Info.hot-add-enabled is true, and may only be decreased if Cpu.Info.hot-remove-enabled is true.\n\nIf unset, the value is unchanged."
                    },
                    "hot_add_enabled": {
                      "type": "boolean",
                      "description": "Flag indicating whether adding CPUs while the virtual machine is running is enabled. \n This field may only be modified if the virtual machine is powered off.\n\nIf unset, the value is unchanged."
                    },
                    "cores_per_socket": {
                      "type": "integer",
                      "format": "int64",
                      "description": "New number of CPU cores per socket. The number of CPU cores in the virtual machine must be a multiple of the number of cores per socket.\nIf unset, the value is unchanged."
                    },
                    "hot_remove_enabled": {
                      "type": "boolean",
                      "description": "Flag indicating whether removing CPUs while the virtual machine is running is enabled. \n This field may only be modified if the virtual machine is powered off.\n\nIf unset, the value is unchanged."
                    }
                  },
                  "description": "CPU configuration.\nIf unset, guest-specific default values will be used."
                },
                "boot": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "enum": [
                        "BIOS",
                        "EFI"
                      ],
                      "type": "string",
                      "description": "Firmware type to be used by the virtual machine.\nIf unset, defaults to value that is recommended for the guest OS and is supported for the virtual hardware version."
                    },
                    "delay": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Delay in milliseconds before beginning the firmware boot process when the virtual machine is powered on. This delay may be used to provide a time window for users to connect to the virtual machine console and enter BIOS setup mode.\nIf unset, default value is 0."
                    },
                    "retry": {
                      "type": "boolean",
                      "description": "Flag indicating whether the virtual machine should automatically retry the boot process after a failure.\nIf unset, default value is false."
                    },
                    "retry_delay": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Delay in milliseconds before retrying the boot process after a failure; applicable only when Boot.Info.retry is true.\nIf unset, default value is 10000."
                    },
                    "efi_legacy_boot": {
                      "type": "boolean",
                      "description": "Flag indicating whether to use EFI legacy boot mode.\nIf unset, defaults to value that is recommended for the guest OS and is supported for the virtual hardware version."
                    },
                    "enter_setup_mode": {
                      "type": "boolean",
                      "description": "Flag indicating whether the firmware boot process should automatically enter setup mode the next time the virtual machine boots. Note that this flag will automatically be reset to false once the virtual machine enters setup mode.\nIf unset, the value is unchanged."
                    },
                    "network_protocol": {
                      "enum": [
                        "IPV4",
                        "IPV6"
                      ],
                      "type": "string",
                      "description": "Protocol to use when attempting to boot the virtual machine over the network.\nIf unset, defaults to a system defined default value."
                    }
                  },
                  "description": "Boot configuration.\nIf unset, guest-specific default values will be used."
                },
                "name": {
                  "type": "string",
                  "description": "Virtual machine name.\nIf unset, a default name will be generated by the server."
                },
                "nics": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "enum": [
                          "E1000",
                          "E1000E",
                          "PCNET32",
                          "VMXNET",
                          "VMXNET2",
                          "VMXNET3"
                        ],
                        "type": "string",
                        "description": "Ethernet adapter emulation type.\nIf unset, defaults to a guest-specific type."
                      },
                      "backing": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "enum": [
                              "STANDARD_PORTGROUP",
                              "HOST_DEVICE",
                              "DISTRIBUTED_PORTGROUP",
                              "OPAQUE_NETWORK"
                            ],
                            "type": "string",
                            "description": "Backing type for the virtual Ethernet adapter."
                          },
                          "network": {
                            "type": "string",
                            "description": "Identifier of the network that backs the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingSpec.type is one of STANDARD_PORTGROUP, DISTRIBUTED_PORTGROUP, or OPAQUE_NETWORK.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network."
                          },
                          "distributed_port": {
                            "type": "string",
                            "description": "Key of the distributed virtual port that backs the virtual Ethernet adapter. Depending on the type of the Portgroup, the port may be specified using this field. If the portgroup type is early-binding (also known as static), a port is assigned when the Ethernet adapter is configured to use the port. The port may be either automatically or specifically assigned based on the value of this field. If the portgroup type is ephemeral, the port is created and assigned to a virtual machine when it is powered on and the Ethernet adapter is connected. This field cannot be specified as no free ports exist before use.\nMay be used to specify a port when the network specified on the Ethernet.BackingSpec.network field is a static or early binding distributed portgroup. If unset, the port will be automatically assigned to the Ethernet adapter based on the policy embodied by the portgroup type."
                          }
                        },
                        "description": "Physical resource backing for the virtual Ethernet adapter.\nIf unset, the system may try to find an appropriate backing. If one is not found, the request will fail."
                      },
                      "mac_type": {
                        "enum": [
                          "MANUAL",
                          "GENERATED",
                          "ASSIGNED"
                        ],
                        "type": "string",
                        "description": "MAC address type.\nIf unset, defaults to GENERATED."
                      },
                      "mac_address": {
                        "type": "string",
                        "description": "MAC address.\nWorkaround for PR1459647"
                      },
                      "pci_slot_number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Address of the virtual Ethernet adapter on the PCI bus. If the PCI address is invalid, the server will change when it the VM is started or as the device is hot added.\nIf unset, the server will choose an available address when the virtual machine is powered on."
                      },
                      "start_connected": {
                        "type": "boolean",
                        "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset."
                      },
                      "allow_guest_control": {
                        "type": "boolean",
                        "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset."
                      },
                      "wake_on_lan_enabled": {
                        "type": "boolean",
                        "description": "Flag indicating whether wake-on-LAN is enabled on this virtual Ethernet adapter.\nDefaults to false if unset."
                      },
                      "upt_compatibility_enabled": {
                        "type": "boolean",
                        "description": "Flag indicating whether Universal Pass-Through (UPT) compatibility is enabled on this virtual Ethernet adapter.\nIf unset, defaults to false."
                      }
                    }
                  },
                  "description": "List of Ethernet adapters.\nIf unset, no Ethernet adapters will be created."
                },
                "disks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ide": {
                        "type": "object",
                        "properties": {
                          "master": {
                            "type": "boolean",
                            "description": "Flag specifying whether the device should be the master or slave device on the IDE adapter.\nIf unset, the server will choose an available connection type. If no IDE connections are available, the request will be rejected."
                          },
                          "primary": {
                            "type": "boolean",
                            "description": "Flag specifying whether the device should be attached to the primary or secondary IDE adapter of the virtual machine.\nIf unset, the server will choose a adapter with an available connection. If no IDE connections are available, the request will be rejected."
                          }
                        },
                        "description": "Address for attaching the device to a virtual IDE adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail."
                      },
                      "sata": {
                        "type": "object",
                        "required": [
                          "bus"
                        ],
                        "properties": {
                          "bus": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Bus number of the adapter to which the device should be attached."
                          },
                          "unit": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Unit number of the device.\nIf unset, the server will choose an available unit number on the specified adapter. If there are no available connections on the adapter, the request will be rejected."
                          }
                        },
                        "description": "Address for attaching the device to a virtual SATA adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail."
                      },
                      "scsi": {
                        "type": "object",
                        "required": [
                          "bus"
                        ],
                        "properties": {
                          "bus": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Bus number of the adapter to which the device should be attached."
                          },
                          "unit": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Unit number of the device.\nIf unset, the server will choose an available unit number on the specified adapter. If there are no available connections on the adapter, the request will be rejected."
                          }
                        },
                        "description": "Address for attaching the device to a virtual SCSI adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail."
                      },
                      "type": {
                        "enum": [
                          "IDE",
                          "SCSI",
                          "SATA"
                        ],
                        "type": "string",
                        "description": "Type of host bus adapter to which the device should be attached.\nIf unset, guest-specific default values will be used"
                      },
                      "backing": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "enum": [
                              "VMDK_FILE"
                            ],
                            "type": "string",
                            "description": "Backing type for the virtual disk."
                          },
                          "vmdk_file": {
                            "type": "string",
                            "description": "Path of the VMDK file backing the virtual disk.\nThis field is optional and it is only relevant when the value of Disk.BackingSpec.type is VMDK_FILE."
                          }
                        },
                        "description": "Existing physical resource backing for the virtual disk. Exactly one of Disk.CreateSpec.backing or Disk.CreateSpec.new-vmdk must be specified.\nIf unset, the virtual disk will not be connected to an existing backing."
                      },
                      "new_vmdk": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Base name of the VMDK file. The name should not include the '.vmdk' file extension.\nIf unset, a name (derived from the name of the virtual machine) will be chosen by the server."
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Capacity of the virtual disk backing in bytes.\nIf unset, defaults to a guest-specific capacity."
                          },
                          "storage_policy": {
                            "type": "object",
                            "required": [
                              "policy"
                            ],
                            "properties": {
                              "policy": {
                                "type": "string",
                                "description": "Identifier of the storage policy which should be associated with the VMDK file.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                              }
                            },
                            "description": "The Disk.StoragePolicySpec structure contains information about the storage policy that is to be associated the with VMDK file.\nIf unset the default storage policy of the target datastore (if applicable) is applied. Currently a default storage policy is only supported by object based datastores : VVol & vSAN. For non- object datastores, if unset then no storage policy would be associated with the VMDK file."
                          }
                        },
                        "description": "Specification for creating a new VMDK backing for the virtual disk. Exactly one of Disk.CreateSpec.backing or Disk.CreateSpec.new-vmdk must be specified.\nIf unset, a new VMDK backing will not be created."
                      }
                    }
                  },
                  "description": "List of disks.\nIf unset, a single blank virtual disk of a guest-specific size will be created on the same storage as the virtual machine configuration, and will use a guest-specific host bus adapter type. If the guest-specific size is 0, no virtual disk will be created."
                },
                "cdroms": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ide": {
                        "type": "object",
                        "properties": {
                          "master": {
                            "type": "boolean",
                            "description": "Flag specifying whether the device should be the master or slave device on the IDE adapter.\nIf unset, the server will choose an available connection type. If no IDE connections are available, the request will be rejected."
                          },
                          "primary": {
                            "type": "boolean",
                            "description": "Flag specifying whether the device should be attached to the primary or secondary IDE adapter of the virtual machine.\nIf unset, the server will choose a adapter with an available connection. If no IDE connections are available, the request will be rejected."
                          }
                        },
                        "description": "Address for attaching the device to a virtual IDE adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail."
                      },
                      "sata": {
                        "type": "object",
                        "required": [
                          "bus"
                        ],
                        "properties": {
                          "bus": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Bus number of the adapter to which the device should be attached."
                          },
                          "unit": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Unit number of the device.\nIf unset, the server will choose an available unit number on the specified adapter. If there are no available connections on the adapter, the request will be rejected."
                          }
                        },
                        "description": "Address for attaching the device to a virtual SATA adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail."
                      },
                      "type": {
                        "enum": [
                          "IDE",
                          "SATA"
                        ],
                        "type": "string",
                        "description": "Type of host bus adapter to which the device should be attached.\nIf unset, guest-specific default values will be used"
                      },
                      "backing": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "enum": [
                              "ISO_FILE",
                              "HOST_DEVICE",
                              "CLIENT_DEVICE"
                            ],
                            "type": "string",
                            "description": "Backing type for the virtual CD-ROM device."
                          },
                          "iso_file": {
                            "type": "string",
                            "description": "Path of the image file that should be used as the virtual CD-ROM device backing.\nThis field is optional and it is only relevant when the value of Cdrom.BackingSpec.type is ISO_FILE."
                          },
                          "host_device": {
                            "type": "string",
                            "description": "Name of the device that should be used as the virtual CD-ROM device backing.\nIf unset, the virtual CD-ROM device will be configured to automatically detect a suitable host device."
                          },
                          "device_access_type": {
                            "enum": [
                              "EMULATION",
                              "PASSTHRU",
                              "PASSTHRU_EXCLUSIVE"
                            ],
                            "type": "string",
                            "description": "Access type for the device backing.\nIf unset, defaults to EMULATION."
                          }
                        },
                        "description": "Physical resource backing for the virtual CD-ROM device.\nIf unset, defaults to automatic detection of a suitable host device."
                      },
                      "start_connected": {
                        "type": "boolean",
                        "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset."
                      },
                      "allow_guest_control": {
                        "type": "boolean",
                        "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset."
                      }
                    }
                  },
                  "description": "List of CD-ROMs.\nIf unset, no CD-ROM devices will be created."
                },
                "memory": {
                  "type": "object",
                  "properties": {
                    "size_MiB": {
                      "type": "integer",
                      "format": "int64",
                      "description": "New memory size in mebibytes. \n The supported range of memory sizes is constrained by the configured guest operating system and virtual hardware version of the virtual machine. \n\n If the virtual machine is running, this value may only be changed if Memory.Info.hot-add-enabled is true, and the new memory size must satisfy the constraints specified by Memory.Info.hot-add-increment-size-mib and Memory.Info.hot-add-limit-mib.\n\nIf unset, the value is unchanged."
                    },
                    "hot_add_enabled": {
                      "type": "boolean",
                      "description": "Flag indicating whether adding memory while the virtual machine is running should be enabled. \n Some guest operating systems may consume more resources or perform less efficiently when they run on hardware that supports adding memory while the machine is running. \n\n This field may only be modified if the virtual machine is not powered on.\n\nIf unset, the value is unchanged."
                    }
                  },
                  "description": "Memory configuration.\nIf unset, guest-specific default values will be used."
                },
                "floppies": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "backing": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "enum": [
                              "IMAGE_FILE",
                              "HOST_DEVICE",
                              "CLIENT_DEVICE"
                            ],
                            "type": "string",
                            "description": "Backing type for the virtual floppy drive."
                          },
                          "image_file": {
                            "type": "string",
                            "description": "Path of the image file that should be used as the virtual floppy drive backing.\nThis field is optional and it is only relevant when the value of Floppy.BackingSpec.type is IMAGE_FILE."
                          },
                          "host_device": {
                            "type": "string",
                            "description": "Name of the device that should be used as the virtual floppy drive backing.\nIf unset, the virtual floppy drive will be configured to automatically detect a suitable host device."
                          }
                        },
                        "description": "Physical resource backing for the virtual floppy drive.\nIf unset, defaults to automatic detection of a suitable host device."
                      },
                      "start_connected": {
                        "type": "boolean",
                        "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset."
                      },
                      "allow_guest_control": {
                        "type": "boolean",
                        "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset."
                      }
                    }
                  },
                  "description": "List of floppy drives.\nIf unset, no floppy drives will be created."
                },
                "guest_OS": {
                  "enum": [
                    "DOS",
                    "WIN_31",
                    "WIN_95",
                    "WIN_98",
                    "WIN_ME",
                    "WIN_NT",
                    "WIN_2000_PRO",
                    "WIN_2000_SERV",
                    "WIN_2000_ADV_SERV",
                    "WIN_XP_HOME",
                    "WIN_XP_PRO",
                    "WIN_XP_PRO_64",
                    "WIN_NET_WEB",
                    "WIN_NET_STANDARD",
                    "WIN_NET_ENTERPRISE",
                    "WIN_NET_DATACENTER",
                    "WIN_NET_BUSINESS",
                    "WIN_NET_STANDARD_64",
                    "WIN_NET_ENTERPRISE_64",
                    "WIN_LONGHORN",
                    "WIN_LONGHORN_64",
                    "WIN_NET_DATACENTER_64",
                    "WIN_VISTA",
                    "WIN_VISTA_64",
                    "WINDOWS_7",
                    "WINDOWS_7_64",
                    "WINDOWS_7_SERVER_64",
                    "WINDOWS_8",
                    "WINDOWS_8_64",
                    "WINDOWS_8_SERVER_64",
                    "WINDOWS_9",
                    "WINDOWS_9_64",
                    "WINDOWS_9_SERVER_64",
                    "WINDOWS_HYPERV",
                    "FREEBSD",
                    "FREEBSD_64",
                    "FREEBSD_11",
                    "FREEBSD_12",
                    "FREEBSD_11_64",
                    "FREEBSD_12_64",
                    "REDHAT",
                    "RHEL_2",
                    "RHEL_3",
                    "RHEL_3_64",
                    "RHEL_4",
                    "RHEL_4_64",
                    "RHEL_5",
                    "RHEL_5_64",
                    "RHEL_6",
                    "RHEL_6_64",
                    "RHEL_7",
                    "RHEL_7_64",
                    "RHEL_8_64",
                    "CENTOS",
                    "CENTOS_64",
                    "CENTOS_6",
                    "CENTOS_6_64",
                    "CENTOS_7",
                    "CENTOS_7_64",
                    "CENTOS_8_64",
                    "ORACLE_LINUX",
                    "ORACLE_LINUX_64",
                    "ORACLE_LINUX_6",
                    "ORACLE_LINUX_6_64",
                    "ORACLE_LINUX_7",
                    "ORACLE_LINUX_7_64",
                    "ORACLE_LINUX_8_64",
                    "SUSE",
                    "SUSE_64",
                    "SLES",
                    "SLES_64",
                    "SLES_10",
                    "SLES_10_64",
                    "SLES_11",
                    "SLES_11_64",
                    "SLES_12",
                    "SLES_12_64",
                    "SLES_15_64",
                    "NLD_9",
                    "OES",
                    "SJDS",
                    "MANDRAKE",
                    "MANDRIVA",
                    "MANDRIVA_64",
                    "TURBO_LINUX",
                    "TURBO_LINUX_64",
                    "UBUNTU",
                    "UBUNTU_64",
                    "DEBIAN_4",
                    "DEBIAN_4_64",
                    "DEBIAN_5",
                    "DEBIAN_5_64",
                    "DEBIAN_6",
                    "DEBIAN_6_64",
                    "DEBIAN_7",
                    "DEBIAN_7_64",
                    "DEBIAN_8",
                    "DEBIAN_8_64",
                    "DEBIAN_9",
                    "DEBIAN_9_64",
                    "DEBIAN_10",
                    "DEBIAN_10_64",
                    "ASIANUX_3",
                    "ASIANUX_3_64",
                    "ASIANUX_4",
                    "ASIANUX_4_64",
                    "ASIANUX_5_64",
                    "ASIANUX_7_64",
                    "ASIANUX_8_64",
                    "OPENSUSE",
                    "OPENSUSE_64",
                    "FEDORA",
                    "FEDORA_64",
                    "COREOS_64",
                    "VMWARE_PHOTON_64",
                    "OTHER_24X_LINUX",
                    "OTHER_24X_LINUX_64",
                    "OTHER_26X_LINUX",
                    "OTHER_26X_LINUX_64",
                    "OTHER_3X_LINUX",
                    "OTHER_3X_LINUX_64",
                    "OTHER_4X_LINUX",
                    "OTHER_4X_LINUX_64",
                    "OTHER_LINUX",
                    "GENERIC_LINUX",
                    "OTHER_LINUX_64",
                    "SOLARIS_6",
                    "SOLARIS_7",
                    "SOLARIS_8",
                    "SOLARIS_9",
                    "SOLARIS_10",
                    "SOLARIS_10_64",
                    "SOLARIS_11_64",
                    "OS2",
                    "ECOMSTATION",
                    "ECOMSTATION_2",
                    "NETWARE_4",
                    "NETWARE_5",
                    "NETWARE_6",
                    "OPENSERVER_5",
                    "OPENSERVER_6",
                    "UNIXWARE_7",
                    "DARWIN",
                    "DARWIN_64",
                    "DARWIN_10",
                    "DARWIN_10_64",
                    "DARWIN_11",
                    "DARWIN_11_64",
                    "DARWIN_12_64",
                    "DARWIN_13_64",
                    "DARWIN_14_64",
                    "DARWIN_15_64",
                    "DARWIN_16_64",
                    "DARWIN_17_64",
                    "DARWIN_18_64",
                    "VMKERNEL",
                    "VMKERNEL_5",
                    "VMKERNEL_6",
                    "VMKERNEL_65",
                    "OTHER",
                    "OTHER_64"
                  ],
                  "type": "string",
                  "description": "Guest OS."
                },
                "placement": {
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "Host onto which the virtual machine should be placed. \n If VM.PlacementSpec.host and VM.PlacementSpec.resource-pool are both specified, VM.PlacementSpec.resource-pool must belong to VM.PlacementSpec.host. \n\n If VM.PlacementSpec.host and VM.PlacementSpec.cluster are both specified, VM.PlacementSpec.host must be a member of VM.PlacementSpec.cluster.\n\nThis field may be unset if VM.PlacementSpec.resource-pool or VM.PlacementSpec.cluster is specified. If unset, the system will attempt to choose a suitable host for the virtual machine; if a host cannot be chosen, the virtual machine creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem."
                    },
                    "folder": {
                      "type": "string",
                      "description": "Virtual machine folder into which the virtual machine should be placed.\nThis field is currently required. In the future, if this field is unset, the system will attempt to choose a suitable folder for the virtual machine; if a folder cannot be chosen, the virtual machine creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder."
                    },
                    "cluster": {
                      "type": "string",
                      "description": "Cluster into which the virtual machine should be placed. \n If VM.PlacementSpec.cluster and VM.PlacementSpec.resource-pool are both specified, VM.PlacementSpec.resource-pool must belong to VM.PlacementSpec.cluster. \n\n If VM.PlacementSpec.cluster and VM.PlacementSpec.host are both specified, VM.PlacementSpec.host must be a member of VM.PlacementSpec.cluster.\n\nIf VM.PlacementSpec.resource-pool or VM.PlacementSpec.host is specified, it is recommended that this field be unset.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource."
                    },
                    "datastore": {
                      "type": "string",
                      "description": "Datastore on which the virtual machine's configuration state should be stored. This datastore will also be used for any virtual disks that are created as part of the virtual machine creation operation.\nThis field is currently required. In the future, if this field is unset, the system will attempt to choose suitable storage for the virtual machine; if storage cannot be chosen, the virtual machine creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore."
                    },
                    "resource_pool": {
                      "type": "string",
                      "description": "Resource pool into which the virtual machine should be placed.\nThis field is currently required if both VM.PlacementSpec.host and VM.PlacementSpec.cluster are unset. In the future, if this field is unset, the system will attempt to choose a suitable resource pool for the virtual machine; if a resource pool cannot be chosen, the virtual machine creation operation will fail.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ResourcePool. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ResourcePool."
                    }
                  },
                  "description": "Virtual machine placement information.\nThis field is currently required. In the future, if this field is unset, the system will attempt to choose suitable resources on which to place the virtual machine."
                },
                "boot_devices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "enum": [
                          "CDROM",
                          "DISK",
                          "ETHERNET",
                          "FLOPPY"
                        ],
                        "type": "string",
                        "description": "Virtual Boot device type."
                      }
                    }
                  },
                  "description": "Boot device configuration.\nIf unset, a server-specific boot sequence will be used."
                },
                "serial_ports": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "backing": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "file": {
                            "type": "string",
                            "description": "Path of the file backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is FILE."
                          },
                          "pipe": {
                            "type": "string",
                            "description": "Name of the pipe backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is one of PIPE_SERVER or PIPE_CLIENT."
                          },
                          "type": {
                            "enum": [
                              "FILE",
                              "HOST_DEVICE",
                              "PIPE_SERVER",
                              "PIPE_CLIENT",
                              "NETWORK_SERVER",
                              "NETWORK_CLIENT"
                            ],
                            "type": "string",
                            "description": "Backing type for the virtual serial port."
                          },
                          "proxy": {
                            "type": "string",
                            "format": "uri",
                            "description": "Proxy service that provides network access to the network backing. If set, the virtual machine initiates a connection with the proxy service and forwards the traffic to the proxy.\nIf unset, no proxy service should be used."
                          },
                          "no_rx_loss": {
                            "type": "boolean",
                            "description": "Flag that enables optimized data transfer over the pipe. When the value is true, the host buffers data to prevent data overrun. This allows the virtual machine to read all of the data transferred over the pipe with no data loss.\nIf unset, defaults to false."
                          },
                          "host_device": {
                            "type": "string",
                            "description": "Name of the device backing the virtual serial port. \n\n\nIf unset, the virtual serial port will be configured to automatically detect a suitable host device."
                          },
                          "network_location": {
                            "type": "string",
                            "format": "uri",
                            "description": "URI specifying the location of the network service backing the virtual serial port. \n   - If Serial.BackingSpec.type is NETWORK_SERVER, this field is the location used by clients to connect to this server. The hostname part of the URI should either be empty or should specify the address of the host on which the virtual machine is running.\n   - If Serial.BackingSpec.type is NETWORK_CLIENT, this field is the location used by the virtual machine to connect to the remote server.\n\n \nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is one of NETWORK_SERVER or NETWORK_CLIENT."
                          }
                        },
                        "description": "Physical resource backing for the virtual serial port.\nIf unset, defaults to automatic detection of a suitable host device."
                      },
                      "yield_on_poll": {
                        "type": "boolean",
                        "description": "CPU yield behavior. If set to true, the virtual machine will periodically relinquish the processor if its sole task is polling the virtual serial port. The amount of time it takes to regain the processor will depend on the degree of other virtual machine activity on the host.\nIf unset, defaults to false."
                      },
                      "start_connected": {
                        "type": "boolean",
                        "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset."
                      },
                      "allow_guest_control": {
                        "type": "boolean",
                        "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset."
                      }
                    }
                  },
                  "description": "List of serial ports.\nIf unset, no serial ports will be created."
                },
                "sata_adapters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bus": {
                        "type": "integer",
                        "format": "int64",
                        "description": "SATA bus number.\nIf unset, the server will choose an available bus number; if none is available, the request will fail."
                      },
                      "type": {
                        "enum": [
                          "AHCI"
                        ],
                        "type": "string",
                        "description": "Adapter type.\nIf unset, a guest-specific default value will be used."
                      },
                      "pci_slot_number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Address of the SATA adapter on the PCI bus.\nIf unset, the server will choose an available address when the virtual machine is powered on."
                      }
                    }
                  },
                  "description": "List of SATA adapters.\nIf unset, any adapters necessary to connect the virtual machine's storage devices will be created; this includes any devices that explicitly specify a SATA host bus adapter, as well as any devices that do not specify a host bus adapter if the guest's preferred adapter type is SATA."
                },
                "scsi_adapters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bus": {
                        "type": "integer",
                        "format": "int64",
                        "description": "SCSI bus number.\nIf unset, the server will choose an available bus number; if none is available, the request will fail."
                      },
                      "type": {
                        "enum": [
                          "BUSLOGIC",
                          "LSILOGIC",
                          "LSILOGICSAS",
                          "PVSCSI"
                        ],
                        "type": "string",
                        "description": "Adapter type.\nIf unset, a guest-specific default value will be used."
                      },
                      "sharing": {
                        "enum": [
                          "NONE",
                          "VIRTUAL",
                          "PHYSICAL"
                        ],
                        "type": "string",
                        "description": "Bus sharing mode.\nIf unset, the adapter will default to NONE."
                      },
                      "pci_slot_number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Address of the SCSI adapter on the PCI bus. If the PCI address is invalid, the server will change it when the VM is started or as the device is hot added.\nIf unset, the server will choose an available address when the virtual machine is powered on."
                      }
                    }
                  },
                  "description": "List of SCSI adapters.\nIf unset, any adapters necessary to connect the virtual machine's storage devices will be created; this includes any devices that explicitly specify a SCSI host bus adapter, as well as any devices that do not specify a host bus adapter if the guest's preferred adapter type is SCSI. The type of the SCSI adapter will be a guest-specific default type."
                },
                "parallel_ports": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "backing": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "file": {
                            "type": "string",
                            "description": "Path of the file that should be used as the virtual parallel port backing.\nThis field is optional and it is only relevant when the value of Parallel.BackingSpec.type is FILE."
                          },
                          "type": {
                            "enum": [
                              "FILE",
                              "HOST_DEVICE"
                            ],
                            "type": "string",
                            "description": "Backing type for the virtual parallel port."
                          },
                          "host_device": {
                            "type": "string",
                            "description": "Name of the device that should be used as the virtual parallel port backing.\nIf unset, the virtual parallel port will be configured to automatically detect a suitable host device."
                          }
                        },
                        "description": "Physical resource backing for the virtual parallel port.\nIf unset, defaults to automatic detection of a suitable host device."
                      },
                      "start_connected": {
                        "type": "boolean",
                        "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset."
                      },
                      "allow_guest_control": {
                        "type": "boolean",
                        "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset."
                      }
                    }
                  },
                  "description": "List of parallel ports.\nIf unset, no parallel ports will be created."
                },
                "storage_policy": {
                  "type": "object",
                  "required": [
                    "policy"
                  ],
                  "properties": {
                    "policy": {
                      "type": "string",
                      "description": "Identifier of the storage policy which should be associated with the virtual machine.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                    }
                  },
                  "description": "The VM.StoragePolicySpec structure contains information about the storage policy that is to be associated with the virtual machine home (which contains the configuration and log files).\nIf unset the datastore default storage policy (if applicable) is applied. Currently a default storage policy is only supported by object datastores : VVol and vSAN. For non-object datastores, if unset then no storage policy would be associated with the virtual machine home."
                },
                "hardware_version": {
                  "enum": [
                    "VMX_03",
                    "VMX_04",
                    "VMX_06",
                    "VMX_07",
                    "VMX_08",
                    "VMX_09",
                    "VMX_10",
                    "VMX_11",
                    "VMX_12",
                    "VMX_13",
                    "VMX_14"
                  ],
                  "type": "string",
                  "description": "Virtual hardware version.\nIf unset, defaults to the most recent version supported by the server."
                }
              },
              "description": "Virtual machine specification."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  deleteVM:
    description: |-
      Deletes a virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getVM:
    description: |-
      Returns information about a virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "guest_OS",
                "name",
                "power_state",
                "hardware",
                "boot",
                "boot_devices",
                "cpu",
                "memory",
                "disks",
                "nics",
                "cdroms",
                "floppies",
                "parallel_ports",
                "serial_ports",
                "sata_adapters",
                "scsi_adapters"
              ],
              "properties": {
                "cpu": {
                  "type": "object",
                  "required": [
                    "count",
                    "cores_per_socket",
                    "hot_add_enabled",
                    "hot_remove_enabled"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of CPU cores."
                    },
                    "hot_add_enabled": {
                      "type": "boolean",
                      "description": "Flag indicating whether adding CPUs while the virtual machine is running is enabled."
                    },
                    "cores_per_socket": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of CPU cores per socket."
                    },
                    "hot_remove_enabled": {
                      "type": "boolean",
                      "description": "Flag indicating whether removing CPUs while the virtual machine is running is enabled."
                    }
                  },
                  "description": "CPU configuration."
                },
                "boot": {
                  "type": "object",
                  "required": [
                    "type",
                    "delay",
                    "retry",
                    "retry_delay",
                    "enter_setup_mode"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "BIOS",
                        "EFI"
                      ],
                      "type": "string",
                      "description": "Firmware type used by the virtual machine."
                    },
                    "delay": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Delay in milliseconds before beginning the firmware boot process when the virtual machine is powered on. This delay may be used to provide a time window for users to connect to the virtual machine console and enter BIOS setup mode."
                    },
                    "retry": {
                      "type": "boolean",
                      "description": "Flag indicating whether the virtual machine will automatically retry the boot process after a failure."
                    },
                    "retry_delay": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Delay in milliseconds before retrying the boot process after a failure; applicable only when Boot.Info.retry is true."
                    },
                    "efi_legacy_boot": {
                      "type": "boolean",
                      "description": "Flag indicating whether to use EFI legacy boot mode.\nThis field is optional and it is only relevant when the value of Boot.Info.type is EFI."
                    },
                    "enter_setup_mode": {
                      "type": "boolean",
                      "description": "Flag indicating whether the firmware boot process will automatically enter setup mode the next time the virtual machine boots. Note that this flag will automatically be reset to false once the virtual machine enters setup mode."
                    },
                    "network_protocol": {
                      "enum": [
                        "IPV4",
                        "IPV6"
                      ],
                      "type": "string",
                      "description": "Protocol to use when attempting to boot the virtual machine over the network.\nThis field is optional and it is only relevant when the value of Boot.Info.type is EFI."
                    }
                  },
                  "description": "Boot configuration."
                },
                "name": {
                  "type": "string",
                  "description": "Virtual machine name."
                },
                "nics": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "required": [
                          "label",
                          "type",
                          "mac_type",
                          "wake_on_lan_enabled",
                          "backing",
                          "state",
                          "start_connected",
                          "allow_guest_control"
                        ],
                        "properties": {
                          "type": {
                            "enum": [
                              "E1000",
                              "E1000E",
                              "PCNET32",
                              "VMXNET",
                              "VMXNET2",
                              "VMXNET3"
                            ],
                            "type": "string",
                            "description": "Ethernet adapter emulation type."
                          },
                          "label": {
                            "type": "string",
                            "description": "Device label."
                          },
                          "state": {
                            "enum": [
                              "CONNECTED",
                              "RECOVERABLE_ERROR",
                              "UNRECOVERABLE_ERROR",
                              "NOT_CONNECTED",
                              "UNKNOWN"
                            ],
                            "type": "string",
                            "description": "Connection status of the virtual device."
                          },
                          "backing": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "enum": [
                                  "STANDARD_PORTGROUP",
                                  "HOST_DEVICE",
                                  "DISTRIBUTED_PORTGROUP",
                                  "OPAQUE_NETWORK"
                                ],
                                "type": "string",
                                "description": "Backing type for the virtual Ethernet adapter."
                              },
                              "network": {
                                "type": "string",
                                "description": "Identifier of the network backing the virtual Ethernet adapter.\nIf unset, the identifier of the network backing could not be determined.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network."
                              },
                              "host_device": {
                                "type": "string",
                                "description": "Name of the device backing the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is HOST_DEVICE."
                              },
                              "network_name": {
                                "type": "string",
                                "description": "Name of the standard portgroup backing the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is STANDARD_PORTGROUP."
                              },
                              "distributed_port": {
                                "type": "string",
                                "description": "Key of the distributed virtual port that backs the virtual Ethernet adapter.\nThis field will be unset if the virtual Ethernet device is not bound to a distributed virtual port; this can happen if the virtual machine is powered off or the virtual Ethernet device is not connected."
                              },
                              "connection_cookie": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Server-generated cookie that identifies the connection to the port. This ookie may be used to verify that the virtual machine is the rightful owner of the port.\nThis field will be unset if the virtual Ethernet device is not bound to a distributed virtual port; this can happen if the virtual machine is powered off or the virtual Ethernet device is not connected."
                              },
                              "opaque_network_id": {
                                "type": "string",
                                "description": "Identifier of the opaque network that backs the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is OPAQUE_NETWORK."
                              },
                              "opaque_network_type": {
                                "type": "string",
                                "description": "Type of the opaque network that backs the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is OPAQUE_NETWORK."
                              },
                              "distributed_switch_uuid": {
                                "type": "string",
                                "description": "UUID of the distributed virtual switch that backs the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is DISTRIBUTED_PORTGROUP."
                              }
                            },
                            "description": "Physical resource backing for the virtual Ethernet adapter."
                          },
                          "mac_type": {
                            "enum": [
                              "MANUAL",
                              "GENERATED",
                              "ASSIGNED"
                            ],
                            "type": "string",
                            "description": "MAC address type."
                          },
                          "mac_address": {
                            "type": "string",
                            "description": "MAC address.\nMay be unset if Ethernet.Info.mac-type is MANUAL and has not been specified, or if Ethernet.Info.mac-type is GENERATED and the virtual machine has never been powered on since the Ethernet adapter was created."
                          },
                          "pci_slot_number": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Address of the virtual Ethernet adapter on the PCI bus. If the PCI address is invalid, the server will change it when the VM is started or as the device is hot added.\nMay be unset if the virtual machine has never been powered on since the adapter was created."
                          },
                          "start_connected": {
                            "type": "boolean",
                            "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on."
                          },
                          "allow_guest_control": {
                            "type": "boolean",
                            "description": "Flag indicating whether the guest can connect and disconnect the device."
                          },
                          "wake_on_lan_enabled": {
                            "type": "boolean",
                            "description": "Flag indicating whether wake-on-LAN is enabled on this virtual Ethernet adapter."
                          },
                          "upt_compatibility_enabled": {
                            "type": "boolean",
                            "description": "Flag indicating whether Universal Pass-Through (UPT) compatibility is enabled on this virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.Info.type is VMXNET3."
                          }
                        }
                      }
                    }
                  },
                  "description": "List of Ethernet adapters.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Ethernet. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Ethernet."
                },
                "disks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "required": [
                          "label",
                          "type",
                          "backing"
                        ],
                        "properties": {
                          "ide": {
                            "type": "object",
                            "required": [
                              "primary",
                              "master"
                            ],
                            "properties": {
                              "master": {
                                "type": "boolean",
                                "description": "Flag specifying whether the device is the master or slave device on the IDE adapter."
                              },
                              "primary": {
                                "type": "boolean",
                                "description": "Flag specifying whether the device is attached to the primary or secondary IDE adapter of the virtual machine."
                              }
                            },
                            "description": "Address of device attached to a virtual IDE adapter.\nWorkaround for PR1459646"
                          },
                          "sata": {
                            "type": "object",
                            "required": [
                              "bus",
                              "unit"
                            ],
                            "properties": {
                              "bus": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Bus number of the adapter to which the device is attached."
                              },
                              "unit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Unit number of the device."
                              }
                            },
                            "description": "Address of device attached to a virtual SATA adapter.\nWorkaround for PR1459646"
                          },
                          "scsi": {
                            "type": "object",
                            "required": [
                              "bus",
                              "unit"
                            ],
                            "properties": {
                              "bus": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Bus number of the adapter to which the device is attached."
                              },
                              "unit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Unit number of the device."
                              }
                            },
                            "description": "Address of device attached to a virtual SCSI adapter.\nWorkaround for PR1459646"
                          },
                          "type": {
                            "enum": [
                              "IDE",
                              "SCSI",
                              "SATA"
                            ],
                            "type": "string",
                            "description": "Type of host bus adapter to which the device is attached."
                          },
                          "label": {
                            "type": "string",
                            "description": "Device label."
                          },
                          "backing": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "enum": [
                                  "VMDK_FILE"
                                ],
                                "type": "string",
                                "description": "Backing type for the virtual disk."
                              },
                              "vmdk_file": {
                                "type": "string",
                                "description": "Path of the VMDK file backing the virtual disk.\nThis field is optional and it is only relevant when the value of Disk.BackingInfo.type is VMDK_FILE."
                              }
                            },
                            "description": "Physical resource backing for the virtual disk."
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Capacity of the virtual disk in bytes.\nIf unset, virtual disk is inaccessible or disk capacity is 0."
                          }
                        }
                      }
                    }
                  },
                  "description": "List of disks.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Disk."
                },
                "cdroms": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "required": [
                          "type",
                          "label",
                          "backing",
                          "state",
                          "start_connected",
                          "allow_guest_control"
                        ],
                        "properties": {
                          "ide": {
                            "type": "object",
                            "required": [
                              "primary",
                              "master"
                            ],
                            "properties": {
                              "master": {
                                "type": "boolean",
                                "description": "Flag specifying whether the device is the master or slave device on the IDE adapter."
                              },
                              "primary": {
                                "type": "boolean",
                                "description": "Flag specifying whether the device is attached to the primary or secondary IDE adapter of the virtual machine."
                              }
                            },
                            "description": "Address of device attached to a virtual IDE adapter.\nThis field is optional and it is only relevant when the value of Cdrom.Info.type is IDE."
                          },
                          "sata": {
                            "type": "object",
                            "required": [
                              "bus",
                              "unit"
                            ],
                            "properties": {
                              "bus": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Bus number of the adapter to which the device is attached."
                              },
                              "unit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Unit number of the device."
                              }
                            },
                            "description": "Address of device attached to a virtual SATA adapter.\nThis field is optional and it is only relevant when the value of Cdrom.Info.type is SATA."
                          },
                          "type": {
                            "enum": [
                              "IDE",
                              "SATA"
                            ],
                            "type": "string",
                            "description": "Type of host bus adapter to which the device is attached."
                          },
                          "label": {
                            "type": "string",
                            "description": "Device label."
                          },
                          "state": {
                            "enum": [
                              "CONNECTED",
                              "RECOVERABLE_ERROR",
                              "UNRECOVERABLE_ERROR",
                              "NOT_CONNECTED",
                              "UNKNOWN"
                            ],
                            "type": "string",
                            "description": "Connection status of the virtual device."
                          },
                          "backing": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "enum": [
                                  "ISO_FILE",
                                  "HOST_DEVICE",
                                  "CLIENT_DEVICE"
                                ],
                                "type": "string",
                                "description": "Backing type for the virtual CD-ROM device."
                              },
                              "iso_file": {
                                "type": "string",
                                "description": "Path of the image file backing the virtual CD-ROM device.\nThis field is optional and it is only relevant when the value of Cdrom.BackingInfo.type is ISO_FILE."
                              },
                              "auto_detect": {
                                "type": "boolean",
                                "description": "Flag indicating whether the virtual CD-ROM device is configured to automatically detect a suitable host device.\nThis field is optional and it is only relevant when the value of Cdrom.BackingInfo.type is HOST_DEVICE."
                              },
                              "host_device": {
                                "type": "string",
                                "description": "Name of the host device backing the virtual CD-ROM device. \n\n\nThis field will be unset if Cdrom.BackingInfo.auto-detect is true and the virtual CD-ROM device is not connected or no suitable device is available on the host."
                              },
                              "device_access_type": {
                                "enum": [
                                  "EMULATION",
                                  "PASSTHRU",
                                  "PASSTHRU_EXCLUSIVE"
                                ],
                                "type": "string",
                                "description": "Access type for the device backing.\nThis field is optional and it is only relevant when the value of Cdrom.BackingInfo.type is one of HOST_DEVICE or CLIENT_DEVICE."
                              }
                            },
                            "description": "Physical resource backing for the virtual CD-ROM device."
                          },
                          "start_connected": {
                            "type": "boolean",
                            "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on."
                          },
                          "allow_guest_control": {
                            "type": "boolean",
                            "description": "Flag indicating whether the guest can connect and disconnect the device."
                          }
                        }
                      }
                    }
                  },
                  "description": "List of CD-ROMs.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Cdrom. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Cdrom."
                },
                "memory": {
                  "type": "object",
                  "required": [
                    "size_MiB",
                    "hot_add_enabled"
                  ],
                  "properties": {
                    "size_MiB": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Memory size in mebibytes."
                    },
                    "hot_add_enabled": {
                      "type": "boolean",
                      "description": "Flag indicating whether adding memory while the virtual machine is running is enabled. \n Some guest operating systems may consume more resources or perform less efficiently when they run on hardware that supports adding memory while the machine is running.\n"
                    },
                    "hot_add_limit_MiB": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The maximum amount of memory, in mebibytes, that can be added to a running virtual machine.\nOnly set when Memory.Info.hot-add-enabled is true and the virtual machine is running."
                    },
                    "hot_add_increment_size_MiB": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The granularity, in mebibytes, at which memory can be added to a running virtual machine. \n When adding memory to a running virtual machine, the amount of memory added must be at least Memory.Info.hot-add-increment-size-mib and the total memory size of the virtual machine must be a multiple of {@link>hotAddIncrementSize}.\n\nOnly set when Memory.Info.hot-add-enabled is true and the virtual machine is running."
                    }
                  },
                  "description": "Memory configuration."
                },
                "floppies": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "required": [
                          "label",
                          "backing",
                          "state",
                          "start_connected",
                          "allow_guest_control"
                        ],
                        "properties": {
                          "label": {
                            "type": "string",
                            "description": "Device label."
                          },
                          "state": {
                            "enum": [
                              "CONNECTED",
                              "RECOVERABLE_ERROR",
                              "UNRECOVERABLE_ERROR",
                              "NOT_CONNECTED",
                              "UNKNOWN"
                            ],
                            "type": "string",
                            "description": "Connection status of the virtual device."
                          },
                          "backing": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "enum": [
                                  "IMAGE_FILE",
                                  "HOST_DEVICE",
                                  "CLIENT_DEVICE"
                                ],
                                "type": "string",
                                "description": "Backing type for the virtual floppy drive."
                              },
                              "image_file": {
                                "type": "string",
                                "description": "Path of the image file backing the virtual floppy drive.\nThis field is optional and it is only relevant when the value of Floppy.BackingInfo.type is IMAGE_FILE."
                              },
                              "auto_detect": {
                                "type": "boolean",
                                "description": "Flag indicating whether the virtual floppy drive is configured to automatically detect a suitable host device.\nThis field is optional and it is only relevant when the value of Floppy.BackingInfo.type is HOST_DEVICE."
                              },
                              "host_device": {
                                "type": "string",
                                "description": "Name of the host device backing the virtual floppy drive. \n\n\nThis field will be unset if Floppy.BackingInfo.auto-detect is true and the virtual floppy drive is not connected or no suitable device is available on the host."
                              }
                            },
                            "description": "Physical resource backing for the virtual floppy drive."
                          },
                          "start_connected": {
                            "type": "boolean",
                            "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on."
                          },
                          "allow_guest_control": {
                            "type": "boolean",
                            "description": "Flag indicating whether the guest can connect and disconnect the device."
                          }
                        }
                      }
                    }
                  },
                  "description": "List of floppy drives.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Floppy. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Floppy."
                },
                "guest_OS": {
                  "enum": [
                    "DOS",
                    "WIN_31",
                    "WIN_95",
                    "WIN_98",
                    "WIN_ME",
                    "WIN_NT",
                    "WIN_2000_PRO",
                    "WIN_2000_SERV",
                    "WIN_2000_ADV_SERV",
                    "WIN_XP_HOME",
                    "WIN_XP_PRO",
                    "WIN_XP_PRO_64",
                    "WIN_NET_WEB",
                    "WIN_NET_STANDARD",
                    "WIN_NET_ENTERPRISE",
                    "WIN_NET_DATACENTER",
                    "WIN_NET_BUSINESS",
                    "WIN_NET_STANDARD_64",
                    "WIN_NET_ENTERPRISE_64",
                    "WIN_LONGHORN",
                    "WIN_LONGHORN_64",
                    "WIN_NET_DATACENTER_64",
                    "WIN_VISTA",
                    "WIN_VISTA_64",
                    "WINDOWS_7",
                    "WINDOWS_7_64",
                    "WINDOWS_7_SERVER_64",
                    "WINDOWS_8",
                    "WINDOWS_8_64",
                    "WINDOWS_8_SERVER_64",
                    "WINDOWS_9",
                    "WINDOWS_9_64",
                    "WINDOWS_9_SERVER_64",
                    "WINDOWS_HYPERV",
                    "FREEBSD",
                    "FREEBSD_64",
                    "FREEBSD_11",
                    "FREEBSD_12",
                    "FREEBSD_11_64",
                    "FREEBSD_12_64",
                    "REDHAT",
                    "RHEL_2",
                    "RHEL_3",
                    "RHEL_3_64",
                    "RHEL_4",
                    "RHEL_4_64",
                    "RHEL_5",
                    "RHEL_5_64",
                    "RHEL_6",
                    "RHEL_6_64",
                    "RHEL_7",
                    "RHEL_7_64",
                    "RHEL_8_64",
                    "CENTOS",
                    "CENTOS_64",
                    "CENTOS_6",
                    "CENTOS_6_64",
                    "CENTOS_7",
                    "CENTOS_7_64",
                    "CENTOS_8_64",
                    "ORACLE_LINUX",
                    "ORACLE_LINUX_64",
                    "ORACLE_LINUX_6",
                    "ORACLE_LINUX_6_64",
                    "ORACLE_LINUX_7",
                    "ORACLE_LINUX_7_64",
                    "ORACLE_LINUX_8_64",
                    "SUSE",
                    "SUSE_64",
                    "SLES",
                    "SLES_64",
                    "SLES_10",
                    "SLES_10_64",
                    "SLES_11",
                    "SLES_11_64",
                    "SLES_12",
                    "SLES_12_64",
                    "SLES_15_64",
                    "NLD_9",
                    "OES",
                    "SJDS",
                    "MANDRAKE",
                    "MANDRIVA",
                    "MANDRIVA_64",
                    "TURBO_LINUX",
                    "TURBO_LINUX_64",
                    "UBUNTU",
                    "UBUNTU_64",
                    "DEBIAN_4",
                    "DEBIAN_4_64",
                    "DEBIAN_5",
                    "DEBIAN_5_64",
                    "DEBIAN_6",
                    "DEBIAN_6_64",
                    "DEBIAN_7",
                    "DEBIAN_7_64",
                    "DEBIAN_8",
                    "DEBIAN_8_64",
                    "DEBIAN_9",
                    "DEBIAN_9_64",
                    "DEBIAN_10",
                    "DEBIAN_10_64",
                    "ASIANUX_3",
                    "ASIANUX_3_64",
                    "ASIANUX_4",
                    "ASIANUX_4_64",
                    "ASIANUX_5_64",
                    "ASIANUX_7_64",
                    "ASIANUX_8_64",
                    "OPENSUSE",
                    "OPENSUSE_64",
                    "FEDORA",
                    "FEDORA_64",
                    "COREOS_64",
                    "VMWARE_PHOTON_64",
                    "OTHER_24X_LINUX",
                    "OTHER_24X_LINUX_64",
                    "OTHER_26X_LINUX",
                    "OTHER_26X_LINUX_64",
                    "OTHER_3X_LINUX",
                    "OTHER_3X_LINUX_64",
                    "OTHER_4X_LINUX",
                    "OTHER_4X_LINUX_64",
                    "OTHER_LINUX",
                    "GENERIC_LINUX",
                    "OTHER_LINUX_64",
                    "SOLARIS_6",
                    "SOLARIS_7",
                    "SOLARIS_8",
                    "SOLARIS_9",
                    "SOLARIS_10",
                    "SOLARIS_10_64",
                    "SOLARIS_11_64",
                    "OS2",
                    "ECOMSTATION",
                    "ECOMSTATION_2",
                    "NETWARE_4",
                    "NETWARE_5",
                    "NETWARE_6",
                    "OPENSERVER_5",
                    "OPENSERVER_6",
                    "UNIXWARE_7",
                    "DARWIN",
                    "DARWIN_64",
                    "DARWIN_10",
                    "DARWIN_10_64",
                    "DARWIN_11",
                    "DARWIN_11_64",
                    "DARWIN_12_64",
                    "DARWIN_13_64",
                    "DARWIN_14_64",
                    "DARWIN_15_64",
                    "DARWIN_16_64",
                    "DARWIN_17_64",
                    "DARWIN_18_64",
                    "VMKERNEL",
                    "VMKERNEL_5",
                    "VMKERNEL_6",
                    "VMKERNEL_65",
                    "OTHER",
                    "OTHER_64"
                  ],
                  "type": "string",
                  "description": "Guest OS."
                },
                "hardware": {
                  "type": "object",
                  "required": [
                    "version",
                    "upgrade_policy",
                    "upgrade_status"
                  ],
                  "properties": {
                    "version": {
                      "enum": [
                        "VMX_03",
                        "VMX_04",
                        "VMX_06",
                        "VMX_07",
                        "VMX_08",
                        "VMX_09",
                        "VMX_10",
                        "VMX_11",
                        "VMX_12",
                        "VMX_13",
                        "VMX_14"
                      ],
                      "type": "string",
                      "description": "Virtual hardware version."
                    },
                    "upgrade_error": {
                      "type": "string",
                      "description": "Reason for the scheduled upgrade failure.\nThis field is optional and it is only relevant when the value of Hardware.Info.upgrade-status is FAILED."
                    },
                    "upgrade_policy": {
                      "enum": [
                        "NEVER",
                        "AFTER_CLEAN_SHUTDOWN",
                        "ALWAYS"
                      ],
                      "type": "string",
                      "description": "Scheduled upgrade policy."
                    },
                    "upgrade_status": {
                      "enum": [
                        "NONE",
                        "PENDING",
                        "SUCCESS",
                        "FAILED"
                      ],
                      "type": "string",
                      "description": "Scheduled upgrade status."
                    },
                    "upgrade_version": {
                      "enum": [
                        "VMX_03",
                        "VMX_04",
                        "VMX_06",
                        "VMX_07",
                        "VMX_08",
                        "VMX_09",
                        "VMX_10",
                        "VMX_11",
                        "VMX_12",
                        "VMX_13",
                        "VMX_14"
                      ],
                      "type": "string",
                      "description": "Target hardware version to be used on the next scheduled virtual hardware upgrade.\nThis field is optional and it is only relevant when the value of Hardware.Info.upgrade-policy is one of AFTER_CLEAN_SHUTDOWN or ALWAYS."
                    }
                  },
                  "description": "Virtual hardware version information."
                },
                "power_state": {
                  "enum": [
                    "POWERED_OFF",
                    "POWERED_ON",
                    "SUSPENDED"
                  ],
                  "type": "string",
                  "description": "Power state of the virtual machine."
                },
                "boot_devices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "nic": {
                        "type": "string",
                        "description": "Virtual Ethernet device. Ethernet device to use as boot device for this entry.\nThis field is optional and it is only relevant when the value of Device.Entry.type is ETHERNET.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.vm.hardware.Ethernet. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.vm.hardware.Ethernet."
                      },
                      "type": {
                        "enum": [
                          "CDROM",
                          "DISK",
                          "ETHERNET",
                          "FLOPPY"
                        ],
                        "type": "string",
                        "description": "Virtual device type."
                      },
                      "disks": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Virtual disk device. List of virtual disks in boot order.\nThis field is optional and it is only relevant when the value of Device.Entry.type is DISK.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.vm.hardware.Disk."
                      }
                    }
                  },
                  "description": "Boot device configuration. If the list has no entries, a server-specific default boot sequence is used."
                },
                "serial_ports": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "required": [
                          "label",
                          "yield_on_poll",
                          "backing",
                          "state",
                          "start_connected",
                          "allow_guest_control"
                        ],
                        "properties": {
                          "label": {
                            "type": "string",
                            "description": "Device label."
                          },
                          "state": {
                            "enum": [
                              "CONNECTED",
                              "RECOVERABLE_ERROR",
                              "UNRECOVERABLE_ERROR",
                              "NOT_CONNECTED",
                              "UNKNOWN"
                            ],
                            "type": "string",
                            "description": "Connection status of the virtual device."
                          },
                          "backing": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "file": {
                                "type": "string",
                                "description": "Path of the file backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is FILE."
                              },
                              "pipe": {
                                "type": "string",
                                "description": "Name of the pipe backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is one of PIPE_SERVER or PIPE_CLIENT."
                              },
                              "type": {
                                "enum": [
                                  "FILE",
                                  "HOST_DEVICE",
                                  "PIPE_SERVER",
                                  "PIPE_CLIENT",
                                  "NETWORK_SERVER",
                                  "NETWORK_CLIENT"
                                ],
                                "type": "string",
                                "description": "Backing type for the virtual serial port."
                              },
                              "proxy": {
                                "type": "string",
                                "format": "uri",
                                "description": "Proxy service that provides network access to the network backing. If set, the virtual machine initiates a connection with the proxy service and forwards the traffic to the proxy.\nIf unset, no proxy service is configured."
                              },
                              "no_rx_loss": {
                                "type": "boolean",
                                "description": "Flag that enables optimized data transfer over the pipe. When the value is true, the host buffers data to prevent data overrun. This allows the virtual machine to read all of the data transferred over the pipe with no data loss.\nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is one of PIPE_SERVER or PIPE_CLIENT."
                              },
                              "auto_detect": {
                                "type": "boolean",
                                "description": "Flag indicating whether the virtual serial port is configured to automatically detect a suitable host device.\nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is HOST_DEVICE."
                              },
                              "host_device": {
                                "type": "string",
                                "description": "Name of the device backing the virtual serial port. \n\n\nThis field will be unset if Serial.BackingInfo.auto-detect is true and the virtual serial port is not connected or no suitable device is available on the host."
                              },
                              "network_location": {
                                "type": "string",
                                "format": "uri",
                                "description": "URI specifying the location of the network service backing the virtual serial port. \n   - If Serial.BackingInfo.type is NETWORK_SERVER, this field is the location used by clients to connect to this server. The hostname part of the URI should either be empty or should specify the address of the host on which the virtual machine is running.\n   - If Serial.BackingInfo.type is NETWORK_CLIENT, this field is the location used by the virtual machine to connect to the remote server.\n\n \nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is one of NETWORK_SERVER or NETWORK_CLIENT."
                              }
                            },
                            "description": "Physical resource backing for the virtual serial port."
                          },
                          "yield_on_poll": {
                            "type": "boolean",
                            "description": "CPU yield behavior. If set to true, the virtual machine will periodically relinquish the processor if its sole task is polling the virtual serial port. The amount of time it takes to regain the processor will depend on the degree of other virtual machine activity on the host."
                          },
                          "start_connected": {
                            "type": "boolean",
                            "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on."
                          },
                          "allow_guest_control": {
                            "type": "boolean",
                            "description": "Flag indicating whether the guest can connect and disconnect the device."
                          }
                        }
                      }
                    }
                  },
                  "description": "List of serial ports.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.SerialPort. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.SerialPort."
                },
                "sata_adapters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "required": [
                          "label",
                          "type",
                          "bus"
                        ],
                        "properties": {
                          "bus": {
                            "type": "integer",
                            "format": "int64",
                            "description": "SATA bus number."
                          },
                          "type": {
                            "enum": [
                              "AHCI"
                            ],
                            "type": "string",
                            "description": "Adapter type."
                          },
                          "label": {
                            "type": "string",
                            "description": "Device label."
                          },
                          "pci_slot_number": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Address of the SATA adapter on the PCI bus.\nMay be unset if the virtual machine has never been powered on since the adapter was created."
                          }
                        }
                      }
                    }
                  },
                  "description": "List of SATA adapters.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.SataAdapter. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.SataAdapter."
                },
                "scsi_adapters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "required": [
                          "label",
                          "type",
                          "scsi",
                          "sharing"
                        ],
                        "properties": {
                          "scsi": {
                            "type": "object",
                            "required": [
                              "bus",
                              "unit"
                            ],
                            "properties": {
                              "bus": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Bus number of the adapter to which the device is attached."
                              },
                              "unit": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Unit number of the device."
                              }
                            },
                            "description": "Address of the SCSI adapter on the SCSI bus."
                          },
                          "type": {
                            "enum": [
                              "BUSLOGIC",
                              "LSILOGIC",
                              "LSILOGICSAS",
                              "PVSCSI"
                            ],
                            "type": "string",
                            "description": "Adapter type."
                          },
                          "label": {
                            "type": "string",
                            "description": "Device label."
                          },
                          "sharing": {
                            "enum": [
                              "NONE",
                              "VIRTUAL",
                              "PHYSICAL"
                            ],
                            "type": "string",
                            "description": "Bus sharing mode."
                          },
                          "pci_slot_number": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Address of the SCSI adapter on the PCI bus. If the PCI address is invalid, the server will change it when the VM is started or as the device is hot added.\nMay be unset if the virtual machine has never been powered on since the adapter was created."
                          }
                        }
                      }
                    }
                  },
                  "description": "List of SCSI adapters.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.ScsiAdapter. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.ScsiAdapter."
                },
                "parallel_ports": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "required": [
                          "label",
                          "backing",
                          "state",
                          "start_connected",
                          "allow_guest_control"
                        ],
                        "properties": {
                          "label": {
                            "type": "string",
                            "description": "Device label."
                          },
                          "state": {
                            "enum": [
                              "CONNECTED",
                              "RECOVERABLE_ERROR",
                              "UNRECOVERABLE_ERROR",
                              "NOT_CONNECTED",
                              "UNKNOWN"
                            ],
                            "type": "string",
                            "description": "Connection status of the virtual device."
                          },
                          "backing": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "file": {
                                "type": "string",
                                "description": "Path of the file backing the virtual parallel port.\nThis field is optional and it is only relevant when the value of Parallel.BackingInfo.type is FILE."
                              },
                              "type": {
                                "enum": [
                                  "FILE",
                                  "HOST_DEVICE"
                                ],
                                "type": "string",
                                "description": "Backing type for the virtual parallel port."
                              },
                              "auto_detect": {
                                "type": "boolean",
                                "description": "Flag indicating whether the virtual parallel port is configured to automatically detect a suitable host device.\nThis field is optional and it is only relevant when the value of Parallel.BackingInfo.type is HOST_DEVICE."
                              },
                              "host_device": {
                                "type": "string",
                                "description": "Name of the device backing the virtual parallel port. \n\n\nThis field will be unset if Parallel.BackingInfo.auto-detect is true and the virtual parallel port is not connected or no suitable device is available on the host."
                              }
                            },
                            "description": "Physical resource backing for the virtual parallel port."
                          },
                          "start_connected": {
                            "type": "boolean",
                            "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on."
                          },
                          "allow_guest_control": {
                            "type": "boolean",
                            "description": "Flag indicating whether the guest can connect and disconnect the device."
                          }
                        }
                      }
                    }
                  },
                  "description": "List of parallel ports.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.ParallelPort. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.ParallelPort."
                }
              }
            }
          }
        }
      ]
  getVMGuestIdentity:
    description: |-
      Return information about the guest.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/guest/identity/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "name",
                "family",
                "full_name",
                "host_name"
              ],
              "properties": {
                "name": {
                  "enum": [
                    "DOS",
                    "WIN_31",
                    "WIN_95",
                    "WIN_98",
                    "WIN_ME",
                    "WIN_NT",
                    "WIN_2000_PRO",
                    "WIN_2000_SERV",
                    "WIN_2000_ADV_SERV",
                    "WIN_XP_HOME",
                    "WIN_XP_PRO",
                    "WIN_XP_PRO_64",
                    "WIN_NET_WEB",
                    "WIN_NET_STANDARD",
                    "WIN_NET_ENTERPRISE",
                    "WIN_NET_DATACENTER",
                    "WIN_NET_BUSINESS",
                    "WIN_NET_STANDARD_64",
                    "WIN_NET_ENTERPRISE_64",
                    "WIN_LONGHORN",
                    "WIN_LONGHORN_64",
                    "WIN_NET_DATACENTER_64",
                    "WIN_VISTA",
                    "WIN_VISTA_64",
                    "WINDOWS_7",
                    "WINDOWS_7_64",
                    "WINDOWS_7_SERVER_64",
                    "WINDOWS_8",
                    "WINDOWS_8_64",
                    "WINDOWS_8_SERVER_64",
                    "WINDOWS_9",
                    "WINDOWS_9_64",
                    "WINDOWS_9_SERVER_64",
                    "WINDOWS_HYPERV",
                    "FREEBSD",
                    "FREEBSD_64",
                    "FREEBSD_11",
                    "FREEBSD_12",
                    "FREEBSD_11_64",
                    "FREEBSD_12_64",
                    "REDHAT",
                    "RHEL_2",
                    "RHEL_3",
                    "RHEL_3_64",
                    "RHEL_4",
                    "RHEL_4_64",
                    "RHEL_5",
                    "RHEL_5_64",
                    "RHEL_6",
                    "RHEL_6_64",
                    "RHEL_7",
                    "RHEL_7_64",
                    "RHEL_8_64",
                    "CENTOS",
                    "CENTOS_64",
                    "CENTOS_6",
                    "CENTOS_6_64",
                    "CENTOS_7",
                    "CENTOS_7_64",
                    "CENTOS_8_64",
                    "ORACLE_LINUX",
                    "ORACLE_LINUX_64",
                    "ORACLE_LINUX_6",
                    "ORACLE_LINUX_6_64",
                    "ORACLE_LINUX_7",
                    "ORACLE_LINUX_7_64",
                    "ORACLE_LINUX_8_64",
                    "SUSE",
                    "SUSE_64",
                    "SLES",
                    "SLES_64",
                    "SLES_10",
                    "SLES_10_64",
                    "SLES_11",
                    "SLES_11_64",
                    "SLES_12",
                    "SLES_12_64",
                    "SLES_15_64",
                    "NLD_9",
                    "OES",
                    "SJDS",
                    "MANDRAKE",
                    "MANDRIVA",
                    "MANDRIVA_64",
                    "TURBO_LINUX",
                    "TURBO_LINUX_64",
                    "UBUNTU",
                    "UBUNTU_64",
                    "DEBIAN_4",
                    "DEBIAN_4_64",
                    "DEBIAN_5",
                    "DEBIAN_5_64",
                    "DEBIAN_6",
                    "DEBIAN_6_64",
                    "DEBIAN_7",
                    "DEBIAN_7_64",
                    "DEBIAN_8",
                    "DEBIAN_8_64",
                    "DEBIAN_9",
                    "DEBIAN_9_64",
                    "DEBIAN_10",
                    "DEBIAN_10_64",
                    "ASIANUX_3",
                    "ASIANUX_3_64",
                    "ASIANUX_4",
                    "ASIANUX_4_64",
                    "ASIANUX_5_64",
                    "ASIANUX_7_64",
                    "ASIANUX_8_64",
                    "OPENSUSE",
                    "OPENSUSE_64",
                    "FEDORA",
                    "FEDORA_64",
                    "COREOS_64",
                    "VMWARE_PHOTON_64",
                    "OTHER_24X_LINUX",
                    "OTHER_24X_LINUX_64",
                    "OTHER_26X_LINUX",
                    "OTHER_26X_LINUX_64",
                    "OTHER_3X_LINUX",
                    "OTHER_3X_LINUX_64",
                    "OTHER_4X_LINUX",
                    "OTHER_4X_LINUX_64",
                    "OTHER_LINUX",
                    "GENERIC_LINUX",
                    "OTHER_LINUX_64",
                    "SOLARIS_6",
                    "SOLARIS_7",
                    "SOLARIS_8",
                    "SOLARIS_9",
                    "SOLARIS_10",
                    "SOLARIS_10_64",
                    "SOLARIS_11_64",
                    "OS2",
                    "ECOMSTATION",
                    "ECOMSTATION_2",
                    "NETWARE_4",
                    "NETWARE_5",
                    "NETWARE_6",
                    "OPENSERVER_5",
                    "OPENSERVER_6",
                    "UNIXWARE_7",
                    "DARWIN",
                    "DARWIN_64",
                    "DARWIN_10",
                    "DARWIN_10_64",
                    "DARWIN_11",
                    "DARWIN_11_64",
                    "DARWIN_12_64",
                    "DARWIN_13_64",
                    "DARWIN_14_64",
                    "DARWIN_15_64",
                    "DARWIN_16_64",
                    "DARWIN_17_64",
                    "DARWIN_18_64",
                    "VMKERNEL",
                    "VMKERNEL_5",
                    "VMKERNEL_6",
                    "VMKERNEL_65",
                    "OTHER",
                    "OTHER_64"
                  ],
                  "type": "string",
                  "description": "Guest operating system identifier (short name)."
                },
                "family": {
                  "enum": [
                    "WINDOWS",
                    "LINUX",
                    "NETWARE",
                    "SOLARIS",
                    "DARWIN",
                    "OTHER"
                  ],
                  "type": "string",
                  "description": "Guest operating system family."
                },
                "full_name": {
                  "type": "object",
                  "required": [
                    "id",
                    "default_message",
                    "args"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                    },
                    "args": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Arguments to be substituted into a message template."
                    },
                    "default_message": {
                      "type": "string",
                      "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                    }
                  },
                  "description": "Guest operating system full name."
                },
                "host_name": {
                  "type": "string",
                  "description": "Hostname of the guest operating system."
                },
                "ip_address": {
                  "type": "string",
                  "description": "IP address assigned by the guest operating system.\nIf unset the guest does not have an IP address."
                }
              }
            }
          }
        }
      ]
  getVMGuestLocalFilesystem:
    description: |-
      Returns details of the local file systems in the guest operating system.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/guest/local-filesystem/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "required": [
                      "capacity",
                      "free_space"
                    ],
                    "properties": {
                      "capacity": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total capacity of the file system, in bytes."
                      },
                      "free_space": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Free space on the file system, in bytes."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
  rebootVMGuestPower:
    description: |-
      Issues a request to the guest operating system asking it to perform a reboot. This request returns immediately and does not wait for the guest operating system to complete the operation.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/guest/poweractionreboot/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  shutdownVMGuestPower:
    description: |-
      Issues a request to the guest operating system asking it to perform a clean shutdown of all services. This request returns immediately and does not wait for the guest operating system to complete the operation.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/guest/poweractionshutdown/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  standbyVMGuestPower:
    description: |-
      Issues a request to the guest operating system asking it to perform a suspend operation.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/guest/poweractionstandby/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getVMGuestPower:
    description: |-
      Returns information about the guest operating system power state.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/guest/power/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "state",
                "operations_ready"
              ],
              "properties": {
                "state": {
                  "enum": [
                    "RUNNING",
                    "SHUTTING_DOWN",
                    "RESETTING",
                    "STANDBY",
                    "NOT_RUNNING",
                    "UNAVAILABLE"
                  ],
                  "type": "string",
                  "description": "The power state of the guest operating system."
                },
                "operations_ready": {
                  "type": "boolean",
                  "description": "Flag indicating if the virtual machine is ready to process soft power operations."
                }
              }
            }
          }
        }
      ]
  upgradeVMHardware:
    description: |-
      Upgrades the virtual machine to a newer virtual hardware version.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/action/upgrade/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "version": {
              "enum": [
                "VMX_03",
                "VMX_04",
                "VMX_06",
                "VMX_07",
                "VMX_08",
                "VMX_09",
                "VMX_10",
                "VMX_11",
                "VMX_12",
                "VMX_13",
                "VMX_14"
              ],
              "type": "string",
              "description": "New virtual machine version.\nIf unset, defaults to the most recent virtual hardware version supported by the server."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  deleteVMHardwareSATAAdapter:
    description: |-
      Removes a virtual SATA adapter from the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/adapter/sata/adapter/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getVMHardwareSATAAdapter:
    description: |-
      Returns information about a virtual SATA adapter.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/adapter/sata/adapter/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "label",
                "type",
                "bus"
              ],
              "properties": {
                "bus": {
                  "type": "integer",
                  "format": "int64",
                  "description": "SATA bus number."
                },
                "type": {
                  "enum": [
                    "AHCI"
                  ],
                  "type": "string",
                  "description": "Adapter type."
                },
                "label": {
                  "type": "string",
                  "description": "Device label."
                },
                "pci_slot_number": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Address of the SATA adapter on the PCI bus.\nMay be unset if the virtual machine has never been powered on since the adapter was created."
                }
              }
            }
          }
        }
      ]
  listVMHardwareSATAAdapters:
    description: |-
      Returns commonly used information about the virtual SATA adapters belonging to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/adapter/sata/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "adapter"
                ],
                "properties": {
                  "adapter": {
                    "type": "string",
                    "description": "Identifier of the virtual SATA adapter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.vm.hardware.SataAdapter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.vm.hardware.SataAdapter."
                  }
                }
              }
            }
          }
        }
      ]
  createVMHardwareSATAAdapter:
    description: |-
      Adds a virtual SATA adapter to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/adapter/sata/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "bus": {
                  "type": "integer",
                  "format": "int64",
                  "description": "SATA bus number.\nIf unset, the server will choose an available bus number; if none is available, the request will fail."
                },
                "type": {
                  "enum": [
                    "AHCI"
                  ],
                  "type": "string",
                  "description": "Adapter type.\nIf unset, a guest-specific default value will be used."
                },
                "pci_slot_number": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Address of the SATA adapter on the PCI bus.\nIf unset, the server will choose an available address when the virtual machine is powered on."
                }
              },
              "description": "Specification for the new virtual SATA adapter."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  deleteVMHardwareSCSIAdapter:
    description: |-
      Removes a virtual SCSI adapter from the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/adapter/scsi/adapter/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getVMHardwareSCSIAdapter:
    description: |-
      Returns information about a virtual SCSI adapter.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/adapter/scsi/adapter/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "label",
                "type",
                "scsi",
                "sharing"
              ],
              "properties": {
                "scsi": {
                  "type": "object",
                  "required": [
                    "bus",
                    "unit"
                  ],
                  "properties": {
                    "bus": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Bus number of the adapter to which the device is attached."
                    },
                    "unit": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Unit number of the device."
                    }
                  },
                  "description": "Address of the SCSI adapter on the SCSI bus."
                },
                "type": {
                  "enum": [
                    "BUSLOGIC",
                    "LSILOGIC",
                    "LSILOGICSAS",
                    "PVSCSI"
                  ],
                  "type": "string",
                  "description": "Adapter type."
                },
                "label": {
                  "type": "string",
                  "description": "Device label."
                },
                "sharing": {
                  "enum": [
                    "NONE",
                    "VIRTUAL",
                    "PHYSICAL"
                  ],
                  "type": "string",
                  "description": "Bus sharing mode."
                },
                "pci_slot_number": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Address of the SCSI adapter on the PCI bus. If the PCI address is invalid, the server will change it when the VM is started or as the device is hot added.\nMay be unset if the virtual machine has never been powered on since the adapter was created."
                }
              }
            }
          }
        }
      ]
  updateVMHardwareSCSIAdapter:
    description: |-
      Updates the configuration of a virtual SCSI adapter.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/adapter/scsi/adapter/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "sharing": {
                  "enum": [
                    "NONE",
                    "VIRTUAL",
                    "PHYSICAL"
                  ],
                  "type": "string",
                  "description": "Bus sharing mode. \n This field may only be modified if the virtual machine is not powered on.\n\nIf unset, the value is unchanged."
                }
              },
              "description": "Specification for updating the virtual SCSI adapter."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listVMHardwareSCSIAdapters:
    description: |-
      Returns commonly used information about the virtual SCSI adapters belonging to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/adapter/scsi/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "adapter"
                ],
                "properties": {
                  "adapter": {
                    "type": "string",
                    "description": "Identifier of the virtual SCSI adapter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.vm.hardware.ScsiAdapter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.vm.hardware.ScsiAdapter."
                  }
                }
              }
            }
          }
        }
      ]
  createVMHardwareSCSIAdapter:
    description: |-
      Adds a virtual SCSI adapter to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/adapter/scsi/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "bus": {
                  "type": "integer",
                  "format": "int64",
                  "description": "SCSI bus number.\nIf unset, the server will choose an available bus number; if none is available, the request will fail."
                },
                "type": {
                  "enum": [
                    "BUSLOGIC",
                    "LSILOGIC",
                    "LSILOGICSAS",
                    "PVSCSI"
                  ],
                  "type": "string",
                  "description": "Adapter type.\nIf unset, a guest-specific default value will be used."
                },
                "sharing": {
                  "enum": [
                    "NONE",
                    "VIRTUAL",
                    "PHYSICAL"
                  ],
                  "type": "string",
                  "description": "Bus sharing mode.\nIf unset, the adapter will default to NONE."
                },
                "pci_slot_number": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Address of the SCSI adapter on the PCI bus. If the PCI address is invalid, the server will change it when the VM is started or as the device is hot added.\nIf unset, the server will choose an available address when the virtual machine is powered on."
                }
              },
              "description": "Specification for the new virtual SCSI adapter."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  getVMHardwareBootDevice:
    description: |-
      Returns an ordered list of boot devices for the virtual machine. If the list is empty, the virtual machine uses a default boot sequence.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/boot/device/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "nic": {
                    "type": "string",
                    "description": "Virtual Ethernet device. Ethernet device to use as boot device for this entry.\nThis field is optional and it is only relevant when the value of Device.Entry.type is ETHERNET.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.vm.hardware.Ethernet. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.vm.hardware.Ethernet."
                  },
                  "type": {
                    "enum": [
                      "CDROM",
                      "DISK",
                      "ETHERNET",
                      "FLOPPY"
                    ],
                    "type": "string",
                    "description": "Virtual device type."
                  },
                  "disks": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Virtual disk device. List of virtual disks in boot order.\nThis field is optional and it is only relevant when the value of Device.Entry.type is DISK.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.vm.hardware.Disk."
                  }
                }
              }
            }
          }
        }
      ]
  setVMHardwareBootDevice:
    description: |-
      Sets the virtual devices that will be used to boot the virtual machine. The virtual machine will check the devices in order, attempting to boot from each, until the virtual machine boots successfully. If the list is empty, the virtual machine will use a default boot sequence. There should be no more than one instance of Device.Entry for a given device type except ETHERNET in the list.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/boot/device/put/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "devices": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "nic": {
                    "type": "string",
                    "description": "Virtual Ethernet device. Ethernet device to use as boot device for this entry.\nThis field is optional and it is only relevant when the value of Device.Entry.type is ETHERNET.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.vm.hardware.Ethernet. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.vm.hardware.Ethernet."
                  },
                  "type": {
                    "enum": [
                      "CDROM",
                      "DISK",
                      "ETHERNET",
                      "FLOPPY"
                    ],
                    "type": "string",
                    "description": "Virtual device type."
                  },
                  "disks": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Virtual disk device. List of virtual disks in boot order.\nThis field is optional and it is only relevant when the value of Device.Entry.type is DISK.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.vm.hardware.Disk."
                  }
                }
              },
              "description": "Ordered list of boot devices."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getVMHardwareBoot:
    description: |-
      Returns the boot-related settings of a virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/boot/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "type",
                "delay",
                "retry",
                "retry_delay",
                "enter_setup_mode"
              ],
              "properties": {
                "type": {
                  "enum": [
                    "BIOS",
                    "EFI"
                  ],
                  "type": "string",
                  "description": "Firmware type used by the virtual machine."
                },
                "delay": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Delay in milliseconds before beginning the firmware boot process when the virtual machine is powered on. This delay may be used to provide a time window for users to connect to the virtual machine console and enter BIOS setup mode."
                },
                "retry": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual machine will automatically retry the boot process after a failure."
                },
                "retry_delay": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Delay in milliseconds before retrying the boot process after a failure; applicable only when Boot.Info.retry is true."
                },
                "efi_legacy_boot": {
                  "type": "boolean",
                  "description": "Flag indicating whether to use EFI legacy boot mode.\nThis field is optional and it is only relevant when the value of Boot.Info.type is EFI."
                },
                "enter_setup_mode": {
                  "type": "boolean",
                  "description": "Flag indicating whether the firmware boot process will automatically enter setup mode the next time the virtual machine boots. Note that this flag will automatically be reset to false once the virtual machine enters setup mode."
                },
                "network_protocol": {
                  "enum": [
                    "IPV4",
                    "IPV6"
                  ],
                  "type": "string",
                  "description": "Protocol to use when attempting to boot the virtual machine over the network.\nThis field is optional and it is only relevant when the value of Boot.Info.type is EFI."
                }
              }
            }
          }
        }
      ]
  updateVMHardwareBoot:
    description: |-
      Updates the boot-related settings of a virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/boot/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "type": {
                  "enum": [
                    "BIOS",
                    "EFI"
                  ],
                  "type": "string",
                  "description": "Firmware type to be used by the virtual machine.\nIf unset, the value is unchanged."
                },
                "delay": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Delay in milliseconds before beginning the firmware boot process when the virtual machine is powered on. This delay may be used to provide a time window for users to connect to the virtual machine console and enter BIOS setup mode.\nIf unset, the value is unchanged."
                },
                "retry": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual machine should automatically retry the boot process after a failure.\nIf unset, the value is unchanged."
                },
                "retry_delay": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Delay in milliseconds before retrying the boot process after a failure; applicable only when Boot.Info.retry is true.\nIf unset, the value is unchanged."
                },
                "efi_legacy_boot": {
                  "type": "boolean",
                  "description": "Flag indicating whether to use EFI legacy boot mode.\nIf unset, the value is unchanged."
                },
                "enter_setup_mode": {
                  "type": "boolean",
                  "description": "Flag indicating whether the firmware boot process should automatically enter setup mode the next time the virtual machine boots. Note that this flag will automatically be reset to false once the virtual machine enters setup mode.\nIf unset, the value is unchanged."
                },
                "network_protocol": {
                  "enum": [
                    "IPV4",
                    "IPV6"
                  ],
                  "type": "string",
                  "description": "Protocol to use when attempting to boot the virtual machine over the network.\nIf unset, the value is unchanged."
                }
              },
              "description": "Specification for updating the boot-related settings of the virtual machine."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  connectVMHardwareCDROM:
    description: |-
      Connects a virtual CD-ROM device of a powered-on virtual machine to its backing. Connecting the virtual device makes the backing accessible from the perspective of the guest operating system. 
       For a powered-off virtual machine, the Cdrom.update operation may be used to configure the virtual CD-ROM device to start in the connected state when the virtual machine is powered on.
      
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/cdrom/cdrom/connect/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteVMHardwareCDROM:
    description: |-
      Removes a virtual CD-ROM device from the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/cdrom/cdrom/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  disconnectVMHardwareCDROM:
    description: |-
      Disconnects a virtual CD-ROM device of a powered-on virtual machine from its backing. The virtual device is still present and its backing configuration is unchanged, but from the perspective of the guest operating system, the CD-ROM device is not connected to its backing resource. 
       For a powered-off virtual machine, the Cdrom.update operation may be used to configure the virtual CD-ROM device to start in the disconnected state when the virtual machine is powered on.
      
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/cdrom/cdrom/disconnect/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getVMHardwareCDROM:
    description: |-
      Returns information about a virtual CD-ROM device.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/cdrom/cdrom/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "type",
                "label",
                "backing",
                "state",
                "start_connected",
                "allow_guest_control"
              ],
              "properties": {
                "ide": {
                  "type": "object",
                  "required": [
                    "primary",
                    "master"
                  ],
                  "properties": {
                    "master": {
                      "type": "boolean",
                      "description": "Flag specifying whether the device is the master or slave device on the IDE adapter."
                    },
                    "primary": {
                      "type": "boolean",
                      "description": "Flag specifying whether the device is attached to the primary or secondary IDE adapter of the virtual machine."
                    }
                  },
                  "description": "Address of device attached to a virtual IDE adapter.\nThis field is optional and it is only relevant when the value of Cdrom.Info.type is IDE."
                },
                "sata": {
                  "type": "object",
                  "required": [
                    "bus",
                    "unit"
                  ],
                  "properties": {
                    "bus": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Bus number of the adapter to which the device is attached."
                    },
                    "unit": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Unit number of the device."
                    }
                  },
                  "description": "Address of device attached to a virtual SATA adapter.\nThis field is optional and it is only relevant when the value of Cdrom.Info.type is SATA."
                },
                "type": {
                  "enum": [
                    "IDE",
                    "SATA"
                  ],
                  "type": "string",
                  "description": "Type of host bus adapter to which the device is attached."
                },
                "label": {
                  "type": "string",
                  "description": "Device label."
                },
                "state": {
                  "enum": [
                    "CONNECTED",
                    "RECOVERABLE_ERROR",
                    "UNRECOVERABLE_ERROR",
                    "NOT_CONNECTED",
                    "UNKNOWN"
                  ],
                  "type": "string",
                  "description": "Connection status of the virtual device."
                },
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "ISO_FILE",
                        "HOST_DEVICE",
                        "CLIENT_DEVICE"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual CD-ROM device."
                    },
                    "iso_file": {
                      "type": "string",
                      "description": "Path of the image file backing the virtual CD-ROM device.\nThis field is optional and it is only relevant when the value of Cdrom.BackingInfo.type is ISO_FILE."
                    },
                    "auto_detect": {
                      "type": "boolean",
                      "description": "Flag indicating whether the virtual CD-ROM device is configured to automatically detect a suitable host device.\nThis field is optional and it is only relevant when the value of Cdrom.BackingInfo.type is HOST_DEVICE."
                    },
                    "host_device": {
                      "type": "string",
                      "description": "Name of the host device backing the virtual CD-ROM device. \n\n\nThis field will be unset if Cdrom.BackingInfo.auto-detect is true and the virtual CD-ROM device is not connected or no suitable device is available on the host."
                    },
                    "device_access_type": {
                      "enum": [
                        "EMULATION",
                        "PASSTHRU",
                        "PASSTHRU_EXCLUSIVE"
                      ],
                      "type": "string",
                      "description": "Access type for the device backing.\nThis field is optional and it is only relevant when the value of Cdrom.BackingInfo.type is one of HOST_DEVICE or CLIENT_DEVICE."
                    }
                  },
                  "description": "Physical resource backing for the virtual CD-ROM device."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device."
                }
              }
            }
          }
        }
      ]
  updateVMHardwareCDROM:
    description: |-
      Updates the configuration of a virtual CD-ROM device.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/cdrom/cdrom/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "ISO_FILE",
                        "HOST_DEVICE",
                        "CLIENT_DEVICE"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual CD-ROM device."
                    },
                    "iso_file": {
                      "type": "string",
                      "description": "Path of the image file that should be used as the virtual CD-ROM device backing.\nThis field is optional and it is only relevant when the value of Cdrom.BackingSpec.type is ISO_FILE."
                    },
                    "host_device": {
                      "type": "string",
                      "description": "Name of the device that should be used as the virtual CD-ROM device backing.\nIf unset, the virtual CD-ROM device will be configured to automatically detect a suitable host device."
                    },
                    "device_access_type": {
                      "enum": [
                        "EMULATION",
                        "PASSTHRU",
                        "PASSTHRU_EXCLUSIVE"
                      ],
                      "type": "string",
                      "description": "Access type for the device backing.\nIf unset, defaults to EMULATION."
                    }
                  },
                  "description": "Physical resource backing for the virtual CD-ROM device. \n This field may only be modified if the virtual machine is not powered on or the virtual CD-ROM device is not connected.\n\nIf unset, the value is unchanged."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nIf unset, the value is unchanged."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device.\nIf unset, the value is unchanged."
                }
              },
              "description": "Specification for updating the virtual CD-ROM device."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listVMHardwareCDROMs:
    description: |-
      Returns commonly used information about the virtual CD-ROM devices belonging to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/cdrom/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "cdrom"
                ],
                "properties": {
                  "cdrom": {
                    "type": "string",
                    "description": "Identifier of the virtual CD-ROM device.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.vm.hardware.Cdrom. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.vm.hardware.Cdrom."
                  }
                }
              }
            }
          }
        }
      ]
  createVMHardwareCDROM:
    description: |-
      Adds a virtual CD-ROM device to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/cdrom/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "ide": {
                  "type": "object",
                  "properties": {
                    "master": {
                      "type": "boolean",
                      "description": "Flag specifying whether the device should be the master or slave device on the IDE adapter.\nIf unset, the server will choose an available connection type. If no IDE connections are available, the request will be rejected."
                    },
                    "primary": {
                      "type": "boolean",
                      "description": "Flag specifying whether the device should be attached to the primary or secondary IDE adapter of the virtual machine.\nIf unset, the server will choose a adapter with an available connection. If no IDE connections are available, the request will be rejected."
                    }
                  },
                  "description": "Address for attaching the device to a virtual IDE adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail."
                },
                "sata": {
                  "type": "object",
                  "required": [
                    "bus"
                  ],
                  "properties": {
                    "bus": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Bus number of the adapter to which the device should be attached."
                    },
                    "unit": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Unit number of the device.\nIf unset, the server will choose an available unit number on the specified adapter. If there are no available connections on the adapter, the request will be rejected."
                    }
                  },
                  "description": "Address for attaching the device to a virtual SATA adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail."
                },
                "type": {
                  "enum": [
                    "IDE",
                    "SATA"
                  ],
                  "type": "string",
                  "description": "Type of host bus adapter to which the device should be attached.\nIf unset, guest-specific default values will be used"
                },
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "ISO_FILE",
                        "HOST_DEVICE",
                        "CLIENT_DEVICE"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual CD-ROM device."
                    },
                    "iso_file": {
                      "type": "string",
                      "description": "Path of the image file that should be used as the virtual CD-ROM device backing.\nThis field is optional and it is only relevant when the value of Cdrom.BackingSpec.type is ISO_FILE."
                    },
                    "host_device": {
                      "type": "string",
                      "description": "Name of the device that should be used as the virtual CD-ROM device backing.\nIf unset, the virtual CD-ROM device will be configured to automatically detect a suitable host device."
                    },
                    "device_access_type": {
                      "enum": [
                        "EMULATION",
                        "PASSTHRU",
                        "PASSTHRU_EXCLUSIVE"
                      ],
                      "type": "string",
                      "description": "Access type for the device backing.\nIf unset, defaults to EMULATION."
                    }
                  },
                  "description": "Physical resource backing for the virtual CD-ROM device.\nIf unset, defaults to automatic detection of a suitable host device."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset."
                }
              },
              "description": "Specification for the new virtual CD-ROM device."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  getVMHardwareCPU:
    description: |-
      Returns the CPU-related settings of a virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/cpu/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "count",
                "cores_per_socket",
                "hot_add_enabled",
                "hot_remove_enabled"
              ],
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Number of CPU cores."
                },
                "hot_add_enabled": {
                  "type": "boolean",
                  "description": "Flag indicating whether adding CPUs while the virtual machine is running is enabled."
                },
                "cores_per_socket": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Number of CPU cores per socket."
                },
                "hot_remove_enabled": {
                  "type": "boolean",
                  "description": "Flag indicating whether removing CPUs while the virtual machine is running is enabled."
                }
              }
            }
          }
        }
      ]
  updateVMHardwareCPU:
    description: |-
      Updates the CPU-related settings of a virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/cpu/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int64",
                  "description": "New number of CPU cores. The number of CPU cores in the virtual machine must be a multiple of the number of cores per socket. \n The supported range of CPU counts is constrained by the configured guest operating system and virtual hardware version of the virtual machine. \n\n If the virtual machine is running, the number of CPU cores may only be increased if Cpu.Info.hot-add-enabled is true, and may only be decreased if Cpu.Info.hot-remove-enabled is true.\n\nIf unset, the value is unchanged."
                },
                "hot_add_enabled": {
                  "type": "boolean",
                  "description": "Flag indicating whether adding CPUs while the virtual machine is running is enabled. \n This field may only be modified if the virtual machine is powered off.\n\nIf unset, the value is unchanged."
                },
                "cores_per_socket": {
                  "type": "integer",
                  "format": "int64",
                  "description": "New number of CPU cores per socket. The number of CPU cores in the virtual machine must be a multiple of the number of cores per socket.\nIf unset, the value is unchanged."
                },
                "hot_remove_enabled": {
                  "type": "boolean",
                  "description": "Flag indicating whether removing CPUs while the virtual machine is running is enabled. \n This field may only be modified if the virtual machine is powered off.\n\nIf unset, the value is unchanged."
                }
              },
              "description": "Specification for updating the CPU-related settings of the virtual machine."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  deleteVMHardwareDisk:
    description: |-
      Removes a virtual disk from the virtual machine. This operation does not destroy the VMDK file that backs the virtual disk. It only detaches the VMDK file from the virtual machine. Once detached, the VMDK file will not be destroyed when the virtual machine to which it was associated is deleted.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/disk/disk/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getVMHardwareDisk:
    description: |-
      Returns information about a virtual disk.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/disk/disk/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "label",
                "type",
                "backing"
              ],
              "properties": {
                "ide": {
                  "type": "object",
                  "required": [
                    "primary",
                    "master"
                  ],
                  "properties": {
                    "master": {
                      "type": "boolean",
                      "description": "Flag specifying whether the device is the master or slave device on the IDE adapter."
                    },
                    "primary": {
                      "type": "boolean",
                      "description": "Flag specifying whether the device is attached to the primary or secondary IDE adapter of the virtual machine."
                    }
                  },
                  "description": "Address of device attached to a virtual IDE adapter.\nWorkaround for PR1459646"
                },
                "sata": {
                  "type": "object",
                  "required": [
                    "bus",
                    "unit"
                  ],
                  "properties": {
                    "bus": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Bus number of the adapter to which the device is attached."
                    },
                    "unit": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Unit number of the device."
                    }
                  },
                  "description": "Address of device attached to a virtual SATA adapter.\nWorkaround for PR1459646"
                },
                "scsi": {
                  "type": "object",
                  "required": [
                    "bus",
                    "unit"
                  ],
                  "properties": {
                    "bus": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Bus number of the adapter to which the device is attached."
                    },
                    "unit": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Unit number of the device."
                    }
                  },
                  "description": "Address of device attached to a virtual SCSI adapter.\nWorkaround for PR1459646"
                },
                "type": {
                  "enum": [
                    "IDE",
                    "SCSI",
                    "SATA"
                  ],
                  "type": "string",
                  "description": "Type of host bus adapter to which the device is attached."
                },
                "label": {
                  "type": "string",
                  "description": "Device label."
                },
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "VMDK_FILE"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual disk."
                    },
                    "vmdk_file": {
                      "type": "string",
                      "description": "Path of the VMDK file backing the virtual disk.\nThis field is optional and it is only relevant when the value of Disk.BackingInfo.type is VMDK_FILE."
                    }
                  },
                  "description": "Physical resource backing for the virtual disk."
                },
                "capacity": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Capacity of the virtual disk in bytes.\nIf unset, virtual disk is inaccessible or disk capacity is 0."
                }
              }
            }
          }
        }
      ]
  updateVMHardwareDisk:
    description: |-
      Updates the configuration of a virtual disk. An update operation can be used to detach the existing VMDK file and attach another VMDK file to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/disk/disk/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "VMDK_FILE"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual disk."
                    },
                    "vmdk_file": {
                      "type": "string",
                      "description": "Path of the VMDK file backing the virtual disk.\nThis field is optional and it is only relevant when the value of Disk.BackingSpec.type is VMDK_FILE."
                    }
                  },
                  "description": "Physical resource backing for the virtual disk. \n This field may only be modified if the virtual machine is not powered on.\n\nIf unset, the value is unchanged."
                }
              },
              "description": "Specification for updating the virtual disk."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listVMHardwareDisks:
    description: |-
      Returns commonly used information about the virtual disks belonging to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/disk/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "disk"
                ],
                "properties": {
                  "disk": {
                    "type": "string",
                    "description": "Identifier of the virtual Disk.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.vm.hardware.Disk."
                  }
                }
              }
            }
          }
        }
      ]
  createVMHardwareDisk:
    description: |-
      Adds a virtual disk to the virtual machine. While adding the virtual disk, a new VMDK file may be created or an existing VMDK file may be used to back the virtual disk.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/disk/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "ide": {
                  "type": "object",
                  "properties": {
                    "master": {
                      "type": "boolean",
                      "description": "Flag specifying whether the device should be the master or slave device on the IDE adapter.\nIf unset, the server will choose an available connection type. If no IDE connections are available, the request will be rejected."
                    },
                    "primary": {
                      "type": "boolean",
                      "description": "Flag specifying whether the device should be attached to the primary or secondary IDE adapter of the virtual machine.\nIf unset, the server will choose a adapter with an available connection. If no IDE connections are available, the request will be rejected."
                    }
                  },
                  "description": "Address for attaching the device to a virtual IDE adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail."
                },
                "sata": {
                  "type": "object",
                  "required": [
                    "bus"
                  ],
                  "properties": {
                    "bus": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Bus number of the adapter to which the device should be attached."
                    },
                    "unit": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Unit number of the device.\nIf unset, the server will choose an available unit number on the specified adapter. If there are no available connections on the adapter, the request will be rejected."
                    }
                  },
                  "description": "Address for attaching the device to a virtual SATA adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail."
                },
                "scsi": {
                  "type": "object",
                  "required": [
                    "bus"
                  ],
                  "properties": {
                    "bus": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Bus number of the adapter to which the device should be attached."
                    },
                    "unit": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Unit number of the device.\nIf unset, the server will choose an available unit number on the specified adapter. If there are no available connections on the adapter, the request will be rejected."
                    }
                  },
                  "description": "Address for attaching the device to a virtual SCSI adapter.\nIf unset, the server will choose an available address; if none is available, the request will fail."
                },
                "type": {
                  "enum": [
                    "IDE",
                    "SCSI",
                    "SATA"
                  ],
                  "type": "string",
                  "description": "Type of host bus adapter to which the device should be attached.\nIf unset, guest-specific default values will be used"
                },
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "VMDK_FILE"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual disk."
                    },
                    "vmdk_file": {
                      "type": "string",
                      "description": "Path of the VMDK file backing the virtual disk.\nThis field is optional and it is only relevant when the value of Disk.BackingSpec.type is VMDK_FILE."
                    }
                  },
                  "description": "Existing physical resource backing for the virtual disk. Exactly one of Disk.CreateSpec.backing or Disk.CreateSpec.new-vmdk must be specified.\nIf unset, the virtual disk will not be connected to an existing backing."
                },
                "new_vmdk": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Base name of the VMDK file. The name should not include the '.vmdk' file extension.\nIf unset, a name (derived from the name of the virtual machine) will be chosen by the server."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Capacity of the virtual disk backing in bytes.\nIf unset, defaults to a guest-specific capacity."
                    },
                    "storage_policy": {
                      "type": "object",
                      "required": [
                        "policy"
                      ],
                      "properties": {
                        "policy": {
                          "type": "string",
                          "description": "Identifier of the storage policy which should be associated with the VMDK file.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                        }
                      },
                      "description": "The Disk.StoragePolicySpec structure contains information about the storage policy that is to be associated the with VMDK file.\nIf unset the default storage policy of the target datastore (if applicable) is applied. Currently a default storage policy is only supported by object based datastores : VVol & vSAN. For non- object datastores, if unset then no storage policy would be associated with the VMDK file."
                    }
                  },
                  "description": "Specification for creating a new VMDK backing for the virtual disk. Exactly one of Disk.CreateSpec.backing or Disk.CreateSpec.new-vmdk must be specified.\nIf unset, a new VMDK backing will not be created."
                }
              },
              "description": "Specification for the new virtual disk."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  listVMHardwareEthernet:
    description: |-
      Returns commonly used information about the virtual Ethernet adapters belonging to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/ethernet/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "nic"
                ],
                "properties": {
                  "nic": {
                    "type": "string",
                    "description": "Identifier of the virtual Ethernet adapter.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.vm.hardware.Ethernet. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.vm.hardware.Ethernet."
                  }
                }
              }
            }
          }
        }
      ]
  connectVMHardwareEthernet:
    description: |-
      Connects a virtual Ethernet adapter of a powered-on virtual machine to its backing. Connecting the virtual device makes the backing accessible from the perspective of the guest operating system. 
       For a powered-off virtual machine, the Ethernet.update operation may be used to configure the virtual Ethernet adapter to start in the connected state when the virtual machine is powered on.
      
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/ethernet/nic/connect/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteVMHardwareEthernet:
    description: |-
      Removes a virtual Ethernet adapter from the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/ethernet/nic/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  disconnectVMHardwareEthernet:
    description: |-
      Disconnects a virtual Ethernet adapter of a powered-on virtual machine from its backing. The virtual device is still present and its backing configuration is unchanged, but from the perspective of the guest operating system, the Ethernet adapter is not connected to its backing resource. 
       For a powered-off virtual machine, the Ethernet.update operation may be used to configure the virtual Ethernet adapter to start in the disconnected state when the virtual machine is powered on.
      
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/ethernet/nic/disconnect/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getVMHardwareEthernet:
    description: |-
      Returns information about a virtual Ethernet adapter.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/ethernet/nic/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "label",
                "type",
                "mac_type",
                "wake_on_lan_enabled",
                "backing",
                "state",
                "start_connected",
                "allow_guest_control"
              ],
              "properties": {
                "type": {
                  "enum": [
                    "E1000",
                    "E1000E",
                    "PCNET32",
                    "VMXNET",
                    "VMXNET2",
                    "VMXNET3"
                  ],
                  "type": "string",
                  "description": "Ethernet adapter emulation type."
                },
                "label": {
                  "type": "string",
                  "description": "Device label."
                },
                "state": {
                  "enum": [
                    "CONNECTED",
                    "RECOVERABLE_ERROR",
                    "UNRECOVERABLE_ERROR",
                    "NOT_CONNECTED",
                    "UNKNOWN"
                  ],
                  "type": "string",
                  "description": "Connection status of the virtual device."
                },
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "STANDARD_PORTGROUP",
                        "HOST_DEVICE",
                        "DISTRIBUTED_PORTGROUP",
                        "OPAQUE_NETWORK"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual Ethernet adapter."
                    },
                    "network": {
                      "type": "string",
                      "description": "Identifier of the network backing the virtual Ethernet adapter.\nIf unset, the identifier of the network backing could not be determined.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network."
                    },
                    "host_device": {
                      "type": "string",
                      "description": "Name of the device backing the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is HOST_DEVICE."
                    },
                    "network_name": {
                      "type": "string",
                      "description": "Name of the standard portgroup backing the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is STANDARD_PORTGROUP."
                    },
                    "distributed_port": {
                      "type": "string",
                      "description": "Key of the distributed virtual port that backs the virtual Ethernet adapter.\nThis field will be unset if the virtual Ethernet device is not bound to a distributed virtual port; this can happen if the virtual machine is powered off or the virtual Ethernet device is not connected."
                    },
                    "connection_cookie": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Server-generated cookie that identifies the connection to the port. This ookie may be used to verify that the virtual machine is the rightful owner of the port.\nThis field will be unset if the virtual Ethernet device is not bound to a distributed virtual port; this can happen if the virtual machine is powered off or the virtual Ethernet device is not connected."
                    },
                    "opaque_network_id": {
                      "type": "string",
                      "description": "Identifier of the opaque network that backs the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is OPAQUE_NETWORK."
                    },
                    "opaque_network_type": {
                      "type": "string",
                      "description": "Type of the opaque network that backs the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is OPAQUE_NETWORK."
                    },
                    "distributed_switch_uuid": {
                      "type": "string",
                      "description": "UUID of the distributed virtual switch that backs the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingInfo.type is DISTRIBUTED_PORTGROUP."
                    }
                  },
                  "description": "Physical resource backing for the virtual Ethernet adapter."
                },
                "mac_type": {
                  "enum": [
                    "MANUAL",
                    "GENERATED",
                    "ASSIGNED"
                  ],
                  "type": "string",
                  "description": "MAC address type."
                },
                "mac_address": {
                  "type": "string",
                  "description": "MAC address.\nMay be unset if Ethernet.Info.mac-type is MANUAL and has not been specified, or if Ethernet.Info.mac-type is GENERATED and the virtual machine has never been powered on since the Ethernet adapter was created."
                },
                "pci_slot_number": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Address of the virtual Ethernet adapter on the PCI bus. If the PCI address is invalid, the server will change it when the VM is started or as the device is hot added.\nMay be unset if the virtual machine has never been powered on since the adapter was created."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device."
                },
                "wake_on_lan_enabled": {
                  "type": "boolean",
                  "description": "Flag indicating whether wake-on-LAN is enabled on this virtual Ethernet adapter."
                },
                "upt_compatibility_enabled": {
                  "type": "boolean",
                  "description": "Flag indicating whether Universal Pass-Through (UPT) compatibility is enabled on this virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.Info.type is VMXNET3."
                }
              }
            }
          }
        }
      ]
  updateVMHardwareEthernet:
    description: |-
      Updates the configuration of a virtual Ethernet adapter.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/ethernet/nic/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "STANDARD_PORTGROUP",
                        "HOST_DEVICE",
                        "DISTRIBUTED_PORTGROUP",
                        "OPAQUE_NETWORK"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual Ethernet adapter."
                    },
                    "network": {
                      "type": "string",
                      "description": "Identifier of the network that backs the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingSpec.type is one of STANDARD_PORTGROUP, DISTRIBUTED_PORTGROUP, or OPAQUE_NETWORK.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network."
                    },
                    "distributed_port": {
                      "type": "string",
                      "description": "Key of the distributed virtual port that backs the virtual Ethernet adapter. Depending on the type of the Portgroup, the port may be specified using this field. If the portgroup type is early-binding (also known as static), a port is assigned when the Ethernet adapter is configured to use the port. The port may be either automatically or specifically assigned based on the value of this field. If the portgroup type is ephemeral, the port is created and assigned to a virtual machine when it is powered on and the Ethernet adapter is connected. This field cannot be specified as no free ports exist before use.\nMay be used to specify a port when the network specified on the Ethernet.BackingSpec.network field is a static or early binding distributed portgroup. If unset, the port will be automatically assigned to the Ethernet adapter based on the policy embodied by the portgroup type."
                    }
                  },
                  "description": "Physical resource backing for the virtual Ethernet adapter. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged."
                },
                "mac_type": {
                  "enum": [
                    "MANUAL",
                    "GENERATED",
                    "ASSIGNED"
                  ],
                  "type": "string",
                  "description": "MAC address type. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged."
                },
                "mac_address": {
                  "type": "string",
                  "description": "MAC address. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged. Must be specified if Ethernet.UpdateSpec.mac-type is MANUAL. Must be unset if the MAC address type is not MANUAL."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nIf unset, the value is unchanged."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device.\nIf unset, the value is unchanged."
                },
                "wake_on_lan_enabled": {
                  "type": "boolean",
                  "description": "Flag indicating whether wake-on-LAN shoud be enabled on this virtual Ethernet adapter. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged."
                },
                "upt_compatibility_enabled": {
                  "type": "boolean",
                  "description": "Flag indicating whether Universal Pass-Through (UPT) compatibility should be enabled on this virtual Ethernet adapter. \n This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.\n\nIf unset, the value is unchanged. Must be unset if the emulation type of the virtual Ethernet adapter is not VMXNET3."
                }
              },
              "description": "Specification for updating the virtual Ethernet adapter."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  createVMHardwareEthernet:
    description: |-
      Adds a virtual Ethernet adapter to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/ethernet/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "type": {
                  "enum": [
                    "E1000",
                    "E1000E",
                    "PCNET32",
                    "VMXNET",
                    "VMXNET2",
                    "VMXNET3"
                  ],
                  "type": "string",
                  "description": "Ethernet adapter emulation type.\nIf unset, defaults to a guest-specific type."
                },
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "STANDARD_PORTGROUP",
                        "HOST_DEVICE",
                        "DISTRIBUTED_PORTGROUP",
                        "OPAQUE_NETWORK"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual Ethernet adapter."
                    },
                    "network": {
                      "type": "string",
                      "description": "Identifier of the network that backs the virtual Ethernet adapter.\nThis field is optional and it is only relevant when the value of Ethernet.BackingSpec.type is one of STANDARD_PORTGROUP, DISTRIBUTED_PORTGROUP, or OPAQUE_NETWORK.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network."
                    },
                    "distributed_port": {
                      "type": "string",
                      "description": "Key of the distributed virtual port that backs the virtual Ethernet adapter. Depending on the type of the Portgroup, the port may be specified using this field. If the portgroup type is early-binding (also known as static), a port is assigned when the Ethernet adapter is configured to use the port. The port may be either automatically or specifically assigned based on the value of this field. If the portgroup type is ephemeral, the port is created and assigned to a virtual machine when it is powered on and the Ethernet adapter is connected. This field cannot be specified as no free ports exist before use.\nMay be used to specify a port when the network specified on the Ethernet.BackingSpec.network field is a static or early binding distributed portgroup. If unset, the port will be automatically assigned to the Ethernet adapter based on the policy embodied by the portgroup type."
                    }
                  },
                  "description": "Physical resource backing for the virtual Ethernet adapter.\nIf unset, the system may try to find an appropriate backing. If one is not found, the request will fail."
                },
                "mac_type": {
                  "enum": [
                    "MANUAL",
                    "GENERATED",
                    "ASSIGNED"
                  ],
                  "type": "string",
                  "description": "MAC address type.\nIf unset, defaults to GENERATED."
                },
                "mac_address": {
                  "type": "string",
                  "description": "MAC address.\nWorkaround for PR1459647"
                },
                "pci_slot_number": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Address of the virtual Ethernet adapter on the PCI bus. If the PCI address is invalid, the server will change when it the VM is started or as the device is hot added.\nIf unset, the server will choose an available address when the virtual machine is powered on."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset."
                },
                "wake_on_lan_enabled": {
                  "type": "boolean",
                  "description": "Flag indicating whether wake-on-LAN is enabled on this virtual Ethernet adapter.\nDefaults to false if unset."
                },
                "upt_compatibility_enabled": {
                  "type": "boolean",
                  "description": "Flag indicating whether Universal Pass-Through (UPT) compatibility is enabled on this virtual Ethernet adapter.\nIf unset, defaults to false."
                }
              },
              "description": "Specification for the new virtual Ethernet adapter."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  connectVMHardwareFloppy:
    description: |-
      Connects a virtual floppy drive of a powered-on virtual machine to its backing. Connecting the virtual device makes the backing accessible from the perspective of the guest operating system. 
       For a powered-off virtual machine, the Floppy.update operation may be used to configure the virtual floppy drive to start in the connected state when the virtual machine is powered on.
      
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/floppy/floppy/connect/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteVMHardwareFloppy:
    description: |-
      Removes a virtual floppy drive from the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/floppy/floppy/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  disconnectVMHardwareFloppy:
    description: |-
      Disconnects a virtual floppy drive of a powered-on virtual machine from its backing. The virtual device is still present and its backing configuration is unchanged, but from the perspective of the guest operating system, the floppy drive is not connected to its backing resource. 
       For a powered-off virtual machine, the Floppy.update operation may be used to configure the virtual floppy floppy to start in the disconnected state when the virtual machine is powered on.
      
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/floppy/floppy/disconnect/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getVMHardwareFloppy:
    description: |-
      Returns information about a virtual floppy drive.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/floppy/floppy/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "label",
                "backing",
                "state",
                "start_connected",
                "allow_guest_control"
              ],
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Device label."
                },
                "state": {
                  "enum": [
                    "CONNECTED",
                    "RECOVERABLE_ERROR",
                    "UNRECOVERABLE_ERROR",
                    "NOT_CONNECTED",
                    "UNKNOWN"
                  ],
                  "type": "string",
                  "description": "Connection status of the virtual device."
                },
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "IMAGE_FILE",
                        "HOST_DEVICE",
                        "CLIENT_DEVICE"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual floppy drive."
                    },
                    "image_file": {
                      "type": "string",
                      "description": "Path of the image file backing the virtual floppy drive.\nThis field is optional and it is only relevant when the value of Floppy.BackingInfo.type is IMAGE_FILE."
                    },
                    "auto_detect": {
                      "type": "boolean",
                      "description": "Flag indicating whether the virtual floppy drive is configured to automatically detect a suitable host device.\nThis field is optional and it is only relevant when the value of Floppy.BackingInfo.type is HOST_DEVICE."
                    },
                    "host_device": {
                      "type": "string",
                      "description": "Name of the host device backing the virtual floppy drive. \n\n\nThis field will be unset if Floppy.BackingInfo.auto-detect is true and the virtual floppy drive is not connected or no suitable device is available on the host."
                    }
                  },
                  "description": "Physical resource backing for the virtual floppy drive."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device."
                }
              }
            }
          }
        }
      ]
  updateVMHardwareFloppy:
    description: |-
      Updates the configuration of a virtual floppy drive.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/floppy/floppy/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "IMAGE_FILE",
                        "HOST_DEVICE",
                        "CLIENT_DEVICE"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual floppy drive."
                    },
                    "image_file": {
                      "type": "string",
                      "description": "Path of the image file that should be used as the virtual floppy drive backing.\nThis field is optional and it is only relevant when the value of Floppy.BackingSpec.type is IMAGE_FILE."
                    },
                    "host_device": {
                      "type": "string",
                      "description": "Name of the device that should be used as the virtual floppy drive backing.\nIf unset, the virtual floppy drive will be configured to automatically detect a suitable host device."
                    }
                  },
                  "description": "Physical resource backing for the virtual floppy drive. \n This field may only be modified if the virtual machine is not powered on or the virtual floppy drive is not connected.\n\nIf unset, the value is unchanged."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nIf unset, the value is unchanged."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device.\nIf unset, the value is unchanged."
                }
              },
              "description": "Specification for updating the virtual floppy drive."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listVMHardwareFloppies:
    description: |-
      Returns commonly used information about the virtual floppy drives belonging to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/floppy/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "floppy"
                ],
                "properties": {
                  "floppy": {
                    "type": "string",
                    "description": "Identifier of the virtual floppy drive.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.vm.hardware.Floppy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.vm.hardware.Floppy."
                  }
                }
              }
            }
          }
        }
      ]
  createVMHardwareFloppy:
    description: |-
      Adds a virtual floppy drive to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/floppy/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "IMAGE_FILE",
                        "HOST_DEVICE",
                        "CLIENT_DEVICE"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual floppy drive."
                    },
                    "image_file": {
                      "type": "string",
                      "description": "Path of the image file that should be used as the virtual floppy drive backing.\nThis field is optional and it is only relevant when the value of Floppy.BackingSpec.type is IMAGE_FILE."
                    },
                    "host_device": {
                      "type": "string",
                      "description": "Name of the device that should be used as the virtual floppy drive backing.\nIf unset, the virtual floppy drive will be configured to automatically detect a suitable host device."
                    }
                  },
                  "description": "Physical resource backing for the virtual floppy drive.\nIf unset, defaults to automatic detection of a suitable host device."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset."
                }
              },
              "description": "Specification for the new virtual floppy drive."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  getVMHardware:
    description: |-
      Returns the virtual hardware settings of a virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "version",
                "upgrade_policy",
                "upgrade_status"
              ],
              "properties": {
                "version": {
                  "enum": [
                    "VMX_03",
                    "VMX_04",
                    "VMX_06",
                    "VMX_07",
                    "VMX_08",
                    "VMX_09",
                    "VMX_10",
                    "VMX_11",
                    "VMX_12",
                    "VMX_13",
                    "VMX_14"
                  ],
                  "type": "string",
                  "description": "Virtual hardware version."
                },
                "upgrade_error": {
                  "type": "string",
                  "description": "Reason for the scheduled upgrade failure.\nThis field is optional and it is only relevant when the value of Hardware.Info.upgrade-status is FAILED."
                },
                "upgrade_policy": {
                  "enum": [
                    "NEVER",
                    "AFTER_CLEAN_SHUTDOWN",
                    "ALWAYS"
                  ],
                  "type": "string",
                  "description": "Scheduled upgrade policy."
                },
                "upgrade_status": {
                  "enum": [
                    "NONE",
                    "PENDING",
                    "SUCCESS",
                    "FAILED"
                  ],
                  "type": "string",
                  "description": "Scheduled upgrade status."
                },
                "upgrade_version": {
                  "enum": [
                    "VMX_03",
                    "VMX_04",
                    "VMX_06",
                    "VMX_07",
                    "VMX_08",
                    "VMX_09",
                    "VMX_10",
                    "VMX_11",
                    "VMX_12",
                    "VMX_13",
                    "VMX_14"
                  ],
                  "type": "string",
                  "description": "Target hardware version to be used on the next scheduled virtual hardware upgrade.\nThis field is optional and it is only relevant when the value of Hardware.Info.upgrade-policy is one of AFTER_CLEAN_SHUTDOWN or ALWAYS."
                }
              }
            }
          }
        }
      ]
  getVMHardwareMemory:
    description: |-
      Returns the memory-related settings of a virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/memory/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "size_MiB",
                "hot_add_enabled"
              ],
              "properties": {
                "size_MiB": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Memory size in mebibytes."
                },
                "hot_add_enabled": {
                  "type": "boolean",
                  "description": "Flag indicating whether adding memory while the virtual machine is running is enabled. \n Some guest operating systems may consume more resources or perform less efficiently when they run on hardware that supports adding memory while the machine is running.\n"
                },
                "hot_add_limit_MiB": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The maximum amount of memory, in mebibytes, that can be added to a running virtual machine.\nOnly set when Memory.Info.hot-add-enabled is true and the virtual machine is running."
                },
                "hot_add_increment_size_MiB": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The granularity, in mebibytes, at which memory can be added to a running virtual machine. \n When adding memory to a running virtual machine, the amount of memory added must be at least Memory.Info.hot-add-increment-size-mib and the total memory size of the virtual machine must be a multiple of {@link>hotAddIncrementSize}.\n\nOnly set when Memory.Info.hot-add-enabled is true and the virtual machine is running."
                }
              }
            }
          }
        }
      ]
  updateVMHardwareMemory:
    description: |-
      Updates the memory-related settings of a virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/memory/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "size_MiB": {
                  "type": "integer",
                  "format": "int64",
                  "description": "New memory size in mebibytes. \n The supported range of memory sizes is constrained by the configured guest operating system and virtual hardware version of the virtual machine. \n\n If the virtual machine is running, this value may only be changed if Memory.Info.hot-add-enabled is true, and the new memory size must satisfy the constraints specified by Memory.Info.hot-add-increment-size-mib and Memory.Info.hot-add-limit-mib.\n\nIf unset, the value is unchanged."
                },
                "hot_add_enabled": {
                  "type": "boolean",
                  "description": "Flag indicating whether adding memory while the virtual machine is running should be enabled. \n Some guest operating systems may consume more resources or perform less efficiently when they run on hardware that supports adding memory while the machine is running. \n\n This field may only be modified if the virtual machine is not powered on.\n\nIf unset, the value is unchanged."
                }
              },
              "description": "Specification for updating the memory-related settings of the virtual machine."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listVMHardwareParallelPorts:
    description: |-
      Returns commonly used information about the virtual parallel ports belonging to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/parallel/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "port"
                ],
                "properties": {
                  "port": {
                    "type": "string",
                    "description": "Identifier of the virtual parallel port.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.vm.hardware.ParallelPort. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.vm.hardware.ParallelPort."
                  }
                }
              }
            }
          }
        }
      ]
  connectVMHardwareParallelPort:
    description: |-
      Connects a virtual parallel port of a powered-on virtual machine to its backing. Connecting the virtual device makes the backing accessible from the perspective of the guest operating system. 
       For a powered-off virtual machine, the Parallel.update operation may be used to configure the virtual parallel port to start in the connected state when the virtual machine is powered on.
      
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/parallel/port/connect/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteVMHardwareParallelPort:
    description: |-
      Removes a virtual parallel port from the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/parallel/port/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  disconnectVMHardwareParallelPort:
    description: |-
      Disconnects a virtual parallel port of a powered-on virtual machine from its backing. The virtual device is still present and its backing configuration is unchanged, but from the perspective of the guest operating system, the parallel port is not connected to its backing. 
       For a powered-off virtual machine, the Parallel.update operation may be used to configure the virtual parallel port to start in the disconnected state when the virtual machine is powered on.
      
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/parallel/port/disconnect/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getVMHardwareParallelPort:
    description: |-
      Returns information about a virtual parallel port.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/parallel/port/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "label",
                "backing",
                "state",
                "start_connected",
                "allow_guest_control"
              ],
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Device label."
                },
                "state": {
                  "enum": [
                    "CONNECTED",
                    "RECOVERABLE_ERROR",
                    "UNRECOVERABLE_ERROR",
                    "NOT_CONNECTED",
                    "UNKNOWN"
                  ],
                  "type": "string",
                  "description": "Connection status of the virtual device."
                },
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "Path of the file backing the virtual parallel port.\nThis field is optional and it is only relevant when the value of Parallel.BackingInfo.type is FILE."
                    },
                    "type": {
                      "enum": [
                        "FILE",
                        "HOST_DEVICE"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual parallel port."
                    },
                    "auto_detect": {
                      "type": "boolean",
                      "description": "Flag indicating whether the virtual parallel port is configured to automatically detect a suitable host device.\nThis field is optional and it is only relevant when the value of Parallel.BackingInfo.type is HOST_DEVICE."
                    },
                    "host_device": {
                      "type": "string",
                      "description": "Name of the device backing the virtual parallel port. \n\n\nThis field will be unset if Parallel.BackingInfo.auto-detect is true and the virtual parallel port is not connected or no suitable device is available on the host."
                    }
                  },
                  "description": "Physical resource backing for the virtual parallel port."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device."
                }
              }
            }
          }
        }
      ]
  updateVMHardwareParallelPort:
    description: |-
      Updates the configuration of a virtual parallel port.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/parallel/port/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "Path of the file that should be used as the virtual parallel port backing.\nThis field is optional and it is only relevant when the value of Parallel.BackingSpec.type is FILE."
                    },
                    "type": {
                      "enum": [
                        "FILE",
                        "HOST_DEVICE"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual parallel port."
                    },
                    "host_device": {
                      "type": "string",
                      "description": "Name of the device that should be used as the virtual parallel port backing.\nIf unset, the virtual parallel port will be configured to automatically detect a suitable host device."
                    }
                  },
                  "description": "Physical resource backing for the virtual parallel port. \n This field may only be modified if the virtual machine is not powered on or the virtual parallel port is not connected.\n\nIf unset, the value is unchanged."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nIf unset, the value is unchanged."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device.\nIf unset, the value is unchanged."
                }
              },
              "description": "Specification for updating the virtual parallel port."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  createVMHardwareParallelPort:
    description: |-
      Adds a virtual parallel port to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/parallel/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "Path of the file that should be used as the virtual parallel port backing.\nThis field is optional and it is only relevant when the value of Parallel.BackingSpec.type is FILE."
                    },
                    "type": {
                      "enum": [
                        "FILE",
                        "HOST_DEVICE"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual parallel port."
                    },
                    "host_device": {
                      "type": "string",
                      "description": "Name of the device that should be used as the virtual parallel port backing.\nIf unset, the virtual parallel port will be configured to automatically detect a suitable host device."
                    }
                  },
                  "description": "Physical resource backing for the virtual parallel port.\nIf unset, defaults to automatic detection of a suitable host device."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset."
                }
              },
              "description": "Specification for the new virtual parallel port."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  updateVMHardware:
    description: |-
      Updates the virtual hardware settings of a virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "upgrade_policy": {
                  "enum": [
                    "NEVER",
                    "AFTER_CLEAN_SHUTDOWN",
                    "ALWAYS"
                  ],
                  "type": "string",
                  "description": "Scheduled upgrade policy. \n If set to NEVER, the Hardware.Info.upgrade-version field will be reset to unset.\n\nIf unset, the value is unchanged."
                },
                "upgrade_version": {
                  "enum": [
                    "VMX_03",
                    "VMX_04",
                    "VMX_06",
                    "VMX_07",
                    "VMX_08",
                    "VMX_09",
                    "VMX_10",
                    "VMX_11",
                    "VMX_12",
                    "VMX_13",
                    "VMX_14"
                  ],
                  "type": "string",
                  "description": "Target hardware version to be used on the next scheduled virtual hardware upgrade. \n If specified, this field must represent a newer virtual hardware version than the current virtual hardware version reported in Hardware.Info.version.\n\nIf Hardware.UpdateSpec.upgrade-policy is set to NEVER, this field must be unset. Otherwise, if this field is unset, default to the most recent virtual hardware version supported by the server."
                }
              },
              "description": "Specification for updating the virtual hardware settings of the virtual machine."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  listVMHardwareSerialPorts:
    description: |-
      Returns commonly used information about the virtual serial ports belonging to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/serial/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "port"
                ],
                "properties": {
                  "port": {
                    "type": "string",
                    "description": "Identifier of the virtual serial port.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.vm.hardware.SerialPort. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.vm.hardware.SerialPort."
                  }
                }
              }
            }
          }
        }
      ]
  connectVMHardwareSerialPort:
    description: |-
      Connects a virtual serial port of a powered-on virtual machine to its backing. Connecting the virtual device makes the backing accessible from the perspective of the guest operating system. 
       For a powered-off virtual machine, the Serial.update operation may be used to configure the virtual serial port to start in the connected state when the virtual machine is powered on.
      
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/serial/port/connect/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteVMHardwareSerialPort:
    description: |-
      Removes a virtual serial port from the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/serial/port/delete/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  disconnectVMHardwareSerialPort:
    description: |-
      Disconnects a virtual serial port of a powered-on virtual machine from its backing. The virtual device is still present and its backing configuration is unchanged, but from the perspective of the guest operating system, the serial port is not connected to its backing. 
       For a powered-off virtual machine, the Serial.update operation may be used to configure the virtual serial port to start in the disconnected state when the virtual machine is powered on.
      
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/serial/port/disconnect/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getVMHardwareSerialPort:
    description: |-
      Returns information about a virtual serial port.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/serial/port/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "label",
                "yield_on_poll",
                "backing",
                "state",
                "start_connected",
                "allow_guest_control"
              ],
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Device label."
                },
                "state": {
                  "enum": [
                    "CONNECTED",
                    "RECOVERABLE_ERROR",
                    "UNRECOVERABLE_ERROR",
                    "NOT_CONNECTED",
                    "UNKNOWN"
                  ],
                  "type": "string",
                  "description": "Connection status of the virtual device."
                },
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "Path of the file backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is FILE."
                    },
                    "pipe": {
                      "type": "string",
                      "description": "Name of the pipe backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is one of PIPE_SERVER or PIPE_CLIENT."
                    },
                    "type": {
                      "enum": [
                        "FILE",
                        "HOST_DEVICE",
                        "PIPE_SERVER",
                        "PIPE_CLIENT",
                        "NETWORK_SERVER",
                        "NETWORK_CLIENT"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual serial port."
                    },
                    "proxy": {
                      "type": "string",
                      "format": "uri",
                      "description": "Proxy service that provides network access to the network backing. If set, the virtual machine initiates a connection with the proxy service and forwards the traffic to the proxy.\nIf unset, no proxy service is configured."
                    },
                    "no_rx_loss": {
                      "type": "boolean",
                      "description": "Flag that enables optimized data transfer over the pipe. When the value is true, the host buffers data to prevent data overrun. This allows the virtual machine to read all of the data transferred over the pipe with no data loss.\nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is one of PIPE_SERVER or PIPE_CLIENT."
                    },
                    "auto_detect": {
                      "type": "boolean",
                      "description": "Flag indicating whether the virtual serial port is configured to automatically detect a suitable host device.\nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is HOST_DEVICE."
                    },
                    "host_device": {
                      "type": "string",
                      "description": "Name of the device backing the virtual serial port. \n\n\nThis field will be unset if Serial.BackingInfo.auto-detect is true and the virtual serial port is not connected or no suitable device is available on the host."
                    },
                    "network_location": {
                      "type": "string",
                      "format": "uri",
                      "description": "URI specifying the location of the network service backing the virtual serial port. \n   - If Serial.BackingInfo.type is NETWORK_SERVER, this field is the location used by clients to connect to this server. The hostname part of the URI should either be empty or should specify the address of the host on which the virtual machine is running.\n   - If Serial.BackingInfo.type is NETWORK_CLIENT, this field is the location used by the virtual machine to connect to the remote server.\n\n \nThis field is optional and it is only relevant when the value of Serial.BackingInfo.type is one of NETWORK_SERVER or NETWORK_CLIENT."
                    }
                  },
                  "description": "Physical resource backing for the virtual serial port."
                },
                "yield_on_poll": {
                  "type": "boolean",
                  "description": "CPU yield behavior. If set to true, the virtual machine will periodically relinquish the processor if its sole task is polling the virtual serial port. The amount of time it takes to regain the processor will depend on the degree of other virtual machine activity on the host."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device."
                }
              }
            }
          }
        }
      ]
  updateVMHardwareSerialPort:
    description: |-
      Updates the configuration of a virtual serial port.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/serial/port/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "Path of the file backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is FILE."
                    },
                    "pipe": {
                      "type": "string",
                      "description": "Name of the pipe backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is one of PIPE_SERVER or PIPE_CLIENT."
                    },
                    "type": {
                      "enum": [
                        "FILE",
                        "HOST_DEVICE",
                        "PIPE_SERVER",
                        "PIPE_CLIENT",
                        "NETWORK_SERVER",
                        "NETWORK_CLIENT"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual serial port."
                    },
                    "proxy": {
                      "type": "string",
                      "format": "uri",
                      "description": "Proxy service that provides network access to the network backing. If set, the virtual machine initiates a connection with the proxy service and forwards the traffic to the proxy.\nIf unset, no proxy service should be used."
                    },
                    "no_rx_loss": {
                      "type": "boolean",
                      "description": "Flag that enables optimized data transfer over the pipe. When the value is true, the host buffers data to prevent data overrun. This allows the virtual machine to read all of the data transferred over the pipe with no data loss.\nIf unset, defaults to false."
                    },
                    "host_device": {
                      "type": "string",
                      "description": "Name of the device backing the virtual serial port. \n\n\nIf unset, the virtual serial port will be configured to automatically detect a suitable host device."
                    },
                    "network_location": {
                      "type": "string",
                      "format": "uri",
                      "description": "URI specifying the location of the network service backing the virtual serial port. \n   - If Serial.BackingSpec.type is NETWORK_SERVER, this field is the location used by clients to connect to this server. The hostname part of the URI should either be empty or should specify the address of the host on which the virtual machine is running.\n   - If Serial.BackingSpec.type is NETWORK_CLIENT, this field is the location used by the virtual machine to connect to the remote server.\n\n \nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is one of NETWORK_SERVER or NETWORK_CLIENT."
                    }
                  },
                  "description": "Physical resource backing for the virtual serial port. \n This field may only be modified if the virtual machine is not powered on or the virtual serial port is not connected.\n\nIf unset, the value is unchanged."
                },
                "yield_on_poll": {
                  "type": "boolean",
                  "description": "CPU yield behavior. If set to true, the virtual machine will periodically relinquish the processor if its sole task is polling the virtual serial port. The amount of time it takes to regain the processor will depend on the degree of other virtual machine activity on the host. \n This field may be modified at any time, and changes applied to a connected virtual serial port take effect immediately.\n\nIf unset, the value is unchanged."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nIf unset, the value is unchanged."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device.\nIf unset, the value is unchanged."
                }
              },
              "description": "Specification for updating the virtual serial port."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  createVMHardwareSerialPort:
    description: |-
      Adds a virtual serial port to the virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/hardware/serial/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "backing": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "Path of the file backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is FILE."
                    },
                    "pipe": {
                      "type": "string",
                      "description": "Name of the pipe backing the virtual serial port.\nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is one of PIPE_SERVER or PIPE_CLIENT."
                    },
                    "type": {
                      "enum": [
                        "FILE",
                        "HOST_DEVICE",
                        "PIPE_SERVER",
                        "PIPE_CLIENT",
                        "NETWORK_SERVER",
                        "NETWORK_CLIENT"
                      ],
                      "type": "string",
                      "description": "Backing type for the virtual serial port."
                    },
                    "proxy": {
                      "type": "string",
                      "format": "uri",
                      "description": "Proxy service that provides network access to the network backing. If set, the virtual machine initiates a connection with the proxy service and forwards the traffic to the proxy.\nIf unset, no proxy service should be used."
                    },
                    "no_rx_loss": {
                      "type": "boolean",
                      "description": "Flag that enables optimized data transfer over the pipe. When the value is true, the host buffers data to prevent data overrun. This allows the virtual machine to read all of the data transferred over the pipe with no data loss.\nIf unset, defaults to false."
                    },
                    "host_device": {
                      "type": "string",
                      "description": "Name of the device backing the virtual serial port. \n\n\nIf unset, the virtual serial port will be configured to automatically detect a suitable host device."
                    },
                    "network_location": {
                      "type": "string",
                      "format": "uri",
                      "description": "URI specifying the location of the network service backing the virtual serial port. \n   - If Serial.BackingSpec.type is NETWORK_SERVER, this field is the location used by clients to connect to this server. The hostname part of the URI should either be empty or should specify the address of the host on which the virtual machine is running.\n   - If Serial.BackingSpec.type is NETWORK_CLIENT, this field is the location used by the virtual machine to connect to the remote server.\n\n \nThis field is optional and it is only relevant when the value of Serial.BackingSpec.type is one of NETWORK_SERVER or NETWORK_CLIENT."
                    }
                  },
                  "description": "Physical resource backing for the virtual serial port.\nIf unset, defaults to automatic detection of a suitable host device."
                },
                "yield_on_poll": {
                  "type": "boolean",
                  "description": "CPU yield behavior. If set to true, the virtual machine will periodically relinquish the processor if its sole task is polling the virtual serial port. The amount of time it takes to regain the processor will depend on the degree of other virtual machine activity on the host.\nIf unset, defaults to false."
                },
                "start_connected": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on.\nDefaults to false if unset."
                },
                "allow_guest_control": {
                  "type": "boolean",
                  "description": "Flag indicating whether the guest can connect and disconnect the device.\nDefaults to false if unset."
                }
              },
              "description": "Specification for the new virtual serial port."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
  getVMPowerState:
    description: |-
      Returns the power state information of a virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/power/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "state"
              ],
              "properties": {
                "state": {
                  "enum": [
                    "POWERED_OFF",
                    "POWERED_ON",
                    "SUSPENDED"
                  ],
                  "type": "string",
                  "description": "Power state of the virtual machine."
                },
                "clean_power_off": {
                  "type": "boolean",
                  "description": "Flag indicating whether the virtual machine was powered off cleanly. This field may be used to detect that the virtual machine crashed unexpectedly and should be restarted.\nThis field is optional and it is only relevant when the value of Power.Info.state is POWERED_OFF."
                }
              }
            }
          }
        }
      ]
  resetPoweredVM:
    description: |-
      Resets a powered-on virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/power/reset/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  startVM:
    description: |-
      Powers on a powered-off or suspended virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/power/start/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  stopVM:
    description: |-
      Powers off a powered-on or suspended virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/power/stop/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  suspendVM:
    description: |-
      Suspends a powered-on virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/power/suspend/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  checkVMStoragePolicyCompliance:
    description: |-
      Returns the storage policy Compliance Compliance.Info of a virtual machine after explicitly re-computing compliance check.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/storage/policy/complianceactioncheck/post/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "check_spec": {
              "type": "object",
              "required": [
                "vm_home"
              ],
              "properties": {
                "disks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Identifiers of the virtual machine's virtual disks for which compliance should be checked.\nIf unset or empty, compliance check is invoked on all the associated disks.\nWhen clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.vm.hardware.Disk.",
                  "uniqueItems": true
                },
                "vm_home": {
                  "type": "boolean",
                  "description": "Invoke compliance check on the virtual machine home directory if set to true."
                }
              },
              "description": "Parameter specifies the entities on which storage policy compliance check is to be invoked. The storage compliance Info Compliance.Info is returned.\nIf unset, the behavior is equivalent to a Compliance.CheckSpec with CheckSpec#vmHome set to true and CheckSpec#disks populated with all disks attached to the virtual machine."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "overall_compliance",
                "disks"
              ],
              "properties": {
                "disks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "required": [
                          "status",
                          "check_time",
                          "failure_cause"
                        ],
                        "properties": {
                          "policy": {
                            "type": "string",
                            "description": "Identifier of the storage policy associated with the virtual machine.\nIf unset SPBM is unable to retrieve or determine the associated policy, Compliance.VmComplianceInfo.failure-cause is set in such casses.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                          },
                          "status": {
                            "enum": [
                              "COMPLIANT",
                              "NON_COMPLIANT",
                              "UNKNOWN_COMPLIANCE",
                              "NOT_APPLICABLE",
                              "OUT_OF_DATE"
                            ],
                            "type": "string",
                            "description": "Status of the compliance operation."
                          },
                          "check_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time of the most recent compliance check."
                          },
                          "failure_cause": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "default_message",
                                "args"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                                },
                                "args": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Arguments to be substituted into a message template."
                                },
                                "default_message": {
                                  "type": "string",
                                  "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                                }
                              }
                            },
                            "description": "The exception that caused the compliance check to fail. There can be more than one cause, since a policy can contain capabilities from multiple providers. If empty, it implies no failures while retrieving compliance."
                          }
                        }
                      }
                    }
                  },
                  "description": "The compliance information Compliance.VmComplianceInfo for the virtual machine's virtual disks that are currently associated with a storage policy.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Disk."
                },
                "vm_home": {
                  "type": "object",
                  "required": [
                    "status",
                    "check_time",
                    "failure_cause"
                  ],
                  "properties": {
                    "policy": {
                      "type": "string",
                      "description": "Identifier of the storage policy associated with the virtual machine.\nIf unset SPBM is unable to retrieve or determine the associated policy, Compliance.VmComplianceInfo.failure-cause is set in such casses.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                    },
                    "status": {
                      "enum": [
                        "COMPLIANT",
                        "NON_COMPLIANT",
                        "UNKNOWN_COMPLIANCE",
                        "NOT_APPLICABLE",
                        "OUT_OF_DATE"
                      ],
                      "type": "string",
                      "description": "Status of the compliance operation."
                    },
                    "check_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the most recent compliance check."
                    },
                    "failure_cause": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "default_message",
                          "args"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                          },
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Arguments to be substituted into a message template."
                          },
                          "default_message": {
                            "type": "string",
                            "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                          }
                        }
                      },
                      "description": "The exception that caused the compliance check to fail. There can be more than one cause, since a policy can contain capabilities from multiple providers. If empty, it implies no failures while retrieving compliance."
                    }
                  },
                  "description": "The storage policy compliance information Compliance.VmComplianceInfo for the virtual machine's home directory.\nIf unset the virtual machine home directory has no storage policy association."
                },
                "overall_compliance": {
                  "enum": [
                    "COMPLIANT",
                    "NON_COMPLIANT",
                    "UNKNOWN_COMPLIANCE",
                    "NOT_APPLICABLE",
                    "OUT_OF_DATE"
                  ],
                  "type": "string",
                  "description": "The overall compliance status of the virtual machine and all it's entities."
                }
              }
            }
          }
        }
      ]
  getVMStoragePolicyCompliance:
    description: |-
      Returns the cached storage policy compliance information of a virtual machine.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/storage/policy/compliance/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "overall_compliance",
                "disks"
              ],
              "properties": {
                "disks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "required": [
                          "status",
                          "check_time",
                          "failure_cause"
                        ],
                        "properties": {
                          "policy": {
                            "type": "string",
                            "description": "Identifier of the storage policy associated with the virtual machine.\nIf unset SPBM is unable to retrieve or determine the associated policy, Compliance.VmComplianceInfo.failure-cause is set in such casses.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                          },
                          "status": {
                            "enum": [
                              "COMPLIANT",
                              "NON_COMPLIANT",
                              "UNKNOWN_COMPLIANCE",
                              "NOT_APPLICABLE",
                              "OUT_OF_DATE"
                            ],
                            "type": "string",
                            "description": "Status of the compliance operation."
                          },
                          "check_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time of the most recent compliance check."
                          },
                          "failure_cause": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "default_message",
                                "args"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                                },
                                "args": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Arguments to be substituted into a message template."
                                },
                                "default_message": {
                                  "type": "string",
                                  "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                                }
                              }
                            },
                            "description": "The exception that caused the compliance check to fail. There can be more than one cause, since a policy can contain capabilities from multiple providers. If empty, it implies no failures while retrieving compliance."
                          }
                        }
                      }
                    }
                  },
                  "description": "The compliance information Compliance.VmComplianceInfo for the virtual machine's virtual disks that are currently associated with a storage policy.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Disk."
                },
                "vm_home": {
                  "type": "object",
                  "required": [
                    "status",
                    "check_time",
                    "failure_cause"
                  ],
                  "properties": {
                    "policy": {
                      "type": "string",
                      "description": "Identifier of the storage policy associated with the virtual machine.\nIf unset SPBM is unable to retrieve or determine the associated policy, Compliance.VmComplianceInfo.failure-cause is set in such casses.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                    },
                    "status": {
                      "enum": [
                        "COMPLIANT",
                        "NON_COMPLIANT",
                        "UNKNOWN_COMPLIANCE",
                        "NOT_APPLICABLE",
                        "OUT_OF_DATE"
                      ],
                      "type": "string",
                      "description": "Status of the compliance operation."
                    },
                    "check_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the most recent compliance check."
                    },
                    "failure_cause": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "default_message",
                          "args"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog."
                          },
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Arguments to be substituted into a message template."
                          },
                          "default_message": {
                            "type": "string",
                            "description": "The value of this localizable string or message template in the {@code en_US} (English) locale.  If {@link #id} refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user.  It could also be used as a fallback if a client is unable to access the appropriate message catalog."
                          }
                        }
                      },
                      "description": "The exception that caused the compliance check to fail. There can be more than one cause, since a policy can contain capabilities from multiple providers. If empty, it implies no failures while retrieving compliance."
                    }
                  },
                  "description": "The storage policy compliance information Compliance.VmComplianceInfo for the virtual machine's home directory.\nIf unset the virtual machine home directory has no storage policy association."
                },
                "overall_compliance": {
                  "enum": [
                    "COMPLIANT",
                    "NON_COMPLIANT",
                    "UNKNOWN_COMPLIANCE",
                    "NOT_APPLICABLE",
                    "OUT_OF_DATE"
                  ],
                  "type": "string",
                  "description": "The overall compliance status of the virtual machine and all it's entities."
                }
              }
            }
          }
        }
      ]
  getVMStoragePolicy:
    description: |-
      Returns Information about Storage Policy associated with a virtual machine's home directory and/or its virtual hard disks.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/storage/policy/get/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "object",
              "required": [
                "disks"
              ],
              "properties": {
                "disks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Storage policies associated with virtual disks. The values in this map are storage policy identifiers. They will be identifiers for the resource type:vcenter.StoragePolicy If the map is empty, the virtual machine does not have any disks or its disks are not associated with a storage policy.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Disk."
                },
                "vm_home": {
                  "type": "string",
                  "description": "Storage Policy associated with virtual machine home.\nIfunset, the virtual machine's home directory doesn't have any storage policy.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                }
              }
            }
          }
        }
      ]
  updateVMStoragePolicy:
    description: |-
      Updates the storage policy configuration of a virtual machine and/or its associated virtual hard disks.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/rest/vcenter/vm/vm/storage/policy/patch/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "spec": {
              "type": "object",
              "properties": {
                "disks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "enum": [
                              "USE_SPECIFIED_POLICY",
                              "USE_DEFAULT_POLICY"
                            ],
                            "type": "string",
                            "description": "Policy type to be used while performing update operation on the virtual disks."
                          },
                          "policy": {
                            "type": "string",
                            "description": "Storage Policy identification.\nThis field is optional and it is only relevant when the value of Policy.DiskPolicySpec.type is USE_SPECIFIED_POLICY.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                          }
                        }
                      }
                    }
                  },
                  "description": "Storage policy or policies to be used when reconfiguring virtual machine diks.\nif unset the current storage policy is retained.\nWhen clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Disk."
                },
                "vm_home": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "USE_SPECIFIED_POLICY",
                        "USE_DEFAULT_POLICY"
                      ],
                      "type": "string",
                      "description": "Policy type to be used while performing update operation on the virtual machine home's directory."
                    },
                    "policy": {
                      "type": "string",
                      "description": "Storage Policy identification.\nThis field is optional and it is only relevant when the value of Policy.VmHomePolicySpec.type is USE_SPECIFIED_POLICY.\nWhen clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy."
                    }
                  },
                  "description": "Storage policy to be used when reconfiguring the virtual machine home.\nif unset the current storage policy is retained."
                }
              },
              "description": "Storage Policy Specification for updating the virtual machine and virtual disks."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  getSystemConfigCEIP:
    description: |-
      Get CEIP (Customer Experience Improvement Program) value.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/system_config/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "boolean"
            }
          }
        }
      ]
  getSystemConfigFeatureState:
    description: |-
      Returns the current status of feature state switches.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/system_config/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ],
                    "type": "string",
                    "description": "The {@name Status} {@term enumerated type} defines the possible states of a feature state switch."
                  }
                }
              }
            }
          }
        }
      ]
  setSystemConfigCEIP:
    description: |-
      Set CEIP (Customer Experience Improvement Program) value.
    versions:
      from: 6.7.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0.0/vcenter/system_config/
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "value": {
              "type": "boolean",
              "description": "CEIP boolean value to be set."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  createSupportBundle:
    description: |-
      Returns the location SupportBundle.Location information for downloading the Namespaces-related support bundle for the specified cluster. 
       Retrieving a support bundle involves two steps: 
      
         - Step 1: Invoke operation to provision a token and a URI.
         - Step 2: Make an HTTP GET request using URI and one time used token returned in step 1 to generate the support bundle and return it.
        There can only be one valid token per cluster at any given time. If this operation is invoked again for the same cluster identifier while a token still valid, the API will return the same SupportBundle.Location response. 
       The HTTP GET request will: 
      
         -  return 401 (Not Authorized) if the download URL is recognized, but the token is invalid.
         -  otherwise return 200 (OK), mark the token used (invalidating it for any future use), open a application/tar download stream for the client, and start the bundle process. As part of its work, the API will orchestrate support bundling on the worker nodes of a cluster. If a failure occurs during the collection of support bundle from worker node, the API will not abort the request, but will log a warning and move on to processing other worker nodes' bundles. The API will only abort its operation if the content of the stream has been corrupted. When the API has to abort its operation (and the response stream), it will not provide any indication of failures to the client. The client will need to verify validity of the resultant file based on the format specified in the response's Content-Disposition header.
      
    versions:
      from: 7.0.0
      to: 7.0.0
    link: https://developer.vmware.com/docs/vsphere-automation/v7.0U1/vcenter/api/vcenter/namespace-management/clusters/cluster/support-bundle/post/
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "url",
            "wcp_support_bundle_token"
          ],
          "properties": {
            "url": {
              "type": "string",
              "description": "Support Bundle Download URL."
            },
            "wcp_support_bundle_token": {
              "type": "object",
              "required": [
                "expiry",
                "token"
              ],
              "properties": {
                "token": {
                  "type": "string",
                  "description": "A one-time, short-lived token required in the HTTP header of the request to the url. This token needs to be passed in as a header with the name \"wcp-support-bundle-token\"."
                },
                "expiry": {
                  "type": "string",
                  "description": "Expiry time of the token"
                }
              }
            }
          }
        }
      ]