Product:
  name: Okta
  versions: [1.0.0]
  package: okta.okta
  description: |-
    Okta
  link: https://www.okta.com/
  contentType: json
Operations:
  apps.activateApplication:
    description: |-
      Activates an inactive application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#activate-application
    example:
      outputs: [
        {}
      ]
      inputs: [
        {}
      ]
  apps.activateDefaultProvisioningConnectionForApplication:
    description: |-
      Activates the default Provisioning Connection for an application.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#activate-default-provisioning-connection-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  apps.addBasicAuthenticationApplication:
    description: |-
      Adds a new application that uses HTTP Basic Authentication Scheme and requires a browser plugin
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#add-basic-authentication-application
    example:
      inputs: [
        {
          "name": "template_basic_auth" ,
          "label": "Sample Basic Auth App",
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "authURL": "https://example.com/auth.html"
            }
          },
          "signOnMode": "BASIC_AUTH"
        }
      ]
      outputs: [
        {
          "id": "0oafwvZDWJKVLDCUWUAC",
          "name": "template_basic_auth",
          "label": "Sample Basic Auth App",
          "_links": {
            "logo": [
              {
                "href": "https:/example.okta.com/img/logos/logo_1.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafwvZDWJKVLDCUWUAC"
            },
            "users": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafwvZDWJKVLDCUWUAC/users"
            },
            "groups": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafwvZDWJKVLDCUWUAC/groups"
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafwvZDWJKVLDCUWUAC/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2013-09-30T00:56:52.365Z",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "authURL": "https://example.com/auth.html"
            }
          },
          "signOnMode": "BASIC_AUTH",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "EDIT_USERNAME_AND_PASSWORD",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2013-09-30T00:56:52.365Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
  apps.addBookmarkApplication:
    description: |-
      Adds a new Bookmark application to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#add-bookmark-application
    example:
      inputs: [
        {
          "name": "bookmark",
          "label": "Sample Bookmark App",
          "settings": {
            "app": {
              "url": "https://example.com/bookmark.htm",
              "requestIntegration": false
            }
          },
          "signOnMode": "BOOKMARK"
        }
      ]
      outputs: [
        {
          "id": "0oafxqCAJWWGELFTYASJ",
          "name": "bookmark",
          "label": "Sample Bookmark App",
          "_links": {
            "logo": [
              {
                "href": "https:/example.okta.com/img/logos/logo_1.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafxqCAJWWGELFTYASJ"
            },
            "users": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafxqCAJWWGELFTYASJ/users"
            },
            "groups": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafxqCAJWWGELFTYASJ/groups"
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafxqCAJWWGELFTYASJ/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2013-10-01T04:22:27.000Z",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/bookmark.htm",
              "requestIntegration": false
            }
          },
          "signOnMode": "BOOKMARK",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2013-10-01T04:22:31.000Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
  apps.addCustomSamlApplication:
    description: |-
      Adds a SAML 2.0 application. This application is only available to the org that creates it.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#add-custom-saml-application
    example:
      inputs: [
        {
          "label": "Example Custom SAML 2.0 App",
          "features": [],
          "settings": {
            "signOn": {
              "slo": {
                "enabled": true,
                "spIssuer": "https://testorgone.okta.com",
                "logoutUrl": "https://testorgone.okta.com/logout"
              },
              "audience": "asdqwe123",
              "idpIssuer": "http://www.okta.com/org.externalKey",
              "recipient": "http://testorgone.okta",
              "ssoAcsUrl": "http://testorgone.okta",
              "destination": "http://testorgone.okta",
              "acsEndpoints": [
                {
                  "url": "http://testorgone.okta",
                  "index": 0
                },
                {
                  "url": "http://testorgone.okta/1",
                  "index": 1
                }
              ],
              "spCertificate": {
                "x5c": [
                  "MIIFnDCCA4QCCQDBS"
                ]
              },
              "responseSigned": true,
              "assertionSigned": true,
              "digestAlgorithm": "SHA256",
              "honorForceAuthn": true,
              "defaultRelayState": "",
              "requestCompressed": false,
              "signatureAlgorithm": "RSA_SHA256",
              "attributeStatements": [
                {
                  "name": "Attribute",
                  "type": "EXPRESSION",
                  "values": [
                    "Value"
                  ],
                  "namespace": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"
                }
              ],
              "subjectNameIdFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
              "authnContextClassRef": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
              "subjectNameIdTemplate": "user.userName",
              "allowMultipleAcsEndpoints": true
            }
          },
          "signOnMode": "SAML_2_0",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "autoSubmitToolbar": false
          }
        }
      ]
      outputs: [
        {
          "id": "0oav8uiWzPDrDMYxU0g3",
          "name": "testorgone_examplecustomsaml20app_1",
          "label": "Example Custom SAML 2.0 App",
          "_links": {
            "help": {
              "href": "http://testorgone-admin.okta.com/app/testorgone_examplecustomsaml20app_6/0oav8uiWzPDrDMYxU0g3/setup/help/SAML_2_0/instructions",
              "type": "text/html"
            },
            "logo": [
              {
                "href": "http://testorgone.okta.com/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oav8uiWzPDrDMYxU0g3/users"
            },
            "groups": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oav8uiWzPDrDMYxU0g3/groups"
            },
            "appLinks": [
              {
                "href": "http://testorgone.okta.com/home/testorgone_examplecustomsaml20app_6/0oav8uiWzPDrDMYxU0g3/alnvjz6hLyuTZadi80g3",
                "name": "testorgone_examplecustomsaml20app_6_link",
                "type": "text/html"
              }
            ],
            "metadata": {
              "href": "http://testorgone.okta.com:/api/v1/apps/0oav8uiWzPDrDMYxU0g3/sso/saml/metadata",
              "type": "application/xml"
            },
            "deactivate": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oav8uiWzPDrDMYxU0g3/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2016-06-29T19:57:33.000Z",
          "features": [],
          "settings": {
            "app": {},
            "signOn": {
              "slo": {
                "enabled": true,
                "spIssuer": "https://testorgone.okta.com",
                "logoutUrl": "https://testorgone.okta.com/logout"
              },
              "audience": "asdqwe123",
              "spIssuer": null,
              "idpIssuer": "http://www.okta.com/org.externalKey",
              "recipient": "http://testorgone.okta",
              "ssoAcsUrl": "http://testorgone.okta",
              "destination": "http://testorgone.okta",
              "acsEndpoints": [
                {
                  "url": "http://testorgone.okta",
                  "index": 0
                },
                {
                  "url": "http://testorgone.okta/1",
                  "index": 1
                }
              ],
              "spCertificate": {
                "x5c": [
                  "MIIFnDCCA4QCCQDBSLbiON2T1zANBgkqhk"
                ]
              },
              "responseSigned": true,
              "assertionSigned": true,
              "digestAlgorithm": "SHA256",
              "honorForceAuthn": true,
              "defaultRelayState": null,
              "requestCompressed": false,
              "signatureAlgorithm": "RSA_SHA256",
              "attributeStatements": [
                {
                  "name": "Attribute",
                  "type": "EXPRESSION",
                  "values": [
                    "Value"
                  ],
                  "namespace": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"
                }
              ],
              "subjectNameIdFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
              "authnContextClassRef": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
              "subjectNameIdTemplate": "user.userName",
              "allowMultipleAcsEndpoints": true
            },
            "notifications": {
              "vpn": {
                "helpUrl": null,
                "message": null,
                "network": {
                  "connection": "DISABLED"
                }
              }
            }
          },
          "signOnMode": "SAML_2_0",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "testorgone_examplecustomsaml20app_6_link": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "signing": {},
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2016-06-29T19:57:33.000Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null,
            "loginRedirectUrl": null
          }
        }
      ]
  apps.addCustomSwaApplication:
    description: |-
      Adds a SWA application. This application is only available to the org that creates it.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#add-custom-swa-application
    example:
      inputs: [
        {
          "label": "Example Custom SWA App",
          "features": [],
          "settings": {
            "signOn": {
              "loginUrl": "http://swaprimaryloginurl.okta.com",
              "redirectUrl": "http://swasecondaryredirecturl.okta.com"
            }
          },
          "signOnMode": "AUTO_LOGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "autoSubmitToolbar": false
          }
        }
      ]
      outputs: [
        {
          "id": "0oaugjme6G6Aq6h7m0g3",
          "name": "testorgone_examplecustomswaapp_1",
          "label": "Example Custom SWA App",
          "_links": {
            "logo": [
              {
                "href": "http://testorgone.okta.com:/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oaugjme6G6Aq6h7m0g3/users"
            },
            "groups": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oaugjme6G6Aq6h7m0g3/groups"
            },
            "appLinks": [
              {
                "href": "http://testorgone.okta.com/home/testorgone_examplecustomswaapp_1/0oaugjme6G6Aq6h7m0g3/alnuqqc3uS8X6L4Se0g3",
                "name": "testorgone_examplecustomswaapp_1_link",
                "type": "text/html"
              }
            ],
            "deactivate": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oaugjme6G6Aq6h7m0g3/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2016-06-29T17:11:24.000Z",
          "features": [],
          "settings": {
            "app": {},
            "signOn": {
              "loginUrl": "http://swaprimaryloginurl.okta.com",
              "redirectUrl": "http://swasecondaryredirecturl.okta.com"
            },
            "notifications": {
              "vpn": {
                "helpUrl": null,
                "message": null,
                "network": {
                  "connection": "DISABLED"
                }
              }
            }
          },
          "signOnMode": "AUTO_LOGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "testorgone_examplecustomswaapp_1_link": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "EDIT_USERNAME_AND_PASSWORD",
            "signing": {},
            "revealPassword": false,
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2016-06-29T17:11:24.000Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null,
            "loginRedirectUrl": null
          }
        }
      ]
  apps.addOAuth20ClientApplication:
    description: |-
      Adds an OAuth 2.0 client application. This application is only available to the org that creates it.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#add-oauth-2-0-client-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  apps.addOkaOrg2OrgApplication:
    description: |-
      Adds a new Okta Org2Org application to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#add-okta-org2org-application
    example:
      inputs: [
        {
          "name": "okta_org2org",
          "label": "Sample Okta Org2Org App",
          "settings": {
            "app": {
              "acsUrl": "https://example.okta.com/sso/saml2/exampleid",
              "baseUrl": "https://example.okta.com",
              "audRestriction": "https://www.okta.com/saml2/service-provider/exampleid"
            }
          },
          "signOnMode": "SAML_2_0"
        }
      ]
      outputs: [
        {
          "id": "0oawpacQMRQtvkxOf0g3",
          "name": "okta_org2org",
          "label": "Sample Okta Org2Org App",
          "_links": {
            "help": {
              "href": "http://$yourOktaDomain/app/okta_org2org/0oawpacQMRQtvkxOf0g3/setup/help/SAML_2_0/external-doc",
              "type": "text/html"
            },
            "logo": [
              {
                "href": "http://$yourOktaDomain/assets/img/logos/okta-logo-admin.f5cef92fdcff9fbc3b1835def5de1314.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "http://$yourOktaDomain/api/v1/apps/0oawpacQMRQtvkxOf0g3/users"
            },
            "groups": {
              "href": "http://$yourOktaDomain/api/v1/apps/0oawpacQMRQtvkxOf0g3/groups"
            },
            "appLinks": [
              {
                "href": "http://$yourOktaDomain/home/okta_org2org/0oawpacQMRQtvkxOf0g3/1857",
                "name": "login",
                "type": "text/html"
              }
            ],
            "metadata": {
              "href": "http://$yourOktaDomain/api/v1/apps/0oawpacQMRQtvkxOf0g3/sso/saml/metadata",
              "type": "application/xml"
            },
            "deactivate": {
              "href": "http://$yourOktaDomain/api/v1/apps/0oawpacQMRQtvkxOf0g3/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2020-10-29T17:31:37.000Z",
          "features": [],
          "settings": {
            "app": {
              "acsUrl": "https://example.okta.com/sso/saml2/exampleid",
              "baseUrl": "https://example.okta.com",
              "audRestriction": "https://www.okta.com/saml2/service-provider/exampleid"
            },
            "signOn": {
              "audienceOverride": null,
              "defaultRelayState": null,
              "recipientOverride": null,
              "ssoAcsUrlOverride": null,
              "attributeStatements": [],
              "destinationOverride": null
            },
            "notifications": {
              "vpn": {
                "helpUrl": null,
                "message": null,
                "network": {
                  "connection": "DISABLED"
                }
              }
            }
          },
          "signOnMode": "SAML_2_0",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "signing": {
              "kid": "8UZti4303PKyV45L1KmnSuI8obmjYEsj_X5kPp_ES60"
            },
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2020-10-29T17:31:38.000Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null,
            "loginRedirectUrl": null
          }
        }
      ]
  apps.addPluginSwa3FieldApplication:
    description: |-
      Adds a SWA application that requires a browser plugin and supports three CSS selectors for the sign-in form
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#add-plugin-swa-3-field-application
    example:
      inputs: [
        {
          "name": "template_swa3field",
          "label": "Sample Plugin App",
          "settings": {
            "app": {
              "targetURL": "https://example.com/login.html",
              "loginUrlRegex": "REGEX_EXPRESSION",
              "buttonSelector": "#btn-login",
              "extraFieldValue": "SOMEVALUE",
              "passwordSelector": "#txtbox-password",
              "userNameSelector": "#txtbox-username",
              "extraFieldSelector": ".login"
            }
          },
          "signOnMode": "BROWSER_PLUGIN"
        }
      ]
      outputs: [
        {
          "id": "0oabkvBLDEKCNXBGYUAS",
          "name": "template_swa",
          "label": "Sample Plugin App",
          "_links": {
            "logo": [
              {
                "href": "https:/example.okta.com/img/logos/logo_1.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS"
            },
            "users": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/users"
            },
            "groups": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/groups"
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2013-09-11T17:46:08.000Z",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "buttonField": "#btn-login",
              "loginUrlRegex": "REGEX_EXPRESSION",
              "passwordField": "#txtbox-password",
              "usernameField": "#txtbox-username",
              "extraFieldValue": "SOMEVALUE",
              "extraFieldSelector": ".login"
            }
          },
          "signOnMode": "BROWSER_PLUGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "EDIT_USERNAME_AND_PASSWORD",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2013-09-11T17:58:54.000Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
  apps.addPluginSwaApplication:
    description: |-
      Adds a SWA application that requires a browser plugin
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#add-plugin-swa-application
    example:
      inputs: [
        {
          "name": "template_swa",
          "label": "Sample Plugin App",
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "buttonField": "btn-login",
              "loginUrlRegex": "REGEX_EXPRESSION",
              "passwordField": "txtbox-password",
              "usernameField": "txtbox-username"
            }
          },
          "signOnMode": "BROWSER_PLUGIN"
        }
      ]
      outputs: [
        {
          "id": "0oabkvBLDEKCNXBGYUAS",
          "name": "template_swa",
          "label": "Sample Plugin App",
          "_links": {
            "logo": [
              {
                "href": "https:/example.okta.com/img/logos/logo_1.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS"
            },
            "users": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/users"
            },
            "groups": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/groups"
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2013-09-11T17:46:08.000Z",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "buttonField": "btn-login",
              "loginUrlRegex": "REGEX_EXPRESSION",
              "passwordField": "txtbox-password",
              "usernameField": "txtbox-username"
            }
          },
          "signOnMode": "BROWSER_PLUGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "EDIT_USERNAME_AND_PASSWORD",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2013-09-11T17:58:54.000Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
  apps.addSaml20AuthenticationApplication:
    description: |-
      Adds a SAML 2.0 application instance
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#add-saml-2-0-authentication-application
    example:
      inputs: [
        {
          "name": "cornerstone",
          "label": "Example SAML 2.0 App",
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "orgName": "$yourOktaDomain"
            },
            "signOn": {
              "attributeStatements": [
                {
                  "name": "firstName",
                  "type": "EXPRESSION",
                  "values": [
                    "ValueFromAPI"
                  ],
                  "namespace": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"
                }
              ],
              "destinationOverride": "http://www.yourDestinationOverride.com"
            }
          },
          "signOnMode": "SAML_2_0"
        }
      ]
      outputs: [
        {
          "id": "0oaugbelRxD4cY31S0g3",
          "name": "cornerstone",
          "label": "Example SAML 2.0 App",
          "_links": {
            "help": {
              "href": "http://$yourOktaDomain/app/cornerstone/0oaugbelRxD4cY31S0g3/setup/help/SAML_2_0/external-doc",
              "type": "text/html"
            },
            "logo": [
              {
                "href": "http://$yourOktaDomain/assets/img/logos/cornerstone.a63cddeecf3acc5aae6d4592dcfe8125.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "http://$yourOktaDomain/api/v1/apps/0oaugbelRxD4cY31S0g3/users"
            },
            "groups": {
              "href": "http://$yourOktaDomain/api/v1/apps/0oaugbelRxD4cY31S0g3/groups"
            },
            "appLinks": [
              {
                "href": "http://$yourOktaDomain/home/cornerstone/0oaugbelRxD4cY31S0g3/165",
                "name": "login",
                "type": "text/html"
              }
            ],
            "metadata": {
              "href": "http://$yourOktaDomain/api/v1/apps/0oaugbelRxD4cY31S0g3/sso/saml/metadata",
              "type": "application/xml"
            },
            "deactivate": {
              "href": "http://$yourOktaDomain/api/v1/apps/0oaugbelRxD4cY31S0g3/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2020-01-28T18:59:30.000Z",
          "features": [],
          "settings": {
            "app": {
              "acsURL": null,
              "orgName": "$yourOktaDomain"
            },
            "signOn": {
              "audienceOverride": null,
              "defaultRelayState": null,
              "recipientOverride": null,
              "ssoAcsUrlOverride": null,
              "attributeStatements": [
                {
                  "name": "firstName",
                  "type": "EXPRESSION",
                  "values": [
                    "ValueFromAPI"
                  ],
                  "namespace": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"
                }
              ],
              "destinationOverride": "http://www.yourDestinationOverride.com"
            },
            "notifications": {
              "vpn": {
                "helpUrl": null,
                "message": null,
                "network": {
                  "connection": "DISABLED"
                }
              }
            }
          },
          "signOnMode": "SAML_2_0",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "signing": {},
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2020-01-28T18:59:30.000Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null,
            "loginRedirectUrl": null
          }
        }
      ]
  apps.addSwaApplicationNoPlugin:
    description: |-
      Adds a SWA application that uses HTTP POST and doesn't require a browser plugin
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#add-swa-application-no-plugin
    example:
      inputs: [
        {
          "name": "template_sps",
          "label": "Example SWA App",
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "passwordField": "#txtbox-password",
              "usernameField": "#txtbox-username",
              "optionalField1": "param1",
              "optionalField2": "param2",
              "optionalField3": "param3",
              "optionalField1Value": "somevalue",
              "optionalField2Value": "yetanothervalue",
              "optionalField3Value": "finalvalue"
            }
          },
          "signOnMode": "SECURE_PASSWORD_STORE"
        }
      ]
      outputs: [
        {
          "id": "0oafywQDNMXLYDBIHQTT",
          "name": "template_sps",
          "label": "Example SWA App",
          "_links": {
            "logo": [
              {
                "href": "https:/example.okta.com/img/logos/logo_1.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafywQDNMXLYDBIHQTT"
            },
            "users": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafywQDNMXLYDBIHQTT/users"
            },
            "groups": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafywQDNMXLYDBIHQTT/groups"
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafywQDNMXLYDBIHQTT/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2013-10-01T05:41:01.983Z",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "passwordField": "#txtbox-password",
              "usernameField": "#txtbox-username",
              "optionalField1": "param1",
              "optionalField2": "param2",
              "optionalField3": "param3",
              "optionalField1Value": "somevalue",
              "optionalField2Value": "yetanothervalue",
              "optionalField3Value": "finalvalue"
            }
          },
          "signOnMode": "SECURE_PASSWORD_STORE",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "EDIT_USERNAME_AND_PASSWORD",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2013-10-01T05:41:01.983Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
  apps.addWsFederationApplication:
    description: |-
      Adds a WS-Federation Passive Requestor Profile application with a SAML 2.0 token
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#add-ws-federation-application
    example:
      inputs: [
        {
          "name": "template_wsfed",
          "label": "Sample WS-Fed App",
          "settings": {
            "app": {
              "realm": "urn:example:app",
              "siteURL": "https://example.com",
              "groupName": null,
              "wReplyURL": "https://example.com/",
              "groupFilter": null,
              "nameIDFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
              "wReplyOverride": false,
              "groupValueFormat": "windowsDomainQualifiedName",
              "usernameAttribute": "username",
              "attributeStatements": null,
              "audienceRestriction": "urn:example:app",
              "authnContextClassRef": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport"
            }
          },
          "signOnMode": "WS_FEDERATION"
        }
      ]
      outputs: [
        {}
      ]
  apps.assignGroupToApplication:
    description: |-
      Assigns a group to an application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#assign-group-to-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00gbkkGFFWZDLCNTAGQR",
          "priority": 0,
          "lastUpdated": "2013-10-02T07:38:20.000Z"
        }
      ]
  apps.assignUserToApplicationForSso:
    description: |-
      Assigns a user without a profile to an application for SSO
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#assign-user-to-application-for-sso
    example:
      inputs: [
        {
          "id": "00ud4tVDDXYVKPXKVLCO",
          "scope": "USER",
          "credentials": {
            "password": {
              "value": "correcthorsebatterystaple"
            },
            "userName": "user@example.com"
          }
        }
      ]
      outputs: [
        {
          "id": "00u15s1KDETTQMQYABRL",
          "scope": "USER",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oaq2rRZUQAKJIZYFIGM"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL"
            }
          },
          "status": "ACTIVE",
          "created": "2014-08-11T02:24:31.000Z",
          "profile": {},
          "lastSync": null,
          "syncState": "DISABLED",
          "externalId": null,
          "credentials": {
            "userName": "user@example.com"
          },
          "lastUpdated": "2014-08-11T05:38:01.000Z",
          "statusChanged": "2014-08-11T02:24:32.000Z",
          "passwordChanged": null
        }
      ]
  apps.assignUserToApplicationForSsoAndProvisioning:
    description: |-
      Assigns a user to an application with credentials and an app-specific profile. Profile mappings defined for the application are first applied before applying any profile properties specified in the request.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#assign-user-to-application-for-sso-and-provisioning
    example:
      inputs: [
        {
          "id": "00u15s1KDETTQMQYABRL",
          "scope": "USER",
          "profile": {
            "role": "Developer",
            "profile": "Standard User",
            "salesforceGroups": [
              "Employee"
            ]
          },
          "credentials": {
            "userName": "saml.jackson@example.com"
          }
        }
      ]
      outputs: [
        {
          "id": "00u13okQOVWZJGDOAUVR",
          "scope": "USER",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oa164zIYRQREYAAGGQR"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u13okQOVWZJGDOAUVR"
            }
          },
          "status": "PROVISIONED",
          "created": "2014-07-03T20:37:14.000Z",
          "profile": {
            "role": "Developer",
            "email": "saml.jackson@example.com",
            "profile": "Standard User",
            "lastName": "Jackson",
            "firstName": "Saml",
            "mobilePhone": null,
            "secondEmail": null,
            "salesforceGroups": [
              "Employee"
            ]
          },
          "lastSync": "2014-07-10T13:25:04.000Z",
          "syncState": "SYNCHRONIZED",
          "externalId": "005o0000000ogQ9AAI",
          "credentials": {
            "userName": "saml.jackson@example.com"
          },
          "lastUpdated": "2014-07-10T13:25:04.000Z",
          "statusChanged": "2014-07-03T20:37:17.000Z",
          "passwordChanged": null
        }
      ]
  apps.cloneApplicationKeyCredential:
    description: |-
      Clones an X.509 certificate for an application key credential from a source application to a target application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#clone-application-key-credential
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "e": "AQAB",
          "n": "mkC6yAJVvFwUlmM9gKjb2d-YK5qHFt-mXSsbjWKKs4EfNm-BoQeeovBZtSACyaqLc8IYFTPEURFcbDQ9DkAL04uUIRD2gaHYY7uK0jsluEaXGq2RAIsmzAwNTzkiDw4q9pDL_q7n0f_SDt1TsMaMQayB6bU5jWsmqcWJ8MCRJ1aJMjZ16un5UVx51IIeCbe4QRDxEXGAvYNczsBoZxspDt28esSpq5W0dBFxcyGVudyl54Er3FzAguhgfMVjH-bUec9j2Tl40qDTktrYgYfxz9pfjm01Hl4WYP1YQxeETpSL7cQ5Ihz4jGDtHUEOcZ4GfJrPzrGpUrak8Qp5xcwCqQ",
          "kid": "SIMcCQNY3uwXoW3y0vf6VxiBb5n9pf8L2fK8d-FIbm4",
          "kty": "RSA",
          "use": "sig",
          "x5c": [
            "MIIDqDCCApCgAwIBAgIGAVGNQFX5MA0GCSqGSIb3DQEBBQUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTAeFw0xNTEyMTAxODU1MjJaFw0xNzEyMTAxODU2MjJaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJJjrcnI6cXBiXNq9YDgfYrQe2O5qEHG4MXP8Ue0sMeefFkFEHYHnHUeZCq6WTAGqR+1LFgOl+Eq9We5V+qNlGIfkFkQ3iHGBrIALKqLCd0Et76HicDiegz7j9DtN+lo0hG/gfcw5783L5g5xeQ7zVmCQMkFwoUA0uA3bsfUSrmfORHJL+EMNQT8XIXD8NkG4g6u7ylHVRTLgXbe+W/p04m3EP6l41xl+MhIpBaPxDsyUvcKCNwkZN3aZIin1O9Y4YJuDHxrM64/VtLLp0sC05iawAmfsLunF7rdJAkWUpPn+xkviyNQ3UpvwAYuDr+jKLUdh2reRnm1PezxMIXzBVMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEARnFIjyitrCGbleFr3KeAwdOyeHiRmgeKupX5ZopgXtcseJoToUIinX5DVw2fVZPahqs0Q7/a0wcVnTRpw6946qZCwKd/PvZ1feVuVEA5Ui3+XvHuSH5xLp7NvYG1snNEvlbN3+NDUMlWj2NEbihowUBt9+UxTpQO3+N08q3aZk3hOZ+tHt+1Te7KEEL/4CM28GZ9MY7fSrS7MAgp1+ZXtn+kRlMrXnQ49qBda37brwDRqmSY9PwNMbev3r+9ZHwxr9W5wXW4Ev4C4xngA7RkVoyDbItSUho0I0M0u/LHuppclnXrw97xyO5Z883eIBvPVjfRcxsJxXJ8jx70ATDskw=="
          ],
          "created": "2015-12-10T18:56:23.000Z",
          "x5t#S256": "5GOpy9CQVtfvBmu2T8BHvpKE4OGtC3BuS046t7p9pps",
          "expiresAt": "2017-12-10T18:56:22.000Z"
        }
      ]
  apps.deactivateApplication:
    description: |-
      Deactivates an active application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#deactivate-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  apps.deactivateDefaultProvisioningConnectionForApplication:
    description: |-
      Deactivates the default Provisioning Connection for an application.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#deactivate-default-provisioning-connection-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  apps.deleteApplication:
    description: |-
      Removes an inactive application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#delete-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  apps.generateCsrForApplication:
    description: |-
      Generates a new key pair and returns the Certificate Signing Request (CSR). The information in a CSR is used by the Certificate Authority (CA) to verify and create your certificate. It also contains the public key that is included in your certificate.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#generate-csr-for-application
    example:
      inputs: [
        {
          "subject": {
            "commonName": "SP Issuer",
            "countryName": "US",
            "localityName": "San Francisco",
            "organizationName": "Okta, Inc.",
            "stateOrProvinceName": "California",
            "organizationalUnitName": "Dev"
          },
          "subjectAltNames": {
            "dnsNames": [
              "dev.okta.com"
            ]
          }
        }
      ]
      outputs: [
        {}
      ]
  apps.generateNewApplicationKeyCredential:
    description: |-
      Generates a new X.509 certificate for an application key credential
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#generate-new-application-key-credential
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "e": "AQAB",
          "n": "mkC6yAJVvFwUlmM9gKjb2d-YK5qHFt-mXSsbjWKKs4EfNm-BoQeeovBZtSACyaqLc8IYFTPEURFcbDQ9DkAL04uUIRD2gaHYY7uK0jsluEaXGq2RAIsmzAwNTzkiDw4q9pDL_q7n0f_SDt1TsMaMQayB6bU5jWsmqcWJ8MCRJ1aJMjZ16un5UVx51IIeCbe4QRDxEXGAvYNczsBoZxspDt28esSpq5W0dBFxcyGVudyl54Er3FzAguhgfMVjH-bUec9j2Tl40qDTktrYgYfxz9pfjm01Hl4WYP1YQxeETpSL7cQ5Ihz4jGDtHUEOcZ4GfJrPzrGpUrak8Qp5xcwCqQ",
          "kid": "SIMcCQNY3uwXoW3y0vf6VxiBb5n9pf8L2fK8d-FIbm4",
          "kty": "RSA",
          "use": "sig",
          "x5c": [
            "MIIDqDCCApCgAwIBAgIGAVGNQFX5MA0GCSqGSIb3DQEBBQUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTAeFw0xNTEyMTAxODU1MjJaFw0xNzEyMTAxODU2MjJaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJJjrcnI6cXBiXNq9YDgfYrQe2O5qEHG4MXP8Ue0sMeefFkFEHYHnHUeZCq6WTAGqR+1LFgOl+Eq9We5V+qNlGIfkFkQ3iHGBrIALKqLCd0Et76HicDiegz7j9DtN+lo0hG/gfcw5783L5g5xeQ7zVmCQMkFwoUA0uA3bsfUSrmfORHJL+EMNQT8XIXD8NkG4g6u7ylHVRTLgXbe+W/p04m3EP6l41xl+MhIpBaPxDsyUvcKCNwkZN3aZIin1O9Y4YJuDHxrM64/VtLLp0sC05iawAmfsLunF7rdJAkWUpPn+xkviyNQ3UpvwAYuDr+jKLUdh2reRnm1PezxMIXzBVMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEARnFIjyitrCGbleFr3KeAwdOyeHiRmgeKupX5ZopgXtcseJoToUIinX5DVw2fVZPahqs0Q7/a0wcVnTRpw6946qZCwKd/PvZ1feVuVEA5Ui3+XvHuSH5xLp7NvYG1snNEvlbN3+NDUMlWj2NEbihowUBt9+UxTpQO3+N08q3aZk3hOZ+tHt+1Te7KEEL/4CM28GZ9MY7fSrS7MAgp1+ZXtn+kRlMrXnQ49qBda37brwDRqmSY9PwNMbev3r+9ZHwxr9W5wXW4Ev4C4xngA7RkVoyDbItSUho0I0M0u/LHuppclnXrw97xyO5Z883eIBvPVjfRcxsJxXJ8jx70ATDskw=="
          ],
          "created": "2015-12-10T18:56:23.000Z",
          "x5t#S256": "5GOpy9CQVtfvBmu2T8BHvpKE4OGtC3BuS046t7p9pps",
          "expiresAt": "2017-12-10T18:56:22.000Z"
        }
      ]
  apps.getApplication:
    description: |-
      Fetches an application from your Okta organization by id
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#get-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0oa1gjh63g214q0Hq0g4",
          "name": "testorgone_customsaml20app_1",
          "label": "Custom Saml 2.0 App",
          "_links": {
            "help": {
              "href": "https://testorgone-admin.okta.com/app/testorgone_customsaml20app_1/0oa1gjh63g214q0Hq0g4/setup/help/SAML_2_0/instructions",
              "type": "text/html"
            },
            "logo": [
              {
                "href": "https://testorgone.okta.com/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "https://testorgone.okta.com/api/v1/apps/0oa1gjh63g214q0Hq0g4/users"
            },
            "groups": {
              "href": "https://testorgone.okta.com/api/v1/apps/0oa1gjh63g214q0Hq0g4/groups"
            },
            "appLinks": [
              {
                "href": "https://testorgone.okta.com/home/testorgone_customsaml20app_1/0oa1gjh63g214q0Hq0g4/aln1gofChJaerOVfY0g4",
                "name": "testorgone_customsaml20app_1_link",
                "type": "text/html"
              }
            ],
            "metadata": {
              "href": "https://testorgone.okta.com/api/v1/apps/0oa1gjh63g214q0Hq0g4/sso/saml/metadata",
              "type": "application/xml"
            },
            "deactivate": {
              "href": "https://testorgone.okta.com/api/v1/apps/0oa1gjh63g214q0Hq0g4/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2016-08-09T20:12:19.000Z",
          "features": [],
          "settings": {
            "app": {},
            "signOn": {
              "slo": {
                "enabled": true,
                "spIssuer": "http://testorgone.okta.com",
                "logoutUrl": "http://testorgone.okta.com/logout"
              },
              "audience": "https://example.com/tenant/123",
              "idpIssuer": "https://www.okta.com/org.externalKey",
              "recipient": "https://recipient.okta.com",
              "ssoAcsUrl": "https://$yourOktaDomain",
              "destination": "https://destination.okta.com",
              "acsEndpoints": [],
              "spCertificate": {
                "x5c": [
                  "MIIFnDCCA4QCCQDBSLbiON2T1zANBgkqhkiG"
                ]
              },
              "responseSigned": true,
              "assertionSigned": true,
              "digestAlgorithm": "SHA256",
              "honorForceAuthn": true,
              "defaultRelayState": "",
              "requestCompressed": false,
              "signatureAlgorithm": "RSA_SHA256",
              "attributeStatements": [],
              "subjectNameIdFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              "authnContextClassRef": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
              "subjectNameIdTemplate": "user.userName",
              "allowMultipleAcsEndpoints": false
            },
            "notifications": {
              "vpn": {
                "helpUrl": null,
                "message": null,
                "network": {
                  "connection": "DISABLED"
                }
              }
            }
          },
          "signOnMode": "SAML_2_0",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "testorgone_customsaml20app_1_link": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "signing": {},
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "fn:substringBefore"
            }
          },
          "lastUpdated": "2016-08-09T20:12:19.000Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null,
            "loginRedirectUrl": null
          }
        }
      ]
  apps.getAssignedGroupForApplication:
    description: |-
      Fetches an application group assignment
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#get-assigned-group-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00gbkkGFFWZDLCNTAGQR",
          "priority": 0,
          "lastUpdated": "2013-10-02T07:38:20.000Z"
        }
      ]
  apps.getAssignedUserForApplication:
    description: |-
      Fetches a specific user assignment for an application by id
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#get-assigned-user-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00u13okQOVWZJGDOAUVR",
          "scope": "USER",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oa164zIYRQREYAAGGQR"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u13okQOVWZJGDOAUVR"
            }
          },
          "status": "PROVISIONED",
          "created": "2014-07-03T20:37:14.000Z",
          "profile": {
            "role": "Developer",
            "email": "saml.jackson@example.com",
            "profile": "Standard User",
            "lastName": "Jackson",
            "firstName": "Saml",
            "mobilePhone": null,
            "secondEmail": null,
            "salesforceGroups": [
              "Employee"
            ]
          },
          "lastSync": "2014-07-10T13:25:04.000Z",
          "syncState": "SYNCHRONIZED",
          "externalId": "005o0000000ogQ9AAI",
          "credentials": {
            "userName": "saml.jackson@example.com"
          },
          "lastUpdated": "2014-07-10T13:25:04.000Z",
          "statusChanged": "2014-07-03T20:37:17.000Z",
          "passwordChanged": null
        }
      ]
  apps.getCsrForApplication:
    description: |-
      Gets a specific CSR object by csrid
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#get-csr-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50",
          "csr": "MIIC4DCCAcgCAQAwcTELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xEzARBgNVBAoMCk9rdGEsIEluYy4xDDAKBgNVBAsMA0RldjESMBAGA1UEAwwJU1AgSXNzdWVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6m8jHVCr9/tKvvbFN59T4raoCs/78KRm4fSefHQOv1TKLXo4wTLbsqYWRWc5u0sd5orUMQgPQOyj3i6qh13mALY4BzrT057EG1BUNjGg29QgYlnOk2iX890e5BIDMQQEIKFrvOi2V8cLUkLvE2ydRn0VO1Q1frbUkYeStJYC5Api2JQsYRwa+1ZeDH1ITnIzUaugWhW2WB2lSnwZkenne5KtffxMPYVu+IhNRHoKaRA6Z51YNhMJIx17JM2hs/H4Ka3drk6kzDf7ofk/yBpb9yBWyU7CTSQhdoHidxqFprMDaT66W928t3AeOENHBuwn8c2K9WeGG+bELNyQRJVmawIDAQABoCowKAYJKoZIhvcNAQkOMRswGTAXBgNVHREEEDAOggxkZXYub2t0YS5jb20wDQYJKoZIhvcNAQELBQADggEBAA2hsVJRVM+A83X9MekjTnIbt19UNT8wX7wlE9jUKirWsxceLiZBpVGn9qfKhhVIpvdaIRSeoFYS2Kg/m1G6bCvjmZLcrQ5FcEBjZH2NKfNppGVnfC2ugtUkBtCB+UUzOhKhRKJtGugenKbP33zRWWIqnd2waF6Cy8TIuqQVPbwEDN9bCbAs7ND6CFYNguY7KYjWzQOeAR716eqpEEXuPYAS4nx/ty4ylonR8cv+gpq51rvq80A4k/36aoeM0Y6I4w64vhTfuvWW2UYFUD+/+y2FA2CSP4JfctySrf1s525v6fzTFZ3qZbB5OZQtP2b8xYWktMzywsxGKDoVDB4wkH4=",
          "kty": "RSA",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oad5lTSBOMUBOBVVQSC/credentials/csrs/h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "publish": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oad5lTSBOMUBOBVVQSC/credentials/csrs/h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50/lifecycle/publish",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "created": "2017-03-28T01:11:10.000Z"
        }
      ]
  apps.getDefaultProvisioningConnectionForApplication:
    description: |-
      Fetches the default Provisioning Connection for an application.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#get-default-provisioning-connection-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/applicationId/connections/default",
              "hints": {
                "allow": [
                  "POST",
                  "GET"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/apps/applicationId/connections/default/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ENABLED",
          "authScheme": "TOKEN"
        }
      ]
  apps.getFeatureForApplication:
    description: |-
      Fetches a Feature object for an application.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#get-feature-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "name": "USER_PROVISIONING",
          "_links": {
            "self": {
              "href": "http://$yourOktaDomain/api/v1/apps/applicationId/features/USER_PROVISIONING",
              "hints": {
                "allow": [
                  "GET",
                  "PUT"
                ]
              }
            }
          },
          "status": "ENABLED",
          "description": "User provisioning settings from Okta to a downstream application",
          "capabilities": {
            "create": {
              "lifecycleCreate": {
                "status": "DISABLED"
              }
            },
            "update": {
              "profile": {
                "status": "DISABLED"
              },
              "password": {
                "seed": "RANDOM",
                "change": "KEEP_EXISTING",
                "status": "DISABLED"
              },
              "lifecycleDeactivate": {
                "status": "DISABLED"
              }
            }
          }
        }
      ]
  apps.getKeyCredentialForApplication:
    description: |-
      Gets a specific Application Key Credential by kid
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#get-key-credential-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "e": "AQAB",
          "n": "htbi5H5MN_oYaKcZ8vlWRZn2oTrPY0v8_2Br_VZPJgJ57dCgguq5dDk1Me_ax-B3kjBPdXcW8wEoUFaU30spyVeQjZrdqsSvF0nMW4OzrMOIqrGLwCrAoDBS8tutfk5Y7qc-5xABzxgu4BjgSK5nWXbCt_UR0DzVTknotmMGeT8tAej8F6GAphLa0YhIxWT7Jy-y_pdANsiUPRiZBoLueGI0rrCqgYHIQVjNoj4-si105KCXbQuyYM9_Cd-dyyu5KJ4Ic0cOW61gpx4pnecMgSy8OX57FEd06W2hExBd49ah6jra2KFMeOGe3rkIXirdkofl1mBgeQ77ruKO1wW9Qw",
          "kid": "mXtzOtml09Dg1ZCeKxTRBo3KrQuBWFkJ5oxhVagjTzo",
          "kty": "RSA",
          "use": "sig",
          "x5c": [
            "MIIDqDCCApCgAwIBAgIGAVGNQFX5MA0GCSqGSIb3DQEBBQUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTAeFw0xNTEyMTAxODU1MjJaFw0xNzEyMTAxODU2MjJaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJJjrcnI6cXBiXNq9YDgfYrQe2O5qEHG4MXP8Ue0sMeefFkFEHYHnHUeZCq6WTAGqR+1LFgOl+Eq9We5V+qNlGIfkFkQ3iHGBrIALKqLCd0Et76HicDiegz7j9DtN+lo0hG/gfcw5783L5g5xeQ7zVmCQMkFwoUA0uA3bsfUSrmfORHJL+EMNQT8XIXD8NkG4g6u7ylHVRTLgXbe+W/p04m3EP6l41xl+MhIpBaPxDsyUvcKCNwkZN3aZIin1O9Y4YJuDHxrM64/VtLLp0sC05iawAmfsLunF7rdJAkWUpPn+xkviyNQ3UpvwAYuDr+jKLUdh2reRnm1PezxMIXzBVMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEARnFIjyitrCGbleFr3KeAwdOyeHiRmgeKupX5ZopgXtcseJoToUIinX5DVw2fVZPahqs0Q7/a0wcVnTRpw6946qZCwKd/PvZ1feVuVEA5Ui3+XvHuSH5xLp7NvYG1snNEvlbN3+NDUMlWj2NEbihowUBt9+UxTpQO3+N08q3aZk3hOZ+tHt+1Te7KEEL/4CM28GZ9MY7fSrS7MAgp1+ZXtn+kRlMrXnQ49qBda37brwDRqmSY9PwNMbev3r+9ZHwxr9W5wXW4Ev4C4xngA7RkVoyDbItSUho0I0M0u/LHuppclnXrw97xyO5Z883eIBvPVjfRcxsJxXJ8jx70ATDskw=="
          ],
          "created": "2015-12-10T18:56:23.000Z",
          "x5t#S256": "5GOpy9CQVtfvBmu2T8BHvpKE4OGtC3BuS046t7p9pps",
          "expiresAt": "2017-12-10T18:56:22.000Z"
        }
      ]
  apps.getOauth-2-0TokenForApplication:
    description: |-
      Gets a token for the specified application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#get-oauth-2-0-token-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "oar579Mcp7OUsNTlo0g3",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabskvc6442nkvQO0h7",
              "title": "Native"
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00upcgi9dyWEOeCwM0g3",
              "title": "Saml Jackson"
            },
            "client": {
              "href": "https://$yourOktaDomain/oauth2/v1/clients/0oabskvc6442nkvQO0h7",
              "title": "Example Client App"
            },
            "revoke": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3",
              "hints": {
                "allow": [
                  "DELETE"
                ]
              }
            },
            "authorizationServer": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7",
              "title": "Example Authorization Server"
            }
          },
          "issuer": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7",
          "scopes": [
            "offline_access",
            "car:drive"
          ],
          "status": "ACTIVE",
          "userId": "00u5t60iloOHN9pBi0h7",
          "created": "2018-03-09T03:18:06.000Z",
          "clientId": "0oabskvc6442nkvQO0h7",
          "_embedded": {
            "scopes": [
              {
                "id": "scppb56cIl4GvGxy70g3",
                "name": "offline_access",
                "_links": {
                  "scope": {
                    "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes/scppb56cIl4GvGxy70g3",
                    "title": "offline_access"
                  }
                },
                "description": "Requests a refresh token by default, used to obtain more access tokens without re-prompting the user for authentication."
              },
              {
                "id": "scp142iq2J8IGRUCS0g4",
                "name": "car:drive",
                "_links": {
                  "scope": {
                    "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes/scp142iq2J8IGRUCS0g4",
                    "title": "Drive car"
                  }
                },
                "description": "Allows the user to drive a car.",
                "displayName": "Drive car"
              }
            ]
          },
          "expiresAt": "2018-03-16T03:18:06.000Z",
          "lastUpdated": "2018-03-09T03:18:06.000Z"
        }
      ]
  apps.getScopeConsentGrantForApplication:
    description: |-
      Fetches a single scope consent grant for the application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#get-scope-consent-grant-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "oaghm3sh9ukdkvDmO0h6",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/applicationId",
              "title": "Application Name"
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/applicationId/grants/oaghm3sh9ukdkvDmO0h6",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "client": {
              "href": "https://$yourOktaDomain/oauth2/v1/clients/clientId",
              "title": "Application Name"
            }
          },
          "issuer": "$yourOktaDomain",
          "source": "ADMIN",
          "status": "ACTIVE",
          "created": "2020-02-03T21:57:49.000Z",
          "scopeId": "okta.apps.manage",
          "clientId": "clientId",
          "_embedded": {
            "scope": {
              "id": "okta.apps.manage"
            }
          },
          "createdBy": {
            "id": "00u6eltha0nrSc47i0h7",
            "type": "User"
          },
          "lastUpdated": "2020-02-03T21:57:49.000Z"
        }
      ]
  apps.grantConsentToScopeForApplication:
    description: |-
      Grants consent for the application to request an OAuth 2.0 Okta scope
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#grant-consent-to-scope-for-application
    example:
      inputs: [
        {
          "issuer": "$yourOktaDomain",
          "scopeId": "okta.users.manage"
        }
      ]
      outputs: [
        {
          "id": "oaghm3sh9ukdkvDmO0h6",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/applicationId",
              "title": "Application Name"
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/applicationId/grants/oaghm3sh9ukdkvDmO0h6",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "client": {
              "href": "https://$yourOktaDomain/oauth2/v1/clients/clientId",
              "title": "Application Name"
            }
          },
          "issuer": "$yourOktaDomain",
          "source": "ADMIN",
          "status": "ACTIVE",
          "created": "2020-02-03T21:57:49.000Z",
          "scopeId": "okta.apps.manage",
          "clientId": "clientId",
          "_embedded": {
            "scope": {
              "id": "okta.apps.manage"
            }
          },
          "createdBy": {
            "id": "00u6eltha0nrSc47i0h7",
            "type": "User"
          },
          "lastUpdated": "2020-02-03T21:57:49.000Z"
        }
      ]
  apps.listApplicationsAssignedToGroup:
    description: |-
      Enumerates all applications assigned to a group
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#list-applications-assigned-to-a-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0oabkvBLDEKCNXBGYUAS",
          "name": "template_swa",
          "label": "Sample Plugin App",
          "_links": {
            "logo": [
              {
                "href": "https:/example.okta.com/img/logos/logo_1.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "self": {
              "href": "https://${yourOktaDomain}/api/v1/apps/0oabkvBLDEKCNXBGYUAS"
            },
            "users": {
              "href": "https://${yourOktaDomain}/api/v1/apps/0oabkvBLDEKCNXBGYUAS/users"
            },
            "groups": {
              "href": "https://${yourOktaDomain}/api/v1/apps/0oabkvBLDEKCNXBGYUAS/groups"
            },
            "deactivate": {
              "href": "https://${yourOktaDomain}/api/v1/apps/0oabkvBLDEKCNXBGYUAS/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2013-09-11T17:46:08.000Z",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "buttonField": "btn-login",
              "passwordField": "txtbox-password",
              "usernameField": "txtbox-username"
            }
          },
          "signOnMode": "BROWSER_PLUGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "EDIT_USERNAME_AND_PASSWORD",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2013-09-11T17:58:54.000Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
  apps.listApplicationsAssignedToUser:
    description: |-
      Enumerates all applications assigned to a user and optionally embeds their Application User in a single response
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#list-applications-assigned-to-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": 10,
          "value": [
            {
              "key": "id",
              "type": 0,
              "value": "0oa1gjh63g214q0Hq0g4"
            },
            {
              "key": [
                "name"
              ],
              "type": 0,
              "value": "testorgone_customsaml20app_1"
            },
            {
              "key": [
                "label"
              ],
              "type": 0,
              "value": "Custom Saml 2.0 App"
            },
            {
              "key": [
                "status"
              ],
              "type": 0,
              "value": "ACTIVE"
            },
            {
              "key": [
                "lastUpdated"
              ],
              "type": 0,
              "value": "2016-08-09T20:12:19.000Z"
            },
            {
              "key": [
                "created"
              ],
              "type": 0,
              "value": "2016-08-09T20:12:19.000Z"
            },
            {
              "key": [
                "accessibility"
              ],
              "type": 0,
              "value": {
                "type": 10,
                "value": [
                  {
                    "key": "selfService",
                    "type": 0,
                    "value": false
                  },
                  {
                    "key": [
                      "errorRedirectUrl"
                    ],
                    "type": 0,
                    "value": null
                  },
                  {
                    "key": [
                      "loginRedirectUrl"
                    ],
                    "type": 0,
                    "value": null
                  }
                ]
              }
            },
            {
              "key": [
                "visibility"
              ],
              "type": 0,
              "value": {
                "type": 10,
                "value": [
                  {
                    "key": "autoSubmitToolbar",
                    "type": 0,
                    "value": false
                  },
                  {
                    "key": [
                      "hide"
                    ],
                    "type": 0,
                    "value": {
                      "type": 10,
                      "value": [
                        {
                          "key": "iOS",
                          "type": 0,
                          "value": false
                        },
                        {
                          "key": [
                            "web"
                          ],
                          "type": 0,
                          "value": false
                        }
                      ]
                    }
                  },
                  {
                    "key": [
                      "appLinks"
                    ],
                    "type": 0,
                    "value": {
                      "type": 10,
                      "value": [
                        {
                          "key": "testorgone_customsaml20app_1_link",
                          "type": 0,
                          "value": true
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "key": [
                "features"
              ],
              "type": 0,
              "value": []
            },
            {
              "key": [
                "signOnMode"
              ],
              "type": 0,
              "value": "SAML_2_0"
            },
            {
              "key": [
                "credentials"
              ],
              "type": 0,
              "value": {
                "type": 10,
                "value": [
                  {
                    "key": "userNameTemplate",
                    "type": 0,
                    "value": {
                      "type": 10,
                      "value": [
                        {
                          "key": "template",
                          "type": 0,
                          "value": "fn:substringBefore"
                        },
                        {
                          "key": [
                            "type"
                          ],
                          "type": 0,
                          "value": "BUILT_IN"
                        }
                      ]
                    }
                  },
                  {
                    "key": [
                      "signing"
                    ],
                    "type": 0,
                    "value": {
                      "type": 10,
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "key": [
                "settings"
              ],
              "type": 0,
              "value": {
                "type": 10,
                "value": [
                  {
                    "key": "app",
                    "type": 0,
                    "value": {
                      "type": 10,
                      "value": null
                    }
                  },
                  {
                    "key": [
                      "notifications"
                    ],
                    "type": 0,
                    "value": {
                      "type": 10,
                      "value": [
                        {
                          "key": "vpn",
                          "type": 0,
                          "value": {
                            "type": 10,
                            "value": [
                              {
                                "key": "network",
                                "type": 0,
                                "value": {
                                  "type": 10,
                                  "value": [
                                    {
                                      "key": "connection",
                                      "type": 0,
                                      "value": "DISABLED"
                                    }
                                  ]
                                }
                              },
                              {
                                "key": [
                                  "message"
                                ],
                                "type": 0,
                                "value": null
                              },
                              {
                                "key": [
                                  "helpUrl"
                                ],
                                "type": 0,
                                "value": null
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "key": [
                      "signOn"
                    ],
                    "type": 0,
                    "value": {
                      "type": 10,
                      "value": [
                        {
                          "key": "defaultRelayState",
                          "type": 0,
                          "value": ""
                        },
                        {
                          "key": [
                            "ssoAcsUrl"
                          ],
                          "type": 0,
                          "value": "https://yourOktaDomain"
                        },
                        {
                          "key": [
                            "idpIssuer"
                          ],
                          "type": 0,
                          "value": "http://www.okta.com/org.externalKey"
                        },
                        {
                          "key": [
                            "audience"
                          ],
                          "type": 0,
                          "value": "https://example.com/tenant/123"
                        },
                        {
                          "key": [
                            "recipient"
                          ],
                          "type": 0,
                          "value": "http://recipient.okta.com"
                        },
                        {
                          "key": [
                            "destination"
                          ],
                          "type": 0,
                          "value": "http://destination.okta.com"
                        },
                        {
                          "key": [
                            "subjectNameIdTemplate"
                          ],
                          "type": 0,
                          "value": "user.userName"
                        },
                        {
                          "key": [
                            "subjectNameIdFormat"
                          ],
                          "type": 0,
                          "value": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
                        },
                        {
                          "key": [
                            "responseSigned"
                          ],
                          "type": 0,
                          "value": true
                        },
                        {
                          "key": [
                            "assertionSigned"
                          ],
                          "type": 0,
                          "value": true
                        },
                        {
                          "key": [
                            "signatureAlgorithm"
                          ],
                          "type": 0,
                          "value": "RSA_SHA256"
                        },
                        {
                          "key": [
                            "digestAlgorithm"
                          ],
                          "type": 0,
                          "value": "SHA256"
                        },
                        {
                          "key": [
                            "honorForceAuthn"
                          ],
                          "type": 0,
                          "value": true
                        },
                        {
                          "key": [
                            "authnContextClassRef"
                          ],
                          "type": 0,
                          "value": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport"
                        },
                        {
                          "key": [
                            "slo"
                          ],
                          "type": 0,
                          "value": {
                            "type": 10,
                            "value": [
                              {
                                "key": "enabled",
                                "type": 0,
                                "value": true
                              },
                              {
                                "key": [
                                  "spIssuer"
                                ],
                                "type": 0,
                                "value": "https://testorgone.okta.com"
                              },
                              {
                                "key": [
                                  "logoutUrl"
                                ],
                                "type": 0,
                                "value": "https://testorgone.okta.com/logout"
                              }
                            ]
                          }
                        },
                        {
                          "key": [
                            "spCertificate"
                          ],
                          "type": 0,
                          "value": {
                            "type": 10,
                            "value": [
                              {
                                "key": "x5c",
                                "type": 0,
                                "value": [
                                  "MIIFnDCCA4Q"
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "key": [
                            "requestCompressed"
                          ],
                          "type": 0,
                          "value": false
                        },
                        {
                          "key": [
                            "allowMultipleAcsEndpoints"
                          ],
                          "type": 0,
                          "value": false
                        },
                        {
                          "key": [
                            "acsEndpoints"
                          ],
                          "type": 0,
                          "value": []
                        },
                        {
                          "key": [
                            "attributeStatements"
                          ],
                          "type": 0,
                          "value": []
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "key": [
                "_links"
              ],
              "type": 0,
              "value": {
                "type": 10,
                "value": [
                  {
                    "key": "logo",
                    "type": 0,
                    "value": [
                      {
                        "type": 10,
                        "value": [
                          {
                            "key": "name",
                            "type": 0,
                            "value": "medium"
                          },
                          {
                            "key": [
                              "href"
                            ],
                            "type": 0,
                            "value": "http://testorgone.okta.com/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png"
                          },
                          {
                            "key": [
                              "type"
                            ],
                            "type": 0,
                            "value": "image/png"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "key": [
                      "appLinks"
                    ],
                    "type": 0,
                    "value": [
                      {
                        "type": 10,
                        "value": [
                          {
                            "key": "name",
                            "type": 0,
                            "value": "testorgone_customsaml20app_1_link"
                          },
                          {
                            "key": [
                              "href"
                            ],
                            "type": 0,
                            "value": "http://testorgone.okta.com/home/testorgone_customsaml20app_1/0oa1gjh63g214q0Hq0g4/aln1gofChJaerOVfY0g4"
                          },
                          {
                            "key": [
                              "type"
                            ],
                            "type": 0,
                            "value": "text/html"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "key": [
                      "help"
                    ],
                    "type": 0,
                    "value": {
                      "type": 10,
                      "value": [
                        {
                          "key": "href",
                          "type": 0,
                          "value": "http://testorgone-admin.okta.com/app/testorgone_customsaml20app_1/0oa1gjh63g214q0Hq0g4/setup/help/SAML_2_0/instructions"
                        },
                        {
                          "key": [
                            "type"
                          ],
                          "type": 0,
                          "value": "text/html"
                        }
                      ]
                    }
                  },
                  {
                    "key": [
                      "users"
                    ],
                    "type": 0,
                    "value": {
                      "type": 10,
                      "value": [
                        {
                          "key": "href",
                          "type": 0,
                          "value": "http://testorgone.okta.com/api/v1/apps/0oa1gjh63g214q0Hq0g4/users"
                        }
                      ]
                    }
                  },
                  {
                    "key": [
                      "deactivate"
                    ],
                    "type": 0,
                    "value": {
                      "type": 10,
                      "value": [
                        {
                          "key": "href",
                          "type": 0,
                          "value": "http://testorgone.okta.com/api/v1/apps/0oa1gjh63g214q0Hq0g4/lifecycle/deactivate"
                        }
                      ]
                    }
                  },
                  {
                    "key": [
                      "groups"
                    ],
                    "type": 0,
                    "value": {
                      "type": 10,
                      "value": [
                        {
                          "key": "href",
                          "type": 0,
                          "value": "http://testorgone.okta.com/api/v1/apps/0oa1gjh63g214q0Hq0g4/groups"
                        }
                      ]
                    }
                  },
                  {
                    "key": [
                      "metadata"
                    ],
                    "type": 0,
                    "value": {
                      "type": 10,
                      "value": [
                        {
                          "key": "href",
                          "type": 0,
                          "value": "http://testorgone.okta.com/api/v1/apps/0oa1gjh63g214q0Hq0g4/sso/saml/metadata"
                        },
                        {
                          "key": [
                            "type"
                          ],
                          "type": 0,
                          "value": "application/xml"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "key": [
                "_embedded"
              ],
              "type": 0,
              "value": {
                "type": 10,
                "value": [
                  {
                    "key": "user",
                    "type": 0,
                    "value": {
                      "type": 10,
                      "value": [
                        {
                          "key": "id",
                          "type": 0,
                          "value": "00ucw2RPGIUNTDQOYPOF"
                        },
                        {
                          "key": [
                            "externalId"
                          ],
                          "type": 0,
                          "value": null
                        },
                        {
                          "key": [
                            "created"
                          ],
                          "type": 0,
                          "value": "2014-03-21T23:31:35.000Z"
                        },
                        {
                          "key": [
                            "lastUpdated"
                          ],
                          "type": 0,
                          "value": "2014-03-21T23:31:35.000Z"
                        },
                        {
                          "key": [
                            "scope"
                          ],
                          "type": 0,
                          "value": "USER"
                        },
                        {
                          "key": [
                            "status"
                          ],
                          "type": 0,
                          "value": "ACTIVE"
                        },
                        {
                          "key": [
                            "statusChanged"
                          ],
                          "type": 0,
                          "value": "2014-03-21T23:31:35.000Z"
                        },
                        {
                          "key": [
                            "passwordChanged"
                          ],
                          "type": 0,
                          "value": null
                        },
                        {
                          "key": [
                            "syncState"
                          ],
                          "type": 0,
                          "value": "DISABLED"
                        },
                        {
                          "key": [
                            "lastSync"
                          ],
                          "type": 0,
                          "value": null
                        },
                        {
                          "key": [
                            "credentials"
                          ],
                          "type": 0,
                          "value": {
                            "type": 10,
                            "value": [
                              {
                                "key": "userName",
                                "type": 0,
                                "value": "user@example.com"
                              }
                            ]
                          }
                        },
                        {
                          "key": [
                            "_links"
                          ],
                          "type": 0,
                          "value": {
                            "type": 10,
                            "value": [
                              {
                                "key": "app",
                                "type": 0,
                                "value": {
                                  "type": 10,
                                  "value": [
                                    {
                                      "key": "href",
                                      "type": 0,
                                      "value": "https://${yourOktaDomain}/api/v1/apps/0oabizCHPNYALCHDUIOD"
                                    }
                                  ]
                                }
                              },
                              {
                                "key": [
                                  "user"
                                ],
                                "type": 0,
                                "value": {
                                  "type": 10,
                                  "value": [
                                    {
                                      "key": "href",
                                      "type": 0,
                                      "value": "https://${yourOktaDomain}/api/v1/users/00ucw2RPGIUNTDQOYPOF"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  apps.listApplicationsUsingKey:
    description: |-
      Enumerates all applications using a key
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#list-applications-using-a-key
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0oa1gjh63g214q0Hq0g4",
          "name": "testorgone_customsaml20app_1",
          "label": "Custom Saml 2.0 App",
          "_links": {
            "help": {
              "href": "http://testorgone-admin.okta.com/app/testorgone_customsaml20app_1/0oa1gjh63g214q0Hq0g4/setup/help/SAML_2_0/instructions",
              "type": "text/html"
            },
            "logo": [
              {
                "href": "http://testorgone.okta.com/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oa1gjh63g214q0Hq0g4/users"
            },
            "groups": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oa1gjh63g214q0Hq0g4/groups"
            },
            "appLinks": [
              {
                "href": "http://testorgone.okta.com/home/testorgone_customsaml20app_1/0oa1gjh63g214q0Hq0g4/aln1gofChJaerOVfY0g4",
                "name": "testorgone_customsaml20app_1_link",
                "type": "text/html"
              }
            ],
            "metadata": {
              "href": "http://testorgone.okta.com:/api/v1/apps/0oa1gjh63g214q0Hq0g4/sso/saml/metadata",
              "type": "application/xml"
            },
            "deactivate": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oa1gjh63g214q0Hq0g4/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2016-08-09T20:12:19.000Z",
          "features": [],
          "settings": {
            "app": {},
            "signOn": {
              "slo": {
                "enabled": true,
                "spIssuer": "https://testorgone.okta.com",
                "logoutUrl": "https://testorgone.com/logout"
              },
              "audience": "https://example.com/tenant/123",
              "idpIssuer": "http://www.okta.com/org.externalKey",
              "recipient": "http://recipient.okta.com",
              "ssoAcsUrl": "https://yourOktaDomain",
              "destination": "http://destination.okta.com",
              "acsEndpoints": [],
              "spCertificate": {
                "x5c": [
                  "MIIFnDCCA4"
                ]
              },
              "responseSigned": true,
              "assertionSigned": true,
              "digestAlgorithm": "SHA256",
              "honorForceAuthn": true,
              "defaultRelayState": "",
              "requestCompressed": false,
              "signatureAlgorithm": "RSA_SHA256",
              "attributeStatements": [],
              "subjectNameIdFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              "authnContextClassRef": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
              "subjectNameIdTemplate": "user.userName",
              "allowMultipleAcsEndpoints": false
            },
            "notifications": {
              "vpn": {
                "helpUrl": null,
                "message": null,
                "network": {
                  "connection": "DISABLED"
                }
              }
            }
          },
          "signOnMode": "SAML_2_0",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "testorgone_customsaml20app_1_link": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "signing": {
              "kid": "SIMcCQNY3uwXoW3y0vf6VxiBb5n9pf8L2fK8d-FIbm4"
            },
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "fn:substringBefore"
            }
          },
          "lastUpdated": "2016-08-09T20:12:19.000Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null,
            "loginRedirectUrl": null
          }
        }
      ]
  apps.listApplicationsWithDefaults:
    description: |-
      Enumerates all apps added to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#list-applications-with-defaults
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0oa1gjh63g214q0Hq0g4",
          "name": "testorgone_customsaml20app_1",
          "label": "Custom Saml 2.0 App",
          "_links": {
            "help": {
              "href": "http://testorgone-admin.okta.com/app/testorgone_customsaml20app_1/0oa1gjh63g214q0Hq0g4/setup/help/SAML_2_0/instructions",
              "type": "text/html"
            },
            "logo": [
              {
                "href": "http://testorgone.okta.com/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oa1gjh63g214q0Hq0g4/users"
            },
            "groups": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oa1gjh63g214q0Hq0g4/groups"
            },
            "appLinks": [
              {
                "href": "http://testorgone.okta.com/home/testorgone_customsaml20app_1/0oa1gjh63g214q0Hq0g4/aln1gofChJaerOVfY0g4",
                "name": "testorgone_customsaml20app_1_link",
                "type": "text/html"
              }
            ],
            "metadata": {
              "href": "http://testorgone.okta.com:/api/v1/apps/0oa1gjh63g214q0Hq0g4/sso/saml/metadata",
              "type": "application/xml"
            },
            "deactivate": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oa1gjh63g214q0Hq0g4/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2016-08-09T20:12:19.000Z",
          "features": [],
          "settings": {
            "app": {},
            "signOn": {
              "slo": {
                "enabled": true,
                "spIssuer": "https://testorgone.okta.com",
                "logoutUrl": "https://testorgone.okta.com/logout"
              },
              "audience": "https://example.com/tenant/123",
              "idpIssuer": "http://www.okta.com/org.externalKey",
              "recipient": "http://recipient.okta.com",
              "ssoAcsUrl": "https://yourOktaDomain",
              "destination": "http://destination.okta.com",
              "acsEndpoints": [],
              "spCertificate": {
                "x5c": [
                  "MIIFnDCCA4QCCQD"
                ]
              },
              "responseSigned": true,
              "assertionSigned": true,
              "digestAlgorithm": "SHA256",
              "honorForceAuthn": true,
              "defaultRelayState": "",
              "requestCompressed": false,
              "signatureAlgorithm": "RSA_SHA256",
              "attributeStatements": [],
              "subjectNameIdFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              "authnContextClassRef": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
              "subjectNameIdTemplate": "user.userName",
              "allowMultipleAcsEndpoints": false
            },
            "notifications": {
              "vpn": {
                "helpUrl": null,
                "message": null,
                "network": {
                  "connection": "DISABLED"
                }
              }
            }
          },
          "signOnMode": "SAML_2_0",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "testorgone_customsaml20app_1_link": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "signing": {},
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "fn:substringBefore"
            }
          },
          "lastUpdated": "2016-08-09T20:12:19.000Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null,
            "loginRedirectUrl": null
          }
        }
      ]
  apps.listCsrsForApplication:
    description: |-
      Enumerates CSRs for an application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#list-csrs-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50",
          "csr": "MIIC4DCCAcgCAQAwcTELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xEzARBgNVBAoMCk9rdGEsIEluYy4xDDAKBgNVBAsMA0RldjESMBAGA1UEAwwJU1AgSXNzdWVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6m8jHVCr9/tKvvbFN59T4raoCs/78KRm4fSefHQOv1TKLXo4wTLbsqYWRWc5u0sd5orUMQgPQOyj3i6qh13mALY4BzrT057EG1BUNjGg29QgYlnOk2iX890e5BIDMQQEIKFrvOi2V8cLUkLvE2ydRn0VO1Q1frbUkYeStJYC5Api2JQsYRwa+1ZeDH1ITnIzUaugWhW2WB2lSnwZkenne5KtffxMPYVu+IhNRHoKaRA6Z51YNhMJIx17JM2hs/H4Ka3drk6kzDf7ofk/yBpb9yBWyU7CTSQhdoHidxqFprMDaT66W928t3AeOENHBuwn8c2K9WeGG+bELNyQRJVmawIDAQABoCowKAYJKoZIhvcNAQkOMRswGTAXBgNVHREEEDAOggxkZXYub2t0YS5jb20wDQYJKoZIhvcNAQELBQADggEBAA2hsVJRVM+A83X9MekjTnIbt19UNT8wX7wlE9jUKirWsxceLiZBpVGn9qfKhhVIpvdaIRSeoFYS2Kg/m1G6bCvjmZLcrQ5FcEBjZH2NKfNppGVnfC2ugtUkBtCB+UUzOhKhRKJtGugenKbP33zRWWIqnd2waF6Cy8TIuqQVPbwEDN9bCbAs7ND6CFYNguY7KYjWzQOeAR716eqpEEXuPYAS4nx/ty4ylonR8cv+gpq51rvq80A4k/36aoeM0Y6I4w64vhTfuvWW2UYFUD+/+y2FA2CSP4JfctySrf1s525v6fzTFZ3qZbB5OZQtP2b8xYWktMzywsxGKDoVDB4wkH4=",
          "kty": "RSA",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oad5lTSBOMUBOBVVQSC/credentials/csrs/h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "publish": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oad5lTSBOMUBOBVVQSC/credentials/csrs/h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50/lifecycle/publish",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "created": "2017-03-28T01:11:10.000Z"
        }
      ]
  apps.listFeaturesForApplication:
    description: |-
      Fetches the Feature objects for an application.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#list-features-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "name": "USER_PROVISIONING",
          "_links": {
            "self": {
              "href": "http://$yourOktaDomain/api/v1/apps/applicationId/features/USER_PROVISIONING",
              "hints": {
                "allow": [
                  "GET",
                  "PUT"
                ]
              }
            }
          },
          "status": "ENABLED",
          "description": "User provisioning settings from Okta to a downstream application",
          "capabilities": {
            "create": {
              "lifecycleCreate": {
                "status": "DISABLED"
              }
            },
            "update": {
              "profile": {
                "status": "DISABLED"
              },
              "password": {
                "seed": "RANDOM",
                "change": "KEEP_EXISTING",
                "status": "DISABLED"
              },
              "lifecycleDeactivate": {
                "status": "DISABLED"
              }
            }
          }
        }
      ]
  apps.listGroupsAssignedToApplication:
    description: |-
      Enumerates group assignments for an application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#list-groups-assigned-to-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00gbkkGFFWZDLCNTAGQR",
          "priority": 0,
          "lastUpdated": "2013-10-02T07:38:20.000Z"
        }
      ]
  apps.listKeyCredentialsForApplication:
    description: |-
      Enumerates key credentials for an application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#list-key-credentials-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "e": "AQAB",
          "n": "mkC6yAJVvFwUlmM9gKjb2d-YK5qHFt-mXSsbjWKKs4EfNm-BoQeeovBZtSACyaqLc8IYFTPEURFcbDQ9DkAL04uUIRD2gaHYY7uK0jsluEaXGq2RAIsmzAwNTzkiDw4q9pDL_q7n0f_SDt1TsMaMQayB6bU5jWsmqcWJ8MCRJ1aJMjZ16un5UVx51IIeCbe4QRDxEXGAvYNczsBoZxspDt28esSpq5W0dBFxcyGVudyl54Er3FzAguhgfMVjH-bUec9j2Tl40qDTktrYgYfxz9pfjm01Hl4WYP1YQxeETpSL7cQ5Ihz4jGDtHUEOcZ4GfJrPzrGpUrak8Qp5xcwCqQ",
          "kid": "SIMcCQNY3uwXoW3y0vf6VxiBb5n9pf8L2fK8d-FIbm4",
          "kty": "RSA",
          "use": "sig",
          "x5c": [
            "MIIDqDCCApCgAwIBAgIGAVGNQFX5MA0GCSqGSIb3DQEBBQUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTAeFw0xNTEyMTAxODU1MjJaFw0xNzEyMTAxODU2MjJaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJJjrcnI6cXBiXNq9YDgfYrQe2O5qEHG4MXP8Ue0sMeefFkFEHYHnHUeZCq6WTAGqR+1LFgOl+Eq9We5V+qNlGIfkFkQ3iHGBrIALKqLCd0Et76HicDiegz7j9DtN+lo0hG/gfcw5783L5g5xeQ7zVmCQMkFwoUA0uA3bsfUSrmfORHJL+EMNQT8XIXD8NkG4g6u7ylHVRTLgXbe+W/p04m3EP6l41xl+MhIpBaPxDsyUvcKCNwkZN3aZIin1O9Y4YJuDHxrM64/VtLLp0sC05iawAmfsLunF7rdJAkWUpPn+xkviyNQ3UpvwAYuDr+jKLUdh2reRnm1PezxMIXzBVMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEARnFIjyitrCGbleFr3KeAwdOyeHiRmgeKupX5ZopgXtcseJoToUIinX5DVw2fVZPahqs0Q7/a0wcVnTRpw6946qZCwKd/PvZ1feVuVEA5Ui3+XvHuSH5xLp7NvYG1snNEvlbN3+NDUMlWj2NEbihowUBt9+UxTpQO3+N08q3aZk3hOZ+tHt+1Te7KEEL/4CM28GZ9MY7fSrS7MAgp1+ZXtn+kRlMrXnQ49qBda37brwDRqmSY9PwNMbev3r+9ZHwxr9W5wXW4Ev4C4xngA7RkVoyDbItSUho0I0M0u/LHuppclnXrw97xyO5Z883eIBvPVjfRcxsJxXJ8jx70ATDskw=="
          ],
          "created": "2015-12-10T18:56:23.000Z",
          "x5t#S256": "5GOpy9CQVtfvBmu2T8BHvpKE4OGtC3BuS046t7p9pps",
          "expiresAt": "2017-12-10T18:56:22.000Z"
        }
      ]
  apps.listOauth-2-0TokensForApplication:
    description: |-
      Lists all tokens for the application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#list-oauth-2-0-tokens-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "oar579Mcp7OUsNTlo0g3",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabskvc6442nkvQO0h7",
              "title": "Native"
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00upcgi9dyWEOeCwM0g3",
              "title": "Saml Jackson"
            },
            "client": {
              "href": "https://$yourOktaDomain/oauth2/v1/clients/0oabskvc6442nkvQO0h7",
              "title": "Example Client App"
            },
            "revoke": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3",
              "hints": {
                "allow": [
                  "DELETE"
                ]
              }
            },
            "authorizationServer": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7",
              "title": "Example Authorization Server"
            }
          },
          "issuer": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7",
          "scopes": [
            "offline_access",
            "car:drive"
          ],
          "status": "ACTIVE",
          "userId": "00u5t60iloOHN9pBi0h7",
          "created": "2018-03-09T03:18:06.000Z",
          "clientId": "0oabskvc6442nkvQO0h7",
          "expiresAt": "2018-03-16T03:18:06.000Z",
          "lastUpdated": "2018-03-09T03:18:06.000Z"
        }
      ]
  apps.listScopeConsentGrantsForApplication:
    description: |-
      Lists all scope consent grants for the application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#list-scope-consent-grants-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "oag91n9ruw3dsaXzP0h6",
          "_links": {
            "app": {
              "href": "$yourOktaDomain/api/v1/apps/applicationId",
              "title": "Application Name"
            },
            "self": {
              "href": "$yourOktaDomain/api/v1/apps/applicationId/grants/oag91n9ruw3dsaXzP0h6",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "client": {
              "href": "$yourOktaDomain/oauth2/v1/clients/clientId",
              "title": "Application Name"
            }
          },
          "issuer": "$yourOktaDomain",
          "source": "ADMIN",
          "status": "ACTIVE",
          "created": "2019-02-21T16:54:00.000Z",
          "scopeId": "okta.users.read",
          "clientId": "clientId",
          "createdBy": {
            "id": "00u6eltha0nrSc47i0h7",
            "type": "User"
          },
          "lastUpdated": "2019-02-21T16:54:00.000Z"
        }
      ]
  apps.listUsersAssignedToApplication:
    description: |-
      Enumerates all assigned Application users for an application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#list-users-assigned-to-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00ui2sVIFZNCNKFFNBPM",
          "scope": "USER",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oajiqIRNXPPJBNZMGYL"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00ui2sVIFZNCNKFFNBPM"
            }
          },
          "status": "PROVISIONED",
          "created": "2014-08-15T18:59:43.000Z",
          "profile": {
            "role": "CEO",
            "email": "user@example.com",
            "profile": "Standard Platform User",
            "lastName": "McJanky",
            "firstName": "Karl",
            "mobilePhone": "415-555-555",
            "secondEmail": null,
            "salesforceGroups": []
          },
          "lastSync": "2014-08-15T18:59:48.000Z",
          "syncState": "SYNCHRONIZED",
          "externalId": "005o0000000umnEAAQ",
          "credentials": {
            "userName": "user@example.com"
          },
          "lastUpdated": "2014-08-15T18:59:48.000Z",
          "statusChanged": "2014-08-15T18:59:48.000Z",
          "passwordChanged": null
        }
      ]
  apps.previewSamlMetadataForApplication:
    description: |-
      Previews SAML metadata based on a specific key credential for an application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#preview-saml-metadata-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "@entityID": "exk39sivhuytV2D8H0h7",
          "IDPSSODescriptor": {
            "NameIDFormat": [
              "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"
            ],
            "KeyDescriptor": {
              "@use": "signing",
              "KeyInfo": {
                "X509Data": {
                  "X509Certificate": "MIIDqDCCApCgAwIBAgIGAVGNO4qeMA0GCSqGSIb3DQEBBQUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTAeFw0xNTEyMTAxODUwMDhaFw0xNzEyMTAxODUxMDdaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALAakG48bgcTWHdwmVLHig0mkiRejxIVm3wbzrNSJcBruTq2zCYZ1rGfVxTYON8kJqvkXPmvkzWKhpEkvhubL+mx29XpXY0AsNIfgcm5xIV56yhXSvlMdqzGo3ciRwoACaF+ClNLxmXK9UTZD89BbVVGCG5AEvja0eCQ0GYsO5i9aSI5aTroab8Aew31PuWl/RGQWmjVy8+7P4wwkKKJNKCpxMYDlhfaWRp0zwUSbUCO0qEyeAYdZx6CLES4FGrDi/7D6G+ewWC+kbz1tL1XpF2Dcg3+IOlHrV6VWzz3rG39v9zFIncjvoQJFDGWhpqGqcmXvgH0Ze3SVcVF01T+bK0CAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAAHmnSZ4imjNrIf9wxfQIcqHXEBoJ+oJtd59cw1Ur/YQY9pKXxoglqCQ54ZmlIf4GghlcZhslLO+mNdkQVwSmWMh6KLxVM18/xAkq8zyKbMbvQnTjFB7x45bgokwbjhivWqrB5LYHHCVN7k/8mKlS4eCKCi6RGEmErjojr4QN2xV0qAqP6CcGANgpepsQJCzlWucMFKAh0x9Kl8fmiQodfyLXyrebYsVnLrMfjxE1b6dg4jKvv975tf5wreQSYZ7m//g3/+NnuDKkN/03HqhV7hTNi1fyctXk8I5Nwgyr+pT5LT2kYoEdncuy+GQGzE9yLOhC4HNfHQXpqp2tMPdRlw=="
                }
              }
            },
            "SingleSignOnService": [
              {
                "@Binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                "@Location": "https://$yourOktaDomain/app/sample-app/exk39sivhuytV2D8H0h7/sso/saml"
              },
              {
                "@Binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                "@Location": "https://$yourOktaDomain/app/sample-app/exk39sivhuytV2D8H0h7/sso/saml"
              }
            ],
            "@WantAuthnRequestsSigned": "false",
            "@protocolSupportEnumeration": "urn:oasis:names:tc:SAML:2.0:protocol"
          }
        }
      ]
  apps.publishCsrForApplication:
    description: |-
      Updates the CSR with a signed X.509 certificate and adds it into the application key credentials
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#publish-csr-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "e": "AQAB",
          "n": "mkC6yAJVvFwUlmM9gKjb2d-YK5qHFt-mXSsbjWKKs4EfNm-BoQeeovBZtSACyaqLc8IYFTPEURFcbDQ9DkAL04uUIRD2gaHYY7uK0jsluEaXGq2RAIsmzAwNTzkiDw4q9pDL_q7n0f_SDt1TsMaMQayB6bU5jWsmqcWJ8MCRJ1aJMjZ16un5UVx51IIeCbe4QRDxEXGAvYNczsBoZxspDt28esSpq5W0dBFxcyGVudyl54Er3FzAguhgfMVjH-bUec9j2Tl40qDTktrYgYfxz9pfjm01Hl4WYP1YQxeETpSL7cQ5Ihz4jGDtHUEOcZ4GfJrPzrGpUrak8Qp5xcwCqQ",
          "kid": "ZC5C-1gEUwVxiYI8xdmYYDI3Noc4zI24fLNxBpZVR04",
          "kty": "RSA",
          "use": "sig",
          "x5c": [
            "MIIFgjCCA2qgAwIBAgICEAcwDQYJKoZIhvcNAQELBQAwXjELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMQ0wCwYDVQQKDARPa3RhMQwwCgYDVQQLDANFbmcxDTALBgNVBAMMBFJvb3QwHhcNMTcwMzI3MjEyMDQ3WhcNMTgwNDA2MjEyMDQ3WjB4MQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzETMBEGA1UECgwKT2t0YSwgSW5jLjEQMA4GA1UECwwHSmFua3lDbzEVMBMGA1UEAwwMSWRQIElzc3VlciA3MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmkC6yAJVvFwUlmM9gKjb2d+YK5qHFt+mXSsbjWKKs4EfNm+BoQeeovBZtSACyaqLc8IYFTPEURFcbDQ9DkAL04uUIRD2gaHYY7uK0jsluEaXGq2RAIsmzAwNTzkiDw4q9pDL/q7n0f/SDt1TsMaMQayB6bU5jWsmqcWJ8MCRJ1aJMjZ16un5UVx51IIeCbe4QRDxEXGAvYNczsBoZxspDt28esSpq5W0dBFxcyGVudyl54Er3FzAguhgfMVjH+bUec9j2Tl40qDTktrYgYfxz9pfjm01Hl4WYP1YQxeETpSL7cQ5Ihz4jGDtHUEOcZ4GfJrPzrGpUrak8Qp5xcwCqQIDAQABo4IBLjCCASowCQYDVR0TBAIwADARBglghkgBhvhCAQEEBAMCBkAwMwYJYIZIAYb4QgENBCYWJE9wZW5TU0wgR2VuZXJhdGVkIFNlcnZlciBDZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQUVqJukDmyENw/2pTApbxc/HRKbngwgZAGA1UdIwSBiDCBhYAUFx245ZZXqWTTbARfMlFWN77L9EahYqRgMF4xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEMMAoGA1UECwwDRW5nMQ0wCwYDVQQDDARSb290ggkAlIfpwZjO5o8wDgYDVR0PAQH/BAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMA0GCSqGSIb3DQEBCwUAA4ICAQCcoBSRtY+9cJY00hLvq6AloYZcdn/kUQupfmyz4n3lKE3wV2FB0swKnK0QDi8iNuQJFdag/19vDHC4/LhoSuv1Q+KXM61pPZVRXXPyC1+e7Y6hj93tEI5HcqLPcDRH1AIG2l8tE7LBn+MQB5Vh6oxjG2IdoWxg6abMfISU+MauPWql4vMDUWo9iNShAo44Z5fd+nuz+hlAinU9Xn9Jf2QsfKvcbMRq7iuqgkabgdmObmWb9KK0Vm7TDkxCH0pB0onPr6epVUP8Obg/pT1Oj/1hOLbfR8CHHWdAWzUBGGvp2TIy2A8LUaEoFnwkxZfdL7Bnd0RH/ClBtAjzLOxmUo7NbZmEnYCcD5pZz7BdZI0db/eBXFqfOlA88rEe+9Sv+NndIq0/WNIIsJi2RgjJnxsxvB5MjhhzmItpFIUl5yqoO3C9jcCp6HDBJxtCGbvAr5ALPn5RCJeBIr67WpAiTd7L3Ebu9SQZlXnoHX8kP04EA6ylR3W0EFbh7KUtq8M2H2vo0wjMj7ysl/3tT7cEZ97s1ygO5iJx3GfMDyrDhtLXSBJ20uSxTJeptRw8SDiwTqunIh1WyKlcQz1WGauSbW4eXdj/r9KYMJ3qMMkdP/9THQUtTcOYx51r8RV9pdzqF2HPnZZNziBa+wXJZHEWp70NyoakNthgYwtypqiDHs2f3Q=="
          ],
          "created": "2017-03-27T21:19:57.000Z",
          "x5t#S256": "lt0HQ-Ty_f_5icHGjUTrrNSO6dofPTRoPzOZhNSg5Kc",
          "expiresAt": "2018-04-06T21:20:47.000Z",
          "lastUpdated": "2017-03-27T21:19:57.000Z"
        }
      ]
  apps.removeGroupFromApplication:
    description: |-
      Removes a group assignment from an application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#remove-group-from-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  apps.removeUserFromApplication:
    description: |-
      Removes an assignment for a user from an application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#remove-user-from-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  apps.revokeCsrFromApplication:
    description: |-
      Revokes a CSR and deletes the key pair from the application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#revoke-csr-from-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  apps.revokeOauth-2-0TokenForApplications:
    description: |-
      Revokes the specified token for the specified application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#revoke-oauth-2-0-token-for-applications
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  apps.revokeOauth-2-0TokensForApplication:
    description: |-
      Revokes all tokens for the specified application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#revoke-oauth-2-0-tokens-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  apps.revokeScopeConsentGrantForApplication:
    description: |-
      Revokes permission for the application to request the given scope
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#revoke-scope-consent-grant-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  apps.setDefaultProvisioningConnectionForApplication:
    description: |-
      Sets the default Provisioning Connection for an application.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#set-default-provisioning-connection-for-application
    example:
      inputs: [
        {
          "profile": {
            "token": "TEST",
            "authScheme": "TOKEN"
          }
        }
      ]
      outputs: [
        {
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/applicationId/connections/default",
              "hints": {
                "allow": [
                  "POST",
                  "GET"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/apps/applicationId/connections/default/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ENABLED",
          "authScheme": "TOKEN"
        }
      ]
  apps.setSelfServiceApplicationAssignment:
    description: |-
      Enables or disables a self-service application assignment by modifying the accessibility.selfService property
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#set-self-service-application-assignment
    example:
      inputs: [
        {
          "name": "testorgone_examplecustomsaml20app_1",
          "label": "Example Custom SAML 2.0 App",
          "signOnMode": "SAML_2_0",
          "accessibility": {
            "selfService": true,
            "errorRedirectUrl": null,
            "loginRedirectUrl": null
          }
        }
      ]
      outputs: [
        {}
      ]
  apps.setSwaAdministratorSetsUsernameAndPassword:
    description: |-
      Configures the ADMIN_SETS_CREDENTIALS scheme for a SWA application with a username template
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#set-swa-administrator-sets-username-and-password
    example:
      inputs: [
        {
          "name": "template_swa",
          "label": "Sample Plugin App",
          "status": "ACTIVE",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "buttonField": "btn-login",
              "passwordField": "txtbox-password",
              "usernameField": "txtbox-username"
            }
          },
          "signOnMode": "BROWSER_PLUGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "ADMIN_SETS_CREDENTIALS",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
      outputs: [
        {
          "id": "0oabkvBLDEKCNXBGYUAS",
          "name": "template_swa",
          "label": "Sample Plugin App",
          "_links": {
            "logo": [
              {
                "href": "https:/example.okta.com/img/logos/logo_1.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS"
            },
            "users": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/users"
            },
            "groups": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/groups"
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2013-09-11T17:46:08.000Z",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "buttonField": "btn-login",
              "passwordField": "txtbox-password",
              "usernameField": "txtbox-username"
            }
          },
          "signOnMode": "BROWSER_PLUGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "ADMIN_SETS_CREDENTIALS",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2013-10-01T06:28:03.486Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
  apps.setSwaOktaPassword:
    description: |-
      Configures the EXTERNAL_PASSWORD_SYNC scheme for a SWA application with a username template
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#set-swa-okta-password
    example:
      inputs: [
        {
          "name": "template_swa",
          "label": "Sample Plugin App",
          "status": "ACTIVE",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "buttonField": "btn-login",
              "passwordField": "txtbox-password",
              "usernameField": "txtbox-username"
            }
          },
          "signOnMode": "BROWSER_PLUGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "EXTERNAL_PASSWORD_SYNC",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
      outputs: [
        {
          "id": "0oabkvBLDEKCNXBGYUAS",
          "name": "template_swa",
          "label": "Sample Plugin App",
          "_links": {
            "logo": [
              {
                "href": "https:/example.okta.com/img/logos/logo_1.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS"
            },
            "users": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/users"
            },
            "groups": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/groups"
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2013-09-11T17:46:08.000Z",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "buttonField": "btn-login",
              "passwordField": "txtbox-password",
              "usernameField": "txtbox-username"
            }
          },
          "signOnMode": "BROWSER_PLUGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "EXTERNAL_PASSWORD_SYNC",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2013-10-01T06:30:17.151Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
  apps.setSwaSharedCredentials:
    description: |-
      Configures the SHARED_USERNAME_AND_PASSWORD scheme for a SWA application with a username and password
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#set-swa-shared-credentials
    example:
      inputs: [
        {
          "name": "template_swa",
          "label": "Sample Plugin App",
          "status": "ACTIVE",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "buttonField": "btn-login",
              "passwordField": "txtbox-password",
              "usernameField": "txtbox-username"
            }
          },
          "signOnMode": "BROWSER_PLUGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "SHARED_USERNAME_AND_PASSWORD",
            "password": {
              "value": "sharedpassword"
            },
            "userName": "sharedusername",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
      outputs: [
        {
          "id": "0oabkvBLDEKCNXBGYUAS",
          "name": "template_swa",
          "label": "Sample Plugin App",
          "_links": {
            "logo": [
              {
                "href": "https:/example.okta.com/img/logos/logo_1.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS"
            },
            "users": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/users"
            },
            "groups": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/groups"
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2013-09-11T17:46:08.000Z",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "buttonField": "btn-login",
              "passwordField": "txtbox-password",
              "usernameField": "txtbox-username"
            }
          },
          "signOnMode": "BROWSER_PLUGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "SHARED_USERNAME_AND_PASSWORD",
            "password": {},
            "userName": "sharedusername",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2013-10-01T06:20:18.436Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
  apps.setSwaUserEditablePassword:
    description: |-
      Configures the EDIT_PASSWORD_ONLY scheme for a SWA application with a username template
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#set-swa-user-editable-password
    example:
      inputs: [
        {
          "name": "template_swa",
          "label": "Sample Plugin App",
          "status": "ACTIVE",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "buttonField": "btn-login",
              "passwordField": "txtbox-password",
              "usernameField": "txtbox-username"
            }
          },
          "signOnMode": "BROWSER_PLUGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "EDIT_PASSWORD_ONLY",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
      outputs: [
        {
          "id": "0oabkvBLDEKCNXBGYUAS",
          "name": "template_swa",
          "label": "Sample Plugin App",
          "_links": {
            "logo": [
              {
                "href": "https:/example.okta.com/img/logos/logo_1.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS"
            },
            "users": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/users"
            },
            "groups": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/groups"
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2013-09-11T17:46:08.000Z",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "buttonField": "btn-login",
              "passwordField": "txtbox-password",
              "usernameField": "txtbox-username"
            }
          },
          "signOnMode": "BROWSER_PLUGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "EDIT_PASSWORD_ONLY",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2013-10-01T06:25:37.612Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
  apps.setSwaUserEditableUsernameAndPassword:
    description: |-
      Configures the EDIT_USERNAME_AND_PASSWORD scheme for a SWA application with a username template
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#set-swa-user-editable-username-and-password
    example:
      inputs: [
        {
          "name": "template_swa",
          "label": "Sample Plugin App",
          "status": "ACTIVE",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "buttonField": "btn-login",
              "passwordField": "txtbox-password",
              "usernameField": "txtbox-username"
            }
          },
          "signOnMode": "BROWSER_PLUGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "EDIT_USERNAME_AND_PASSWORD",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
      outputs: [
        {
          "id": "0oabkvBLDEKCNXBGYUAS",
          "name": "template_swa",
          "label": "Sample Plugin App",
          "_links": {
            "logo": [
              {
                "href": "https:/example.okta.com/img/logos/logo_1.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "self": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS"
            },
            "users": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/users"
            },
            "groups": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/groups"
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabkvBLDEKCNXBGYUAS/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2013-09-11T17:46:08.000Z",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "buttonField": "btn-login",
              "passwordField": "txtbox-password",
              "usernameField": "txtbox-username"
            }
          },
          "signOnMode": "BROWSER_PLUGIN",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "EDIT_USERNAME_AND_PASSWORD",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2013-10-01T06:28:03.486Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
  apps.updateApplicationCredentialsForAssignedUser:
    description: |-
      Updates a user's credentials for an assigned application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#update-application-credentials-for-assigned-user
    example:
      inputs: [
        {
          "credentials": {
            "password": {
              "value": "updatedP@55word"
            },
            "userName": "user@example.com"
          }
        }
      ]
      outputs: [
        {
          "id": "00ud4tVDDXYVKPXKVLCO",
          "scope": "USER",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oad5lTSBOMUBOBVVQSC"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00ud4tVDDXYVKPXKVLCO"
            }
          },
          "status": "ACTIVE",
          "created": "2014-07-03T17:24:36.000Z",
          "profile": {},
          "lastSync": null,
          "syncState": "DISABLED",
          "externalId": null,
          "credentials": {
            "password": {},
            "userName": "user@example.com"
          },
          "lastUpdated": "2014-07-03T17:26:05.000Z",
          "statusChanged": "2014-07-03T17:24:36.000Z",
          "passwordChanged": "2014-07-03T17:26:05.000Z"
        }
      ]
  apps.updateApplicationProfileForAssignedUser:
    description: |-
      Updates a user's profile for an application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#update-application-profile-for-assigned-user
    example:
      inputs: [
        {
          "profile": {
            "role": "Developer",
            "profile": "Gold Partner User",
            "salesforceGroups": [
              "Partner"
            ]
          }
        }
      ]
      outputs: [
        {
          "id": "00ujsgVNDRESKKXERBUJ",
          "scope": "USER",
          "_links": {
            "app": {
              "href": "https://example.com/api/v1/apps/0oad5lTSBOMUBOBVVQSC"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00ud4tVDDXYVKPXKVLCO"
            }
          },
          "status": "PROVISIONED",
          "created": "2014-08-16T02:35:14.000Z",
          "profile": {
            "role": "Developer",
            "email": "saml.jackson@example.com",
            "profile": "Gold Partner User",
            "lastName": "Jackson",
            "firstName": "Saml",
            "mobilePhone": null,
            "secondEmail": null,
            "salesforceGroups": [
              "Partner"
            ]
          },
          "lastSync": "2014-08-16T02:56:49.000Z",
          "syncState": "SYNCHRONIZED",
          "externalId": "005o0000000uqJaAAI",
          "credentials": {
            "userName": "saml.jackson@example.com"
          },
          "lastUpdated": "2014-08-16T02:56:49.000Z",
          "statusChanged": "2014-08-16T02:56:49.000Z",
          "passwordChanged": null
        }
      ]
  apps.updateFeatureForApplication:
    description: |-
      Updates a Feature object for an application.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#update-feature-for-application
    example:
      inputs: [
        {
          "create": {
            "lifecycleCreate": {
              "status": "ENABLED"
            }
          },
          "update": {
            "profile": {
              "status": "ENABLED"
            },
            "password": {
              "seed": "RANDOM",
              "change": "CYCLE",
              "status": "ENABLED"
            },
            "lifecycleDeactivate": {
              "status": "ENABLED"
            }
          }
        }
      ]
      outputs: [
        {
          "name": "USER_PROVISIONING",
          "_links": {
            "self": {
              "href": "http://$yourOktaDomain/api/v1/apps/applicationId/features/USER_PROVISIONING",
              "hints": {
                "allow": [
                  "GET",
                  "PUT"
                ]
              }
            }
          },
          "status": "ENABLED",
          "description": "User provisioning settings from Okta to a downstream application",
          "capabilities": {
            "create": {
              "lifecycleCreate": {
                "status": "DISABLED"
              }
            },
            "update": {
              "profile": {
                "status": "DISABLED"
              },
              "password": {
                "seed": "RANDOM",
                "change": "KEEP_EXISTING",
                "status": "DISABLED"
              },
              "lifecycleDeactivate": {
                "status": "DISABLED"
              }
            }
          }
        }
      ]
  apps.updateKeyCredentialForApplication:
    description: |-
      Updates the Application Key Credential by kid
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#update-key-credential-for-application
    example:
      inputs: [
        {
          "name": "zendesk",
          "label": "Zendesk",
          "signOnMode": "SAML_2_0",
          "credentials": {
            "signing": {
              "kid": "SIMcCQNY3uwXoW3y0vf6VxiBb5n9pf8L2fK8d-FIbm4"
            },
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0oainmLkOL329Jcju0g3",
          "name": "zendesk",
          "label": "Zendesk",
          "_links": {
            "help": {
              "href": "http://testorgone-admin.okta.com/app/zendesk/0oainmLkOL329Jcju0g3/setup/help/SAML_2_0/external-doc",
              "type": "text/html"
            },
            "logo": [
              {
                "href": "http://testorgone.okta.com/img/logos/zendesk.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oainmLkOL329Jcju0g3/users"
            },
            "groups": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oainmLkOL329Jcju0g3/groups"
            },
            "appLinks": [
              {
                "href": "http://testorgone.okta.com/home/zendesk/0oainmLkOL329Jcju0g3/120",
                "name": "login",
                "type": "text/html"
              }
            ],
            "metadata": {
              "href": "http://testorgone.okta.com/api/v1/apps/0oainmLkOL329Jcju0g3/sso/saml/metadata",
              "type": "application/xml"
            },
            "deactivate": {
              "href": "http://testorgone.okta.com:/api/v1/apps/0oainmLkOL329Jcju0g3/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2015-12-14T18:18:48.000Z",
          "features": [],
          "settings": {
            "app": {
              "authToken": null,
              "companySubDomain": "aaa"
            },
            "signOn": {
              "defaultRelayState": null
            },
            "notifications": {
              "vpn": {
                "helpUrl": null,
                "message": null,
                "network": {
                  "connection": "DISABLED"
                }
              }
            }
          },
          "licensing": {
            "seatCount": 0
          },
          "signOnMode": "SAML_2_0",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": true
          },
          "credentials": {
            "signing": {
              "kid": "SIMcCQNY3uwXoW3y0vf6VxiBb5n9pf8L2fK8d-FIbm4"
            },
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2015-12-16T00:00:44.000Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null,
            "loginRedirectUrl": null
          }
        }
      ]
  apps.updateLogoForApplication:
    description: |-
      Update the logo for an application.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#update-logo-for-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  apps.updateTheClientAuthenticationMethod:
    description: |-
      Updates the token_endpoint_auth_method property for an OAuth 2.0 client application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/apps/#update-the-client-authentication-method
    example:
      inputs: [
        {
          "id": "0oap6nz61rKdsoyOY0h7",
          "name": "oidc_client",
          "label": "SampleClient",
          "status": "ACTIVE",
          "settings": {
            "app": {},
            "oauthClient": {
              "logo_uri": "http://developer.okta.com/assets/images/logo-new.png",
              "client_uri": "http://localhost:8080",
              "grant_types": [
                "implicit",
                "authorization_code"
              ],
              "issuer_mode": "CUSTOM_URL",
              "redirect_uris": [
                "https://example.com/oauth2/callback",
                "myapp://callback"
              ],
              "consent_method": "TRUSTED",
              "response_types": [
                "token",
                "id_token",
                "code"
              ],
              "application_type": "native",
              "wildcard_redirect": "DISABLED",
              "post_logout_redirect_uris": [
                "https://example.com/oauth2/postLogoutRedirectUri"
              ]
            },
            "notifications": {
              "vpn": {
                "helpUrl": null,
                "message": null,
                "network": {
                  "connection": "DISABLED"
                }
              }
            }
          },
          "signOnMode": "OPENID_CONNECT",
          "visibility": {
            "hide": {
              "iOS": true,
              "web": true
            },
            "appLinks": {
              "oidc_client_link": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "signing": {
              "kid": "5gbe0HpzAYj2rsWSLxx1fYHdh-SzWqyKqwmfJ6qDk5g"
            },
            "oauthClient": {
              "client_id": "0oap6nz61rKdsoyOY0h7",
              "autoKeyRotation": true,
              "token_endpoint_auth_method": "client_secret_jwt"
            },
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null,
            "loginRedirectUrl": null
          }
        }
      ]
      outputs: [
        {
          "id": "0oap6nz61rKdsoyOY0h7",
          "name": "oidc_client",
          "label": "SampleClient",
          "_links": {
            "logo": [
              {
                "href": "https://example.com/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oap6nz61rKdsoyOY0h7/users"
            },
            "groups": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oap6nz61rKdsoyOY0h7/groups"
            },
            "appLinks": [
              {
                "href": "https://$yourOktaDomain/home/oidc_client/0oap6nz61rKdsoyOY0h7/aln5z7uhkbM6y7bMy0g7",
                "name": "oidc_client_link",
                "type": "text/html"
              }
            ],
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oap6nz61rKdsoyOY0h7/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2020-01-09T16:59:15.000Z",
          "features": [],
          "settings": {
            "app": {},
            "oauthClient": {
              "logo_uri": "http://developer.okta.com/assets/images/logo-new.png",
              "client_uri": "http://localhost:8080",
              "grant_types": [
                "implicit",
                "authorization_code"
              ],
              "issuer_mode": "CUSTOM_URL",
              "redirect_uris": [
                "https://example.com/oauth2/callback",
                "myapp://callback"
              ],
              "consent_method": "TRUSTED",
              "response_types": [
                "token",
                "id_token",
                "code"
              ],
              "application_type": "native",
              "wildcard_redirect": "DISABLED",
              "idp_initiated_login": {
                "mode": "DISABLED"
              },
              "post_logout_redirect_uris": [
                "https://example.com/oauth2/postLogoutRedirectUri"
              ]
            },
            "notifications": {
              "vpn": {
                "helpUrl": null,
                "message": null,
                "network": {
                  "connection": "DISABLED"
                }
              }
            }
          },
          "signOnMode": "OPENID_CONNECT",
          "visibility": {
            "hide": {
              "iOS": true,
              "web": true
            },
            "appLinks": {
              "oidc_client_link": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "signing": {
              "kid": "5gbe0HpzAYj2rsWSLxx1fYHdh-SzWqyKqwmfJ6qDk5g"
            },
            "oauthClient": {
              "client_id": "0oap6nz61rKdsoyOY0h7",
              "client_secret": "D0HxBn1FtTXeYC4cSBwWL_sPMztMT2t6Ei9n1QjO",
              "autoKeyRotation": true,
              "token_endpoint_auth_method": "client_secret_jwt"
            },
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2020-01-09T18:01:12.000Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null,
            "loginRedirectUrl": null
          }
        }
      ]
  authn.activateCallFactor:
    description: |-
      Activates a call Factor by verifying the OTP. The request and response is identical to activating a TOTP Factor.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#activate-call-factor
    example:
      inputs: [
        {
          "passCode": "12345",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00Fpzf4en68pCXTsMjcX8JPMctzN2Wiw4LDOBL_9pe"
        }
      ]
  authn.activateEmailFactor:
    description: |-
      Activates an email Factor by verifying the OTP. The request and response are identical to activating a TOTP Factor.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#activate-email-factor
    example:
      inputs: [
        {
          "passCode": "12345",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00Fpzf4en68pCXTsMjcX8JPMctzN2Wiw4LDOBL_9pe"
        }
      ]
  authn.activatePushFactor:
    description: |-
      Activation of push factors are asynchronous and must be polled for completion when the factorResult returns a WAITING status.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#activate-push-factor
    example:
      inputs: [
        {
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/opfh52xcuft3J4uZc0g3/lifecycle/activate/poll",
              "name": "poll",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "MFA_ENROLL_ACTIVATE",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            },
            "factor": {
              "id": "opfh52xcuft3J4uZc0g3",
              "provider": "OKTA",
              "_embedded": {
                "activation": {
                  "_links": {
                    "send": [
                      {
                        "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/factors/opfh52xcuft3J4uZc0g3/lifecycle/activate/email",
                        "name": "email",
                        "hints": {
                          "allow": [
                            "POST"
                          ]
                        }
                      },
                      {
                        "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/factors/opfh52xcuft3J4uZc0g3/lifecycle/activate/sms",
                        "name": "sms",
                        "hints": {
                          "allow": [
                            "POST"
                          ]
                        }
                      }
                    ],
                    "qrcode": {
                      "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/factors/opfh52xcuft3J4uZc0g3/qr/00fukNElRS_Tz6k-CFhg3pH4KO2dj2guhmaapXWbc4",
                      "type": "image/png"
                    }
                  },
                  "expiresAt": "2015-11-03T10:15:57.000Z"
                }
              },
              "factorType": "push"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb",
          "factorResult": "WAITING"
        }
      ]
  authn.activateSmsFactor:
    description: |-
      Activates an sms Factor by verifying the OTP. The request and response is identical to activating a TOTP Factor.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#activate-sms-factor
    example:
      inputs: [
        {
          "passCode": "123456",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00Fpzf4en68pCXTsMjcX8JPMctzN2Wiw4LDOBL_9pe"
        }
      ]
  authn.activateTotpFactor:
    description: |-
      Activates a token:software:totp Factor by verifying the OTP.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#activate-totp-factor
    example:
      inputs: [
        {
          "passCode": "123456",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00Fpzf4en68pCXTsMjcX8JPMctzN2Wiw4LDOBL_9pe"
        }
      ]
  authn.activateU2fFactor:
    description: |-
      Activation gets the registration information from the U2F token using the API and passes it to Okta.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#activate-u2f-factor
    example:
      inputs: [
        {
          "clientData": "eyAiY2hhbGxlbmdlIjogImFYLS1wMTlibldWcUlnY25HU0hLIiwgIm9yaWdpbiI6ICJodHRwczpcL1wvc25hZ2FuZGxhLm9rdGFwcmV2aWV3LmNvbSIsICJ0eXAiOiAibmF2aWdhdG9yLmlkLmZpbmlzaEVucm9sbG1lbnQiIH0=",
          "stateToken": "00MBkDX0vBddsuU1VnDsa7-qqIOi7g51YLNQEen1hi",
          "registrationData": "BQTl3Iu9V4caCvcI44pmYwIehICWyboL_J2Wl5FA6ZGNx9qT11Df-rHJIy9iP6MSJ_qAaKqdq8O0XVqBG46p6qbpQLIb471thYthrQiW9955tNdORCEhvZX9iYNI1peNlETOr7Qx_PgIZ6Ein6aB3wH9JCTGgsdd4JX3cYixbj1v9W8wggJEMIIBLqADAgECAgRVYr6gMAsGCSqGSIb3DQEBCzAuMSwwKgYDVQQDEyNZdWJpY28gVTJGIFJvb3QgQ0EgU2VyaWFsIDQ1NzIwMDYzMTAgFw0xNDA4MDEwMDAwMDBaGA8yMDUwMDkwNDAwMDAwMFowKjEoMCYGA1UEAwwfWXViaWNvIFUyRiBFRSBTZXJpYWwgMTQzMjUzNDY4ODBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEszH3c9gUS5mVy-RYVRfhdYOqR2I2lcvoWsSCyAGfLJuUZ64EWw5m8TGy6jJDyR_aYC4xjz_F2NKnq65yvRQwmjOzA5MCIGCSsGAQQBgsQKAgQVMS4zLjYuMS40LjEuNDE0ODIuMS41MBMGCysGAQQBguUcAgEBBAQDAgUgMAsGCSqGSIb3DQEBCwOCAQEArBbZs262s6m3bXWUs09Z9Pc-28n96yk162tFHKv0HSXT5xYU10cmBMpypXjjI-23YARoXwXn0bm-BdtulED6xc_JMqbK-uhSmXcu2wJ4ICA81BQdPutvaizpnjlXgDJjq6uNbsSAp98IStLLp7fW13yUw-vAsWb5YFfK9f46Yx6iakM3YqNvvs9M9EUJYl_VrxBJqnyLx2iaZlnpr13o8NcsKIJRdMUOBqt_ageQg3ttsyq_3LyoNcu7CQ7x8NmeCGm_6eVnZMQjDmwFdymwEN4OxfnM5MkcKCYhjqgIGruWkVHsFnJa8qjZXneVvKoiepuUQyDEJ2GcqvhU2YKY1zBGAiEAxWDh5F7vr0AoEsi3N-uR6KR3ADXlZnQgzROUTVhff8ICIQCiUUG1FkQ9e8PW1dhRk6tjHjL22KZ9JqBrTfpytC5jaQ=="
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00Fpzf4en68pCXTsMjcX8JPMctzN2Wiw4LDOBL_9pe"
        }
      ]
  authn.activateWebauthnFactor:
    description: |-
      Activation gets the registration information from the WebAuthn assertion using the API and passes it to Okta.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#activate-webauthn-factor
    example:
      inputs: [
        {
          "clientData": "eyJjaGFsbGVuZ2UiOiJVSk5wYW9sVWt0dF9vcEZPNXJMYyIsIm9yaWdpbiI6Imh0dHBzOi8vcmFpbi5va3RhMS5jb20iLCJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIn0=",
          "stateToken": "00eacMXqkf2pG8K3sBbWqTJNStZpEi9-1Bfwl_mfQT",
          "attestation": "o2NmbXRmcGFja2VkZ2F0dFN0bXSiY2FsZyZjc2lnWEgwRgIhAMvf2+dzXlHZN1um38Y8aFzrKvX0k5dt/hnDu9lahbR4AiEAuwtMg3IoaElWMp00QrP/+3Po/6LwXfmYQVfsnsQ+da1oYXV0aERhdGFYxkgb9OHGifjS2dG03qLRqvXrDIRyfGAuc+GzF1z20/eVRV2wvl6tzgACNbzGCmSLCyXx8FUDAEIBvWNHOcE3QDUkDP/HB1kRbrIOoZ1dR874ZaGbMuvaSVHVWN2kfNiO4D+HlAzUEFaqlNi5FPqKw+mF8f0XwdpEBlClAQIDJiABIVgg0a6oo3W0JdYPu6+eBrbr0WyB3uJLI3ODVgDfQnpgafgiWCB4fFo/5iiVrFhB8pNH2tbBtKewyAHuDkRolcCnVaCcmQ=="
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00Fpzf4en68pCXTsMjcX8JPMctzN2Wiw4LDOBL_9pe"
        }
      ]
  authn.answerRecoveryQuestion:
    description: |-
      Answers the user's recovery question to ensure only the end user redeemed the recovery token for recovery transaction with a RECOVERY status
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#answer-recovery-question
    example:
      inputs: [
        {
          "answer": "Annie Oakley",
          "stateToken": "00lMJySRYNz3u_rKQrsLvLrzxiARgivP8FB_1gpmVb"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/credentials/reset_password",
              "name": "password",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "PASSWORD_RESET",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            },
            "policy": {
              "age": {
                "historyCount": 0,
                "minAgeMinutes": 0
              },
              "complexity": {
                "minLength": 8,
                "minNumber": 1,
                "minSymbol": 0,
                "minLowerCase": 1,
                "minUpperCase": 1,
                "excludeUsername": "true"
              },
              "expiration": {
                "passwordExpireDays": 0
              }
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "00lMJySRYNz3u_rKQrsLvLrzxiARgivP8FB_1gpmVb"
        }
      ]
  authn.cancelTransaction:
    description: |-
      Cancels the current transaction and revokes the state token
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#cancel-transaction
    example:
      inputs: [
        {
          "stateToken": "00lMJySRYNz3u_rKQrsLvLrzxiARgivP8FB_1gpmVb"
        }
      ]
      outputs: [
        {}
      ]
  authn.changePassword:
    description: |-
      Changes a user's password by providing the existing password and the new password for authentication transactions with either the PASSWORD_EXPIRED or PASSWORD_WARN state
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#change-password
    example:
      inputs: [
        {
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb",
          "newPassword": "Ch-ch-ch-ch-Changes!",
          "oldPassword": "correcthorsebatterystaple"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00Fpzf4en68pCXTsMjcX8JPMctzN2Wiw4LDOBL_9pe"
        }
      ]
  authn.enrollCustomHotpFactor:
    description: |-
      Enrollment via the Authentication API is currently not supported for Custom HOTP Factor. Please refer to the Factors API documentation if you would like to enroll users for this type of Factor.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#enroll-custom-hotp-factor
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  authn.enrollDuoFactor:
    description: |-
      The enrollment process starts with an enrollment request to Okta, then continues with the Duo widget that is embedded in the page.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#enroll-duo-factor
    example:
      inputs: [
        {
          "provider": "DUO",
          "factorType": "web",
          "stateToken": "stateToken"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/dsflnpo99zpfMyaij0g3/lifecycle/activate/poll",
              "name": "poll",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "MFA_ENROLL_ACTIVATE",
          "_embedded": {
            "user": {
              "id": "00uku2SnbUX49SAGb0g3",
              "profile": {
                "login": "first.last@gexample.com",
                "locale": "en_US",
                "lastName": "Last",
                "timeZone": "America/Los_Angeles",
                "firstName": "First"
              },
              "passwordChanged": "2016-07-13T13:07:51.000Z"
            },
            "factor": {
              "id": "dsflnpo99zpfMyaij0g3",
              "profile": {
                "credentialId": "first.last@gexample.com"
              },
              "provider": "DUO",
              "_embedded": {
                "activation": {
                  "host": "api-your-host.duosecurity.com",
                  "_links": {
                    "script": {
                      "href": "https://$yourOktaDomain/js/sections/duo/Duo-Web-v2.js",
                      "type": "text/javascript; charset=utf-8"
                    },
                    "complete": {
                      "href": "https://$yourOktaDomain/api/v1/authn/factors/dsflnpo99zpfMyaij0g3/lifecycle/duoCallback",
                      "hints": {
                        "allow": [
                          "POST"
                        ]
                      }
                    }
                  },
                  "signature": "TX|...your-signature",
                  "factorResult": "WAITING"
                }
              },
              "factorType": "web",
              "vendorName": "DUO"
            }
          },
          "expiresAt": "2016-07-13T13:14:52.000Z",
          "stateToken": "00BlN4kOtm7wNxuM8nuXsOK1PFXBkvvTH-buJUrgWX",
          "factorResult": "WAITING"
        }
      ]
  authn.enrollGoogleAuthenticatorFactor:
    description: |-
      Enrolls a user with the Google token:software:totp Factor. The Factor must be activated after enrollment by following the next link relation to complete the enrollment process.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#enroll-google-authenticator-factor
    example:
      inputs: [
        {
          "provider": "GOOGLE",
          "factorType": "token:software:totp",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/uftm3iHSGFQXHCUSDAND/lifecycle/activate",
              "name": "activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "MFA_ENROLL_ACTIVATE",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            },
            "factor": {
              "id": "ostf2xjtDKWFPZIKYDZV",
              "profile": {
                "credentialId": "dade.murphy@example.com"
              },
              "provider": "GOOGLE",
              "_embedded": {
                "activation": {
                  "_links": {
                    "qrcode": {
                      "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/factors/uftm3iHSGFQXHCUSDAND/qr/00Mb0zqhJQohwCDkB2wOifajAsAosEAXvDwuCmsAZs",
                      "type": "image/png"
                    }
                  },
                  "encoding": "base32",
                  "timeStep": 30,
                  "keyLength": 6,
                  "sharedSecret": "KYCRM33UJZSXQ2DW"
                }
              },
              "factorType": "token:software:totp"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
  authn.enrollOktaCallFactor:
    description: |-
      Enrolls a user with the Okta call Factor and a Call profile. A voice call with an OTP is sent to the device during enrollment and must be activated by following the next link relation to complete the enrollment process.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#enroll-okta-call-factor
    example:
      inputs: [
        {
          "profile": {
            "phoneNumber": "+1-555-415-1337"
          },
          "provider": "OKTA",
          "factorType": "call",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/clf198rKSEWOSKRIVIFT/lifecycle/activate",
              "name": "activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "resend": [
              {
                "href": "https://$yourOktaDomain/api/v1/authn/factors/clf198rKSEWOSKRIVIFT/lifecycle/resend",
                "name": "call",
                "hints": {
                  "allow": [
                    "POST"
                  ]
                }
              }
            ]
          },
          "status": "MFA_ENROLL_ACTIVATE",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            },
            "factor": {
              "id": "clf198rKSEWOSKRIVIFT",
              "profile": {
                "phoneNumber": "+1 XXX-XXX-1337"
              },
              "provider": "OKTA",
              "factorType": "call"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
  authn.enrollOktaEmailFactor:
    description: |-
      Enrolls a user with the Okta email Factor using the user's primary email address. An email message with an OTP is sent to the user during enrollment and must be activated by following the next link relation to complete the enrollment process.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#enroll-okta-email-factor
    example:
      inputs: [
        {
          "provider": "OKTA",
          "factorType": "email",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://${yourOktaDomain}/api/v1/authn/factors/emfultss7bA0V6Z7C0g3/lifecycle/activate",
              "name": "activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://${yourOktaDomain}/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://${yourOktaDomain}/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "resend": [
              {
                "href": "https://${yourOktaDomain}/api/v1/authn/factors/emfultss7bA0V6Z7C0g3/lifecycle/resend",
                "name": "email",
                "hints": {
                  "allow": [
                    "POST"
                  ]
                }
              }
            ]
          },
          "status": "MFA_ENROLL_ACTIVATE",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            },
            "factor": {
              "id": "emfultss7bA0V6Z7C0g3",
              "profile": {
                "email": "d...y@example.com"
              },
              "provider": "OKTA",
              "factorType": "email",
              "vendorName": "OKTA"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
  authn.enrollOktaSecurityQuestionFactor:
    description: |-
      Enrolls a user with the Okta question Factor and question profile.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#enroll-okta-security-question-factor
    example:
      inputs: [
        {
          "profile": {
            "answer": "mayonnaise",
            "question": "disliked_food"
          },
          "provider": "OKTA",
          "factorType": "question",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00OhZsSfoCtbJTrU2XkwntfEl-jCj6ck6qcU_kA049"
        }
      ]
  authn.enrollOktaSmsFactor:
    description: |-
      Enrolls a user with the Okta sms Factor and an SMS profile. A text message with an OTP is sent to the device during enrollment and must be activated by following the next link relation to complete the enrollment process.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#enroll-okta-sms-factor
    example:
      inputs: [
        {
          "profile": {
            "phoneNumber": "+1-555-415-1337"
          },
          "provider": "OKTA",
          "factorType": "sms",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/mbl198rKSEWOSKRIVIFT/lifecycle/activate",
              "name": "activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "resend": [
              {
                "href": "https://$yourOktaDomain/api/v1/authn/factors/mbl198rKSEWOSKRIVIFT/lifecycle/resend",
                "name": "sms",
                "hints": {
                  "allow": [
                    "POST"
                  ]
                }
              }
            ]
          },
          "status": "MFA_ENROLL_ACTIVATE",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            },
            "factor": {
              "id": "mbl198rKSEWOSKRIVIFT",
              "profile": {
                "phoneNumber": "+1 XXX-XXX-1337"
              },
              "provider": "OKTA",
              "factorType": "sms"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
  authn.enrollOktaVerifyPushFactor:
    description: |-
      Enrolls a user with the Okta verify push Factor. The Factor must be activated on the device by scanning the QR code or visiting the activation link sent via email or sms.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#enroll-okta-verify-push-factor
    example:
      inputs: [
        {
          "provider": "OKTA",
          "factorType": "push",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/opfh52xcuft3J4uZc0g3/lifecycle/activate/poll",
              "name": "poll",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "MFA_ENROLL_ACTIVATE",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            },
            "factor": {
              "id": "opfh52xcuft3J4uZc0g3",
              "provider": "OKTA",
              "_embedded": {
                "activation": {
                  "_links": {
                    "send": [
                      {
                        "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/factors/opfh52xcuft3J4uZc0g3/lifecycle/activate/email",
                        "name": "email",
                        "hints": {
                          "allow": [
                            "POST"
                          ]
                        }
                      },
                      {
                        "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/factors/opfh52xcuft3J4uZc0g3/lifecycle/activate/sms",
                        "name": "sms",
                        "hints": {
                          "allow": [
                            "POST"
                          ]
                        }
                      }
                    ],
                    "qrcode": {
                      "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/factors/opfh52xcuft3J4uZc0g3/qr/00fukNElRS_Tz6k-CFhg3pH4KO2dj2guhmaapXWbc4",
                      "type": "image/png"
                    }
                  },
                  "expiresAt": "2015-11-03T10:15:57.000Z"
                }
              },
              "factorType": "push"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb",
          "factorResult": "WAITING"
        }
      ]
  authn.enrollOktaVerifyTotpFactor:
    description: |-
      Enrolls a user with the Okta token:software:totp Factor. The Factor must be activated after enrollment by following the next link relation to complete the enrollment process.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#enroll-okta-verify-totp-factor
    example:
      inputs: [
        {
          "provider": "OKTA",
          "factorType": "token:software:totp",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/ostf2xjtDKWFPZIKYDZV/lifecycle/activate",
              "name": "activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "MFA_ENROLL_ACTIVATE",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            },
            "factor": {
              "id": "ostf2xjtDKWFPZIKYDZV",
              "profile": {
                "credentialId": "dade.murphy@example.com"
              },
              "provider": "OKTA",
              "_embedded": {
                "activation": {
                  "_links": {
                    "qrcode": {
                      "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/factors/ostf2xjtDKWFPZIKYDZV/qr/00Mb0zqhJQohwCDkB2wOifajAsAosEAXvDwuCmsAZs",
                      "type": "image/png"
                    }
                  },
                  "encoding": "base32",
                  "timeStep": 30,
                  "keyLength": 6,
                  "sharedSecret": "KBMTM32UJZSXQ2DW"
                }
              },
              "factorType": "token:software:totp"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
  authn.enrollRsaSecuridFactor:
    description: |-
      Enrolls a user with an RSA SecurID factor and a token profile. RSA tokens must be verified with the current pin+passcode as part of the enrollment request.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#enroll-rsa-securid-factor
    example:
      inputs: [
        {
          "profile": {
            "credentialId": "dade.murphy@example.com"
          },
          "passCode": "5275875498",
          "provider": "RSA",
          "factorType": "token",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00OhZsSfoCtbJTrU2XkwntfEl-jCj6ck6qcU_kA049"
        }
      ]
  authn.enrollSymantecVipFactor:
    description: |-
      Enrolls a user with a Symantec VIP Factor and a token profile. Symantec tokens must be verified with the current and next passcodes as part of the enrollment request.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#enroll-symantec-vip-factor
    example:
      inputs: [
        {
          "profile": {
            "credentialId": "VSMT14393584"
          },
          "passCode": "875498",
          "provider": "SYMANTEC",
          "factorType": "token",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb",
          "nextPassCode": "678195"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00OhZsSfoCtbJTrU2XkwntfEl-jCj6ck6qcU_kA049"
        }
      ]
  authn.enrollU2fFactor:
    description: |-
      Enrolls a user with a U2F Factor. The enrollment process starts with getting an appId and nonce from Okta and using those to get registration information from the U2F key using the U2F javascript API.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#enroll-u2f-factor
    example:
      inputs: [
        {
          "provider": "FIDO",
          "factorType": "u2f",
          "stateToken": "stateToken"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/fuf8y1y14jaygfX5K0h7/lifecycle/activate",
              "name": "activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "MFA_ENROLL_ACTIVATE",
          "_embedded": {
            "user": {
              "id": "00ukv3jVTgRjDctlX0g3",
              "profile": {
                "login": "first.last@gmail.com",
                "locale": "en",
                "lastName": "Last",
                "timeZone": "America/Los_Angeles",
                "firstName": "First"
              },
              "passwordChanged": "2015-10-28T23:27:57.000Z"
            },
            "factor": {
              "id": "fuf8y1y14jaygfX5K0h7",
              "provider": "FIDO",
              "_embedded": {
                "activation": {
                  "appId": "https://$yourOktaDomain",
                  "nonce": "s-NaltFnye-xNsJeAhnN",
                  "version": "U2F_V2",
                  "timeoutSeconds": 20
                }
              },
              "factorType": "u2f",
              "vendorName": "FIDO"
            }
          },
          "expiresAt": "2016-12-05T19:40:53.000Z",
          "stateToken": "00s7Yewe3Z4aujPLpR4qW4y1hMKzAbyXK5LSKJRW2G"
        }
      ]
  authn.enrollWebauthnFactor:
    description: |-
      Enrolls a user with a WebAuthn Factor. The enrollment process starts with getting the WebAuthn credential creation options, which are used to help select an appropriate authenticator using the WebAuthn API. This authenticator then generates an enrollment attestation that may be used to register the authenticator for the user.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#enroll-webauthn-factor
    example:
      inputs: [
        {
          "provider": "FIDO",
          "factorType": "webauthn",
          "stateToken": "stateToken"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/fwfbaopNw5CCGJTu20g4/lifecycle/activate",
              "name": "activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "MFA_ENROLL_ACTIVATE",
          "_embedded": {
            "user": {
              "id": "00ukv3jVTgRjDctlX0g3",
              "profile": {
                "login": "first.last@gmail.com",
                "locale": "en",
                "lastName": "Last",
                "timeZone": "America/Los_Angeles",
                "firstName": "First"
              },
              "passwordChanged": "2015-10-28T23:27:57.000Z"
            },
            "factor": {
              "id": "fwfbaopNw5CCGJTu20g4",
              "provider": "FIDO",
              "_embedded": {
                "activation": {
                  "rp": {
                    "name": "Rain-Cloud59"
                  },
                  "user": {
                    "id": "00ukv3jVTgRjDctlX0g3",
                    "name": "first.last@gmail.com",
                    "displayName": "First Last"
                  },
                  "challenge": "cdsZ1V10E0BGE9GcG3IK",
                  "u2fParams": {
                    "appid": "https://$yourOktaDomain.com"
                  },
                  "attestation": "direct",
                  "pubKeyCredParams": [
                    {
                      "alg": -7,
                      "type": "public-key"
                    },
                    {
                      "alg": -257,
                      "type": "public-key"
                    }
                  ],
                  "excludeCredentials": [],
                  "authenticatorSelection": {
                    "userVerification": "preferred",
                    "requireResidentKey": false
                  }
                }
              },
              "factorType": "webauthn",
              "vendorName": "FIDO"
            }
          },
          "expiresAt": "2016-12-05T19:40:53.000Z",
          "stateToken": "00IzlXt68vyoh3r6rtv9JWXLwSuVkM6_AP65f-Actj"
        }
      ]
  authn.enrollYubikeyFactor:
    description: |-
      Enrolls a user with a Yubico Factor (YubiKey). YubiKeys must be verified with the current passcode as part of the enrollment request.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#enroll-yubikey-factor
    example:
      inputs: [
        {
          "passCode": "cccccceukngdfgkukfctkcvfidnetljjiknckkcjulji",
          "provider": "YUBICO",
          "factorType": "token:hardware"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00OhZsSfoCtbJTrU2XkwntfEl-jCj6ck6qcU_kA049"
        }
      ]
  authn.forgotPasswordWithCallFactor:
    description: |-
      Starts a new password recovery transaction with a user identifier (username) and asynchronously sends a Voice Call with OTP (challenge) to the user's phone. This operation transitions the recovery transaction to the RECOVERY_CHALLENGE state and wait for user to verify the OTP.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#forgot-password-with-call-factor
    example:
      inputs: [
        {
          "username": "dade.murphy@example.com",
          "factorType": "call"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/recovery/factors/CALL/verify",
              "name": "verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "resend": {
              "href": "https://$yourOktaDomain/api/v1/authn/recovery/factors/CALL/resend",
              "name": "call",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "RECOVERY_CHALLENGE",
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "factorType": "call",
          "stateToken": "00xdqXOE5qDXX8-PBR1bYv8AESqIEinDy3yul01tyh",
          "recoveryType": "PASSWORD"
        }
      ]
  authn.forgotPasswordWithEmailFactor:
    description: |-
      Starts a new password recovery transaction for the email Factor: You must specify a user identifier (username) but no password in the request. If the request is successful, Okta sends a recovery email asynchronously to the user's primary and secondary email address with a recovery token so the user can complete the transaction.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#forgot-password-with-email-factor
    example:
      inputs: [
        {
          "username": "dade.murphy@example.com",
          "factorType": "EMAIL"
        }
      ]
      outputs: [
        {
          "status": "RECOVERY_CHALLENGE",
          "factorType": "EMAIL",
          "factorResult": "WAITING",
          "recoveryType": "PASSWORD"
        }
      ]
  authn.forgotPasswordWithSmsFactor:
    description: |-
      Starts a new password recovery transaction with a user identifier (username) and asynchronously sends a SMS OTP (challenge) to the user's mobile phone. This operation will transition the recovery transaction to the RECOVERY_CHALLENGE state and wait for the user to verify the OTP.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#forgot-password-with-sms-factor
    example:
      inputs: [
        {
          "username": "dade.murphy@example.com",
          "factorType": "SMS"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/recovery/factors/SMS/verify",
              "name": "verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "resend": {
              "href": "https://$yourOktaDomain/api/v1/authn/recovery/factors/SMS/resend",
              "name": "sms",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "RECOVERY_CHALLENGE",
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "factorType": "SMS",
          "stateToken": "00xdqXOE5qDXX8-PBR1bYv8AESqIEinDy3yul01tyh",
          "recoveryType": "PASSWORD"
        }
      ]
  authn.forgotPasswordWithTrustedApplication:
    description: |-
      Allows a trusted application such as an external portal to implement its own primary authentication process and directly obtain a recovery token for a user given just the user's identifier.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#forgot-password-with-trusted-application
    example:
      inputs: [
        {
          "username": "dade.murphy@example.com"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/recovery/token",
              "name": "recovery",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "RECOVERY",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "recoveryType": "PASSWORD",
          "recoveryToken": "VBQ0gwBp5LyJJFdbmWCM"
        }
      ]
  authn.getTransactionState:
    description: |-
      Retrieves the current transaction state for a state token
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#get-transaction-state
    example:
      inputs: [
        {
          "stateToken": "00lMJySRYNz3u_rKQrsLvLrzxiARgivP8FB_1gpmVb"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/sms193zUBEROPBNZKPPE/verify",
              "name": "verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "MFA_CHALLENGE",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            },
            "factor": {
              "id": "sms193zUBEROPBNZKPPE",
              "profile": {
                "phoneNumber": "+1 XXX-XXX-1337"
              },
              "provider": "OKTA",
              "factorType": "sms"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "00lMJySRYNz3u_rKQrsLvLrzxiARgivP8FB_1gpmVb"
        }
      ]
  authn.idpInitiatedStepUpAuthentication:
    description: |-
      Authenticates a user for signing in to the specified application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#idp-initiated-step-up-authentication
    example:
      inputs: [
        {
          "options": {
            "multiOptionalFactorEnroll": false,
            "warnBeforePasswordExpired": true
          },
          "audience": "0oa6gva7owNAhDam50h7",
          "password": "correcthorsebatterystaple",
          "username": "dade.murphy@example.com"
        }
      ]
      outputs: [
        {
          "type": "SESSION_STEP_UP",
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/login/step-up/redirect?stateToken=00quAZYqYjXg9DZhS5UzE1wrJuQ6KKb_kzOeH7OGB5",
              "name": "original",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            }
          },
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2017-03-29T21:37:25.000Z"
            },
            "target": {
              "name": "salesforce",
              "type": "APP",
              "label": "Corporate SFDC",
              "_links": {
                "logo": {
                  "href": "https://$yourOktaDomain/assets/img/logos/salesforce_logo.dbd7e0b4de118a1dae1c39d60a3c30e5.png",
                  "name": "medium",
                  "type": "image/png"
                }
              }
            },
            "authentication": {
              "issuer": {
                "id": "0oa2x5jOopNCpswjo0g4",
                "uri": "exk2x5ixHmk9MBnqz0g4",
                "name": "Corporate SFDC"
              },
              "protocol": "SAML2.0"
            }
          },
          "expiresAt": "2017-05-30T23:19:40.000Z",
          "stateToken": "00quAZYqYjXg9DZhS5UzE1wrJuQ6KKb_kzOeH7OGB5"
        }
      ]
  authn.previousTransactionState:
    description: |-
      Moves the current transaction state back to the previous state. For example, when changing state from the start of primary authentication to MFA_ENROLL > ENROLL_ACTIVATE > OTP, the user's phone might stop working. Since the user can't see the QR code, the transaction must return to MFA_ENROLL.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#previous-transaction-state
    example:
      inputs: [
        {
          "stateToken": "00lMJySRYNz3u_rKQrsLvLrzxiARgivP8FB_1gpmVb"
        }
      ]
      outputs: [
        {
          "_links": {
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "MFA_ENROLL",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            },
            "factors": [
              {
                "_links": {
                  "enroll": {
                    "href": "https://$yourOktaDomain/api/v1/authn/factors",
                    "hints": {
                      "allow": [
                        "POST"
                      ]
                    }
                  }
                },
                "status": "NOT_SETUP",
                "provider": "RSA",
                "enrollment": "OPTIONAL",
                "factorType": "token",
                "vendorName": "RSA"
              },
              {
                "_links": {
                  "enroll": {
                    "href": "https://$yourOktaDomain/api/v1/authn/factors",
                    "hints": {
                      "allow": [
                        "POST"
                      ]
                    }
                  }
                },
                "status": "NOT_SETUP",
                "provider": "OKTA",
                "enrollment": "OPTIONAL",
                "factorType": "token:software:totp",
                "vendorName": "OKTA"
              },
              {
                "_links": {
                  "enroll": {
                    "href": "https://$yourOktaDomain/api/v1/authn/factors",
                    "hints": {
                      "allow": [
                        "POST"
                      ]
                    }
                  }
                },
                "status": "NOT_SETUP",
                "provider": "OKTA",
                "enrollment": "OPTIONAL",
                "factorType": "sms",
                "vendorName": "OKTA"
              },
              {
                "_links": {
                  "enroll": {
                    "href": "https://$yourOktaDomain/api/v1/authn/factors",
                    "hints": {
                      "allow": [
                        "POST"
                      ]
                    }
                  }
                },
                "status": "NOT_SETUP",
                "provider": "OKTA",
                "enrollment": "OPTIONAL",
                "factorType": "push",
                "vendorName": "OKTA"
              }
            ]
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
  authn.primaryAuthentication:
    description: |-
      Every authentication transaction starts with primary authentication which validates a user's primary password credential. Password Policy, MFA Policy, and Sign-On Policy are evaluated during primary authentication to determine if the user's password is expired, a Factor should be enrolled, or additional verification is required. The transaction state of the response depends on the user's status, group memberships and assigned policies.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#primary-authentication
    example:
      inputs: [
        {
          "options": {
            "multiOptionalFactorEnroll": false,
            "warnBeforePasswordExpired": false
          },
          "password": "correcthorsebatterystaple",
          "username": "dade.murphy@example.com"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00Fpzf4en68pCXTsMjcX8JPMctzN2Wiw4LDOBL_9pe"
        }
      ]
  authn.primaryAuthenticationWithActivationToken:
    description: |-
      Authenticates a user via a trusted application or proxy that overrides the client request context.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#primary-authentication-with-activation-token
    example:
      inputs: [
        {
          "token": "o7AFoTGE9xjQiHQK6dAa"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2017-03-29T21:37:25.000Z"
            }
          },
          "expiresAt": "2017-03-29T21:42:30.000Z",
          "sessionToken": "20111DuMTdPoBlMOqX5R_OAV3ku2bTWxP6wUIRT_jqkU6XTvOsJLmDq"
        }
      ]
  authn.primaryAuthenticationWithDeviceFingerprinting:
    description: |-
      Include the X-Device-Fingerprint header to supply a device fingerprint. The X-Device-Fingerprint header is used in the following ways:If the new or unknown device email notification is enabled, an email is sent to the user if the device fingerprint sent in the X-Device-Fingerprint header isn't associated with a previously successful user sign in. If you have the security behavior detection feature enabled and you have a new device behavior configured in a policy rule, a new device is detected if the device fingerprint sent in the X-Device-Fingerprint header isn't associated with a previously successful user sign in.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#primary-authentication-with-device-fingerprinting
    example:
      inputs: [
        {
          "password": "password",
          "username": "username"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ue5f54sbR7dFr9i0h7",
              "profile": {
                "login": "saml.jackson@stark.com",
                "locale": "en",
                "lastName": "Jackson",
                "timeZone": "America/Los_Angeles",
                "firstName": "Saml"
              },
              "passwordChanged": "2018-04-26T17:06:07.000Z"
            }
          },
          "expiresAt": "2018-04-26T17:14:17.000Z",
          "sessionToken": "20111Il76Eaub0eKNkLGwMUDg5D7dBSN9d_FO-0o7eHKQMyqV7VoqzZ"
        }
      ]
  authn.primaryAuthenticationWithPasswordExpirationWarning:
    description: |-
      Authenticates a user with a password that is about to expire. The user should change their password to complete the authentication transaction but can choose to skip it.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#primary-authentication-with-password-expiration-warning
    example:
      inputs: [
        {
          "options": {
            "multiOptionalFactorEnroll": false,
            "warnBeforePasswordExpired": true
          },
          "password": "correcthorsebatterystaple",
          "username": "dade.murphy@example.com"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/credentials/change_password",
              "name": "changePassword",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "skip": {
              "href": "https://$yourOktaDomain/api/v1/authn/skip",
              "name": "skip",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "PASSWORD_WARN",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            },
            "policy": {
              "complexity": {
                "minLength": 8,
                "minNumber": 1,
                "minSymbol": 0,
                "minLowerCase": 1,
                "minUpperCase": 1
              },
              "expiration": {
                "passwordExpireDays": 5
              }
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
  authn.primaryAuthenticationWithPublicApplication:
    description: |-
      Authenticates a user with username/password credentials via a public application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#primary-authentication-with-public-application
    example:
      inputs: [
        {
          "options": {
            "multiOptionalFactorEnroll": false,
            "warnBeforePasswordExpired": false
          },
          "password": "correcthorsebatterystaple",
          "username": "dade.murphy@example.com"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00Fpzf4en68pCXTsMjcX8JPMctzN2Wiw4LDOBL_9pe"
        }
      ]
  authn.primaryAuthenticationWithTrustedApplication:
    description: |-
      Authenticates a user via a trusted application or proxy that overrides client request context.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#primary-authentication-with-trusted-application
    example:
      inputs: [
        {
          "context": {
            "deviceToken": "26q43Ak9Eh04p7H6Nnx0m69JqYOrfVBY"
          },
          "options": {
            "multiOptionalFactorEnroll": false,
            "warnBeforePasswordExpired": false
          },
          "password": "correcthorsebatterystaple",
          "username": "dade.murphy@example.com"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00Fpzf4en68pCXTsMjcX8JPMctzN2Wiw4LDOBL_9pe"
        }
      ]
  authn.resetPassword:
    description: |-
      Resets a user's password to complete a recovery transaction with a PASSWORD_RESET state
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#reset-password
    example:
      inputs: [
        {
          "stateToken": "00lMJySRYNz3u_rKQrsLvLrzxiARgivP8FB_1gpmVb",
          "newPassword": "Ch-ch-ch-ch-Changes!"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-11-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00t6IUQiVbWpMLgtmwSjMFzqykb5QcaBNtveiWlGeM"
        }
      ]
  authn.skipTransactionState:
    description: |-
      Sends a skip link to skip the current transaction state and advance to the next state
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#skip-transaction-state
    example:
      inputs: [
        {
          "stateToken": "00lMJySRYNz3u_rKQrsLvLrzxiARgivP8FB_1gpmVb"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-11-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00t6IUQiVbWpMLgtmwSjMFzqykb5QcaBNtveiWlGeM"
        }
      ]
  authn.stepUpAuthenticationWithOktaSession:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#step-up-authentication-with-okta-session
    example:
      inputs: [
        {
          "stateToken": "00BClWr4T-mnIqPV8dHkOQlwEIXxB4LLSfBVt7BxsM"
        }
      ]
      outputs: [
        {
          "type": "SESSION_STEP_UP",
          "_links": {
            "cancel": {
              "href": "https://${yourOktaDomain}/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "MFA_ENROLL",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2017-03-29T21:37:25.000Z"
            },
            "target": {
              "name": "salesforce",
              "type": "APP",
              "label": "Corporate SFDC",
              "_links": {
                "logo": {
                  "href": "https://${yourOktaDomain}/assets/img/logos/salesforce_logo.dbd7e0b4de118a1dae1c39d60a3c30e5.png",
                  "name": "medium",
                  "type": "image/png"
                }
              }
            },
            "factors": [
              {
                "_links": {
                  "enroll": {
                    "href": "https://${yourOktaDomain}/api/v1/authn/factors",
                    "hints": {
                      "allow": [
                        "POST"
                      ]
                    }
                  }
                },
                "status": "NOT_SETUP",
                "provider": "OKTA",
                "enrollment": "OPTIONAL",
                "factorType": "sms",
                "vendorName": "OKTA"
              }
            ],
            "authentication": {
              "issuer": {
                "id": "0oa2x5jOopNCpswjo0g4",
                "uri": "exk2x5ixHmk9MBnqz0g4",
                "name": "Corporate SFDC"
              },
              "protocol": "SAML2.0"
            }
          },
          "expiresAt": "2017-05-30T22:58:09.000Z",
          "stateToken": "00zEfSRIpELrl87ndYiHNkvOEbyEPrBmTYuf9dsGLl"
        }
      ]
  authn.stepUpAuthenticationWithoutOktaSession:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#step-up-authentication-without-okta-session
    example:
      inputs: [
        {
          "stateToken": "00BClWr4T-mnIqPV8dHkOQlwEIXxB4LLSfBVt7BxsM"
        }
      ]
      outputs: [
        {
          "type": "SESSION_STEP_UP",
          "_links": {
            "next": {
              "href": "https://${yourOktaDomain}/api/v1/authn",
              "name": "authenticate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "UNAUTHENTICATED",
          "_embedded": {
            "target": {
              "name": "salesforce",
              "type": "APP",
              "label": "Corporate SFDC",
              "_links": {
                "logo": {
                  "href": "https://${yourOktaDomain}/assets/img/logos/salesforce_logo.dbd7e0b4de118a1dae1c39d60a3c30e5.png",
                  "name": "medium",
                  "type": "image/png"
                }
              }
            },
            "authentication": {
              "issuer": {
                "id": "0oa2x5jOopNCpswjo0g4",
                "uri": "exk2x5ixHmk9MBnqz0g4",
                "name": "Corporate SFDC"
              },
              "protocol": "SAML2.0"
            }
          },
          "expiresAt": "2017-05-30T22:51:37.000Z",
          "stateToken": "00BClWr4T-mnIqPV8dHkOQlwEIXxB4LLSfBVt7BxsM"
        }
      ]
  authn.unlockAccountWithEmailFactor:
    description: |-
      Starts a new unlock recovery transaction with a user identifier (username) and asynchronously sends a recovery email to the user's primary and secondary email address with a recovery token that can be used to complete the transaction
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#unlock-account-with-email-factor
    example:
      inputs: [
        {
          "username": "dade.murphy@example.com",
          "factorType": "EMAIL"
        }
      ]
      outputs: [
        {
          "status": "RECOVERY_CHALLENGE",
          "factorType": "EMAIL",
          "factorResult": "WAITING",
          "recoveryType": "UNLOCK"
        }
      ]
  authn.unlockAccountWithSmsFactor:
    description: |-
      Starts a new unlock recovery transaction with a user identifier (username) and asynchronously sends an SMS OTP (challenge) to the user's mobile phone. This operation transitions the recovery transaction to the RECOVERY_CHALLENGE state and waits for the user to verify the OTP.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#unlock-account-with-sms-factor
    example:
      inputs: [
        {
          "username": "dade.murphy@example.com",
          "factorType": "SMS"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/recovery/factors/SMS/verify",
              "name": "verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "resend": {
              "href": "https://$yourOktaDomain/api/v1/authn/recovery/factors/SMS/resend",
              "name": "sms",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "RECOVERY_CHALLENGE",
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "factorType": "SMS",
          "stateToken": "00xdqXOE5qDXX8-PBR1bYv8AESqIEinDy3yul01tyh",
          "recoveryType": "UNLOCK"
        }
      ]
  authn.unlockAccountWithTrustedApplication:
    description: |-
      Allows a trusted application such as an external portal to implement its own primary authentication process and directly obtain a recovery token for a user given just the user's identifier.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#unlock-account-with-trusted-application
    example:
      inputs: [
        {
          "username": "dade.murphy@example.com"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/recovery/token",
              "name": "recovery",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "RECOVERY",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "recoveryType": "UNLOCK",
          "recoveryToken": "VBQ0gwBp5LyJJFdbmWCM"
        }
      ]
  authn.verifyCallFactor:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#verify-call-factor
    example:
      inputs: [
        {
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/clf193zUBEROPBNZKPPE/verify",
              "name": "verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "MFA_CHALLENGE",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            },
            "factor": {
              "id": "clf193zUBEROPBNZKPPE",
              "profile": {
                "phoneNumber": "+1 XXX-XXX-1337"
              },
              "provider": "OKTA",
              "factorType": "call"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
  authn.verifyCallRecoveryFactor:
    description: |-
      Verifies a Voice Call OTP (passCode) sent to the user's device for primary authentication for a recovery transaction with RECOVERY_CHALLENGE status
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#verify-call-recovery-factor
    example:
      inputs: [
        {
          "passCode": "65786",
          "stateToken": "00xdqXOE5qDXX8-PBR1bYv8AESqIEinDy3yul01tyh"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/recovery/answer",
              "name": "answer",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "RECOVERY",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z",
              "recovery_question": {
                "question": "Who's a major player in the cowboy scene?"
              }
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "00xdqXOE5qDXX8-PBR1bYv8AESqIEinDy3yul01tyh",
          "recoveryType": "PASSWORD"
        }
      ]
  authn.verifyDuoFactor:
    description: |-
      Verification of the Duo Factor is implemented as an integration with Duo widget.Verification starts with request to the Okta API, then continues with a Duo widget that handles the actual verification.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#verify-duo-factor
    example:
      inputs: [
        {
          "stateToken": "stateToken"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/dsflnpo99zpfMyaij0g3/verify",
              "name": "poll",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "MFA_CHALLENGE",
          "_embedded": {
            "user": {
              "id": "00ukv3jVTgRjDctlX0g3",
              "profile": {
                "login": "first.last@gexample.com",
                "locale": "en_US",
                "lastName": "Last",
                "timeZone": "America/Los_Angeles",
                "firstName": "First"
              },
              "passwordChanged": "2016-07-13T13:29:58.000Z"
            },
            "factor": {
              "id": "dsflnpo99zpfMyaij0g3",
              "profile": {
                "credentialId": "first.last@example.com"
              },
              "provider": "DUO",
              "_embedded": {
                "verification": {
                  "host": "api-your-host.duosecurity.com",
                  "_links": {
                    "script": {
                      "href": "https://$yourOktaDomain/js/sections/duo/Duo-Web-v2.js",
                      "type": "text/javascript; charset=utf-8"
                    },
                    "complete": {
                      "href": "https://$yourOktaDomain/api/v1/authn/factors/dsflnpo99zpfMyaij0g3/lifecycle/duoCallback",
                      "hints": {
                        "allow": [
                          "POST"
                        ]
                      }
                    }
                  },
                  "signature": "TX|...your-signature",
                  "factorResult": "WAITING"
                }
              },
              "factorType": "web",
              "vendorName": "DUO"
            },
            "policy": {
              "allowRememberDevice": true,
              "rememberDeviceByDefault": false,
              "rememberDeviceLifetimeInMinutes": 15
            }
          },
          "expiresAt": "2016-07-13T14:13:58.000Z",
          "stateToken": "00CzoxFVe4R2nv0hTxm32r1kayfrrOkuxcE2rfINwZ",
          "factorResult": "WAITING"
        }
      ]
  authn.verifyPushFactor:
    description: |-
      Sends an asynchronous push notification (challenge) to the device for the user to approve or reject. The factorResult for the transaction has a result of WAITING, SUCCESS, REJECTED, or TIMEOUT.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#verify-push-factor
    example:
      inputs: [
        {
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/opfh52xcuft3J4uZc0g3/verify",
              "name": "poll",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "resend": [
              {
                "href": "https://$yourOktaDomain/api/v1/authn/factors/opfh52xcuft3J4uZc0g3/verify/resend",
                "name": "push",
                "hints": {
                  "allow": [
                    "POST"
                  ]
                }
              }
            ]
          },
          "status": "MFA_CHALLENGE",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            },
            "factors": {
              "id": "opfh52xcuft3J4uZc0g3",
              "profile": {
                "name": "Gibson",
                "version": "9.0",
                "platform": "IOS",
                "deviceType": "SmartPhone_IPhone"
              },
              "provider": "OKTA",
              "factorType": "push"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb",
          "factorResult": "WAITING"
        }
      ]
  authn.verifyRecoveryToken:
    description: |-
      Validates a recovery token that was distributed to the end user to continue the recovery transaction
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#verify-recovery-token
    example:
      inputs: [
        {
          "recoveryToken": "00xdqXOE5qDZX8-PBR1bYv8AESqIFinDy3yul01tyh"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/recovery/answer",
              "name": "answer",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "RECOVERY",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z",
              "recovery_question": {
                "question": "Who's a major player in the cowboy scene?"
              }
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "00lMJySRYNz3u_rKQrsLvLrzxiARgivP8FB_1gpmVb"
        }
      ]
  authn.verifySecurityQuestionFactor:
    description: |-
      Verifies an answer to a question Factor
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#verify-security-question-factor
    example:
      inputs: [
        {
          "answer": "mayonnaise",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00ZD3Z7ixppspFljXV2t_Z6GfrYzqG7cDJ8reWo2hy"
        }
      ]
  authn.verifySmsFactor:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#verify-sms-factor
    example:
      inputs: [
        {
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/sms193zUBEROPBNZKPPE/verify",
              "name": "verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "resend": [
              {
                "href": "https://$yourOktaDomain/api/v1/authn/factors/sms193zUBEROPBNZKPPE/verify/resend",
                "name": "sms",
                "hints": {
                  "allow": [
                    "POST"
                  ]
                }
              }
            ]
          },
          "status": "MFA_CHALLENGE",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            },
            "factor": {
              "id": "sms193zUBEROPBNZKPPE",
              "profile": {
                "phoneNumber": "+1 XXX-XXX-1337"
              },
              "provider": "OKTA",
              "factorType": "sms"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
  authn.verifySmsRecoveryFactor:
    description: |-
      Verifies a SMS OTP (passCode) sent to the user's mobile phone for primary authentication for a recovery transaction with RECOVERY_CHALLENGE status
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#verify-sms-recovery-factor
    example:
      inputs: [
        {
          "passCode": "657866",
          "stateToken": "00xdqXOE5qDXX8-PBR1bYv8AESqIEinDy3yul01tyh"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/recovery/answer",
              "name": "answer",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "RECOVERY",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z",
              "recovery_question": {
                "question": "Who's a major player in the cowboy scene?"
              }
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "stateToken": "00xdqXOE5qDXX8-PBR1bYv8AESqIEinDy3yul01tyh",
          "recoveryType": "PASSWORD"
        }
      ]
  authn.verifyTotpFactor:
    description: |-
      Verifies an OTP for a token:software:totp or token:hotp Factor
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#verify-totp-factor
    example:
      inputs: [
        {
          "passCode": "657866",
          "stateToken": "007ucIX7PATyn94hsHfOLVaXAmOBkKHWnOOLG43bsb"
        }
      ]
      outputs: [
        {
          "status": "SUCCESS",
          "_embedded": {
            "user": {
              "id": "00ub0oNGTSWTBKOLGLNR",
              "profile": {
                "login": "dade.murphy@example.com",
                "locale": "en_US",
                "lastName": "Murphy",
                "timeZone": "America/Los_Angeles",
                "firstName": "Dade"
              },
              "passwordChanged": "2015-09-08T20:14:45.000Z"
            }
          },
          "expiresAt": "2015-11-03T10:15:57.000Z",
          "sessionToken": "00t6IUQiVbWpMLgtmwSjMFzqykb5QcaBNtveiWlGeM"
        }
      ]
  authn.verifyU2fFactor:
    description: |-
      Verification of the U2F Factor starts with getting the challenge nonce and U2F token details and then using the client-side JavaScript API to get the signed assertion from the U2F token.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#verify-u2f-factor
    example:
      inputs: [
        {
          "stateToken": "stateToken"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/fuf8y2l4n5mfH0UWe0h7/verify",
              "name": "verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "MFA_CHALLENGE",
          "_embedded": {
            "user": {
              "id": "00u21eb3qyRDNNIKTGCW",
              "profile": {
                "login": "first.last@gmail.com",
                "locale": "en",
                "lastName": "Last",
                "timeZone": "America/Los_Angeles",
                "firstName": "First"
              },
              "passwordChanged": "2015-10-28T23:27:57.000Z"
            },
            "factor": {
              "id": "fuf8y2l4n5mfH0UWe0h7",
              "profile": {
                "appId": "https://$yourOktaDomain",
                "version": "U2F_V2",
                "credentialId": "shvjvW2Fi2GtCJb33nm0105EISG9lf2Jg0jWl42URM6vtDH8-AhnoSKfpoHfAf0kJMaCx13glfdxiLFuPW_1bw"
              },
              "provider": "FIDO",
              "_embedded": {
                "challenge": {
                  "nonce": "tT1MI7XGzMu48Ivnz3vB",
                  "timeoutSeconds": 20
                }
              },
              "factorType": "u2f",
              "vendorName": "FIDO"
            },
            "policy": {
              "allowRememberDevice": true,
              "rememberDeviceByDefault": false,
              "rememberDeviceLifetimeInMinutes": 0
            }
          },
          "expiresAt": "2016-12-06T01:32:39.000Z",
          "stateToken": "00wCfuPA3qX3azDawSdPGFIhHuzbZX72Gv4bu_ew9d"
        }
      ]
  authn.verifyWebauthnFactor:
    description: |-
      Verifies a user with a WebAuthn Factor. The verification process starts with getting the WebAuthn credential request options, which are used to help select an appropriate authenticator using the WebAuthn API. This authenticator then generates an assertion that may be used to verify the user.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authn/#verify-webauthn-factor
    example:
      inputs: [
        {
          "stateToken": "stateToken"
        }
      ]
      outputs: [
        {
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/authn/factors/fwfbaopNw5CCGJTu20g4/verify",
              "name": "verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "prev": {
              "href": "https://$yourOktaDomain/api/v1/authn/previous",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/authn/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "MFA_CHALLENGE",
          "_embedded": {
            "user": {
              "id": "00u21eb3qyRDNNIKTGCW",
              "profile": {
                "login": "first.last@gmail.com",
                "locale": "en",
                "lastName": "Last",
                "timeZone": "America/Los_Angeles",
                "firstName": "First"
              },
              "passwordChanged": "2015-10-28T23:27:57.000Z"
            },
            "factor": {
              "id": "fwfbaopNw5CCGJTu20g4",
              "profile": {
                "credentialId": "AZBXkiL5GrhfSvLeS4MHSvTVC_1ZLPcwI4SKKqKF1sd9TL_UFoQliUKu00to6slexSOZ9oh1h54BbTXPA343qHBF",
                "authenticatorName": "MacBook Touch ID"
              },
              "provider": "FIDO",
              "_embedded": {
                "challenge": {
                  "challenge": "K0UNqWlz2TCCDd5qEkBf",
                  "extensions": {}
                }
              },
              "factorType": "webauthn",
              "vendorName": "FIDO"
            },
            "policy": {
              "factorsPolicyInfo": {},
              "allowRememberDevice": false,
              "rememberDeviceByDefault": false,
              "rememberDeviceLifetimeInMinutes": 0
            }
          },
          "expiresAt": "2019-10-24T00:21:05.000Z",
          "stateToken": "00lbJNfhlFVRVAR37O3PRzNFkx-v5kgMYHJPTtMDS2",
          "factorResult": "CHALLENGE",
          "challengeType": "FACTOR"
        }
      ]
  authorizationServers.activateAuthorizationServer:
    description: |-
      Makes a Custom Authorization Server for use by clients
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#activate-authorization-server
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  authorizationServers.createClaim:
    description: |-
      Creates a Claim for a Custom Authorization Server
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#create-a-claim
    example:
      inputs: [
        {
          "name": "carDriving",
          "value": "\"driving!\"",
          "status": "ACTIVE",
          "claimType": "RESOURCE",
          "valueType": "EXPRESSION",
          "conditions": {
            "scopes": [
              "car:drive"
            ]
          }
        }
      ]
      outputs: [
        {
          "id": "oclain6za1HQ0noop0h7",
          "name": "sub",
          "value": "(appuser != null) ? appuser.userName : app.clientId",
          "status": "ACTIVE",
          "system": true,
          "claimType": "RESOURCE",
          "valueType": "EXPRESSION",
          "conditions": {
            "scopes": []
          },
          "alwaysIncludeInToken": "TRUE"
        }
      ]
  authorizationServers.createPolicy:
    description: |-
      Create a Policy for a Custom Authorization Server
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#create-a-policy
    example:
      inputs: [
        {
          "name": "Default Policy",
          "type": "OAUTH_AUTHORIZATION_POLICY",
          "status": "ACTIVE",
          "priority": 1,
          "conditions": {
            "clients": {
              "include": [
                "ALL_CLIENTS"
              ]
            }
          },
          "description": "Default policy description"
        }
      ]
      outputs: [
        {
          "id": "00palyaappA22DPkj0h7",
          "name": "Vendor2 Policy",
          "type": "OAUTH_AUTHORIZATION_POLICY",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies/00palyaappA22DPkj0h7",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "rules": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies/00palyaappA22DPkj0h7/rules",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies/00palyaappA22DPkj0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "created": "2017-05-26T19:43:53.000Z",
          "priority": 1,
          "conditions": {
            "clients": {
              "include": [
                "ALL_CLIENTS"
              ]
            }
          },
          "description": "Vendor2 policy description",
          "lastUpdated": "2017-06-07T15:28:17.000Z"
        }
      ]
  authorizationServers.createPolicyRule:
    description: |-
      Create a Policy Rule for the specified Custom Authorization Server and Policy
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#create-a-policy-rule
    example:
      inputs: [
        {
          "name": "Default Policy Rule",
          "type": "RESOURCE_ACCESS",
          "actions": {
            "token": {
              "refreshTokenWindowMinutes": 10080,
              "accessTokenLifetimeMinutes": 60,
              "refreshTokenLifetimeMinutes": 0
            }
          },
          "priority": 1,
          "conditions": {
            "people": {
              "groups": {
                "include": [
                  "EVERYONE"
                ]
              }
            },
            "scopes": {
              "include": [
                "*"
              ]
            },
            "grantTypes": {
              "include": [
                "implicit",
                "client_credentials",
                "authorization_code",
                "password"
              ]
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0prbsjfyl01zfSZ9K0h7",
          "name": "Default Policy Rule",
          "type": "RESOURCE_ACCESS",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/default/policies/00pbsjfykycpTsBvv0h7/rules/0prbsjfyl01zfSZ9K0h7",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/default/policies/00pbsjfykycpTsBvv0h7/rules/0prbsjfyl01zfSZ9K0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "actions": {
            "token": {
              "refreshTokenWindowMinutes": 10080,
              "accessTokenLifetimeMinutes": 60,
              "refreshTokenLifetimeMinutes": 0
            }
          },
          "created": "2017-08-25T16:57:02.000Z",
          "priority": 1,
          "conditions": {
            "people": {
              "users": {
                "exclude": [],
                "include": []
              },
              "groups": {
                "exclude": [],
                "include": [
                  "EVERYONE"
                ]
              }
            },
            "scopes": {
              "include": [
                "*"
              ]
            },
            "grantTypes": {
              "include": [
                "implicit",
                "client_credentials",
                "authorization_code",
                "password"
              ]
            }
          },
          "lastUpdated": "2017-08-30T14:51:05.000Z"
        }
      ]
  authorizationServers.createScope:
    description: |-
      Create a Scope for a Custom Authorization Server
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#create-a-scope
    example:
      inputs: [
        {
          "name": "car:drive",
          "consent": "REQUIRED",
          "description": "Drive car"
        }
      ]
      outputs: [
        {
          "id": "scpainazg3Ekay92V0h7",
          "name": "car:drive",
          "system": false,
          "consent": "REQUIRED",
          "default": false,
          "description": "Drive car",
          "displayName": "Saml Jackson",
          "metadataPublish": "NO_CLIENTS"
        }
      ]
  authorizationServers.createAuthorizationServer:
    description: |-
      Creates a new Custom Authorization Server
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#create-authorization-server
    example:
      inputs: [
        {
          "name": "Sample Authorization Server",
          "audiences": [
            "api://default"
          ],
          "description": "Sample Authorization Server description"
        }
      ]
      outputs: [
        {
          "id": "ausain6z9zIedDCxB0h7",
          "name": "Sample Authorization Server",
          "_links": {
            "self": {
              "href": "https:{yourOktaDomain}/api/v1/authorizationServers/ausain6z9zIedDCxB0h7",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE",
                  "PUT"
                ]
              }
            },
            "claims": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/claims",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "scopes": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "metadata": [
              {
                "href": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7/.well-known/oauth-authorization-server",
                "name": "oauth-authorization-server",
                "hints": {
                  "allow": [
                    "GET"
                  ]
                }
              },
              {
                "href": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7/.well-known/openid-configuration",
                "name": "openid-configuration",
                "hints": {
                  "allow": [
                    "GET"
                  ]
                }
              }
            ],
            "policies": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "rotateKey": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/credentials/lifecycle/keyRotate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "issuer": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7",
          "status": "ACTIVE",
          "created": "2017-05-17T22:25:57.000Z",
          "audiences": [
            "https://api.resource.com"
          ],
          "issuerMode": "ORG_URL",
          "credentials": {
            "signing": {
              "kid": "WYQxoK4XAwGFn5Zw5AzLxFvqEKLP79BbsKmWeuc5TB4",
              "lastRotated": "2017-05-17T22:25:57.000Z",
              "nextRotation": "2017-08-15T22:25:57.000Z",
              "rotationMode": "AUTO"
            }
          },
          "description": "Authorization Server Description",
          "lastUpdated": "2017-05-17T22:25:57.000Z"
        }
      ]
  authorizationServers.deactivateAuthorizationServer:
    description: |-
      Makes a Custom Authorization Server unavailable to clients. An inactive Custom Authorization Server can be returned to ACTIVE status by activating it again.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#deactivate-authorization-server
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  authorizationServers.deleteClaim:
    description: |-
      Deletes a Claim specified by the claimId
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#delete-a-claim
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  authorizationServers.deletePolicy:
    description: |-
      Delete a Policy specified by the policyId
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#delete-a-policy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  authorizationServers.deletePolicyRule:
    description: |-
      Delete a Policy Rule defined in the specified Custom Authorization Server and Policy
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#delete-a-policy-rule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  authorizationServers.deleteScope:
    description: |-
      Deletes a Scope specified by the scopeId
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#delete-a-scope
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  authorizationServers.deleteAuthorizationServer:
    description: |-
      Deletes the Custom Authorization Server identified by authServerId
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#delete-authorization-server
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  authorizationServers.getClaim:
    description: |-
      Returns the Claim specified by the claimId
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#get-a-claim
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "oclain6za1HQ0noop0h7",
          "name": "sub",
          "value": "(appuser != null) ? appuser.userName : app.clientId",
          "status": "ACTIVE",
          "system": true,
          "claimType": "RESOURCE",
          "valueType": "EXPRESSION",
          "conditions": {
            "scopes": []
          },
          "alwaysIncludeInToken": "TRUE"
        }
      ]
  authorizationServers.getClaims:
    description: |-
      Gets the Claims defined for a specified Custom Authorization Server
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#get-all-claims
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "oclain6za1HQ0noop0h7",
          "name": "sub",
          "value": "(appuser != null) ? appuser.userName : app.clientId",
          "status": "ACTIVE",
          "system": true,
          "claimType": "RESOURCE",
          "valueType": "EXPRESSION",
          "conditions": {
            "scopes": []
          },
          "alwaysIncludeInToken": "TRUE"
        }
      ]
  authorizationServers.getPolicies:
    description: |-
      Returns all the Policies for the specified Custom Authorization Server
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#get-all-policies
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00palyaappA22DPkj0h7",
          "name": "Vendor2 Policy",
          "type": "OAUTH_AUTHORIZATION_POLICY",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies/00palyaappA22DPkj0h7",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "rules": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies/00palyaappA22DPkj0h7/rules",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies/00palyaappA22DPkj0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "created": "2017-05-26T19:43:53.000Z",
          "priority": 1,
          "conditions": {
            "clients": {
              "include": [
                "ALL_CLIENTS"
              ]
            }
          },
          "description": "Vendor2 policy description",
          "lastUpdated": "2017-06-07T15:28:17.000Z"
        }
      ]
  authorizationServers.getPolicyRules:
    description: |-
      Returns all the Policy Rules for the specified Custom Authorization Server and Policy
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#get-all-policy-rules
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0prbsjfyl01zfSZ9K0h7",
          "name": "Default Policy Rule",
          "type": "RESOURCE_ACCESS",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/default/policies/00pbsjfykycpTsBvv0h7/rules/0prbsjfyl01zfSZ9K0h7",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/default/policies/00pbsjfykycpTsBvv0h7/rules/0prbsjfyl01zfSZ9K0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "actions": {
            "token": {
              "refreshTokenWindowMinutes": 10080,
              "accessTokenLifetimeMinutes": 60,
              "refreshTokenLifetimeMinutes": 0
            }
          },
          "created": "2017-08-25T16:57:02.000Z",
          "priority": 1,
          "conditions": {
            "people": {
              "users": {
                "exclude": [],
                "include": []
              },
              "groups": {
                "exclude": [],
                "include": [
                  "EVERYONE"
                ]
              }
            },
            "scopes": {
              "include": [
                "*"
              ]
            },
            "grantTypes": {
              "include": [
                "implicit",
                "client_credentials",
                "authorization_code",
                "password"
              ]
            }
          },
          "lastUpdated": "2017-08-30T14:51:05.000Z"
        }
      ]
  authorizationServers.getScopes:
    description: |-
      Get the Scopes defined for a specified Custom Authorization Server
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#get-all-scopes
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "scpainazg3Ekay92V0h7",
          "name": "car:drive",
          "system": false,
          "consent": "REQUIRED",
          "default": false,
          "description": "Drive car",
          "displayName": "Saml Jackson",
          "metadataPublish": "NO_CLIENTS"
        }
      ]
  authorizationServers.getPolicy:
    description: |-
      Returns a Policy by ID defined in the specified Custom Authorization Server
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#get-a-policy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00palyaappA22DPkj0h7",
          "name": "Vendor2 Policy",
          "type": "OAUTH_AUTHORIZATION_POLICY",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies/00palyaappA22DPkj0h7",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "rules": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies/00palyaappA22DPkj0h7/rules",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies/00palyaappA22DPkj0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "created": "2017-05-26T19:43:53.000Z",
          "priority": 1,
          "conditions": {
            "clients": {
              "include": [
                "ALL_CLIENTS"
              ]
            }
          },
          "description": "Vendor2 policy description",
          "lastUpdated": "2017-06-07T15:28:17.000Z"
        }
      ]
  authorizationServers.getPolicyRule:
    description: |-
      Returns a Policy Rule by ID that is defined in the specified Custom Authorization Server and Policy
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#get-a-policy-rule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0prbsjfyl01zfSZ9K0h7",
          "name": "Default Policy Rule",
          "type": "RESOURCE_ACCESS",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/default/policies/00pbsjfykycpTsBvv0h7/rules/0prbsjfyl01zfSZ9K0h7",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/default/policies/00pbsjfykycpTsBvv0h7/rules/0prbsjfyl01zfSZ9K0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "actions": {
            "token": {
              "refreshTokenWindowMinutes": 10080,
              "accessTokenLifetimeMinutes": 60,
              "refreshTokenLifetimeMinutes": 0
            }
          },
          "created": "2017-08-25T16:57:02.000Z",
          "priority": 1,
          "conditions": {
            "people": {
              "users": {
                "exclude": [],
                "include": []
              },
              "groups": {
                "exclude": [],
                "include": [
                  "EVERYONE"
                ]
              }
            },
            "scopes": {
              "include": [
                "*"
              ]
            },
            "grantTypes": {
              "include": [
                "implicit",
                "client_credentials",
                "authorization_code",
                "password"
              ]
            }
          },
          "lastUpdated": "2017-08-30T14:51:05.000Z"
        }
      ]
  authorizationServers.getScope:
    description: |-
      Gets a Scope specified by the scopeId
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#get-a-scope
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "scpainazg3Ekay92V0h7",
          "name": "car:drive",
          "system": false,
          "consent": "REQUIRED",
          "default": false,
          "description": "Drive car",
          "displayName": "Saml Jackson",
          "metadataPublish": "NO_CLIENTS"
        }
      ]
  authorizationServers.getAuthorizationServer:
    description: |-
      Returns the Custom Authorization Server identified by authServerId
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#get-authorization-server
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ausain6z9zIedDCxB0h7",
          "name": "Sample Authorization Server",
          "_links": {
            "self": {
              "href": "https:{yourOktaDomain}/api/v1/authorizationServers/ausain6z9zIedDCxB0h7",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE",
                  "PUT"
                ]
              }
            },
            "claims": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/claims",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "scopes": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "metadata": [
              {
                "href": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7/.well-known/oauth-authorization-server",
                "name": "oauth-authorization-server",
                "hints": {
                  "allow": [
                    "GET"
                  ]
                }
              },
              {
                "href": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7/.well-known/openid-configuration",
                "name": "openid-configuration",
                "hints": {
                  "allow": [
                    "GET"
                  ]
                }
              }
            ],
            "policies": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "rotateKey": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/credentials/lifecycle/keyRotate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "issuer": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7",
          "status": "ACTIVE",
          "created": "2017-05-17T22:25:57.000Z",
          "audiences": [
            "https://api.resource.com"
          ],
          "issuerMode": "ORG_URL",
          "credentials": {
            "signing": {
              "kid": "WYQxoK4XAwGFn5Zw5AzLxFvqEKLP79BbsKmWeuc5TB4",
              "lastRotated": "2017-05-17T22:25:57.000Z",
              "nextRotation": "2017-08-15T22:25:57.000Z",
              "rotationMode": "AUTO"
            }
          },
          "description": "Authorization Server Description",
          "lastUpdated": "2017-05-17T22:25:57.000Z"
        }
      ]
  authorizationServers.getAuthorizationServerKeys:
    description: |-
      Returns the current, future, and expired Keys used by the Custom Authorization Server
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#get-authorization-server-keys
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "e": "AQAB",
          "n": "g0MirhrysJMPm_wK45jvMbbyanfhl-jmTBv0o69GeifPaISaXGv8LKn3-CyJvUJcjjeHE17KtumJWVxUDRzFqtIMZ1ctCZyIAuWO0nLKilg7_EIDXJrS8k14biqkPO1lXGFwtjo3zLHeFSLw6sWf-CEN9zv6Ff3IAXb-RMYpfh-bVrWHH2PJr5HLJuIJIOLWxIgWsWCxjLW-UKI3la-gsahqTnm_r1LSCSYr6N4C-fh--w2_BW8DzTHalBYe76bNr0d7AqtR4tGazmrvc79Wa2bjyxmhhN1u9jSaZQqq-3VZEod8q35v1LoXniJQ4a2W8nDVqb6h4E8MUKYOpljTfQ",
          "alg": "RS256",
          "kid": "RQ8DuhdxCczyMvy7GNJb4Ka3lQ99vrSo3oFBUiZjzzc",
          "kty": "RSA",
          "use": "sig",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausnsopoM6vBRB3PD0g3/credentials/keys/RQ8DuhdxCczyMvy7GNJb4Ka3lQ99vrSo3oFBUiZjzzc",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            }
          },
          "status": "ACTIVE"
        }
      ]
  authorizationServers.getRefreshToken:
    description: |-
      Gets a refresh token issued by an Authorization Server for the specified client
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#get-refresh-token
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "oar579Mcp7OUsNTlo0g3",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabskvc6442nkvQO0h7",
              "title": "Native"
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/default/clients/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00upcgi9dyWEOeCwM0g3",
              "title": "Saml Jackson"
            },
            "client": {
              "href": "https://$yourOktaDomain/oauth2/v1/clients/0oabskvc6442nkvQO0h7",
              "title": "Example Client App"
            },
            "revoke": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/default/clients/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3",
              "hints": {
                "allow": [
                  "DELETE"
                ]
              }
            },
            "authorizationServer": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/default",
              "title": "Example Authorization Server"
            }
          },
          "issuer": "https://$yourOktaDomain/oauth2/default",
          "scopes": [
            "offline_access",
            "car:drive"
          ],
          "status": "ACTIVE",
          "userId": "00upcgi9dyWEOeCwM0g3",
          "created": "2018-03-09T03:18:06.000Z",
          "clientId": "0oabskvc6442nkvQO0h7",
          "_embedded": {
            "scopes": [
              {
                "id": "scppb56cIl4GvGxy70g3",
                "name": "offline_access",
                "_links": {
                  "scope": {
                    "href": "https://$yourOktaDomain/api/v1/authorizationServers/default/scopes/scppb56cIl4GvGxy70g3",
                    "title": "offline_access"
                  }
                },
                "description": "Requests a refresh token by default, used to obtain more access tokens without re-prompting the user for authentication."
              },
              {
                "id": "scp142iq2J8IGRUCS0g4",
                "name": "car:drive",
                "_links": {
                  "scope": {
                    "href": "https://$yourOktaDomain/api/v1/authorizationServers/default/scopes/scp142iq2J8IGRUCS0g4",
                    "title": "Drive car"
                  }
                },
                "description": "Allows the user to drive a car.",
                "displayName": "Drive car"
              }
            ]
          },
          "expiresAt": "2018-03-16T03:18:06.000Z",
          "lastUpdated": "2018-03-09T03:18:06.000Z"
        }
      ]
  authorizationServers.listAuthorizationServers:
    description: |-
      Lists all Custom Authorization Servers in this Okta organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#list-authorization-servers
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ausain6z9zIedDCxB0h7",
          "name": "Sample Authorization Server",
          "_links": {
            "self": {
              "href": "https:{yourOktaDomain}/api/v1/authorizationServers/ausain6z9zIedDCxB0h7",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE",
                  "PUT"
                ]
              }
            },
            "claims": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/claims",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "scopes": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "metadata": [
              {
                "href": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7/.well-known/oauth-authorization-server",
                "name": "oauth-authorization-server",
                "hints": {
                  "allow": [
                    "GET"
                  ]
                }
              },
              {
                "href": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7/.well-known/openid-configuration",
                "name": "openid-configuration",
                "hints": {
                  "allow": [
                    "GET"
                  ]
                }
              }
            ],
            "policies": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "rotateKey": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/credentials/lifecycle/keyRotate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "issuer": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7",
          "status": "ACTIVE",
          "created": "2017-05-17T22:25:57.000Z",
          "audiences": [
            "https://api.resource.com"
          ],
          "issuerMode": "ORG_URL",
          "credentials": {
            "signing": {
              "kid": "WYQxoK4XAwGFn5Zw5AzLxFvqEKLP79BbsKmWeuc5TB4",
              "lastRotated": "2017-05-17T22:25:57.000Z",
              "nextRotation": "2017-08-15T22:25:57.000Z",
              "rotationMode": "AUTO"
            }
          },
          "description": "Authorization Server Description",
          "lastUpdated": "2017-05-17T22:25:57.000Z"
        }
      ]
  authorizationServers.listClientResourcesForAuthorizationServer:
    description: |-
      Lists all Client Resources for which the specified Authorization Server has tokens
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#list-client-resources-for-an-authorization-server
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "tokens": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausnsopoM6vBRB3PD0g3/clients/0oabskvc6442nkvQO0h7/tokens"
            }
          },
          "logo_uri": null,
          "client_id": "0oabskvc6442nkvQO0h7",
          "client_uri": null,
          "client_name": "My App"
        }
      ]
  authorizationServers.listRefreshTokens:
    description: |-
      Lists all refresh tokens issued by an Authorization Server for a specific client
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#list-refresh-tokens
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "oar579Mcp7OUsNTlo0g3",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabskvc6442nkvQO0h7",
              "title": "Native"
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausnsopoM6vBRB3PD0g3/clients/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00upcgi9dyWEOeCwM0g3",
              "title": "Saml Jackson"
            },
            "client": {
              "href": "https://$yourOktaDomain/oauth2/v1/clients/0oabskvc6442nkvQO0h7",
              "title": "Example Client App"
            },
            "revoke": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausnsopoM6vBRB3PD0g3/clients/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3",
              "hints": {
                "allow": [
                  "DELETE"
                ]
              }
            },
            "authorizationServer": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausnsopoM6vBRB3PD0g3",
              "title": "Example Authorization Server"
            }
          },
          "issuer": "https://$yourOktaDomain/oauth2/ausnsopoM6vBRB3PD0g3",
          "scopes": [
            "offline_access",
            "car:drive"
          ],
          "status": "ACTIVE",
          "userId": "00upcgi9dyWEOeCwM0g3",
          "created": "2018-03-09T03:18:06.000Z",
          "clientId": "0oabskvc6442nkvQO0h7",
          "expiresAt": "2018-03-16T03:18:06.000Z",
          "lastUpdated": "2018-03-09T03:18:06.000Z"
        }
      ]
  authorizationServers.revokeRefreshTokens:
    description: |-
      Revokes all refresh tokens issued by an Authorization Server for the specified client. Any access tokens issued with these refresh tokens are also revoked, but access tokens issued without a refresh token aren't affected.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#revoke-all-refresh-tokens
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  authorizationServers.revokeRefreshToken:
    description: |-
      Revokes the specified refresh token. If an access token was issued with this refresh token, it is also revoked.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#revoke-refresh-token
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  authorizationServers.rotateAuthorizationServerKeys:
    description: |-
      Rotates the current Keys for a Custom Authorization Server. If you rotate Keys, the ACTIVE Key becomes the EXPIRED Key, the NEXT Key becomes the ACTIVE Key, and the Custom Authorization Server immediately begins using the new active Key to sign tokens.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#rotate-authorization-server-keys
    example:
      inputs: [
        {
          "use": "sig"
        }
      ]
      outputs: [
        {
          "e": "AQAB",
          "n": "g0MirhrysJMPm_wK45jvMbbyanfhl-jmTBv0o69GeifPaISaXGv8LKn3-CyJvUJcjjeHE17KtumJWVxUDRzFqtIMZ1ctCZyIAuWO0nLKilg7_EIDXJrS8k14biqkPO1lXGFwtjo3zLHeFSLw6sWf-CEN9zv6Ff3IAXb-RMYpfh-bVrWHH2PJr5HLJuIJIOLWxIgWsWCxjLW-UKI3la-gsahqTnm_r1LSCSYr6N4C-fh--w2_BW8DzTHalBYe76bNr0d7AqtR4tGazmrvc79Wa2bjyxmhhN1u9jSaZQqq-3VZEod8q35v1LoXniJQ4a2W8nDVqb6h4E8MUKYOpljTfQ",
          "alg": "RS256",
          "kid": "Y3vBOdYT-l-I0j-gRQ26XjutSX00TeWiSguuDhW3ngo",
          "kty": "RSA",
          "use": "sig",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausnsopoM6vBRB3PD0g3/credentials/keys/Y3vBOdYT-l-I0j-gRQ26XjutSX00TeWiSguuDhW3ngo",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            }
          },
          "status": "ACTIVE"
        }
      ]
  authorizationServers.updateClaim:
    description: |-
      Changes the configuration of a Claim specified by the claimId
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#update-a-claim
    example:
      inputs: [
        {
          "name": "carDriving",
          "value": "\"driving!\"",
          "status": "ACTIVE",
          "system": "false",
          "claimType": "RESOURCE",
          "valueType": "EXPRESSION",
          "conditions": {
            "scopes": [
              "car:drive"
            ]
          },
          "alwaysIncludeInToken": "true"
        }
      ]
      outputs: [
        {
          "id": "oclain6za1HQ0noop0h7",
          "name": "sub",
          "value": "(appuser != null) ? appuser.userName : app.clientId",
          "status": "ACTIVE",
          "system": true,
          "claimType": "RESOURCE",
          "valueType": "EXPRESSION",
          "conditions": {
            "scopes": []
          },
          "alwaysIncludeInToken": "TRUE"
        }
      ]
  authorizationServers.updatePolicy:
    description: |-
      Change the configuration of a Policy specified by the policyId
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#update-a-policy
    example:
      inputs: [
        {
          "id": "00p5m9xrrBffPd9ah0g4",
          "name": "default",
          "type": "OAUTH_AUTHORIZATION_POLICY",
          "status": "ACTIVE",
          "system": false,
          "priority": 1,
          "conditions": {
            "clients": {
              "include": [
                "ALL_CLIENTS"
              ]
            }
          },
          "description": "default policy"
        }
      ]
      outputs: [
        {
          "id": "00palyaappA22DPkj0h7",
          "name": "Vendor2 Policy",
          "type": "OAUTH_AUTHORIZATION_POLICY",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies/00palyaappA22DPkj0h7",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "rules": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies/00palyaappA22DPkj0h7/rules",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies/00palyaappA22DPkj0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "created": "2017-05-26T19:43:53.000Z",
          "priority": 1,
          "conditions": {
            "clients": {
              "include": [
                "ALL_CLIENTS"
              ]
            }
          },
          "description": "Vendor2 policy description",
          "lastUpdated": "2017-06-07T15:28:17.000Z"
        }
      ]
  authorizationServers.updatePolicyRule:
    description: |-
      Change the configuration of the Policy Rule defined in the specified Custom Authorization Server and Policy
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#update-a-policy-rule
    example:
      inputs: [
        {
          "name": "Default Policy Rule",
          "type": "RESOURCE_ACCESS",
          "status": "ACTIVE",
          "actions": {
            "token": {
              "refreshTokenWindowMinutes": 10080,
              "accessTokenLifetimeMinutes": 60,
              "refreshTokenLifetimeMinutes": 0
            }
          },
          "priority": 1,
          "conditions": {
            "people": {
              "groups": {
                "include": [
                  "EVERYONE"
                ]
              }
            },
            "scopes": {
              "include": [
                "openid",
                "email",
                "address"
              ]
            },
            "grantTypes": {
              "include": [
                "implicit",
                "client_credentials",
                "authorization_code",
                "password"
              ]
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0prbsjfyl01zfSZ9K0h7",
          "name": "Default Policy Rule",
          "type": "RESOURCE_ACCESS",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/default/policies/00pbsjfykycpTsBvv0h7/rules/0prbsjfyl01zfSZ9K0h7",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/default/policies/00pbsjfykycpTsBvv0h7/rules/0prbsjfyl01zfSZ9K0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "actions": {
            "token": {
              "refreshTokenWindowMinutes": 10080,
              "accessTokenLifetimeMinutes": 60,
              "refreshTokenLifetimeMinutes": 0
            }
          },
          "created": "2017-08-25T16:57:02.000Z",
          "priority": 1,
          "conditions": {
            "people": {
              "users": {
                "exclude": [],
                "include": []
              },
              "groups": {
                "exclude": [],
                "include": [
                  "EVERYONE"
                ]
              }
            },
            "scopes": {
              "include": [
                "*"
              ]
            },
            "grantTypes": {
              "include": [
                "implicit",
                "client_credentials",
                "authorization_code",
                "password"
              ]
            }
          },
          "lastUpdated": "2017-08-30T14:51:05.000Z"
        }
      ]
  authorizationServers.updateScope:
    description: |-
      Change the configuration of a Scope specified by the scopeId
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#update-a-scope
    example:
      inputs: [
        {
          "name": "car:order",
          "consent": "REQUIRED",
          "description": "Order car",
          "metadataPublish": "ALL_CLIENTS"
        }
      ]
      outputs: [
        {
          "id": "scpainazg3Ekay92V0h7",
          "name": "car:drive",
          "system": false,
          "consent": "REQUIRED",
          "default": false,
          "description": "Drive car",
          "displayName": "Saml Jackson",
          "metadataPublish": "NO_CLIENTS"
        }
      ]
  authorizationServers.updateAuthorizationServer:
    description: |-
      Updates the Authorization Server identified by authServerId
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/authorization-servers/#update-authorization-server
    example:
      inputs: [
        {
          "name": "New Authorization Server",
          "audiences": [
            "api://default"
          ],
          "description": "Authorization Server New Description"
        }
      ]
      outputs: [
        {
          "id": "ausain6z9zIedDCxB0h7",
          "name": "Sample Authorization Server",
          "_links": {
            "self": {
              "href": "https:{yourOktaDomain}/api/v1/authorizationServers/ausain6z9zIedDCxB0h7",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE",
                  "PUT"
                ]
              }
            },
            "claims": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/claims",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "scopes": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "metadata": [
              {
                "href": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7/.well-known/oauth-authorization-server",
                "name": "oauth-authorization-server",
                "hints": {
                  "allow": [
                    "GET"
                  ]
                }
              },
              {
                "href": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7/.well-known/openid-configuration",
                "name": "openid-configuration",
                "hints": {
                  "allow": [
                    "GET"
                  ]
                }
              }
            ],
            "policies": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/policies",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "rotateKey": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/credentials/lifecycle/keyRotate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "issuer": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7",
          "status": "ACTIVE",
          "created": "2017-05-17T22:25:57.000Z",
          "audiences": [
            "https://api.resource.com"
          ],
          "issuerMode": "ORG_URL",
          "credentials": {
            "signing": {
              "kid": "WYQxoK4XAwGFn5Zw5AzLxFvqEKLP79BbsKmWeuc5TB4",
              "lastRotated": "2017-05-17T22:25:57.000Z",
              "nextRotation": "2017-08-15T22:25:57.000Z",
              "rotationMode": "AUTO"
            }
          },
          "description": "Authorization Server Description",
          "lastUpdated": "2017-05-17T22:25:57.000Z"
        }
      ]
  domains.createCertificate:
    description: |-
      Creates the Certificate for the Domain
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/domains/#create-certificate
    example:
      inputs: [
        {
          "type": "PEM",
          "privateKey": "nMIIEvwOc+9myqUkbh44TNBAiF2ki9MQj4enJXMtub4waQ/ywqHIdc50",
          "certificate": "Ew1MZXQncyBFbmNyeXB0kyxtKhVw/a5Fowt+NqCpEBjj"
        }
      ]
      outputs: [
        {}
      ]
  domains.createDomain:
    description: |-
      Creates your domain
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/domains/#create-domain
    example:
      inputs: [
        {
          "domain": "login.example.com",
          "certificateSourceType": "MANUAL"
        }
      ]
      outputs: [
        {
          "id": "OcDz6iRyjkaCTXkdo0g3",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/domains/OcDz6iRyjkaCTXkdo0g3",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/domains/OcDz6iRyjkaCTXkdo0g3/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "domain": "login.example.com",
          "dnsRecords": [
            {
              "fqdn": "_oktaverification.login.example.com",
              "values": [
                "79496f234c814638b1cc44f51a782781"
              ],
              "recordType": "TXT"
            },
            {
              "fqdn": "login.sigmanetcorp.us",
              "values": [
                "$yourOktaDomain.customdomains.okta1.com"
              ],
              "recordType": "CNAME"
            }
          ],
          "validationStatus": "NOT_STARTED"
        }
      ]
  domains.deleteDomain:
    description: |-
      Deletes your Domain
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/domains/#delete-domain
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  domains.getDomains:
    description: |-
      List all verified custom Domains for the org
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/domains/#get-all-domains
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "domains": [
            {
              "id": "OcDz6iRyjkaCTXkdo0g3",
              "_links": {
                "self": {
                  "href": "https://$yourOktaDomain/api/v1/domains/OcDz6iRyjkaCTXkdo0g3",
                  "hints": {
                    "allow": [
                      "GET",
                      "DELETE"
                    ]
                  }
                }
              },
              "domain": "login.example.com",
              "validationStatus": "COMPLETED"
            }
          ]
        }
      ]
  domains.getDomain:
    description: |-
      Fetches your Domain
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/domains/#get-domain
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "OcDz6iRyjkaCTXkdo0g3",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/domains/OcDz6iRyjkaCTXkdo0g3",
              "hints": {
                "allow": [
                  "DELETE"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/domains/OcDz6iRyjkaCTXkdo0g3/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "certificate": {
              "href": "https://$yourOktaDomain/api/v1/domains/OcDz6iRyjkaCTXkdo0g3/certificate",
              "hints": {
                "allow": [
                  "PUT"
                ]
              }
            }
          },
          "domain": "login.example.com",
          "dnsRecords": [
            {
              "fqdn": "_oktaverification.login.example.com",
              "values": [
                "79496f234c814638b1cc44f51a782781"
              ],
              "recordType": "TXT"
            },
            {
              "fqdn": "login.example.com",
              "values": [
                "$yourOktaDomain.customdomains.okta1.com"
              ],
              "recordType": "CNAME"
            }
          ],
          "validationStatus": "COMPLETED",
          "publicCertificate": {
            "subject": "CN=login.example.com",
            "expiration": "2021-05-11T05:13:05.000Z",
            "fingerprint": "73:68:82:7B:83:2E:48:29:A5:5E:E8:40:41:80:B3:AA:03:C4:42:43:05:73:45:BC:AA:47:00:23:A3:70:E5:C4"
          }
        }
      ]
  domains.verifyDomain:
    description: |-
      Verifies the Domain.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/domains/#verify-domain
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "OcDz6iRyjkaCTXkdo0g3",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/domains/OcDz6iRyjkaCTXkdo0g3",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "certificate": {
              "href": "https://$yourOktaDomain/api/v1/domains/OcDz6iRyjkaCTXkdo0g3/certificate",
              "hints": {
                "allow": [
                  "PUT"
                ]
              }
            }
          },
          "domain": "login.example.com",
          "dnsRecords": [
            {
              "fqdn": "_oktaverification.login.example.com",
              "values": [
                "79496f234c814638b1cc44f51a782781"
              ],
              "recordType": "TXT"
            },
            {
              "fqdn": "login.example.com",
              "values": [
                "$yourOktaDomain.customdomains.okta1.com"
              ],
              "recordType": "CNAME"
            }
          ],
          "validationStatus": "VERIFIED"
        }
      ]
  eventHooks.activateEventHook:
    description: |-
      Activates the event hook that matches the provided id
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/event-hooks/#activate-event-hook
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "whor0dvWvbMQJHZCM0g3",
          "name": "My Test Event Hook",
          "events": {
            "type": "EVENT_TYPE",
            "items": [
              "user.lifecycle.create",
              "user.lifecycle.activate"
            ]
          },
          "status": "ACTIVE",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/eventHooks",
              "method": "POST",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER"
              }
            },
            "version": "1.0.0"
          },
          "created": "2018-05-15T01:23:08.000Z",
          "lastUpdated": "2018-05-15T01:23:08.000Z",
          "verificationStatus": "VERIFIED"
        }
      ]
  eventHooks.createEventHook:
    description: |-
      Registers a new event hook to your organization in ACTIVE status. You need to pass an Event Hook object in the JSON payload of your request. That object represents the set of required information about the event hook you are registering, including:The URI of your external service endpoint.The events in Okta you want to subscribe to.Additionally, the object lets you specify a secret API key that you want Okta to pass to your external service endpoint (so that your external service can check for its presence as a security measure).Note that the API key you set here is unrelated to the Okta API token you must supply when making calls to Okta APIs.Optionally, you can specify extra headers that you wish Okta to pass to your external service with each call.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/event-hooks/#create-event-hook
    example:
      inputs: [
        {
          "name": "My Test Event Hook",
          "events": {
            "type": "EVENT_TYPE",
            "items": [
              "user.lifecycle.create",
              "user.lifecycle.activate"
            ]
          },
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/eventHooks",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER",
                "value": "api-key"
              }
            },
            "version": "1.0.0"
          }
        }
      ]
      outputs: [
        {
          "id": "whor0dvWvbMQJHZCM0g3",
          "name": "My Test Event Hook",
          "events": {
            "type": "EVENT_TYPE",
            "items": [
              "user.lifecycle.create",
              "user.lifecycle.activate"
            ]
          },
          "status": "ACTIVE",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/eventHooks",
              "method": "POST",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER"
              }
            },
            "version": "1.0.0"
          },
          "created": "2018-05-15T01:23:08.000Z",
          "lastUpdated": "2018-05-15T01:23:08.000Z",
          "verificationStatus": "UNVERIFIED"
        }
      ]
  eventHooks.deactivateEventHook:
    description: |-
      Deactivates the event hook that matches the provided id
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/event-hooks/#deactivate-event-hook
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "whor0dvWvbMQJHZCM0g3",
          "name": "My Test Event Hook",
          "events": {
            "type": "EVENT_TYPE",
            "items": [
              "user.lifecycle.create",
              "user.lifecycle.activate"
            ]
          },
          "status": "INACTIVE",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/eventHooks",
              "method": "POST",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER"
              }
            },
            "version": "1.0.0"
          },
          "created": "2018-05-15T01:23:08.000Z",
          "lastUpdated": "2018-05-15T01:23:08.000Z",
          "verificationStatus": "VERIFIED"
        }
      ]
  eventHooks.deleteEventHook:
    description: |-
      Deletes the event hook that matches the provided id. Once deleted, the event hook is unrecoverable. As a safety precaution, only event hooks with a status of INACTIVE are eligible for deletion.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/event-hooks/#delete-event-hook
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  eventHooks.getEventHook:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/event-hooks/#get-event-hook
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "whor0dvWvbMQJHZCM0g3",
          "name": "My Test Event Hook",
          "events": {
            "type": "EVENT_TYPE",
            "items": [
              "user.lifecycle.create",
              "user.lifecycle.activate"
            ]
          },
          "status": "ACTIVE",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/eventHooks",
              "method": "POST",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER"
              }
            },
            "version": "1.0.0"
          },
          "created": "2018-05-15T01:23:08.000Z",
          "lastUpdated": "2018-05-15T01:23:08.000Z",
          "verificationStatus": "UNVERIFIED"
        }
      ]
  eventHooks.listEventHooks:
    description: |-
      Returns a list of registered event hooks
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/event-hooks/#list-event-hooks
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "whor0dvWvbMQJHZCM0g3",
          "name": "My Test Event Hook",
          "events": {
            "type": "EVENT_TYPE",
            "items": [
              "user.lifecycle.create",
              "user.lifecycle.activate"
            ]
          },
          "status": "ACTIVE",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/eventHooks",
              "method": "POST",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER"
              }
            },
            "version": "1.0.0"
          },
          "created": "2018-05-15T01:23:08.000Z",
          "lastUpdated": "2018-05-15T01:23:08.000Z",
          "verificationStatus": "UNVERIFIED"
        }
      ]
  eventHooks.updateEventHook:
    description: |-
      The submitted event hook properties replace the existing properties after passing validation. Note that some properties are immutable and cannot be updated. Refer to the description of each property in the Event Hook object table for information.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/event-hooks/#update-event-hook
    example:
      inputs: [
        {
          "name": "My Test Event Hook Updated",
          "events": {
            "type": "EVENT_TYPE",
            "items": [
              "user.lifecycle.create",
              "user.lifecycle.activate",
              "user.lifecycle.deactivate"
            ]
          },
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/eventHooks",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value-updated"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER",
                "value": "apikeyupdated"
              }
            },
            "version": "1.0.0"
          }
        }
      ]
      outputs: [
        {
          "id": "whor0dvWvbMQJHZCM0g3",
          "name": "My Test Event Hook Updated",
          "events": {
            "type": "EVENT_TYPE",
            "items": [
              "user.lifecycle.create",
              "user.lifecycle.activate",
              "user.lifecycle.deactivate"
            ]
          },
          "status": "ACTIVE",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/eventHooks",
              "method": "POST",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value-updated"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER"
              }
            },
            "version": "1.0.0"
          },
          "created": "2018-05-15T01:23:08.000Z",
          "lastUpdated": "2018-05-15T01:23:08.000Z",
          "verificationStatus": "UNVERIFIED"
        }
      ]
  eventHooks.verifyEventHook:
    description: |-
      Verifies that the Event Hook matches the provided eventHookId. Your endpoint needs to be able to correctly send back information to Okta in JSON format, so that endpoint ownership can be verified. See Event Hooks documentation for details.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/event-hooks/#verify-event-hook
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "whor0dvWvbMQJHZCM0g3",
          "name": "My Test Event Hook",
          "events": {
            "type": "EVENT_TYPE",
            "items": [
              "user.lifecycle.create",
              "user.lifecycle.activate"
            ]
          },
          "status": "ACTIVE",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/eventHooks",
              "method": "POST",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER"
              }
            },
            "version": "1.0.0"
          },
          "created": "2018-05-15T01:23:08.000Z",
          "lastUpdated": "2018-05-15T01:23:08.000Z",
          "verificationStatus": "VERIFIED"
        }
      ]
  factors.activateCallFactor:
    description: |-
      Activates a call Factor by verifying the OTP. The request/response is identical to activating a TOTP Factor.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#activate-call-factor
    example:
      inputs: [
        {
          "passCode": "12345"
        }
      ]
      outputs: [
        {
          "id": "clf1o51EADOTFXHHBXBP",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/clf1o51EADOTFXHHBXBP",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/clf1o51EADOTFXHHBXBP/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2014-08-06T16:56:31.000Z",
          "profile": {
            "phoneNumber": "+1-555-415-1337",
            "phoneExtension": "1234"
          },
          "provider": "OKTA",
          "factorType": "call",
          "vendorName": "OKTA",
          "lastUpdated": "2014-08-06T16:56:31.000Z"
        }
      ]
  factors.activateEmailFactor:
    description: |-
      Activates an email Factor by verifying the OTP.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#activate-email-factor
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "id": "emfnf3gSScB8xXoXK0g3",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00umvfJKwXOQ1mEL50g3/factors/emfnf3gSScB8xXoXK0g3",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00umvfJKwXOQ1mEL50g3",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00umvfJKwXOQ1mEL50g3/factors/emfnf3gSScB8xXoXK0g3/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "profile": {
            "email": "changed@clouditude.net"
          },
          "provider": "OKTA",
          "factorType": "email",
          "vendorName": "OKTA"
        }
      ]
  factors.activateFactor:
    description: |-
      The sms and token:software:totp Factor types require activation to complete the enrollment process.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#activate-factor
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "id": "ostf1fmaMGJLMNGNLIVG",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2014-07-16T16:13:56.000Z",
          "profile": {
            "credentialId": "dade.murphy@example.com"
          },
          "provider": "OKTA",
          "factorType": "token:software:totp",
          "vendorName": "OKTA",
          "lastUpdated": "2014-08-06T00:31:07.000Z"
        }
      ]
  factors.activatePushFactor:
    description: |-
      Activation of push Factors are asynchronous and must be polled for completion when the factorResult returns a WAITING status. Activations have a short lifetime (minutes) and TIMEOUT if they aren't completed before the expireAt timestamp. Use the published activate link to restart the activation process if the activation is expired.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#activate-push-factor
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "poll": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/opf3hkfocI4JTLAju0g4/lifecycle/activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "send": [
              {
                "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/opf3hkfocI4JTLAju0g4/lifecycle/activate/email",
                "name": "email",
                "hints": {
                  "allow": [
                    "POST"
                  ]
                }
              },
              {
                "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/opf3hkfocI4JTLAju0g4/lifecycle/activate/sms",
                "name": "sms",
                "hints": {
                  "allow": [
                    "POST"
                  ]
                }
              }
            ],
            "qrcode": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/opf3hkfocI4JTLAju0g4/qr/00fukNElRS_Tz6k-CFhg3pH4KO2dj2guhmaapXWbc4",
              "type": "image/png"
            }
          },
          "expiresAt": "2015-04-01T15:57:32.000Z",
          "factorResult": "WAITING"
        }
      ]
  factors.activateSmsFactor:
    description: |-
      Activates an sms factor by verifying the OTP. The request/response is identical to activating a TOTP Factor.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#activate-sms-factor
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "id": "sms1o51EADOTFXHHBXBP",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/sms1o51EADOTFXHHBXBP",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/sms1o51EADOTFXHHBXBP/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2014-08-06T16:56:31.000Z",
          "profile": {
            "phoneNumber": "+1-555-415-1337"
          },
          "provider": "OKTA",
          "factorType": "sms",
          "vendorName": "OKTA",
          "lastUpdated": "2014-08-06T16:56:31.000Z"
        }
      ]
  factors.activateTotpFactor:
    description: |-
      Activates a token:software:totp Factor by verifying the OTP
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#activate-totp-factor
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "id": "ostf1fmaMGJLMNGNLIVG",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2014-07-16T16:13:56.000Z",
          "profile": {
            "credentialId": "dade.murphy@example.com"
          },
          "provider": "OKTA",
          "factorType": "token:software:totp",
          "vendorName": "OKTA",
          "lastUpdated": "2014-08-06T00:31:07.000Z"
        }
      ]
  factors.activateU2fFactor:
    description: |-
      Activation gets the registration information from the U2F token using the API and passes it to Okta.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#activate-u2f-factor
    example:
      inputs: [
        {
          "clientData": "eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZmluaXNoRW5yb2xsbWVudCIsImNoYWxsZW5nZSI6IlhxR0h0RTBoUkxuVEoxYUF5U1oyIiwib3JpZ2luIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6MzAwMCIsImNpZF9wdWJrZXkiOiJ1bnVzZWQifQ",
          "registrationData": "BQTEMUyOM8h1TiZG4DL-RdMr-tYgTYSf62Y52AmwEFTiSYWIRVO5L-MwWdRJOthmV3J3JrqpmGfmFb820-awx1YIQFlTvkMhxItHlpkzahEqicpw7SIH9yMfTn2kaDcC6JaLKPfV5ds0vzuxF1JJj3gCM01bRC-HWI4nCVgc-zaaoRgwggEcMIHDoAMCAQICCwD52fCSMoNczORdMAoGCCqGSM49BAMCMBUxEzARBgNVBAMTClUyRiBJc3N1ZXIwGhcLMDAwMTAxMDAwMFoXCzAwMDEwMTAwMDBaMBUxEzARBgNVBAMTClUyRiBEZXZpY2UwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQFKJupuUgPQcRHUphaW5JPfLvkkwlEwlHKk_ntSp7MS4aTHJyGnpziqncrjiTC_oUVtb-wN-y_t_IMIjueGkhxMAoGCCqGSM49BAMCA0gAMEUCIQDBo6aOLxanIUYnBX9iu3KMngPnobpi0EZSTkVtLC8_cwIgC1945RGqGBKfbyNtkhMifZK05n7fU-gW37Bdnci5D94wRQIhAJv3VvclbRkHAQhaUR8rr8qFTg9iF-GtHoXU95vWaQdyAiAbEr-440U4dQAZF-Sj8G2fxgh5DkgkkWpyUHZhz7N9ew"
        }
      ]
      outputs: [
        {
          "id": "fuf2rovRxogXJ0nDy0g4",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/fuf2rovRxogXJ0nDy0g4",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/fuf2rovRxogXJ0nDy0g4/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2018-05-24T20:43:19.000Z",
          "profile": {
            "version": "U2F_V2",
            "credentialId": "WVO-QyHEi0eWmTNqESqJynDtIgf3Ix9OfaRoNwLoloso99Xl2zS_O7EXUkmPeAIzTVtEL4dYjicJWBz7NpqhGA"
          },
          "provider": "FIDO",
          "factorType": "u2f",
          "vendorName": "FIDO",
          "lastUpdated": "2018-05-24T21:43:32.000Z"
        }
      ]
  factors.activateWebauthnFactor:
    description: |-
      Activation gets the registration information from the WebAuthn authenticator using the API and passes it to Okta.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#activate-webauthn-factor
    example:
      inputs: [
        {
          "clientData": "eyJjaGFsbGVuZ2UiOiJVSk5wYW9sVWt0dF9vcEZPNXJMYyIsIm9yaWdpbiI6Imh0dHBzOi8vcmFpbi5va3RhMS5jb20iLCJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIn0=",
          "attestation": "o2NmbXRmcGFja2VkZ2F0dFN0bXSiY2FsZyZjc2lnWEgwRgIhAMvf2+dzXlHZN1um38Y8aFzrKvX0k5dt/hnDu9lahbR4AiEAuwtMg3IoaElWMp00QrP/+3Po/6LwXfmYQVfsnsQ+da1oYXV0aERhdGFYxkgb9OHGifjS2dG03qLRqvXrDIRyfGAuc+GzF1z20/eVRV2wvl6tzgACNbzGCmSLCyXx8FUDAEIBvWNHOcE3QDUkDP/HB1kRbrIOoZ1dR874ZaGbMuvaSVHVWN2kfNiO4D+HlAzUEFaqlNi5FPqKw+mF8f0XwdpEBlClAQIDJiABIVgg0a6oo3W0JdYPu6+eBrbr0WyB3uJLI3ODVgDfQnpgafgiWCB4fFo/5iiVrFhB8pNH2tbBtKewyAHuDkRolcCnVaCcmQ=="
        }
      ]
      outputs: [
        {
          "id": "fwf2rovRxogXJ0nDy0g4",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/fwf2rovRxogXJ0nDy0g4",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/fwf2rovRxogXJ0nDy0g4/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2018-05-24T20:43:19.000Z",
          "profile": {
            "credentialId": "l3Br0n-7H3g047NqESqJynFtIgf3Ix9OfaRoNwLoloso99Xl2zS_O7EXUkmPeAIzTVtEL4dYjicJWBz7NpqhGA",
            "authenticatorName": "MacBook Touch ID"
          },
          "provider": "FIDO",
          "factorType": "webauthn",
          "vendorName": "FIDO",
          "lastUpdated": "2018-05-24T21:43:32.000Z"
        }
      ]
  factors.enrollCustomHotpFactor:
    description: |-
      Enrolls a user with a Custom HMAC-based One-Time Password (HOTP) Factor. The enrollment process involves passing a factorProfileId and sharedSecret for a particular token. A Factor Profile represents a particular configuration of the Custom HOTP factor. It includes certain properties that match the hardware token that end users possess, such as the HMAC Algorithm, passcode length, and time interval. There can be multiple Custom HOTP factor profiles per org, but users can only be enrolled for one Custom HOTP factor. Admins can create Custom HOTP factor profiles in the Okta Admin Console following the instructions on the Custom TOTP Factor help page  (opens new window) . Then, copy the factorProfileId from the Admin Console into following API request:
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#enroll-custom-hotp-factor
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "id": "chf20l33Ks8U2Zjba0g4",
          "_links": {
            "self": {
              "href": "http://$yourOktaDomain/api/v1/users/00utf43LCCmTJVcsK0g3/factors/chf20l33Ks8U2Zjba0g4",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "http://$yourOktaDomain/api/v1/users/00utf43LCCmTJVcsK0g3",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "verify": {
              "href": "http://$yourOktaDomain/api/v1/users/00utf43LCCmTJVcsK0g3/factors/chf20l33Ks8U2Zjba0g4/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2019-07-22T23:22:36.000Z",
          "provider": "CUSTOM",
          "factorType": "token:hotp",
          "vendorName": "Entrust Datacard",
          "lastUpdated": "2019-07-22T23:22:36.000Z"
        }
      ]
  factors.enrollFactor:
    description: |-
      Enrolls a User with a supported Factor
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#enroll-factor
    example:
      inputs: [
        {
          "profile": {
            "answer": "mayonnaise",
            "question": "disliked_food"
          },
          "provider": "OKTA",
          "factorType": "question"
        }
      ]
      outputs: [
        {
          "id": "ufs1o01OTMGHLAJPVHDZ",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ufs1o01OTMGHLAJPVHDZ",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "questions": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/questions",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2014-08-05T22:58:49.000Z",
          "profile": {
            "question": "disliked_food",
            "questionText": "What is the food you least liked as a child?"
          },
          "provider": "OKTA",
          "factorType": "question",
          "vendorName": "OKTA",
          "lastUpdated": "2014-08-05T22:58:49.000Z"
        }
      ]
  factors.enrollGoogleAuthenticatorFactor:
    description: |-
      Enrolls a user with the Google token:software:totp Factor. The Factor must be activated after enrollment by following the activate link relation to complete the enrollment process.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#enroll-google-authenticator-factor
    example:
      inputs: [
        {
          "provider": "GOOGLE",
          "factorType": "token:software:totp"
        }
      ]
      outputs: [
        {
          "id": "ostf1fmaMGJLMNGNLIVG",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG/lifecycle/activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "PENDING_ACTIVATION",
          "created": "2014-07-16T16:13:56.000Z",
          "profile": {
            "credentialId": "dade.murphy@example.com"
          },
          "provider": "GOOGLE",
          "_embedded": {
            "activation": {
              "_links": {
                "qrcode": {
                  "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG/qr/00fukNElRS_Tz6k-CFhg3pH4KO2dj2guhmaapXWbc4",
                  "type": "image/png"
                }
              },
              "encoding": "base32",
              "timeStep": 30,
              "keyLength": 16,
              "sharedSecret": "JBTWGV22G4ZGKV3N"
            }
          },
          "factorType": "token:software:totp",
          "vendorName": "GOOGLE",
          "lastUpdated": "2014-07-16T16:13:56.000Z"
        }
      ]
  factors.enrollOktaCallFactor:
    description: |-
      Enrolls a user with the Okta call Factor and a Call profile. A voice call with an OTP is made to the device during enrollment and must be activated.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#enroll-okta-call-factor
    example:
      inputs: [
        {
          "profile": {
            "phoneNumber": "+1-555-415-1337",
            "phoneExtension": "1234"
          },
          "provider": "OKTA",
          "factorType": "call"
        }
      ]
      outputs: [
        {
          "id": "clf1nz9JHJGHWRKMTLHP",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/clf1nz9JHJGHWRKMTLHP",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "resend": [
              {
                "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/clf1nz9JHJGHWRKMTLHP/resend",
                "name": "call",
                "hints": {
                  "allow": [
                    "POST"
                  ]
                }
              }
            ],
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/clf1nz9JHJGHWRKMTLHP/lifecycle/activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "PENDING_ACTIVATION",
          "created": "2014-08-05T20:59:49.000Z",
          "profile": {
            "phoneNumber": "+1-555-415-1337",
            "phoneExtension": "1234"
          },
          "provider": "OKTA",
          "factorType": "call",
          "vendorName": "OKTA",
          "lastUpdated": "2014-08-06T03:59:49.000Z"
        }
      ]
  factors.enrollOktaEmailFactor:
    description: |-
      Enrolls a user with an Email Factor. An email with an OTP is sent to the primary or secondary (depending on which one is enrolled) email address of the user during enrollment. The Factor must be activated by following the activate link relation to complete the enrollment process. An optional tokenLifetimeSeconds can be specified as a query parameter to indicate the lifetime of the OTP. The default lifetime is 300 seconds. tokenLifetimeSeconds should be in the range of 1 to 86400 inclusive.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#enroll-okta-email-factor
    example:
      inputs: [
        {
          "profile": {
            "email": "test@gmail.com"
          },
          "provider": "OKTA",
          "factorType": "email"
        }
      ]
      outputs: [
        {
          "id": "emfnf3gSScB8xXoXK0g3",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00umvfJKwXOQ1mEL50g3/factors/emfnf3gSScB8xXoXK0g3",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00umvfJKwXOQ1mEL50g3",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "resend": [
              {
                "href": "https://$yourOktaDomain/api/v1/users/00umvfJKwXOQ1mEL50g3/factors/emfnf3gSScB8xXoXK0g3/resend",
                "name": "email",
                "hints": {
                  "allow": [
                    "POST"
                  ]
                }
              }
            ],
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00umvfJKwXOQ1mEL50g3/factors/emfnf3gSScB8xXoXK0g3/lifecycle/activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "PENDING_ACTIVATION",
          "provider": "OKTA",
          "factorType": "email",
          "vendorName": "OKTA"
        }
      ]
  factors.enrollOktaSecurityQuestionFactor:
    description: |-
      Enrolls a User with the question factor and Question Profile.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#enroll-okta-security-question-factor
    example:
      inputs: [
        {
          "profile": {
            "answer": "mayonnaise",
            "question": "disliked_food"
          },
          "provider": "OKTA",
          "factorType": "question"
        }
      ]
      outputs: [
        {
          "id": "ufs1o01OTMGHLAJPVHDZ",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ufs1o01OTMGHLAJPVHDZ",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "questions": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/questions",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2014-08-05T22:58:49.000Z",
          "profile": {
            "question": "disliked_food",
            "questionText": "What is the food you least liked as a child?"
          },
          "provider": "OKTA",
          "factorType": "question",
          "vendorName": "OKTA",
          "lastUpdated": "2014-08-05T22:58:49.000Z"
        }
      ]
  factors.enrollOktaSmsFactor:
    description: |-
      Enrolls a User with the Okta sms Factor and an SMS profile. A text message with a One-Time Passcode (OTP) is sent to the device during enrollment and must be activated by following the activate link relation to complete the enrollment process.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#enroll-okta-sms-factor
    example:
      inputs: [
        {
          "profile": {
            "phoneNumber": "+1-555-415-1337"
          },
          "provider": "OKTA",
          "factorType": "sms"
        }
      ]
      outputs: [
        {
          "id": "mbl1nz9JHJGHWRKMTLHP",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/mbl1nz9JHJGHWRKMTLHP",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "resend": [
              {
                "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/mbl1nz9JHJGHWRKMTLHP/resend",
                "name": "sms",
                "hints": {
                  "allow": [
                    "POST"
                  ]
                }
              }
            ],
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/mbl1nz9JHJGHWRKMTLHP/lifecycle/activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "PENDING_ACTIVATION",
          "created": "2014-08-05T20:59:49.000Z",
          "profile": {
            "phoneNumber": "+1-555-415-1337"
          },
          "provider": "OKTA",
          "factorType": "sms",
          "vendorName": "OKTA",
          "lastUpdated": "2014-08-06T03:59:49.000Z"
        }
      ]
  factors.enrollOktaVerifyPushFactor:
    description: |-
      Enrolls a user with the Okta Verify push Factor. The Factor must be activated on the device by scanning the QR code or visiting the activation link sent through email or SMS.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#enroll-okta-verify-push-factor
    example:
      inputs: [
        {
          "provider": "OKTA",
          "factorType": "push"
        }
      ]
      outputs: [
        {
          "id": "opfbtzzrjgwauUsxO0g4",
          "_links": {
            "poll": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfbtzzrjgwauUsxO0g4/lifecycle/activate/poll",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfbtzzrjgwauUsxO0g4",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            }
          },
          "status": "PENDING_ACTIVATION",
          "created": "2015-11-13T07:34:22.000Z",
          "provider": "OKTA",
          "_embedded": {
            "activation": {
              "_links": {
                "send": [
                  {
                    "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfbtzzrjgwauUsxO0g4/lifecycle/activate/email",
                    "name": "email",
                    "hints": {
                      "allow": [
                        "POST"
                      ]
                    }
                  },
                  {
                    "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfbtzzrjgwauUsxO0g4/lifecycle/activate/sms",
                    "name": "sms",
                    "hints": {
                      "allow": [
                        "POST"
                      ]
                    }
                  }
                ],
                "qrcode": {
                  "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfbtzzrjgwauUsxO0g4/qr/00Ji8qVBNJD4LmjYy1WZO2VbNqvvPdaCVua-1qjypa",
                  "type": "image/png"
                }
              },
              "expiresAt": "2015-11-13T07:44:22.000Z",
              "factorResult": "WAITING"
            }
          },
          "factorType": "push",
          "vendorName": "OKTA",
          "lastUpdated": "2015-11-13T07:34:22.000Z"
        }
      ]
  factors.enrollOktaVerifyTotpFactor:
    description: |-
      Enrolls a user with an Okta token:software:totp factor. The factor must be activated after enrollment by following the activate link relation to complete the enrollment process.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#enroll-okta-verify-totp-factor
    example:
      inputs: [
        {
          "provider": "OKTA",
          "factorType": "token:software:totp"
        }
      ]
      outputs: [
        {
          "id": "ostf1fmaMGJLMNGNLIVG",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG/lifecycle/activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "PENDING_ACTIVATION",
          "created": "2014-07-16T16:13:56.000Z",
          "profile": {
            "credentialId": "dade.murphy@example.com"
          },
          "provider": "OKTA",
          "_embedded": {
            "_links": {
              "qrcode": {
                "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG/qr/00fukNElRS_Tz6k-CFhg3pH4KO2dj2guhmaapXWbc4",
                "type": "image/png"
              }
            },
            "activation": {
              "encoding": "base32",
              "timeStep": 30,
              "keyLength": 6,
              "sharedSecret": "JBTWGV22G4ZGKV3N"
            }
          },
          "factorType": "token:software:totp",
          "vendorName": "OKTA",
          "lastUpdated": "2014-07-16T16:13:56.000Z"
        }
      ]
  factors.enrollRsaSecuridFactor:
    description: |-
      Enrolls a user with a RSA SecurID Factor and a token profile. RSA tokens must be verified with the current pin+passcode as part of the enrollment request.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#enroll-rsa-securid-factor
    example:
      inputs: [
        {
          "verify": {
            "passCode": "5275875498"
          },
          "profile": {
            "credentialId": "dade.murphy@example.com"
          },
          "provider": "RSA",
          "factorType": "token"
        }
      ]
      outputs: [
        {
          "id": "rsabtznMn6cp94ez20g4",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/rsabtznMn6cp94ez20g4",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/rsabtznMn6cp94ez20g4/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2015-11-13T07:05:53.000Z",
          "profile": {
            "credentialId": "dade.murphy@example.com"
          },
          "provider": "RSA",
          "factorType": "token",
          "vendorName": "RSA",
          "lastUpdated": "2015-11-13T07:05:53.000Z"
        }
      ]
  factors.enrollSymantecVipFactor:
    description: |-
      Enrolls a user with a Symantec VIP Factor and a token profile. Symantec tokens must be verified with the current and next passcodes as part of the enrollment request.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#enroll-symantec-vip-factor
    example:
      inputs: [
        {
          "verify": {
            "passCode": "875498",
            "nextPassCode": "678195"
          },
          "profile": {
            "credentialId": "VSMT14393584"
          },
          "provider": "SYMANTEC",
          "factorType": "token"
        }
      ]
      outputs: [
        {
          "id": "ufvbtzgkYaA7zTKdQ0g4",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ufvbtzgkYaA7zTKdQ0g4",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ufvbtzgkYaA7zTKdQ0g4/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2015-11-13T06:52:08.000Z",
          "profile": {
            "credentialId": "VSMT14393584"
          },
          "provider": "SYMANTEC",
          "factorType": "token",
          "vendorName": "SYMANTEC",
          "lastUpdated": "2015-11-13T06:52:08.000Z"
        }
      ]
  factors.enrollU2fFactor:
    description: |-
      Enrolls a user with a U2F Factor. The enrollment process starts with getting a nonce from Okta and using that to get registration information from the U2F key using the U2F JavaScript API.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#enroll-u2f-factor
    example:
      inputs: [
        {
          "provider": "FIDO",
          "factorType": "u2f"
        }
      ]
      outputs: [
        {
          "id": "fuf2rovRxogXJ0nDy0g4",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/fuf2rovRxogXJ0nDy0g4",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/fuf2rovRxogXJ0nDy0g4/lifecycle/activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "PENDING_ACTIVATION",
          "created": "2018-05-24T20:43:19.000Z",
          "provider": "FIDO",
          "_embedded": {
            "activation": {
              "nonce": "9DmGJDLvaU6KWxJbfrZ0",
              "version": "U2F_V2",
              "timeoutSeconds": 20
            }
          },
          "factorType": "u2f",
          "vendorName": "FIDO",
          "lastUpdated": "2018-05-24T20:43:19.000Z"
        }
      ]
  factors.enrollWebauthnFactor:
    description: |-
      Enrolls a user with a WebAuthn Factor. The enrollment process starts with getting the WebAuthn credential creation options that are used to help select an appropriate authenticator using the WebAuthn API. This authenticator then generates an enrollment attestation, which may be used to register the authenticator for the user.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#enroll-webauthn-factor
    example:
      inputs: [
        {
          "provider": "FIDO",
          "factorType": "webauthn"
        }
      ]
      outputs: [
        {
          "id": "fwf2rovRxogXJ0nDy0g4",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/fwf2rovRxogXJ0nDy0g4",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/fwf2rovRxogXJ0nDy0g4/lifecycle/activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "PENDING_ACTIVATION",
          "created": "2018-05-24T20:43:19.000Z",
          "provider": "FIDO",
          "_embedded": {
            "activation": {
              "rp": {
                "name": "Rain-Cloud59"
              },
              "user": {
                "id": "00u15s1KDETTQMQYABRL",
                "name": "first.last@gmail.com",
                "displayName": "First Last"
              },
              "challenge": "cdsZ1V10E0BGE4GcG3IK",
              "attestation": "direct",
              "pubKeyCredParams": [
                {
                  "alg": -7,
                  "type": "public-key"
                },
                {
                  "alg": -257,
                  "type": "public-key"
                }
              ],
              "excludeCredentials": [],
              "authenticatorSelection": {
                "userVerification": "preferred",
                "requireResidentKey": false
              }
            }
          },
          "factorType": "webauthn",
          "vendorName": "FIDO",
          "lastUpdated": "2018-05-24T20:43:19.000Z"
        }
      ]
  factors.enrollYubikeyFactor:
    description: |-
      Enrolls a user with a YubiCo Factor (YubiKey). YubiKeys must be verified with the current passcode as part of the enrollment request.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#enroll-yubikey-factor
    example:
      inputs: [
        {
          "verify": {
            "passCode": "cccccceukngdfgkukfctkcvfidnetljjiknckkcjulji"
          },
          "provider": "YUBICO",
          "factorType": "token:hardware"
        }
      ]
      outputs: [
        {
          "id": "ykfbty3BJeBgUi3750g4",
          "_links": {
            "self": {
              "href": "hhttps://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ykfbty3BJeBgUi3750g4",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ykfbty3BJeBgUi3750g4/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2015-11-13T05:27:49.000Z",
          "profile": {
            "credentialId": "000004102994"
          },
          "provider": "YUBICO",
          "factorType": "token:hardware",
          "vendorName": "YUBICO",
          "lastUpdated": "2015-11-13T05:27:49.000Z"
        }
      ]
  factors.getSingleYubikeyOtpToken:
    description: |-
      Gets the specified YubiKey OTP Token
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#get-a-single-yubikey-otp-token
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ykkxdtCA1fKVxyu6R0g3",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/org/factors/yubikey_token/tokens/ykkxdtCA1fKVxyu6R0g3",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00uu0x8sxTr9HcHOo0g3",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/users/00uu0x8sxTr9HcHOo0g3/factors/ykfxduQAhl89YyPrV0g3",
              "hints": {
                "allow": [
                  "DELETE"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2020-06-09T23:42:05.000Z",
          "profile": {
            "serial": "000009508427"
          },
          "activated": "2020-06-09T23:47:29.000Z",
          "lastUpdated": "2020-06-09T23:47:29.000Z",
          "lastVerified": "2020-06-09T23:47:29.000Z"
        }
      ]
  factors.getFactor:
    description: |-
      Fetches a Factor for the specified User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#get-factor
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "sms2gt8gzgEBPUWBIFHN",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/sms2gt8gzgEBPUWBIFHN",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/sms2gt8gzgEBPUWBIFHN/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2014-06-27T20:27:26.000Z",
          "profile": {
            "phoneNumber": "+1-555-415-1337"
          },
          "provider": "OKTA",
          "factorType": "sms",
          "vendorName": "OKTA",
          "lastUpdated": "2014-06-27T20:27:26.000Z"
        }
      ]
  factors.issueCallFactorChallenge:
    description: |-
      Sends an OTP for a call Factor to the user's phone
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#issue-a-call-factor-challenge
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "factor": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/clff17zuKEUMYQAQGCOV",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/clff17zuKEUMYQAQGCOV/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "profile": {
            "phoneNumber": "+12532236986",
            "phoneExtension": "1234"
          },
          "factorResult": "CHALLENGE"
        }
      ]
  factors.issueEmailFactorChallenge:
    description: |-
      Sends an OTP for an email Factor to the user's email address
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#issue-an-email-factor-challenge
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "_links": {
            "factor": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/emfnf3gSScB8xXoXK0g3",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/emfnf3gSScB8xXoXK0g3/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "factorResult": "CHALLENGE"
        }
      ]
  factors.issueSmsFactorChallenge:
    description: |-
      Sends an OTP for an sms Factor to the specified user's phone.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#issue-an-sms-factor-challenge
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "factor": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/smsszf1YNUtGWTx4j0g3",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/smsszf1YNUtGWTx4j0g3/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "profile": {
            "phoneNumber": "+12532236986"
          },
          "factorResult": "CHALLENGE"
        }
      ]
  factors.issuePushFactorChallenge:
    description: |-
      Creates a new transaction and sends an asynchronous push notification to the device for the user to approve or reject. You must poll the transaction to determine when it completes or expires.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#issue-a-push-factor-challenge
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "poll": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3/transactions/mst1eiHghhPxf0yhp0g",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3/transactions/mst1eiHghhPxf0yhp0g",
              "hints": {
                "allow": [
                  "DELETE"
                ]
              }
            }
          },
          "expiresAt": "2015-04-01T15:57:32.000Z",
          "factorResult": "WAITING"
        }
      ]
  factors.issueU2fFactorChallenge:
    description: |-
      Initiates verification for a u2f Factor by getting a challenge nonce string
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#issue-a-u2f-factor-challenge
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "_links": {
            "factor": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/fuf2rovRxogXJ0nDy0g4",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/fuf2rovRxogXJ0nDy0g4/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "profile": {
            "version": "U2F_V2",
            "credentialId": "GAiiLsVab2m3-zL1Fi3bVtNrM9G6_MntUITHKjxkV24ktGKjLSCRnz72wCEdHCe18IvC69Aia0sE4UpsO0HpFQ"
          },
          "_embedded": {
            "challenge": {
              "nonce": "vQFwTt6zKzMV7HFPzjS2",
              "timeoutSeconds": 20
            }
          },
          "factorResult": "CHALLENGE"
        }
      ]
  factors.issueWebauthnFactorChallenge:
    description: |-
      Initiates verification for a webauthn Factor by getting a challenge nonce string, as well as WebAuthn credential request options that are used to help select an appropriate authenticator using the WebAuthn API. This authenticator then generates an assertion, which may be used to verify the user.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#issue-a-webauthn-factor-challenge
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "_links": {
            "factor": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/fwf2rovRxogXJ0nDy0g4",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "verify": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/fwf2rovRxogXJ0nDy0g4/verify",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "profile": {
            "credentialId": "l3Br0n-7H3g047NqESqJynFtIgf3Ix9OfaRoNwLoloso99Xl2zS_O7EXUkmPeAIzTVtEL4dYjicJWBz7NpqhGA",
            "authenticatorName": "MacBook Touch ID"
          },
          "_embedded": {
            "challenge": {
              "challenge": "vQFwTt6zKzMV7HFPzjS2",
              "extensions": {}
            }
          },
          "factorResult": "CHALLENGE"
        }
      ]
  factors.listEnrolledFactors:
    description: |-
      Enumerates all of the enrolled Factors for the specified User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#list-enrolled-factors
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ufs2bysphxKODSZKWVCT",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/ufs2bysphxKODSZKWVCT",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "questions": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/questions",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2014-04-15T18:10:06.000Z",
          "profile": {
            "question": "favorite_art_piece",
            "questionText": "What is your favorite piece of art?"
          },
          "provider": "OKTA",
          "factorType": "question",
          "vendorName": "OKTA",
          "lastUpdated": "2014-04-15T18:10:06.000Z"
        }
      ]
  factors.listFactorsToEnroll:
    description: |-
      Enumerates all of the supported Factors that can be enrolled for the specified User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#list-factors-to-enroll
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "enroll": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "questions": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/questions",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            }
          },
          "provider": "OKTA",
          "factorType": "question",
          "vendorName": "OKTA"
        }
      ]
  factors.listSecurityQuestions:
    description: |-
      Enumerates all available security questions for a User's question Factor
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#list-security-questions
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "question": "disliked_food",
          "questionText": "What is the food you least liked as a child?"
        }
      ]
  factors.listYubikeyOtpTokens:
    description: |-
      Enumerates all YubiKey OTP Tokens
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#list-yubikey-otp-tokens
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ykkwcx13nrDq8g4oy0g3",
          "_links": {
            "self": {
              "href": "http://$yourOktaDomain/api/v1/org/factors/yubikey_token/tokens/ykkwcx13nrDq8g4oy0g3",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            }
          },
          "status": "UNASSIGNED",
          "created": "2020-01-14T21:53:09.000Z",
          "profile": {
            "serial": "000003632071"
          },
          "lastUpdated": "2020-01-14T21:53:09.000Z",
          "lastVerified": "2020-01-14T21:53:06.000Z"
        }
      ]
  factors.resetFactor:
    description: |-
      Unenrolls an existing Factor for the specified user, allowing the user to enroll a new Factor
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#reset-factor
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  factors.uploadYubikeyOtpSeed:
    description: |-
      Uploads a seed for a YubiKey OTP to be enrolled by a user
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#upload-yubikey-otp-seed
    example:
      inputs: [
        {
          "aesKey": "1fcc6d8ce39bf1604e0b17f3e0a11067",
          "publicId": "ccccccijgibu",
          "privateId": "b74be6169486",
          "serialNumber": "7886622"
        }
      ]
      outputs: [
        {
          "id": "ykkut4G6ti62DD8Dy0g3",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/org/factors/yubikey_token/tokens/ykkut4G6ti62DD8Dy0g3",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            }
          },
          "status": "UNASSIGNED",
          "created": "2020-01-10T23:04:10.000Z",
          "profile": {
            "serial": "000007886622"
          },
          "lastUpdated": "2020-01-10T23:04:10.000Z",
          "lastVerified": "2020-01-10T23:04:10.000Z"
        }
      ]
  factors.verifyCallFactorChallenge:
    description: |-
      Verifies an OTP sent by a call Factor challenge
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#verify-a-call-factor-challenge
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "factorResult": "SUCCESS"
        }
      ]
  factors.verifyEmailFactorChallenge:
    description: |-
      Verifies an OTP for an email Factor
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#verify-an-email-factor-challenge
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "factorResult": "SUCCESS"
        }
      ]
  factors.verifySmsFactorChallenge:
    description: |-
      Verifies an OTP sent by an sms Factor challenge
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#verify-an-sms-factor-challenge
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "factorResult": "SUCCESS"
        }
      ]
  factors.verifyPushFactorChallenge:
    description: |-
      Polls a push verification transaction for completion. The transaction result is WAITING, SUCCESS, REJECTED, or TIMEOUT.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#verify-a-push-factor-challenge
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "poll": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3/transactions/v2mst.GldKV5VxTrifyeZmWSQguA",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3/transactions/v2mst.GldKV5VxTrifyeZmWSQguA",
              "hints": {
                "allow": [
                  "DELETE"
                ]
              }
            }
          },
          "profile": {
            "credentialId": "jane.doe@example.com"
          },
          "expiresAt": "2015-04-01T15:57:32.000Z",
          "factorResult": "WAITING"
        }
      ]
  factors.verifyU2fFactorChallenge:
    description: |-
      Verifies a challenge for a u2f Factor by posting a signed assertion using the challenge nonce
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#verify-a-u2f-factor-challenge
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "profile": {
            "version": "U2F_V2",
            "credentialId": "h1bFwJFU9wnelYkexJuQfoUHZ5lX3CgQMTZk4H3I8kM9Nn6XALiQ-BIab4P5EE0GQrA7VD-kAwgnG950aXkhBw"
          },
          "factorResult": "SUCCESS"
        }
      ]
  factors.verifyWebauthnFactorChallenge:
    description: |-
      Verifies a challenge for a webauthn Factor by posting a signed assertion using the challenge nonce
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#verify-a-webauthn-factor-challenge
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "profile": {
            "credentialId": "l3Br0n-7H3g047NqESqJynFtIgf3Ix9OfaRoNwLoloso99Xl2zS_O7EXUkmPeAIzTVtEL4dYjicJWBz7NpqhGA",
            "authenticatorName": "MacBook Touch ID"
          },
          "factorResult": "SUCCESS"
        }
      ]
  factors.verifySecurityQuestionFactor:
    description: |-
      Verifies an answer to a question Factor
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#verify-security-question-factor
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "factorResult": "SUCCESS"
        }
      ]
  factors.verifyTokenFactor:
    description: |-
      Verifies an OTP for a token or token:hardware Factor
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#verify-token-factor
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "factorResult": "SUCCESS"
        }
      ]
  factors.verifyTotpFactor:
    description: |-
      Verifies an OTP for a token:software:totp or token:hotp Factor
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#verify-totp-factor
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "factorResult": "SUCCESS"
        }
      ]
  factors.verifyYubikeyFactor:
    description: |-
      Verifies a user with a Yubico OTP  (opens new window) for a YubiKey token:hardware Factor.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/factors/#verify-yubikey-factor
    example:
      inputs: [
        {
          "passCode": "123456"
        }
      ]
      outputs: [
        {
          "factorResult": "SUCCESS"
        }
      ]
  features.getFeature:
    description: |-
      Fetches a Feature by its id. If you don't know the Feature id, you can list Features.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/features/#get-a-feature
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ftrZooGoT8b41iWRiQs7",
          "name": "Example feature name",
          "type": "self-service",
          "stage": {
            "value": "EA"
          },
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrZooGoT8b41iWRiQs7"
            },
            "enable": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrZooGoT8b41iWRiQs7/enable",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "dependents": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrZooGoT8b41iWRiQs7/dependents"
            },
            "dependencies": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrZooGoT8b41iWRiQs7/dependencies"
            }
          },
          "status": "DISABLED",
          "description": "Example feature description"
        }
      ]
  features.getDependencies:
    description: |-
      Fetches the list of Feature dependencies for a specified Feature. A Feature's dependencies are the Features that it requires to be enabled in order for itself to be enabled.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/features/#get-dependencies
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ftrlBPVcRtYP2epHSMHn",
          "name": "Example feature name",
          "type": "self-service",
          "stage": {
            "value": "EA"
          },
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrlBPVcRtYP2epHSMHn"
            },
            "disable": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrlBPVcRtYP2epHSMHn/disable",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "helpDoc": {
              "href": "https://developer.okta.com/docs/concepts/event-hooks/"
            },
            "dependents": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrlBPVcRtYP2epHSMHn/dependents"
            },
            "dependencies": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrlBPVcRtYP2epHSMHn/dependencies"
            }
          },
          "status": "ENABLED",
          "description": "Example feature description."
        }
      ]
  features.getDependents:
    description: |-
      Fetches the list of Feature dependents for a specified Feature. A Feature's dependents are the Features that need to be disabled in order for the Feature itself to be disabled.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/features/#get-dependents
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ftrcDO2RUt1sjQsSIok3",
          "name": "Example feature name",
          "type": "self-service",
          "stage": {
            "state": "OPEN",
            "value": "BETA"
          },
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrcDO2RUt1sjQsSIok3"
            },
            "survey": {
              "href": "https://goo.gl/forms/aRelevantSurvey"
            },
            "helpDoc": {
              "href": "https://https://help.okta.com/en/prod/Content/index.htm"
            },
            "dependents": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrcDO2RUt1sjQsSIok3/dependents"
            },
            "dependencies": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrcDO2RUt1sjQsSIok3/dependencies"
            }
          },
          "status": "ENABLED",
          "description": "Example feature description."
        }
      ]
  features.listFeatures:
    description: |-
      Fetches a list of all available self-service Features for your org
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/features/#list-features
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ftrZooGoT8b41iWRiQs7",
          "name": "Example feature name",
          "type": "self-service",
          "stage": {
            "value": "EA"
          },
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrZooGoT8b41iWRiQs7"
            },
            "enable": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrZooGoT8b41iWRiQs7/enable",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "dependents": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrZooGoT8b41iWRiQs7/dependents"
            },
            "dependencies": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrZooGoT8b41iWRiQs7/dependencies"
            }
          },
          "status": "DISABLED",
          "description": "Example feature description"
        }
      ]
  features.updateFeature:
    description: |-
      Updates a Feature's status. Use this endpoint to enable or disable a Feature for your org.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/features/#update-a-feature
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ftrZooGoT8b41iWRiQs7",
          "name": "Example feature name",
          "type": "self-service",
          "stage": {
            "value": "EA"
          },
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrZooGoT8b41iWRiQs7"
            },
            "disable": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrZooGoT8b41iWRiQs7/disable",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "dependents": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrZooGoT8b41iWRiQs7/dependents"
            },
            "dependencies": {
              "href": "https://$yourOktaDomain/api/v1/features/ftrZooGoT8b41iWRiQs7/dependencies"
            }
          },
          "status": "ENABLED",
          "description": "Example feature description"
        }
      ]
  groups.activateGroupRule:
    description: |-
      Activates a specific Group rule by ID from your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#activate-a-group-rule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  groups.addGroup:
    description: |-
      Adds a new Group with OKTA_GROUP type to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#add-group
    example:
      inputs: [
        {
          "profile": {
            "name": "West Coast Users",
            "description": "All Users West of The Rockies"
          }
        }
      ]
      outputs: [
        {
          "id": "00g1emaKYZTWRYYRRTSK",
          "type": "OKTA_GROUP",
          "_links": {
            "apps": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/apps"
            },
            "logo": [
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-medium.png",
                "name": "medium",
                "type": "image/png"
              },
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-large.png",
                "name": "large",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/users"
            }
          },
          "created": "2015-02-06T10:11:28.000Z",
          "profile": {
            "name": "West Coast Users",
            "description": "All Users West of The Rockies"
          },
          "lastUpdated": "2015-10-05T19:16:43.000Z",
          "objectClass": [
            "okta:user_group"
          ],
          "lastMembershipUpdated": "2015-11-28T19:15:32.000Z"
        }
      ]
  groups.addUserToGroup:
    description: |-
      Adds a user to a group of OKTA_GROUP type
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#add-user-to-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  groups.createGroupRule:
    description: |-
      Creates a Group rule to dynamically add users to the specified Group if they match the condition
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#create-group-rule
    example:
      inputs: [
        {
          "name": "Engineering group rule",
          "type": "group_rule",
          "actions": {
            "assignUserToGroups": {
              "groupIds": [
                "00gjitX9HqABSoqTB0g3"
              ]
            }
          },
          "conditions": {
            "people": {
              "users": {
                "exclude": [
                  "00u22w79JPMEeeuLr0g4"
                ]
              },
              "groups": {
                "exclude": []
              }
            },
            "expression": {
              "type": "urn:okta:expression:1.0",
              "value": "Engineer"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0pr3f7zMZZHPgUoWO0g4",
          "name": "Engineering group rule",
          "type": "group_rule",
          "status": "INACTIVE",
          "actions": {
            "assignUserToGroups": {
              "groupIds": [
                "00gjitX9HqABSoqTB0g3"
              ]
            }
          },
          "created": "2016-12-01T14:40:04.000Z",
          "conditions": {
            "people": {
              "users": {
                "exclude": [
                  "00u22w79JPMEeeuLr0g4"
                ]
              },
              "groups": {
                "exclude": []
              }
            },
            "expression": {
              "type": "urn:okta:expression:1.0",
              "value": "user.role==\"Engineer\""
            }
          },
          "lastUpdated": "2016-12-01T14:40:04.000Z"
        }
      ]
  groups.deactivateGroupRule:
    description: |-
      Deactivates a specific Group rule by ID from your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#deactivate-a-group-rule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  groups.deleteGroupRule:
    description: |-
      Removes a specific Group rule by ID from your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#delete-a-group-rule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  groups.findGroups:
    description: |-
      Finds groups by name in your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#find-groups
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00g1emaKYZTWRYYRRTSK",
          "type": "OKTA_GROUP",
          "_links": {
            "apps": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/apps"
            },
            "logo": [
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-medium.png",
                "name": "medium",
                "type": "image/png"
              },
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-large.png",
                "name": "large",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/users"
            }
          },
          "created": "2015-02-06T10:11:28.000Z",
          "profile": {
            "name": "West Coast Users",
            "description": "All Users West of The Rockies"
          },
          "lastUpdated": "2015-10-05T19:16:43.000Z",
          "objectClass": [
            "okta:user_group"
          ],
          "lastMembershipUpdated": "2015-11-28T19:15:32.000Z"
        }
      ]
  groups.getGroup:
    description: |-
      Fetches a specific Group by id from your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#get-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00g1emaKYZTWRYYRRTSK",
          "type": "OKTA_GROUP",
          "_links": {
            "apps": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/apps"
            },
            "logo": [
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-medium.png",
                "name": "medium",
                "type": "image/png"
              },
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-large.png",
                "name": "large",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/users"
            }
          },
          "created": "2015-02-06T10:11:28.000Z",
          "profile": {
            "name": "West Coast Users",
            "description": "All Users West of The Rockies"
          },
          "lastUpdated": "2015-10-05T19:16:43.000Z",
          "objectClass": [
            "okta:user_group"
          ],
          "lastMembershipUpdated": "2015-11-28T19:15:32.000Z"
        }
      ]
  groups.getGroupRule:
    description: |-
      Fetches a specific Group rule by ID from your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#get-group-rule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0pr3f7zMZZHPgUoWO0g4",
          "name": "Engineering Group",
          "type": "group_rule",
          "status": "ACTIVE",
          "actions": {
            "assignUserToGroups": {
              "groupIds": [
                "00gjitX9HqABSoqTB0g3"
              ]
            }
          },
          "created": "2016-12-01T14:40:04.000Z",
          "conditions": {
            "people": {
              "users": {
                "exclude": [
                  "00u22w79JPMEeeuLr0g4"
                ]
              },
              "groups": {
                "exclude": []
              }
            },
            "expression": {
              "type": "urn:okta:expression:1.0",
              "value": "user.role==\"Engineer\""
            }
          },
          "lastUpdated": "2016-12-01T14:40:04.000Z"
        }
      ]
  groups.listAssignedApplications:
    description: |-
      Enumerates all Applications that are assigned to a Group. See Application Group Operations.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#list-assigned-applications
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0oafwvZDWJKVLDCUWUAC",
          "name": "template_basic_auth",
          "label": "Sample Basic Auth App",
          "_links": {
            "users": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafwvZDWJKVLDCUWUAC/users"
            },
            "groups": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafwvZDWJKVLDCUWUAC/groups"
            },
            "appLinks": [
              {
                "href": "https://$yourOktaDomain/home/template_basic_auth/0oafwvZDWJKVLDCUWUAC/1438",
                "name": "login",
                "type": "text/html"
              }
            ],
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oafwvZDWJKVLDCUWUAC/lifecycle/deactivate"
            }
          },
          "status": "ACTIVE",
          "created": "2013-09-30T00:56:52.000Z",
          "features": [],
          "settings": {
            "app": {
              "url": "https://example.com/login.html",
              "authURL": "https://example.com/auth.html"
            }
          },
          "signOnMode": "BASIC_AUTH",
          "visibility": {
            "hide": {
              "iOS": false,
              "web": false
            },
            "appLinks": {
              "login": true
            },
            "autoSubmitToolbar": false
          },
          "credentials": {
            "scheme": "EDIT_USERNAME_AND_PASSWORD",
            "userNameTemplate": {
              "type": "BUILT_IN",
              "template": "source.login"
            }
          },
          "lastUpdated": "2013-09-30T00:56:52.000Z",
          "accessibility": {
            "selfService": false,
            "errorRedirectUrl": null
          }
        }
      ]
  groups.listGroupMembers:
    description: |-
      Enumerates all users that are a member of a Group
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#list-group-members
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00u1f96ECLNVOKVMUSEA",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u1f96ECLNVOKVMUSEA"
            }
          },
          "status": "ACTIVE",
          "created": "2013-12-12T16:14:22.000Z",
          "profile": {
            "email": "easy-e@example.com",
            "login": "easy-e@example.com",
            "lastName": "E",
            "firstName": "Easy",
            "mobilePhone": null
          },
          "activated": "2013-12-12T16:14:22.000Z",
          "lastLogin": "2013-12-12T22:14:22.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            }
          },
          "lastUpdated": "2015-11-15T19:23:32.000Z",
          "statusChanged": "2013-12-12T22:14:22.000Z",
          "passwordChanged": "2013-12-12T22:14:22.000Z"
        }
      ]
  groups.listGroupRules:
    description: |-
      Lists all Group rules for your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#list-group-rules
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0pr2kssg22YHgTkgW0g4",
          "name": "Engineering group rule",
          "type": "group_rule",
          "status": "INACTIVE",
          "actions": {
            "assignUserToGroups": {
              "groupIds": [
                "00g25nqEUecj5LYAI0g4"
              ]
            }
          },
          "created": "2016-09-26T20:19:44.000Z",
          "conditions": {
            "expression": {
              "type": "urn:okta:expression:1.0",
              "value": "isMemberOfAnyGroup(\"00g25dgglwXD93m300g4\",\"00gjitX9HqABSoqTB0g3\")"
            }
          },
          "lastUpdated": "2016-12-01T01:50:44.000Z"
        }
      ]
  groups.listGroupsUpdatedAfterTimestamp:
    description: |-
      Enumerates all Groups with Profile or user memberships updated after the specified timestamp
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#list-groups-updated-after-timestamp
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00g1emaKYZTWRYYRRTSK",
          "type": "OKTA_GROUP",
          "_links": {
            "apps": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/apps"
            },
            "logo": [
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-medium.png",
                "name": "medium",
                "type": "image/png"
              },
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-large.png",
                "name": "large",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/users"
            }
          },
          "created": "2015-02-06T10:11:28.000Z",
          "profile": {
            "name": "West Coast Users",
            "description": "All Users West of The Rockies"
          },
          "lastUpdated": "2015-10-05T19:16:43.000Z",
          "objectClass": [
            "okta:user_group"
          ],
          "lastMembershipUpdated": "2015-11-28T19:15:32.000Z"
        }
      ]
  groups.listGroupsWithDefaults:
    description: |-
      Enumerates all Groups in your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#list-groups-with-defaults
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00g1emaKYZTWRYYRRTSK",
          "type": "OKTA_GROUP",
          "_links": {
            "apps": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/apps"
            },
            "logo": [
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-medium.png",
                "name": "medium",
                "type": "image/png"
              },
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-large.png",
                "name": "large",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/users"
            }
          },
          "created": "2015-02-06T10:11:28.000Z",
          "profile": {
            "name": "West Coast Users",
            "description": "All Users West of The Rockies"
          },
          "lastUpdated": "2015-10-05T19:16:43.000Z",
          "objectClass": [
            "okta:user_group"
          ],
          "lastMembershipUpdated": "2015-11-28T19:15:32.000Z"
        }
      ]
  groups.listGroupsWithMembershipUpdatedAfterTimestamp:
    description: |-
      Enumerates all Groups with user memberships updated after the specified timestamp
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#list-groups-with-membership-updated-after-timestamp
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00g1emaKYZTWRYYRRTSK",
          "type": "OKTA_GROUP",
          "_links": {
            "apps": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/apps"
            },
            "logo": [
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-medium.png",
                "name": "medium",
                "type": "image/png"
              },
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-large.png",
                "name": "large",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/users"
            }
          },
          "created": "2015-02-06T10:11:28.000Z",
          "profile": {
            "name": "West Coast Users",
            "description": "All Users West of The Rockies"
          },
          "lastUpdated": "2015-10-05T19:16:43.000Z",
          "objectClass": [
            "okta:user_group"
          ],
          "lastMembershipUpdated": "2015-11-28T19:15:32.000Z"
        }
      ]
  groups.listGroupsWithProfileUpdatedAfterTimestamp:
    description: |-
      Enumerates all Groups with a Profile updated after the specified timestamp
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#list-groups-with-profile-updated-after-timestamp
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00g1emaKYZTWRYYRRTSK",
          "type": "OKTA_GROUP",
          "_links": {
            "apps": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/apps"
            },
            "logo": [
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-medium.png",
                "name": "medium",
                "type": "image/png"
              },
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-large.png",
                "name": "large",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/users"
            }
          },
          "created": "2015-02-06T10:11:28.000Z",
          "profile": {
            "name": "West Coast Users",
            "description": "All Users West of The Rockies"
          },
          "lastUpdated": "2015-10-05T19:16:43.000Z",
          "objectClass": [
            "okta:user_group"
          ],
          "lastMembershipUpdated": "2015-11-28T19:15:32.000Z"
        }
      ]
  groups.listGroupsWithSearch:
    description: |-
      Searches for groups based on the properties specified in the search parameter. Property names in the search parameter are case sensitive, whereas operators (eq, sw, etc.) and string values are case insensitive.This operation: Supports pagination.Requires URL encoding (opens new window). For example, search=type eq 'OKTA_GROUP' is encoded as search=type+eq+%22OKTA_GROUP%22. Examples use cURL-style escaping instead of URL encoding to make them easier to read. Use an ID lookup for records that you update to ensure your results contain the latest data. Search results are eventually consistent.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#list-groups-with-search
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00g1emaKYZTWRYYRRTSK",
          "type": "OKTA_GROUP",
          "_links": {
            "apps": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/apps"
            },
            "logo": [
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-medium.png",
                "name": "medium",
                "type": "image/png"
              },
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-large.png",
                "name": "large",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/users"
            }
          },
          "created": "2015-02-06T10:11:28.000Z",
          "profile": {
            "name": "West Coast Users",
            "description": "All Users West of The Rockies"
          },
          "lastUpdated": "2015-10-05T19:16:43.000Z",
          "objectClass": [
            "okta:user_group"
          ],
          "lastMembershipUpdated": "2015-11-28T19:15:32.000Z"
        }
      ]
  groups.listGroupsWithType:
    description: |-
      Enumerates all Groups with a specific type
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#list-groups-with-type
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00g1emaKYZTWRYYRRTSK",
          "type": "OKTA_GROUP",
          "_links": {
            "apps": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/apps"
            },
            "logo": [
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-medium.png",
                "name": "medium",
                "type": "image/png"
              },
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-large.png",
                "name": "large",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "https://$yourOktaDomain/api/v1/groups/00g1emaKYZTWRYYRRTSK/users"
            }
          },
          "created": "2015-02-06T10:11:28.000Z",
          "profile": {
            "name": "West Coast Users",
            "description": "All Users West of The Rockies"
          },
          "lastUpdated": "2015-10-05T19:16:43.000Z",
          "objectClass": [
            "okta:user_group"
          ],
          "lastMembershipUpdated": "2015-11-28T19:15:32.000Z"
        }
      ]
  groups.removeGroup:
    description: |-
      Removes a group of OKTA_GROUP or APP_GROUP type from your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#remove-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  groups.removeUserFromGroup:
    description: |-
      Removes a user from a group of OKTA_GROUP type
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#remove-user-from-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  groups.updateGroup:
    description: |-
      Updates the profile for a group of OKTA_GROUP type from your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#update-group
    example:
      inputs: [
        {
          "profile": {
            "name": "Ameliorate Name",
            "description": "Amended description"
          }
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "type": "OKTA_GROUP",
          "_links": {
            "apps": {
              "href": "https://$yourOktaDomain/api/v1/groups/00ub0oNGTSWTBKOLGLNR/apps"
            },
            "logo": [
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-medium.png",
                "name": "medium",
                "type": "image/png"
              },
              {
                "href": "https://$yourOktaDomain/img/logos/groups/okta-large.png",
                "name": "large",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "https://$yourOktaDomain/api/v1/groups/00ub0oNGTSWTBKOLGLNR/users"
            }
          },
          "created": "2015-02-06T10:11:28.000Z",
          "profile": {
            "name": "Ameliorate Name",
            "description": "Amended description"
          },
          "lastUpdated": "2015-11-28T19:15:32.000Z",
          "objectClass": [
            "okta:user_group"
          ],
          "lastMembershipUpdated": "2015-10-18T12:25:48.000Z"
        }
      ]
  groups.updateGroupRule:
    description: |-
      Updates a Group rule
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/groups/#update-group-rule
    example:
      inputs: [
        {
          "id": "0pr3f7zMZZHPgUoWO0g4",
          "name": "Engineering group rule",
          "type": "group_rule",
          "status": "INACTIVE",
          "actions": {
            "assignUserToGroups": {
              "groupIds": [
                "00gjitX9HqABSoqTB0g3"
              ]
            }
          },
          "conditions": {
            "people": {
              "users": {
                "exclude": [
                  "00u22w79JPMEeeuLr0g4"
                ]
              },
              "groups": {
                "exclude": []
              }
            },
            "expression": {
              "type": "urn:okta:expression:1.0",
              "value": "user.role==\"Engineer\""
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0pr3f7zMZZHPgUoWO0g4",
          "name": "Engineering group rule",
          "type": "group_rule",
          "status": "INACTIVE",
          "actions": {
            "assignUserToGroups": {
              "groupIds": [
                "00gjitX9HqABSoqTB0g3"
              ]
            }
          },
          "created": "2016-12-01T14:40:04.000Z",
          "conditions": {
            "people": {
              "users": {
                "exclude": [
                  "00u22w79JPMEeeuLr0g4"
                ]
              },
              "groups": {
                "exclude": []
              }
            },
            "expression": {
              "type": "urn:okta:expression:1.0",
              "value": "user.role==\"Engineer\""
            }
          },
          "lastUpdated": "2016-12-01T14:40:04.000Z"
        }
      ]
  idps.activateIdentityProvider:
    description: |-
      Activates an inactive IdP
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#activate-identity-provider
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0oa62bfdiumsUndnZ0h7",
          "name": "Google",
          "type": "GOOGLE",
          "_links": {
            "authorize": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize?idp=0oa62bfdiumsUndnZ0h7&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state=state",
              "hints": {
                "allow": [
                  "GET"
                ]
              },
              "templated": true
            },
            "clientRedirectUri": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize/callback",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "idpuser.email"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "status": "ACTIVE",
          "created": "2016-03-24T23:21:49.000Z",
          "protocol": {
            "type": "OIDC",
            "scopes": [
              "profile",
              "email",
              "openid"
            ],
            "endpoints": {
              "token": {
                "url": "https://www.googleapis.com/oauth2/v3/token",
                "binding": "HTTP-POST"
              },
              "authorization": {
                "url": "https://accounts.google.com/o/oauth2/auth",
                "binding": "HTTP-REDIRECT"
              }
            },
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          },
          "lastUpdated": "2016-03-25T19:14:23.000Z"
        }
      ]
  idps.addAppleIdentityProvider:
    description: |-
      Adds a new Apple type IdP to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#add-apple-identity-provider
    example:
      inputs: [
        {
          "name": "Apple Identity Provider",
          "type": "APPLE",
          "policy": {
            "subject": {
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "idpuser.email"
              }
            },
            "accountLink": {
              "action": "AUTO"
            },
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "protocol": {
            "type": "OIDC",
            "scopes": [
              "openid",
              "email",
              "name"
            ],
            "credentials": {
              "client": {
                "client_id": "your-client-id"
              },
              "signing": {
                "kid": "test key id",
                "teamId": "test team id",
                "privateKey": "MIGTAgEAMBM........Cb9PnybCnzDv+3cWSGWqpAIsQQZ"
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0oa18hsHsG3boVejU0g4",
          "name": "Apple Identity Provider",
          "type": "APPLE",
          "_links": {
            "authorize": {
              "href": "http://{yourOktaDomain}/oauth2/v1/authorize?idp=0oa18hsHsG3boVejU0g4&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state=state&nonce=nonce",
              "hints": {
                "allow": [
                  "GET"
                ]
              },
              "templated": true
            },
            "clientRedirectUri": {
              "href": "http://{yourOktaDomain}/oauth2/v1/authorize/callback",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "matchAttribute": null,
              "userNameTemplate": {
                "template": "idpuser.email"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "status": "ACTIVE",
          "created": "2020-06-05T20:57:51.000Z",
          "protocol": {
            "type": "OIDC",
            "scopes": [
              "openid",
              "email",
              "name"
            ],
            "endpoints": {
              "token": {
                "url": "https://appleid.apple.com/auth/token",
                "binding": "HTTP-POST"
              },
              "authorization": {
                "url": "https://appleid.apple.com/auth/authorize",
                "binding": "HTTP-REDIRECT"
              }
            },
            "credentials": {
              "client": {
                "client_id": "your-client-id"
              },
              "signing": {
                "kid": "test key id",
                "teamId": "test team id",
                "privateKey": "MIGTAgEAMBM........Cb9PnybCnzDv+3cWSGWqpAIsQQZ"
              }
            }
          },
          "issuerMode": "ORG_URL",
          "lastUpdated": "2020-06-05T20:57:51.000Z"
        }
      ]
  idps.addFacebookIdentityProvider:
    description: |-
      Adds a new FACEBOOK type IdP to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#add-facebook-identity-provider
    example:
      inputs: [
        {
          "name": "Facebook",
          "type": "FACEBOOK",
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "userNameTemplate": {
                "type": null,
                "template": "idpuser.userPrincipalName"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "protocol": {
            "type": "OAUTH2",
            "scopes": [
              "public_profile",
              "email"
            ],
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0oa62b57p7c8PaGpU0h7",
          "name": "Facebook",
          "type": "FACEBOOK",
          "_links": {
            "authorize": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize?idp=0oa62b57p7c8PaGpU0h7&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state=state",
              "hints": {
                "allow": [
                  "GET"
                ]
              },
              "templated": true
            },
            "clientRedirectUri": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize/callback",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "idpuser.userPrincipalName"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "status": "ACTIVE",
          "created": "2016-03-24T23:18:27.000Z",
          "protocol": {
            "type": "OAUTH2",
            "scopes": [
              "public_profile",
              "email"
            ],
            "endpoints": {
              "token": {
                "url": "https://graph.facebook.com/v2.5/oauth/access_token",
                "binding": "HTTP-POST"
              },
              "authorization": {
                "url": "https://www.facebook.com/dialog/oauth",
                "binding": "HTTP-REDIRECT"
              }
            },
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          },
          "lastUpdated": "2016-03-24T23:18:27.000Z"
        }
      ]
  idps.addGenericOpenidConnectIdentityProvider:
    description: |-
      Adds a new OIDC type IdP to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#add-generic-openid-connect-identity-provider
    example:
      inputs: [
        {
          "name": "Example OpenID Connect IdP",
          "type": "OIDC",
          "policy": {
            "subject": {
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "idpuser.email"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 120000,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              }
            }
          },
          "protocol": {
            "type": "OIDC",
            "issuer": {
              "url": "https://idp.example.com"
            },
            "scopes": [
              "openid",
              "profile",
              "email"
            ],
            "endpoints": {
              "acs": {
                "type": "INSTANCE",
                "binding": "HTTP-POST"
              },
              "jwks": {
                "url": "https://idp.example.com/keys",
                "binding": "HTTP-REDIRECT"
              },
              "token": {
                "url": "https://idp.example.com/token",
                "binding": "HTTP-POST"
              },
              "userInfo": {
                "url": "https://idp.example.com/userinfo",
                "binding": "HTTP-REDIRECT"
              },
              "authorization": {
                "url": "https://idp.example.com/authorize",
                "binding": "HTTP-REDIRECT"
              }
            },
            "algorithms": {
              "request": {
                "signature": {
                  "scope": "REQUEST",
                  "algorithm": "SHA-256"
                }
              },
              "response": {
                "signature": {
                  "scope": "ANY",
                  "algorithm": "SHA-256"
                }
              }
            },
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0oaulob4BFVa4zQvt0g3",
          "name": "Example OpenID Connect IdP",
          "type": "OIDC",
          "_links": {
            "authorize": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize?idp=0oaulob4BFVa4zQvt0g3&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state=state&nonce=nonce",
              "hints": {
                "allow": [
                  "GET"
                ]
              },
              "templated": true
            },
            "clientRedirectUri": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize/callback",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "matchAttribute": null,
              "userNameTemplate": {
                "template": "idpuser.email"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": false
            }
          },
          "status": "ACTIVE",
          "created": "2019-02-07T20:07:47.000Z",
          "protocol": {
            "type": "OIDC",
            "issuer": {
              "url": "https://idp.example.com"
            },
            "scopes": [
              "openid"
            ],
            "endpoints": {
              "jwks": {
                "url": "https://idp.example.com/keys",
                "binding": "HTTP-REDIRECT"
              },
              "token": {
                "url": "https://idp.example.com/token",
                "binding": "HTTP-POST"
              },
              "userInfo": {
                "url": "https://idp.example.com/userinfo",
                "binding": "HTTP-REDIRECT"
              },
              "authorization": {
                "url": "https://idp.example.com/authorize",
                "binding": "HTTP-REDIRECT"
              }
            },
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          },
          "lastUpdated": "2019-02-07T20:07:47.000Z"
        }
      ]
  idps.addGoogleIdentityProvider:
    description: |-
      Adds a new Google type IdP to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#add-google-identity-provider
    example:
      inputs: [
        {
          "name": "Google",
          "type": "GOOGLE",
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "userNameTemplate": {
                "type": null,
                "template": "idpuser.userPrincipalName"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "protocol": {
            "type": "OAUTH2",
            "scopes": [
              "profile",
              "email",
              "openid"
            ],
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0oa62bfdiumsUndnZ0h7",
          "name": "Google",
          "type": "GOOGLE",
          "_links": {
            "authorize": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize?idp=0oa62bfdiumsUndnZ0h7&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state=state",
              "hints": {
                "allow": [
                  "GET"
                ]
              },
              "templated": true
            },
            "clientRedirectUri": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize/callback",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "idpuser.userPrincipalName"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "status": "ACTIVE",
          "created": "2016-03-24T23:21:49.000Z",
          "protocol": {
            "type": "OIDC",
            "scopes": [
              "profile",
              "email",
              "openid"
            ],
            "endpoints": {
              "token": {
                "url": "https://www.googleapis.com/oauth2/v3/token",
                "binding": "HTTP-POST"
              },
              "authorization": {
                "url": "https://accounts.google.com/o/oauth2/auth",
                "binding": "HTTP-REDIRECT"
              }
            },
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          },
          "lastUpdated": "2016-03-24T23:21:49.000Z"
        }
      ]
  idps.addIdentityProvider:
    description: |-
      Adds a new IdP to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#add-identity-provider
    example:
      inputs: [
        {
          "name": "Example OpenID Connect IdP",
          "type": "OIDC",
          "policy": {
            "subject": {
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "idpuser.email"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 120000,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              }
            }
          },
          "protocol": {
            "type": "OIDC",
            "issuer": {
              "url": "https://idp.example.com"
            },
            "scopes": [
              "openid",
              "profile",
              "email"
            ],
            "endpoints": {
              "acs": {
                "type": "INSTANCE",
                "binding": "HTTP-POST"
              },
              "jwks": {
                "url": "https://idp.example.com/keys",
                "binding": "HTTP-REDIRECT"
              },
              "token": {
                "url": "https://idp.example.com/token",
                "binding": "HTTP-POST"
              },
              "userInfo": {
                "url": "https://idp.example.com/userinfo",
                "binding": "HTTP-REDIRECT"
              },
              "authorization": {
                "url": "https://idp.example.com/authorize",
                "binding": "HTTP-REDIRECT"
              }
            },
            "algorithms": {
              "request": {
                "signature": {
                  "scope": "REQUEST",
                  "algorithm": "SHA-256"
                }
              },
              "response": {
                "signature": {
                  "scope": "ANY",
                  "algorithm": "SHA-256"
                }
              }
            },
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0oaulob4BFVa4zQvt0g3",
          "name": "Example OpenID Connect IdP",
          "type": "OIDC",
          "_links": {
            "authorize": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize?idp=0oaulob4BFVa4zQvt0g3&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state=state&nonce=nonce",
              "hints": {
                "allow": [
                  "GET"
                ]
              },
              "templated": true
            },
            "clientRedirectUri": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize/callback",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "matchAttribute": null,
              "userNameTemplate": {
                "template": "idpuser.email"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": false
            }
          },
          "status": "ACTIVE",
          "created": "2019-02-07T20:07:47.000Z",
          "protocol": {
            "type": "OIDC",
            "issuer": {
              "url": "https://idp.example.com"
            },
            "scopes": [
              "openid"
            ],
            "endpoints": {
              "jwks": {
                "url": "https://idp.example.com/keys",
                "binding": "HTTP-REDIRECT"
              },
              "token": {
                "url": "https://idp.example.com/token",
                "binding": "HTTP-POST"
              },
              "userInfo": {
                "url": "https://idp.example.com/userinfo",
                "binding": "HTTP-REDIRECT"
              },
              "authorization": {
                "url": "https://idp.example.com/authorize",
                "binding": "HTTP-REDIRECT"
              }
            },
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          },
          "lastUpdated": "2019-02-07T20:07:47.000Z"
        }
      ]
  idps.addLinkedinIdentityProvider:
    description: |-
      Adds a new LINKEDIN type IdP to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#add-linkedin-identity-provider
    example:
      inputs: [
        {
          "name": "LinkedIn",
          "type": "LINKEDIN",
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "userNameTemplate": {
                "type": null,
                "template": "idpuser.userPrincipalName"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "protocol": {
            "type": "OAUTH2",
            "scopes": [
              "r_basicprofile",
              "r_emailaddress"
            ],
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0oa62bfdjnK55Z5x80h7",
          "name": "LinkedIn",
          "type": "LINKEDIN",
          "_links": {
            "authorize": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize?idp=0oa62bfdjnK55Z5x80h7&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state=state",
              "hints": {
                "allow": [
                  "GET"
                ]
              },
              "templated": true
            },
            "clientRedirectUri": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize/callback",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "idpuser.userPrincipalName"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "status": "ACTIVE",
          "created": "2016-03-24T23:23:59.000Z",
          "protocol": {
            "type": "OAUTH2",
            "scopes": [
              "r_basicprofile",
              "r_emailaddress"
            ],
            "endpoints": {
              "token": {
                "url": "https://www.linkedin.com/uas/oauth2/accessToken",
                "binding": "HTTP-POST"
              },
              "authorization": {
                "url": "https://www.linkedin.com/uas/oauth2/authorization",
                "binding": "HTTP-REDIRECT"
              }
            },
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          },
          "lastUpdated": "2016-03-24T23:23:59.000Z"
        }
      ]
  idps.addMicrosoftIdentityProvider:
    description: |-
      Adds a new Microsoft type IdP to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#add-microsoft-identity-provider
    example:
      inputs: [
        {
          "name": "Microsoft",
          "type": "MICROSOFT",
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "userNameTemplate": {
                "type": null,
                "template": "idpuser.userPrincipalName"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "protocol": {
            "type": "OIDC",
            "scopes": [
              "openid",
              "email",
              "profile",
              "https://graph.microsoft.com/User.Read"
            ],
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0oajmvdFawBih4gey0g3",
          "name": "Microsoft",
          "type": "MICROSOFT",
          "_links": {
            "authorize": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize?idp=0oajmvdFawBih4gey0g3&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state=state",
              "hints": {
                "allow": [
                  "GET"
                ]
              },
              "templated": true
            },
            "clientRedirectUri": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize/callback",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "idpuser.userPrincipalName"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "status": "ACTIVE",
          "created": "2016-03-29T16:47:36.000Z",
          "protocol": {
            "type": "OIDC",
            "scopes": [
              "openid",
              "email",
              "profile",
              "https://graph.microsoft.com/User.Read"
            ],
            "endpoints": {
              "token": {
                "url": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
                "binding": "HTTP-POST"
              },
              "authorization": {
                "url": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
                "binding": "HTTP-REDIRECT"
              }
            },
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          },
          "lastUpdated": "2016-03-29T16:47:36.000Z"
        }
      ]
  idps.addSaml20IdentityProvider:
    description: |-
      Adds a new SAML2 type IdP to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#add-saml-2-0-identity-provider
    example:
      inputs: [
        {
          "name": "Example SAML IdP",
          "type": "SAML2",
          "policy": {
            "subject": {
              "filter": "(\\S+@example\\.com)",
              "format": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"
              ],
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "saml.subjectNameId"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "protocol": {
            "type": "SAML2",
            "endpoints": {
              "acs": {
                "type": "INSTANCE",
                "binding": "HTTP-POST"
              },
              "sso": {
                "url": "https://idp.example.com",
                "binding": "HTTP-POST",
                "destination": "https://idp.example.com"
              }
            },
            "algorithms": {
              "request": {
                "signature": {
                  "scope": "REQUEST",
                  "algorithm": "SHA-256"
                }
              },
              "response": {
                "signature": {
                  "scope": "ANY",
                  "algorithm": "SHA-256"
                }
              }
            },
            "credentials": {
              "trust": {
                "kid": "your-key-id",
                "issuer": "https://idp.example.com",
                "audience": "http://www.okta.com/123"
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0oa62bc8wppPw0UGr0h7",
          "name": "Example SAML IdP",
          "type": "SAML2",
          "_links": {
            "acs": {
              "href": "https://$yourOktaDomain/sso/saml2/0oa62bc8wppPw0UGr0h7",
              "type": "application/xml",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "users": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62bc8wppPw0UGr0h7/users",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "metadata": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62bc8wppPw0UGr0h7/metadata.xml",
              "type": "application/xml",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62bc8wppPw0UGr0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": "(\\S+@example\\.com)",
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "saml.subjectNameId"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "status": "ACTIVE",
          "created": "2016-03-24T23:14:54.000Z",
          "protocol": {
            "type": "SAML2",
            "settings": {
              "nameFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"
            },
            "endpoints": {
              "acs": {
                "type": "INSTANCE",
                "binding": "HTTP-POST"
              },
              "sso": {
                "url": "https://idp.example.com",
                "binding": "HTTP-POST",
                "destination": "https://idp.example.com"
              }
            },
            "algorithms": {
              "request": {
                "signature": {
                  "scope": "REQUEST",
                  "algorithm": "SHA-256"
                }
              },
              "response": {
                "signature": {
                  "scope": "ANY",
                  "algorithm": "SHA-256"
                }
              }
            },
            "credentials": {
              "trust": {
                "kid": "your-key-id",
                "issuer": "https://idp.example.com",
                "audience": "http://www.okta.com/123"
              }
            }
          },
          "lastUpdated": "2016-03-24T23:14:54.000Z"
        }
      ]
  idps.addSmartCardIdentityProvider:
    description: |-
      Adds a new Smart Card X509 type IdP to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#add-smart-card-identity-provider
    example:
      inputs: [
        {
          "name": "Smart Card IDP Name",
          "type": "X509",
          "policy": {
            "provisioning": {
              "action": "DISABLED"
            }
          },
          "status": "ACTIVE",
          "subject": {
            "matchType": "EMAIL",
            "matchAttribute": "",
            "userNameTemplate": {
              "template": "idpuser.subjectAltNameEmail"
            }
          },
          "features": [],
          "protocol": {
            "type": "MTLS",
            "credentials": {
              "trust": {
                "kid": "your-kid",
                "issuer": "your-issuer",
                "revocation": "CRL",
                "revocationCacheLifetime": 2880
              }
            }
          },
          "maxClockSkew": 120000
        }
      ]
      outputs: [
        {
          "id": "0oa6jxasyhwM2ZHJh0g4",
          "name": "Smart Card IDP Name",
          "type": "X509",
          "_links": {
            "keys": {
              "href": "https://$yourOktaDomain.okta.com/api/v1/idps/credentials/keys/45dec5ff-8cdc-48c0-85fe-a4869f1753dc",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "users": {
              "href": "https://$yourOktaDomain.okta.com/api/v1/idps/0oa6jxasyhwM2ZHJh0g4/users",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain.okta.com/api/v1/idps/0oa6jxasyhwM2ZHJh0g4/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "EMAIL",
              "matchAttribute": null,
              "userNameTemplate": {
                "template": "idpuser.subjectAltNameEmail"
              }
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "DISABLED",
              "groups": null,
              "profileMaster": false
            }
          },
          "status": "ACTIVE",
          "created": "2020-01-07T00:19:27.000Z",
          "protocol": {
            "type": "MTLS",
            "endpoints": {
              "sso": {
                "url": "https://$yourOktaDomain.okta.com/login/cert"
              }
            },
            "credentials": {
              "trust": {
                "kid": "45dec5ff-8cdc-48c0-85fe-a4869f1753dc",
                "issuer": "CN=Test Smart Card, OU=Test OU, O=Test O, C=US",
                "audience": null,
                "revocation": "CRL",
                "revocationCacheLifetime": 2880
              }
            }
          },
          "lastUpdated": "2020-01-07T00:19:27.000Z"
        }
      ]
  idps.addX-509CertificatePublicKey:
    description: |-
      Adds a new X.509 certificate credential to the IdP key store
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#add-x-509-certificate-public-key
    example:
      inputs: [
        {
          "x5c": [
            "MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMMB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCBjzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTfn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4wWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8sDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/DwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/IYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93sDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9"
          ]
        }
      ]
      outputs: [
        {
          "e": "65537",
          "n": "101438407598598116085679865987760095721749307901605456708912786847324207000576780508113360584555007890315805735307890113536927352312915634368993759211767770602174860126854831344273970871509573365292777620005537635317282520456901584213746937262823585533063042033441296629204165064680610660631365266976782082747",
          "kid": "your-key-id",
          "kty": "RSA",
          "use": "sig",
          "x5c": [
            "MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMMB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCBjzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTfn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4wWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8sDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/DwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/IYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93sDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9"
          ],
          "created": "2016-01-03T18:15:47.000Z",
          "x5t#S256": "wzPVobIrveR1x-PCbjsFGNV-6zn7Rm9KuOWOG4Rk6jE",
          "lastUpdated": "2016-01-03T18:15:47.000Z"
        }
      ]
  idps.cancelIdentityProviderTransaction:
    description: |-
      Cancels an IdP Transaction
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#cancel-identity-provider-transaction
    example:
      inputs: [
        {
          "x5c": [
            "MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMMB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCBjzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTfn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4wWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8sDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/DwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/IYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93sDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9"
          ]
        }
      ]
      outputs: [
        {}
      ]
  idps.cloneSigningKeyCredentialForIdp:
    description: |-
      Clones an X.509 certificate for an IdP signing Key Credential from a source IdP to target IdP
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#clone-signing-key-credential-for-idp
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "kid": "SIMcCQNY3uwXoW3y0vf6VxiBb5n9pf8L2fK8d-FIbm4",
          "kty": "RSA",
          "use": "sig",
          "x5c": [
            "MIIDqDCCApCgAwIBAgIGAVGNQFX5MA0GCSqGSIb3DQEBBQUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTAeFw0xNTEyMTAxODU1MjJaFw0xNzEyMTAxODU2MjJaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJJjrcnI6cXBiXNq9YDgfYrQe2O5qEHG4MXP8Ue0sMeefFkFEHYHnHUeZCq6WTAGqR+1LFgOl+Eq9We5V+qNlGIfkFkQ3iHGBrIALKqLCd0Et76HicDiegz7j9DtN+lo0hG/gfcw5783L5g5xeQ7zVmCQMkFwoUA0uA3bsfUSrmfORHJL+EMNQT8XIXD8NkG4g6u7ylHVRTLgXbe+W/p04m3EP6l41xl+MhIpBaPxDsyUvcKCNwkZN3aZIin1O9Y4YJuDHxrM64/VtLLp0sC05iawAmfsLunF7rdJAkWUpPn+xkviyNQ3UpvwAYuDr+jKLUdh2reRnm1PezxMIXzBVMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEARnFIjyitrCGbleFr3KeAwdOyeHiRmgeKupX5ZopgXtcseJoToUIinX5DVw2fVZPahqs0Q7/a0wcVnTRpw6946qZCwKd/PvZ1feVuVEA5Ui3+XvHuSH5xLp7NvYG1snNEvlbN3+NDUMlWj2NEbihowUBt9+UxTpQO3+N08q3aZk3hOZ+tHt+1Te7KEEL/4CM28GZ9MY7fSrS7MAgp1+ZXtn+kRlMrXnQ49qBda37brwDRqmSY9PwNMbev3r+9ZHwxr9W5wXW4Ev4C4xngA7RkVoyDbItSUho0I0M0u/LHuppclnXrw97xyO5Z883eIBvPVjfRcxsJxXJ8jx70ATDskw=="
          ],
          "created": "2015-12-10T18:56:23.000Z",
          "x5t#S256": "5GOpy9CQVtfvBmu2T8BHvpKE4OGtC3BuS046t7p9pps",
          "expiresAt": "2017-12-10T18:56:22.000Z"
        }
      ]
  idps.deactivateIdentityProvider:
    description: |-
      Deactivates an active IdP
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#deactivate-identity-provider
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0oa62bfdiumsUndnZ0h7",
          "name": "Google",
          "type": "GOOGLE",
          "_links": {
            "authorize": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize?idp=0oa62bfdiumsUndnZ0h7&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state=state",
              "hints": {
                "allow": [
                  "GET"
                ]
              },
              "templated": true
            },
            "clientRedirectUri": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize/callback",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "idpuser.userPrincipalName"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "status": "INACTIVE",
          "created": "2016-03-24T23:21:49.000Z",
          "protocol": {
            "type": "OIDC",
            "scopes": [
              "profile",
              "email",
              "openid"
            ],
            "endpoints": {
              "token": {
                "url": "https://www.googleapis.com/oauth2/v3/token",
                "binding": "HTTP-POST"
              },
              "authorization": {
                "url": "https://accounts.google.com/o/oauth2/auth",
                "binding": "HTTP-REDIRECT"
              }
            },
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          },
          "lastUpdated": "2016-03-25T19:16:53.000Z"
        }
      ]
  idps.deleteIdentityProvider:
    description: |-
      Removes an IdP from your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#delete-identity-provider
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  idps.deleteKey:
    description: |-
      Deletes a specific IdP Key Credential by kid if it isn't currently being used by an active or inactive IdP
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#delete-key
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  idps.findIdentityProvidersByName:
    description: |-
      Search currently performs a startsWith match, but it should be considered an implementation detail and may change without notice in the future. Exact matches are returned before partial matches.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#find-identity-providers-by-name
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0oa62bc8wppPw0UGr0h7",
          "name": "Example SAML IdP",
          "type": "SAML2",
          "_links": {
            "acs": {
              "href": "https://$yourOktaDomain/sso/saml2/0oa62bc8wppPw0UGr0h7",
              "type": "application/xml",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "users": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62bc8wppPw0UGr0h7/users",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "metadata": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62bc8wppPw0UGr0h7/metadata.xml",
              "type": "application/xml",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62bc8wppPw0UGr0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": "(\\S+@example\\.com)",
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "saml.subjectNameId"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "status": "ACTIVE",
          "created": "2016-03-24T23:14:54.000Z",
          "protocol": {
            "type": "SAML2",
            "settings": {
              "nameFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"
            },
            "endpoints": {
              "acs": {
                "type": "INSTANCE",
                "binding": "HTTP-POST"
              },
              "sso": {
                "url": "https://idp.example.com",
                "binding": "HTTP-POST",
                "destination": "https://idp.example.com"
              }
            },
            "algorithms": {
              "request": {
                "signature": {
                  "scope": "REQUEST",
                  "algorithm": "SHA-256"
                }
              },
              "response": {
                "signature": {
                  "scope": "ANY",
                  "algorithm": "SHA-256"
                }
              }
            },
            "credentials": {
              "trust": {
                "kid": "your-key-id",
                "issuer": "https://idp.example.com",
                "audience": "http://www.okta.com/123"
              }
            }
          },
          "lastUpdated": "2016-03-24T23:14:54.000Z"
        }
      ]
  idps.findIdentityProvidersByType:
    description: |-
      PUT /api/v1/idps/idpId
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#find-identity-providers-by-type
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0oa62bc8wppPw0UGr0h7",
          "name": "Example SAML IdP",
          "type": "SAML2",
          "_links": {
            "acs": {
              "href": "https://$yourOktaDomain/sso/saml2/0oa62bc8wppPw0UGr0h7",
              "type": "application/xml",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "users": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62bc8wppPw0UGr0h7/users",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "metadata": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62bc8wppPw0UGr0h7/metadata.xml",
              "type": "application/xml",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62bc8wppPw0UGr0h7/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": "(\\S+@example\\.com)",
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "saml.subjectNameId"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "status": "ACTIVE",
          "created": "2016-03-24T23:14:54.000Z",
          "protocol": {
            "type": "SAML2",
            "settings": {
              "nameFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"
            },
            "endpoints": {
              "acs": {
                "type": "INSTANCE",
                "binding": "HTTP-POST"
              },
              "sso": {
                "url": "https://idp.example.com",
                "binding": "HTTP-POST",
                "destination": "https://idp.example.com"
              }
            },
            "algorithms": {
              "request": {
                "signature": {
                  "scope": "REQUEST",
                  "algorithm": "SHA-256"
                }
              },
              "response": {
                "signature": {
                  "scope": "ANY",
                  "algorithm": "SHA-256"
                }
              }
            },
            "credentials": {
              "trust": {
                "kid": "your-key-id",
                "issuer": "https://idp.example.com",
                "audience": "http://www.okta.com/123"
              }
            }
          },
          "lastUpdated": "2016-03-24T23:14:54.000Z"
        }
      ]
  idps.findUsers:
    description: |-
      Finds all the Users linked to an Identity Provider
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#find-users
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00u5cl9lo7nMjHjPr0h7",
          "_links": {
            "idp": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa4lb6lbtmH355Hx0h7"
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa4lb6lbtmH355Hx0h7/users/00u5cl9lo7nMjHjPr0h7",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5cl9lo7nMjHjPr0h7"
            }
          },
          "created": "2015-11-03T19:10:11.000Z",
          "profile": {
            "email": "carol_johnson@tfbnw.net",
            "profile": "https://www.facebook.com/app_scoped_user_id/109912936038778/",
            "lastName": "Johnson",
            "firstName": "Carol",
            "middleName": "Lee",
            "displayName": "Carol Johnson"
          },
          "externalId": "109912936038778",
          "lastUpdated": "2015-11-03T19:11:49.000Z"
        }
      ]
  idps.finishIdentityProviderTransaction:
    description: |-
      Finishes an IdP Transaction. No actions are completed when using callout until the /finish request completes.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#finish-identity-provider-transaction
    example:
      inputs: [
        {
          "x5c": [
            "MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMMB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCBjzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTfn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4wWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8sDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/DwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/IYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93sDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9"
          ]
        }
      ]
      outputs: [
        {}
      ]
  idps.generateNewIdpSigningKeyCredential:
    description: |-
      Generates a new X.509 certificate for an IdP signing Key Credential to be used for signing assertions sent to the IdP
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#generate-new-idp-signing-key-credential
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "kid": "akm5hvbbevE341ovl0h7",
          "kty": "RSA",
          "use": "sig",
          "x5c": [
            "MIIDqDCCApCgAwIBAgIGAVGNQFX5MA0GCSqGSIb3DQEBBQUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTAeFw0xNTEyMTAxODU1MjJaFw0xNzEyMTAxODU2MjJaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJJjrcnI6cXBiXNq9YDgfYrQe2O5qEHG4MXP8Ue0sMeefFkFEHYHnHUeZCq6WTAGqR+1LFgOl+Eq9We5V+qNlGIfkFkQ3iHGBrIALKqLCd0Et76HicDiegz7j9DtN+lo0hG/gfcw5783L5g5xeQ7zVmCQMkFwoUA0uA3bsfUSrmfORHJL+EMNQT8XIXD8NkG4g6u7ylHVRTLgXbe+W/p04m3EP6l41xl+MhIpBaPxDsyUvcKCNwkZN3aZIin1O9Y4YJuDHxrM64/VtLLp0sC05iawAmfsLunF7rdJAkWUpPn+xkviyNQ3UpvwAYuDr+jKLUdh2reRnm1PezxMIXzBVMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEARnFIjyitrCGbleFr3KeAwdOyeHiRmgeKupX5ZopgXtcseJoToUIinX5DVw2fVZPahqs0Q7/a0wcVnTRpw6946qZCwKd/PvZ1feVuVEA5Ui3+XvHuSH5xLp7NvYG1snNEvlbN3+NDUMlWj2NEbihowUBt9+UxTpQO3+N08q3aZk3hOZ+tHt+1Te7KEEL/4CM28GZ9MY7fSrS7MAgp1+ZXtn+kRlMrXnQ49qBda37brwDRqmSY9PwNMbev3r+9ZHwxr9W5wXW4Ev4C4xngA7RkVoyDbItSUho0I0M0u/LHuppclnXrw97xyO5Z883eIBvPVjfRcxsJxXJ8jx70ATDskw=="
          ],
          "created": "2015-12-10T18:56:23.000Z",
          "x5t#S256": "5GOpy9CQVtfvBmu2T8BHvpKE4OGtC3BuS046t7p9pps",
          "expiresAt": "2017-12-10T18:56:22.000Z"
        }
      ]
  idps.generateSigningCsrForIdp:
    description: |-
      Generates a new key pair and returns a Certificate Signing Request for it.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#generate-signing-csr-for-idp
    example:
      inputs: [
        {
          "subject": {
            "commonName": "SP Issuer",
            "countryName": "US",
            "localityName": "San Francisco",
            "organizationName": "Okta, Inc.",
            "stateOrProvinceName": "California",
            "organizationalUnitName": "Dev"
          },
          "subjectAltNames": {
            "dnsNames": [
              "dev.okta.com"
            ]
          }
        }
      ]
      outputs: [
        {}
      ]
  idps.getLinkedIdentityProviderUser:
    description: |-
      Fetches a linked IdP User by ID
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#get-a-linked-identity-provider-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00u5t60iloOHN9pBi0h7",
          "_links": {
            "idp": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62bfdiumsUndnZ0h7"
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62bfdiumsUndnZ0h7/users/00u5t60iloOHN9pBi0h7",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5t60iloOHN9pBi0h7"
            }
          },
          "created": "2017-12-19T17:30:16.000Z",
          "profile": {
            "email": null,
            "lastName": null,
            "firstName": null,
            "middleName": null,
            "profileUrl": null,
            "displayName": null,
            "honorificPrefix": null,
            "honorificSuffix": null
          },
          "externalId": "externalId",
          "lastUpdated": "2017-12-19T17:30:16.000Z"
        }
      ]
  idps.getIdentityProvider:
    description: |-
      Fetches an IdP by id
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#get-identity-provider
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0oa62bfdjnK55Z5x80h7",
          "name": "LinkedIn",
          "type": "LINKEDIN",
          "_links": {
            "authorize": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize?idp=0oa62bfdjnK55Z5x80h7&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state=state",
              "hints": {
                "allow": [
                  "GET"
                ]
              },
              "templated": true
            },
            "clientRedirectUri": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize/callback",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "idpuser.userPrincipalName"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "status": "ACTIVE",
          "created": "2016-03-24T23:23:59.000Z",
          "protocol": {
            "type": "OAUTH2",
            "scopes": [
              "r_basicprofile",
              "r_emailaddress"
            ],
            "endpoints": {
              "token": {
                "url": "https://www.linkedin.com/uas/oauth2/accessToken",
                "binding": "HTTP-POST"
              },
              "authorization": {
                "url": "https://www.linkedin.com/uas/oauth2/authorization",
                "binding": "HTTP-REDIRECT"
              }
            },
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          },
          "lastUpdated": "2016-03-24T23:23:59.000Z"
        }
      ]
  idps.getIdentityProviderTransaction:
    description: |-
      Fetches an IdP Transaction by id.You must use a CALLOUT action for user provisioning or account linking to obtain an IdP Transaction id.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#get-identity-provider-transaction
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "satvklBYyJmwa6qOg0g3",
          "idp": {
            "id": "0oabmluDNh2JZi8lt0g4",
            "name": "Facebook",
            "type": "FACEBOOK"
          },
          "_links": {
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/idps/tx/satvklBYyJmwa6qOg0g3/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "source": {
              "href": "https://$yourOktaDomain/api/v1/idps/tx/satvklBYyJmwa6qOg0g3/source"
            },
            "target": {
              "href": "https://$yourOktaDomain/api/v1/idps/tx/satvklBYyJmwa6qOg0g3/target"
            },
            "provision": {
              "href": "https://$yourOktaDomain/api/v1/idps/tx/satvklBYyJmwa6qOg0g3/lifecycle/provision",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACCOUNT_JIT",
          "context": {
            "ipAddress": "127.0.0.1",
            "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko)Chrome/47.0.2526.106 Safari/537.36"
          },
          "created": "2016-01-03T23:44:38.000Z",
          "expiresAt": "2016-01-03T23:52:58.000Z"
        }
      ]
  idps.getKey:
    description: |-
      Gets a specific IdP Key Credential by kid
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#get-key
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "e": "65537",
          "n": "101438407598598116085679865987760095721749307901605456708912786847324207000576780508113360584555007890315805735307890113536927352312915634368993759211767770602174860126854831344273970871509573365292777620005537635317282520456901584213746937262823585533063042033441296629204165064680610660631365266976782082747",
          "kid": "your-key-id",
          "kty": "RSA",
          "use": "sig",
          "x5c": [
            "MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMMB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCBjzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTfn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4wWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8sDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/DwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/IYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93sDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9"
          ],
          "created": "2016-01-03T18:15:47.000Z",
          "x5t#S256": "wzPVobIrveR1x-PCbjsFGNV-6zn7Rm9KuOWOG4Rk6jE",
          "lastUpdated": "2016-01-03T18:15:47.000Z"
        }
      ]
  idps.getSigningCsrForIdp:
    description: |-
      Gets a specific CSR object by id
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#get-signing-csr-for-idp
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50",
          "csr": "MIIC4DCCAcgCAQAwcTELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xEzARBgNVBAoMCk9rdGEsIEluYy4xDDAKBgNVBAsMA0RldjESMBAGA1UEAwwJU1AgSXNzdWVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6m8jHVCr9/tKvvbFN59T4raoCs/78KRm4fSefHQOv1TKLXo4wTLbsqYWRWc5u0sd5orUMQgPQOyj3i6qh13mALY4BzrT057EG1BUNjGg29QgYlnOk2iX890e5BIDMQQEIKFrvOi2V8cLUkLvE2ydRn0VO1Q1frbUkYeStJYC5Api2JQsYRwa+1ZeDH1ITnIzUaugWhW2WB2lSnwZkenne5KtffxMPYVu+IhNRHoKaRA6Z51YNhMJIx17JM2hs/H4Ka3drk6kzDf7ofk/yBpb9yBWyU7CTSQhdoHidxqFprMDaT66W928t3AeOENHBuwn8c2K9WeGG+bELNyQRJVmawIDAQABoCowKAYJKoZIhvcNAQkOMRswGTAXBgNVHREEEDAOggxkZXYub2t0YS5jb20wDQYJKoZIhvcNAQELBQADggEBAA2hsVJRVM+A83X9MekjTnIbt19UNT8wX7wlE9jUKirWsxceLiZBpVGn9qfKhhVIpvdaIRSeoFYS2Kg/m1G6bCvjmZLcrQ5FcEBjZH2NKfNppGVnfC2ugtUkBtCB+UUzOhKhRKJtGugenKbP33zRWWIqnd2waF6Cy8TIuqQVPbwEDN9bCbAs7ND6CFYNguY7KYjWzQOeAR716eqpEEXuPYAS4nx/ty4ylonR8cv+gpq51rvq80A4k/36aoeM0Y6I4w64vhTfuvWW2UYFUD+/+y2FA2CSP4JfctySrf1s525v6fzTFZ3qZbB5OZQtP2b8xYWktMzywsxGKDoVDB4wkH4=",
          "kty": "RSA",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oad5lTSBOMUBOBVVQSC/credentials/csrs/h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "publish": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oad5lTSBOMUBOBVVQSC/credentials/csrs/h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50/lifecycle/publish",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "created": "2017-03-28T01:11:10.000Z"
        }
      ]
  idps.getSigningKeyCredentialForIdp:
    description: |-
      Gets a specific IdP Key Credential by kid
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#get-signing-key-credential-for-idp
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "kid": "akm5hvbbevE341ovl0h7",
          "kty": "RSA",
          "use": "sig",
          "x5c": [
            "MIIDqDCCApCgAwIBAgIGAVGNQFX5MA0GCSqGSIb3DQEBBQUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTAeFw0xNTEyMTAxODU1MjJaFw0xNzEyMTAxODU2MjJaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJJjrcnI6cXBiXNq9YDgfYrQe2O5qEHG4MXP8Ue0sMeefFkFEHYHnHUeZCq6WTAGqR+1LFgOl+Eq9We5V+qNlGIfkFkQ3iHGBrIALKqLCd0Et76HicDiegz7j9DtN+lo0hG/gfcw5783L5g5xeQ7zVmCQMkFwoUA0uA3bsfUSrmfORHJL+EMNQT8XIXD8NkG4g6u7ylHVRTLgXbe+W/p04m3EP6l41xl+MhIpBaPxDsyUvcKCNwkZN3aZIin1O9Y4YJuDHxrM64/VtLLp0sC05iawAmfsLunF7rdJAkWUpPn+xkviyNQ3UpvwAYuDr+jKLUdh2reRnm1PezxMIXzBVMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEARnFIjyitrCGbleFr3KeAwdOyeHiRmgeKupX5ZopgXtcseJoToUIinX5DVw2fVZPahqs0Q7/a0wcVnTRpw6946qZCwKd/PvZ1feVuVEA5Ui3+XvHuSH5xLp7NvYG1snNEvlbN3+NDUMlWj2NEbihowUBt9+UxTpQO3+N08q3aZk3hOZ+tHt+1Te7KEEL/4CM28GZ9MY7fSrS7MAgp1+ZXtn+kRlMrXnQ49qBda37brwDRqmSY9PwNMbev3r+9ZHwxr9W5wXW4Ev4C4xngA7RkVoyDbItSUho0I0M0u/LHuppclnXrw97xyO5Z883eIBvPVjfRcxsJxXJ8jx70ATDskw=="
          ],
          "created": "2015-12-10T18:56:23.000Z",
          "x5t#S256": "5GOpy9CQVtfvBmu2T8BHvpKE4OGtC3BuS046t7p9pps",
          "expiresAt": "2017-12-10T18:56:22.000Z"
        }
      ]
  idps.getSourceIdpUserForIdpTransaction:
    description: |-
      Fetches the source IdP User for a Transaction
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#get-source-idp-user-for-idp-transaction
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "idp": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oabmluDNh2JZi8lt0g4"
            }
          },
          "profile": {
            "email": "mark_drvbrjr_zuckersky@tfbnw.net",
            "profile": "https://www.facebook.com/app_scoped_user_id/1437424479920471/",
            "lastName": "Zuckersky",
            "firstName": "Mark",
            "middleName": null,
            "displayName": "Mark Zuckersky"
          },
          "externalId": "1437424479920471"
        }
      ]
  idps.getTargetUserForIdpProvisionTransaction:
    description: |-
      Fetches the target transformed Okta User Profile for a Just-In-Time (JIT) provisioning Transaction
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#get-target-user-for-idp-provision-transaction
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "profile": {
            "city": null,
            "email": "mark_drvbrjr_zuckersky@tfbnw.net",
            "login": "mark_drvbrjr_zuckersky@tfbnw.net",
            "state": null,
            "typeId": null,
            "zipCode": null,
            "lastName": "Zuckersky",
            "firstName": "Mark",
            "middleName": null,
            "profileUrl": "https://www.facebook.com/app_scoped_user_id/1437424479920471/",
            "countryCode": null,
            "displayName": "Mark Zuckersky",
            "mobilePhone": null,
            "postAddress": null,
            "secondEmail": null,
            "primaryPhone": null,
            "streetAddress": null
          }
        }
      ]
  idps.linkUserToASocialProviderWithoutATransaction:
    description: |-
      Links an Okta User to an existing SAML or social provider. The SAML Identity Provider must have honorPersistentNameId set to true to use this API. The Name Identifier Format of the incoming assertion must be urn:oasis:names:tc:SAML:2.0:nameid-format:persistent.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#link-a-user-to-a-social-provider-without-a-transaction
    example:
      inputs: [
        {
          "externalId": "121749775026145"
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "idp": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62b57p7c8PaGpU0h7"
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62b57p7c8PaGpU0h7/users/00ub0oNGTSWTBKOLGLNR",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            }
          },
          "created": "2017-03-30T02:19:51.000Z",
          "externalId": "121749775026145",
          "lastUpdated": "2017-03-30T02:19:51.000Z"
        }
      ]
  idps.linkIdpUser:
    description: |-
      Links an IdP User to an existing Okta User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#link-idp-user
    example:
      inputs: [
        {
          "profile": {
            "userType": "Social"
          }
        }
      ]
      outputs: [
        {
          "id": "satvkokI9JsOxqsjz0g3",
          "idp": {
            "id": "0oabmluDNh2JZi8lt0g4",
            "name": "Facebook",
            "type": "FACEBOOK"
          },
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/idps/tx/satvkokI9JsOxqsjz0g3/finish",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/idps/tx/satvkokI9JsOxqsjz0g3/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "SUCCESS",
          "context": {
            "ipAddress": "127.0.0.1",
            "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko)Chrome/47.0.2526.106 Safari/537.36"
          },
          "created": "2016-01-04T02:44:53.000Z",
          "expiresAt": "2016-01-04T02:53:13.000Z",
          "sessionToken": "20111FLDl04JoQdl-NJOB9A6HosTSuHtQQUmCBhdEvnE4XEInod0Sg_"
        }
      ]
  idps.listIdentityProvidersWithDefaults:
    description: |-
      Searches for IdPs by name in your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#list-identity-providers-with-defaults
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0oa62b57p7c8PaGpU0h7",
          "name": "Facebook",
          "type": "FACEBOOK",
          "_links": {
            "authorize": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize?idp=0oa62b57p7c8PaGpU0h7",
              "hints": {
                "allow": [
                  "GET"
                ]
              },
              "templated": true
            },
            "clientRedirectUri": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize/callback",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "idpuser.userPrincipalName"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "status": "ACTIVE",
          "created": "2016-03-24T23:18:27.000Z",
          "protocol": {
            "type": "OAUTH2",
            "scopes": [
              "public_profile",
              "email"
            ],
            "endpoints": {
              "token": {
                "url": "https://graph.facebook.com/v2.5/oauth/access_token",
                "binding": "HTTP-POST"
              },
              "authorization": {
                "url": "https://www.facebook.com/dialog/oauth",
                "binding": "HTTP-REDIRECT"
              }
            },
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          },
          "lastUpdated": "2016-03-24T23:18:27.000Z"
        }
      ]
  idps.listIdpsAssociatedWithUser:
    description: |-
      Lists the IdPs associated with the User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#list-idps-associated-with-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0oa62b57p7c8PaGpU0h7",
          "name": "Facebook",
          "type": "FACEBOOK",
          "_links": {
            "idpUser": {
              "href": "https://$yourOktaDomain/idps/0oa62b57p7c8PaGpU0h7/users/00ub0oNGTSWTBKOLGLNR",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "authorize": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize?idp=0oa62b57p7c8PaGpU0h7&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state=state",
              "hints": {
                "allow": [
                  "GET"
                ]
              },
              "templated": true
            },
            "clientRedirectUri": {
              "href": "https://$yourOktaDomain/oauth2/v1/authorize/callback",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "idpuser.userPrincipalName"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 0,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "status": "ACTIVE",
          "created": "2016-03-24T23:18:27.000Z",
          "protocol": {
            "type": "OAUTH2",
            "scopes": [
              "public_profile",
              "email"
            ],
            "endpoints": {
              "token": {
                "url": "https://graph.facebook.com/v2.5/oauth/access_token",
                "binding": "HTTP-POST"
              },
              "authorization": {
                "url": "https://www.facebook.com/dialog/oauth",
                "binding": "HTTP-REDIRECT"
              }
            },
            "credentials": {
              "client": {
                "client_id": "your-client-id",
                "client_secret": "your-client-secret"
              }
            }
          },
          "lastUpdated": "2016-03-24T23:18:27.000Z"
        }
      ]
  idps.listKeys:
    description: |-
      Enumerates IdP Key Credentials
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#list-keys
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "e": "65537",
          "n": "101438407598598116085679865987760095721749307901605456708912786847324207000576780508113360584555007890315805735307890113536927352312915634368993759211767770602174860126854831344273970871509573365292777620005537635317282520456901584213746937262823585533063042033441296629204165064680610660631365266976782082747",
          "kid": "your-key-id",
          "kty": "RSA",
          "use": "sig",
          "x5c": [
            "MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMMB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCBjzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTfn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4wWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8sDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/DwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/IYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93sDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9"
          ],
          "created": "2016-01-03T18:15:47.000Z",
          "x5t#S256": "wzPVobIrveR1x-PCbjsFGNV-6zn7Rm9KuOWOG4Rk6jE",
          "lastUpdated": "2016-01-03T18:15:47.000Z"
        }
      ]
  idps.listSigningCsrsForIdp:
    description: |-
      Enumerates signing CSRs for an IdP
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#list-signing-csrs-for-idp
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50",
          "csr": "MIIC4DCCAcgCAQAwcTELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xEzARBgNVBAoMCk9rdGEsIEluYy4xDDAKBgNVBAsMA0RldjESMBAGA1UEAwwJU1AgSXNzdWVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6m8jHVCr9/tKvvbFN59T4raoCs/78KRm4fSefHQOv1TKLXo4wTLbsqYWRWc5u0sd5orUMQgPQOyj3i6qh13mALY4BzrT057EG1BUNjGg29QgYlnOk2iX890e5BIDMQQEIKFrvOi2V8cLUkLvE2ydRn0VO1Q1frbUkYeStJYC5Api2JQsYRwa+1ZeDH1ITnIzUaugWhW2WB2lSnwZkenne5KtffxMPYVu+IhNRHoKaRA6Z51YNhMJIx17JM2hs/H4Ka3drk6kzDf7ofk/yBpb9yBWyU7CTSQhdoHidxqFprMDaT66W928t3AeOENHBuwn8c2K9WeGG+bELNyQRJVmawIDAQABoCowKAYJKoZIhvcNAQkOMRswGTAXBgNVHREEEDAOggxkZXYub2t0YS5jb20wDQYJKoZIhvcNAQELBQADggEBAA2hsVJRVM+A83X9MekjTnIbt19UNT8wX7wlE9jUKirWsxceLiZBpVGn9qfKhhVIpvdaIRSeoFYS2Kg/m1G6bCvjmZLcrQ5FcEBjZH2NKfNppGVnfC2ugtUkBtCB+UUzOhKhRKJtGugenKbP33zRWWIqnd2waF6Cy8TIuqQVPbwEDN9bCbAs7ND6CFYNguY7KYjWzQOeAR716eqpEEXuPYAS4nx/ty4ylonR8cv+gpq51rvq80A4k/36aoeM0Y6I4w64vhTfuvWW2UYFUD+/+y2FA2CSP4JfctySrf1s525v6fzTFZ3qZbB5OZQtP2b8xYWktMzywsxGKDoVDB4wkH4=",
          "kty": "RSA",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oad5lTSBOMUBOBVVQSC/credentials/csrs/h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "publish": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oad5lTSBOMUBOBVVQSC/credentials/csrs/h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50/lifecycle/publish",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "created": "2017-03-28T01:11:10.000Z"
        }
      ]
  idps.listSigningKeyCredentialsForIdp:
    description: |-
      Enumerates signing Key Credentials for an IdP
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#list-signing-key-credentials-for-idp
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "kid": "akm5hvbbevE341ovl0h7",
          "kty": "RSA",
          "use": "sig",
          "x5c": [
            "MIIDqDCCApCgAwIBAgIGAVGNQFX5MA0GCSqGSIb3DQEBBQUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTAeFw0xNTEyMTAxODU1MjJaFw0xNzEyMTAxODU2MjJaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJJjrcnI6cXBiXNq9YDgfYrQe2O5qEHG4MXP8Ue0sMeefFkFEHYHnHUeZCq6WTAGqR+1LFgOl+Eq9We5V+qNlGIfkFkQ3iHGBrIALKqLCd0Et76HicDiegz7j9DtN+lo0hG/gfcw5783L5g5xeQ7zVmCQMkFwoUA0uA3bsfUSrmfORHJL+EMNQT8XIXD8NkG4g6u7ylHVRTLgXbe+W/p04m3EP6l41xl+MhIpBaPxDsyUvcKCNwkZN3aZIin1O9Y4YJuDHxrM64/VtLLp0sC05iawAmfsLunF7rdJAkWUpPn+xkviyNQ3UpvwAYuDr+jKLUdh2reRnm1PezxMIXzBVMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEARnFIjyitrCGbleFr3KeAwdOyeHiRmgeKupX5ZopgXtcseJoToUIinX5DVw2fVZPahqs0Q7/a0wcVnTRpw6946qZCwKd/PvZ1feVuVEA5Ui3+XvHuSH5xLp7NvYG1snNEvlbN3+NDUMlWj2NEbihowUBt9+UxTpQO3+N08q3aZk3hOZ+tHt+1Te7KEEL/4CM28GZ9MY7fSrS7MAgp1+ZXtn+kRlMrXnQ49qBda37brwDRqmSY9PwNMbev3r+9ZHwxr9W5wXW4Ev4C4xngA7RkVoyDbItSUho0I0M0u/LHuppclnXrw97xyO5Z883eIBvPVjfRcxsJxXJ8jx70ATDskw=="
          ],
          "created": "2015-12-10T18:56:23.000Z",
          "x5t#S256": "5GOpy9CQVtfvBmu2T8BHvpKE4OGtC3BuS046t7p9pps",
          "expiresAt": "2017-12-10T18:56:22.000Z"
        }
      ]
  idps.listUsersForIdpLinkTransaction:
    description: |-
      Enumerates the candidate Okta Users for an account link Transaction.Link candidates are determined by the IdP's account link policy and subject policy.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#list-users-for-idp-link-transaction
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00uc8wfZSNWKlFGZa0g4",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00uc8wfZSNWKlFGZa0g4"
            },
            "confirm": {
              "href": "https://$yourOktaDomain/api/v1/idps/tx/satvkokI9JsOxqsjz0g3/lifecycle/confirm/00uc8wfZSNWKlFGZa0g4",
              "method": "POST"
            },
            "suspend": {
              "href": "https://$yourOktaDomain/api/v1/users/00uc8wfZSNWKlFGZa0g4/lifecycle/suspend",
              "method": "POST"
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/users/00uc8wfZSNWKlFGZa0g4/lifecycle/deactivate",
              "method": "POST"
            },
            "resetPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00uc8wfZSNWKlFGZa0g4/lifecycle/reset_password",
              "method": "POST"
            },
            "changeRecoveryQuestion": {
              "href": "https://$yourOktaDomain/api/v1/users/00uc8wfZSNWKlFGZa0g4/credentials/change_recovery_question",
              "method": "POST"
            }
          },
          "status": "ACTIVE",
          "created": "2016-01-03T23:55:34.000Z",
          "profile": {
            "email": "mark_drvbrjr_zuckersky@tfbnw.net",
            "login": "mark_drvbrjr_zuckersky@tfbnw.net",
            "lastName": "Zuckersky",
            "firstName": "Mark",
            "profileUrl": "https://www.facebook.com/app_scoped_user_id/1437424479920471/",
            "displayName": "Mark Zuckersky",
            "mobilePhone": null,
            "secondEmail": null
          },
          "activated": "2016-01-03T23:55:38.000Z",
          "lastLogin": null,
          "credentials": {
            "provider": {
              "name": "SOCIAL",
              "type": "SOCIAL"
            }
          },
          "lastUpdated": "2016-01-03T23:55:38.000Z",
          "statusChanged": "2016-01-03T23:55:38.000Z",
          "passwordChanged": null
        }
      ]
  idps.provisionIdpUser:
    description: |-
      Provisions an IdP User as a new Okta User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#provision-idp-user
    example:
      inputs: [
        {
          "profile": {
            "userType": "Social"
          }
        }
      ]
      outputs: [
        {
          "id": "satvkokI9JsOxqsjz0g3",
          "idp": {
            "id": "0oabmluDNh2JZi8lt0g4",
            "name": "Facebook",
            "type": "FACEBOOK"
          },
          "_links": {
            "next": {
              "href": "https://$yourOktaDomain/api/v1/idps/tx/satvkokI9JsOxqsjz0g3/finish",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "cancel": {
              "href": "https://$yourOktaDomain/api/v1/idps/tx/satvkokI9JsOxqsjz0g3/cancel",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "SUCCESS",
          "context": {
            "ipAddress": "127.0.0.1",
            "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko)Chrome/47.0.2526.106 Safari/537.36"
          },
          "created": "2016-01-04T02:32:23.000Z",
          "expiresAt": "2016-01-04T02:40:43.000Z",
          "sessionToken": "20111ItcRRtx_HOKguQRqx6YIeFL3L6cQhpqSCvLOD-fpj-3K53aqXN"
        }
      ]
  idps.publishSigningCsrForIdp:
    description: |-
      Updates the CSR with a signed X.509 certificate and adds it into the signing Key Credentials for the IdP.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#publish-signing-csr-for-idp
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "e": "AQAB",
          "n": "mkC6yAJVvFwUlmM9gKjb2d-YK5qHFt-mXSsbjWKKs4EfNm-BoQeeovBZtSACyaqLc8IYFTPEURFcbDQ9DkAL04uUIRD2gaHYY7uK0jsluEaXGq2RAIsmzAwNTzkiDw4q9pDL_q7n0f_SDt1TsMaMQayB6bU5jWsmqcWJ8MCRJ1aJMjZ16un5UVx51IIeCbe4QRDxEXGAvYNczsBoZxspDt28esSpq5W0dBFxcyGVudyl54Er3FzAguhgfMVjH-bUec9j2Tl40qDTktrYgYfxz9pfjm01Hl4WYP1YQxeETpSL7cQ5Ihz4jGDtHUEOcZ4GfJrPzrGpUrak8Qp5xcwCqQ",
          "kid": "ZC5C-1gEUwVxiYI8xdmYYDI3Noc4zI24fLNxBpZVR04",
          "kty": "RSA",
          "use": "sig",
          "x5c": [
            "MIIFgjCCA2qgAwIBAgICEAcwDQYJKoZIhvcNAQELBQAwXjELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMQ0wCwYDVQQKDARPa3RhMQwwCgYDVQQLDANFbmcxDTALBgNVBAMMBFJvb3QwHhcNMTcwMzI3MjEyMDQ3WhcNMTgwNDA2MjEyMDQ3WjB4MQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzETMBEGA1UECgwKT2t0YSwgSW5jLjEQMA4GA1UECwwHSmFua3lDbzEVMBMGA1UEAwwMSWRQIElzc3VlciA3MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmkC6yAJVvFwUlmM9gKjb2d+YK5qHFt+mXSsbjWKKs4EfNm+BoQeeovBZtSACyaqLc8IYFTPEURFcbDQ9DkAL04uUIRD2gaHYY7uK0jsluEaXGq2RAIsmzAwNTzkiDw4q9pDL/q7n0f/SDt1TsMaMQayB6bU5jWsmqcWJ8MCRJ1aJMjZ16un5UVx51IIeCbe4QRDxEXGAvYNczsBoZxspDt28esSpq5W0dBFxcyGVudyl54Er3FzAguhgfMVjH+bUec9j2Tl40qDTktrYgYfxz9pfjm01Hl4WYP1YQxeETpSL7cQ5Ihz4jGDtHUEOcZ4GfJrPzrGpUrak8Qp5xcwCqQIDAQABo4IBLjCCASowCQYDVR0TBAIwADARBglghkgBhvhCAQEEBAMCBkAwMwYJYIZIAYb4QgENBCYWJE9wZW5TU0wgR2VuZXJhdGVkIFNlcnZlciBDZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQUVqJukDmyENw/2pTApbxc/HRKbngwgZAGA1UdIwSBiDCBhYAUFx245ZZXqWTTbARfMlFWN77L9EahYqRgMF4xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEMMAoGA1UECwwDRW5nMQ0wCwYDVQQDDARSb290ggkAlIfpwZjO5o8wDgYDVR0PAQH/BAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMA0GCSqGSIb3DQEBCwUAA4ICAQCcoBSRtY+9cJY00hLvq6AloYZcdn/kUQupfmyz4n3lKE3wV2FB0swKnK0QDi8iNuQJFdag/19vDHC4/LhoSuv1Q+KXM61pPZVRXXPyC1+e7Y6hj93tEI5HcqLPcDRH1AIG2l8tE7LBn+MQB5Vh6oxjG2IdoWxg6abMfISU+MauPWql4vMDUWo9iNShAo44Z5fd+nuz+hlAinU9Xn9Jf2QsfKvcbMRq7iuqgkabgdmObmWb9KK0Vm7TDkxCH0pB0onPr6epVUP8Obg/pT1Oj/1hOLbfR8CHHWdAWzUBGGvp2TIy2A8LUaEoFnwkxZfdL7Bnd0RH/ClBtAjzLOxmUo7NbZmEnYCcD5pZz7BdZI0db/eBXFqfOlA88rEe+9Sv+NndIq0/WNIIsJi2RgjJnxsxvB5MjhhzmItpFIUl5yqoO3C9jcCp6HDBJxtCGbvAr5ALPn5RCJeBIr67WpAiTd7L3Ebu9SQZlXnoHX8kP04EA6ylR3W0EFbh7KUtq8M2H2vo0wjMj7ysl/3tT7cEZ97s1ygO5iJx3GfMDyrDhtLXSBJ20uSxTJeptRw8SDiwTqunIh1WyKlcQz1WGauSbW4eXdj/r9KYMJ3qMMkdP/9THQUtTcOYx51r8RV9pdzqF2HPnZZNziBa+wXJZHEWp70NyoakNthgYwtypqiDHs2f3Q=="
          ],
          "created": "2017-03-27T21:19:57.000Z",
          "x5t#S256": "lt0HQ-Ty_f_5icHGjUTrrNSO6dofPTRoPzOZhNSg5Kc",
          "expiresAt": "2018-04-06T21:20:47.000Z",
          "lastUpdated": "2017-03-27T21:19:57.000Z"
        }
      ]
  idps.revokeSigningCsrFromIdp:
    description: |-
      Revokes a CSR and deletes the key pair from the IdP
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#revoke-signing-csr-from-idp
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  idps.socialAuthenticationTokenOperation:
    description: |-
      Okta doesn't import all the User information from a social provider. If the app needs information that isn't imported, it can get the User token from this endpoint, and then make an API call to the social provider with the token to request the additional information.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#social-authentication-token-operation
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "dsasdfe",
          "token": "JBTWGV22G4ZGKV3N",
          "scopes": [
            "openid",
            "foo"
          ],
          "expiresAt": "2014-08-06T16:56:31.000Z",
          "tokenType": "urn:ietf:params:oauth:token-type:access_token",
          "tokenAuthScheme": "Bearer"
        }
      ]
  idps.unlinkUserFromIdp:
    description: |-
      Removes the link between the Okta User and the IdP User. The next time the User federates into Okta through this IdP, they have to re-link their account according to the account link policy configured in Okta for this IdP.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#unlink-user-from-idp
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  idps.updateIdentityProvider:
    description: |-
      Updates the configuration for an IdP
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/idps/#update-identity-provider
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0oa62bc8wppPw0UGr0h7",
          "name": "Example SAML IdP",
          "type": "SAML2",
          "_links": {
            "acs": {
              "href": "https://$yourOktaDomain/sso/saml2/0oa62bc8wppPw0UGr0h7",
              "type": "application/xml",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "users": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62bc8wppPw0UGr0h7/users",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62bc8wppPw0UGr0h7/lifecycle/activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "metadata": {
              "href": "https://$yourOktaDomain/api/v1/idps/0oa62bc8wppPw0UGr0h7/metadata.xml",
              "type": "application/xml",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            }
          },
          "policy": {
            "subject": {
              "filter": null,
              "matchType": "USERNAME",
              "userNameTemplate": {
                "template": "idpuser.subjectNameId"
              }
            },
            "accountLink": {
              "action": "AUTO",
              "filter": null
            },
            "maxClockSkew": 120000,
            "provisioning": {
              "action": "AUTO",
              "groups": {
                "action": "NONE"
              },
              "conditions": {
                "suspended": {
                  "action": "NONE"
                },
                "deprovisioned": {
                  "action": "NONE"
                }
              },
              "profileMaster": true
            }
          },
          "status": "INACTIVE",
          "created": null,
          "protocol": {
            "type": "SAML2",
            "settings": {
              "nameFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"
            },
            "endpoints": {
              "acs": {
                "type": "INSTANCE",
                "binding": "HTTP-POST"
              },
              "sso": {
                "url": "https://idp.example.com/saml2/sso",
                "binding": "HTTP-REDIRECT",
                "destination": "https://idp.example.com/saml2/sso"
              }
            },
            "algorithms": {
              "request": {
                "signature": {
                  "scope": "REQUEST",
                  "algorithm": "SHA-256"
                }
              },
              "response": {
                "signature": {
                  "scope": "ANY",
                  "algorithm": "SHA-256"
                }
              }
            },
            "credentials": {
              "trust": {
                "kid": "your-key-id",
                "issuer": "https://idp.example.com",
                "audience": "https://www.okta.com/saml2/service-provider/spCQJRNaaxs7ANqKBO7M"
              }
            }
          },
          "lastUpdated": "2016-03-29T21:23:45.000Z"
        }
      ]
  inlineHooks.activateInlineHook:
    description: |-
      Activates the Inline Hook that match the provided id
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/inline-hooks/#activate-inline-hook
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "calr0dvWvbMQJHZCM0g3",
          "name": "My Test Inline Hook",
          "type": "com.okta.oauth2.tokens.transform",
          "status": "ACTIVE",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/inlineHook",
              "method": "POST",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER"
              }
            },
            "version": "1.0.0"
          },
          "created": "2018-05-15T01:23:08.000Z",
          "version": "1.0.0",
          "lastUpdated": "2018-05-15T01:23:08.000Z"
        }
      ]
  inlineHooks.createInlineHook:
    description: |-
      Registers a new Inline Hook to your organization in ACTIVE status. You need to pass an Inline Hook object in the JSON payload of your request. That object represents the set of required information about the Inline Hook that you are registering, including: The URI of your external service endpoint. The type of Inline Hook you are registering. In addition, the object lets you specify a secret API key that you want Okta to pass to your external service endpoint (so that your external service can check for its presence as a security measure).
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/inline-hooks/#create-inline-hook
    example:
      inputs: [
        {
          "name": "My Test Inline Hook",
          "type": "com.okta.oauth2.tokens.transform",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/inlineHook",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER",
                "value": "api-key"
              }
            },
            "version": "1.0.0"
          },
          "version": "1.0.0"
        }
      ]
      outputs: [
        {
          "id": "calr0dvWvbMQJHZCM0g3",
          "name": "My Test Inline Hook",
          "type": "com.okta.oauth2.tokens.transform",
          "status": "ACTIVE",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/inlineHook",
              "method": "POST",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER"
              }
            },
            "version": "1.0.0"
          },
          "created": "2018-05-15T01:23:08.000Z",
          "version": "1.0.0",
          "lastUpdated": "2018-05-15T01:23:08.000Z"
        }
      ]
  inlineHooks.deactivateInlineHook:
    description: |-
      Deactivates the Inline Hook that match the provided id
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/inline-hooks/#deactivate-inline-hook
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "calr0dvWvbMQJHZCM0g3",
          "name": "My Test Inline Hook",
          "type": "com.okta.oauth2.tokens.transform",
          "status": "INACTIVE",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/inlineHook",
              "method": "POST",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER"
              }
            },
            "version": "1.0.0"
          },
          "created": "2018-05-15T01:23:08.000Z",
          "version": "1.0.0",
          "lastUpdated": "2018-05-15T01:23:08.000Z"
        }
      ]
  inlineHooks.deleteInlineHook:
    description: |-
      Deletes the Inline Hook that matches the provided id. After it is deleted, the Inline Hook is unrecoverable. As a safety precaution, only Inline Hooks with a status of INACTIVE are eligible for deletion.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/inline-hooks/#delete-inline-hook
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  inlineHooks.executeInlineHook:
    description: |-
      Executes the Inline Hook that matches the provided inlineHookId by using the request body as the input. This Inline Hook sends the provided data through the Channel and returns a response if it matches the correct data contract. Otherwise it returns an error. Therefore, you need to construct a JSON payload that matches the payloads that Okta would send to your external service for this Inline Hook type.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/inline-hooks/#execute-inline-hook
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "commands": [
            {
              "type": "com.okta.identity.patch",
              "value": [
                {
                  "op": "add",
                  "path": "/claims/extPatientId",
                  "value": "1234"
                }
              ]
            },
            {
              "type": "com.okta.access.patch",
              "value": [
                {
                  "op": "add",
                  "path": "/claims/external_guid",
                  "value": "F0384685-F87D-474B-848D-2058AC5655A7"
                }
              ]
            }
          ]
        }
      ]
  inlineHooks.getInlineHook:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/inline-hooks/#get-inline-hook
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "cali2j192cIE9VpHn0h7",
          "name": "Test Inline Hook",
          "type": "com.okta.oauth2.tokens.transform",
          "status": "ACTIVE",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/inlineHook",
              "method": "POST",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER"
              }
            },
            "version": "1.0.0"
          },
          "created": "2018-12-05T00:35:20.000Z",
          "version": "1.0.0",
          "lastUpdated": "2018-12-05T00:35:20.000Z"
        }
      ]
  inlineHooks.listInlineHooks:
    description: |-
      Returns a list of registered Inline Hooks that are optionally filtered by the Inline Hook type if you supply a type query parameter
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/inline-hooks/#list-inline-hooks
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "cali2j192cIE9VpHn0h7",
          "name": "Test Inline Hook",
          "type": "com.okta.oauth2.tokens.transform",
          "status": "ACTIVE",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/inlineHook",
              "method": "POST",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER"
              }
            },
            "version": "1.0.0"
          },
          "created": "2018-12-05T00:35:20.000Z",
          "version": "1.0.0",
          "lastUpdated": "2018-12-05T00:35:20.000Z"
        }
      ]
  inlineHooks.updateInlineHook:
    description: |-
      The submitted Inline Hook properties replace the existing properties after passing validation.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/inline-hooks/#update-inline-hook
    example:
      inputs: [
        {
          "name": "My Test Inline Hook",
          "type": "com.okta.oauth2.tokens.transform",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/inlineHook",
              "method": "POST",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER",
                "value": "api-key"
              }
            },
            "version": "1.0.0"
          },
          "version": "1.0.0"
        }
      ]
      outputs: [
        {
          "id": "calr0dvWvbMQJHZCM0g3",
          "name": "My Test Inline Hook",
          "type": "com.okta.oauth2.tokens.transform",
          "status": "ACTIVE",
          "channel": {
            "type": "HTTP",
            "config": {
              "uri": "https://www.example.com/inlineHook",
              "method": "POST",
              "headers": [
                {
                  "key": "X-Other-Header",
                  "value": "some-other-value"
                }
              ],
              "authScheme": {
                "key": "Authorization",
                "type": "HEADER"
              }
            },
            "version": "1.0.0"
          },
          "created": "2018-05-15T01:23:08.000Z",
          "version": "1.0.0",
          "lastUpdated": "2018-05-15T01:23:08.000Z"
        }
      ]
  linkedObjects.addLinkedObjectDefinitionToUserProfileSchema:
    description: |-
      Adds a Linked Object definition to the User Profile schema. The name field found in both the primary and associated objects can't start with a number and can only contain the following characters: a-z, A-Z, 0-9, and _.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/linked-objects/#add-linked-object-definition-to-user-profile-schema
    example:
      inputs: [
        {
          "primary": {
            "name": "manager",
            "type": "USER",
            "title": "Manager",
            "description": "Manager link property"
          },
          "associated": {
            "name": "subordinate",
            "type": "USER",
            "title": "Subordinate",
            "description": "Subordinate link property"
          }
        }
      ]
      outputs: [
        {}
      ]
  linkedObjects.deleteLinkedObjectValue:
    description: |-
      For the associated user specified by ID and the relationship specified by primary name, deletes any existing relationship between the associated and primary user
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/linked-objects/#delete-linked-object-value
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  linkedObjects.getLinkedObjectDefinitionByName:
    description: |-
      Gets a single Linked Object definition. You can specify either the primary name or the associated name.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/linked-objects/#get-a-linked-object-definition-by-name
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/meta/schemas/user/linkedObjects/manager"
            }
          },
          "primary": {
            "name": "manager",
            "type": "USER",
            "title": "Manager",
            "description": "Manager link property"
          },
          "associated": {
            "name": "subordinate",
            "type": "USER",
            "title": "Subordinate",
            "description": "Subordinate link property"
          }
        }
      ]
  linkedObjects.getLinkedObjectDefinitions:
    description: |-
      Gets all of the Linked Object definitions for an org
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/linked-objects/#get-all-linked-object-definitions
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/meta/schemas/user/linkedObjects/manager"
            }
          },
          "primary": {
            "name": "manager",
            "type": "USER",
            "title": "Manager",
            "description": "Manager link property"
          },
          "associated": {
            "name": "subordinate",
            "type": "USER",
            "title": "Subordinate",
            "description": "Subordinate link property"
          }
        }
      ]
  linkedObjects.getAssociatedLinkedObjectValues:
    description: |-
      For the specified user, gets an array of users who are associated for the specified relationship. If the specified user isn't assigned a primary relationship, an empty array is returned.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/linked-objects/#get-associated-linked-object-values
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5zex6ztMbOZhF50h7"
            }
          }
        }
      ]
  linkedObjects.getPrimaryLinkedObjectValue:
    description: |-
      For the user specified by ID, returns the self link for the primary user in the relationship specified by primary.name. If the user specified isn't the associated user in any relationship, an empty array is returned.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/linked-objects/#get-primary-linked-object-value
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5t60iloOHN9pBi0h7"
            }
          }
        }
      ]
  linkedObjects.removeLinkedObjectDefinition:
    description: |-
      Removes the Linked Object definition specified by either the primary or associated name. The entire definition is removed, regardless of which name that you specify.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/linked-objects/#remove-linked-object-definition
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  linkedObjects.setLinkedObjectValueForPrimary:
    description: |-
      Sets the first user as the associated and the second user as the primary for the specified relationship. If the first user is already associated with a different primary for this relationship, the previous link is removed. A Linked Object relationship can specify only one primary user for an associated user.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/linked-objects/#set-linked-object-value-for-primary
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  mappings.addPropertyMapping:
    description: |-
      Adds a Property Mapping to an existing Profile Mapping
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/mappings/#add-property-mapping
    example:
      inputs: [
        {
          "properties": {
            "fullName": {
              "expression": "user.firstName + user.lastName",
              "pushStatus": "PUSH"
            },
            "nickName": {
              "expression": "user.nickName",
              "pushStatus": "PUSH"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "mappingId",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/mappings/mappingId"
            }
          },
          "source": {
            "id": "otysbePhQ3yqt4cVv0g3",
            "name": "user",
            "type": "user",
            "_links": {
              "self": {
                "href": "https://$yourOktaDomain/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3"
              },
              "schema": {
                "href": "https://$yourOktaDomain/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3"
              }
            }
          },
          "target": {
            "id": "0oa1qmn4LZQQEH0wZ0g4",
            "name": "okta_org2org",
            "type": "appuser",
            "_links": {
              "self": {
                "href": "https://$yourOktaDomain/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4"
              },
              "schema": {
                "href": "https://$yourOktaDomain/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default"
              }
            }
          },
          "properties": {
            "fullName": {
              "expression": "user.firstName + user.lastName",
              "pushStatus": "PUSH"
            },
            "nickName": {
              "expression": "user.nickName",
              "pushStatus": "PUSH"
            }
          }
        }
      ]
  mappings.getProfileMapping:
    description: |-
      Fetches a single Profile Mapping referenced by its ID
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/mappings/#get-profile-mapping
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "mappingId",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/mappings/mappingId"
            }
          },
          "source": {
            "id": "otysbePhQ3yqt4cVv0g3",
            "name": "user",
            "type": "user",
            "_links": {
              "self": {
                "href": "https://$yourOktaDomain/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3"
              },
              "schema": {
                "href": "https://$yourOktaDomain/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3"
              }
            }
          },
          "target": {
            "id": "0oa1qmn4LZQQEH0wZ0g4",
            "name": "okta_org2org",
            "type": "appuser",
            "_links": {
              "self": {
                "href": "https://$yourOktaDomain/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4"
              },
              "schema": {
                "href": "https://$yourOktaDomain/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default"
              }
            }
          },
          "properties": {
            "lastName": {
              "expression": "user.lastName",
              "pushStatus": "PUSH"
            },
            "firstName": {
              "expression": "user.firstName",
              "pushStatus": "PUSH"
            }
          }
        }
      ]
  mappings.listProfileMappings:
    description: |-
      Enumerates Profile Mappings in your organization with pagination. You can return a subset of Profile Mapping(s) that match a supported sourceId and/or targetId.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/mappings/#list-profile-mappings
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "prm1k47ghydIQOTBW0g4",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/mappings/prm1k47ghydIQOTBW0g4"
            }
          },
          "source": {
            "id": "sourceId",
            "name": "user",
            "type": "user",
            "_links": {
              "self": {
                "href": "https://$yourOktaDomain/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3"
              },
              "schema": {
                "href": "https://$yourOktaDomain/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3"
              }
            }
          },
          "target": {
            "id": "0oa1xz9cb7yt5SsZV0g4",
            "name": "zendesk",
            "type": "appuser",
            "_links": {
              "self": {
                "href": "https://$yourOktaDomain/api/v1/apps/0oa1xz9cb7yt5SsZV0g4"
              },
              "schema": {
                "href": "https://$yourOktaDomain/api/v1/meta/schemas/apps/0oa1xz9cb7yt5SsZV0g4/default"
              }
            }
          }
        }
      ]
  mappings.removePropertyMapping:
    description: |-
      Removes an existing Property Mapping within a Profile Mapping.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/mappings/#remove-property-mapping
    example:
      inputs: [
        {
          "properties": {
            "nickName": null
          }
        }
      ]
      outputs: [
        {
          "id": "mappingId",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/mappings/mappingId"
            }
          },
          "source": {
            "id": "otysbePhQ3yqt4cVv0g3",
            "name": "user",
            "type": "user",
            "_links": {
              "self": {
                "href": "https://$yourOktaDomain/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3"
              },
              "schema": {
                "href": "https://$yourOktaDomain/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3"
              }
            }
          },
          "target": {
            "id": "0oa1qmn4LZQQEH0wZ0g4",
            "name": "okta_org2org",
            "type": "appuser",
            "_links": {
              "self": {
                "href": "https://$yourOktaDomain/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4"
              },
              "schema": {
                "href": "https://$yourOktaDomain/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default"
              }
            }
          },
          "properties": {
            "fullName": {
              "expression": "user.firstName + user.lastName",
              "pushStatus": "PUSH"
            }
          }
        }
      ]
  mappings.updatePropertyMapping:
    description: |-
      Alters an existing Property Mapping within a Profile Mapping
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/mappings/#update-property-mapping
    example:
      inputs: [
        {
          "properties": {
            "nickName": {
              "expression": "user.honorificPrefix + user.displayName",
              "pushStatus": "DONT_PUSH"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "mappingId",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/mappings/mappingId"
            }
          },
          "source": {
            "id": "otysbePhQ3yqt4cVv0g3",
            "name": "user",
            "type": "user",
            "_links": {
              "self": {
                "href": "https://$yourOktaDomain/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3"
              },
              "schema": {
                "href": "https://$yourOktaDomain/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3"
              }
            }
          },
          "target": {
            "id": "0oa1qmn4LZQQEH0wZ0g4",
            "name": "okta_org2org",
            "type": "appuser",
            "_links": {
              "self": {
                "href": "https://$yourOktaDomain/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4"
              },
              "schema": {
                "href": "https://$yourOktaDomain/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default"
              }
            }
          },
          "properties": {
            "fullName": {
              "expression": "user.firstName + user.lastName",
              "pushStatus": "PUSH"
            },
            "nickName": {
              "expression": "user.honorificPrefix + user.displayName",
              "pushStatus": "DONT_PUSH"
            }
          }
        }
      ]
  myaccount.getMe:
    description: |-
      Fetches the current user's Me object, a collection of links to information describing the user.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/myaccount/#get-me
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00u21l3rOYRXX1tnI0g4",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/myaccount"
            },
            "directoryProfile": {
              "href": "https://$yourOktaDomain/api/v1/myaccount/directoryProfile"
            }
          },
          "createdAt": "2020-01-14T20:05:32.000Z",
          "modifiedAt": "2020-10-13T03:17:09.000Z"
        }
      ]
  myaccount.getMyUserProfile:
    description: |-
      Fetches the caller's Okta User Profile, excluding any attribute also excluded by Get My User Profile Schema
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/myaccount/#get-my-user-profile
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/myaccount/directoryProfile"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/myaccount"
            },
            "describedBy": {
              "href": "https://$yourOktaDomain/api/v1/myaccount/profile/schema"
            }
          },
          "profile": {
            "foo": "bar",
            "login": "example@ex.ample.com",
            "mobilePhone": null,
            "customBoolean": null,
            "customInteger": null
          },
          "createdAt": "2020-01-14T20:05:32.000Z",
          "modifiedAt": "2020-10-13T03:17:09.000Z"
        }
      ]
  myaccount.getMyUserProfileSchema:
    description: |-
      Fetches the appropriate User Profile Schema for the caller's User Type.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/myaccount/#get-my-user-profile-schema
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/myaccount/profile/schema"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/myaccount"
            }
          },
          "properties": {
            "foo": {
              "type": "string",
              "title": "foo",
              "permissions": {
                "SELF": "READ_ONLY"
              }
            },
            "login": {
              "type": "string",
              "title": "Username",
              "required": true,
              "maxLength": 100,
              "minLength": 5,
              "permissions": {
                "SELF": "READ_ONLY"
              }
            },
            "mobilePhone": {
              "type": "string",
              "title": "Mobile phone",
              "maxLength": 100,
              "permissions": {
                "SELF": "READ_WRITE"
              }
            },
            "customBoolean": {
              "type": "boolean",
              "title": "customBoolean",
              "permissions": {
                "SELF": "READ_WRITE"
              }
            },
            "customInteger": {
              "type": "integer",
              "title": "customInteger",
              "permissions": {
                "SELF": "READ_WRITE"
              }
            }
          }
        }
      ]
  myaccount.updateMyUserProfile:
    description: |-
      Updates the caller's User Profile.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/myaccount/#update-my-user-profile
    example:
      inputs: [
        {
          "profile": {
            "foo": "bar",
            "login": "dayton.williams@okta.com",
            "notFive": 5,
            "customBoolean": false,
            "customInteger": null
          }
        }
      ]
      outputs: [
        {
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/myaccount/directoryProfile"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/myaccount"
            },
            "describedBy": {
              "href": "https://$yourOktaDomain/api/v1/myaccount/profile/schema"
            }
          },
          "profile": {
            "foo": "bar",
            "login": "example@ex.ample.com",
            "mobilePhone": null,
            "customBoolean": false,
            "customInteger": 5
          },
          "createdAt": "2020-01-14T20:05:32.000Z",
          "modifiedAt": "2020-11-03T06:01:13.000Z"
        }
      ]
  oauthClients.generateNewClientSecret:
    description: |-
      Generates a new client secret for the specified client Application
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oauth-clients/#generate-a-new-client-secret
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "logo_uri": "https://www.example-application.com/logo.png",
          "client_id": "0jrabyQWm4B9zVJPbotY",
          "client_uri": "https://www.example-application.com",
          "client_name": "Updated OAuth Client",
          "grant_types": [
            "authorization_code"
          ],
          "client_secret": "5W7XULCEs4BJKnWUXwh8lgmeXRhcGcdViFp84pWe",
          "redirect_uris": [
            "https://www.example-application.com/oauth2/redirectUri"
          ],
          "response_types": [
            "id_token",
            "code"
          ],
          "application_type": "web",
          "initiate_login_uri": "https://www.example-application.com/oauth2/login",
          "client_id_issued_at": 1453913425,
          "client_secret_expires_at": 0,
          "post_logout_redirect_uris": [
            "https://www.example-application.com/oauth2/postLogoutRedirectUri"
          ],
          "token_endpoint_auth_method": "client_secret_post"
        }
      ]
  oauthClients.getOauthClient:
    description: |-
      Fetches a specific client by clientId from your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oauth-clients/#get-an-oauth-client
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "logo_uri": "https://www.example-application.com/logo.png",
          "client_id": "0jrabyQWm4B9zVJPbotY",
          "client_uri": "https://www.example-application.com",
          "client_name": "Example OAuth Client",
          "grant_types": [
            "authorization_code"
          ],
          "redirect_uris": [
            "https://www.example-application.com/oauth2/redirectUri"
          ],
          "response_types": [
            "id_token",
            "code"
          ],
          "application_type": "web",
          "initiate_login_uri": "https://www.example-application.com/oauth2/login",
          "client_id_issued_at": 1453913425,
          "post_logout_redirect_uris": [
            "https://www.example-application.com/oauth2/postLogoutRedirectUri"
          ],
          "token_endpoint_auth_method": "client_secret_post"
        }
      ]
  oauthClients.listClientApplications:
    description: |-
      Lists all the client Applications in your organization (with optional pagination)
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oauth-clients/#list-client-applications
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "logo_uri": null,
          "client_id": "B6YnDUIpt6Oq354YYaNR",
          "client_uri": null,
          "client_name": "Native client",
          "grant_types": [
            "password",
            "refresh_token",
            "authorization_code",
            "implicit"
          ],
          "redirect_uris": [
            "https://httpbin.org/get"
          ],
          "response_types": [
            "id_token",
            "code",
            "token"
          ],
          "application_type": "native",
          "client_id_issued_at": 1495059435,
          "client_secret_expires_at": 0,
          "token_endpoint_auth_method": "client_secret_basic"
        }
      ]
  oauthClients.listClientApplicationsThatMatchSearchFilter:
    description: |-
      Lists all clients that match a search filter on client_name
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oauth-clients/#list-client-applications-that-match-a-search-filter
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "logo_uri": null,
          "client_id": "rHQoApjizqc4MGVlW5En",
          "client_uri": null,
          "client_name": "Web client",
          "grant_types": [
            "authorization_code",
            "refresh_token",
            "implicit"
          ],
          "redirect_uris": [
            "https://httpbin.org/get"
          ],
          "response_types": [
            "code",
            "id_token",
            "token"
          ],
          "application_type": "web",
          "client_id_issued_at": 1495059117,
          "client_secret_expires_at": 0,
          "token_endpoint_auth_method": "client_secret_basic"
        }
      ]
  oauthClients.registerNewClient:
    description: |-
      Adds a new client Application to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oauth-clients/#register-new-client
    example:
      inputs: [
        {
          "logo_uri": "https://www.example-application.com/logo.png",
          "client_uri": "https://www.example-application.com",
          "client_name": "Example OAuth Client",
          "grant_types": [
            "authorization_code",
            "refresh_token"
          ],
          "redirect_uris": [
            "https://www.example-application.com/oauth2/redirectUri"
          ],
          "response_types": [
            "code",
            "id_token"
          ],
          "application_type": "web",
          "initiate_login_uri": "https://www.example-application.com/oauth2/login",
          "post_logout_redirect_uris": [
            "https://www.example-application.com/oauth2/postLogoutRedirectUri"
          ],
          "token_endpoint_auth_method": "client_secret_post"
        }
      ]
      outputs: [
        {}
      ]
  oauthClients.removeClientApplication:
    description: |-
      Removes a client Application from your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oauth-clients/#remove-a-client-application
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  oauthClients.updateClientApplication:
    description: |-
      Updates the settings for a client Application from your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oauth-clients/#update-a-client-application
    example:
      inputs: [
        {
          "logo_uri": "https://www.example-application.com/logo.png",
          "client_id": "0jrabyQWm4B9zVJPbotY",
          "client_uri": "https://www.example-application.com",
          "client_name": "Updated OAuth Client",
          "grant_types": [
            "authorization_code"
          ],
          "redirect_uris": [
            "https://www.example-application.com/oauth2/redirectUri"
          ],
          "response_types": [
            "id_token",
            "code"
          ],
          "application_type": "web",
          "initiate_login_uri": "https://www.example-application.com/oauth2/login",
          "post_logout_redirect_uris": [
            "https://www.example-application.com/oauth2/postLogoutRedirectUri"
          ],
          "token_endpoint_auth_method": "client_secret_post"
        }
      ]
      outputs: [
        {
          "logo_uri": "https://www.example-application.com/logo.png",
          "client_id": "0jrabyQWm4B9zVJPbotY",
          "client_uri": "https://www.example-application.com",
          "client_name": "Updated OAuth Client",
          "grant_types": [
            "authorization_code"
          ],
          "client_secret": "5W7XULCEs4BJKnWUXwh8lgmeXRhcGcdViFp84pWe",
          "redirect_uris": [
            "https://www.example-application.com/oauth2/redirectUri"
          ],
          "response_types": [
            "id_token",
            "code"
          ],
          "application_type": "web",
          "initiate_login_uri": "https://www.example-application.com/oauth2/login",
          "client_id_issued_at": 1453913425,
          "client_secret_expires_at": 0,
          "post_logout_redirect_uris": [
            "https://www.example-application.com/oauth2/postLogoutRedirectUri"
          ],
          "token_endpoint_auth_method": "client_secret_post"
        }
      ]
  oidc.authorize:
    description: |-
      This is a starting point for browser-based OpenID Connect flows such as the implicit and authorization code flows. This request authenticates the user and returns tokens along with an authorization grant to the client application as a part of the callback response.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oidc/#authorize
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  oidc.introspect:
    description: |-
      This endpoint takes an access, ID, or refresh token, and returns a boolean that indicates whether it is active or not. If the token is active, additional data about the token is also returned. If the token is invalid, expired, or revoked, it is considered inactive.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oidc/#introspect
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "aud": "https://$yourOktaDomain",
          "exp": 1451606400,
          "iat": 1451602800,
          "iss": "https://$yourOktaDomain/oauth2/orsmsg0aWLdnF3spV0g3",
          "jti": "AT.7P4KlczBYVcWLkxduEuKeZfeiNYkZIC9uGJ28Cc-YaI",
          "sub": "john.doe@example.com",
          "uid": "00uid4BxXw6I6TV4m0g3",
          "scope": "openid profile",
          "active": true,
          "username": "john.doe@example.com",
          "client_id": "a9VpZDRCeFh3Nkk2VdYa",
          "token_type": "Bearer"
        }
      ]
  oidc.keys:
    description: |-
      Returns a JSON Web Key Set (JWKS) that contains the public keys that can be used to verify the signatures of tokens that you receive from your authorization server.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oidc/#keys
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  oidc.logout:
    description: |-
      Use this operation to log a user out by removing their Okta browser session.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oidc/#logout
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  oidc.revoke:
    description: |-
      The API takes an access or refresh token and revokes it. Revoked tokens are considered inactive at the introspection endpoint. A client may only revoke its own tokens. See Revoke tokens for more information.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oidc/#revoke
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  oidc.token:
    description: |-
      This endpoint returns access tokens, ID tokens, and refresh tokens, depending on the request parameters. For password, client credentials, and refresh token flows, calling /token is the only step of the flow. For the authorization code flow, calling /token is the second step of the flow.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oidc/#token
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "scope": "openid email",
          "id_token": "eyJhbGciOiJSZG",
          "expires_in": 3600,
          "token_type": "Bearer",
          "access_token": "eyJhbG5Nj",
          "refresh_token": "a9VpZDRCeFh3Nkk2VdY"
        }
      ]
  oidc.userinfo:
    description: |-
      Returns information about the currently signed-in user.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oidc/#userinfo
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "sub": "00uid4BxXw6I6TV4m0g3",
          "name": "John Doe",
          "email": "john.doe@example.com",
          "locale": "en-US",
          "address": {
            "region": "CA",
            "country": "US",
            "locality": "Los Angeles",
            "postal_code": "90210",
            "street_address": "123 Hollywood Blvd."
          },
          "profile": "https://example.com/john.doe",
          "nickname": "Jimmy",
          "zoneinfo": "America/Los_Angeles",
          "given_name": "John",
          "updated_at": 1311280970,
          "family_name": "Doe",
          "middle_name": "James",
          "phone_number": "+1 (425) 555-1212",
          "email_verified": true
        }
      ]
  oidc.wellKnownOauthAuthorizationServer:
    description: |-
      Returns OAuth 2.0 metadata related to your Custom Authorization Server. This information can be used by clients to programmatically configure their interactions with Okta. Custom scopes are returned only when they are configured to be publicly discoverable. Custom claims are never returned.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oidc/#well-known-oauth-authorization-server
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "issuer": "https://$yourOktaDomain/oauth2/$authServerId",
          "jwks_uri": "https://$yourOktaDomain/oauth2/${authServerId}/v1/keys",
          "token_endpoint": "https://$yourOktaDomain/oauth2/${authServerId}/v1/token",
          "claims_supported": [
            "ver",
            "jti",
            "iss",
            "aud",
            "iat",
            "exp",
            "cid",
            "uid",
            "scp",
            "sub"
          ],
          "scopes_supported": [
            "openid",
            "profile",
            "email",
            "address",
            "phone",
            "offline_access"
          ],
          "revocation_endpoint": "https://$yourOktaDomain/oauth2/${authServerId}/v1/revoke",
          "end_session_endpoint": "https://$yourOktaDomain/oauth2/${authServerId}/v1/logout",
          "grant_types_supported": [
            "authorization_code",
            "implicit",
            "refresh_token",
            "password",
            "client_credentials"
          ],
          "registration_endpoint": "https://$yourOktaDomain/oauth2/v1/clients",
          "authorization_endpoint": "https://$yourOktaDomain/oauth2/${authServerId}/v1/authorize",
          "introspection_endpoint": "https://$yourOktaDomain/oauth2/${authServerId}/v1/introspect",
          "subject_types_supported": [
            "public"
          ],
          "response_modes_supported": [
            "query",
            "fragment",
            "form_post",
            "okta_post_message"
          ],
          "response_types_supported": [
            "code",
            "token",
            "id_token",
            "code id_token",
            "code token",
            "id_token token",
            "code id_token token"
          ],
          "request_parameter_supported": true,
          "code_challenge_methods_supported": [
            "S256"
          ],
          "token_endpoint_auth_methods_supported": [
            "client_secret_basic",
            "client_secret_post",
            "client_secret_jwt",
            "private_key_jwt",
            "none"
          ],
          "revocation_endpoint_auth_methods_supported": [
            "client_secret_basic",
            "client_secret_post",
            "client_secret_jwt",
            "private_key_jwt",
            "none"
          ],
          "request_object_signing_alg_values_supported": [
            "HS256",
            "HS384",
            "HS512",
            "RS256",
            "RS384",
            "RS512",
            "ES256",
            "ES384",
            "ES512"
          ],
          "introspection_endpoint_auth_methods_supported": [
            "client_secret_basic",
            "client_secret_post",
            "client_secret_jwt",
            "private_key_jwt",
            "none"
          ]
        }
      ]
  oidc.wellKnownOpenidConfiguration:
    description: |-
      Returns OpenID Connect metadata about your authorization server. This information can be used by clients to programmatically configure their interactions with Okta. Custom scopes are returned only when they are configured to be publicly discoverable. Custom claims are never returned.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/oidc/#well-known-openid-configuration
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "issuer": "https://$yourOktaDomain",
          "jwks_uri": "https://{baseUrl}/keys",
          "token_endpoint": "https://{baseUrl}/token",
          "claims_supported": [
            "iss",
            "ver",
            "sub",
            "aud",
            "iat",
            "exp",
            "jti",
            "auth_time",
            "amr",
            "idp",
            "nonce",
            "name",
            "nickname",
            "preferred_username",
            "given_name",
            "middle_name",
            "family_name",
            "email",
            "email_verified",
            "profile",
            "zoneinfo",
            "locale",
            "address",
            "phone_number",
            "picture",
            "website",
            "gender",
            "birthdate",
            "updated_at",
            "at_hash",
            "c_hash"
          ],
          "scopes_supported": [
            "openid",
            "email",
            "profile",
            "address",
            "phone",
            "offline_access",
            "groups"
          ],
          "userinfo_endpoint": "https://{baseUrl}/userinfo",
          "revocation_endpoint": "https://{baseUrl}/revoke",
          "end_session_endpoint": "https://{baseUrl}/logout",
          "grant_types_supported": [
            "authorization_code",
            "implicit",
            "refresh_token",
            "password"
          ],
          "registration_endpoint": "https://{baseUrl}/clients",
          "authorization_endpoint": "https://{baseUrl}/authorize",
          "introspection_endpoint": "https://{baseUrl}/introspect",
          "subject_types_supported": [
            "public"
          ],
          "response_modes_supported": [
            "query",
            "fragment",
            "form_post",
            "okta_post_message"
          ],
          "response_types_supported": [
            "code",
            "code id_token",
            "code token",
            "code id_token token",
            "id_token",
            "id_token token"
          ],
          "request_parameter_supported": true,
          "id_token_signing_alg_values_supported": [
            "RS256"
          ],
          "token_endpoint_auth_methods_supported": [
            "client_secret_basic",
            "client_secret_post",
            "client_secret_jwt",
            "none"
          ],
          "revocation_endpoint_auth_methods_supported": [
            "client_secret_basic",
            "client_secret_post",
            "client_secret_jwt",
            "none"
          ],
          "request_object_signing_alg_values_supported": [
            "HS256",
            "HS384",
            "HS512"
          ],
          "introspection_endpoint_auth_methods_supported": [
            "client_secret_basic",
            "client_secret_post",
            "client_secret_jwt",
            "none"
          ]
        }
      ]
  org.extendOktaSupport:
    description: |-
      Extends the length of time that Okta Support can access your org by 24 hours. This means that 24 hours are added to the remaining access time.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#extend-okta-support
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "extend": {
              "href": "https://$yourOktaDomain.com/api/v1/org/privacy/oktaSupport/extend",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "revoke": {
              "href": "https://$yourOktaDomain.com/api/v1/org/privacy/oktaSupport/revoke",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "support": "ENABLED",
          "expiration": "2021-01-25T11:13:14.000Z"
        }
      ]
  org.getContactTypes:
    description: |-
      Gets your org's Contact Types
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#get-contact-types
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "billing": {
              "href": "https://$yourOktaDomain.com/api/v1/org/contacts/billing"
            }
          },
          "contactType": "BILLING"
        }
      ]
  org.getOktaCommunicationSettings:
    description: |-
      Gets your organization's Okta Communication Settings.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#get-okta-communication-settings
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "optIn": {
              "href": "https://$yourOktaDomain.com/api/v1/org/privacy/oktaCommunication/optIn",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "optOutEmailUsers": true
        }
      ]
  org.getOktaSupportSettings:
    description: |-
      Gets your org's Okta Support Settings
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#get-okta-support-settings
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "extend": {
              "href": "https://$yourOktaDomain.com/api/v1/org/privacy/oktaSupport/extend",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "revoke": {
              "href": "https://$yourOktaDomain.com/api/v1/org/privacy/oktaSupport/revoke",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "support": "ENABLED",
          "expiration": "2021-01-24T11:13:14.000Z"
        }
      ]
  org.getOrgPreferences:
    description: |-
      Gets your Organization's Preferences
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#get-org-preferences
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "hideEndUserFooter": {
              "href": "https://$yourOktaDomain.com/api/v1/org/preferences/hideEndUserFooter",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "showEndUserFooter": true
        }
      ]
  org.getOrgSettings:
    description: |-
      Gets your Org's Settings
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#get-org-settings
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00ou8s5wploBwX4710g3",
          "city": "San Francisco",
          "state": "California",
          "_links": {
            "logo": {
              "href": "https://$yourOktaDomain.com/bc/image/fileStoreRecord?id=fs02ju1ejvy2Cv2Yx0g4"
            },
            "contacts": {
              "href": "https://$yourOktaDomain.com/api/v1/org/contacts"
            },
            "uploadLogo": {
              "href": "https://$yourOktaDomain.com/api/v1/org/logo",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "oktaSupport": {
              "href": "https://$yourOktaDomain.com/api/v1/org/privacy/oktaSupport"
            },
            "preferences": {
              "href": "https://$yourOktaDomain.com/api/v1/org/preferences"
            },
            "oktaCommunication": {
              "href": "https://$yourOktaDomain.com/api/v1/org/privacy/oktaCommunication"
            }
          },
          "status": "ACTIVE",
          "country": "United States of America",
          "created": "2020-10-26T15:03:08.000Z",
          "website": "https://okta.com",
          "address1": "301 Brannan St.",
          "address2": "Unit 100",
          "expiresAt": null,
          "subdomain": "okta",
          "postalCode": "94107",
          "companyName": "Okta",
          "lastUpdated": "2021-01-20T21:02:28.000Z",
          "phoneNumber": "+1-555-415-1337",
          "supportPhoneNumber": "+1-555-514-1337",
          "endUserSupportHelpURL": "https://support.okta.com"
        }
      ]
  org.getUserOfContactType:
    description: |-
      Retrieves the URL of the User associated with the specified Contact Type
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#get-user-of-contact-type
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "user": {
              "href": "https://$yourOktaDomain.com/api/v1/users/00uuibMot2FBByTbs0g3"
            }
          },
          "userId": "00uuibMot2FBByTbs0g3"
        }
      ]
  org.grantOktaSupport:
    description: |-
      Enables you to temporarily allow Okta Support to access your org as an administrator for eight hours
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#grant-okta-support
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "extend": {
              "href": "https://$yourOktaDomain.com/api/v1/org/privacy/oktaSupport/extend",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "revoke": {
              "href": "https://$yourOktaDomain.com/api/v1/org/privacy/oktaSupport/revoke",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "support": "ENABLED",
          "expiration": "2021-01-24T11:13:14.000Z"
        }
      ]
  org.hideEndUserPageFooter:
    description: |-
      Hides the Okta UI footer for all of your org's end users
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#hide-end-user-page-footer
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "hideEndUserFooter": {
              "href": "https://$yourOktaDomain.com/api/v1/org/preferences/showEndUserFooter",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "showEndUserFooter": false
        }
      ]
  org.optInToOktaCommunications:
    description: |-
      Opts in all of the org's users to Okta Communication emails.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#opt-in-to-okta-communications
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "optOut": {
              "href": "https://$yourOktaDomain.com/api/v1/org/privacy/oktaCommunication/optOut",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "optOutEmailUsers": false
        }
      ]
  org.optOutOfOktaCommunications:
    description: |-
      Opts out all users of this org from Okta Communication emails
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#opt-out-of-okta-communications
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "optIn": {
              "href": "https://$yourOktaDomain.com/api/v1/org/privacy/oktaCommunication/optIn",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "optOutEmailUsers": true
        }
      ]
  org.revokeOktaSupport:
    description: |-
      Revokes Okta Support access to your org
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#revoke-okta-support
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "grant": {
              "href": "https://$yourOktaDomain.com/api/v1/org/privacy/oktaSupport/grant",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "support": "DISABLED",
          "expiration": null
        }
      ]
  org.showEndUserPageFooter:
    description: |-
      Makes the Okta UI footer visible for all of your org's end users
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#show-end-user-page-footer
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "hideEndUserFooter": {
              "href": "https://$yourOktaDomain.com/api/v1/org/preferences/hideEndUserFooter",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "showEndUserFooter": true
        }
      ]
  org.updateOrgSettings:
    description: |-
      Updates your organization's current settings. You must specify all Org Setting properties when you update an org's profile with a PUT method. Any property not specified in the request is deleted.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#update-org-settings
    example:
      inputs: [
        {
          "city": "San Francisco",
          "state": "California",
          "country": "United States of America",
          "website": "https://okta.com",
          "address1": "301 Brannan St.",
          "address2": "Unit 100",
          "postalCode": "94107",
          "companyName": "Okta",
          "phoneNumber": "+1-555-415-1337",
          "supportPhoneNumber": "+1-555-514-1337",
          "endUserSupportHelpURL": "https://support.okta.com"
        }
      ]
      outputs: [
        {
          "id": "00ou8s5wploBwX4710g3",
          "city": "San Francisco",
          "state": "California",
          "_links": {
            "logo": {
              "href": "https://$yourOktaDomain.com/bc/image/fileStoreRecord?id=fs02ju1ejvy2Cv2Yx0g4"
            },
            "contacts": {
              "href": "https://$yourOktaDomain.com/api/v1/org/contacts"
            },
            "uploadLogo": {
              "href": "https://$yourOktaDomain.com/api/v1/org/logo",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            },
            "oktaSupport": {
              "href": "https://$yourOktaDomain.com/api/v1/org/privacy/oktaSupport"
            },
            "preferences": {
              "href": "https://$yourOktaDomain.com/api/v1/org/preferences"
            },
            "oktaCommunication": {
              "href": "https://$yourOktaDomain.com/api/v1/org/privacy/oktaCommunication"
            }
          },
          "status": "ACTIVE",
          "country": "United States of America",
          "created": "2020-10-26T15:03:08.000Z",
          "website": "https://okta.com",
          "address1": "301 Brannan St.",
          "address2": "Unit 100",
          "expiresAt": null,
          "subdomain": "okta",
          "postalCode": "94107",
          "companyName": "Okta",
          "lastUpdated": "2021-01-20T21:02:28.000Z",
          "phoneNumber": "+1-555-415-1337",
          "supportPhoneNumber": "+1-555-514-1337",
          "endUserSupportHelpURL": "https://support.okta.com"
        }
      ]
  org.updateUserOfContactType:
    description: |-
      Updates the User associated with the specified Contact Type
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#update-user-of-contact-type
    example:
      inputs: [
        {
          "userId": "00uuibMot2FBByTbs0g3"
        }
      ]
      outputs: [
        {
          "_links": {
            "user": {
              "href": "https://$yourOktaDomain.com/api/v1/users/00uuibMot2FBByTbs0g3"
            }
          },
          "userId": "00uuibMot2FBByTbs0g3"
        }
      ]
  org.uploadLogoForOrg:
    description: |-
      Updates the logo for your org
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/org/#upload-logo-for-org
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  policy.activatePolicy:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#activate-a-policy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  policy.activateRule:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#activate-a-rule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  policy.createPolicy:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#create-a-policy
    example:
      inputs: [
        {
          "name": "Default Policy",
          "type": "OKTA_SIGN_ON",
          "status": "ACTIVE",
          "conditions": {
            "people": {
              "groups": {
                "include": [
                  "00glr9dY4kWK9k5ZM0g3"
                ]
              }
            }
          },
          "description": "The default policy applies in all situations if no other policy applies."
        }
      ]
      outputs: [
        {
          "id": "00pmez6igjv4TYOLl0g3",
          "name": "Sales Policy",
          "type": "OKTA_SIGN_ON",
          "_links": {
            "self": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "rules": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3/rules",
              "hints": {
                "allow": [
                  "GET",
                  "POST"
                ]
              }
            },
            "deactivate": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "created": "2017-01-11T18:53:00.000Z",
          "priority": 1,
          "conditions": {
            "people": {
              "groups": {
                "include": [
                  "00gmexWGbl9VauvTP0g3"
                ]
              }
            }
          },
          "description": "Policy for Sales Department",
          "lastUpdated": "2017-01-11T18:53:00.000Z"
        }
      ]
  policy.createRule:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#create-a-rule
    example:
      inputs: [
        {
          "name": "New Policy Rule",
          "type": "SIGN_ON",
          "actions": {
            "signon": {
              "access": "ALLOW"
            }
          },
          "conditions": {
            "people": {
              "users": {
                "exclude": []
              }
            },
            "network": {
              "include": [
                "nzowdja2YRaQmOQYp0g3"
              ],
              "connection": "ZONE"
            },
            "authContext": {
              "authType": "ANY"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0prlmqTXCzP5SegYJ0g3",
          "name": "Legacy Rule",
          "type": "PASSWORD",
          "_links": {
            "self": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00plmpDXfWU34nb280g3/rules/0prlmqTXCzP5SegYJ0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00plmpDXfWU34nb280g3/rules/0prlmqTXCzP5SegYJ0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "actions": {
            "passwordChange": {
              "access": "ALLOW"
            },
            "selfServiceUnlock": {
              "access": "DENY"
            },
            "selfServicePasswordReset": {
              "access": "ALLOW"
            }
          },
          "created": "2017-01-10T21:42:22.000Z",
          "priority": 1,
          "conditions": {
            "people": {
              "users": {
                "exclude": []
              }
            },
            "network": {
              "connection": "ANYWHERE"
            }
          },
          "lastUpdated": "2017-01-10T21:42:22.000Z"
        }
      ]
  policy.deactivatePolicy:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#deactivate-a-policy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  policy.deactivateRule:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#deactivate-a-rule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  policy.deleteRule:
    description: |-
      The Policy ID described in the Policy object is required.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#delete-a-rule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  policy.deletePolicy:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#delete-policy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  policy.getPoliciesByType:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#get-all-policies-by-type
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00pmez6igjv4TYOLl0g3",
          "name": "Sales Policy",
          "type": "OKTA_SIGN_ON",
          "_links": {
            "self": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "rules": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3/rules",
              "hints": {
                "allow": [
                  "GET",
                  "POST"
                ]
              }
            },
            "deactivate": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "created": "2017-01-11T18:53:00.000Z",
          "priority": 1,
          "conditions": {
            "people": {
              "groups": {
                "include": [
                  "00gmexWGbl9VauvTP0g3"
                ]
              }
            }
          },
          "description": "Policy for Sales Department",
          "lastUpdated": "2017-01-11T18:53:00.000Z"
        }
      ]
  policy.getPolicy:
    description: |-
      The Policy ID described in the Policy object is required.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#get-a-policy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00pmez6igjv4TYOLl0g3",
          "name": "Sales Policy",
          "type": "OKTA_SIGN_ON",
          "_links": {
            "self": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "rules": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3/rules",
              "hints": {
                "allow": [
                  "GET",
                  "POST"
                ]
              }
            },
            "deactivate": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "created": "2017-01-11T18:53:00.000Z",
          "priority": 1,
          "conditions": {
            "people": {
              "groups": {
                "include": [
                  "00gmexWGbl9VauvTP0g3"
                ]
              }
            }
          },
          "description": "Policy for Sales Department",
          "lastUpdated": "2017-01-11T18:53:00.000Z"
        }
      ]
  policy.getPolicyWithRules:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#get-a-policy-with-rules
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00pmez6igjv4TYOLl0g3",
          "name": "Sales Policy",
          "type": "OKTA_SIGN_ON",
          "_links": {
            "self": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "rules": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3/rules",
              "hints": {
                "allow": [
                  "GET",
                  "POST"
                ]
              }
            },
            "deactivate": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "created": "2017-01-11T18:53:00.000Z",
          "priority": 1,
          "conditions": {
            "people": {
              "groups": {
                "include": [
                  "00gmexWGbl9VauvTP0g3"
                ]
              }
            }
          },
          "description": "Policy for Sales Department",
          "lastUpdated": "2017-01-11T18:53:00.000Z"
        }
      ]
  policy.getRule:
    description: |-
      The policy ID described in the Policy object is required.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#get-a-rule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0prlmqTXCzP5SegYJ0g3",
          "name": "Legacy Rule",
          "type": "PASSWORD",
          "_links": {
            "self": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00plmpDXfWU34nb280g3/rules/0prlmqTXCzP5SegYJ0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00plmpDXfWU34nb280g3/rules/0prlmqTXCzP5SegYJ0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "actions": {
            "passwordChange": {
              "access": "ALLOW"
            },
            "selfServiceUnlock": {
              "access": "DENY"
            },
            "selfServicePasswordReset": {
              "access": "ALLOW"
            }
          },
          "created": "2017-01-10T21:42:22.000Z",
          "priority": 1,
          "conditions": {
            "people": {
              "users": {
                "exclude": []
              }
            },
            "network": {
              "connection": "ANYWHERE"
            }
          },
          "lastUpdated": "2017-01-10T21:42:22.000Z"
        }
      ]
  policy.getPolicyRules:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#get-policy-rules
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0prlmqTXCzP5SegYJ0g3",
          "name": "Legacy Rule",
          "type": "PASSWORD",
          "_links": {
            "self": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00plmpDXfWU34nb280g3/rules/0prlmqTXCzP5SegYJ0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00plmpDXfWU34nb280g3/rules/0prlmqTXCzP5SegYJ0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "actions": {
            "passwordChange": {
              "access": "ALLOW"
            },
            "selfServiceUnlock": {
              "access": "DENY"
            },
            "selfServicePasswordReset": {
              "access": "ALLOW"
            }
          },
          "created": "2017-01-10T21:42:22.000Z",
          "priority": 1,
          "conditions": {
            "people": {
              "users": {
                "exclude": []
              }
            },
            "network": {
              "connection": "ANYWHERE"
            }
          },
          "lastUpdated": "2017-01-10T21:42:22.000Z"
        }
      ]
  policy.updatePolicy:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#update-a-policy
    example:
      inputs: [
        {
          "id": "00plrilJ7jZ66Gn0X0g3",
          "name": "Default Policy",
          "type": "OKTA_SIGN_ON",
          "status": "ACTIVE",
          "priority": 1,
          "conditions": {
            "people": {
              "groups": {
                "include": [
                  "00glr9dY4kWK9k5ZM0g3"
                ]
              }
            }
          },
          "description": "The default policy applies in all situations if no other policy applies."
        }
      ]
      outputs: [
        {
          "id": "00pmez6igjv4TYOLl0g3",
          "name": "Sales Policy",
          "type": "OKTA_SIGN_ON",
          "_links": {
            "self": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "rules": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3/rules",
              "hints": {
                "allow": [
                  "GET",
                  "POST"
                ]
              }
            },
            "deactivate": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00pmez6igjv4TYOLl0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "created": "2017-01-11T18:53:00.000Z",
          "priority": 1,
          "conditions": {
            "people": {
              "groups": {
                "include": [
                  "00gmexWGbl9VauvTP0g3"
                ]
              }
            }
          },
          "description": "Policy for Sales Department",
          "lastUpdated": "2017-01-11T18:53:00.000Z"
        }
      ]
  policy.updateRule:
    description: ''
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/policy/#update-a-rule
    example:
      inputs: [
        {
          "name": "My Updated Policy Rule",
          "type": "PASSWORD",
          "actions": {
            "signon": {
              "access": "DENY"
            }
          },
          "conditions": {
            "people": {
              "users": {
                "exclude": []
              }
            },
            "network": {
              "include": [
                "nzowdja2YRaQmOQYp0g3"
              ],
              "connection": "ZONE"
            },
            "authContext": {
              "authType": "ANY"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "0prlmqTXCzP5SegYJ0g3",
          "name": "Legacy Rule",
          "type": "PASSWORD",
          "_links": {
            "self": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00plmpDXfWU34nb280g3/rules/0prlmqTXCzP5SegYJ0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "http://ed.okta1.com:1802/api/v1/policies/00plmpDXfWU34nb280g3/rules/0prlmqTXCzP5SegYJ0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "actions": {
            "passwordChange": {
              "access": "ALLOW"
            },
            "selfServiceUnlock": {
              "access": "DENY"
            },
            "selfServicePasswordReset": {
              "access": "ALLOW"
            }
          },
          "created": "2017-01-10T21:42:22.000Z",
          "priority": 1,
          "conditions": {
            "people": {
              "users": {
                "exclude": []
              }
            },
            "network": {
              "connection": "ANYWHERE"
            }
          },
          "lastUpdated": "2017-01-10T21:42:22.000Z"
        }
      ]
  roles.addGroupTargetToGroupAdministratorRoleGivenToGroup:
    description: |-
      Adds a Group target for a USER_ADMIN or HELP_DESK_ADMIN Role assigned to a Group
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#add-a-group-target-to-a-group-administrator-role-given-to-a-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.addGroupTargetToGroupAdministratorRoleGivenToUser:
    description: |-
      Adds a Group target for a USER_ADMIN or HELP_DESK_ADMIN Role assigned to a User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#add-a-group-target-to-a-group-administrator-role-given-to-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.addAppInstanceTargetToAppAdministratorRoleGivenToGroup:
    description: |-
      GET /api/v1/users/${userId}/roles/${roleId}/targets/catalog/apps
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#add-an-app-instance-target-to-an-app-administrator-role-given-to-a-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.addAppInstanceTargetToAppAdministratorRoleGivenToUser:
    description: |-
      Adds an App Instance target for an APP_ADMIN Role assigned to a User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#add-an-app-instance-target-to-an-app-administrator-role-given-to-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.addAppTargetToAppAdministratorRoleGivenToGroup:
    description: |-
      Adds an App target for an APP_ADMIN role assigned to a group
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#add-an-app-target-to-an-app-administrator-role-given-to-a-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.addAppTargetToAppAdministratorRoleGivenToUser:
    description: |-
      Adds an App target for an APP_ADMIN Role assigned to a User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#add-an-app-target-to-an-app-administrator-role-given-to-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.assignRoleToGroup:
    description: |-
      Assigns a Role to a Group
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#assign-a-role-to-a-group
    example:
      inputs: [
        {
          "type": "ORG_ADMIN"
        }
      ]
      outputs: [
        {
          "id": "grasraHPx7i79ajaJ0g3",
          "type": "ORG_ADMIN",
          "label": "Organization Administrator",
          "_links": {
            "assignee": {
              "href": "http://$yourOktaDomain/api/v1/groups/00gsr2IepS8YhHRFf0g3"
            }
          },
          "status": "ACTIVE",
          "created": "2019-02-27T14:56:55.000Z",
          "lastUpdated": "2019-02-27T14:56:55.000Z",
          "assignmentType": "GROUP"
        }
      ]
  roles.assignRoleToUser:
    description: |-
      Assigns a Role to a User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#assign-a-role-to-a-user
    example:
      inputs: [
        {
          "type": "SUPER_ADMIN"
        }
      ]
      outputs: [
        {
          "id": "ra1b8anIk7rx7em7L0g4",
          "type": "SUPER_ADMIN",
          "label": "Super Organization Administrator",
          "status": "ACTIVE",
          "created": "2015-09-06T15:28:47.000Z",
          "lastUpdated": "2015-09-06T15:28:47.000Z"
        }
      ]
  roles.grantThirdPartyAdminStatusToGroup:
    description: |-
      You can grant third-party admin status when you are adding a new admin using the API. You can do this by using an optional query parameter on the Administrator Roles API called disableNotifications.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#grant-third-party-admin-status-to-a-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.grantThirdPartyAdminStatusToUser:
    description: |-
      You can grant third-party admin status when you are adding a new admin using the API. You can do this by using an optional query parameter on the Administrator Roles API called disableNotifications.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#grant-third-party-admin-status-to-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.listAppTargetsForAppAdministratorRoleGivenToGroup:
    description: |-
      Lists all App targets for an APP_ADMIN Role assigned to a Group
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#list-app-targets-for-an-app-administrator-role-given-to-a-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "name": "facebook",
          "_links": {
            "logo": [
              {
                "href": "http://$yourOktaDomain/assets/img/logos/facebook.e8215796628b5eaf687ba414ae245659.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "self": {
              "href": "http://$yourOktaDomain/api/v1/catalog/apps/facebook"
            }
          },
          "status": "ACTIVE",
          "website": "http://www.facebook.com/",
          "category": "SOCIAL",
          "description": "Giving people the power to share and make the world more open and connected.",
          "displayName": "Facebook",
          "lastUpdated": "2017-07-19T23:37:37.000Z",
          "signOnModes": [
            "BROWSER_PLUGIN"
          ],
          "verificationStatus": "OKTA_VERIFIED"
        }
      ]
  roles.listAppTargetsForAppAdministratorRoleGivenToUser:
    description: |-
      Lists all App targets for an APP_ADMIN Role assigned to a User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#list-app-targets-for-an-app-administrator-role-given-to-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "name": "salesforce",
          "_links": {
            "logo": [
              {
                "href": "https://${yourOktaDomain}/img/logos/salesforce_logo.png",
                "name": "medium",
                "type": "image/png"
              }
            ],
            "self": {
              "href": "https://${yourOktaDomain}/api/v1/catalog/apps/salesforce"
            }
          },
          "status": "ACTIVE",
          "website": "http://www.salesforce.com",
          "category": "CRM",
          "features": [
            "IMPORT_NEW_USERS",
            "IMPORT_PROFILE_UPDATES",
            "IMPORT_USER_SCHEMA",
            "PUSH_NEW_USERS",
            "PUSH_PASSWORD_UPDATES",
            "PUSH_PROFILE_UPDATES",
            "PUSH_USER_DEACTIVATION",
            "REACTIVATE_USERS"
          ],
          "description": "Salesforce",
          "displayName": "Salesforce.com",
          "lastUpdated": "2014-06-03T16:17:13.000Z",
          "signOnModes": [
            "SAML_2_0"
          ],
          "verificationStatus": "OKTA_VERIFIED"
        }
      ]
  roles.listGroupTargetsForTheGroupAdministratorRoleGivenToGroup:
    description: |-
      Lists all Group targets for a USER_ADMIN or HELP_DESK_ADMIN Role assigned to a User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#list-group-targets-for-the-group-administrator-role-given-to-a-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00gsrc96agspOaiP40g3",
          "type": "OKTA_GROUP",
          "_links": {
            "apps": {
              "href": "http://${yourOktaDomain}/api/v1/groups/00gsrc96agspOaiP40g3/apps"
            },
            "logo": [
              {
                "href": "http://${yourOktaDomain}/assets/img/logos/groups/okta-medium.d7fb831bc4e7e1a5d8bd35dfaf405d9e.png",
                "name": "medium",
                "type": "image/png"
              },
              {
                "href": "http://${yourOktaDomain}/assets/img/logos/groups/okta-large.511fcb0de9da185b52589cb14d581c2c.png",
                "name": "large",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "http://${yourOktaDomain}/api/v1/groups/00gsrc96agspOaiP40g3/users"
            }
          },
          "created": "2019-02-27T15:19:11.000Z",
          "profile": {
            "name": "userGroup0",
            "description": null
          },
          "lastUpdated": "2019-02-27T15:19:11.000Z",
          "objectClass": [
            "okta:user_group"
          ],
          "lastMembershipUpdated": "2019-02-27T15:19:11.000Z"
        }
      ]
  roles.listGroupTargetsForTheGroupAdministratorRoleGivenToUser:
    description: |-
      Lists all Group targets for a USER_ADMIN or HELP_DESK_ADMIN Role assigned to a User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#list-group-targets-for-the-group-administrator-role-given-to-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00g1emaKYZTWRYYRRTSK",
          "_links": {
            "apps": {
              "href": "https://${yourOktaDomain}/api/v1/groups/00g1emaKYZTWRYYRRTSK/apps"
            },
            "logo": [
              {
                "href": "https://${yourOktaDomain}/img/logos/groups/okta-medium.png",
                "name": "medium",
                "type": "image/png"
              },
              {
                "href": "https://${yourOktaDomain}/img/logos/groups/okta-large.png",
                "name": "large",
                "type": "image/png"
              }
            ],
            "users": {
              "href": "https://${yourOktaDomain}/api/v1/groups/00g1emaKYZTWRYYRRTSK/users"
            }
          },
          "profile": {
            "name": "West Coast Users",
            "description": "All Users West of The Rockies"
          },
          "objectClass": [
            "okta:user_group"
          ]
        }
      ]
  roles.listRolesAssignedToGroup:
    description: |-
      Lists all Roles assigned to a Group
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#list-roles-assigned-to-a-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "IFIFAX2BIRGUSTQ",
          "type": "APP_ADMIN",
          "label": "Application Administrator",
          "_links": {
            "assignee": {
              "href": "http://$yourOktaDomain/api/v1/groups/00gsr2IepS8YhHRFf0g3"
            }
          },
          "status": "ACTIVE",
          "created": "2019-02-27T14:48:59.000Z",
          "lastUpdated": "2019-02-27T14:48:59.000Z",
          "assignmentType": "GROUP"
        }
      ]
  roles.listRolesAssignedToUser:
    description: |-
      Lists all Roles assigned to a User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#list-roles-assigned-to-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "IFIFAX2BIRGUSTQ",
          "type": "APP_ADMIN",
          "label": "Application Administrator",
          "_links": {
            "assignee": {
              "href": "http://$yourOktaDomain/api/v1/users/00ur32Vg0fvpyHZeQ0g3"
            }
          },
          "status": "ACTIVE",
          "created": "2019-02-06T16:17:40.000Z",
          "lastUpdated": "2019-02-06T16:17:40.000Z",
          "assignmentType": "USER"
        }
      ]
  roles.removeGroupTargetFromGroupAdministratorRoleGivenToGroup:
    description: |-
      Removes a Group target from a USER_ADMIN or HELP_DESK_ADMIN Role assigned to a Group
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#remove-a-group-target-from-a-group-administrator-role-given-to-a-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.removeGroupTargetFromGroupAdministratorRoleGivenToUser:
    description: |-
      Removes a Group target from a USER_ADMIN or HELP_DESK_ADMIN Role assigned to a User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#remove-a-group-target-from-a-group-administrator-role-given-to-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.removeAppInstanceTargetFromAppAdministratorRoleGivenToGroup:
    description: |-
      Removes an App instance target from an APP_ADMIN Role assigned to a Group
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#remove-an-app-instance-target-from-an-app-administrator-role-given-to-a-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.removeAppInstanceTargetFromAppAdministratorRoleGivenToUser:
    description: |-
      Removes an App instance target from an APP_ADMIN Role assigned to a User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#remove-an-app-instance-target-from-an-app-administrator-role-given-to-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.removeAppTargetFromAppAdministratorRoleGivenToGroup:
    description: |-
      Removes an App target from an APP_ADMIN Role assigned to a Group
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#remove-an-app-target-from-an-app-administrator-role-given-to-a-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.removeAppTargetFromAppAdministratorRoleGivenToUser:
    description: |-
      Removes an App target from an APP_ADMIN Role assigned to a User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#remove-an-app-target-from-an-app-administrator-role-given-to-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.unassignRoleFromGroup:
    description: |-
      Unassigns a Role from a Group
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#unassign-a-role-from-a-group
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  roles.unassignRoleFromUser:
    description: |-
      Unassigns a Role from a User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/roles/#unassign-a-role-from-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  schemas.addPropertyToAppUserProfileSchema:
    description: |-
      Adds one or more custom App User Profile properties to the App User schema
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/schemas/#add-property-to-app-user-profile-schema
    example:
      inputs: [
        {
          "definitions": {
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "twitterUserName": {
                  "type": "string",
                  "title": "Twitter username",
                  "required": false,
                  "maxLength": 20,
                  "minLength": 1,
                  "description": "User'''s username for twitter.com"
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "https://$yourOktaDomain/meta/schemas/apps/0oa25gejWwdXNnFH90g4/default",
          "name": "Example App",
          "type": "object",
          "title": "Example App User",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "created": "2017-07-18T22:35:30.000Z",
          "properties": {
            "profile": {
              "allOf": [
                {
                  "$ref": "#/definitions/base"
                },
                {
                  "$ref": "#/definitions/custom"
                }
              ]
            }
          },
          "definitions": {
            "base": {
              "id": "#base",
              "type": "object",
              "required": [
                "userName"
              ],
              "properties": {
                "userName": {
                  "type": "string",
                  "scope": "NONE",
                  "title": "Username",
                  "required": true,
                  "maxLength": 100
                }
              }
            },
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "twitterUserName": {
                  "type": "string",
                  "scope": "NONE",
                  "title": "Twitter username",
                  "maxLength": 20,
                  "minLength": 1,
                  "description": "User's username for twitter.com"
                }
              }
            }
          },
          "lastUpdated": "2017-07-18T23:18:43.000Z"
        }
      ]
  schemas.addPropertyToGroupProfileSchema:
    description: |-
      Adds one or more custom Group Profile Schema properties to the group schema.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/schemas/#add-property-to-group-profile-schema
    example:
      inputs: [
        {
          "definitions": {
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "groupContact": {
                  "type": "string",
                  "title": "Group administrative contact",
                  "required": false,
                  "maxLength": 20,
                  "minLength": 1,
                  "description": "Group administrative contact",
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "https://$yourOktaDomain/meta/schemas/group/default",
          "name": "group",
          "type": "object",
          "title": "Okta group",
          "_links": {
            "self": {
              "rel": "self",
              "href": "http://$yourOktaDomain/api/v1/meta/schemas/group/default",
              "method": "GET"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "created": "2021-01-30T00:18:24.000Z",
          "properties": {
            "profile": {
              "allOf": [
                {
                  "$ref": "#/definitions/custom"
                },
                {
                  "$ref": "#/definitions/base"
                }
              ]
            }
          },
          "definitions": {
            "base": {
              "id": "#base",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {}
            },
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "groupContact": {
                  "type": "string",
                  "scope": "NONE",
                  "title": "Group administrative contact",
                  "master": {
                    "type": "PROFILE_MASTER"
                  },
                  "mutability": "READ_WRITE",
                  "description": "Group administrative contact",
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            }
          },
          "description": "Okta group profile template",
          "lastUpdated": "2021-02-25T23:05:31.000Z"
        }
      ]
  schemas.addPropertyToUserProfileSchema:
    description: |-
      Adds one or more custom User Profile properties to the user schema
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/schemas/#add-property-to-user-profile-schema
    example:
      inputs: [
        {
          "definitions": {
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "twitterUserName": {
                  "type": "string",
                  "title": "Twitter username",
                  "required": false,
                  "maxLength": 20,
                  "minLength": 1,
                  "description": "Twitter Username",
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "https://$yourOktaDomain/meta/schemas/user/default",
          "name": "user",
          "type": "object",
          "title": "Default Okta User",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "created": "2015-02-02T10:27:36.000Z",
          "properties": {
            "profile": {
              "allOf": [
                {
                  "$ref": "#/definitions/base"
                },
                {
                  "$ref": "#/definitions/custom"
                }
              ]
            }
          },
          "definitions": {
            "base": {
              "id": "#base",
              "type": "object",
              "required": [
                "login",
                "firstName",
                "lastName",
                "email"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "title": "Primary email",
                  "format": "email",
                  "required": true,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                },
                "login": {
                  "type": "string",
                  "title": "Username",
                  "required": true,
                  "maxLength": 100,
                  "minLength": 5,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                },
                "lastName": {
                  "type": "string",
                  "title": "Last name",
                  "required": true,
                  "maxLength": 50,
                  "minLength": 1,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                },
                "firstName": {
                  "type": "string",
                  "title": "First name",
                  "required": true,
                  "maxLength": 50,
                  "minLength": 1,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            },
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "twitterUserName": {
                  "type": "string",
                  "title": "Twitter username",
                  "required": false,
                  "maxLength": 20,
                  "minLength": 1,
                  "description": "User's username for twitter.com",
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            }
          },
          "lastUpdated": "2015-09-05T10:40:45.000Z"
        }
      ]
  schemas.getAppUserSchema:
    description: |-
      Fetches the Schema for an App User
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/schemas/#get-app-user-schema
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "https://$yourOktaDomain/meta/schemas/apps/0oa25gejWwdXNnFH90g4/default",
          "name": "Example App",
          "type": "object",
          "title": "Example App User",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "created": "2017-07-18T22:35:30.000Z",
          "properties": {
            "profile": {
              "allOf": [
                {
                  "$ref": "#/definitions/base"
                },
                {
                  "$ref": "#/definitions/custom"
                }
              ]
            }
          },
          "definitions": {
            "base": {
              "id": "#base",
              "type": "object",
              "required": [
                "userName"
              ],
              "properties": {
                "userName": {
                  "type": "string",
                  "scope": "NONE",
                  "title": "Username",
                  "required": true,
                  "maxLength": 100
                }
              }
            },
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {}
            }
          },
          "lastUpdated": "2017-07-18T23:18:43.000Z"
        }
      ]
  schemas.getGroupSchema:
    description: |-
      Fetches the group schema.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/schemas/#get-group-schema
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "https://$yourOktaDomain/meta/schemas/group/default",
          "name": "group",
          "type": "object",
          "title": "Okta group",
          "_links": {
            "self": {
              "rel": "self",
              "href": "http://$yourOktaDomain/api/v1/meta/schemas/group/default",
              "method": "GET"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "created": "2021-01-30T00:18:24.000Z",
          "properties": {
            "profile": {
              "allOf": [
                {
                  "$ref": "#/definitions/custom"
                },
                {
                  "$ref": "#/definitions/base"
                }
              ]
            }
          },
          "definitions": {
            "base": {
              "id": "#base",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "scope": "NONE",
                  "title": "Name",
                  "master": {
                    "type": "PROFILE_MASTER"
                  },
                  "required": true,
                  "maxLength": 255,
                  "mutability": "READ_WRITE",
                  "description": "Name",
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                },
                "description": {
                  "type": "string",
                  "scope": "NONE",
                  "title": "Description",
                  "master": {
                    "type": "PROFILE_MASTER"
                  },
                  "maxLength": 1024,
                  "mutability": "READ_WRITE",
                  "description": "Description",
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            },
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [
                "exampleCustomProperty"
              ],
              "properties": {
                "exampleCustomProperty": {
                  "type": "string",
                  "scope": "NONE",
                  "title": "exampleCustomProperty",
                  "master": {
                    "type": "PROFILE_MASTER"
                  },
                  "unique": "UNIQUE_VALIDATED",
                  "required": true,
                  "maxLength": 20,
                  "minLength": 1,
                  "mutability": "READ_WRITE",
                  "description": "exampleCustomProperty",
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            }
          },
          "description": "Okta group profile template",
          "lastUpdated": "2021-02-19T08:51:57.000Z"
        }
      ]
  schemas.getUserSchema:
    description: |-
      Fetches the schema for a User Type
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/schemas/#get-user-schema
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "https://$yourOktaDomain/meta/schemas/user/default",
          "name": "user",
          "type": "object",
          "title": "Default Okta User",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "created": "2015-02-02T10:27:36.000Z",
          "properties": {
            "profile": {
              "allOf": [
                {
                  "$ref": "#/definitions/base"
                },
                {
                  "$ref": "#/definitions/custom"
                }
              ]
            }
          },
          "definitions": {
            "base": {
              "id": "#base",
              "type": "object",
              "required": [
                "login",
                "firstName",
                "lastName",
                "email"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "title": "Primary email",
                  "format": "email",
                  "required": true,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                },
                "login": {
                  "type": "string",
                  "title": "Username",
                  "required": true,
                  "maxLength": 100,
                  "minLength": 5,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                },
                "lastName": {
                  "type": "string",
                  "title": "Last name",
                  "required": true,
                  "maxLength": 50,
                  "minLength": 1,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                },
                "firstName": {
                  "type": "string",
                  "title": "First name",
                  "required": true,
                  "maxLength": 50,
                  "minLength": 1,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            },
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {}
            }
          },
          "lastUpdated": "2015-09-05T10:40:45.000Z"
        }
      ]
  schemas.removePropertyFromAppUserProfileSchema:
    description: |-
      Removes one or more custom App User Profile properties from the App User Schema
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/schemas/#remove-property-from-app-user-profile-schema
    example:
      inputs: [
        {
          "definitions": {
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "twitterUserName": null
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "https://$yourOktaDomain/meta/schemas/apps/0oa25gejWwdXNnFH90g4/default",
          "name": "Example App",
          "type": "object",
          "title": "Example App User",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "created": "2017-07-18T22:35:30.000Z",
          "properties": {
            "profile": {
              "allOf": [
                {
                  "$ref": "#/definitions/base"
                },
                {
                  "$ref": "#/definitions/custom"
                }
              ]
            }
          },
          "definitions": {
            "base": {
              "id": "#base",
              "type": "object",
              "required": [
                "userName"
              ],
              "properties": {
                "userName": {
                  "type": "string",
                  "scope": "NONE",
                  "title": "Username",
                  "required": true,
                  "maxLength": 100
                }
              }
            },
            "custom": {
              "id": "#custom",
              "type": "object",
              "properties": {}
            }
          },
          "lastUpdated": "2017-07-19T17:11:22.000Z"
        }
      ]
  schemas.removePropertyFromGroupProfileSchema:
    description: |-
      Removes one or more custom Group Profile Schema properties from the group schema. Currently, Okta doesn't support removing base Group Profile properties.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/schemas/#remove-property-from-group-profile-schema
    example:
      inputs: [
        {
          "definitions": {
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "groupContact": null
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "https://$yourOktaDomain/meta/schemas/group/default",
          "name": "group",
          "type": "object",
          "title": "Okta group",
          "_links": {
            "self": {
              "rel": "self",
              "href": "http://$yourOktaDomain/api/v1/meta/schemas/group/default",
              "method": "GET"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "created": "2021-01-30T00:18:24.000Z",
          "properties": {
            "profile": {
              "allOf": [
                {
                  "$ref": "#/definitions/custom"
                },
                {
                  "$ref": "#/definitions/base"
                }
              ]
            }
          },
          "definitions": {
            "base": {
              "id": "#base",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {}
            },
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "remainingOtherCustomProperty": {
                  "type": "string",
                  "scope": "NONE",
                  "title": "Lorem ipsum",
                  "master": {
                    "type": "PROFILE_MASTER"
                  },
                  "mutability": "READ_WRITE",
                  "description": "A property that was not deleted",
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            }
          },
          "description": "Okta group profile template",
          "lastUpdated": "2021-02-25T23:05:31.000Z"
        }
      ]
  schemas.removePropertyFromUserProfileSchema:
    description: |-
      Removes one or more custom User Profile properties from the user schema. You can't remove a property from the default Schema if it is being referenced as a matchAttribute in SAML2 IdPs. Currently, all validation of SAML assertions is only performed against the default user type.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/schemas/#remove-property-from-user-profile-schema
    example:
      inputs: [
        {
          "definitions": {
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "twitterUserName": null
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "https://$yourOktaDomain/meta/schemas/user/default",
          "name": "user",
          "type": "object",
          "title": "Default Okta User",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "created": "2015-02-02T10:27:36.000Z",
          "properties": {
            "profile": {
              "allOf": [
                {
                  "$ref": "#/definitions/base"
                },
                {
                  "$ref": "#/definitions/custom"
                }
              ]
            }
          },
          "definitions": {
            "base": {
              "id": "#base",
              "type": "object",
              "required": [
                "login",
                "firstName",
                "lastName",
                "email"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "title": "Primary email",
                  "format": "email",
                  "required": true,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                },
                "login": {
                  "type": "string",
                  "title": "Username",
                  "required": true,
                  "maxLength": 100,
                  "minLength": 5,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                },
                "lastName": {
                  "type": "string",
                  "title": "Last name",
                  "required": true,
                  "maxLength": 50,
                  "minLength": 1,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                },
                "firstName": {
                  "type": "string",
                  "title": "First name",
                  "required": true,
                  "maxLength": 50,
                  "minLength": 1,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            },
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {}
            }
          },
          "lastUpdated": "2015-09-05T10:40:45.000Z"
        }
      ]
  schemas.updateAppUserProfileSchemaProperty:
    description: |-
      Updates one or more custom App User Profile properties in the schema, or the nullability of a base property. Changing a base property's nullability (for example, the value of its required field) is allowed only if it is nullable in the default predefined Schema for the App.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/schemas/#update-app-user-profile-schema-property
    example:
      inputs: [
        {
          "definitions": {
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "twitterUserName": {
                  "type": "string",
                  "title": "Twitter username",
                  "required": false,
                  "maxLength": 10,
                  "minLength": 1,
                  "description": "User'''s username for twitter.com"
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "https://$yourOktaDomain/meta/schemas/apps/0oa25gejWwdXNnFH90g4/default",
          "name": "Example App",
          "type": "object",
          "title": "Example App User",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "created": "2017-07-18T22:35:30.000Z",
          "properties": {
            "profile": {
              "allOf": [
                {
                  "$ref": "#/definitions/base"
                },
                {
                  "$ref": "#/definitions/custom"
                }
              ]
            }
          },
          "definitions": {
            "base": {
              "id": "#base",
              "type": "object",
              "required": [
                "userName"
              ],
              "properties": {
                "userName": {
                  "type": "string",
                  "scope": "NONE",
                  "title": "Username",
                  "required": true,
                  "maxLength": 100
                }
              }
            },
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "twitterUserName": {
                  "type": "string",
                  "scope": "NONE",
                  "title": "Twitter username",
                  "maxLength": 10,
                  "minLength": 1,
                  "description": "User's username for twitter.com"
                }
              }
            }
          },
          "lastUpdated": "2017-07-19T17:01:05.000Z"
        }
      ]
  schemas.updateGroupProfileSchemaProperty:
    description: |-
      Updates one or more custom Group Profile properties in the schema. Currently Okta does not support changing base Group Profile properties.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/schemas/#update-group-profile-schema-property
    example:
      inputs: [
        {
          "definitions": {
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "groupContact": {
                  "type": "string",
                  "title": "Group administrative contact",
                  "required": false,
                  "maxLength": 20,
                  "minLength": 1,
                  "description": "Group administrative contact",
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "https://$yourOktaDomain/meta/schemas/group/default",
          "name": "group",
          "type": "object",
          "title": "Okta group",
          "_links": {
            "self": {
              "rel": "self",
              "href": "http://$yourOktaDomain/api/v1/meta/schemas/group/default",
              "method": "GET"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "created": "2021-01-30T00:18:24.000Z",
          "properties": {
            "profile": {
              "allOf": [
                {
                  "$ref": "#/definitions/custom"
                },
                {
                  "$ref": "#/definitions/base"
                }
              ]
            }
          },
          "definitions": {
            "base": {
              "id": "#base",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {}
            },
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "groupContact": {
                  "type": "string",
                  "scope": "NONE",
                  "title": "Group administrative contact",
                  "master": {
                    "type": "PROFILE_MASTER"
                  },
                  "mutability": "READ_WRITE",
                  "description": "Group administrative contact",
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            }
          },
          "description": "Okta group profile template",
          "lastUpdated": "2021-02-25T23:05:31.000Z"
        }
      ]
  schemas.updateUserProfileSchemaProperty:
    description: |-
      Updates one or more custom User Profile properties in the schema, and/or makes limited changes to base User Profile properties (permissions, nullability of the firstName and lastName properties, or pattern for login).
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/schemas/#update-user-profile-schema-property
    example:
      inputs: [
        {
          "definitions": {
            "base": {
              "id": "#base",
              "type": "object",
              "required": [],
              "properties": {
                "firstName": {
                  "type": "string",
                  "scope": "NONE",
                  "title": "First name",
                  "required": false,
                  "mutability": "READ_WRITE",
                  "permissions": [
                    {
                      "action": "READ_ONLY",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            },
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "twitterUserName": {
                  "type": "string",
                  "title": "Twitter username",
                  "required": false,
                  "maxLength": 10,
                  "minLength": 1,
                  "description": "User'''s username for twitter.com",
                  "permissions": [
                    {
                      "action": "READ_ONLY",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "https://$yourOktaDomain/meta/schemas/user/default",
          "name": "user",
          "type": "object",
          "title": "Default Okta User",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "created": "2015-02-02T10:27:36.000Z",
          "properties": {
            "profile": {
              "allOf": [
                {
                  "$ref": "#/definitions/base"
                },
                {
                  "$ref": "#/definitions/custom"
                }
              ]
            }
          },
          "definitions": {
            "base": {
              "id": "#base",
              "type": "object",
              "required": [
                "login",
                "firstName",
                "lastName",
                "email"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "title": "Primary email",
                  "format": "email",
                  "required": true,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                },
                "login": {
                  "type": "string",
                  "title": "Username",
                  "required": true,
                  "maxLength": 100,
                  "minLength": 5,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                },
                "lastName": {
                  "type": "string",
                  "title": "Last name",
                  "required": true,
                  "maxLength": 50,
                  "minLength": 1,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                },
                "firstName": {
                  "type": "string",
                  "title": "First name",
                  "required": true,
                  "maxLength": 50,
                  "minLength": 1,
                  "permissions": [
                    {
                      "action": "READ_WRITE",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            },
            "custom": {
              "id": "#custom",
              "type": "object",
              "required": [],
              "properties": {
                "twitterUserName": {
                  "type": "string",
                  "title": "Twitter username",
                  "required": false,
                  "maxLength": 10,
                  "minLength": 1,
                  "description": "User's username for twitter.com",
                  "permissions": [
                    {
                      "action": "READ_ONLY",
                      "principal": "SELF"
                    }
                  ]
                }
              }
            }
          },
          "lastUpdated": "2015-09-05T10:40:45.000Z"
        }
      ]
  sessions.closeCurrentSession:
    description: |-
      Closes the Session for the user who is currently signed in. Use this method in a browser-based application to sign out a user.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/sessions/#close-current-session
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  sessions.closeSession:
    description: |-
      Closes a user's Session (logout)
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/sessions/#close-session
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  sessions.createSessionWithSessionToken:
    description: |-
      Creates a new Session for a user with a valid session token. Use this API if, for example, you want to set the session cookie yourself instead of allowing Okta to set it, or you want to hold the Session ID to delete a Session through the API instead of visiting the logout URL.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/sessions/#create-session-with-a-session-token
    example:
      inputs: [
        {
          "sessionToken": "00HiohZYpJgMSHwmL9TQy7RRzuY-q9soKp1SPmYYow"
        }
      ]
      outputs: [
        {
          "id": "101W_juydrDRByB7fUdRyE2JQ",
          "amr": [
            "pwd"
          ],
          "idp": {
            "id": "00oi5cpnylv792IcF0g3",
            "type": "OKTA"
          },
          "login": "user@example.com",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/sessions/101W_juydrDRByB7fUdRyE2JQ",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00uit00ZK6ELuzPoD0g3",
              "name": "Isaac Brock",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "refresh": {
              "href": "https://$yourOktaDomain/api/v1/sessions/101W_juydrDRByB7fUdRyE2JQ/lifecycle/refresh",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "userId": "00ubgaSARVOQDIOXMORI",
          "expiresAt": "2015-08-30T18:41:35.818Z",
          "mfaActive": false,
          "lastFactorVerification": null,
          "lastPasswordVerification": "2015-08-30T18:41:35.818Z"
        }
      ]
  sessions.extendSession:
    description: |-
      Extends the lifetime of a user's Session
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/sessions/#extend-session
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "101W_juydrDRByB7fUdRyE2JQ",
          "amr": [
            "pwd"
          ],
          "idp": {
            "id": "00oi5cpnylv792IcF0g3",
            "type": "OKTA"
          },
          "login": "user@example.com",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/sessions/101W_juydrDRByB7fUdRyE2JQ",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00uit00ZK6ELuzPoD0g3",
              "name": "Isaac Brock",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "refresh": {
              "href": "https://$yourOktaDomain/api/v1/sessions/101W_juydrDRByB7fUdRyE2JQ/lifecycle/refresh",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "userId": "00ubgaSARVOQDIOXMORI",
          "expiresAt": "2015-08-30T18:41:35.818Z",
          "mfaActive": false,
          "lastFactorVerification": null,
          "lastPasswordVerification": "2015-08-30T18:41:35.818Z"
        }
      ]
  sessions.getCurrentSession:
    description: |-
      Gets Session information for the current user. Use this method in a browser-based application to determine if the user is signed in.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/sessions/#get-current-session
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "101W_juydrDRByB7fUdRyE2JQ",
          "amr": [
            "pwd"
          ],
          "idp": {
            "id": "01a2bcdef3GHIJKLMNOP",
            "type": "OKTA"
          },
          "login": "user@example.com",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/sessions/me",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/me",
              "name": "Isaac Brock",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "refresh": {
              "href": "https://$yourOktaDomain/api/v1/sessions/me/lifecycle/refresh",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "userId": "00u0abcdefGHIJKLMNOP",
          "createdAt": "2016-01-03T07:02:00.000Z",
          "expiresAt": "2016-01-03T09:13:17.000Z",
          "mfaActive": true,
          "lastFactorVerification": null,
          "lastPasswordVerification": "2016-01-03T07:02:00.000Z"
        }
      ]
  sessions.getSession:
    description: |-
      Gets Session information for a given Session ID
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/sessions/#get-session
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "101W_juydrDRByB7fUdRyE2JQ",
          "amr": [
            "pwd"
          ],
          "idp": {
            "id": "01a2bcdef3GHIJKLMNOP",
            "type": "OKTA"
          },
          "login": "user@example.com",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/sessions/101W_juydrDRByB7fUdRyE2JQ",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00uit00ZK6ELuzPoD0g3",
              "name": "Isaac Brock",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "refresh": {
              "href": "https://$yourOktaDomain/api/v1/sessions/101W_juydrDRByB7fUdRyE2JQ/lifecycle/refresh",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "userId": "00u0abcdefGHIJKLMNOP",
          "expiresAt": "2016-01-03T09:13:17.000Z",
          "mfaActive": true,
          "lastFactorVerification": null,
          "lastPasswordVerification": "2016-01-03T07:02:00.000Z"
        }
      ]
  sessions.refreshCurrentSession:
    description: |-
      Refreshes the Session for the current user
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/sessions/#refresh-current-session
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "101W_juydrDRByB7fUdRyE2JQ",
          "amr": [
            "pwd"
          ],
          "idp": {
            "id": "01a2bcdef3GHIJKLMNOP",
            "type": "OKTA"
          },
          "login": "user@example.com",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/sessions/me",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/me",
              "name": "Isaac Brock",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "refresh": {
              "href": "https://$yourOktaDomain/api/v1/sessions/me/lifecycle/refresh",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "userId": "00u0abcdefGHIJKLMNOP",
          "createdAt": "2016-01-03T07:02:00.000Z",
          "expiresAt": "2016-01-03T09:13:17.000Z",
          "mfaActive": true,
          "lastFactorVerification": null,
          "lastPasswordVerification": "2016-01-03T07:02:00.000Z"
        }
      ]
  sessions.refreshSession:
    description: |-
      Refreshes an existing Session using the id for that Session. (This is equivalent to the deprecated Extend Session operation).
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/sessions/#refresh-session
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "101W_juydrDRByB7fUdRyE2JQ",
          "amr": [
            "pwd"
          ],
          "idp": {
            "id": "00oi5cpnylv792IcF0g3",
            "type": "OKTA"
          },
          "login": "user@example.com",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/sessions/101W_juydrDRByB7fUdRyE2JQ",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00uit00ZK6ELuzPoD0g3",
              "name": "Isaac Brock",
              "hints": {
                "allow": [
                  "GET"
                ]
              }
            },
            "refresh": {
              "href": "https://$yourOktaDomain/api/v1/sessions/101W_juydrDRByB7fUdRyE2JQ/lifecycle/refresh",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "userId": "00ubgaSARVOQDIOXMORI",
          "expiresAt": "2015-08-30T18:41:35.818Z",
          "mfaActive": false,
          "lastFactorVerification": null,
          "lastPasswordVerification": "2015-08-30T18:41:35.818Z"
        }
      ]
  systemLog.listEvents:
    description: |-
      Fetches a list of ordered log events from your Okta organization's system log
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/system-log/#list-events
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "uuid": "f790999f-fe87-467a-9880-6982a583986c",
          "actor": {
            "id": "00u1qw1mqitPHM8AJ0g7",
            "type": "User",
            "alternateId": "admin@example.com",
            "displayName": "John Doe"
          },
          "client": {
            "zone": "OFF_NETWORK",
            "device": "Unknown",
            "ipAddress": "12.97.85.90",
            "userAgent": {
              "os": "Unknown",
              "browser": "UNKNOWN",
              "rawUserAgent": "UNKNOWN-DOWNLOAD"
            }
          },
          "outcome": {
            "result": "SUCCESS"
          },
          "version": "0",
          "severity": "INFO",
          "eventType": "user.session.start",
          "published": "2017-09-31T22:23:07.777Z",
          "transaction": {
            "id": "V04Oy4ubUOc5UuG6s9DyNQAABtc",
            "type": "WEB"
          },
          "debugContext": {
            "debugData": {
              "requestUri": "/login/do-login"
            }
          },
          "displayMessage": "User login to Okta",
          "legacyEventType": "core.user_auth.login_success",
          "authenticationContext": {
            "externalSessionId": "1013FfF-DKQSvCI4RVXChzX-w",
            "authenticationStep": 0
          }
        }
      ]
  templates.addSmsTemplate:
    description: |-
      Adds a new custom SMS Template to your organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/templates/#add-sms-template
    example:
      inputs: [
        {
          "name": "Custom",
          "type": "SMS_VERIFY_CODE",
          "template": "org.name: your verification code is code",
          "translations": {
            "es": "org.name: el código de verificación es code",
            "fr": "org.name: votre code de vérification est code",
            "it": "org.name: il codice di verifica è code"
          }
        }
      ]
      outputs: [
        {
          "id": "cstkd89Qu2ypkxNQv0g3",
          "name": "Custom",
          "type": "SMS_VERIFY_CODE",
          "created": "2016-06-23T17:20:22.000Z",
          "template": "org.name: your verification code is code",
          "lastUpdated": "2016-06-23T17:20:22.000Z",
          "translations": {
            "es": "org.name: el código de verificación es code",
            "fr": "org.name: votre code de vérification est code",
            "it": "org.name: il codice di verifica è code"
          }
        }
      ]
  templates.getSmsTemplate:
    description: |-
      Fetches a specific Template by id
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/templates/#get-sms-template
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "cstkd89Qu2ypkxNQv0g3",
          "name": "Custom",
          "type": "SMS_VERIFY_CODE",
          "created": "2016-06-23T17:20:22.000Z",
          "template": "org.name: your verification code is code",
          "lastUpdated": "2016-06-23T17:20:22.000Z",
          "translations": {
            "es": "org.name: el código de verificación es code",
            "fr": "org.name: votre code de vérification est code",
            "it": "org.name: il codice di verifica è code"
          }
        }
      ]
  templates.listSmsTemplates:
    description: |-
      Enumerates custom SMS Templates in your organization. Optionally, a subset of Templates can be returned that match a Template type.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/templates/#list-sms-templates
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "cstkdgSQOUacCuF750g3",
          "name": "Custom",
          "type": "SMS_VERIFY_CODE",
          "created": "2016-06-23T17:41:07.000Z",
          "template": "org.name: your enrollment code is code",
          "lastUpdated": "2016-06-23T17:41:07.000Z",
          "translations": {
            "es": "org.name: su código de inscripción es code",
            "fr": "org.name: votre code d'inscription est code",
            "it": "org.name: il codice di iscrizione è code"
          }
        }
      ]
  templates.partialSmsTemplateUpdate:
    description: |-
      Updates only some of the SMS Template properties:All properties within the custom SMS Template that have values are updated. Any translation that doesn't exist is added. Any translation with a null or empty value is removed. Any translation with non-empty/null value is updated.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/templates/#partial-sms-template-update
    example:
      inputs: [
        {
          "translations": {
            "de": "org.name: ihre bestätigungscode ist code."
          }
        }
      ]
      outputs: [
        {
          "id": "cstkd89Qu2ypkxNQv0g3",
          "name": "Custom",
          "type": "SMS_VERIFY_CODE",
          "created": "2016-06-23T17:20:22.000Z",
          "template": "org.name: your verification code is code",
          "lastUpdated": "2016-06-23T17:58:10.000Z",
          "translations": {
            "de": "org.name: ihre bestätigungscode ist code.",
            "es": "org.name: el código de verificación es code",
            "fr": "org.name: votre code de vérification est code",
            "it": "org.name: il codice di verifica è code"
          }
        }
      ]
  templates.removeSmsTemplate:
    description: |-
      Removes an SMS Template
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/templates/#remove-sms-template
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  templates.updateSmsTemplate:
    description: |-
      Updates the SMS Template
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/templates/#update-sms-template
    example:
      inputs: [
        {
          "name": "Custom",
          "type": "SMS_ENROLLMENT_CODE",
          "template": "org.name: your enrollment code is code",
          "translations": {
            "de": "org.name: ihre anmeldung code ist code",
            "es": "org.name: su código de inscripción es code",
            "it": "org.name: il codice di iscrizione è code"
          }
        }
      ]
      outputs: [
        {
          "id": "cstkdgSQOUacCuF750g3",
          "name": "Custom",
          "type": "SMS_ENROLLMENT_CODE",
          "created": "2016-06-23T17:41:07.000Z",
          "template": "org.name: your enrollment code is code",
          "lastUpdated": "2016-06-23T17:47:06.000Z"
        }
      ]
  threatInsight.getCurrentThreatinsightConfiguration:
    description: |-
      Get current ThreatInsight configuration
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/threat-insight/#get-current-threatinsight-configuration
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/threats/configuration",
              "hints": {
                "allow": [
                  "GET",
                  "POST"
                ]
              }
            }
          },
          "action": "audit",
          "created": "2020-08-05 22:18:30",
          "lastUpdated": "2020-09-08 20:53:20",
          "excludeZones": []
        }
      ]
  threatInsight.updateThreatinsightConfiguration:
    description: |-
      Update ThreatInsight configuration
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/threat-insight/#update-threatinsight-configuration
    example:
      inputs: [
        {
          "action": "audit",
          "excludeZones": [
            "nzo1q7jEOsoCnoKcj0g4"
          ]
        }
      ]
      outputs: [
        {
          "_links": {
            "self": {
              "href": "https://{yourOktaDomain}/api/v1/threats/configuration",
              "hints": {
                "allow": [
                  "GET",
                  "POST"
                ]
              }
            }
          },
          "action": "audit",
          "created": "2020-08-05 22:18:30",
          "lastUpdated": "2020-10-13 21:23:10",
          "excludeZones": [
            "nzo1q7jEOsoCnoKcj0g4"
          ]
        }
      ]
  trustedOrigins.activateTrustedOrigin:
    description: |-
      Activates an existing Trusted Origin
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/trusted-origins/#activate-trusted-origin
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "tos10hzarOl8zfPM80g4",
          "name": "Another Trusted Origin",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/trustedOrigins/tos10hzarOl8zfPM80g4",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/trustedOrigins/tos10hzarOl8zfPM80g4/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "origin": "https://rf.example.com",
          "scopes": [
            {
              "type": "CORS"
            }
          ],
          "status": "ACTIVE",
          "created": "2018-01-13T01:22:10.000Z",
          "createdBy": "00ut5t92p6IEOi4bu0g3",
          "lastUpdated": "2018-01-18T01:07:28.000Z",
          "lastUpdatedBy": "00ut5t92p6IEOi4bu0g3"
        }
      ]
  trustedOrigins.createTrustedOrigin:
    description: |-
      Creates a new Trusted Origin
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/trusted-origins/#create-trusted-origin
    example:
      inputs: [
        {
          "name": "New Trusted Origin",
          "origin": "http://example.com",
          "scopes": [
            {
              "type": "CORS"
            },
            {
              "type": "REDIRECT"
            }
          ]
        }
      ]
      outputs: [
        {
          "id": "tos10hu7rkbtrFt1M0g4",
          "name": "New Trusted Origin",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/trustedOrigins/tos10hu7rkbtrFt1M0g4",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/trustedOrigins/tos10hu7rkbtrFt1M0g4/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "origin": "http://example.com",
          "scopes": [
            {
              "type": "CORS"
            },
            {
              "type": "REDIRECT"
            }
          ],
          "status": "ACTIVE",
          "created": "2018-01-13T01:11:44.000Z",
          "createdBy": "00ut5t92p6IEOi4bu0g3",
          "lastUpdated": "2018-01-13T01:11:44.000Z",
          "lastUpdatedBy": "00ut5t92p6IEOi4bu0g3"
        }
      ]
  trustedOrigins.deactivateTrustedOrigin:
    description: |-
      Deactivates an existing Trusted Origin
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/trusted-origins/#deactivate-trusted-origin
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "tos10hzarOl8zfPM80g4",
          "name": "Another Trusted Origin",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/trustedOrigins/tos10hzarOl8zfPM80g4",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/trustedOrigins/tos10hzarOl8zfPM80g4/lifecycle/activate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "origin": "https://rf.example.com",
          "scopes": [
            {
              "type": "CORS"
            }
          ],
          "status": "INACTIVE",
          "created": "2018-01-13T01:22:10.000Z",
          "createdBy": "00ut5t92p6IEOi4bu0g3",
          "lastUpdated": "2018-01-18T01:18:26.000Z",
          "lastUpdatedBy": "00ut5t92p6IEOi4bu0g3"
        }
      ]
  trustedOrigins.deleteTrustedOrigin:
    description: |-
      Deletes an existing Trusted Origin
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/trusted-origins/#delete-trusted-origin
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  trustedOrigins.getTrustedOrigin:
    description: |-
      Gets a Trusted Origin by ID
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/trusted-origins/#get-trusted-origin
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "tosue7JvguwJ7U6kz0g3",
          "name": "Example Trusted Origin",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "origin": "http://example.com",
          "scopes": [
            {
              "type": "CORS"
            }
          ],
          "status": "ACTIVE",
          "created": "2018-01-13T01:22:10.000Z",
          "createdBy": "00ut5t92p6IEOi4bu0g3",
          "lastUpdated": "2018-01-13T01:22:10.000Z",
          "lastUpdatedBy": "00ut5t92p6IEOi4bu0g3"
        }
      ]
  trustedOrigins.listTrustedOrigins:
    description: |-
      Returns a list of all Trusted Origins
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/trusted-origins/#list-all-trusted-origins
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "tosue7JvguwJ7U6kz0g3",
          "name": "Example Trusted Origin",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "origin": "http://example.com",
          "scopes": [
            {
              "type": "CORS"
            }
          ],
          "status": "ACTIVE",
          "created": "2018-01-13T01:22:10.000Z",
          "createdBy": "00ut5t92p6IEOi4bu0g3",
          "lastUpdated": "2018-01-13T01:22:10.000Z",
          "lastUpdatedBy": "00ut5t92p6IEOi4bu0g3"
        }
      ]
  trustedOrigins.listTrustedOriginsWithFilter:
    description: |-
      Lists all Trusted Origins that match the filter criteria. This operation requires URL encoding. For example, filter=(id eq 'tosue7JvguwJ7U6kz0g3' or id eq 'tos10hzarOl8zfPM80g4') is encoded as filter=%28id+eq+%22tosue7JvguwJ7U6kz0g3%22+or+id+eq+%22tos10hzarOl8zfPM80g4%22%29.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/trusted-origins/#list-trusted-origins-with-a-filter
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "tosue7JvguwJ7U6kz0g3",
          "name": "Example Trusted Origin",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "origin": "http://example.com",
          "scopes": [
            {
              "type": "CORS"
            }
          ],
          "status": "ACTIVE",
          "created": "2018-01-13T01:22:10.000Z",
          "createdBy": "00ut5t92p6IEOi4bu0g3",
          "lastUpdated": "2018-01-13T01:22:10.000Z",
          "lastUpdatedBy": "00ut5t92p6IEOi4bu0g3"
        }
      ]
  trustedOrigins.updateTrustedOrigin:
    description: |-
      Updates an existing Trusted Origin
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/trusted-origins/#update-trusted-origin
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "tosue7JvguwJ7U6kz0g3",
          "name": "Updated Example Trusted Origin",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "origin": "http://updated.example.com",
          "scopes": [
            {
              "type": "CORS"
            },
            {
              "type": "REDIRECT"
            }
          ],
          "status": "ACTIVE",
          "created": "2017-12-16T05:01:12.000Z",
          "createdBy": "00ut5t92p6IEOi4bu0g3",
          "lastUpdated": "2018-01-17T21:25:40.000Z",
          "lastUpdatedBy": "00ut5t92p6IEOi4bu0g3"
        }
      ]
  users.activateUser:
    description: |-
      Activates a user. This operation can only be performed on users with a STAGED or DEPROVISIONED status. Activation of a user is an asynchronous operation.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#activate-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "activationUrl": "https://$yourOktaDomain/welcome/XE6wE17zmphl3KqAPFxO",
          "activationToken": "XE6wE17zmphl3KqAPFxO"
        }
      ]
  users.changePassword:
    description: |-
      Changes a user's password by validating the user's current password. This operation can only be performed on users in STAGED, ACTIVE, PASSWORD_EXPIRED, or RECOVERY status that have a valid password credential
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#change-password
    example:
      inputs: [
        {
          "newPassword": {
            "value": "uTVM,TPw55"
          },
          "oldPassword": {
            "value": "tlpWENT2m"
          }
        }
      ]
      outputs: [
        {
          "password": {},
          "provider": {
            "name": "OKTA",
            "type": "OKTA"
          },
          "recovery_question": {
            "question": "Who's a major player in the cowboy scene?"
          }
        }
      ]
  users.changeRecoveryQuestion:
    description: |-
      Changes a user's recovery question & answer credential by validating the user's current password. This operation can only be performed on users in STAGED, ACTIVE or RECOVERY status that have a valid password credential
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#change-recovery-question
    example:
      inputs: [
        {
          "password": {
            "value": "tlpWENT2m"
          },
          "recovery_question": {
            "answer": "forty two",
            "question": "How many roads must a man walk down?"
          }
        }
      ]
      outputs: [
        {
          "password": {},
          "provider": {
            "name": "OKTA",
            "type": "OKTA"
          },
          "recovery_question": {
            "question": "How many roads must a man walk down?"
          }
        }
      ]
  users.clearCurrentUserSessions:
    description: |-
      POST /api/v1/users/me/lifecycle/delete_sessions
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#clear-current-user-sessions
    example:
      inputs: [
        {
          "keepCurrent": true
        }
      ]
      outputs: [
        {}
      ]
  users.clearUserSessions:
    description: |-
      Removes all active identity provider sessions. This forces the user to authenticate on the next operation. Optionally revokes OpenID Connect and OAuth refresh and access tokens issued to the user.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#clear-user-sessions
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  users.createUser:
    description: |-
      Creates a new user in your Okta organization with or without credentials
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#create-user
    example:
      inputs: [
        {
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          }
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            },
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate"
            }
          },
          "status": "STAGED",
          "created": "2013-07-02T21:36:25.344Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": null,
          "lastLogin": null,
          "credentials": {
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": null,
          "passwordChanged": null
        }
      ]
  users.createUserInGroup:
    description: |-
      Creates a user that is immediately added to the specified groups upon creation. Use this in conjunction with other create operations for a Group Administrator that is scoped to create users only in specified groups. The request may specify up to 20 group ids. (This limit applies only when creating a user. The user may later be added to more groups.)
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#create-user-in-group
    example:
      inputs: [
        {
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "groupIds": [
            "00g1emaKYZTWRYYRRTSK",
            "00garwpuyxHaWOkdV0g4"
          ]
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            },
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate"
            }
          },
          "status": "STAGED",
          "created": "2013-07-02T21:36:25.344Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": null,
          "lastLogin": null,
          "credentials": {
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": null,
          "passwordChanged": null
        }
      ]
  users.createUserWithAuthenticationProvider:
    description: |-
      Creates a new passwordless user with a SOCIAL or FEDERATION authentication provider that must be authenticated via a trusted Identity Provider
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#create-user-with-authentication-provider
    example:
      inputs: [
        {
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "credentials": {
            "provider": {
              "name": "FEDERATION",
              "type": "FEDERATION"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "00uijntSwJjSHtDY70g3",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/users/00uijntSwJjSHtDY70g3/lifecycle/deactivate",
              "method": "POST"
            },
            "resetPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00uijntSwJjSHtDY70g3/lifecycle/reset_password",
              "method": "POST"
            },
            "changeRecoveryQuestion": {
              "href": "https://$yourOktaDomain/api/v1/users/00uijntSwJjSHtDY70g3/credentials/change_recovery_question",
              "method": "POST"
            }
          },
          "status": "ACTIVE",
          "created": "2016-01-19T22:02:08.000Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337",
            "secondEmail": null
          },
          "activated": "2016-01-19T22:02:08.000Z",
          "lastLogin": null,
          "credentials": {
            "provider": {
              "name": "FEDERATION",
              "type": "FEDERATION"
            }
          },
          "lastUpdated": "2016-01-19T22:02:08.000Z",
          "statusChanged": "2016-01-19T22:02:08.000Z",
          "passwordChanged": null
        }
      ]
  users.createUserWithImportedHashedPassword:
    description: |-
      Creates a user with a specified hashed password. The new user is able to sign in immediately after activation with the specified password. This flow is common when migrating users from another data store in cases where we want to allow the users to retain their current passwords.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#create-user-with-imported-hashed-password
    example:
      inputs: [
        {
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "credentials": {
            "password": {
              "hash": {
                "salt": "rwh3vH166HCH/NT9XV5FYu",
                "value": "qaMqvAPULkbiQzkTCWo5XDcvzpk8Tna",
                "algorithm": "BCRYPT",
                "workFactor": 10
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            },
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate"
            }
          },
          "status": "ACTIVE",
          "created": "2013-07-02T21:36:25.344Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": null,
          "lastLogin": null,
          "credentials": {
            "password": {},
            "provider": {
              "name": "IMPORT",
              "type": "IMPORT"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": null,
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.createUserWithNonDefaultUserType:
    description: |-
      Creates a user with a specified User Type (see User Types). The type specification may be included with any of the above Create User operations; this example demonstrates creating a user without credentials. The User Type determines which Schema applies to that user. After a user has been created, the user can be assigned a different User Type only by an administrator via a full replacement PUT operation.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#create-user-with-non-default-user-type
    example:
      inputs: [
        {
          "type": {
            "id": "otyfnjfba4ye7pgjB0g4"
          },
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          }
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "type": {
            "id": "otyfnjfba4ye7pgjB0g4"
          },
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            },
            "type": {
              "href": "https://$yourOktaDomain/api/v1/meta/types/user/otyfnjfba4ye7pgjB0g4"
            },
            "schema": {
              "href": "https://$yourOktaDomain/api/v1/meta/schemas/user/oscfnjfba4ye7pgjB0g4"
            },
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate"
            }
          },
          "status": "STAGED",
          "created": "2013-07-02T21:36:25.344Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": null,
          "lastLogin": null,
          "credentials": {
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": null,
          "passwordChanged": null
        }
      ]
  users.createUserWithoutCredentials:
    description: |-
      Creates a user without a password or recovery question & answer. When the user is activated, an email is sent to the user with an activation token that can be used to complete the activation process. This is the default flow for new user registration using the administrator UI.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#create-user-without-credentials
    example:
      inputs: [
        {
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          }
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            },
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate"
            }
          },
          "status": "STAGED",
          "created": "2013-07-02T21:36:25.344Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": null,
          "lastLogin": null,
          "credentials": {
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": null,
          "passwordChanged": null
        }
      ]
  users.createUserWithPassword:
    description: |-
      Creates a user without a recovery question & answer. The new user is able to sign in immediately after activation with the assigned password. This flow is common when developing a custom user registration experience.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#create-user-with-password
    example:
      inputs: [
        {
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "credentials": {
            "password": {
              "value": "tlpWENT2m"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            },
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate"
            }
          },
          "status": "ACTIVE",
          "created": "2013-07-02T21:36:25.344Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": null,
          "lastLogin": null,
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": null,
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.createUserWithPasswordImportInlineHook:
    description: |-
      Creates a user with a Password Hook object specifying that a Password Inline Hook should be used to handle password verification. The Password Inline Hook is triggered to handle verification of the end user's password the first time the user tries to sign in, with Okta calling the Password Inline Hook to check that the password the user supplied is valid. If the password is valid, Okta stores the hash of the password that was provided and can authenticate the user independently from then on. See Password Import Inline Hook for more details.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#create-user-with-password-import-inline-hook
    example:
      inputs: [
        {
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "credentials": {
            "password": {
              "hook": {
                "type": "default"
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            }
          },
          "status": "ACTIVE",
          "created": "2013-07-02T21:36:25.344Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": null,
          "lastLogin": null,
          "credentials": {
            "password": {},
            "provider": {
              "name": "IMPORT",
              "type": "IMPORT"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": null,
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.createUserWithPasswordRecoveryQuestion:
    description: |-
      Creates a new user with a password and recovery question & answer. The new user is able to log in with the assigned password immediately after activation. This flow is common when developing a custom user-registration experience.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#create-user-with-password-recovery-question
    example:
      inputs: [
        {
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "credentials": {
            "password": {
              "value": "tlpWENT2m"
            },
            "recovery_question": {
              "answer": "Annie Oakley",
              "question": "Who'''s a major player in the cowboy scene?"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            },
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate"
            }
          },
          "status": "STAGED",
          "created": "2013-07-02T21:36:25.344Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": null,
          "lastLogin": null,
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "Who's a major player in the cowboy scene?"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": null,
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.createUserWithRecoveryQuestion:
    description: |-
      Creates a user without a password. When the user is activated, an email is sent to the user with an activation token that can be used to complete the activation process. This flow is useful if migrating users from an existing user store.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#create-user-with-recovery-question
    example:
      inputs: [
        {
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "credentials": {
            "recovery_question": {
              "answer": "Annie Oakley",
              "question": "Who'''s a major player in the cowboy scene?"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            },
            "activate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate"
            }
          },
          "status": "STAGED",
          "created": "2013-07-02T21:36:25.344Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": null,
          "lastLogin": null,
          "credentials": {
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "Who's a major player in the cowboy scene?"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": null,
          "passwordChanged": null
        }
      ]
  users.deactivateUser:
    description: |-
      Deactivates a user. This operation can only be performed on users that do not have a DEPROVISIONED status.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#deactivate-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  users.deleteUser:
    description: |-
      Deletes a user permanently. This operation can only be performed on users that have a DEPROVISIONED status. This action cannot be recovered! This operation on a user that hasn't been deactivated causes that user to be deactivated. A second delete operation is required to delete the user.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#delete-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  users.expirePassword:
    description: |-
      This operation transitions the user status to PASSWORD_EXPIRED so that the user is required to change their password at their next login. If tempPassword is included in the request, the user's password is reset to a temporary password that is returned, and then the temporary password is expired. If you have integrated Okta with your on-premise Active Directory (AD), then setting a user's password as expired in Okta also expires the password in Active Directory. When the user tries to log in to Okta, delegated authentication finds the password-expired status in the Active Directory, and the user is presented with the password-expired page where he or she can change the password.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#expire-password
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/deactivate"
            },
            "resetFactors": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_factors"
            },
            "resetPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_password"
            },
            "changePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_password"
            },
            "expirePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/expire_password"
            },
            "forgotPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/forgot_password"
            },
            "changeRecoveryQuestion": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_recovery_question"
            }
          },
          "status": "ACTIVE",
          "created": "2013-06-24T16:39:18.000Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": "2013-06-24T16:39:19.000Z",
          "lastLogin": "2013-06-24T17:39:19.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "Who's a major player in the cowboy scene?"
            }
          },
          "lastUpdated": "2013-06-27T16:35:28.000Z",
          "statusChanged": "2013-06-24T16:39:19.000Z",
          "passwordChanged": "2013-06-24T16:39:19.000Z"
        }
      ]
  users.findUsers:
    description: |-
      Finds users who match the specified query. Use the q parameter for a simple lookup of users by name, for example when creating a people picker. The value of q is matched against firstName, lastName, or email.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#find-users
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            }
          },
          "status": "ACTIVE",
          "created": "2013-06-24T16:39:18.000Z",
          "profile": {
            "email": "eric.judy@example.com",
            "login": "eric.judy@example.com",
            "lastName": "Judy",
            "firstName": "Eric",
            "mobilePhone": "555-415-2011",
            "secondEmail": "eric@example.org"
          },
          "activated": "2013-06-24T16:39:19.000Z",
          "lastLogin": "2013-06-24T17:39:19.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "The stars are projectors?"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": "2013-06-24T16:39:19.000Z",
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.forgotPassword:
    description: |-
      Generates a one-time token (OTT) that can be used to reset a user's password. The user will be required to validate their security question's answer when visiting the reset link. This operation can only be performed on users with an ACTIVE status and a valid recovery question credential.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#forgot-password
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "resetPasswordUrl": "https://$yourOktaDomain/signin/reset-password/XE6wE17zmphl3KqAPFxO"
        }
      ]
  users.getGrant:
    description: |-
      Gets a grant for the specified user
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#get-a-grant
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "oag3ih1zrm1cBFOiq0h6",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabskvc6442nkvQO0h7",
              "title": "My App"
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5t60iloOHN9pBi0h7/grants/oag3ih1zrm1cBFOiq0h6",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5t60iloOHN9pBi0h7",
              "title": "SAML Jackson"
            },
            "scope": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes/scpCmCCV1DpxVkCaye2X",
              "title": "My phone"
            },
            "client": {
              "href": "https://$yourOktaDomain/oauth2/v1/clients/0oabskvc6442nkvQO0h7",
              "title": "My App"
            },
            "authorizationServer": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7",
              "title": "Example Authorization Server"
            }
          },
          "issuer": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7",
          "status": "ACTIVE",
          "userId": "00u5t60iloOHN9pBi0h7",
          "created": "2017-10-30T22:06:53.000Z",
          "scopeId": "scpCmCCV1DpxVkCaye2X",
          "clientId": "0oabskvc6442nkvQO0h7",
          "lastUpdated": "2017-10-30T22:06:53.000Z"
        }
      ]
  users.getAssignedAppLinks:
    description: |-
      Fetches appLinks for all direct or indirect (via group membership) assigned applications
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#get-assigned-app-links
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "label": "Google Apps Mail",
          "hidden": false,
          "appName": "google",
          "linkUrl": "https://$yourOktaDomain/home/google/0oa3omz2i9XRNSRIHBZO/50",
          "logoUrl": "https://$yourOktaDomain/img/logos/google-mail.png",
          "sortOrder": 0,
          "appInstanceId": "0oa3omz2i9XRNSRIHBZO",
          "appAssignmentId": "0ua3omz7weMMMQJERBKY",
          "credentialsSetup": false
        }
      ]
  users.getCurrentUser:
    description: |-
      Fetches the current user linked to API token or session cookie
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#get-current-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/deactivate"
            },
            "resetFactors": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_factors"
            },
            "resetPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_password"
            },
            "changePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_password"
            },
            "expirePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/expire_password"
            },
            "forgotPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/forgot_password"
            },
            "changeRecoveryQuestion": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_recovery_question"
            }
          },
          "status": "ACTIVE",
          "created": "2013-06-24T16:39:18.000Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": "2013-06-24T16:39:19.000Z",
          "lastLogin": "2013-06-24T17:39:19.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "Who's a major player in the cowboy scene?"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": "2013-06-24T16:39:19.000Z",
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.getRefreshToken:
    description: |-
      Gets a refresh token issued for the specified User and Client.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#get-refresh-token
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "oar579Mcp7OUsNTlo0g3",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabskvc6442nkvQO0h7",
              "title": "Native"
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5t60iloOHN9pBi0h7/clients/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00upcgi9dyWEOeCwM0g3",
              "title": "Saml Jackson"
            },
            "client": {
              "href": "https://$yourOktaDomain/oauth2/v1/clients/0oabskvc6442nkvQO0h7",
              "title": "Example Client App"
            },
            "revoke": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5t60iloOHN9pBi0h7/clients/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3",
              "hints": {
                "allow": [
                  "DELETE"
                ]
              }
            },
            "authorizationServer": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7",
              "title": "Example Authorization Server"
            }
          },
          "issuer": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7",
          "scopes": [
            "offline_access",
            "car:drive"
          ],
          "status": "ACTIVE",
          "userId": "00u5t60iloOHN9pBi0h7",
          "created": "2018-03-09T03:18:06.000Z",
          "clientId": "0oabskvc6442nkvQO0h7",
          "_embedded": {
            "scopes": [
              {
                "id": "scppb56cIl4GvGxy70g3",
                "name": "offline_access",
                "_links": {
                  "scope": {
                    "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes/scppb56cIl4GvGxy70g3",
                    "title": "offline_access"
                  }
                },
                "description": "Requests a refresh token by default, used to obtain more access tokens without re-prompting the user for authentication."
              },
              {
                "id": "scp142iq2J8IGRUCS0g4",
                "name": "car:drive",
                "_links": {
                  "scope": {
                    "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes/scp142iq2J8IGRUCS0g4",
                    "title": "Drive car"
                  }
                },
                "description": "Allows the user to drive a car.",
                "displayName": "Drive car"
              }
            ]
          },
          "expiresAt": "2018-03-16T03:18:06.000Z",
          "lastUpdated": "2018-03-09T03:18:06.000Z"
        }
      ]
  users.getUser:
    description: |-
      Fetches a user from your Okta organization
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#get-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/deactivate"
            },
            "resetFactors": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_factors"
            },
            "resetPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_password"
            },
            "changePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_password"
            },
            "expirePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/expire_password"
            },
            "forgotPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/forgot_password"
            },
            "changeRecoveryQuestion": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_recovery_question"
            }
          },
          "status": "ACTIVE",
          "created": "2013-06-24T16:39:18.000Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": "2013-06-24T16:39:19.000Z",
          "lastLogin": "2013-06-24T17:39:19.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "Who's a major player in the cowboy scene?"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": "2013-06-24T16:39:19.000Z",
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.getUserSGroups:
    description: |-
      Fetches the groups of which the user is a member
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#get-user-s-groups
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "0gabcd1234",
          "profile": {
            "name": "Cloud App Users",
            "description": "Users can access cloud apps"
          }
        }
      ]
  users.getUserWithId:
    description: |-
      Fetches a specific user when you know the user's id
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#get-user-with-id
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/deactivate"
            },
            "resetFactors": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_factors"
            },
            "resetPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_password"
            },
            "changePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_password"
            },
            "expirePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/expire_password"
            },
            "forgotPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/forgot_password"
            },
            "changeRecoveryQuestion": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_recovery_question"
            }
          },
          "status": "ACTIVE",
          "created": "2013-06-24T16:39:18.000Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": "2013-06-24T16:39:19.000Z",
          "lastLogin": "2013-06-24T17:39:19.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "Who's a major player in the cowboy scene?"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": "2013-06-24T16:39:19.000Z",
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.getUserWithLogin:
    description: |-
      Fetches a specific user when you know the user's login. When fetching a user by login, URL encode  (opens new window) the request parameter to ensure special characters are escaped properly. Logins with a / character can only be fetched by id due to URL issues with escaping the / character.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#get-user-with-login
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/deactivate"
            },
            "resetFactors": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_factors"
            },
            "resetPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_password"
            },
            "changePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_password"
            },
            "expirePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/expire_password"
            },
            "forgotPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/forgot_password"
            },
            "changeRecoveryQuestion": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_recovery_question"
            }
          },
          "status": "ACTIVE",
          "created": "2013-06-24T16:39:18.000Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": "2013-06-24T16:39:19.000Z",
          "lastLogin": "2013-06-24T17:39:19.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "Who's a major player in the cowboy scene?"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": "2013-06-24T16:39:19.000Z",
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.getUserWithLoginShortname:
    description: |-
      Fetches a specific user when you know the user's login shortname and the shortname is unique within the organization. When fetching a user by login shortname, URL encode  (opens new window) the request parameter to ensure special characters are escaped properly. Logins with a / character can only be fetched by id due to URL issues with escaping the / character.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#get-user-with-login-shortname
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/deactivate"
            },
            "resetFactors": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_factors"
            },
            "resetPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_password"
            },
            "changePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_password"
            },
            "expirePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/expire_password"
            },
            "forgotPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/forgot_password"
            },
            "changeRecoveryQuestion": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_recovery_question"
            }
          },
          "status": "ACTIVE",
          "created": "2013-06-24T16:39:18.000Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": "2013-06-24T16:39:19.000Z",
          "lastLogin": "2013-06-24T17:39:19.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "Who's a major player in the cowboy scene?"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": "2013-06-24T16:39:19.000Z",
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.listUsers:
    description: |-
      Returns a list of all users that do not have a status of DEPROVISIONED, up to the maximum (200 for most orgs). Different results are returned depending on specified queries in the request.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#list-all-users
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            }
          },
          "status": "STAGED",
          "created": "2013-07-02T21:36:25.344Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": null,
          "lastLogin": null,
          "credentials": {
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": null,
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.listClientResourcesForUser:
    description: |-
      Lists all client resources for which the specified user has grants or tokens.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#list-client-resources-for-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "_links": {
            "grants": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5t60iloOHN9pBi0h7/clients/0oabskvc6442nkvQO0h7/grants"
            },
            "tokens": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5t60iloOHN9pBi0h7/clients/0oabskvc6442nkvQO0h7/tokens"
            }
          },
          "logo_uri": null,
          "client_id": "0oabskvc6442nkvQO0h7",
          "client_uri": null,
          "client_name": "My App"
        }
      ]
  users.listGrants:
    description: |-
      Lists all grants for the specified user
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#list-grants
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "oag3ih1zrm1cBFOiq0h6",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabskvc6442nkvQO0h7",
              "title": "My App"
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5t60iloOHN9pBi0h7/grants/oag3ih1zrm1cBFOiq0h6",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5t60iloOHN9pBi0h7",
              "title": "SAML Jackson"
            },
            "scope": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes/scpCmCCV1DpxVkCaye2X",
              "title": "My phone"
            },
            "client": {
              "href": "https://$yourOktaDomain/oauth2/v1/clients/0oabskvc6442nkvQO0h7",
              "title": "My App"
            },
            "authorizationServer": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7",
              "title": "Example Authorization Server"
            }
          },
          "issuer": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7",
          "status": "ACTIVE",
          "userId": "00u5t60iloOHN9pBi0h7",
          "created": "2017-10-30T22:06:53.000Z",
          "scopeId": "scpCmCCV1DpxVkCaye2X",
          "clientId": "0oabskvc6442nkvQO0h7",
          "lastUpdated": "2017-10-30T22:06:53.000Z"
        }
      ]
  users.listGrantsForUserClientCombination:
    description: |-
      Lists all grants for a specified user and client
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#list-grants-for-a-user-client-combination
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "oag3j3j33ILN7OFqP0h6",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabskvc6442nkvQO0h7",
              "title": "Test App for Groups Claim"
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5t60iloOHN9pBi0h7/grants/oag3j3j33ILN7OFqP0h6",
              "hints": {
                "allow": [
                  "GET",
                  "DELETE"
                ]
              }
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5t60iloOHN9pBi0h7",
              "title": "Saml Jackson"
            },
            "scope": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes/scpCmCCV1DpxVkCaye2X",
              "title": "Your phone"
            },
            "client": {
              "href": "https://$yourOktaDomain/oauth2/v1/clients/0oabskvc6442nkvQO0h7",
              "title": "Test App for Groups Claim"
            },
            "authorizationServer": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7",
              "title": "Example Authorization Server"
            }
          },
          "issuer": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7",
          "status": "ACTIVE",
          "userId": "00u5t60iloOHN9pBi0h7",
          "created": "2017-11-03T03:34:17.000Z",
          "scopeId": "scpCmCCV1DpxVkCaye2X",
          "clientId": "0oabskvc6442nkvQO0h7",
          "lastUpdated": "2017-11-03T03:34:17.000Z"
        }
      ]
  users.listRefreshTokens:
    description: |-
      Lists all refresh tokens issued for the specified User and Client.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#list-refresh-tokens
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "oar579Mcp7OUsNTlo0g3",
          "_links": {
            "app": {
              "href": "https://$yourOktaDomain/api/v1/apps/0oabskvc6442nkvQO0h7",
              "title": "Native"
            },
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5t60iloOHN9pBi0h7/clients/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3"
            },
            "user": {
              "href": "https://$yourOktaDomain/api/v1/users/00upcgi9dyWEOeCwM0g3",
              "title": "Saml Jackson"
            },
            "client": {
              "href": "https://$yourOktaDomain/oauth2/v1/clients/0oabskvc6442nkvQO0h7",
              "title": "Example Client App"
            },
            "revoke": {
              "href": "https://$yourOktaDomain/api/v1/users/00u5t60iloOHN9pBi0h7/clients/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3",
              "hints": {
                "allow": [
                  "DELETE"
                ]
              }
            },
            "authorizationServer": {
              "href": "https://$yourOktaDomain/api/v1/authorizationServers/ausain6z9zIedDCxB0h7",
              "title": "Example Authorization Server"
            }
          },
          "issuer": "https://$yourOktaDomain/oauth2/ausain6z9zIedDCxB0h7",
          "scopes": [
            "offline_access",
            "car:drive"
          ],
          "status": "ACTIVE",
          "userId": "00u5t60iloOHN9pBi0h7",
          "created": "2018-03-09T03:18:06.000Z",
          "clientId": "0oabskvc6442nkvQO0h7",
          "expiresAt": "2018-03-16T03:18:06.000Z",
          "lastUpdated": "2018-03-09T03:18:06.000Z"
        }
      ]
  users.listUsersWithFilter:
    description: |-
      Lists all users that match the filter criteria. This operation: Filters against the most up-to-date data. For example, if you create a user or change an attribute and then issue a filter request, the changes are reflected in your results.Requires URL encoding (opens new window). For example, filter=lastUpdated gt '2013-06-01T00:00:00.000Z' is encoded as filter=lastUpdated%20gt%20%222013-06-01T00:00:00.000Z%22. Examples use cURL-style escaping instead of URL encoding to make them easier to read. Supports only a limited number of properties: status, lastUpdated, id, profile.login, profile.email, profile.firstName, and profile.lastName.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#list-users-with-a-filter
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            }
          },
          "status": "ACTIVE",
          "created": "2013-06-24T16:39:18.000Z",
          "profile": {
            "email": "eric.judy@example.com",
            "login": "eric.judy@example.com",
            "lastName": "Judy",
            "firstName": "Eric",
            "mobilePhone": "555-415-2011",
            "secondEmail": "eric@example.org"
          },
          "activated": "2013-06-24T16:39:19.000Z",
          "lastLogin": "2013-06-24T17:39:19.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "The stars are projectors?"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": "2013-06-24T16:39:19.000Z",
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.listUsersWithSearch:
    description: |-
      Searches for users based on the properties specified in the search parameter. Property names in the search parameter are case sensitive, whereas operators (eq, sw, etc.) and string values are case insensitive. Unlike in user logins, diacritical marks are significant in search string values: a search for isaac.brock will find Isaac.Brock but will not find a property whose value is isáàc.bröck.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#list-users-with-search
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR"
            }
          },
          "status": "ACTIVE",
          "created": "2013-06-24T16:39:18.000Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": "2013-06-24T16:39:19.000Z",
          "lastLogin": "2013-06-24T17:39:19.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "Who's a major player in the cowboy scene?"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": "2013-06-24T16:39:19.000Z",
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.reactivateUser:
    description: |-
      Reactivates a user. This operation can only be performed on users with a PROVISIONED status. This operation restarts the activation workflow if for some reason the user activation was not completed when using the activationToken from Activate User.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#reactivate-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "activationUrl": "https://$yourOktaDomain/welcome/XE6wE17zmphl3KqAPFxO",
          "activationToken": "XE6wE17zmphl3KqAPFxO"
        }
      ]
  users.resetFactors:
    description: |-
      This operation resets all factors for the specified user. All MFA factor enrollments returned to the unenrolled state. The user's status remains ACTIVE. This link is present only if the user is currently enrolled in one or more MFA factors.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#reset-factors
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  users.resetPassword:
    description: |-
      Generates a one-time token (OTT) that can be used to reset a user's password. The OTT link can be automatically emailed to the user or returned to the API caller and distributed using a custom flow. This operation will transition the user to the status of RECOVERY and the user will not be able to login or initiate a forgot password flow until they complete the reset flow.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#reset-password
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "resetPasswordUrl": "https://$yourOktaDomain/reset_password/XE6wE17zmphl3KqAPFxO"
        }
      ]
  users.revokeGrantForAUser:
    description: |-
      Revokes one grant for a specified user
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#revoke-a-grant-for-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  users.revokeGrantsForUser:
    description: |-
      Revokes all grants for a specified user
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#revoke-all-grants-for-a-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  users.revokeRefreshTokens:
    description: |-
      Revokes all refresh tokens issued for the specified User and Client. Any access tokens issued with these refresh tokens will also be revoked, but access tokens issued without a refresh token will not be affected.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#revoke-all-refresh-tokens
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  users.revokeGrantsForUserAndClient:
    description: |-
      Revokes all grants for the specified user and client
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#revoke-grants-for-user-and-client
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  users.revokeRefreshToken:
    description: |-
      Revokes the specified refresh token. If an access token was issued with this refresh token, it will also be revoked.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#revoke-refresh-token
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  users.setPassword:
    description: |-
      Sets passwords without validating existing user credentials. This is an administrative operation. For operations that validate credentials refer to Reset Password, Forgot Password, and Change Password.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#set-password
    example:
      inputs: [
        {
          "credentials": {
            "password": {
              "value": "uTVM,TPw55"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/deactivate"
            },
            "resetFactors": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_factors"
            },
            "resetPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_password"
            },
            "changePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_password"
            },
            "expirePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/expire_password"
            },
            "forgotPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/forgot_password"
            },
            "changeRecoveryQuestion": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_recovery_question"
            }
          },
          "status": "ACTIVE",
          "created": "2013-06-24T16:39:18.000Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": "2013-06-24T16:39:19.000Z",
          "lastLogin": "2013-06-24T17:39:19.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "Who's a major player in the cowboy scene?"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": "2013-06-24T16:39:19.000Z",
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.SetRecoveryQuestionAnswer:
    description: |-
      Sets recovery question and answer without validating existing user credentials. This is an administrative operation. For an operation that requires validation, see Change Recovery Question.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#set-recovery-question-answer
    example:
      inputs: [
        {
          "credentials": {
            "recovery_question": {
              "answer": "forty two",
              "question": "How many roads must a man walk down?"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/deactivate"
            },
            "resetFactors": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_factors"
            },
            "resetPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_password"
            },
            "changePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_password"
            },
            "expirePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/expire_password"
            },
            "forgotPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/forgot_password"
            },
            "changeRecoveryQuestion": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_recovery_question"
            }
          },
          "status": "ACTIVE",
          "created": "2013-06-24T16:39:18.000Z",
          "profile": {
            "email": "isaac.brock@example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": "2013-06-24T16:39:19.000Z",
          "lastLogin": "2013-06-24T17:39:19.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "I have a new recovery question?"
            }
          },
          "lastUpdated": "2013-07-02T21:36:25.344Z",
          "statusChanged": "2013-06-24T16:39:19.000Z",
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.suspendUser:
    description: |-
      Suspends a user. This operation can only be performed on users with an ACTIVE status. The user has a status of SUSPENDED when the process is complete.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#suspend-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  users.unlockUser:
    description: |-
      Unlocks a user with a LOCKED_OUT status and returns them to ACTIVE status. Users will be able to login with their current password.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#unlock-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  users.unsuspendUser:
    description: |-
      Unsuspends a user and returns them to the ACTIVE state. This operation can only be performed on users that have a SUSPENDED status.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#unsuspend-user
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  users.updateCurrentUsersProfile:
    description: |-
      Updates current user's profile with partial update semantics
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#update-current-user-s-profile
    example:
      inputs: [
        {
          "profile": {
            "email": "isaac.brock@update.example.com",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          }
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/deactivate"
            },
            "resetFactors": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_factors"
            },
            "resetPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_password"
            },
            "changePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_password"
            },
            "expirePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/expire_password"
            },
            "forgotPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/forgot_password"
            },
            "changeRecoveryQuestion": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_recovery_question"
            }
          },
          "status": "ACTIVE",
          "created": "2013-06-24T16:39:18.000Z",
          "profile": {
            "email": "isaac.brock@update.example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": "2013-06-24T16:39:19.000Z",
          "lastLogin": "2013-06-24T17:39:19.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "Who's a major player in the cowboy scene?"
            }
          },
          "lastUpdated": "2015-07-02T21:36:25.344Z",
          "statusChanged": "2013-06-24T16:39:19.000Z",
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.updateProfileWithId:
    description: |-
      Updates a user's profile or credentials with partial update semantics
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#update-profile-with-id
    example:
      inputs: [
        {
          "profile": {
            "email": "isaac.brock@update.example.com",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          }
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/deactivate"
            },
            "resetFactors": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_factors"
            },
            "resetPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_password"
            },
            "changePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_password"
            },
            "expirePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/expire_password"
            },
            "forgotPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/forgot_password"
            },
            "changeRecoveryQuestion": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_recovery_question"
            }
          },
          "status": "ACTIVE",
          "created": "2013-06-24T16:39:18.000Z",
          "profile": {
            "email": "isaac.brock@update.example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": "2013-06-24T16:39:19.000Z",
          "lastLogin": "2013-06-24T17:39:19.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "Who's a major player in the cowboy scene?"
            }
          },
          "lastUpdated": "2015-07-02T21:36:25.344Z",
          "statusChanged": "2013-06-24T16:39:19.000Z",
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  users.updateUser:
    description: |-
      Updates a user's profile and/or credentials using strict-update semantics. All profile properties must be specified when updating a user's profile with a PUT method. Any property not specified in the request is deleted.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/users/#update-user
    example:
      inputs: [
        {
          "profile": {
            "email": "isaac.brock@update.example.com",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          }
        }
      ]
      outputs: [
        {
          "id": "00ub0oNGTSWTBKOLGLNR",
          "_links": {
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/deactivate"
            },
            "resetFactors": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_factors"
            },
            "resetPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_password"
            },
            "changePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_password"
            },
            "expirePassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/expire_password"
            },
            "forgotPassword": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/forgot_password"
            },
            "changeRecoveryQuestion": {
              "href": "https://$yourOktaDomain/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_recovery_question"
            }
          },
          "status": "ACTIVE",
          "created": "2013-06-24T16:39:18.000Z",
          "profile": {
            "email": "isaac.brock@update.example.com",
            "login": "isaac.brock@example.com",
            "lastName": "Brock",
            "firstName": "Isaac",
            "mobilePhone": "555-415-1337"
          },
          "activated": "2013-06-24T16:39:19.000Z",
          "lastLogin": "2013-06-24T17:39:19.000Z",
          "credentials": {
            "password": {},
            "provider": {
              "name": "OKTA",
              "type": "OKTA"
            },
            "recovery_question": {
              "question": "Who's a major player in the cowboy scene?"
            }
          },
          "lastUpdated": "2015-07-02T21:36:25.344Z",
          "statusChanged": "2013-06-24T16:39:19.000Z",
          "passwordChanged": "2013-07-02T21:36:25.344Z"
        }
      ]
  userTypes.createUserType:
    description: |-
      Creates a new User Type. A default User Type is automatically created with your org, and you can add another nine User Types for a maximum of 10. Okta periodically updates the default schema template used for new orgs. New User Types are based on the most up-to-date template. This means the properties that a new User Type is initialized with aren't necessarily the same properties that your default type received.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/user-types/#create-user-type
    example:
      inputs: [
        {
          "name": "aNewType",
          "description": "Any description that means something useful to you",
          "displayName": "Display Name for UI"
        }
      ]
      outputs: [
        {
          "id": "otyfnly5cQjJT9PnR0g4",
          "ref": {
            "id": "otyfnly5cQjJT9PnR0g4",
            "refClass": "com.saasure.db.dto.platform.entity.cvd.CVDType"
          },
          "name": "aNewType",
          "_links": {
            "self": {
              "rel": "self",
              "href": "https://$yourOktaDomain/api/v1/meta/types/user/otyfnly5cQjJT9PnR0g4",
              "method": "GET"
            },
            "schema": {
              "rel": "schema",
              "href": "https://$yourOktaDomain/api/v1/meta/schemas/user/oscfnly5cQjJT9PnR0g4",
              "method": "GET"
            }
          },
          "created": "2019-04-10T02:00:01.000Z",
          "default": false,
          "createdBy": "00ufnlhzppWItClAI0g4",
          "description": "Any description that means something useful to you",
          "displayName": "Display Name for UI",
          "lastUpdated": "2019-04-10T02:00:01.000Z",
          "lastUpdatedBy": "00ufnlhzppWItClAI0g4"
        }
      ]
  userTypes.deleteUserType:
    description: |-
      Deletes a User Type permanently. This operation isn't permitted for the default type or for any User Type that has existing users. After you delete a User Type, it can't be used as the type for new users, and it no longer counts against the limit of 10 User Types.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/user-types/#delete-user-type
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  userTypes.getUserTypes:
    description: |-
      Fetches all the User Types in your org
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/user-types/#get-all-user-types
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "otyfnly5cQjJT9PnR0g4",
          "ref": {
            "id": "otyfnly5cQjJT9PnR0g4",
            "refClass": "com.saasure.db.dto.platform.entity.cvd.CVDType"
          },
          "name": "newtype",
          "_links": {
            "self": {
              "rel": "self",
              "href": "https://$yourOktaDomain/api/v1/meta/types/user/otyfnly5cQjJT9PnR0g4",
              "method": "GET"
            },
            "schema": {
              "rel": "schema",
              "href": "https://$yourOktaDomain/api/v1/meta/schemas/user/oscfnly5cQjJT9PnR0g4",
              "method": "GET"
            }
          },
          "created": "2019-04-10T02:00:01.000Z",
          "default": false,
          "createdBy": "00ufnlhzppWItClAI0g4",
          "description": "Custom user type",
          "displayName": "Nootype",
          "lastUpdated": "2019-04-10T02:00:01.000Z",
          "lastUpdatedBy": "00ufnlhzppWItClAI0g4"
        }
      ]
  userTypes.getUserTypeByIdOrDefault:
    description: |-
      Fetches a User Type by ID. Use the special identifier default to fetch the default User Type.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/user-types/#get-user-type-by-id-or-default
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "otyfnly5cQjJT9PnR0g4",
          "ref": {
            "id": "otyfnly5cQjJT9PnR0g4",
            "refClass": "com.saasure.db.dto.platform.entity.cvd.CVDType"
          },
          "name": "newtype",
          "_links": {
            "self": {
              "rel": "self",
              "href": "https://$yourOktaDomain/api/v1/meta/types/user/otyfnly5cQjJT9PnR0g4",
              "method": "GET"
            },
            "schema": {
              "rel": "schema",
              "href": "https://$yourOktaDomain/api/v1/meta/schemas/user/oscfnly5cQjJT9PnR0g4",
              "method": "GET"
            }
          },
          "created": "2019-04-10T02:00:01.000Z",
          "default": false,
          "createdBy": "00ufnlhzppWItClAI0g4",
          "description": "Custom user type",
          "displayName": "Nootype",
          "lastUpdated": "2019-04-10T02:00:01.000Z",
          "lastUpdatedBy": "00ufnlhzppWItClAI0g4"
        }
      ]
  userTypes.updateUserType:
    description: |-
      Updates an existing User Type. A PUT is a full replace operation; a POST is a partial update. Only the displayName and description elements can be changed; the name of an existing User Type can't be changed.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/user-types/#update-user-type
    example:
      inputs: [
        {
          "name": "updatedTypeName",
          "description": "Updated description",
          "displayName": "Updated Name for UI"
        }
      ]
      outputs: [
        {
          "id": "otyfnly5cQjJT9PnR0g4",
          "ref": {
            "id": "otyfnly5cQjJT9PnR0g4",
            "refClass": "com.saasure.db.dto.platform.entity.cvd.CVDType"
          },
          "name": "aNewType",
          "_links": {
            "self": {
              "rel": "self",
              "href": "https://$yourOktaDomain/api/v1/meta/types/user/otyfnly5cQjJT9PnR0g4",
              "method": "GET"
            },
            "schema": {
              "rel": "schema",
              "href": "https://$yourOktaDomain/api/v1/meta/schemas/user/oscfnly5cQjJT9PnR0g4",
              "method": "GET"
            }
          },
          "created": "2019-04-10T02:00:01.000Z",
          "default": false,
          "createdBy": "00ufnlhzppWItClAI0g4",
          "description": "Any description that means something useful to you",
          "displayName": "TheDisplayName",
          "lastUpdated": "2019-04-10T02:00:01.000Z",
          "lastUpdatedBy": "00ufnlhzppWItClAI0g4"
        }
      ]
  zones.createBlockListNetworkZone:
    description: |-
      Creates a new Block List Network Zone
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/zones/#create-a-block-list-network-zone
    example:
      inputs: [
        {
          "id": null,
          "name": "newBlockListNetworkZone",
          "type": "IP",
          "usage": "BLOCKLIST",
          "status": "ACTIVE",
          "created": null,
          "proxies": null,
          "gateways": [
            {
              "type": "CIDR",
              "value": "1.2.3.4/24"
            },
            {
              "type": "CIDR",
              "value": "2.3.4.5/24"
            }
          ],
          "lastUpdated": null
        }
      ]
      outputs: [
        {
          "id": "nzo1qasnPb1kqEq0e0g4",
          "name": "newBlockListNetworkZone",
          "type": "IP",
          "usage": "BLOCKLIST",
          "_links": {
            "self": {
              "href": "http://rain.okta1.com:1802/api/v1/zones/nzo1qasnPb1kqEq0e0g4",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "http://rain.okta1.com:1802/api/v1/zones/nzo1qasnPb1kqEq0e0g4/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "created": "2020-10-12T18:58:02.000Z",
          "proxies": null,
          "gateways": [
            {
              "type": "CIDR",
              "value": "1.2.3.4/24"
            },
            {
              "type": "CIDR",
              "value": "2.3.4.5/24"
            }
          ],
          "lastUpdated": "2020-10-12T18:58:02.000Z"
        }
      ]
  zones.createPolicyNetworkZone:
    description: |-
      Creates a new Policy Network Zone
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/zones/#create-a-policy-network-zone
    example:
      inputs: [
        {
          "id": null,
          "name": "newNetworkZone",
          "type": "IP",
          "status": "ACTIVE",
          "created": null,
          "proxies": [
            {
              "type": "CIDR",
              "value": "2.2.3.4/24"
            },
            {
              "type": "CIDR",
              "value": "3.3.4.5/24"
            }
          ],
          "gateways": [
            {
              "type": "CIDR",
              "value": "1.2.3.4/24"
            },
            {
              "type": "CIDR",
              "value": "2.3.4.5/24"
            }
          ],
          "lastUpdated": null
        }
      ]
      outputs: [
        {
          "id": "nzouagptWUz5DlLfM0g3",
          "name": "newNetworkZone",
          "type": "IP",
          "usage": "POLICY",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/zones/nzouagptWUz5DlLfM0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/zones/nzouagptWUz5DlLfM0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "created": "2017-01-24T19:52:34.000Z",
          "proxies": [
            {
              "type": "CIDR",
              "value": "2.2.3.4/24"
            },
            {
              "type": "CIDR",
              "value": "3.3.4.5/24"
            }
          ],
          "gateways": [
            {
              "type": "CIDR",
              "value": "1.2.3.4/24"
            },
            {
              "type": "CIDR",
              "value": "2.3.4.5/24"
            }
          ],
          "lastUpdated": "2017-01-24T19:52:34.000Z"
        }
      ]
  zones.getNetworkZone:
    description: |-
      Gets a Network Zone by ID
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/zones/#get-a-network-zone
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "nzowc1U5Jh5xuAK0o0g3",
          "asns": [
            "23457"
          ],
          "name": "test",
          "type": "DYNAMIC",
          "usage": "POLICY",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/zones/nzowc1U5Jh5xuAK0o0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/zones/nzowc1U5Jh5xuAK0o0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "created": "2019-05-17T18:44:31.000Z",
          "locations": [
            {
              "region": null,
              "country": "AX"
            }
          ],
          "proxyType": null,
          "lastUpdated": "2019-05-21T13:50:49.000Z"
        }
      ]
  zones.listZones:
    description: |-
      Returns a list of all zones
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/zones/#list-all-zones
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "nzoo6s03dLsg2I7HK0g3",
          "name": "BlockedIpZone",
          "type": "IP",
          "usage": "BLOCKLIST",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/zones/nzoo6s03dLsg2I7HK0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/zones/nzoo6s03dLsg2I7HK0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": true,
          "created": "2017-07-28T23:24:36.000Z",
          "proxies": null,
          "gateways": [
            {
              "type": "RANGE",
              "value": "123.123.123.123-123.123.123.123"
            }
          ],
          "lastUpdated": "2017-08-14T20:41:08.000Z"
        }
      ]
  zones.listZonesWithFilter:
    description: |-
      Lists all Zones that match the filter criteria. This operation requires URL encoding. For example, filter=(id eq 'nzoul0wf9jyb8xwZm0g3' or id eq 'nzoul1MxmGN18NDQT0g3') is encoded as filter=%28id+eq+%22nzoul0wf9jyb8xwZm0g3%22+or+id+eq+%22nzoul1MxmGN18NDQT0g3%22%29.
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/zones/#list-zones-with-a-filter
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "nzoul0wf9jyb8xwZm0g3",
          "name": "0",
          "type": "IP",
          "usage": "POLICY",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/zones/nzoul0wf9jyb8xwZm0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/zones/nzoul0wf9jyb8xwZm0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "created": "2017-01-24T19:52:48.000Z",
          "proxies": [
            {
              "type": "CIDR",
              "value": "2.2.3.4/24"
            },
            {
              "type": "CIDR",
              "value": "3.3.4.5/24"
            },
            {
              "type": "RANGE",
              "value": "4.4.5.6-4.4.5.8"
            },
            {
              "type": "RANGE",
              "value": "5.5.6.7-5.5.6.9"
            }
          ],
          "gateways": [
            {
              "type": "CIDR",
              "value": "1.2.3.4/24"
            },
            {
              "type": "CIDR",
              "value": "2.3.4.5/24"
            },
            {
              "type": "RANGE",
              "value": "3.4.5.6-3.4.5.8"
            },
            {
              "type": "RANGE",
              "value": "4.5.6.7-4.5.6.9"
            }
          ],
          "lastUpdated": "2017-01-24T19:52:48.000Z"
        }
      ]
  zones.updateNetworkZone:
    description: |-
      Updates an existing Network Zone
    versions:
      from: 1.0.0
    link: https://developer.okta.com/docs/reference/api/zones/#update-a-network-zone
    example:
      inputs: [
        {
          "id": "nzovw2rFz2YoqmvwZ0g3",
          "name": "UpdatedNetZone",
          "type": "IP",
          "usage": "POLICY",
          "status": "ACTIVE",
          "created": "2017-01-24T19:53:28.000Z",
          "proxies": [
            {
              "type": "CIDR",
              "value": "12.2.3.4/24"
            },
            {
              "type": "CIDR",
              "value": "13.3.4.5/24"
            },
            {
              "type": "RANGE",
              "value": "14.4.5.6-14.4.5.8"
            },
            {
              "type": "RANGE",
              "value": "15.5.6.7-15.5.6.9"
            }
          ],
          "gateways": [
            {
              "type": "CIDR",
              "value": "10.2.3.4/24"
            },
            {
              "type": "CIDR",
              "value": "12.3.4.5/24"
            },
            {
              "type": "RANGE",
              "value": "13.4.5.6-13.4.5.8"
            },
            {
              "type": "RANGE",
              "value": "14.5.6.7-14.5.6.9"
            }
          ],
          "lastUpdated": "2017-01-24T19:53:28.000Z"
        }
      ]
      outputs: [
        {
          "id": "nzovw2rFz2YoqmvwZ0g3",
          "name": "UpdatedNetZone",
          "type": "IP",
          "usage": "POLICY",
          "_links": {
            "self": {
              "href": "https://$yourOktaDomain/api/v1/zones/nzovw2rFz2YoqmvwZ0g3",
              "hints": {
                "allow": [
                  "GET",
                  "PUT",
                  "DELETE"
                ]
              }
            },
            "deactivate": {
              "href": "https://$yourOktaDomain/api/v1/zones/nzovw2rFz2YoqmvwZ0g3/lifecycle/deactivate",
              "hints": {
                "allow": [
                  "POST"
                ]
              }
            }
          },
          "status": "ACTIVE",
          "system": false,
          "created": "2017-01-24T19:53:28.000Z",
          "proxies": [
            {
              "type": "CIDR",
              "value": "12.2.3.4/24"
            },
            {
              "type": "CIDR",
              "value": "13.3.4.5/24"
            },
            {
              "type": "RANGE",
              "value": "14.4.5.6-14.4.5.8"
            },
            {
              "type": "RANGE",
              "value": "15.5.6.7-15.5.6.9"
            }
          ],
          "gateways": [
            {
              "type": "CIDR",
              "value": "10.2.3.4/24"
            },
            {
              "type": "CIDR",
              "value": "12.3.4.5/24"
            },
            {
              "type": "RANGE",
              "value": "13.4.5.6-13.4.5.8"
            },
            {
              "type": "RANGE",
              "value": "14.5.6.7-14.5.6.9"
            }
          ],
          "lastUpdated": "2017-01-24T19:53:28.000Z"
        }
      ]
