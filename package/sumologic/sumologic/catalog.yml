Product:
  name: Sumo Logic
  versions: [1.0.0]
  package: sumologic.sumologic
  description: |-
    Sumo Logic
  link: https://www.sumologic.com/
  contentType: json
Operations:
  addAllowlistedCidrs:
    description: |-
      Add CIDR notations and/or IP addresses to the allowlist of the organization if not already there. When service allowlisting functionality is enabled, CIDRs/IP addresses that are allowlisted will have access to Sumo Logic and/or content sharing.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/addAllowlistedCidrs
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "cidr"
                ],
                "properties": {
                  "cidr": {
                    "type": "string",
                    "example": "192.35.24.1",
                    "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
                    "description": "The string representation of the CIDR notation or IP address.",
                    "x-pattern-message": "Invalid CIDR/IP"
                  },
                  "description": {
                    "type": "string",
                    "example": "Accountant",
                    "description": "Description of the CIDR notation or IP address."
                  }
                },
                "description": "A CIDR notation or IP address along with its description."
              },
              "maxItems": 50,
              "description": "An array of CIDR notations and/or IP addresses."
            }
          },
          "description": "A list of CIDR notations and/or IP addresses."
        }
      ]
  addContentPermissions:
    description: |-
      Add permissions to a content item with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/addContentPermissions
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "contentPermissionAssignments",
            "notificationMessage",
            "notifyRecipients"
          ],
          "properties": {
            "notifyRecipients": {
              "type": "boolean",
              "description": "Set this to \"true\" to notify the users who had a permission update."
            },
            "notificationMessage": {
              "type": "string",
              "description": "The notification message sent to the users who had a permission update."
            },
            "contentPermissionAssignments": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "contentId",
                  "permissionName",
                  "sourceId",
                  "sourceType"
                ],
                "properties": {
                  "sourceId": {
                    "type": "string",
                    "description": "An identifier that belongs to the source type chosen above. For e.g. if the sourceType is set to \"user\", sourceId should be identifier of a user (same goes for `role` and `org` sourceType)"
                  },
                  "contentId": {
                    "type": "string",
                    "description": "Unique identifier for the content item."
                  },
                  "sourceType": {
                    "type": "string",
                    "example": "role",
                    "pattern": "^(user|role|org)$",
                    "description": "Type of source for the permission. Valid values are: `user`, `role`, and `org`.",
                    "x-pattern-message": "must be one of the following: `user`, `role`, `org`"
                  },
                  "permissionName": {
                    "type": "string",
                    "pattern": "^(View|GrantView|Edit|GrantEdit|Manage|GrantManage)$",
                    "description": "Content permission name. Valid values are: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, and `GrantManage`.",
                    "x-pattern-message": "must be one of the following: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, `GrantManage`"
                  }
                }
              },
              "description": "Content permissions to be updated."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "explicitPermissions"
          ],
          "properties": {
            "explicitPermissions": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "contentId",
                  "permissionName",
                  "sourceId",
                  "sourceType"
                ],
                "properties": {
                  "sourceId": {
                    "type": "string",
                    "description": "An identifier that belongs to the source type chosen above. For e.g. if the sourceType is set to \"user\", sourceId should be identifier of a user (same goes for `role` and `org` sourceType)"
                  },
                  "contentId": {
                    "type": "string",
                    "description": "Unique identifier for the content item."
                  },
                  "sourceType": {
                    "type": "string",
                    "example": "role",
                    "pattern": "^(user|role|org)$",
                    "description": "Type of source for the permission. Valid values are: `user`, `role`, and `org`.",
                    "x-pattern-message": "must be one of the following: `user`, `role`, `org`"
                  },
                  "permissionName": {
                    "type": "string",
                    "pattern": "^(View|GrantView|Edit|GrantEdit|Manage|GrantManage)$",
                    "description": "Content permission name. Valid values are: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, and `GrantManage`.",
                    "x-pattern-message": "must be one of the following: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, `GrantManage`"
                  }
                }
              },
              "description": "Explicitly assigned content permissions."
            },
            "implicitPermissions": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "contentId",
                  "permissionName",
                  "sourceId",
                  "sourceType"
                ],
                "properties": {
                  "sourceId": {
                    "type": "string",
                    "description": "An identifier that belongs to the source type chosen above. For e.g. if the sourceType is set to \"user\", sourceId should be identifier of a user (same goes for `role` and `org` sourceType)"
                  },
                  "contentId": {
                    "type": "string",
                    "description": "Unique identifier for the content item."
                  },
                  "sourceType": {
                    "type": "string",
                    "example": "role",
                    "pattern": "^(user|role|org)$",
                    "description": "Type of source for the permission. Valid values are: `user`, `role`, and `org`.",
                    "x-pattern-message": "must be one of the following: `user`, `role`, `org`"
                  },
                  "permissionName": {
                    "type": "string",
                    "pattern": "^(View|GrantView|Edit|GrantEdit|Manage|GrantManage)$",
                    "description": "Content permission name. Valid values are: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, and `GrantManage`.",
                    "x-pattern-message": "must be one of the following: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, `GrantManage`"
                  }
                }
              },
              "description": "Implicitly inherited content permissions."
            }
          }
        }
      ]
  assignCollectorToBudget:
    description: |-
      Assign a Collector to a budget.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/assignCollectorToBudget
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "action",
                "capacityBytes",
                "fieldValue",
                "name",
                "resetTime",
                "timezone"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Developer Budget",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "Display name of the ingest budget."
                },
                "action": {
                  "type": "string",
                  "example": "stopCollecting",
                  "pattern": "^(keepCollecting|stopCollecting)$",
                  "description": "Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n  * `stopCollecting`\n  * `keepCollecting`",
                  "x-pattern-message": "must be either `keepCollecting` or `stopCollecting`"
                },
                "timezone": {
                  "type": "string",
                  "example": "America/Los_Angeles",
                  "description": "Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
                },
                "resetTime": {
                  "type": "string",
                  "example": "23:30",
                  "maxLength": 5,
                  "minLength": 5,
                  "description": "Reset time of the ingest budget in HH:MM format."
                },
                "fieldValue": {
                  "type": "string",
                  "example": "dev_30_gb",
                  "maxLength": 1024,
                  "minLength": 1,
                  "description": "Custom field value that is used to assign Collectors to the ingest budget."
                },
                "description": {
                  "type": "string",
                  "maxLength": 1024,
                  "minLength": 0,
                  "description": "Description of the ingest budget."
                },
                "capacityBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "minimum": 0,
                  "description": "Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit."
                },
                "auditThreshold": {
                  "type": "integer",
                  "format": "int32",
                  "example": 85,
                  "maximum": 99,
                  "minimum": 1,
                  "description": "The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdByUser",
                "modifiedAt",
                "modifiedByUser"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdByUser": {
                  "type": "object",
                  "required": [
                    "email",
                    "firstName",
                    "id",
                    "lastName"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "User's identifier."
                    },
                    "email": {
                      "type": "string",
                      "example": "johndoe@acme.com",
                      "description": "User's email."
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe",
                      "description": "User's last name."
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John",
                      "description": "User's first name."
                    }
                  }
                },
                "modifiedByUser": {
                  "type": "object",
                  "required": [
                    "email",
                    "firstName",
                    "id",
                    "lastName"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "User's identifier."
                    },
                    "email": {
                      "type": "string",
                      "example": "johndoe@acme.com",
                      "description": "User's email."
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe",
                      "description": "User's last name."
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John",
                      "description": "User's first name."
                    }
                  }
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the ingest budget."
                },
                "usageBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 900,
                  "description": "Current usage since the last reset, in bytes."
                },
                "usageStatus": {
                  "type": "string",
                  "example": "Approaching",
                  "description": "Status of the current usage. Can be `Normal`, `Approaching`, `Exceeded`, or `Unknown` (unable to retrieve usage)."
                },
                "numberOfCollectors": {
                  "type": "integer",
                  "format": "int64",
                  "example": 10,
                  "description": "Number of collectors assigned to the ingest budget."
                }
              }
            }
          ]
        }
      ]
  assignRoleToUser:
    description: |-
      Assign a role to a user in the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/assignRoleToUser
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "DataAdmin",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "Name of the role."
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "0000000006743FE0",
                    "0000000005FCE0EE"
                  ],
                  "description": "List of user identifiers to assign the role to."
                },
                "description": {
                  "type": "string",
                  "example": "Manage data of the org.",
                  "maxLength": 255,
                  "minLength": 0,
                  "description": "Description of the role."
                },
                "capabilities": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "manageContent",
                    "manageDataVolumeFeed",
                    "manageFieldExtractionRules",
                    "manageS3DataForwarding"
                  ],
                  "description": "List of [capabilities](https://help.sumologic.com/Manage/Users-and-Roles/Manage-Roles/Role-Capabilities) associated with this role. Valid values are\n### Data Management\n  - viewCollectors\n  - manageCollectors\n  - manageBudgets\n  - manageDataVolumeFeed\n  - viewFieldExtraction\n  - manageFieldExtractionRules\n  - manageS3DataForwarding\n  - manageContent\n  - dataVolumeIndex\n  - viewConnections\n  - manageConnections\n  - viewScheduledViews\n  - manageScheduledViews\n  - viewPartitions\n  - managePartitions\n  - viewFields\n  - manageFields\n  - viewAccountOverview\n  - manageTokens\n  - manageDataStreams\n\n### Entity management\n  - manageEntityTypeConfig\n\n### Metrics\n  - manageMonitors\n  - metricsTransformation\n  - metricsExtraction\n  - metricsRules\n\n### Security\n  - managePasswordPolicy\n  - ipAllowlisting\n  - createAccessKeys\n  - manageAccessKeys\n  - manageSupportAccountAccess\n  - manageAuditDataFeed\n  - manageSaml\n  - shareDashboardOutsideOrg\n  - manageOrgSettings\n  - changeDataAccessLevel\n\n### Dashboards\n  - shareDashboardWorld\n  - shareDashboardAllowlist\n\n### UserManagement\n  - manageUsersAndRoles\n\n### Observability\n  - searchAuditIndex\n  - auditEventIndex\n\n### Cloud SIEM Enterprise\n  - viewCse\n\n### Monitors (New)\n  - viewMonitorsV2\n  - manageMonitorsV2"
                },
                "filterPredicate": {
                  "type": "string",
                  "example": "!_sourceCategory=billing",
                  "description": "A search filter to restrict access to specific logs. The filter is silently added to the beginning of each query a user runs. For example, using '!_sourceCategory=billing' as a filter predicate will prevent users assigned to the role from viewing logs from the source category named 'billing'."
                },
                "autofillDependencies": {
                  "type": "boolean",
                  "default": true,
                  "description": "Set this to true if you want to automatically append all missing capability requirements. If set to false an error will be thrown if any capabilities are missing their dependencies."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0000000000E20FE3",
                  "description": "Unique identifier for the role."
                },
                "systemDefined": {
                  "type": "boolean",
                  "example": false,
                  "description": "Role is system or user defined."
                }
              }
            }
          ],
          "x-tf-resource-name": "Role",
          "x-tf-generated-properties": "id,name,description,filterPredicate,capabilities"
        }
      ]
  asyncCopyStatus:
    description: |-
      Get the status of the copy request with the given job identifier. On success, field `statusMessage` will contain identifier of the newly copied content in format: `id: {hexIdentifier}`.
      
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/asyncCopyStatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "example": {
            "status": "Success",
            "statusMessage": ""
          },
          "required": [
            "status"
          ],
          "properties": {
            "error": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "string",
                  "example": "auth:password_too_short",
                  "description": "An error code describing the type of error."
                },
                "meta": {
                  "type": "object",
                  "example": {
                    "minLength": 12,
                    "actualLength": 5
                  },
                  "description": "An optional list of metadata about the error."
                },
                "detail": {
                  "type": "string",
                  "example": "Your password was 5 characters long, the minimum length is 12 characters. See http://example.com/password for more information.",
                  "description": "An optional fuller English-language description of the error."
                },
                "message": {
                  "type": "string",
                  "example": "Your password was too short.",
                  "description": "A short English-language description of the error."
                }
              }
            },
            "status": {
              "type": "string",
              "description": "Whether or not the request is in progress (`InProgress`), has completed successfully (`Success`), or has completed with an error (`Failed`)."
            },
            "statusMessage": {
              "type": "string",
              "description": "Additional status message generated if the status is not `Failed`."
            }
          }
        }
      ]
  beginAsyncCopy:
    description: |-
      Start an asynchronous content copy job with the given identifier to the destination folder. If the content item is a folder, everything under the folder is copied recursively.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/beginAsyncCopy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string",
              "example": "C03E086C137F38B4",
              "description": "Identifier to get the status of an asynchronous job."
            }
          }
        }
      ]
  beginAsyncDelete:
    description: |-
      Start an asynchronous content deletion job with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/beginAsyncDelete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string",
              "example": "C03E086C137F38B4",
              "description": "Identifier to get the status of an asynchronous job."
            }
          }
        }
      ]
  beginAsyncExport:
    description: |-
      Schedule an _asynchronous_ export of content with the given identifier. You will get back an asynchronous job identifier on success. Use the [getAsyncExportStatus](#operation/getAsyncExportStatus) endpoint and the job identifier you got back in the response to track the status of an asynchronous export job.
      If the content item is a folder, everything under the folder is exported recursively. Keep in mind when exporting large folders that there is a limit of 1000 content objects that can be exported at once. If you want to import more than 1000 content objects, then be sure to split the import into batches of 1000 objects or less.
      The results from the export are compatible with the Library import feature in the Sumo Logic user interface as well as the API content import job.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/beginAsyncExport
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string",
              "example": "C03E086C137F38B4",
              "description": "Identifier to get the status of an asynchronous job."
            }
          }
        }
      ]
  beginAsyncImport:
    description: |-
      Schedule an asynchronous import of content inside an existing folder with the given identifier. Import requests can be used to create or update content within a folder. Content items need to have a unique name within their folder. If there is already a content item with the same name in the folder, you can set the `overwrite` parameter to `true` to overwrite existing content items. By default, the `overwrite` parameter is set to `false`, where the import will fail if a content item with the same name already exist. Keep in mind when importing large folders that there is a limit of 1000 content objects that can be imported at once. If you want to import more than 1000 content objects, then be sure to split the import into batches of 1000 objects or less.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/beginAsyncImport
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string",
              "example": "C03E086C137F38B4",
              "description": "Identifier to get the status of an asynchronous job."
            }
          }
        }
      ]
  cancelRetentionUpdate:
    description: |-
      Cancel update to retention of a partition for which retention was updated previously using `reduceRetentionPeriodImmediately` parameter as false
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/cancelRetentionUpdate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  createAccessKey:
    description: |-
      Creates a new access ID and key pair. The new access key can be used from the domains specified in corsHeaders field. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:
        1. Requests with an ORIGIN header but the allowlist is empty.
        2. Requests with an ORIGIN header that don't match any entry in the allowlist.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createAccessKey
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "label"
          ],
          "properties": {
            "label": {
              "type": "string",
              "example": "automation access key",
              "maxLength": 128,
              "description": "A name for the access key to be created."
            },
            "corsHeaders": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "https://my-app.com",
                "https://mail.my-app.com"
              ],
              "maxItems": 20,
              "description": "An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request\ndepends on whether it contains an ORIGIN header and the entries in the allowlist.\nSumo Logic will reject:\n  1. Requests with an ORIGIN header but the allowlist is empty.\n  2. Requests with an ORIGIN header that don't match any entry in the allowlist."
            }
          }
        }
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "disabled",
                "id",
                "label",
                "modifiedAt"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "su0w3Q37CBzHUM",
                  "description": "Identifier of the access key."
                },
                "label": {
                  "type": "string",
                  "example": "collector access key",
                  "description": "The name of the access key."
                },
                "disabled": {
                  "type": "boolean",
                  "example": false,
                  "description": "Indicates whether the access key is disabled or not."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the access key."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "corsHeaders": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "https://my-app.com",
                    "https://mail.my-app.com"
                  ],
                  "description": "An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:\n  1. Requests with an ORIGIN header but the allowlist is empty.\n  2. Requests with an ORIGIN header that don't match any entry in the allowlist."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "example": "F9GZvb4fISxUZHM7pqHCsGXGWf4OArgmt9Tz8ewZ",
                  "description": "The key for the created access key. This field will have values only in the response for an access key create request. The value will be an empty string while listing all keys."
                }
              }
            }
          ]
        }
      ]
  createAllowlistedUser:
    description: |-
      Allowlist a user from SAML lockdown allowing them to sign in using a password in addition to SAML.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createAllowlistedUser
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "canManageSaml",
            "email",
            "firstName",
            "isActive",
            "lastLogin",
            "lastName",
            "userId"
          ],
          "properties": {
            "email": {
              "type": "string",
              "example": "john@sumologic.com",
              "description": "Email of the user."
            },
            "userId": {
              "type": "string",
              "description": "Unique identifier of the user."
            },
            "isActive": {
              "type": "boolean",
              "description": "Checks if the user is active."
            },
            "lastName": {
              "type": "string",
              "description": "Last name of the user."
            },
            "firstName": {
              "type": "string",
              "description": "First name of the user."
            },
            "lastLogin": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp of the last login of the user."
            },
            "canManageSaml": {
              "type": "boolean",
              "description": "If the user can manage SAML Configurations."
            }
          }
        }
      ]
  createArchiveJob:
    description: |-
      Create an ingestion job to pull data from your S3 bucket.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createArchiveJob
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "endTime",
            "name",
            "startTime"
          ],
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 128,
              "minLength": 1,
              "description": "The name of the ingestion job."
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "The ending timestamp of the ingestion job."
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "The starting timestamp of the ingestion job."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "endTime",
                "name",
                "startTime"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "The name of the ingestion job."
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The ending timestamp of the ingestion job."
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The starting timestamp of the ingestion job."
                }
              }
            },
            {
              "required": [
                "createdAt",
                "createdBy",
                "id",
                "status",
                "totalBytesIngested",
                "totalObjectsIngested",
                "totalObjectsScanned"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "4e214571-cf27-4114-93e6-69a98c017f3",
                  "description": "The unique identifier of the ingestion job."
                },
                "status": {
                  "type": "string",
                  "example": "Scanning",
                  "description": "The status of the ingestion job, either `Pending`,`Scanning`,`Ingesting`,`Failed`, or `Succeeded`."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The creation timestamp in UTC of the ingestion job."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "The identifier of the user who created the ingestion job."
                },
                "totalBytesIngested": {
                  "type": "integer",
                  "format": "int64",
                  "example": 100,
                  "description": "The total bytes ingested by the ingestion job."
                },
                "totalObjectsScanned": {
                  "type": "integer",
                  "format": "int64",
                  "example": 25,
                  "description": "The total number of objects scanned by the ingestion job."
                },
                "totalObjectsIngested": {
                  "type": "integer",
                  "format": "int64",
                  "example": 10,
                  "description": "The total number of objects ingested by the ingestion job."
                }
              }
            }
          ]
        }
      ]
  createConnection:
    description: |-
      Create a new connection in the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createConnection
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name",
            "type"
          ],
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^([a-zA-Z0-9 +%\\-@.,_()]+)$",
              "maxLength": 127,
              "minLength": 1,
              "description": "Name of connection. Name should be a valid alphanumeric value."
            },
            "type": {
              "type": "string",
              "pattern": "^(WebhookDefinition|ServiceNowDefinition)$",
              "description": "Type of connection. Valid values are `WebhookDefinition`, `ServiceNowDefinition`.",
              "x-pattern-message": "must be either `WebhookDefinition` or `ServiceNowDefinition`"
            },
            "description": {
              "type": "string",
              "default": "",
              "maxLength": 1024,
              "description": "Description of the connection."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "createdAt",
            "createdBy",
            "description",
            "id",
            "modifiedAt",
            "modifiedBy",
            "name",
            "type"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier for the connection."
            },
            "name": {
              "type": "string",
              "description": "Name of the connection."
            },
            "type": {
              "type": "string",
              "description": "Type of connection. Valid values are `WebhookConnection`, `ServiceNowConnection`."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            },
            "description": {
              "type": "string",
              "description": "Description of the connection."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  createDashboard:
    description: |-
      Creates a new dashboard.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createDashboard
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "timeRange",
            "title"
          ],
          "properties": {
            "theme": {
              "type": "string",
              "default": "Light",
              "example": "light",
              "pattern": "^(light|dark|Light|Dark)$",
              "description": "Theme for the dashboard. Either `Light` or `Dark`.",
              "x-pattern-message": "Must be `Light`, or `Dark`"
            },
            "title": {
              "type": "string",
              "example": "Kubernetes Dashboard",
              "maxLength": 255,
              "minLength": 1,
              "description": "Title of the dashboard."
            },
            "domain": {
              "type": "string",
              "default": "",
              "example": "aws",
              "description": "If set denotes that the dashboard concerns a given domain (e.g. `aws`, `k8s`, `app`)."
            },
            "layout": {
              "type": "object",
              "required": [
                "layoutStructures",
                "layoutType"
              ],
              "properties": {
                "layoutType": {
                  "type": "string",
                  "example": "Grid",
                  "description": "The type of panel layout on the Dashboard. For example, Grid, Tabs, or Hierarchical. Currently supports `Grid` only."
                },
                "layoutStructures": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "key",
                      "structure"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "example": "panelPANE-3DC454FD977E2A46",
                        "description": "The identifier of the panel that this structure applies to."
                      },
                      "structure": {
                        "type": "string",
                        "example": "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\":0}",
                        "description": "The structure of a panel."
                      }
                    }
                  },
                  "description": "Layout structures for the panel childen."
                }
              },
              "discriminator": {
                "propertyName": "layoutType"
              }
            },
            "panels": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "key",
                  "panelType"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "2F7D449E3D511066",
                    "description": "Unique identifier for the panel."
                  },
                  "key": {
                    "type": "string",
                    "example": "panelca6280e4a75fca45",
                    "description": "Key for the panel. Used to create searches for the queries in the panel and configure the layout of the panel in the dashboard.\n"
                  },
                  "title": {
                    "type": "string",
                    "example": "This panel shows memory usage for your kubernetes pod.",
                    "description": "Title of the panel."
                  },
                  "panelType": {
                    "type": "string",
                    "example": "SumoSearchPanel",
                    "description": "Type of panel."
                  },
                  "visualSettings": {
                    "type": "string",
                    "example": "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}",
                    "description": "Visual settings of the panel."
                  },
                  "keepVisualSettingsConsistentWithParent": {
                    "type": "boolean",
                    "default": true,
                    "description": "Keeps the visual settings, like series colors, consistent with the settings of the parent panel."
                  }
                },
                "discriminator": {
                  "propertyName": "panelType"
                }
              },
              "description": "Panels in the dashboard."
            },
            "folderId": {
              "type": "string",
              "example": "000000000C1C17C6",
              "description": "The identifier of the folder to save the dashboard in. By default it is saved in your personal folder.\n"
            },
            "timeRange": {
              "type": "object",
              "example": {
                "from": {
                  "type": "RelativeTimeRangeBoundary",
                  "relativeTime": "-15m"
                },
                "type": "BeginBoundedTimeRange"
              },
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`."
                }
              },
              "discriminator": {
                "propertyName": "type"
              }
            },
            "variables": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "sourceDefinition"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier for the variable."
                  },
                  "name": {
                    "type": "string",
                    "example": "_sourceHost",
                    "pattern": "^[a-zA-Z0-9_]*$",
                    "maxLength": 256,
                    "description": "Name of the variable. The variable name is case-insensitive. Only alphanumeric, and underscores are\nallowed in the variable name.\n",
                    "x-pattern-message": "Only alphanumeric, and underscores are allowed."
                  },
                  "hideFromUI": {
                    "type": "boolean",
                    "default": false,
                    "example": false,
                    "description": "Hide the variable in the dashboard UI."
                  },
                  "displayName": {
                    "type": "string",
                    "example": "Source Host",
                    "maxLength": 256,
                    "description": "Display name of the variable shown in the UI. If this field is empty, the name field will be used.\nThe display name is case-insensitive. Only numbers, and underscores are allowed in the variable name.\nThis field is not yet supported by the UI.\n"
                  },
                  "defaultValue": {
                    "type": "string",
                    "example": "default_value",
                    "description": "Default value of the variable."
                  },
                  "allowMultiSelect": {
                    "type": "boolean",
                    "default": false,
                    "example": false,
                    "description": "Allow multiple selections in the values dropdown."
                  },
                  "includeAllOption": {
                    "type": "boolean",
                    "default": true,
                    "example": true,
                    "description": "Include an \"All\" option at the top of the variable's values dropdown."
                  },
                  "sourceDefinition": {
                    "type": "object",
                    "required": [
                      "variableSourceType"
                    ],
                    "properties": {
                      "variableSourceType": {
                        "type": "string",
                        "example": "MetadataVariableSourceDefinition",
                        "description": "Source type of the variable values."
                      }
                    },
                    "discriminator": {
                      "propertyName": "variableSourceType"
                    }
                  }
                }
              },
              "description": "Variables to apply to the panels."
            },
            "description": {
              "type": "string",
              "example": "A view of pods, namespaces and nodes of your cluster.",
              "description": "Description of the dashboard."
            },
            "coloringRules": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "coloringThresholds",
                  "multipleSeriesAggregateFunction",
                  "scope",
                  "singleSeriesAggregateFunction"
                ],
                "properties": {
                  "scope": {
                    "type": "string",
                    "example": "CPU_*",
                    "description": "Regex string to match queries to apply coloring to."
                  },
                  "colorThresholds": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "color"
                      ],
                      "properties": {
                        "max": {
                          "type": "number",
                          "format": "double",
                          "example": 50,
                          "description": "Absolute exclusive threshold to color by."
                        },
                        "min": {
                          "type": "number",
                          "format": "double",
                          "example": 0,
                          "description": "Absolute inclusive threshold to color by."
                        },
                        "color": {
                          "type": "string",
                          "example": "FFFFFF",
                          "description": "Color for the threshold."
                        }
                      }
                    },
                    "description": "Color thresholds."
                  },
                  "singleSeriesAggregateFunction": {
                    "type": "string",
                    "example": "Average",
                    "description": "Function to aggregate one series into one single value."
                  },
                  "multipleSeriesAggregateFunction": {
                    "type": "string",
                    "example": "Average",
                    "description": "Function to aggregate the aggregate values of multiple time series into one single value."
                  }
                }
              },
              "description": "Rules to set the color of data. This is an internal field and is not current supported by UI.",
              "x-visibility": "private"
            },
            "refreshInterval": {
              "type": "integer",
              "format": "int32",
              "description": "Interval of time (in seconds) to automatically refresh the dashboard. A value of 0 means we never automatically refresh the dashboard. This functionality is currently not supported.\n"
            },
            "topologyLabelMap": {
              "type": "object",
              "example": {
                "service": [
                  "kube-scheduler",
                  "kube-dns"
                ]
              },
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Map from topology labels to `TopologyLabelValuesList`.",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Value of the label."
                    },
                    "default": [],
                    "example": "kube-scheduler",
                    "description": "List of values corresponding to a key of a label."
                  }
                }
              },
              "description": "Map of the topology labels. Each label has a key and a list of values. If a value is `*`, it means the label will match content for all values of its key.\n"
            }
          }
        }
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "timeRange",
                "title"
              ],
              "properties": {
                "theme": {
                  "type": "string",
                  "default": "Light",
                  "example": "light",
                  "pattern": "^(light|dark|Light|Dark)$",
                  "description": "Theme for the dashboard. Either `Light` or `Dark`.",
                  "x-pattern-message": "Must be `Light`, or `Dark`"
                },
                "title": {
                  "type": "string",
                  "example": "Kubernetes Dashboard",
                  "maxLength": 255,
                  "minLength": 1,
                  "description": "Title of the dashboard."
                },
                "domain": {
                  "type": "string",
                  "default": "",
                  "example": "aws",
                  "description": "If set denotes that the dashboard concerns a given domain (e.g. `aws`, `k8s`, `app`)."
                },
                "layout": {
                  "type": "object",
                  "required": [
                    "layoutStructures",
                    "layoutType"
                  ],
                  "properties": {
                    "layoutType": {
                      "type": "string",
                      "example": "Grid",
                      "description": "The type of panel layout on the Dashboard. For example, Grid, Tabs, or Hierarchical. Currently supports `Grid` only."
                    },
                    "layoutStructures": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "key",
                          "structure"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "example": "panelPANE-3DC454FD977E2A46",
                            "description": "The identifier of the panel that this structure applies to."
                          },
                          "structure": {
                            "type": "string",
                            "example": "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\":0}",
                            "description": "The structure of a panel."
                          }
                        }
                      },
                      "description": "Layout structures for the panel childen."
                    }
                  },
                  "discriminator": {
                    "propertyName": "layoutType"
                  }
                },
                "panels": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "key",
                      "panelType"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "2F7D449E3D511066",
                        "description": "Unique identifier for the panel."
                      },
                      "key": {
                        "type": "string",
                        "example": "panelca6280e4a75fca45",
                        "description": "Key for the panel. Used to create searches for the queries in the panel and configure the layout of the panel in the dashboard.\n"
                      },
                      "title": {
                        "type": "string",
                        "example": "This panel shows memory usage for your kubernetes pod.",
                        "description": "Title of the panel."
                      },
                      "panelType": {
                        "type": "string",
                        "example": "SumoSearchPanel",
                        "description": "Type of panel."
                      },
                      "visualSettings": {
                        "type": "string",
                        "example": "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}",
                        "description": "Visual settings of the panel."
                      },
                      "keepVisualSettingsConsistentWithParent": {
                        "type": "boolean",
                        "default": true,
                        "description": "Keeps the visual settings, like series colors, consistent with the settings of the parent panel."
                      }
                    },
                    "discriminator": {
                      "propertyName": "panelType"
                    }
                  },
                  "description": "Panels in the dashboard."
                },
                "folderId": {
                  "type": "string",
                  "example": "000000000C1C17C6",
                  "description": "The identifier of the folder to save the dashboard in. By default it is saved in your personal folder.\n"
                },
                "timeRange": {
                  "type": "object",
                  "example": {
                    "from": {
                      "type": "RelativeTimeRangeBoundary",
                      "relativeTime": "-15m"
                    },
                    "type": "BeginBoundedTimeRange"
                  },
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`."
                    }
                  },
                  "discriminator": {
                    "propertyName": "type"
                  }
                },
                "variables": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "sourceDefinition"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the variable."
                      },
                      "name": {
                        "type": "string",
                        "example": "_sourceHost",
                        "pattern": "^[a-zA-Z0-9_]*$",
                        "maxLength": 256,
                        "description": "Name of the variable. The variable name is case-insensitive. Only alphanumeric, and underscores are\nallowed in the variable name.\n",
                        "x-pattern-message": "Only alphanumeric, and underscores are allowed."
                      },
                      "hideFromUI": {
                        "type": "boolean",
                        "default": false,
                        "example": false,
                        "description": "Hide the variable in the dashboard UI."
                      },
                      "displayName": {
                        "type": "string",
                        "example": "Source Host",
                        "maxLength": 256,
                        "description": "Display name of the variable shown in the UI. If this field is empty, the name field will be used.\nThe display name is case-insensitive. Only numbers, and underscores are allowed in the variable name.\nThis field is not yet supported by the UI.\n"
                      },
                      "defaultValue": {
                        "type": "string",
                        "example": "default_value",
                        "description": "Default value of the variable."
                      },
                      "allowMultiSelect": {
                        "type": "boolean",
                        "default": false,
                        "example": false,
                        "description": "Allow multiple selections in the values dropdown."
                      },
                      "includeAllOption": {
                        "type": "boolean",
                        "default": true,
                        "example": true,
                        "description": "Include an \"All\" option at the top of the variable's values dropdown."
                      },
                      "sourceDefinition": {
                        "type": "object",
                        "required": [
                          "variableSourceType"
                        ],
                        "properties": {
                          "variableSourceType": {
                            "type": "string",
                            "example": "MetadataVariableSourceDefinition",
                            "description": "Source type of the variable values."
                          }
                        },
                        "discriminator": {
                          "propertyName": "variableSourceType"
                        }
                      }
                    }
                  },
                  "description": "Variables to apply to the panels."
                },
                "description": {
                  "type": "string",
                  "example": "A view of pods, namespaces and nodes of your cluster.",
                  "description": "Description of the dashboard."
                },
                "coloringRules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "coloringThresholds",
                      "multipleSeriesAggregateFunction",
                      "scope",
                      "singleSeriesAggregateFunction"
                    ],
                    "properties": {
                      "scope": {
                        "type": "string",
                        "example": "CPU_*",
                        "description": "Regex string to match queries to apply coloring to."
                      },
                      "colorThresholds": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "color"
                          ],
                          "properties": {
                            "max": {
                              "type": "number",
                              "format": "double",
                              "example": 50,
                              "description": "Absolute exclusive threshold to color by."
                            },
                            "min": {
                              "type": "number",
                              "format": "double",
                              "example": 0,
                              "description": "Absolute inclusive threshold to color by."
                            },
                            "color": {
                              "type": "string",
                              "example": "FFFFFF",
                              "description": "Color for the threshold."
                            }
                          }
                        },
                        "description": "Color thresholds."
                      },
                      "singleSeriesAggregateFunction": {
                        "type": "string",
                        "example": "Average",
                        "description": "Function to aggregate one series into one single value."
                      },
                      "multipleSeriesAggregateFunction": {
                        "type": "string",
                        "example": "Average",
                        "description": "Function to aggregate the aggregate values of multiple time series into one single value."
                      }
                    }
                  },
                  "description": "Rules to set the color of data. This is an internal field and is not current supported by UI.",
                  "x-visibility": "private"
                },
                "refreshInterval": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Interval of time (in seconds) to automatically refresh the dashboard. A value of 0 means we never automatically refresh the dashboard. This functionality is currently not supported.\n"
                },
                "topologyLabelMap": {
                  "type": "object",
                  "example": {
                    "service": [
                      "kube-scheduler",
                      "kube-dns"
                    ]
                  },
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "Map from topology labels to `TopologyLabelValuesList`.",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Value of the label."
                        },
                        "default": [],
                        "example": "kube-scheduler",
                        "description": "List of values corresponding to a key of a label."
                      }
                    }
                  },
                  "description": "Map of the topology labels. Each label has a key and a list of values. If a value is `*`, it means the label will match content for all values of its key.\n"
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2",
                  "description": "Unique identifier for the dashboard."
                }
              }
            }
          ]
        }
      ]
  createDynamicParsingRule:
    description: |-
      Create a new dynamic parsing rule.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createDynamicParsingRule
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "enabled",
            "name",
            "scope"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "DynamicParsingRule123",
              "maxLength": 256,
              "minLength": 1,
              "description": "Name of the dynamic parsing rule. Use a name that makes it easy to identify the rule."
            },
            "scope": {
              "type": "string",
              "example": "_sourceHost=127.0.0.1",
              "maxLength": 2048,
              "minLength": 1,
              "description": "Scope of the dynamic parsing rule. This could be a sourceCategory, sourceHost, or any other metadata that describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search, before the first pipe ( | ). You'll use the Scope to run a search against the rule."
            },
            "enabled": {
              "type": "boolean",
              "default": true,
              "example": false,
              "description": "Is the dynamic parsing rule enabled."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "enabled",
                "name",
                "scope"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "DynamicParsingRule123",
                  "maxLength": 256,
                  "minLength": 1,
                  "description": "Name of the dynamic parsing rule. Use a name that makes it easy to identify the rule."
                },
                "scope": {
                  "type": "string",
                  "example": "_sourceHost=127.0.0.1",
                  "maxLength": 2048,
                  "minLength": 1,
                  "description": "Scope of the dynamic parsing rule. This could be a sourceCategory, sourceHost, or any other metadata that describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search, before the first pipe ( | ). You'll use the Scope to run a search against the rule."
                },
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "example": false,
                  "description": "Is the dynamic parsing rule enabled."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "dateTime",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "dateTime",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0000000001C41EE4",
                  "description": "Unique identifier for the dynamic parsing rule."
                }
              }
            }
          ]
        }
      ]
  createExtractionRule:
    description: |-
      Create a new field extraction rule.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createExtractionRule
    example:
      inputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "name",
                "parseExpression",
                "scope"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "ExtractionRule123",
                  "maxLength": 256,
                  "minLength": 1,
                  "description": "Name of the field extraction rule. Use a name that makes it easy to identify the rule."
                },
                "scope": {
                  "type": "string",
                  "example": "_sourceHost=127.0.0.1",
                  "maxLength": 2048,
                  "minLength": 0,
                  "description": "Scope of the field extraction rule. This could be a sourceCategory, sourceHost, or any other metadata that describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search, before the first pipe ( | ). You'll use the Scope to run a search against the rule."
                },
                "parseExpression": {
                  "type": "string",
                  "example": "csv _raw extract 1 as f1",
                  "maxLength": 16384,
                  "description": "Describes the fields to be parsed."
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "description": "Is the field extraction rule enabled."
                }
              }
            }
          ]
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "name",
                    "parseExpression",
                    "scope"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "ExtractionRule123",
                      "maxLength": 256,
                      "minLength": 1,
                      "description": "Name of the field extraction rule. Use a name that makes it easy to identify the rule."
                    },
                    "scope": {
                      "type": "string",
                      "example": "_sourceHost=127.0.0.1",
                      "maxLength": 2048,
                      "minLength": 0,
                      "description": "Scope of the field extraction rule. This could be a sourceCategory, sourceHost, or any other metadata that describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search, before the first pipe ( | ). You'll use the Scope to run a search against the rule."
                    },
                    "parseExpression": {
                      "type": "string",
                      "example": "csv _raw extract 1 as f1",
                      "maxLength": 16384,
                      "description": "Describes the fields to be parsed."
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Is the field extraction rule enabled."
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the field extraction rule."
                },
                "fieldNames": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of extracted fields from \"parseExpression\"."
                }
              }
            }
          ],
          "x-tf-resource-name": "ExtractionRule",
          "x-tf-generated-properties": "id,name,scope,parseExpression,enabled"
        }
      ]
  createField:
    description: |-
      Adding a field will define it in the Fields schema allowing it to be assigned as metadata to your logs.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createField
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "fieldName"
          ],
          "properties": {
            "fieldName": {
              "type": "string",
              "example": "hostIP",
              "maxLength": 255,
              "minLength": 1,
              "description": "Field name."
            }
          }
        }
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "fieldName"
              ],
              "properties": {
                "fieldName": {
                  "type": "string",
                  "example": "hostIP",
                  "maxLength": 255,
                  "minLength": 1,
                  "description": "Field name."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "dataType",
                "fieldId",
                "state"
              ],
              "properties": {
                "state": {
                  "type": "string",
                  "example": "Enabled",
                  "pattern": "^(Enabled|Disabled)$",
                  "description": "Indicates whether the field is enabled and its values are being accepted. Possible values are `Enabled` and `Disabled`.",
                  "x-pattern-message": "Must be `Enabled` or `Disabled`"
                },
                "fieldId": {
                  "type": "string",
                  "example": "00000000031D02DA",
                  "description": "Identifier of the field."
                },
                "dataType": {
                  "type": "string",
                  "example": "String",
                  "pattern": "^(String|Long|Int|Double|Boolean)$",
                  "description": "Field type. Possible values are `String`, `Long`, `Int`, `Double`, and `Boolean`.",
                  "x-pattern-message": "Must be `String`, `Long`, `Int`, `Double` or `Boolean`"
                }
              }
            }
          ]
        }
      ]
  createFolder:
    description: |-
      Creates a new folder under the given parent folder.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createFolder
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name",
            "parentId"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "SampleFolder",
              "maxLength": 128,
              "minLength": 1,
              "description": "The name of the folder."
            },
            "parentId": {
              "type": "string",
              "description": "The identifier of the parent folder."
            },
            "description": {
              "type": "string",
              "example": "This is a sample folder.",
              "maxLength": 255,
              "minLength": 0,
              "description": "The description of the folder."
            }
          }
        }
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy"
                  ],
                  "properties": {
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "Identifier of the user who created the resource."
                    },
                    "modifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last modification timestamp in UTC."
                    },
                    "modifiedBy": {
                      "type": "string",
                      "example": "0000000006743FE8",
                      "description": "Identifier of the user who last modified the resource."
                    }
                  }
                },
                {
                  "required": [
                    "id",
                    "itemType",
                    "name",
                    "parentId",
                    "permissions"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "000000000C1C17C6",
                      "description": "Identifier of the content item."
                    },
                    "name": {
                      "type": "string",
                      "example": "Personal",
                      "description": "The name of the content item."
                    },
                    "itemType": {
                      "type": "string",
                      "example": "Folder",
                      "description": "Type of the content item. Supported values are:\n  1. Folder\n  2. Search\n  3. Report (for old dashboards)\n  4. Dashboard (for new dashboards)\n  5. Lookups"
                    },
                    "parentId": {
                      "type": "string",
                      "example": "0000000001C41EF2",
                      "description": "Identifier of the parent content item."
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "View",
                        "GrantView",
                        "Edit"
                      ],
                      "description": "List of permissions the user has on the content item."
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "properties": {
                "children": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "createdAt",
                          "createdBy",
                          "modifiedAt",
                          "modifiedBy"
                        ],
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                          },
                          "createdBy": {
                            "type": "string",
                            "example": "0000000006743FDD",
                            "description": "Identifier of the user who created the resource."
                          },
                          "modifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last modification timestamp in UTC."
                          },
                          "modifiedBy": {
                            "type": "string",
                            "example": "0000000006743FE8",
                            "description": "Identifier of the user who last modified the resource."
                          }
                        }
                      },
                      {
                        "required": [
                          "id",
                          "itemType",
                          "name",
                          "parentId",
                          "permissions"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "000000000C1C17C6",
                            "description": "Identifier of the content item."
                          },
                          "name": {
                            "type": "string",
                            "example": "Personal",
                            "description": "The name of the content item."
                          },
                          "itemType": {
                            "type": "string",
                            "example": "Folder",
                            "description": "Type of the content item. Supported values are:\n  1. Folder\n  2. Search\n  3. Report (for old dashboards)\n  4. Dashboard (for new dashboards)\n  5. Lookups"
                          },
                          "parentId": {
                            "type": "string",
                            "example": "0000000001C41EF2",
                            "description": "Identifier of the parent content item."
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "View",
                              "GrantView",
                              "Edit"
                            ],
                            "description": "List of permissions the user has on the content item."
                          }
                        }
                      }
                    ]
                  },
                  "description": "A list of the content items."
                },
                "description": {
                  "type": "string",
                  "example": "This is a sample folder.",
                  "maxLength": 255,
                  "minLength": 0,
                  "description": "The description of the folder."
                }
              }
            }
          ]
        }
      ]
  createIdentityProvider:
    description: |-
      Create a new SAML configuration in the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createIdentityProvider
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "configurationName",
            "issuer",
            "x509cert1"
          ],
          "properties": {
            "issuer": {
              "type": "string",
              "example": "http://www.okta.com/abxcseyuiwelflkdjh",
              "description": "The unique URL assigned to the organization by the SAML Identity Provider."
            },
            "debugMode": {
              "type": "boolean",
              "default": false,
              "description": "True if additional details are included when a user fails to sign in."
            },
            "logoutUrl": {
              "type": "string",
              "default": "",
              "example": "https://www.sumologic.com",
              "description": "The URL that users will be redirected to after signing out of Sumo Logic."
            },
            "x509cert1": {
              "type": "string",
              "description": "The certificate is used to verify the signature in SAML assertions."
            },
            "x509cert2": {
              "type": "string",
              "default": "",
              "description": "The backup certificate used to verify the signature in SAML assertions when x509cert1 expires."
            },
            "x509cert3": {
              "type": "string",
              "default": "",
              "description": "The backup certificate used to verify the signature in SAML assertions when x509cert1 expires and x509cert2 is empty."
            },
            "logoutEnabled": {
              "type": "boolean",
              "default": false,
              "description": "True if users are redirected to a URL after signing out of Sumo Logic."
            },
            "emailAttribute": {
              "type": "string",
              "default": "",
              "example": "attribute/subject",
              "description": "The email address of the new user account."
            },
            "rolesAttribute": {
              "type": "string",
              "default": "",
              "example": "Sumo_Role",
              "description": "The role that Sumo Logic will assign to users when they sign in."
            },
            "authnRequestUrl": {
              "type": "string",
              "default": "",
              "example": "https://service.sumologic.com/sumo/saml/login/9483922",
              "description": "The URL that the identity provider has assigned for Sumo Logic to submit SAML authentication requests to the identity provider."
            },
            "signAuthnRequest": {
              "type": "boolean",
              "default": false,
              "description": "True if Sumo Logic will send signed Authn requests to the identity provider."
            },
            "configurationName": {
              "type": "string",
              "example": "SumoLogic",
              "description": "Name of the SSO policy or another name used to describe the policy internally."
            },
            "isRedirectBinding": {
              "type": "boolean",
              "default": false,
              "description": "True if the SAML binding is of HTTP Redirect type."
            },
            "spInitiatedLoginPath": {
              "type": "string",
              "default": "",
              "example": "http://www.okta.com/abxcseyuiwelflkdjh",
              "description": "The identifier used to generate a unique URL for user login."
            },
            "spInitiatedLoginEnabled": {
              "type": "boolean",
              "default": false,
              "description": "True if Sumo Logic redirects users to your identity provider with a SAML AuthnRequest when signing in."
            },
            "onDemandProvisioningEnabled": {
              "type": "object",
              "required": [
                "onDemandProvisioningRoles"
              ],
              "properties": {
                "lastNameAttribute": {
                  "type": "string",
                  "default": "",
                  "example": "http://schemas.microsoft.com/ws/2008/06/identity/claims/surname",
                  "description": "Last name attribute of the new user account."
                },
                "firstNameAttribute": {
                  "type": "string",
                  "default": "",
                  "example": "http://schemas.microsoft.com/ws/2008/06/identity/claims/givenname",
                  "description": "First name attribute of the new user account."
                },
                "onDemandProvisioningRoles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "example": "Analyst/Administrator",
                  "description": "Sumo Logic RBAC roles to be assigned when user accounts are provisioned."
                }
              }
            },
            "disableRequestedAuthnContext": {
              "type": "boolean",
              "default": false,
              "description": "True if Sumo Logic will include the RequestedAuthnContext element of the SAML AuthnRequests it sends to the identity provider."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "configurationName",
                "issuer",
                "x509cert1"
              ],
              "properties": {
                "issuer": {
                  "type": "string",
                  "example": "http://www.okta.com/abxcseyuiwelflkdjh",
                  "description": "The unique URL assigned to the organization by the SAML Identity Provider."
                },
                "debugMode": {
                  "type": "boolean",
                  "default": false,
                  "description": "True if additional details are included when a user fails to sign in."
                },
                "logoutUrl": {
                  "type": "string",
                  "default": "",
                  "example": "https://www.sumologic.com",
                  "description": "The URL that users will be redirected to after signing out of Sumo Logic."
                },
                "x509cert1": {
                  "type": "string",
                  "description": "The certificate is used to verify the signature in SAML assertions."
                },
                "x509cert2": {
                  "type": "string",
                  "default": "",
                  "description": "The backup certificate used to verify the signature in SAML assertions when x509cert1 expires."
                },
                "x509cert3": {
                  "type": "string",
                  "default": "",
                  "description": "The backup certificate used to verify the signature in SAML assertions when x509cert1 expires and x509cert2 is empty."
                },
                "logoutEnabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "True if users are redirected to a URL after signing out of Sumo Logic."
                },
                "emailAttribute": {
                  "type": "string",
                  "default": "",
                  "example": "attribute/subject",
                  "description": "The email address of the new user account."
                },
                "rolesAttribute": {
                  "type": "string",
                  "default": "",
                  "example": "Sumo_Role",
                  "description": "The role that Sumo Logic will assign to users when they sign in."
                },
                "authnRequestUrl": {
                  "type": "string",
                  "default": "",
                  "example": "https://service.sumologic.com/sumo/saml/login/9483922",
                  "description": "The URL that the identity provider has assigned for Sumo Logic to submit SAML authentication requests to the identity provider."
                },
                "signAuthnRequest": {
                  "type": "boolean",
                  "default": false,
                  "description": "True if Sumo Logic will send signed Authn requests to the identity provider."
                },
                "configurationName": {
                  "type": "string",
                  "example": "SumoLogic",
                  "description": "Name of the SSO policy or another name used to describe the policy internally."
                },
                "isRedirectBinding": {
                  "type": "boolean",
                  "default": false,
                  "description": "True if the SAML binding is of HTTP Redirect type."
                },
                "spInitiatedLoginPath": {
                  "type": "string",
                  "default": "",
                  "example": "http://www.okta.com/abxcseyuiwelflkdjh",
                  "description": "The identifier used to generate a unique URL for user login."
                },
                "spInitiatedLoginEnabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "True if Sumo Logic redirects users to your identity provider with a SAML AuthnRequest when signing in."
                },
                "onDemandProvisioningEnabled": {
                  "type": "object",
                  "required": [
                    "onDemandProvisioningRoles"
                  ],
                  "properties": {
                    "lastNameAttribute": {
                      "type": "string",
                      "default": "",
                      "example": "http://schemas.microsoft.com/ws/2008/06/identity/claims/surname",
                      "description": "Last name attribute of the new user account."
                    },
                    "firstNameAttribute": {
                      "type": "string",
                      "default": "",
                      "example": "http://schemas.microsoft.com/ws/2008/06/identity/claims/givenname",
                      "description": "First name attribute of the new user account."
                    },
                    "onDemandProvisioningRoles": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": "Analyst/Administrator",
                      "description": "Sumo Logic RBAC roles to be assigned when user accounts are provisioned."
                    }
                  }
                },
                "disableRequestedAuthnContext": {
                  "type": "boolean",
                  "default": false,
                  "description": "True if Sumo Logic will include the RequestedAuthnContext element of the SAML AuthnRequests it sends to the identity provider."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "certificate"
              ],
              "properties": {
                "certificate": {
                  "type": "string",
                  "description": "Authentication Request Signing Certificate for the user."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "00000000361130F7",
                  "description": "Unique identifier of the SAML Identity Provider."
                },
                "assertionConsumerUrl": {
                  "type": "string",
                  "default": "",
                  "example": "https://service.sumologic.com/sumo/saml/consume/9483922",
                  "description": "The URL on Sumo Logic where the IdP will redirect to with its authentication response."
                }
              }
            }
          ]
        }
      ]
  createIngestBudget:
    description: |-
      Create a new ingest budget.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createIngestBudget
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "action",
            "capacityBytes",
            "fieldValue",
            "name",
            "resetTime",
            "timezone"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "Developer Budget",
              "maxLength": 128,
              "minLength": 1,
              "description": "Display name of the ingest budget."
            },
            "action": {
              "type": "string",
              "example": "stopCollecting",
              "pattern": "^(keepCollecting|stopCollecting)$",
              "description": "Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n  * `stopCollecting`\n  * `keepCollecting`",
              "x-pattern-message": "must be either `keepCollecting` or `stopCollecting`"
            },
            "timezone": {
              "type": "string",
              "example": "America/Los_Angeles",
              "description": "Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
            },
            "resetTime": {
              "type": "string",
              "example": "23:30",
              "maxLength": 5,
              "minLength": 5,
              "description": "Reset time of the ingest budget in HH:MM format."
            },
            "fieldValue": {
              "type": "string",
              "example": "dev_30_gb",
              "maxLength": 1024,
              "minLength": 1,
              "description": "Custom field value that is used to assign Collectors to the ingest budget."
            },
            "description": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 0,
              "description": "Description of the ingest budget."
            },
            "capacityBytes": {
              "type": "integer",
              "format": "int64",
              "example": 1000,
              "minimum": 0,
              "description": "Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit."
            },
            "auditThreshold": {
              "type": "integer",
              "format": "int32",
              "example": 85,
              "maximum": 99,
              "minimum": 1,
              "description": "The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "action",
                "capacityBytes",
                "fieldValue",
                "name",
                "resetTime",
                "timezone"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Developer Budget",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "Display name of the ingest budget."
                },
                "action": {
                  "type": "string",
                  "example": "stopCollecting",
                  "pattern": "^(keepCollecting|stopCollecting)$",
                  "description": "Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n  * `stopCollecting`\n  * `keepCollecting`",
                  "x-pattern-message": "must be either `keepCollecting` or `stopCollecting`"
                },
                "timezone": {
                  "type": "string",
                  "example": "America/Los_Angeles",
                  "description": "Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
                },
                "resetTime": {
                  "type": "string",
                  "example": "23:30",
                  "maxLength": 5,
                  "minLength": 5,
                  "description": "Reset time of the ingest budget in HH:MM format."
                },
                "fieldValue": {
                  "type": "string",
                  "example": "dev_30_gb",
                  "maxLength": 1024,
                  "minLength": 1,
                  "description": "Custom field value that is used to assign Collectors to the ingest budget."
                },
                "description": {
                  "type": "string",
                  "maxLength": 1024,
                  "minLength": 0,
                  "description": "Description of the ingest budget."
                },
                "capacityBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "minimum": 0,
                  "description": "Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit."
                },
                "auditThreshold": {
                  "type": "integer",
                  "format": "int32",
                  "example": 85,
                  "maximum": 99,
                  "minimum": 1,
                  "description": "The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdByUser",
                "modifiedAt",
                "modifiedByUser"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdByUser": {
                  "type": "object",
                  "required": [
                    "email",
                    "firstName",
                    "id",
                    "lastName"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "User's identifier."
                    },
                    "email": {
                      "type": "string",
                      "example": "johndoe@acme.com",
                      "description": "User's email."
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe",
                      "description": "User's last name."
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John",
                      "description": "User's first name."
                    }
                  }
                },
                "modifiedByUser": {
                  "type": "object",
                  "required": [
                    "email",
                    "firstName",
                    "id",
                    "lastName"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "User's identifier."
                    },
                    "email": {
                      "type": "string",
                      "example": "johndoe@acme.com",
                      "description": "User's email."
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe",
                      "description": "User's last name."
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John",
                      "description": "User's first name."
                    }
                  }
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the ingest budget."
                },
                "usageBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 900,
                  "description": "Current usage since the last reset, in bytes."
                },
                "usageStatus": {
                  "type": "string",
                  "example": "Approaching",
                  "description": "Status of the current usage. Can be `Normal`, `Approaching`, `Exceeded`, or `Unknown` (unable to retrieve usage)."
                },
                "numberOfCollectors": {
                  "type": "integer",
                  "format": "int64",
                  "example": 10,
                  "description": "Number of collectors assigned to the ingest budget."
                }
              }
            }
          ]
        }
      ]
  createIngestBudgetV2:
    description: |-
      Create a new ingest budget.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createIngestBudgetV2
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "action",
            "capacityBytes",
            "name",
            "resetTime",
            "scope",
            "timezone"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "Developer Budget",
              "maxLength": 128,
              "minLength": 1,
              "description": "Display name of the ingest budget."
            },
            "scope": {
              "type": "string",
              "example": "_sourceCategory=*prod*nginx*",
              "maxLength": 1024,
              "minLength": 1,
              "description": "A scope is a constraint that will be used to identify the messages on which budget needs to be applied. A scope is consists of key and value separated by =. The field must be enabled in the fields table. Value supports wildcard. e.g. _sourceCategory=*prod*payment*, cluster=kafka. If the scope is defined _sourceCategory=*nginx* in this budget will be applied on messages having fields _sourceCategory=prod/nginx, _sourceCategory=dev/nginx, or _sourceCategory=dev/nginx/error"
            },
            "action": {
              "type": "string",
              "example": "stopCollecting",
              "pattern": "^(keepCollecting|stopCollecting)$",
              "description": "Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n  * `stopCollecting`\n  * `keepCollecting`",
              "x-pattern-message": "must be either `keepCollecting` or `stopCollecting`"
            },
            "timezone": {
              "type": "string",
              "example": "America/Los_Angeles",
              "description": "Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
            },
            "resetTime": {
              "type": "string",
              "example": "23:30",
              "maxLength": 5,
              "minLength": 5,
              "description": "Reset time of the ingest budget in HH:MM format."
            },
            "description": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 0,
              "description": "Description of the ingest budget."
            },
            "capacityBytes": {
              "type": "integer",
              "format": "int64",
              "example": 1000,
              "minimum": 1,
              "description": "Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit."
            },
            "auditThreshold": {
              "type": "integer",
              "format": "int32",
              "example": 85,
              "maximum": 99,
              "minimum": 1,
              "description": "The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "action",
                "capacityBytes",
                "name",
                "resetTime",
                "scope",
                "timezone"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Developer Budget",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "Display name of the ingest budget."
                },
                "scope": {
                  "type": "string",
                  "example": "_sourceCategory=*prod*nginx*",
                  "maxLength": 1024,
                  "minLength": 1,
                  "description": "A scope is a constraint that will be used to identify the messages on which budget needs to be applied. A scope is consists of key and value separated by =. The field must be enabled in the fields table. Value supports wildcard. e.g. _sourceCategory=*prod*payment*, cluster=kafka. If the scope is defined _sourceCategory=*nginx* in this budget will be applied on messages having fields _sourceCategory=prod/nginx, _sourceCategory=dev/nginx, or _sourceCategory=dev/nginx/error"
                },
                "action": {
                  "type": "string",
                  "example": "stopCollecting",
                  "pattern": "^(keepCollecting|stopCollecting)$",
                  "description": "Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n  * `stopCollecting`\n  * `keepCollecting`",
                  "x-pattern-message": "must be either `keepCollecting` or `stopCollecting`"
                },
                "timezone": {
                  "type": "string",
                  "example": "America/Los_Angeles",
                  "description": "Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
                },
                "resetTime": {
                  "type": "string",
                  "example": "23:30",
                  "maxLength": 5,
                  "minLength": 5,
                  "description": "Reset time of the ingest budget in HH:MM format."
                },
                "description": {
                  "type": "string",
                  "maxLength": 1024,
                  "minLength": 0,
                  "description": "Description of the ingest budget."
                },
                "capacityBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "minimum": 1,
                  "description": "Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit."
                },
                "auditThreshold": {
                  "type": "integer",
                  "format": "int32",
                  "example": 85,
                  "maximum": 99,
                  "minimum": 1,
                  "description": "The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index."
                }
              }
            },
            {
              "required": [
                "createdAt",
                "createdBy",
                "id",
                "modifiedAt",
                "modifiedBy",
                "version"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0000000003343FDD",
                  "description": "Unique identifier for the ingest budget."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The creation timestamp in UTC of the Ingest Budget."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "The identifier of the user who created the Ingest Budget."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The modified timestamp in UTC of the Ingest Budget."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000001243FDD",
                  "description": "The identifier of the user who modified the Ingest Budget."
                },
                "usageBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 900,
                  "description": "Current usage since the last reset, in bytes."
                },
                "usageStatus": {
                  "type": "string",
                  "example": "Approaching",
                  "pattern": "^(Normal|Approaching|Exceeded|Unknown)$",
                  "description": "Status of the current usage. Can be `Normal`, `Approaching`, `Exceeded`, or `Unknown` (unable to retrieve usage).",
                  "x-pattern-message": "must be either `Normal`, `Approaching`, `Exceeded`, or `Unknown`"
                },
                "budgetVersion": {
                  "type": "integer",
                  "format": "int32",
                  "example": 2,
                  "description": "The version of the Ingest Budget"
                }
              }
            }
          ]
        }
      ]
  createMetricsSearch:
    description: |-
      Saves a metrics search in the content library. Metrics search consists of one or more queries, a time range, a quantization period and a set of chart properties like line width.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createMetricsSearch
    example:
      inputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "description",
                "metricsQueries",
                "timeRange",
                "title"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Short title",
                  "pattern": "^[a-zA-Z0-9 +%-@.,_()]+$",
                  "maxLength": 255,
                  "minLength": 1,
                  "description": "Item title in the content library."
                },
                "logQuery": {
                  "type": "string",
                  "example": "my_metric | timeslice 1m | count by _timeslice",
                  "maxLength": 10240,
                  "description": "Log query used to add an overlay to the chart."
                },
                "timeRange": {
                  "type": "object",
                  "example": {
                    "from": {
                      "type": "RelativeTimeRangeBoundary",
                      "relativeTime": "-15m"
                    },
                    "type": "BeginBoundedTimeRange"
                  },
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`."
                    }
                  },
                  "discriminator": {
                    "propertyName": "type"
                  }
                },
                "properties": {
                  "type": "string",
                  "example": "{ \\\"key\\\": \\\"value\\\" }",
                  "description": "Chart properties, like line width, color palette, and the fill missing data method. Leave this field empty to use the defaults.\nThis property contains JSON object encoded as a string.\n"
                },
                "description": {
                  "type": "string",
                  "example": "Long and detailed description",
                  "maxLength": 8192,
                  "description": "Item description in the content library."
                },
                "metricsQueries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "query",
                      "rowId"
                    ],
                    "properties": {
                      "query": {
                        "type": "string",
                        "example": "my_metric | avg",
                        "description": "Metrics query."
                      },
                      "rowId": {
                        "type": "string",
                        "example": "A",
                        "description": "Row identifier. All row IDs are represented by subsequent upper case letters starting with `A`."
                      }
                    },
                    "description": "Definition of a metrics query."
                  },
                  "description": "Metrics queries, up to the maximum of six."
                },
                "desiredQuantizationInSecs": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "example": 60,
                  "minimum": 0,
                  "description": "Desired quantization in seconds."
                }
              },
              "description": "Definition of a metrics search."
            },
            {
              "type": "object",
              "required": [
                "parentId"
              ],
              "properties": {
                "parentId": {
                  "type": "string",
                  "example": "000000000000001A",
                  "description": "Identifier of a folder to which the metrics search should be added."
                }
              }
            }
          ],
          "description": "The definition of the metrics search to save in the content library."
        }
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "description",
                "metricsQueries",
                "timeRange",
                "title"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Short title",
                  "pattern": "^[a-zA-Z0-9 +%-@.,_()]+$",
                  "maxLength": 255,
                  "minLength": 1,
                  "description": "Item title in the content library."
                },
                "logQuery": {
                  "type": "string",
                  "example": "my_metric | timeslice 1m | count by _timeslice",
                  "maxLength": 10240,
                  "description": "Log query used to add an overlay to the chart."
                },
                "timeRange": {
                  "type": "object",
                  "example": {
                    "from": {
                      "type": "RelativeTimeRangeBoundary",
                      "relativeTime": "-15m"
                    },
                    "type": "BeginBoundedTimeRange"
                  },
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`."
                    }
                  },
                  "discriminator": {
                    "propertyName": "type"
                  }
                },
                "properties": {
                  "type": "string",
                  "example": "{ \\\"key\\\": \\\"value\\\" }",
                  "description": "Chart properties, like line width, color palette, and the fill missing data method. Leave this field empty to use the defaults.\nThis property contains JSON object encoded as a string.\n"
                },
                "description": {
                  "type": "string",
                  "example": "Long and detailed description",
                  "maxLength": 8192,
                  "description": "Item description in the content library."
                },
                "metricsQueries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "query",
                      "rowId"
                    ],
                    "properties": {
                      "query": {
                        "type": "string",
                        "example": "my_metric | avg",
                        "description": "Metrics query."
                      },
                      "rowId": {
                        "type": "string",
                        "example": "A",
                        "description": "Row identifier. All row IDs are represented by subsequent upper case letters starting with `A`."
                      }
                    },
                    "description": "Definition of a metrics query."
                  },
                  "description": "Metrics queries, up to the maximum of six."
                },
                "desiredQuantizationInSecs": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "example": 60,
                  "minimum": 0,
                  "description": "Desired quantization in seconds."
                }
              },
              "description": "Definition of a metrics search."
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "000000000000001A",
                  "description": "Identifier of the metrics search."
                },
                "parentId": {
                  "type": "string",
                  "example": "0000000000007D2B",
                  "description": "Identifier of the parent element in the content library, such as folder."
                }
              }
            }
          ]
        }
      ]
  createPartition:
    description: |-
      Create a new partition.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createPartition
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name",
            "routingExpression"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "apache",
              "maxLength": 255,
              "description": "The name of the partition."
            },
            "isCompliant": {
              "type": "boolean",
              "default": false,
              "example": false,
              "description": "Whether the partition is compliant or not. Mark a partition as compliant if it contains data used for compliance or audit purpose. Retention for a compliant partition can only be increased and cannot be reduced after the partition is marked compliant. A partition once marked compliant, cannot be marked non-compliant later."
            },
            "analyticsTier": {
              "type": "string",
              "default": "continuous",
              "example": "continuous",
              "pattern": "^(frequent|infrequent|continuous)$",
              "description": "The Data Tier where the data in the partition will reside. Possible values are:\n              1. `continuous`\n              2. `frequent`\n              3. `infrequent`\nNote: The \"infrequent\" and \"frequent\" tiers are only to available Cloud Flex Credits Enterprise Suite accounts.",
              "x-pattern-message": "must be one of `continuous`, `frequent` or `infrequent`"
            },
            "retentionPeriod": {
              "type": "integer",
              "default": -1,
              "example": 365,
              "description": "The number of days to retain data in the partition, or -1 to use the default value for your account.  Only relevant if your account has variable retention enabled."
            },
            "routingExpression": {
              "type": "string",
              "example": "_sourcecategory=*/Apache",
              "maxLength": 16384,
              "minLength": 1,
              "description": "The query that defines the data to be included in the partition."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "name",
                "routingExpression"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "apache",
                  "maxLength": 255,
                  "description": "The name of the partition."
                },
                "isCompliant": {
                  "type": "boolean",
                  "default": false,
                  "example": false,
                  "description": "Whether the partition is compliant or not. Mark a partition as compliant if it contains data used for compliance or audit purpose. Retention for a compliant partition can only be increased and cannot be reduced after the partition is marked compliant. A partition once marked compliant, cannot be marked non-compliant later."
                },
                "analyticsTier": {
                  "type": "string",
                  "default": "continuous",
                  "example": "continuous",
                  "pattern": "^(frequent|infrequent|continuous)$",
                  "description": "The Data Tier where the data in the partition will reside. Possible values are:\n              1. `continuous`\n              2. `frequent`\n              3. `infrequent`\nNote: The \"infrequent\" and \"frequent\" tiers are only to available Cloud Flex Credits Enterprise Suite accounts.",
                  "x-pattern-message": "must be one of `continuous`, `frequent` or `infrequent`"
                },
                "retentionPeriod": {
                  "type": "integer",
                  "default": -1,
                  "example": 365,
                  "description": "The number of days to retain data in the partition, or -1 to use the default value for your account.  Only relevant if your account has variable retention enabled."
                },
                "routingExpression": {
                  "type": "string",
                  "example": "_sourcecategory=*/Apache",
                  "maxLength": 16384,
                  "minLength": 1,
                  "description": "The query that defines the data to be included in the partition."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id",
                "totalBytes"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1",
                  "description": "Unique identifier for the partition."
                },
                "isActive": {
                  "type": "boolean",
                  "description": "This has the value `true` if the partition is active and `false` if it has been decommissioned."
                },
                "indexType": {
                  "type": "string",
                  "example": "Partition",
                  "pattern": "^(DefaultIndex|AuditIndex|Partition)$",
                  "description": "This has the value `DefaultIndex`, `AuditIndex`or `Partition` depending upon the type of partition."
                },
                "totalBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 42,
                  "description": "Size of data in partition in bytes."
                },
                "dataForwardingId": {
                  "type": "string",
                  "description": "Id of the data forwarding configuration to be used by the partition."
                },
                "newRetentionPeriod": {
                  "type": "integer",
                  "format": "int32",
                  "example": 300,
                  "description": "If the retentionPeriod is scheduled to be updated in the future (i.e., if retentionPeriod is previously reduced with value of reduceRetentionPeriodImmediately as false), this property gives the future value of retentionPeriod while retentionPeriod gives the current value. retentionPeriod will take up the value of newRetentionPeriod after the scheduled time."
                },
                "retentionEffectiveAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "When the newRetentionPeriod will become effective in UTC format."
                }
              }
            }
          ]
        }
      ]
  createRole:
    description: |-
      Create a new role in the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createRole
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "DataAdmin",
              "maxLength": 128,
              "minLength": 1,
              "description": "Name of the role."
            },
            "users": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "0000000006743FE0",
                "0000000005FCE0EE"
              ],
              "description": "List of user identifiers to assign the role to."
            },
            "description": {
              "type": "string",
              "example": "Manage data of the org.",
              "maxLength": 255,
              "minLength": 0,
              "description": "Description of the role."
            },
            "capabilities": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "manageContent",
                "manageDataVolumeFeed",
                "manageFieldExtractionRules",
                "manageS3DataForwarding"
              ],
              "description": "List of [capabilities](https://help.sumologic.com/Manage/Users-and-Roles/Manage-Roles/Role-Capabilities) associated with this role. Valid values are\n### Data Management\n  - viewCollectors\n  - manageCollectors\n  - manageBudgets\n  - manageDataVolumeFeed\n  - viewFieldExtraction\n  - manageFieldExtractionRules\n  - manageS3DataForwarding\n  - manageContent\n  - dataVolumeIndex\n  - viewConnections\n  - manageConnections\n  - viewScheduledViews\n  - manageScheduledViews\n  - viewPartitions\n  - managePartitions\n  - viewFields\n  - manageFields\n  - viewAccountOverview\n  - manageTokens\n  - manageDataStreams\n\n### Entity management\n  - manageEntityTypeConfig\n\n### Metrics\n  - manageMonitors\n  - metricsTransformation\n  - metricsExtraction\n  - metricsRules\n\n### Security\n  - managePasswordPolicy\n  - ipAllowlisting\n  - createAccessKeys\n  - manageAccessKeys\n  - manageSupportAccountAccess\n  - manageAuditDataFeed\n  - manageSaml\n  - shareDashboardOutsideOrg\n  - manageOrgSettings\n  - changeDataAccessLevel\n\n### Dashboards\n  - shareDashboardWorld\n  - shareDashboardAllowlist\n\n### UserManagement\n  - manageUsersAndRoles\n\n### Observability\n  - searchAuditIndex\n  - auditEventIndex\n\n### Cloud SIEM Enterprise\n  - viewCse\n\n### Monitors (New)\n  - viewMonitorsV2\n  - manageMonitorsV2"
            },
            "filterPredicate": {
              "type": "string",
              "example": "!_sourceCategory=billing",
              "description": "A search filter to restrict access to specific logs. The filter is silently added to the beginning of each query a user runs. For example, using '!_sourceCategory=billing' as a filter predicate will prevent users assigned to the role from viewing logs from the source category named 'billing'."
            },
            "autofillDependencies": {
              "type": "boolean",
              "default": true,
              "description": "Set this to true if you want to automatically append all missing capability requirements. If set to false an error will be thrown if any capabilities are missing their dependencies."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "DataAdmin",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "Name of the role."
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "0000000006743FE0",
                    "0000000005FCE0EE"
                  ],
                  "description": "List of user identifiers to assign the role to."
                },
                "description": {
                  "type": "string",
                  "example": "Manage data of the org.",
                  "maxLength": 255,
                  "minLength": 0,
                  "description": "Description of the role."
                },
                "capabilities": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "manageContent",
                    "manageDataVolumeFeed",
                    "manageFieldExtractionRules",
                    "manageS3DataForwarding"
                  ],
                  "description": "List of [capabilities](https://help.sumologic.com/Manage/Users-and-Roles/Manage-Roles/Role-Capabilities) associated with this role. Valid values are\n### Data Management\n  - viewCollectors\n  - manageCollectors\n  - manageBudgets\n  - manageDataVolumeFeed\n  - viewFieldExtraction\n  - manageFieldExtractionRules\n  - manageS3DataForwarding\n  - manageContent\n  - dataVolumeIndex\n  - viewConnections\n  - manageConnections\n  - viewScheduledViews\n  - manageScheduledViews\n  - viewPartitions\n  - managePartitions\n  - viewFields\n  - manageFields\n  - viewAccountOverview\n  - manageTokens\n  - manageDataStreams\n\n### Entity management\n  - manageEntityTypeConfig\n\n### Metrics\n  - manageMonitors\n  - metricsTransformation\n  - metricsExtraction\n  - metricsRules\n\n### Security\n  - managePasswordPolicy\n  - ipAllowlisting\n  - createAccessKeys\n  - manageAccessKeys\n  - manageSupportAccountAccess\n  - manageAuditDataFeed\n  - manageSaml\n  - shareDashboardOutsideOrg\n  - manageOrgSettings\n  - changeDataAccessLevel\n\n### Dashboards\n  - shareDashboardWorld\n  - shareDashboardAllowlist\n\n### UserManagement\n  - manageUsersAndRoles\n\n### Observability\n  - searchAuditIndex\n  - auditEventIndex\n\n### Cloud SIEM Enterprise\n  - viewCse\n\n### Monitors (New)\n  - viewMonitorsV2\n  - manageMonitorsV2"
                },
                "filterPredicate": {
                  "type": "string",
                  "example": "!_sourceCategory=billing",
                  "description": "A search filter to restrict access to specific logs. The filter is silently added to the beginning of each query a user runs. For example, using '!_sourceCategory=billing' as a filter predicate will prevent users assigned to the role from viewing logs from the source category named 'billing'."
                },
                "autofillDependencies": {
                  "type": "boolean",
                  "default": true,
                  "description": "Set this to true if you want to automatically append all missing capability requirements. If set to false an error will be thrown if any capabilities are missing their dependencies."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0000000000E20FE3",
                  "description": "Unique identifier for the role."
                },
                "systemDefined": {
                  "type": "boolean",
                  "example": false,
                  "description": "Role is system or user defined."
                }
              }
            }
          ],
          "x-tf-resource-name": "Role",
          "x-tf-generated-properties": "id,name,description,filterPredicate,capabilities"
        }
      ]
  createRule:
    description: |-
      Create a new transformation rule.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createRule
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "enabled",
            "ruleDefinition"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "example": true,
              "description": "True if the rule is enabled."
            },
            "ruleDefinition": {
              "type": "object",
              "required": [
                "name",
                "retention",
                "selector"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Transformation Rule 1",
                  "description": "Name of the transformation rule."
                },
                "selector": {
                  "type": "string",
                  "example": "_sourceCategory=metricsstore",
                  "description": "Selector of the transformation rule."
                },
                "retention": {
                  "type": "integer",
                  "format": "int64",
                  "default": 400,
                  "example": 8,
                  "description": "Retention period in days for the metrics that are selected by the selector. The supported retention periods for selected metrics are 8 days, 400 days, and 0 (Do not store) if this rule contains dimension transformation."
                },
                "dimensionTransformations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "transformationType"
                    ],
                    "properties": {
                      "transformationType": {
                        "type": "string",
                        "description": "This is the base type of all dimension transformations."
                      }
                    },
                    "description": "Base class of all transformation types.",
                    "discriminator": {
                      "propertyName": "transformationType"
                    }
                  },
                  "default": [],
                  "example": [
                    {
                      "aggregateOn": [
                        "metric"
                      ],
                      "transformationType": "AggregateOnTransformation"
                    },
                    {
                      "value": "{{metric}}_aggregated",
                      "dimensionToReplace": "metric",
                      "transformationType": "AddOrReplaceTransformation"
                    }
                  ],
                  "description": "Dimension transformations of the transformation rule."
                },
                "transformedMetricsRetention": {
                  "type": "integer",
                  "format": "int64",
                  "default": 0,
                  "example": 8,
                  "description": "Retention period in days for the transformed metrics that are generated by this rule. The supported retention periods for transformed metrics are 8 days, and 400 days. If no dimension transformations are defined, this value will be set to 0."
                }
              },
              "description": "The properties that define a transformation rule."
            }
          },
          "description": "A request for creating or updating a transformation rule."
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "enabled",
                "ruleDefinition"
              ],
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "example": true,
                  "description": "True if the rule is enabled."
                },
                "ruleDefinition": {
                  "type": "object",
                  "required": [
                    "name",
                    "retention",
                    "selector"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Transformation Rule 1",
                      "description": "Name of the transformation rule."
                    },
                    "selector": {
                      "type": "string",
                      "example": "_sourceCategory=metricsstore",
                      "description": "Selector of the transformation rule."
                    },
                    "retention": {
                      "type": "integer",
                      "format": "int64",
                      "default": 400,
                      "example": 8,
                      "description": "Retention period in days for the metrics that are selected by the selector. The supported retention periods for selected metrics are 8 days, 400 days, and 0 (Do not store) if this rule contains dimension transformation."
                    },
                    "dimensionTransformations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "transformationType"
                        ],
                        "properties": {
                          "transformationType": {
                            "type": "string",
                            "description": "This is the base type of all dimension transformations."
                          }
                        },
                        "description": "Base class of all transformation types.",
                        "discriminator": {
                          "propertyName": "transformationType"
                        }
                      },
                      "default": [],
                      "example": [
                        {
                          "aggregateOn": [
                            "metric"
                          ],
                          "transformationType": "AggregateOnTransformation"
                        },
                        {
                          "value": "{{metric}}_aggregated",
                          "dimensionToReplace": "metric",
                          "transformationType": "AddOrReplaceTransformation"
                        }
                      ],
                      "description": "Dimension transformations of the transformation rule."
                    },
                    "transformedMetricsRetention": {
                      "type": "integer",
                      "format": "int64",
                      "default": 0,
                      "example": 8,
                      "description": "Retention period in days for the transformed metrics that are generated by this rule. The supported retention periods for transformed metrics are 8 days, and 400 days. If no dimension transformations are defined, this value will be set to 0."
                    }
                  },
                  "description": "The properties that define a transformation rule."
                }
              },
              "description": "A request for creating or updating a transformation rule."
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the transformation rule."
                }
              }
            }
          ],
          "description": "A generic response for transformation rule."
        }
      ]
  createScheduledView:
    description: |-
      Creates a new scheduled view in the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createScheduledView
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "indexName",
            "query",
            "startTime",
            "store"
          ],
          "properties": {
            "query": {
              "type": "string",
              "example": "_sourcecategory=*/Apache",
              "maxLength": 16384,
              "minLength": 1,
              "description": "The query that defines the data to be included in the scheduled view."
            },
            "indexName": {
              "type": "string",
              "example": "TestScheduledView",
              "maxLength": 255,
              "minLength": 0,
              "description": "Name of the index for the scheduled view."
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "Start timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "parsingMode": {
              "type": "string",
              "default": "Manual",
              "example": "AutoParse",
              "pattern": "^(AutoParse|Manual)$",
              "description": "Define the parsing mode to scan the JSON format log messages. Possible values are:\n  1. `AutoParse`\n  2. `Manual`\nIn AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).",
              "x-pattern-message": "should be either AutoParse or Manual"
            },
            "retentionPeriod": {
              "type": "integer",
              "format": "int32",
              "default": -1,
              "example": 365,
              "description": "The number of days to retain data in the scheduled view, or -1 to use the default value for your account.  Only relevant if your account has multi-retention. enabled."
            },
            "dataForwardingId": {
              "type": "string",
              "description": "An optional ID of a data forwarding configuration to be used by the scheduled view."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "indexName",
                "query",
                "startTime",
                "store"
              ],
              "properties": {
                "query": {
                  "type": "string",
                  "example": "_sourcecategory=*/Apache",
                  "maxLength": 16384,
                  "minLength": 1,
                  "description": "The query that defines the data to be included in the scheduled view."
                },
                "indexName": {
                  "type": "string",
                  "example": "TestScheduledView",
                  "maxLength": 255,
                  "minLength": 0,
                  "description": "Name of the index for the scheduled view."
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "parsingMode": {
                  "type": "string",
                  "default": "Manual",
                  "example": "AutoParse",
                  "pattern": "^(AutoParse|Manual)$",
                  "description": "Define the parsing mode to scan the JSON format log messages. Possible values are:\n  1. `AutoParse`\n  2. `Manual`\nIn AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).",
                  "x-pattern-message": "should be either AutoParse or Manual"
                },
                "retentionPeriod": {
                  "type": "integer",
                  "format": "int32",
                  "default": -1,
                  "example": 365,
                  "description": "The number of days to retain data in the scheduled view, or -1 to use the default value for your account.  Only relevant if your account has multi-retention. enabled."
                },
                "dataForwardingId": {
                  "type": "string",
                  "description": "An optional ID of a data forwarding configuration to be used by the scheduled view."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Identifier for the scheduled view."
                },
                "error": {
                  "type": "string",
                  "description": "Errors related to the scheduled view."
                },
                "status": {
                  "type": "string",
                  "description": "Status of the scheduled view."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC."
                },
                "createdBy": {
                  "type": "string",
                  "description": "Identifier of the user who created the scheduled view."
                },
                "totalBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total storage consumed by the scheduled view."
                },
                "totalMessageCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total number of messages for the scheduled view."
                },
                "createdByOptimizeIt": {
                  "type": "boolean",
                  "description": "If the scheduled view is created by OptimizeIt."
                }
              }
            }
          ],
          "x-tf-generated-properties": "id,query,indexName,startTime,retentionPeriod,parsingMode"
        }
      ]
  createSubdomain:
    description: |-
      Create a subdomain. Only the Account Owner can create a subdomain.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createSubdomain
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "subdomain"
          ],
          "properties": {
            "subdomain": {
              "type": "string",
              "example": "my-company",
              "pattern": "^(?!xn--)[a-z]([a-z0-9-]*[a-z0-9])?$",
              "maxLength": 63,
              "minLength": 4,
              "description": "The new subdomain."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "createdAt",
            "createdBy",
            "modifiedAt",
            "modifiedBy",
            "subdomain",
            "url"
          ],
          "properties": {
            "url": {
              "type": "string",
              "example": "https://your-company.sumologic.com",
              "description": "Login URL corresponding to the subdomain."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.\n"
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "subdomain": {
              "type": "string",
              "example": "my-company",
              "description": "The new subdomain."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            }
          }
        }
      ]
  createTable:
    description: |-
      Create a new lookup table by providing a schema and specifying its configuration. Providing parentFolderId
       is mandatory. Use the [getItemByPath](#operation/getItemByPath) endpoint to get content id of a path.
      Please check [Content management API](#tag/contentManagement) and [Folder management API](#tag/folderManagement) for all available options.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createTable
    example:
      inputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "description",
                "fields",
                "primaryKeys"
              ],
              "properties": {
                "ttl": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "example": 100,
                  "maximum": 525600,
                  "minimum": 0,
                  "description": "A time to live for each entry in the lookup table (in minutes). 365 days is the maximum time to live for each entry that you can specify. Setting it to 0 means that the records will not expire automatically."
                },
                "fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "fieldName",
                      "fieldType"
                    ],
                    "properties": {
                      "fieldName": {
                        "type": "string",
                        "example": "FieldName1",
                        "description": "The name of the field."
                      },
                      "fieldType": {
                        "type": "string",
                        "example": "boolean",
                        "pattern": "^(boolean|int|long|double|string)$",
                        "description": "The data type of the field. Supported types:\n  - `boolean`\n  - `int`\n  - `long`\n  - `double`\n  - `string`",
                        "x-pattern-message": "must be one of the following: `boolean`, `int`, `long`, `double`, `string`"
                      }
                    },
                    "description": "The definition of the field."
                  },
                  "minItems": 1,
                  "description": "The list of fields in the lookup table."
                },
                "description": {
                  "type": "string",
                  "example": "This is a sample lookup table description.",
                  "maxLength": 1000,
                  "description": "The description of the lookup table."
                },
                "primaryKeys": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "FieldName1"
                  ],
                  "minItems": 1,
                  "description": "The names of the fields that make up the primary key for the lookup table. These will be a subset of the fields that the table will contain.",
                  "uniqueItems": true
                },
                "sizeLimitAction": {
                  "type": "string",
                  "default": "StopIncomingMessages",
                  "example": "DeleteOldData",
                  "pattern": "^(StopIncomingMessages|DeleteOldData)$",
                  "description": "The action that needs to be taken when the size limit is reached for the table. The possible values can be `StopIncomingMessages` or `DeleteOldData`. DeleteOldData will start deleting old data once size limit is reached whereas StopIncomingMessages will discard all the updates made to the lookup table once size limit is reached.",
                  "x-pattern-message": "must be either `StopIncomingMessages` or `DeleteOldData`"
                }
              },
              "description": "The lookup table definition independent of its location in the Library and name."
            },
            {
              "properties": {
                "name": {
                  "type": "string",
                  "example": "SampleLookupTable",
                  "maxLength": 255,
                  "description": "The name of the lookup table."
                },
                "parentFolderId": {
                  "type": "string",
                  "example": "0000000001C41EE4",
                  "description": "The parent-folder-path identifier of the lookup table in the Library."
                }
              }
            }
          ],
          "required": [
            "name",
            "parentFolderId"
          ],
          "description": "Definition of the lookup table."
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "description",
                    "fields",
                    "primaryKeys"
                  ],
                  "properties": {
                    "ttl": {
                      "type": "integer",
                      "format": "int32",
                      "default": 0,
                      "example": 100,
                      "maximum": 525600,
                      "minimum": 0,
                      "description": "A time to live for each entry in the lookup table (in minutes). 365 days is the maximum time to live for each entry that you can specify. Setting it to 0 means that the records will not expire automatically."
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "fieldName",
                          "fieldType"
                        ],
                        "properties": {
                          "fieldName": {
                            "type": "string",
                            "example": "FieldName1",
                            "description": "The name of the field."
                          },
                          "fieldType": {
                            "type": "string",
                            "example": "boolean",
                            "pattern": "^(boolean|int|long|double|string)$",
                            "description": "The data type of the field. Supported types:\n  - `boolean`\n  - `int`\n  - `long`\n  - `double`\n  - `string`",
                            "x-pattern-message": "must be one of the following: `boolean`, `int`, `long`, `double`, `string`"
                          }
                        },
                        "description": "The definition of the field."
                      },
                      "minItems": 1,
                      "description": "The list of fields in the lookup table."
                    },
                    "description": {
                      "type": "string",
                      "example": "This is a sample lookup table description.",
                      "maxLength": 1000,
                      "description": "The description of the lookup table."
                    },
                    "primaryKeys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "FieldName1"
                      ],
                      "minItems": 1,
                      "description": "The names of the fields that make up the primary key for the lookup table. These will be a subset of the fields that the table will contain.",
                      "uniqueItems": true
                    },
                    "sizeLimitAction": {
                      "type": "string",
                      "default": "StopIncomingMessages",
                      "example": "DeleteOldData",
                      "pattern": "^(StopIncomingMessages|DeleteOldData)$",
                      "description": "The action that needs to be taken when the size limit is reached for the table. The possible values can be `StopIncomingMessages` or `DeleteOldData`. DeleteOldData will start deleting old data once size limit is reached whereas StopIncomingMessages will discard all the updates made to the lookup table once size limit is reached.",
                      "x-pattern-message": "must be either `StopIncomingMessages` or `DeleteOldData`"
                    }
                  },
                  "description": "The lookup table definition independent of its location in the Library and name."
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "SampleLookupTable",
                      "maxLength": 255,
                      "description": "The name of the lookup table."
                    },
                    "parentFolderId": {
                      "type": "string",
                      "example": "0000000001C41EE4",
                      "description": "The parent-folder-path identifier of the lookup table in the Library."
                    }
                  }
                }
              ],
              "required": [
                "name",
                "parentFolderId"
              ],
              "description": "Definition of the lookup table."
            },
            {
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0000000001C41EE4",
                  "description": "Identifier of the lookup table as a content item."
                },
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 100,
                  "description": "The current size of the lookup table in bytes"
                },
                "contentPath": {
                  "type": "string",
                  "example": "/Library/Users/johndoe@acme.com/lookupTable",
                  "description": "Address/path of the parent folder of this lookup table in content library. For example, a lookup table existing  in the personal/lookupTable folder for user johndoe would be: /Library/Users/johndoe@acme.com/lookupTable"
                }
              }
            }
          ],
          "required": [
            "id"
          ],
          "description": "Lookup table definition and metadata."
        }
      ]
  createToken:
    description: |-
      Create a token in the token library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createToken
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name",
            "status",
            "type"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "token-name",
              "maxLength": 255,
              "minLength": 1,
              "description": "Name of the token."
            },
            "type": {
              "type": "string",
              "example": "CollectorRegistration",
              "pattern": "^(CollectorRegistration)$",
              "description": "Type of the token. Valid values: 1) CollectorRegistration",
              "x-pattern-message": "must be `CollectorRegistration`"
            },
            "status": {
              "type": "string",
              "example": "Active",
              "pattern": "^(Active|Inactive)$",
              "description": "Status of the token. Can be `Active`, or `Inactive`.",
              "x-pattern-message": "must be either `Active` or `Inactive`"
            },
            "description": {
              "type": "string",
              "example": "token description: for test.",
              "maxLength": 4096,
              "minLength": 0,
              "description": "Description of the token."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "createdAt",
            "createdBy",
            "description",
            "id",
            "modifiedAt",
            "modifiedBy",
            "name",
            "status",
            "type",
            "version"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the token."
            },
            "name": {
              "type": "string",
              "example": "token-name",
              "maxLength": 255,
              "minLength": 1,
              "description": "Name of the token."
            },
            "type": {
              "type": "string",
              "example": "CollectorRegistrationTokenResponse",
              "pattern": "^(CollectorRegistrationTokenResponse)$",
              "description": "Type of the token. Valid values: 1) CollectorRegistrationTokenResponse",
              "x-pattern-message": "must be `CollectorRegistrationTokenResponse`"
            },
            "status": {
              "type": "string",
              "example": "Active",
              "pattern": "^(Active|Inactive)$",
              "description": "Status of the token. Can be `Active`, or `Inactive`.",
              "x-pattern-message": "must be either `Active` or `Inactive`"
            },
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "Version of the token."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            },
            "description": {
              "type": "string",
              "example": "token description: for test.",
              "maxLength": 4096,
              "minLength": 0,
              "description": "Description of the token."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  createUser:
    description: |-
      Create a new user in the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/createUser
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "email",
            "firstName",
            "lastName",
            "roleIds"
          ],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "example": "johndoe@acme.com",
              "maxLength": 255,
              "description": "Email address of the user."
            },
            "roleIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "00000000000001DF",
                "00000000000002D2"
              ],
              "description": "List of roleIds associated with the user."
            },
            "lastName": {
              "type": "string",
              "example": "Doe",
              "maxLength": 128,
              "minLength": 0,
              "description": "Last name of the user."
            },
            "firstName": {
              "type": "string",
              "example": "John",
              "maxLength": 128,
              "minLength": 1,
              "description": "First name of the user."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "email",
                "firstName",
                "lastName",
                "roleIds"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "johndoe@acme.com",
                  "maxLength": 255,
                  "description": "Email address of the user."
                },
                "roleIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "00000000000001DF",
                    "00000000000002D2"
                  ],
                  "description": "List of roleIds associated with the user."
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe",
                  "maxLength": 128,
                  "minLength": 0,
                  "description": "Last name of the user."
                },
                "firstName": {
                  "type": "string",
                  "example": "John",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "First name of the user."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "000000000FE20FE2",
                  "description": "Unique identifier for the user."
                },
                "isActive": {
                  "type": "boolean",
                  "example": true,
                  "description": "True if the user is active."
                },
                "isLocked": {
                  "type": "boolean",
                  "example": false,
                  "description": "This has the value `true` if the user's account has been locked. If a user tries to log into their account several times and fails, his or her account will be locked for security reasons."
                },
                "isMfaEnabled": {
                  "type": "boolean",
                  "example": false,
                  "description": "True if multi factor authentication is enabled for the user."
                },
                "lastLoginTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the last login for the user in UTC. Will be null if the user has never logged in."
                }
              }
            }
          ]
        }
      ]
  decommissionPartition:
    description: |-
      Decommission a partition with the given identifier from the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/decommissionPartition
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteAccessKey:
    description: |-
      Deletes the access key with the given accessId.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteAccessKey
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteAllowlistedCidrs:
    description: |-
      Remove allowlisted CIDR notations and/or IP addresses from the organization. Removed CIDRs/IPs will immediately lose access to Sumo Logic and content sharing.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteAllowlistedCidrs
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "cidr"
                ],
                "properties": {
                  "cidr": {
                    "type": "string",
                    "example": "192.35.24.1",
                    "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
                    "description": "The string representation of the CIDR notation or IP address.",
                    "x-pattern-message": "Invalid CIDR/IP"
                  },
                  "description": {
                    "type": "string",
                    "example": "Accountant",
                    "description": "Description of the CIDR notation or IP address."
                  }
                },
                "description": "A CIDR notation or IP address along with its description."
              },
              "maxItems": 50,
              "description": "An array of CIDR notations and/or IP addresses."
            }
          },
          "description": "A list of CIDR notations and/or IP addresses."
        }
      ]
  deleteAllowlistedUser:
    description: |-
      Remove an allowlisted user requiring them to sign in using SAML.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteAllowlistedUser
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteArchiveJob:
    description: |-
      Delete an ingestion job with the given identifier from the organization. The delete operation is only possible for jobs with a Succeeded or Failed status.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteArchiveJob
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteConnection:
    description: |-
      Delete a connection with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteConnection
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteDashboard:
    description: |-
      Delete a dashboard by the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteDashboard
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteDynamicParsingRule:
    description: |-
      Delete a dynamic parsing rule with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteDynamicParsingRule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteExtractionRule:
    description: |-
      Delete a field extraction rule with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteExtractionRule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteField:
    description: |-
      Deleting a field does not delete historical data assigned with that field. If you  delete a field by mistake and one or more of those dependencies break, you can  re-add the field to get things working properly again. You should always disable  a field and ensure things are behaving as expected before deleting a field.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteField
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteIdentityProvider:
    description: |-
      Delete a SAML configuration with the given identifier from the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteIdentityProvider
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteIngestBudget:
    description: |-
      Delete an ingest budget with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteIngestBudget
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteIngestBudgetV2:
    description: |-
      Delete an ingest budget with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteIngestBudgetV2
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteMetricsSearch:
    description: |-
      Deletes a metrics search from the content library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteMetricsSearch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteRole:
    description: |-
      Delete a role with the given identifier from the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteRole
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteRule:
    description: |-
      Delete a transformation rule with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteRule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteSubdomain:
    description: |-
      Delete the configured subdomain.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteSubdomain
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteTable:
    description: |-
      Delete a lookup table completely.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteTable
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteTableRow:
    description: |-
      Delete a row from lookup table by giving primary key. The complete set of primary key fields of the lookup table should be provided.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteTableRow
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "primaryKey"
          ],
          "properties": {
            "primaryKey": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "columnName",
                  "columnValue"
                ],
                "properties": {
                  "columnName": {
                    "type": "string",
                    "example": "user_id",
                    "description": "Name of the column of the table."
                  },
                  "columnValue": {
                    "type": "string",
                    "example": "user1",
                    "description": "Value of the specified column."
                  }
                },
                "description": "Lookup table row column and column value."
              },
              "maxItems": 1000,
              "description": "A list of all primary key field identifiers and their corresponding values."
            }
          },
          "description": "Lookup table primary key of the row to be deleted."
        }
      ]
      outputs: [
        {}
      ]
  deleteToken:
    description: |-
      Delete a token with the given identifier in the token library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteToken
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  deleteUser:
    description: |-
      Delete a user with the given identifier from the organization and transfer their content to the user with the identifier specified in "transferTo". If "transferTo" is not specified the contents are deleted.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/deleteUser
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  disableAllowlisting:
    description: |-
      Disable service allowlisting functionality for login/API authentication or content sharing for the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/disableAllowlisting
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  disableField:
    description: |-
      After disabling a field Sumo Logic will start dropping its incoming values at ingest. As a result, they won't be searchable or usable. Historical values are not removed and remain searchable.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/disableField
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  disableMfa:
    description: |-
      Disable multi-factor authentication for given user.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/disableMfa
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "email",
            "password"
          ],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "example": "johndoe@cme.com",
              "maxLength": 255,
              "description": "Email of user whose mfa is being disabled."
            },
            "password": {
              "type": "string",
              "description": "Password of user whose mfa is being disabled."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  disableSamlLockdown:
    description: |-
      Disable SAML lockdown for the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/disableSamlLockdown
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  disableScheduledView:
    description: |-
      Disable a scheduled view with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/disableScheduledView
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  enableAllowlisting:
    description: |-
      Enable service allowlisting functionality for the organization. The service allowlisting can be for 1. Login: If enabled, access to Sumo Logic is granted only to CIDRs/IP addresses that are allowlisted. 2. Content: If enabled, dashboards can be shared with users connecting from CIDRs/IP addresses that are allowlisted without logging in.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/enableAllowlisting
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  enableField:
    description: |-
      Fields have to be enabled to be assigned to your data. This operation ensures that a specified field is enabled and Sumo Logic will treat it as safe to process. All manually created custom fields are  enabled by default.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/enableField
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  enableSamlLockdown:
    description: |-
      Enabling SAML lockdown requires users to sign in using SAML preventing them from logging in with an email and password.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/enableSamlLockdown
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getAccountOwner:
    description: |-
      Returns the user identifier of the account owner.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getAccountOwner
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  getAdminRecommendedFolderAsync:
    description: |-
      Schedule an asynchronous job to get the top-level Admin Recommended content items.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getAdminRecommendedFolderAsync
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string",
              "example": "C03E086C137F38B4",
              "description": "Identifier to get the status of an asynchronous job."
            }
          }
        }
      ]
  getAdminRecommendedFolderAsyncResult:
    description: |-
      Get results from Admin Recommended job for the given job identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getAdminRecommendedFolderAsyncResult
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy"
                  ],
                  "properties": {
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "Identifier of the user who created the resource."
                    },
                    "modifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last modification timestamp in UTC."
                    },
                    "modifiedBy": {
                      "type": "string",
                      "example": "0000000006743FE8",
                      "description": "Identifier of the user who last modified the resource."
                    }
                  }
                },
                {
                  "required": [
                    "id",
                    "itemType",
                    "name",
                    "parentId",
                    "permissions"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "000000000C1C17C6",
                      "description": "Identifier of the content item."
                    },
                    "name": {
                      "type": "string",
                      "example": "Personal",
                      "description": "The name of the content item."
                    },
                    "itemType": {
                      "type": "string",
                      "example": "Folder",
                      "description": "Type of the content item. Supported values are:\n  1. Folder\n  2. Search\n  3. Report (for old dashboards)\n  4. Dashboard (for new dashboards)\n  5. Lookups"
                    },
                    "parentId": {
                      "type": "string",
                      "example": "0000000001C41EF2",
                      "description": "Identifier of the parent content item."
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "View",
                        "GrantView",
                        "Edit"
                      ],
                      "description": "List of permissions the user has on the content item."
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "properties": {
                "children": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "createdAt",
                          "createdBy",
                          "modifiedAt",
                          "modifiedBy"
                        ],
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                          },
                          "createdBy": {
                            "type": "string",
                            "example": "0000000006743FDD",
                            "description": "Identifier of the user who created the resource."
                          },
                          "modifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last modification timestamp in UTC."
                          },
                          "modifiedBy": {
                            "type": "string",
                            "example": "0000000006743FE8",
                            "description": "Identifier of the user who last modified the resource."
                          }
                        }
                      },
                      {
                        "required": [
                          "id",
                          "itemType",
                          "name",
                          "parentId",
                          "permissions"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "000000000C1C17C6",
                            "description": "Identifier of the content item."
                          },
                          "name": {
                            "type": "string",
                            "example": "Personal",
                            "description": "The name of the content item."
                          },
                          "itemType": {
                            "type": "string",
                            "example": "Folder",
                            "description": "Type of the content item. Supported values are:\n  1. Folder\n  2. Search\n  3. Report (for old dashboards)\n  4. Dashboard (for new dashboards)\n  5. Lookups"
                          },
                          "parentId": {
                            "type": "string",
                            "example": "0000000001C41EF2",
                            "description": "Identifier of the parent content item."
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "View",
                              "GrantView",
                              "Edit"
                            ],
                            "description": "List of permissions the user has on the content item."
                          }
                        }
                      }
                    ]
                  },
                  "description": "A list of the content items."
                },
                "description": {
                  "type": "string",
                  "example": "This is a sample folder.",
                  "maxLength": 255,
                  "minLength": 0,
                  "description": "The description of the folder."
                }
              }
            }
          ]
        }
      ]
  getAdminRecommendedFolderAsyncStatus:
    description: |-
      Get the status of an asynchronous Admin Recommended folder job for the given job identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getAdminRecommendedFolderAsyncStatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "example": {
            "status": "Success",
            "statusMessage": ""
          },
          "required": [
            "status"
          ],
          "properties": {
            "error": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "string",
                  "example": "auth:password_too_short",
                  "description": "An error code describing the type of error."
                },
                "meta": {
                  "type": "object",
                  "example": {
                    "minLength": 12,
                    "actualLength": 5
                  },
                  "description": "An optional list of metadata about the error."
                },
                "detail": {
                  "type": "string",
                  "example": "Your password was 5 characters long, the minimum length is 12 characters. See http://example.com/password for more information.",
                  "description": "An optional fuller English-language description of the error."
                },
                "message": {
                  "type": "string",
                  "example": "Your password was too short.",
                  "description": "A short English-language description of the error."
                }
              }
            },
            "status": {
              "type": "string",
              "description": "Whether or not the request is in progress (`InProgress`), has completed successfully (`Success`), or has completed with an error (`Failed`)."
            },
            "statusMessage": {
              "type": "string",
              "description": "Additional status message generated if the status is not `Failed`."
            }
          }
        }
      ]
  getAllowlistedUsers:
    description: |-
      Get a list of allowlisted users.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getAllowlistedUsers
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "canManageSaml",
              "email",
              "firstName",
              "isActive",
              "lastLogin",
              "lastName",
              "userId"
            ],
            "properties": {
              "email": {
                "type": "string",
                "example": "john@sumologic.com",
                "description": "Email of the user."
              },
              "userId": {
                "type": "string",
                "description": "Unique identifier of the user."
              },
              "isActive": {
                "type": "boolean",
                "description": "Checks if the user is active."
              },
              "lastName": {
                "type": "string",
                "description": "Last name of the user."
              },
              "firstName": {
                "type": "string",
                "description": "First name of the user."
              },
              "lastLogin": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of the last login of the user."
              },
              "canManageSaml": {
                "type": "boolean",
                "description": "If the user can manage SAML Configurations."
              }
            }
          }
        }
      ]
  getAllowlistingStatus:
    description: |-
      Get the status of the service allowlisting functionality for login/API authentication or content sharing for the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getAllowlistingStatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "contentEnabled",
            "loginEnabled"
          ],
          "properties": {
            "loginEnabled": {
              "type": "boolean",
              "description": "Whether service allowlisting is enabled for Login."
            },
            "contentEnabled": {
              "type": "boolean",
              "description": "Whether service allowlisting is enabled for Content."
            }
          },
          "description": "The status of service allowlisting for Content and Login."
        }
      ]
  getApp:
    description: |-
      Gets the app with the given universally unique identifier (UUID).
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getApp
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "appDefinition",
            "appManifest"
          ],
          "properties": {
            "appManifest": {
              "type": "object",
              "required": [
                "description",
                "hoverText",
                "iconURL"
              ],
              "properties": {
                "author": {
                  "type": "string",
                  "example": "Sumo Logic",
                  "description": "App author."
                },
                "family": {
                  "type": "string",
                  "example": "IIS",
                  "description": "The app family"
                },
                "helpURL": {
                  "type": "string",
                  "example": "https://help.sumologic.com/",
                  "description": "App help page URL."
                },
                "iconURL": {
                  "type": "string",
                  "example": "https://sumologic-app-data.sumologic.com/icons/sumoconfig.png",
                  "description": "App icon URL."
                },
                "hoverText": {
                  "type": "string",
                  "example": "Sumo Config App",
                  "description": "Text to be displayed when hovered over in UI."
                },
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "Sumo Logic",
                    "Configuration"
                  ],
                  "description": "Categories that the app belongs to."
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "parameterId",
                      "parameterType"
                    ],
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Log label",
                        "description": "Label."
                      },
                      "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Should the UI display?"
                      },
                      "example": {
                        "type": "string",
                        "description": "Example."
                      },
                      "description": {
                        "type": "string",
                        "example": "Log data source",
                        "description": "Description."
                      },
                      "parameterId": {
                        "type": "string",
                        "example": "paramId1",
                        "description": "Parameter identifier."
                      },
                      "parameterType": {
                        "type": "string",
                        "example": "DATA_SOURCE",
                        "pattern": "^DATA_SOURCE$",
                        "description": "Parameter type.",
                        "x-pattern-message": "Supported parameter types include: DATA_SOURCE"
                      },
                      "dataSourceType": {
                        "type": "string",
                        "example": "LOG",
                        "pattern": "^(LOG|METRICS)$",
                        "description": "Data source type.",
                        "x-pattern-message": "Supported data source types include: LOG, METRICS"
                      }
                    }
                  },
                  "description": "Content identifier of the app."
                },
                "description": {
                  "type": "string",
                  "example": "A description for Sumo Logic Config App.",
                  "description": "Description of the app."
                },
                "accountTypes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "free"
                  ],
                  "description": "Account types that are allowed to install the app"
                },
                "communityURL": {
                  "type": "string",
                  "example": "https://support.sumologic.com/hc/en-us/community/topics/200263058-Applications-and-Integrations",
                  "description": "App community page URL."
                },
                "helpDocIdMap": {
                  "type": "object",
                  "description": "the IDs of the docs pages for this app",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "requirements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [],
                  "description": "Requirements for the app."
                },
                "authorWebsite": {
                  "type": "string",
                  "example": "https://www.sumologic.com",
                  "description": "App author website URL."
                },
                "screenshotURLs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "https://sumologic-app-data.sumologic.com/icons/sumoconfig/overview.png",
                    "https://sumologic-app-data.sumologic.com/screenshots/sumoconfig/details.png"
                  ],
                  "description": "App screenshot URLs."
                },
                "installationInstructions": {
                  "type": "string",
                  "description": "Installation instructions for the app."
                },
                "requiresInstallationInstructions": {
                  "type": "boolean",
                  "example": false,
                  "description": "Indicates whether installation instructions are required or not."
                }
              }
            },
            "appDefinition": {
              "type": "object",
              "required": [
                "appVersion",
                "contentId",
                "name",
                "uuid"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Sumo Config",
                  "description": "Name of the app."
                },
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "example": "1c57fbc3-3141-4b12-aab3-5f40152bc3d9",
                  "description": "Unique identifier for the app."
                },
                "preview": {
                  "type": "boolean",
                  "example": true,
                  "description": "Indicates whether the app is in preview or not."
                },
                "contentId": {
                  "type": "string",
                  "example": "00000000000011AE",
                  "description": "Content identifier of the app in hexadecimal format."
                },
                "appVersion": {
                  "type": "string",
                  "example": "1.0",
                  "description": "Version of the app."
                },
                "manifestVersion": {
                  "type": "string",
                  "example": "0.1",
                  "description": "Manifest version of the app"
                }
              }
            }
          }
        }
      ]
  getAssignedCollectors:
    description: |-
      Get a list of Collectors assigned to an ingest budget. The response is paginated with a default limit of 100 Collectors per page.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getAssignedCollectors
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier for the Collector."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the Collector."
                  }
                }
              },
              "description": "List of Collector identities."
            },
            "next": {
              "type": "string",
              "description": "Next continuation token."
            }
          }
        }
      ]
  getAsyncDeleteStatus:
    description: |-
      Get the status of an asynchronous content deletion job request for the given job identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getAsyncDeleteStatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "example": {
            "status": "Success",
            "statusMessage": ""
          },
          "required": [
            "status"
          ],
          "properties": {
            "error": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "string",
                  "example": "auth:password_too_short",
                  "description": "An error code describing the type of error."
                },
                "meta": {
                  "type": "object",
                  "example": {
                    "minLength": 12,
                    "actualLength": 5
                  },
                  "description": "An optional list of metadata about the error."
                },
                "detail": {
                  "type": "string",
                  "example": "Your password was 5 characters long, the minimum length is 12 characters. See http://example.com/password for more information.",
                  "description": "An optional fuller English-language description of the error."
                },
                "message": {
                  "type": "string",
                  "example": "Your password was too short.",
                  "description": "A short English-language description of the error."
                }
              }
            },
            "status": {
              "type": "string",
              "description": "Whether or not the request is in progress (`InProgress`), has completed successfully (`Success`), or has completed with an error (`Failed`)."
            },
            "statusMessage": {
              "type": "string",
              "description": "Additional status message generated if the status is not `Failed`."
            }
          }
        }
      ]
  getAsyncExportResult:
    description: |-
      Get results from content export job for the given job identifier. The results from this export are incompatible with the Library import feature in the Sumo user interface.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getAsyncExportResult
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "name",
            "type"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the item."
            },
            "type": {
              "type": "string",
              "description": "The item type. Dashboard links are not supported."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  getAsyncExportStatus:
    description: |-
      Get the status of an asynchronous content export request for the given job identifier. On success, use the [getExportResult](#operation/getAsyncExportResult) endpoint to get the result of the export job.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getAsyncExportStatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "example": {
            "status": "Success",
            "statusMessage": ""
          },
          "required": [
            "status"
          ],
          "properties": {
            "error": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "string",
                  "example": "auth:password_too_short",
                  "description": "An error code describing the type of error."
                },
                "meta": {
                  "type": "object",
                  "example": {
                    "minLength": 12,
                    "actualLength": 5
                  },
                  "description": "An optional list of metadata about the error."
                },
                "detail": {
                  "type": "string",
                  "example": "Your password was 5 characters long, the minimum length is 12 characters. See http://example.com/password for more information.",
                  "description": "An optional fuller English-language description of the error."
                },
                "message": {
                  "type": "string",
                  "example": "Your password was too short.",
                  "description": "A short English-language description of the error."
                }
              }
            },
            "status": {
              "type": "string",
              "description": "Whether or not the request is in progress (`InProgress`), has completed successfully (`Success`), or has completed with an error (`Failed`)."
            },
            "statusMessage": {
              "type": "string",
              "description": "Additional status message generated if the status is not `Failed`."
            }
          }
        }
      ]
  getAsyncImportStatus:
    description: |-
      Get the status of a content import job for the given job identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getAsyncImportStatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "example": {
            "status": "Success",
            "statusMessage": ""
          },
          "required": [
            "status"
          ],
          "properties": {
            "error": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "string",
                  "example": "auth:password_too_short",
                  "description": "An error code describing the type of error."
                },
                "meta": {
                  "type": "object",
                  "example": {
                    "minLength": 12,
                    "actualLength": 5
                  },
                  "description": "An optional list of metadata about the error."
                },
                "detail": {
                  "type": "string",
                  "example": "Your password was 5 characters long, the minimum length is 12 characters. See http://example.com/password for more information.",
                  "description": "An optional fuller English-language description of the error."
                },
                "message": {
                  "type": "string",
                  "example": "Your password was too short.",
                  "description": "A short English-language description of the error."
                }
              }
            },
            "status": {
              "type": "string",
              "description": "Whether or not the request is in progress (`InProgress`), has completed successfully (`Success`), or has completed with an error (`Failed`)."
            },
            "statusMessage": {
              "type": "string",
              "description": "Additional status message generated if the status is not `Failed`."
            }
          }
        }
      ]
  getAsyncInstallStatus:
    description: |-
      Get the status of an asynchronous app install request for the given job identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getAsyncInstallStatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "example": {
            "status": "Success",
            "statusMessage": ""
          },
          "required": [
            "status"
          ],
          "properties": {
            "error": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "string",
                  "example": "auth:password_too_short",
                  "description": "An error code describing the type of error."
                },
                "meta": {
                  "type": "object",
                  "example": {
                    "minLength": 12,
                    "actualLength": 5
                  },
                  "description": "An optional list of metadata about the error."
                },
                "detail": {
                  "type": "string",
                  "example": "Your password was 5 characters long, the minimum length is 12 characters. See http://example.com/password for more information.",
                  "description": "An optional fuller English-language description of the error."
                },
                "message": {
                  "type": "string",
                  "example": "Your password was too short.",
                  "description": "A short English-language description of the error."
                }
              }
            },
            "status": {
              "type": "string",
              "description": "Whether or not the request is in progress (`InProgress`), has completed successfully (`Success`), or has completed with an error (`Failed`)."
            },
            "statusMessage": {
              "type": "string",
              "description": "Additional status message generated if the status is not `Failed`."
            }
          }
        }
      ]
  getBuiltInField:
    description: |-
      Get the details of a built-in field.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getBuiltInField
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "fieldName"
              ],
              "properties": {
                "fieldName": {
                  "type": "string",
                  "example": "hostIP",
                  "maxLength": 255,
                  "minLength": 1,
                  "description": "Field name."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "dataType",
                "fieldId",
                "state"
              ],
              "properties": {
                "state": {
                  "type": "string",
                  "example": "Enabled",
                  "pattern": "^(Enabled|Disabled)$",
                  "description": "Indicates whether the field is enabled and its values are being accepted. Possible values are `Enabled` and `Disabled`.",
                  "x-pattern-message": "Must be `Enabled` or `Disabled`"
                },
                "fieldId": {
                  "type": "string",
                  "example": "00000000031D02DA",
                  "description": "Identifier of the field."
                },
                "dataType": {
                  "type": "string",
                  "example": "String",
                  "pattern": "^(String|Long|Int|Double|Boolean)$",
                  "description": "Field type. Possible values are `String`, `Long`, `Int`, `Double`, and `Boolean`.",
                  "x-pattern-message": "Must be `String`, `Long`, `Int`, `Double` or `Boolean`"
                }
              }
            }
          ]
        }
      ]
  getConnection:
    description: |-
      Get a connection with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getConnection
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "createdAt",
            "createdBy",
            "description",
            "id",
            "modifiedAt",
            "modifiedBy",
            "name",
            "type"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier for the connection."
            },
            "name": {
              "type": "string",
              "description": "Name of the connection."
            },
            "type": {
              "type": "string",
              "description": "Type of connection. Valid values are `WebhookConnection`, `ServiceNowConnection`."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            },
            "description": {
              "type": "string",
              "description": "Description of the connection."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  getContentPermissions:
    description: |-
      Returns content permissions of a content item with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getContentPermissions
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "explicitPermissions"
          ],
          "properties": {
            "explicitPermissions": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "contentId",
                  "permissionName",
                  "sourceId",
                  "sourceType"
                ],
                "properties": {
                  "sourceId": {
                    "type": "string",
                    "description": "An identifier that belongs to the source type chosen above. For e.g. if the sourceType is set to \"user\", sourceId should be identifier of a user (same goes for `role` and `org` sourceType)"
                  },
                  "contentId": {
                    "type": "string",
                    "description": "Unique identifier for the content item."
                  },
                  "sourceType": {
                    "type": "string",
                    "example": "role",
                    "pattern": "^(user|role|org)$",
                    "description": "Type of source for the permission. Valid values are: `user`, `role`, and `org`.",
                    "x-pattern-message": "must be one of the following: `user`, `role`, `org`"
                  },
                  "permissionName": {
                    "type": "string",
                    "pattern": "^(View|GrantView|Edit|GrantEdit|Manage|GrantManage)$",
                    "description": "Content permission name. Valid values are: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, and `GrantManage`.",
                    "x-pattern-message": "must be one of the following: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, `GrantManage`"
                  }
                }
              },
              "description": "Explicitly assigned content permissions."
            },
            "implicitPermissions": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "contentId",
                  "permissionName",
                  "sourceId",
                  "sourceType"
                ],
                "properties": {
                  "sourceId": {
                    "type": "string",
                    "description": "An identifier that belongs to the source type chosen above. For e.g. if the sourceType is set to \"user\", sourceId should be identifier of a user (same goes for `role` and `org` sourceType)"
                  },
                  "contentId": {
                    "type": "string",
                    "description": "Unique identifier for the content item."
                  },
                  "sourceType": {
                    "type": "string",
                    "example": "role",
                    "pattern": "^(user|role|org)$",
                    "description": "Type of source for the permission. Valid values are: `user`, `role`, and `org`.",
                    "x-pattern-message": "must be one of the following: `user`, `role`, `org`"
                  },
                  "permissionName": {
                    "type": "string",
                    "pattern": "^(View|GrantView|Edit|GrantEdit|Manage|GrantManage)$",
                    "description": "Content permission name. Valid values are: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, and `GrantManage`.",
                    "x-pattern-message": "must be one of the following: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, `GrantManage`"
                  }
                }
              },
              "description": "Implicitly inherited content permissions."
            }
          }
        }
      ]
  getCustomField:
    description: |-
      Get the details of a custom field.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getCustomField
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "fieldName"
              ],
              "properties": {
                "fieldName": {
                  "type": "string",
                  "example": "hostIP",
                  "maxLength": 255,
                  "minLength": 1,
                  "description": "Field name."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "dataType",
                "fieldId",
                "state"
              ],
              "properties": {
                "state": {
                  "type": "string",
                  "example": "Enabled",
                  "pattern": "^(Enabled|Disabled)$",
                  "description": "Indicates whether the field is enabled and its values are being accepted. Possible values are `Enabled` and `Disabled`.",
                  "x-pattern-message": "Must be `Enabled` or `Disabled`"
                },
                "fieldId": {
                  "type": "string",
                  "example": "00000000031D02DA",
                  "description": "Identifier of the field."
                },
                "dataType": {
                  "type": "string",
                  "example": "String",
                  "pattern": "^(String|Long|Int|Double|Boolean)$",
                  "description": "Field type. Possible values are `String`, `Long`, `Int`, `Double`, and `Boolean`.",
                  "x-pattern-message": "Must be `String`, `Long`, `Int`, `Double` or `Boolean`"
                }
              }
            }
          ]
        }
      ]
  getDashboard:
    description: |-
      Get a dashboard by the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getDashboard
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "timeRange",
                "title"
              ],
              "properties": {
                "theme": {
                  "type": "string",
                  "default": "Light",
                  "example": "light",
                  "pattern": "^(light|dark|Light|Dark)$",
                  "description": "Theme for the dashboard. Either `Light` or `Dark`.",
                  "x-pattern-message": "Must be `Light`, or `Dark`"
                },
                "title": {
                  "type": "string",
                  "example": "Kubernetes Dashboard",
                  "maxLength": 255,
                  "minLength": 1,
                  "description": "Title of the dashboard."
                },
                "domain": {
                  "type": "string",
                  "default": "",
                  "example": "aws",
                  "description": "If set denotes that the dashboard concerns a given domain (e.g. `aws`, `k8s`, `app`)."
                },
                "layout": {
                  "type": "object",
                  "required": [
                    "layoutStructures",
                    "layoutType"
                  ],
                  "properties": {
                    "layoutType": {
                      "type": "string",
                      "example": "Grid",
                      "description": "The type of panel layout on the Dashboard. For example, Grid, Tabs, or Hierarchical. Currently supports `Grid` only."
                    },
                    "layoutStructures": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "key",
                          "structure"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "example": "panelPANE-3DC454FD977E2A46",
                            "description": "The identifier of the panel that this structure applies to."
                          },
                          "structure": {
                            "type": "string",
                            "example": "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\":0}",
                            "description": "The structure of a panel."
                          }
                        }
                      },
                      "description": "Layout structures for the panel childen."
                    }
                  },
                  "discriminator": {
                    "propertyName": "layoutType"
                  }
                },
                "panels": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "key",
                      "panelType"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "2F7D449E3D511066",
                        "description": "Unique identifier for the panel."
                      },
                      "key": {
                        "type": "string",
                        "example": "panelca6280e4a75fca45",
                        "description": "Key for the panel. Used to create searches for the queries in the panel and configure the layout of the panel in the dashboard.\n"
                      },
                      "title": {
                        "type": "string",
                        "example": "This panel shows memory usage for your kubernetes pod.",
                        "description": "Title of the panel."
                      },
                      "panelType": {
                        "type": "string",
                        "example": "SumoSearchPanel",
                        "description": "Type of panel."
                      },
                      "visualSettings": {
                        "type": "string",
                        "example": "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}",
                        "description": "Visual settings of the panel."
                      },
                      "keepVisualSettingsConsistentWithParent": {
                        "type": "boolean",
                        "default": true,
                        "description": "Keeps the visual settings, like series colors, consistent with the settings of the parent panel."
                      }
                    },
                    "discriminator": {
                      "propertyName": "panelType"
                    }
                  },
                  "description": "Panels in the dashboard."
                },
                "folderId": {
                  "type": "string",
                  "example": "000000000C1C17C6",
                  "description": "The identifier of the folder to save the dashboard in. By default it is saved in your personal folder.\n"
                },
                "timeRange": {
                  "type": "object",
                  "example": {
                    "from": {
                      "type": "RelativeTimeRangeBoundary",
                      "relativeTime": "-15m"
                    },
                    "type": "BeginBoundedTimeRange"
                  },
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`."
                    }
                  },
                  "discriminator": {
                    "propertyName": "type"
                  }
                },
                "variables": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "sourceDefinition"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the variable."
                      },
                      "name": {
                        "type": "string",
                        "example": "_sourceHost",
                        "pattern": "^[a-zA-Z0-9_]*$",
                        "maxLength": 256,
                        "description": "Name of the variable. The variable name is case-insensitive. Only alphanumeric, and underscores are\nallowed in the variable name.\n",
                        "x-pattern-message": "Only alphanumeric, and underscores are allowed."
                      },
                      "hideFromUI": {
                        "type": "boolean",
                        "default": false,
                        "example": false,
                        "description": "Hide the variable in the dashboard UI."
                      },
                      "displayName": {
                        "type": "string",
                        "example": "Source Host",
                        "maxLength": 256,
                        "description": "Display name of the variable shown in the UI. If this field is empty, the name field will be used.\nThe display name is case-insensitive. Only numbers, and underscores are allowed in the variable name.\nThis field is not yet supported by the UI.\n"
                      },
                      "defaultValue": {
                        "type": "string",
                        "example": "default_value",
                        "description": "Default value of the variable."
                      },
                      "allowMultiSelect": {
                        "type": "boolean",
                        "default": false,
                        "example": false,
                        "description": "Allow multiple selections in the values dropdown."
                      },
                      "includeAllOption": {
                        "type": "boolean",
                        "default": true,
                        "example": true,
                        "description": "Include an \"All\" option at the top of the variable's values dropdown."
                      },
                      "sourceDefinition": {
                        "type": "object",
                        "required": [
                          "variableSourceType"
                        ],
                        "properties": {
                          "variableSourceType": {
                            "type": "string",
                            "example": "MetadataVariableSourceDefinition",
                            "description": "Source type of the variable values."
                          }
                        },
                        "discriminator": {
                          "propertyName": "variableSourceType"
                        }
                      }
                    }
                  },
                  "description": "Variables to apply to the panels."
                },
                "description": {
                  "type": "string",
                  "example": "A view of pods, namespaces and nodes of your cluster.",
                  "description": "Description of the dashboard."
                },
                "coloringRules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "coloringThresholds",
                      "multipleSeriesAggregateFunction",
                      "scope",
                      "singleSeriesAggregateFunction"
                    ],
                    "properties": {
                      "scope": {
                        "type": "string",
                        "example": "CPU_*",
                        "description": "Regex string to match queries to apply coloring to."
                      },
                      "colorThresholds": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "color"
                          ],
                          "properties": {
                            "max": {
                              "type": "number",
                              "format": "double",
                              "example": 50,
                              "description": "Absolute exclusive threshold to color by."
                            },
                            "min": {
                              "type": "number",
                              "format": "double",
                              "example": 0,
                              "description": "Absolute inclusive threshold to color by."
                            },
                            "color": {
                              "type": "string",
                              "example": "FFFFFF",
                              "description": "Color for the threshold."
                            }
                          }
                        },
                        "description": "Color thresholds."
                      },
                      "singleSeriesAggregateFunction": {
                        "type": "string",
                        "example": "Average",
                        "description": "Function to aggregate one series into one single value."
                      },
                      "multipleSeriesAggregateFunction": {
                        "type": "string",
                        "example": "Average",
                        "description": "Function to aggregate the aggregate values of multiple time series into one single value."
                      }
                    }
                  },
                  "description": "Rules to set the color of data. This is an internal field and is not current supported by UI.",
                  "x-visibility": "private"
                },
                "refreshInterval": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Interval of time (in seconds) to automatically refresh the dashboard. A value of 0 means we never automatically refresh the dashboard. This functionality is currently not supported.\n"
                },
                "topologyLabelMap": {
                  "type": "object",
                  "example": {
                    "service": [
                      "kube-scheduler",
                      "kube-dns"
                    ]
                  },
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "Map from topology labels to `TopologyLabelValuesList`.",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Value of the label."
                        },
                        "default": [],
                        "example": "kube-scheduler",
                        "description": "List of values corresponding to a key of a label."
                      }
                    }
                  },
                  "description": "Map of the topology labels. Each label has a key and a list of values. If a value is `*`, it means the label will match content for all values of its key.\n"
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2",
                  "description": "Unique identifier for the dashboard."
                }
              }
            }
          ]
        }
      ]
  getDynamicParsingRule:
    description: |-
      Get a dynamic parsing rule with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getDynamicParsingRule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "enabled",
                "name",
                "scope"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "DynamicParsingRule123",
                  "maxLength": 256,
                  "minLength": 1,
                  "description": "Name of the dynamic parsing rule. Use a name that makes it easy to identify the rule."
                },
                "scope": {
                  "type": "string",
                  "example": "_sourceHost=127.0.0.1",
                  "maxLength": 2048,
                  "minLength": 1,
                  "description": "Scope of the dynamic parsing rule. This could be a sourceCategory, sourceHost, or any other metadata that describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search, before the first pipe ( | ). You'll use the Scope to run a search against the rule."
                },
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "example": false,
                  "description": "Is the dynamic parsing rule enabled."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "dateTime",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "dateTime",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0000000001C41EE4",
                  "description": "Unique identifier for the dynamic parsing rule."
                }
              }
            }
          ]
        }
      ]
  getExtractionRule:
    description: |-
      Get a field extraction rule with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getExtractionRule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "name",
                    "parseExpression",
                    "scope"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "ExtractionRule123",
                      "maxLength": 256,
                      "minLength": 1,
                      "description": "Name of the field extraction rule. Use a name that makes it easy to identify the rule."
                    },
                    "scope": {
                      "type": "string",
                      "example": "_sourceHost=127.0.0.1",
                      "maxLength": 2048,
                      "minLength": 0,
                      "description": "Scope of the field extraction rule. This could be a sourceCategory, sourceHost, or any other metadata that describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search, before the first pipe ( | ). You'll use the Scope to run a search against the rule."
                    },
                    "parseExpression": {
                      "type": "string",
                      "example": "csv _raw extract 1 as f1",
                      "maxLength": 16384,
                      "description": "Describes the fields to be parsed."
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Is the field extraction rule enabled."
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the field extraction rule."
                },
                "fieldNames": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of extracted fields from \"parseExpression\"."
                }
              }
            }
          ],
          "x-tf-resource-name": "ExtractionRule",
          "x-tf-generated-properties": "id,name,scope,parseExpression,enabled"
        }
      ]
  getFieldQuota:
    description: |-
      Every account has a limited number of fields available. This endpoint returns your account limitations and remaining quota.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getFieldQuota
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "quota",
            "remaining"
          ],
          "properties": {
            "quota": {
              "type": "integer",
              "format": "int32",
              "example": 200,
              "description": "Maximum number of fields available."
            },
            "remaining": {
              "type": "integer",
              "format": "int32",
              "example": 121,
              "description": "Current number of fields available."
            }
          }
        }
      ]
  getFolder:
    description: |-
      Get a folder with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getFolder
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy"
                  ],
                  "properties": {
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "Identifier of the user who created the resource."
                    },
                    "modifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last modification timestamp in UTC."
                    },
                    "modifiedBy": {
                      "type": "string",
                      "example": "0000000006743FE8",
                      "description": "Identifier of the user who last modified the resource."
                    }
                  }
                },
                {
                  "required": [
                    "id",
                    "itemType",
                    "name",
                    "parentId",
                    "permissions"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "000000000C1C17C6",
                      "description": "Identifier of the content item."
                    },
                    "name": {
                      "type": "string",
                      "example": "Personal",
                      "description": "The name of the content item."
                    },
                    "itemType": {
                      "type": "string",
                      "example": "Folder",
                      "description": "Type of the content item. Supported values are:\n  1. Folder\n  2. Search\n  3. Report (for old dashboards)\n  4. Dashboard (for new dashboards)\n  5. Lookups"
                    },
                    "parentId": {
                      "type": "string",
                      "example": "0000000001C41EF2",
                      "description": "Identifier of the parent content item."
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "View",
                        "GrantView",
                        "Edit"
                      ],
                      "description": "List of permissions the user has on the content item."
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "properties": {
                "children": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "createdAt",
                          "createdBy",
                          "modifiedAt",
                          "modifiedBy"
                        ],
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                          },
                          "createdBy": {
                            "type": "string",
                            "example": "0000000006743FDD",
                            "description": "Identifier of the user who created the resource."
                          },
                          "modifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last modification timestamp in UTC."
                          },
                          "modifiedBy": {
                            "type": "string",
                            "example": "0000000006743FE8",
                            "description": "Identifier of the user who last modified the resource."
                          }
                        }
                      },
                      {
                        "required": [
                          "id",
                          "itemType",
                          "name",
                          "parentId",
                          "permissions"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "000000000C1C17C6",
                            "description": "Identifier of the content item."
                          },
                          "name": {
                            "type": "string",
                            "example": "Personal",
                            "description": "The name of the content item."
                          },
                          "itemType": {
                            "type": "string",
                            "example": "Folder",
                            "description": "Type of the content item. Supported values are:\n  1. Folder\n  2. Search\n  3. Report (for old dashboards)\n  4. Dashboard (for new dashboards)\n  5. Lookups"
                          },
                          "parentId": {
                            "type": "string",
                            "example": "0000000001C41EF2",
                            "description": "Identifier of the parent content item."
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "View",
                              "GrantView",
                              "Edit"
                            ],
                            "description": "List of permissions the user has on the content item."
                          }
                        }
                      }
                    ]
                  },
                  "description": "A list of the content items."
                },
                "description": {
                  "type": "string",
                  "example": "This is a sample folder.",
                  "maxLength": 255,
                  "minLength": 0,
                  "description": "The description of the folder."
                }
              }
            }
          ]
        }
      ]
  getGlobalFolderAsync:
    description: |-
      Schedule an asynchronous job to get global folder. Global folder contains all content items that a user has permissions to view in the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getGlobalFolderAsync
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string",
              "example": "C03E086C137F38B4",
              "description": "Identifier to get the status of an asynchronous job."
            }
          }
        }
      ]
  getGlobalFolderAsyncResult:
    description: |-
      Get results from global folder job for the given job identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getGlobalFolderAsyncResult
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "createdAt",
                      "createdBy",
                      "modifiedAt",
                      "modifiedBy"
                    ],
                    "properties": {
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                      },
                      "createdBy": {
                        "type": "string",
                        "example": "0000000006743FDD",
                        "description": "Identifier of the user who created the resource."
                      },
                      "modifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last modification timestamp in UTC."
                      },
                      "modifiedBy": {
                        "type": "string",
                        "example": "0000000006743FE8",
                        "description": "Identifier of the user who last modified the resource."
                      }
                    }
                  },
                  {
                    "required": [
                      "id",
                      "itemType",
                      "name",
                      "parentId",
                      "permissions"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "000000000C1C17C6",
                        "description": "Identifier of the content item."
                      },
                      "name": {
                        "type": "string",
                        "example": "Personal",
                        "description": "The name of the content item."
                      },
                      "itemType": {
                        "type": "string",
                        "example": "Folder",
                        "description": "Type of the content item. Supported values are:\n  1. Folder\n  2. Search\n  3. Report (for old dashboards)\n  4. Dashboard (for new dashboards)\n  5. Lookups"
                      },
                      "parentId": {
                        "type": "string",
                        "example": "0000000001C41EF2",
                        "description": "Identifier of the parent content item."
                      },
                      "permissions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "View",
                          "GrantView",
                          "Edit"
                        ],
                        "description": "List of permissions the user has on the content item."
                      }
                    }
                  }
                ]
              },
              "description": "A list of the content items."
            }
          }
        }
      ]
  getGlobalFolderAsyncStatus:
    description: |-
      Get the status of an asynchronous global folder job for the given job identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getGlobalFolderAsyncStatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "example": {
            "status": "Success",
            "statusMessage": ""
          },
          "required": [
            "status"
          ],
          "properties": {
            "error": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "string",
                  "example": "auth:password_too_short",
                  "description": "An error code describing the type of error."
                },
                "meta": {
                  "type": "object",
                  "example": {
                    "minLength": 12,
                    "actualLength": 5
                  },
                  "description": "An optional list of metadata about the error."
                },
                "detail": {
                  "type": "string",
                  "example": "Your password was 5 characters long, the minimum length is 12 characters. See http://example.com/password for more information.",
                  "description": "An optional fuller English-language description of the error."
                },
                "message": {
                  "type": "string",
                  "example": "Your password was too short.",
                  "description": "A short English-language description of the error."
                }
              }
            },
            "status": {
              "type": "string",
              "description": "Whether or not the request is in progress (`InProgress`), has completed successfully (`Success`), or has completed with an error (`Failed`)."
            },
            "statusMessage": {
              "type": "string",
              "description": "Additional status message generated if the status is not `Failed`."
            }
          }
        }
      ]
  getIdentityProviders:
    description: |-
      Get a list of all SAML configurations in the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getIdentityProviders
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "allOf": [
              {
                "type": "object",
                "required": [
                  "configurationName",
                  "issuer",
                  "x509cert1"
                ],
                "properties": {
                  "issuer": {
                    "type": "string",
                    "example": "http://www.okta.com/abxcseyuiwelflkdjh",
                    "description": "The unique URL assigned to the organization by the SAML Identity Provider."
                  },
                  "debugMode": {
                    "type": "boolean",
                    "default": false,
                    "description": "True if additional details are included when a user fails to sign in."
                  },
                  "logoutUrl": {
                    "type": "string",
                    "default": "",
                    "example": "https://www.sumologic.com",
                    "description": "The URL that users will be redirected to after signing out of Sumo Logic."
                  },
                  "x509cert1": {
                    "type": "string",
                    "description": "The certificate is used to verify the signature in SAML assertions."
                  },
                  "x509cert2": {
                    "type": "string",
                    "default": "",
                    "description": "The backup certificate used to verify the signature in SAML assertions when x509cert1 expires."
                  },
                  "x509cert3": {
                    "type": "string",
                    "default": "",
                    "description": "The backup certificate used to verify the signature in SAML assertions when x509cert1 expires and x509cert2 is empty."
                  },
                  "logoutEnabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "True if users are redirected to a URL after signing out of Sumo Logic."
                  },
                  "emailAttribute": {
                    "type": "string",
                    "default": "",
                    "example": "attribute/subject",
                    "description": "The email address of the new user account."
                  },
                  "rolesAttribute": {
                    "type": "string",
                    "default": "",
                    "example": "Sumo_Role",
                    "description": "The role that Sumo Logic will assign to users when they sign in."
                  },
                  "authnRequestUrl": {
                    "type": "string",
                    "default": "",
                    "example": "https://service.sumologic.com/sumo/saml/login/9483922",
                    "description": "The URL that the identity provider has assigned for Sumo Logic to submit SAML authentication requests to the identity provider."
                  },
                  "signAuthnRequest": {
                    "type": "boolean",
                    "default": false,
                    "description": "True if Sumo Logic will send signed Authn requests to the identity provider."
                  },
                  "configurationName": {
                    "type": "string",
                    "example": "SumoLogic",
                    "description": "Name of the SSO policy or another name used to describe the policy internally."
                  },
                  "isRedirectBinding": {
                    "type": "boolean",
                    "default": false,
                    "description": "True if the SAML binding is of HTTP Redirect type."
                  },
                  "spInitiatedLoginPath": {
                    "type": "string",
                    "default": "",
                    "example": "http://www.okta.com/abxcseyuiwelflkdjh",
                    "description": "The identifier used to generate a unique URL for user login."
                  },
                  "spInitiatedLoginEnabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "True if Sumo Logic redirects users to your identity provider with a SAML AuthnRequest when signing in."
                  },
                  "onDemandProvisioningEnabled": {
                    "type": "object",
                    "required": [
                      "onDemandProvisioningRoles"
                    ],
                    "properties": {
                      "lastNameAttribute": {
                        "type": "string",
                        "default": "",
                        "example": "http://schemas.microsoft.com/ws/2008/06/identity/claims/surname",
                        "description": "Last name attribute of the new user account."
                      },
                      "firstNameAttribute": {
                        "type": "string",
                        "default": "",
                        "example": "http://schemas.microsoft.com/ws/2008/06/identity/claims/givenname",
                        "description": "First name attribute of the new user account."
                      },
                      "onDemandProvisioningRoles": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "default": [],
                        "example": "Analyst/Administrator",
                        "description": "Sumo Logic RBAC roles to be assigned when user accounts are provisioned."
                      }
                    }
                  },
                  "disableRequestedAuthnContext": {
                    "type": "boolean",
                    "default": false,
                    "description": "True if Sumo Logic will include the RequestedAuthnContext element of the SAML AuthnRequests it sends to the identity provider."
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "certificate"
                ],
                "properties": {
                  "certificate": {
                    "type": "string",
                    "description": "Authentication Request Signing Certificate for the user."
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy"
                ],
                "properties": {
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                  },
                  "createdBy": {
                    "type": "string",
                    "example": "0000000006743FDD",
                    "description": "Identifier of the user who created the resource."
                  },
                  "modifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last modification timestamp in UTC."
                  },
                  "modifiedBy": {
                    "type": "string",
                    "example": "0000000006743FE8",
                    "description": "Identifier of the user who last modified the resource."
                  }
                }
              },
              {
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "00000000361130F7",
                    "description": "Unique identifier of the SAML Identity Provider."
                  },
                  "assertionConsumerUrl": {
                    "type": "string",
                    "default": "",
                    "example": "https://service.sumologic.com/sumo/saml/consume/9483922",
                    "description": "The URL on Sumo Logic where the IdP will redirect to with its authentication response."
                  }
                }
              }
            ]
          }
        }
      ]
  getIngestBudget:
    description: |-
      Get an ingest budget by the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getIngestBudget
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "action",
                "capacityBytes",
                "fieldValue",
                "name",
                "resetTime",
                "timezone"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Developer Budget",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "Display name of the ingest budget."
                },
                "action": {
                  "type": "string",
                  "example": "stopCollecting",
                  "pattern": "^(keepCollecting|stopCollecting)$",
                  "description": "Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n  * `stopCollecting`\n  * `keepCollecting`",
                  "x-pattern-message": "must be either `keepCollecting` or `stopCollecting`"
                },
                "timezone": {
                  "type": "string",
                  "example": "America/Los_Angeles",
                  "description": "Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
                },
                "resetTime": {
                  "type": "string",
                  "example": "23:30",
                  "maxLength": 5,
                  "minLength": 5,
                  "description": "Reset time of the ingest budget in HH:MM format."
                },
                "fieldValue": {
                  "type": "string",
                  "example": "dev_30_gb",
                  "maxLength": 1024,
                  "minLength": 1,
                  "description": "Custom field value that is used to assign Collectors to the ingest budget."
                },
                "description": {
                  "type": "string",
                  "maxLength": 1024,
                  "minLength": 0,
                  "description": "Description of the ingest budget."
                },
                "capacityBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "minimum": 0,
                  "description": "Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit."
                },
                "auditThreshold": {
                  "type": "integer",
                  "format": "int32",
                  "example": 85,
                  "maximum": 99,
                  "minimum": 1,
                  "description": "The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdByUser",
                "modifiedAt",
                "modifiedByUser"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdByUser": {
                  "type": "object",
                  "required": [
                    "email",
                    "firstName",
                    "id",
                    "lastName"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "User's identifier."
                    },
                    "email": {
                      "type": "string",
                      "example": "johndoe@acme.com",
                      "description": "User's email."
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe",
                      "description": "User's last name."
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John",
                      "description": "User's first name."
                    }
                  }
                },
                "modifiedByUser": {
                  "type": "object",
                  "required": [
                    "email",
                    "firstName",
                    "id",
                    "lastName"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "User's identifier."
                    },
                    "email": {
                      "type": "string",
                      "example": "johndoe@acme.com",
                      "description": "User's email."
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe",
                      "description": "User's last name."
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John",
                      "description": "User's first name."
                    }
                  }
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the ingest budget."
                },
                "usageBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 900,
                  "description": "Current usage since the last reset, in bytes."
                },
                "usageStatus": {
                  "type": "string",
                  "example": "Approaching",
                  "description": "Status of the current usage. Can be `Normal`, `Approaching`, `Exceeded`, or `Unknown` (unable to retrieve usage)."
                },
                "numberOfCollectors": {
                  "type": "integer",
                  "format": "int64",
                  "example": 10,
                  "description": "Number of collectors assigned to the ingest budget."
                }
              }
            }
          ]
        }
      ]
  getIngestBudgetV2:
    description: |-
      Get an ingest budget by the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getIngestBudgetV2
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "action",
                "capacityBytes",
                "name",
                "resetTime",
                "scope",
                "timezone"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Developer Budget",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "Display name of the ingest budget."
                },
                "scope": {
                  "type": "string",
                  "example": "_sourceCategory=*prod*nginx*",
                  "maxLength": 1024,
                  "minLength": 1,
                  "description": "A scope is a constraint that will be used to identify the messages on which budget needs to be applied. A scope is consists of key and value separated by =. The field must be enabled in the fields table. Value supports wildcard. e.g. _sourceCategory=*prod*payment*, cluster=kafka. If the scope is defined _sourceCategory=*nginx* in this budget will be applied on messages having fields _sourceCategory=prod/nginx, _sourceCategory=dev/nginx, or _sourceCategory=dev/nginx/error"
                },
                "action": {
                  "type": "string",
                  "example": "stopCollecting",
                  "pattern": "^(keepCollecting|stopCollecting)$",
                  "description": "Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n  * `stopCollecting`\n  * `keepCollecting`",
                  "x-pattern-message": "must be either `keepCollecting` or `stopCollecting`"
                },
                "timezone": {
                  "type": "string",
                  "example": "America/Los_Angeles",
                  "description": "Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
                },
                "resetTime": {
                  "type": "string",
                  "example": "23:30",
                  "maxLength": 5,
                  "minLength": 5,
                  "description": "Reset time of the ingest budget in HH:MM format."
                },
                "description": {
                  "type": "string",
                  "maxLength": 1024,
                  "minLength": 0,
                  "description": "Description of the ingest budget."
                },
                "capacityBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "minimum": 1,
                  "description": "Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit."
                },
                "auditThreshold": {
                  "type": "integer",
                  "format": "int32",
                  "example": 85,
                  "maximum": 99,
                  "minimum": 1,
                  "description": "The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index."
                }
              }
            },
            {
              "required": [
                "createdAt",
                "createdBy",
                "id",
                "modifiedAt",
                "modifiedBy",
                "version"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0000000003343FDD",
                  "description": "Unique identifier for the ingest budget."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The creation timestamp in UTC of the Ingest Budget."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "The identifier of the user who created the Ingest Budget."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The modified timestamp in UTC of the Ingest Budget."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000001243FDD",
                  "description": "The identifier of the user who modified the Ingest Budget."
                },
                "usageBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 900,
                  "description": "Current usage since the last reset, in bytes."
                },
                "usageStatus": {
                  "type": "string",
                  "example": "Approaching",
                  "pattern": "^(Normal|Approaching|Exceeded|Unknown)$",
                  "description": "Status of the current usage. Can be `Normal`, `Approaching`, `Exceeded`, or `Unknown` (unable to retrieve usage).",
                  "x-pattern-message": "must be either `Normal`, `Approaching`, `Exceeded`, or `Unknown`"
                },
                "budgetVersion": {
                  "type": "integer",
                  "format": "int32",
                  "example": 2,
                  "description": "The version of the Ingest Budget"
                }
              }
            }
          ]
        }
      ]
  getItemByPath:
    description: |-
      Get a content item corresponding to the given path.
      
      _Path is specified in the required query parameter `path`. The path should be URL encoded._ For example, to get "Acme Corp" folder of a user "user@sumo.com" you can use the following curl command:
        ```bash
        curl https://api.sumologic.com/api/v2/content/path?path=/Library/Users/user%40sumo.com/Acme%20Corp
        ```
      
      
      The absolute path to a content item should be specified to get the item. The content library has "Library" folder at the root level. For items in "Personal" folder, the base path is "/Library/Users/user@sumo.com" where "user@sumo.com" is the email address of the user. For example if a user with email address `wile@acme.com` has `Rockets` folder inside Personal folder, the path of Rockets folder will be `/Library/Users/wile@acme.com/Rockets`.
      
      For items in "Admin Recommended" folder, the base path is "/Library/Admin Recommended". For example, given a folder `Acme` in Admin Recommended folder, the path will be `/Library/Admin Recommended/Acme`.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getItemByPath
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id",
                "itemType",
                "name",
                "parentId",
                "permissions"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "000000000C1C17C6",
                  "description": "Identifier of the content item."
                },
                "name": {
                  "type": "string",
                  "example": "Personal",
                  "description": "The name of the content item."
                },
                "itemType": {
                  "type": "string",
                  "example": "Folder",
                  "description": "Type of the content item. Supported values are:\n  1. Folder\n  2. Search\n  3. Report (for old dashboards)\n  4. Dashboard (for new dashboards)\n  5. Lookups"
                },
                "parentId": {
                  "type": "string",
                  "example": "0000000001C41EF2",
                  "description": "Identifier of the parent content item."
                },
                "permissions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "View",
                    "GrantView",
                    "Edit"
                  ],
                  "description": "List of permissions the user has on the content item."
                }
              }
            }
          ]
        }
      ]
  getLogSearchEstimatedUsage:
    description: |-
      Gets the estimated volume of data that would be scanned for a given log search in the Infrequent data tier.
      
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getLogSearchEstimatedUsage
    example:
      inputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "queryString",
                "timeRange"
              ],
              "properties": {
                "timeRange": {
                  "type": "object",
                  "example": {
                    "from": {
                      "type": "RelativeTimeRangeBoundary",
                      "relativeTime": "-15m"
                    },
                    "type": "BeginBoundedTimeRange"
                  },
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`."
                    }
                  },
                  "discriminator": {
                    "propertyName": "type"
                  }
                },
                "parsingMode": {
                  "type": "string",
                  "default": "Manual",
                  "example": "AutoParse",
                  "description": "Define the parsing mode to scan the JSON format log messages. Possible values are:\n  1. `AutoParse`\n  2. `Manual`\nIn AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011)."
                },
                "queryString": {
                  "type": "string",
                  "example": "error | count by _sourceCategory",
                  "description": "Query to perform."
                },
                "queryParameters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "autoComplete",
                      "dataType",
                      "description",
                      "label",
                      "name",
                      "value"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the parameter."
                      },
                      "label": {
                        "type": "string",
                        "description": "The label of the parameter."
                      },
                      "value": {
                        "type": "string",
                        "description": "A value for the parameter. Should be compatible with the type set in dataType field."
                      },
                      "dataType": {
                        "type": "string",
                        "description": "The data type of the parameter. Supported values are:\n  1. `NUMBER`\n  2. `STRING`\n  3. `QUERY_FRAGMENT`\n  4. `SEARCH_KEYWORD`"
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the parameter."
                      },
                      "autoComplete": {
                        "type": "object",
                        "required": [
                          "autoCompleteType"
                        ],
                        "properties": {
                          "lookupFileName": {
                            "type": "string",
                            "description": "The lookup file to use as a source for autocomplete values."
                          },
                          "autoCompleteKey": {
                            "type": "string",
                            "example": "Ephemeral-3644138589235809747-1583470806220-parameter",
                            "description": "The autocomplete key to be used to fetch autocomplete values."
                          },
                          "autoCompleteType": {
                            "type": "string",
                            "description": "The autocomplete parameter type. Supported values are:\n  1. `SKIP_AUTOCOMPLETE`\n  2. `CSV_AUTOCOMPLETE`\n  3. `AUTOCOMPLETE_KEY`\n  4. `VALUE_ONLY_AUTOCOMPLETE`\n  5. `VALUE_ONLY_LOOKUP_AUTOCOMPLETE`\n  6. `LABEL_VALUE_LOOKUP_AUTOCOMPLETE`"
                          },
                          "lookupLabelColumn": {
                            "type": "string",
                            "description": "The column from the lookup file to use for autocomplete labels."
                          },
                          "lookupValueColumn": {
                            "type": "string",
                            "description": "The column from the lookup file to fill the actual value when a particular label is selected."
                          },
                          "autoCompleteValues": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "label",
                                "value"
                              ],
                              "properties": {
                                "label": {
                                  "type": "string",
                                  "description": "The label of the autocomplete value."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the autocomplete value."
                                }
                              }
                            },
                            "description": "The array of values of the corresponding autocomplete parameter."
                          }
                        }
                      }
                    }
                  },
                  "description": "Definition of the query parameters."
                },
                "runByReceiptTime": {
                  "type": "boolean",
                  "default": false,
                  "example": false,
                  "description": "This has the value `true` if the search is to be run by receipt time and `false` if it is to be run by message time."
                }
              },
              "description": "Definition of a log search with query and timerange."
            },
            {
              "type": "object",
              "required": [
                "timezone"
              ],
              "properties": {
                "timezone": {
                  "type": "string",
                  "example": "America/Los_Angeles",
                  "description": "Time zone to get the estimated usage details. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n"
                }
              }
            }
          ]
        }
      ]
      outputs: [
        {
          "allOf": [
            {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "queryString",
                    "timeRange"
                  ],
                  "properties": {
                    "timeRange": {
                      "type": "object",
                      "example": {
                        "from": {
                          "type": "RelativeTimeRangeBoundary",
                          "relativeTime": "-15m"
                        },
                        "type": "BeginBoundedTimeRange"
                      },
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`."
                        }
                      },
                      "discriminator": {
                        "propertyName": "type"
                      }
                    },
                    "parsingMode": {
                      "type": "string",
                      "default": "Manual",
                      "example": "AutoParse",
                      "description": "Define the parsing mode to scan the JSON format log messages. Possible values are:\n  1. `AutoParse`\n  2. `Manual`\nIn AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011)."
                    },
                    "queryString": {
                      "type": "string",
                      "example": "error | count by _sourceCategory",
                      "description": "Query to perform."
                    },
                    "queryParameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "autoComplete",
                          "dataType",
                          "description",
                          "label",
                          "name",
                          "value"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the parameter."
                          },
                          "label": {
                            "type": "string",
                            "description": "The label of the parameter."
                          },
                          "value": {
                            "type": "string",
                            "description": "A value for the parameter. Should be compatible with the type set in dataType field."
                          },
                          "dataType": {
                            "type": "string",
                            "description": "The data type of the parameter. Supported values are:\n  1. `NUMBER`\n  2. `STRING`\n  3. `QUERY_FRAGMENT`\n  4. `SEARCH_KEYWORD`"
                          },
                          "description": {
                            "type": "string",
                            "description": "A description of the parameter."
                          },
                          "autoComplete": {
                            "type": "object",
                            "required": [
                              "autoCompleteType"
                            ],
                            "properties": {
                              "lookupFileName": {
                                "type": "string",
                                "description": "The lookup file to use as a source for autocomplete values."
                              },
                              "autoCompleteKey": {
                                "type": "string",
                                "example": "Ephemeral-3644138589235809747-1583470806220-parameter",
                                "description": "The autocomplete key to be used to fetch autocomplete values."
                              },
                              "autoCompleteType": {
                                "type": "string",
                                "description": "The autocomplete parameter type. Supported values are:\n  1. `SKIP_AUTOCOMPLETE`\n  2. `CSV_AUTOCOMPLETE`\n  3. `AUTOCOMPLETE_KEY`\n  4. `VALUE_ONLY_AUTOCOMPLETE`\n  5. `VALUE_ONLY_LOOKUP_AUTOCOMPLETE`\n  6. `LABEL_VALUE_LOOKUP_AUTOCOMPLETE`"
                              },
                              "lookupLabelColumn": {
                                "type": "string",
                                "description": "The column from the lookup file to use for autocomplete labels."
                              },
                              "lookupValueColumn": {
                                "type": "string",
                                "description": "The column from the lookup file to fill the actual value when a particular label is selected."
                              },
                              "autoCompleteValues": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "label",
                                    "value"
                                  ],
                                  "properties": {
                                    "label": {
                                      "type": "string",
                                      "description": "The label of the autocomplete value."
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "The value of the autocomplete value."
                                    }
                                  }
                                },
                                "description": "The array of values of the corresponding autocomplete parameter."
                              }
                            }
                          }
                        }
                      },
                      "description": "Definition of the query parameters."
                    },
                    "runByReceiptTime": {
                      "type": "boolean",
                      "default": false,
                      "example": false,
                      "description": "This has the value `true` if the search is to be run by receipt time and `false` if it is to be run by message time."
                    }
                  },
                  "description": "Definition of a log search with query and timerange."
                },
                {
                  "type": "object",
                  "required": [
                    "timezone"
                  ],
                  "properties": {
                    "timezone": {
                      "type": "string",
                      "example": "America/Los_Angeles",
                      "description": "Time zone to get the estimated usage details. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n"
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "required": [
                "estimatedUsageDetails"
              ],
              "properties": {
                "estimatedUsageDetails": {
                  "type": "object",
                  "properties": {
                    "dataScannedInBytes": {
                      "type": "integer",
                      "format": "int64",
                      "example": 114086541,
                      "description": "Amount of data scanned in bytes, to run the query."
                    }
                  }
                }
              }
            }
          ]
        }
      ]
  getLogSearchEstimatedUsageByTier:
    description: |-
      Gets the estimated volume of data that would be scanned for a given log search per data tier.
      
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getLogSearchEstimatedUsageByTier
    example:
      inputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "queryString",
                "timeRange"
              ],
              "properties": {
                "timeRange": {
                  "type": "object",
                  "example": {
                    "from": {
                      "type": "RelativeTimeRangeBoundary",
                      "relativeTime": "-15m"
                    },
                    "type": "BeginBoundedTimeRange"
                  },
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`."
                    }
                  },
                  "discriminator": {
                    "propertyName": "type"
                  }
                },
                "parsingMode": {
                  "type": "string",
                  "default": "Manual",
                  "example": "AutoParse",
                  "description": "Define the parsing mode to scan the JSON format log messages. Possible values are:\n  1. `AutoParse`\n  2. `Manual`\nIn AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011)."
                },
                "queryString": {
                  "type": "string",
                  "example": "error | count by _sourceCategory",
                  "description": "Query to perform."
                },
                "queryParameters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "autoComplete",
                      "dataType",
                      "description",
                      "label",
                      "name",
                      "value"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the parameter."
                      },
                      "label": {
                        "type": "string",
                        "description": "The label of the parameter."
                      },
                      "value": {
                        "type": "string",
                        "description": "A value for the parameter. Should be compatible with the type set in dataType field."
                      },
                      "dataType": {
                        "type": "string",
                        "description": "The data type of the parameter. Supported values are:\n  1. `NUMBER`\n  2. `STRING`\n  3. `QUERY_FRAGMENT`\n  4. `SEARCH_KEYWORD`"
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the parameter."
                      },
                      "autoComplete": {
                        "type": "object",
                        "required": [
                          "autoCompleteType"
                        ],
                        "properties": {
                          "lookupFileName": {
                            "type": "string",
                            "description": "The lookup file to use as a source for autocomplete values."
                          },
                          "autoCompleteKey": {
                            "type": "string",
                            "example": "Ephemeral-3644138589235809747-1583470806220-parameter",
                            "description": "The autocomplete key to be used to fetch autocomplete values."
                          },
                          "autoCompleteType": {
                            "type": "string",
                            "description": "The autocomplete parameter type. Supported values are:\n  1. `SKIP_AUTOCOMPLETE`\n  2. `CSV_AUTOCOMPLETE`\n  3. `AUTOCOMPLETE_KEY`\n  4. `VALUE_ONLY_AUTOCOMPLETE`\n  5. `VALUE_ONLY_LOOKUP_AUTOCOMPLETE`\n  6. `LABEL_VALUE_LOOKUP_AUTOCOMPLETE`"
                          },
                          "lookupLabelColumn": {
                            "type": "string",
                            "description": "The column from the lookup file to use for autocomplete labels."
                          },
                          "lookupValueColumn": {
                            "type": "string",
                            "description": "The column from the lookup file to fill the actual value when a particular label is selected."
                          },
                          "autoCompleteValues": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "label",
                                "value"
                              ],
                              "properties": {
                                "label": {
                                  "type": "string",
                                  "description": "The label of the autocomplete value."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the autocomplete value."
                                }
                              }
                            },
                            "description": "The array of values of the corresponding autocomplete parameter."
                          }
                        }
                      }
                    }
                  },
                  "description": "Definition of the query parameters."
                },
                "runByReceiptTime": {
                  "type": "boolean",
                  "default": false,
                  "example": false,
                  "description": "This has the value `true` if the search is to be run by receipt time and `false` if it is to be run by message time."
                }
              },
              "description": "Definition of a log search with query and timerange."
            },
            {
              "type": "object",
              "required": [
                "timezone"
              ],
              "properties": {
                "timezone": {
                  "type": "string",
                  "example": "America/Los_Angeles",
                  "description": "Time zone to get the estimated usage details. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n"
                }
              }
            }
          ]
        }
      ]
      outputs: [
        {
          "allOf": [
            {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "queryString",
                    "timeRange"
                  ],
                  "properties": {
                    "timeRange": {
                      "type": "object",
                      "example": {
                        "from": {
                          "type": "RelativeTimeRangeBoundary",
                          "relativeTime": "-15m"
                        },
                        "type": "BeginBoundedTimeRange"
                      },
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`."
                        }
                      },
                      "discriminator": {
                        "propertyName": "type"
                      }
                    },
                    "parsingMode": {
                      "type": "string",
                      "default": "Manual",
                      "example": "AutoParse",
                      "description": "Define the parsing mode to scan the JSON format log messages. Possible values are:\n  1. `AutoParse`\n  2. `Manual`\nIn AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011)."
                    },
                    "queryString": {
                      "type": "string",
                      "example": "error | count by _sourceCategory",
                      "description": "Query to perform."
                    },
                    "queryParameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "autoComplete",
                          "dataType",
                          "description",
                          "label",
                          "name",
                          "value"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the parameter."
                          },
                          "label": {
                            "type": "string",
                            "description": "The label of the parameter."
                          },
                          "value": {
                            "type": "string",
                            "description": "A value for the parameter. Should be compatible with the type set in dataType field."
                          },
                          "dataType": {
                            "type": "string",
                            "description": "The data type of the parameter. Supported values are:\n  1. `NUMBER`\n  2. `STRING`\n  3. `QUERY_FRAGMENT`\n  4. `SEARCH_KEYWORD`"
                          },
                          "description": {
                            "type": "string",
                            "description": "A description of the parameter."
                          },
                          "autoComplete": {
                            "type": "object",
                            "required": [
                              "autoCompleteType"
                            ],
                            "properties": {
                              "lookupFileName": {
                                "type": "string",
                                "description": "The lookup file to use as a source for autocomplete values."
                              },
                              "autoCompleteKey": {
                                "type": "string",
                                "example": "Ephemeral-3644138589235809747-1583470806220-parameter",
                                "description": "The autocomplete key to be used to fetch autocomplete values."
                              },
                              "autoCompleteType": {
                                "type": "string",
                                "description": "The autocomplete parameter type. Supported values are:\n  1. `SKIP_AUTOCOMPLETE`\n  2. `CSV_AUTOCOMPLETE`\n  3. `AUTOCOMPLETE_KEY`\n  4. `VALUE_ONLY_AUTOCOMPLETE`\n  5. `VALUE_ONLY_LOOKUP_AUTOCOMPLETE`\n  6. `LABEL_VALUE_LOOKUP_AUTOCOMPLETE`"
                              },
                              "lookupLabelColumn": {
                                "type": "string",
                                "description": "The column from the lookup file to use for autocomplete labels."
                              },
                              "lookupValueColumn": {
                                "type": "string",
                                "description": "The column from the lookup file to fill the actual value when a particular label is selected."
                              },
                              "autoCompleteValues": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "label",
                                    "value"
                                  ],
                                  "properties": {
                                    "label": {
                                      "type": "string",
                                      "description": "The label of the autocomplete value."
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "The value of the autocomplete value."
                                    }
                                  }
                                },
                                "description": "The array of values of the corresponding autocomplete parameter."
                              }
                            }
                          }
                        }
                      },
                      "description": "Definition of the query parameters."
                    },
                    "runByReceiptTime": {
                      "type": "boolean",
                      "default": false,
                      "example": false,
                      "description": "This has the value `true` if the search is to be run by receipt time and `false` if it is to be run by message time."
                    }
                  },
                  "description": "Definition of a log search with query and timerange."
                },
                {
                  "type": "object",
                  "required": [
                    "timezone"
                  ],
                  "properties": {
                    "timezone": {
                      "type": "string",
                      "example": "America/Los_Angeles",
                      "description": "Time zone to get the estimated usage details. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n"
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "required": [
                "estimatedUsageDetails"
              ],
              "properties": {
                "estimatedUsageDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tier": {
                        "type": "string",
                        "example": "Continuous",
                        "description": "Name of the data tier. Supported Values are Continuous, Frequent, Infrequent"
                      },
                      "dataScannedInBytes": {
                        "type": "integer",
                        "format": "int64",
                        "example": 114086541,
                        "description": "Amount of data scanned in bytes, to run the query."
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
  getMetricsSearch:
    description: |-
      Returns a metrics search with the specified identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getMetricsSearch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "description",
                "metricsQueries",
                "timeRange",
                "title"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Short title",
                  "pattern": "^[a-zA-Z0-9 +%-@.,_()]+$",
                  "maxLength": 255,
                  "minLength": 1,
                  "description": "Item title in the content library."
                },
                "logQuery": {
                  "type": "string",
                  "example": "my_metric | timeslice 1m | count by _timeslice",
                  "maxLength": 10240,
                  "description": "Log query used to add an overlay to the chart."
                },
                "timeRange": {
                  "type": "object",
                  "example": {
                    "from": {
                      "type": "RelativeTimeRangeBoundary",
                      "relativeTime": "-15m"
                    },
                    "type": "BeginBoundedTimeRange"
                  },
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`."
                    }
                  },
                  "discriminator": {
                    "propertyName": "type"
                  }
                },
                "properties": {
                  "type": "string",
                  "example": "{ \\\"key\\\": \\\"value\\\" }",
                  "description": "Chart properties, like line width, color palette, and the fill missing data method. Leave this field empty to use the defaults.\nThis property contains JSON object encoded as a string.\n"
                },
                "description": {
                  "type": "string",
                  "example": "Long and detailed description",
                  "maxLength": 8192,
                  "description": "Item description in the content library."
                },
                "metricsQueries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "query",
                      "rowId"
                    ],
                    "properties": {
                      "query": {
                        "type": "string",
                        "example": "my_metric | avg",
                        "description": "Metrics query."
                      },
                      "rowId": {
                        "type": "string",
                        "example": "A",
                        "description": "Row identifier. All row IDs are represented by subsequent upper case letters starting with `A`."
                      }
                    },
                    "description": "Definition of a metrics query."
                  },
                  "description": "Metrics queries, up to the maximum of six."
                },
                "desiredQuantizationInSecs": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "example": 60,
                  "minimum": 0,
                  "description": "Desired quantization in seconds."
                }
              },
              "description": "Definition of a metrics search."
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "000000000000001A",
                  "description": "Identifier of the metrics search."
                },
                "parentId": {
                  "type": "string",
                  "example": "0000000000007D2B",
                  "description": "Identifier of the parent element in the content library, such as folder."
                }
              }
            }
          ]
        }
      ]
  getMonitorsFullPath:
    description: |-
      Get the full path of the monitor or folder in the monitors library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getMonitorsFullPath
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "path",
            "pathItems"
          ],
          "properties": {
            "path": {
              "type": "string",
              "description": "String representation of the path."
            },
            "pathItems": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Identifier of the path element."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the path element."
                  }
                }
              },
              "description": "Elements of the path."
            }
          }
        }
      ]
  getMonitorsLibraryRoot:
    description: |-
      Get the root folder in the monitors library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getMonitorsLibraryRoot
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "contentType",
                "createdAt",
                "createdBy",
                "description",
                "id",
                "isMutable",
                "isSystem",
                "modifiedAt",
                "modifiedBy",
                "name",
                "parentId",
                "type",
                "version"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Identifier of the monitor or folder."
                },
                "name": {
                  "type": "string",
                  "description": "Identifier of the monitor or folder."
                },
                "type": {
                  "type": "string",
                  "description": "Type of the object model."
                },
                "version": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Version of the monitor or folder."
                },
                "isSystem": {
                  "type": "boolean",
                  "description": "System objects are objects provided by Sumo Logic. System objects can only be localized. Non-local fields can't be updated."
                },
                "parentId": {
                  "type": "string",
                  "description": "Identifier of the parent folder."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "description": "Identifier of the user who created the resource."
                },
                "isMutable": {
                  "type": "boolean",
                  "description": "Immutable objects are \"READ-ONLY\"."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "description": "Identifier of the user who last modified the resource."
                },
                "contentType": {
                  "type": "string",
                  "description": "Type of the content. Valid values:\n  1) Monitor\n  2) Folder"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the monitor or folder."
                }
              },
              "discriminator": {
                "propertyName": "type"
              }
            },
            {
              "type": "object",
              "required": [
                "children"
              ],
              "properties": {
                "children": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "contentType",
                      "createdAt",
                      "createdBy",
                      "description",
                      "id",
                      "isMutable",
                      "isSystem",
                      "modifiedAt",
                      "modifiedBy",
                      "name",
                      "parentId",
                      "type",
                      "version"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Identifier of the monitor or folder."
                      },
                      "name": {
                        "type": "string",
                        "description": "Identifier of the monitor or folder."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the object model."
                      },
                      "version": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Version of the monitor or folder."
                      },
                      "isSystem": {
                        "type": "boolean",
                        "description": "System objects are objects provided by Sumo Logic. System objects can only be localized. Non-local fields can't be updated."
                      },
                      "parentId": {
                        "type": "string",
                        "description": "Identifier of the parent folder."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                      },
                      "createdBy": {
                        "type": "string",
                        "description": "Identifier of the user who created the resource."
                      },
                      "isMutable": {
                        "type": "boolean",
                        "description": "Immutable objects are \"READ-ONLY\"."
                      },
                      "modifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last modification timestamp in UTC."
                      },
                      "modifiedBy": {
                        "type": "string",
                        "description": "Identifier of the user who last modified the resource."
                      },
                      "contentType": {
                        "type": "string",
                        "description": "Type of the content. Valid values:\n  1) Monitor\n  2) Folder"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the monitor or folder."
                      }
                    },
                    "discriminator": {
                      "propertyName": "type"
                    }
                  },
                  "description": "Children of the folder."
                }
              }
            }
          ]
        }
      ]
  getMonitorUsageInfo:
    description: |-
      Get the current number and the allowed number of log and metrics monitors.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getMonitorUsageInfo
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "properties": {
              "limit": {
                "type": "integer",
                "example": 100,
                "description": "The limit of active Logs/Metrics monitors."
              },
              "total": {
                "type": "integer",
                "example": 100,
                "description": "The total number of monitors created. (Including both active and disabled Logs/Metrics monitors)"
              },
              "usage": {
                "type": "integer",
                "example": 100,
                "description": "Current number of active Logs/Metrics monitors."
              },
              "monitorType": {
                "enum": [
                  "Logs",
                  "Metrics"
                ],
                "type": "string",
                "example": "Logs",
                "description": "The type of monitor usage info (Logs or Metrics)."
              }
            },
            "description": "The usage info of monitors."
          },
          "description": "The usage info of logs and metrics monitors."
        }
      ]
  getPartition:
    description: |-
      Get a partition with the given identifier from the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getPartition
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "name",
                "routingExpression"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "apache",
                  "maxLength": 255,
                  "description": "The name of the partition."
                },
                "isCompliant": {
                  "type": "boolean",
                  "default": false,
                  "example": false,
                  "description": "Whether the partition is compliant or not. Mark a partition as compliant if it contains data used for compliance or audit purpose. Retention for a compliant partition can only be increased and cannot be reduced after the partition is marked compliant. A partition once marked compliant, cannot be marked non-compliant later."
                },
                "analyticsTier": {
                  "type": "string",
                  "default": "continuous",
                  "example": "continuous",
                  "pattern": "^(frequent|infrequent|continuous)$",
                  "description": "The Data Tier where the data in the partition will reside. Possible values are:\n              1. `continuous`\n              2. `frequent`\n              3. `infrequent`\nNote: The \"infrequent\" and \"frequent\" tiers are only to available Cloud Flex Credits Enterprise Suite accounts.",
                  "x-pattern-message": "must be one of `continuous`, `frequent` or `infrequent`"
                },
                "retentionPeriod": {
                  "type": "integer",
                  "default": -1,
                  "example": 365,
                  "description": "The number of days to retain data in the partition, or -1 to use the default value for your account.  Only relevant if your account has variable retention enabled."
                },
                "routingExpression": {
                  "type": "string",
                  "example": "_sourcecategory=*/Apache",
                  "maxLength": 16384,
                  "minLength": 1,
                  "description": "The query that defines the data to be included in the partition."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id",
                "totalBytes"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1",
                  "description": "Unique identifier for the partition."
                },
                "isActive": {
                  "type": "boolean",
                  "description": "This has the value `true` if the partition is active and `false` if it has been decommissioned."
                },
                "indexType": {
                  "type": "string",
                  "example": "Partition",
                  "pattern": "^(DefaultIndex|AuditIndex|Partition)$",
                  "description": "This has the value `DefaultIndex`, `AuditIndex`or `Partition` depending upon the type of partition."
                },
                "totalBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 42,
                  "description": "Size of data in partition in bytes."
                },
                "dataForwardingId": {
                  "type": "string",
                  "description": "Id of the data forwarding configuration to be used by the partition."
                },
                "newRetentionPeriod": {
                  "type": "integer",
                  "format": "int32",
                  "example": 300,
                  "description": "If the retentionPeriod is scheduled to be updated in the future (i.e., if retentionPeriod is previously reduced with value of reduceRetentionPeriodImmediately as false), this property gives the future value of retentionPeriod while retentionPeriod gives the current value. retentionPeriod will take up the value of newRetentionPeriod after the scheduled time."
                },
                "retentionEffectiveAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "When the newRetentionPeriod will become effective in UTC format."
                }
              }
            }
          ]
        }
      ]
  getPasswordPolicy:
    description: |-
      Get the current password policy.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getPasswordPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "maxLength": {
              "type": "integer",
              "format": "int32",
              "default": 128,
              "example": 128,
              "maximum": 128,
              "minimum": 32,
              "description": "The maximum length of the password."
            },
            "minLength": {
              "type": "integer",
              "format": "int32",
              "default": 8,
              "example": 8,
              "maximum": 128,
              "minimum": 8,
              "description": "The minimum length of the password."
            },
            "requireMfa": {
              "type": "boolean",
              "default": false,
              "example": false,
              "description": "If MFA should be required to log in. By default, this field is set to `false`."
            },
            "rememberMfa": {
              "type": "boolean",
              "default": true,
              "example": true,
              "description": "If MFA should be remembered on the browser."
            },
            "mustContainDigits": {
              "type": "boolean",
              "default": true,
              "example": true,
              "description": "If the password must contain digits."
            },
            "minUniquePasswords": {
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10,
              "maximum": 10,
              "minimum": 4,
              "description": "The minimum number of unique new passwords that a user must use before an old password can be reused."
            },
            "maxPasswordAgeInDays": {
              "type": "integer",
              "format": "int32",
              "default": 365,
              "example": 365,
              "maximum": 365,
              "minimum": -1,
              "description": "Maximum number of days that a password can be used before user is required to change it. Put -1 if the user should not have to change their password."
            },
            "mustContainLowercase": {
              "type": "boolean",
              "default": true,
              "example": true,
              "description": "If the password must contain lower case characters."
            },
            "mustContainUppercase": {
              "type": "boolean",
              "default": true,
              "example": true,
              "description": "If the password must contain upper case characters."
            },
            "accountLockoutThreshold": {
              "type": "integer",
              "format": "int32",
              "default": 6,
              "example": 6,
              "maximum": 10,
              "minimum": 3,
              "description": "Number of failed login attempts allowed before account is locked-out."
            },
            "mustContainSpecialChars": {
              "type": "boolean",
              "default": true,
              "example": true,
              "description": "If the password must contain special characters."
            },
            "accountLockoutDurationInMins": {
              "type": "integer",
              "format": "int32",
              "default": 30,
              "example": 30,
              "maximum": 120,
              "minimum": 30,
              "description": "The duration of time in minutes that a locked-out account remained locked before getting unlocked automatically."
            },
            "failedLoginResetDurationInMins": {
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10,
              "maximum": 10,
              "minimum": 1,
              "description": "The duration of time in minutes that must elapse from the first failed login attempt after which failed login count is reset to 0."
            }
          },
          "description": "Password Policy"
        }
      ]
  getPathById:
    description: |-
      Get full path of a content item with the given identifier.
      
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getPathById
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "path"
          ],
          "properties": {
            "path": {
              "type": "string",
              "example": "/Library/Users/user@test.com/SampleFolder",
              "description": "Path of the content item."
            }
          }
        }
      ]
  getPersonalFolder:
    description: |-
      Get the personal folder of the current user.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getPersonalFolder
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy"
                  ],
                  "properties": {
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "Identifier of the user who created the resource."
                    },
                    "modifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last modification timestamp in UTC."
                    },
                    "modifiedBy": {
                      "type": "string",
                      "example": "0000000006743FE8",
                      "description": "Identifier of the user who last modified the resource."
                    }
                  }
                },
                {
                  "required": [
                    "id",
                    "itemType",
                    "name",
                    "parentId",
                    "permissions"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "000000000C1C17C6",
                      "description": "Identifier of the content item."
                    },
                    "name": {
                      "type": "string",
                      "example": "Personal",
                      "description": "The name of the content item."
                    },
                    "itemType": {
                      "type": "string",
                      "example": "Folder",
                      "description": "Type of the content item. Supported values are:\n  1. Folder\n  2. Search\n  3. Report (for old dashboards)\n  4. Dashboard (for new dashboards)\n  5. Lookups"
                    },
                    "parentId": {
                      "type": "string",
                      "example": "0000000001C41EF2",
                      "description": "Identifier of the parent content item."
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "View",
                        "GrantView",
                        "Edit"
                      ],
                      "description": "List of permissions the user has on the content item."
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "properties": {
                "children": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "createdAt",
                          "createdBy",
                          "modifiedAt",
                          "modifiedBy"
                        ],
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                          },
                          "createdBy": {
                            "type": "string",
                            "example": "0000000006743FDD",
                            "description": "Identifier of the user who created the resource."
                          },
                          "modifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last modification timestamp in UTC."
                          },
                          "modifiedBy": {
                            "type": "string",
                            "example": "0000000006743FE8",
                            "description": "Identifier of the user who last modified the resource."
                          }
                        }
                      },
                      {
                        "required": [
                          "id",
                          "itemType",
                          "name",
                          "parentId",
                          "permissions"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "000000000C1C17C6",
                            "description": "Identifier of the content item."
                          },
                          "name": {
                            "type": "string",
                            "example": "Personal",
                            "description": "The name of the content item."
                          },
                          "itemType": {
                            "type": "string",
                            "example": "Folder",
                            "description": "Type of the content item. Supported values are:\n  1. Folder\n  2. Search\n  3. Report (for old dashboards)\n  4. Dashboard (for new dashboards)\n  5. Lookups"
                          },
                          "parentId": {
                            "type": "string",
                            "example": "0000000001C41EF2",
                            "description": "Identifier of the parent content item."
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "View",
                              "GrantView",
                              "Edit"
                            ],
                            "description": "List of permissions the user has on the content item."
                          }
                        }
                      }
                    ]
                  },
                  "description": "A list of the content items."
                },
                "description": {
                  "type": "string",
                  "example": "This is a sample folder.",
                  "maxLength": 255,
                  "minLength": 0,
                  "description": "The description of the folder."
                }
              }
            }
          ]
        }
      ]
  getRole:
    description: |-
      Get a role with the given identifier in the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getRole
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "DataAdmin",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "Name of the role."
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "0000000006743FE0",
                    "0000000005FCE0EE"
                  ],
                  "description": "List of user identifiers to assign the role to."
                },
                "description": {
                  "type": "string",
                  "example": "Manage data of the org.",
                  "maxLength": 255,
                  "minLength": 0,
                  "description": "Description of the role."
                },
                "capabilities": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "manageContent",
                    "manageDataVolumeFeed",
                    "manageFieldExtractionRules",
                    "manageS3DataForwarding"
                  ],
                  "description": "List of [capabilities](https://help.sumologic.com/Manage/Users-and-Roles/Manage-Roles/Role-Capabilities) associated with this role. Valid values are\n### Data Management\n  - viewCollectors\n  - manageCollectors\n  - manageBudgets\n  - manageDataVolumeFeed\n  - viewFieldExtraction\n  - manageFieldExtractionRules\n  - manageS3DataForwarding\n  - manageContent\n  - dataVolumeIndex\n  - viewConnections\n  - manageConnections\n  - viewScheduledViews\n  - manageScheduledViews\n  - viewPartitions\n  - managePartitions\n  - viewFields\n  - manageFields\n  - viewAccountOverview\n  - manageTokens\n  - manageDataStreams\n\n### Entity management\n  - manageEntityTypeConfig\n\n### Metrics\n  - manageMonitors\n  - metricsTransformation\n  - metricsExtraction\n  - metricsRules\n\n### Security\n  - managePasswordPolicy\n  - ipAllowlisting\n  - createAccessKeys\n  - manageAccessKeys\n  - manageSupportAccountAccess\n  - manageAuditDataFeed\n  - manageSaml\n  - shareDashboardOutsideOrg\n  - manageOrgSettings\n  - changeDataAccessLevel\n\n### Dashboards\n  - shareDashboardWorld\n  - shareDashboardAllowlist\n\n### UserManagement\n  - manageUsersAndRoles\n\n### Observability\n  - searchAuditIndex\n  - auditEventIndex\n\n### Cloud SIEM Enterprise\n  - viewCse\n\n### Monitors (New)\n  - viewMonitorsV2\n  - manageMonitorsV2"
                },
                "filterPredicate": {
                  "type": "string",
                  "example": "!_sourceCategory=billing",
                  "description": "A search filter to restrict access to specific logs. The filter is silently added to the beginning of each query a user runs. For example, using '!_sourceCategory=billing' as a filter predicate will prevent users assigned to the role from viewing logs from the source category named 'billing'."
                },
                "autofillDependencies": {
                  "type": "boolean",
                  "default": true,
                  "description": "Set this to true if you want to automatically append all missing capability requirements. If set to false an error will be thrown if any capabilities are missing their dependencies."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0000000000E20FE3",
                  "description": "Unique identifier for the role."
                },
                "systemDefined": {
                  "type": "boolean",
                  "example": false,
                  "description": "Role is system or user defined."
                }
              }
            }
          ],
          "x-tf-resource-name": "Role",
          "x-tf-generated-properties": "id,name,description,filterPredicate,capabilities"
        }
      ]
  getScheduledView:
    description: |-
      Get a scheduled view with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getScheduledView
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "indexName",
                "query",
                "startTime",
                "store"
              ],
              "properties": {
                "query": {
                  "type": "string",
                  "example": "_sourcecategory=*/Apache",
                  "maxLength": 16384,
                  "minLength": 1,
                  "description": "The query that defines the data to be included in the scheduled view."
                },
                "indexName": {
                  "type": "string",
                  "example": "TestScheduledView",
                  "maxLength": 255,
                  "minLength": 0,
                  "description": "Name of the index for the scheduled view."
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "parsingMode": {
                  "type": "string",
                  "default": "Manual",
                  "example": "AutoParse",
                  "pattern": "^(AutoParse|Manual)$",
                  "description": "Define the parsing mode to scan the JSON format log messages. Possible values are:\n  1. `AutoParse`\n  2. `Manual`\nIn AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).",
                  "x-pattern-message": "should be either AutoParse or Manual"
                },
                "retentionPeriod": {
                  "type": "integer",
                  "format": "int32",
                  "default": -1,
                  "example": 365,
                  "description": "The number of days to retain data in the scheduled view, or -1 to use the default value for your account.  Only relevant if your account has multi-retention. enabled."
                },
                "dataForwardingId": {
                  "type": "string",
                  "description": "An optional ID of a data forwarding configuration to be used by the scheduled view."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Identifier for the scheduled view."
                },
                "error": {
                  "type": "string",
                  "description": "Errors related to the scheduled view."
                },
                "status": {
                  "type": "string",
                  "description": "Status of the scheduled view."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC."
                },
                "createdBy": {
                  "type": "string",
                  "description": "Identifier of the user who created the scheduled view."
                },
                "totalBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total storage consumed by the scheduled view."
                },
                "totalMessageCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total number of messages for the scheduled view."
                },
                "createdByOptimizeIt": {
                  "type": "boolean",
                  "description": "If the scheduled view is created by OptimizeIt."
                }
              }
            }
          ],
          "x-tf-generated-properties": "id,query,indexName,startTime,retentionPeriod,parsingMode"
        }
      ]
  getStatus:
    description: |-
      Get information related to the account's plan, pricing model, expiration and payment status.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getStatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "applicationUse",
            "canUpdatePlan",
            "planType",
            "pricingModel"
          ],
          "properties": {
            "planType": {
              "type": "string",
              "example": "Free",
              "pattern": "^(Free|Trial|Paid)$",
              "description": "Whether the account is `Free`/`Trial`/`Paid`"
            },
            "pricingModel": {
              "type": "string",
              "example": "credits",
              "pattern": "^(credits|cloudflex)$",
              "description": "Whether the account is `cloudflex` or `credits`"
            },
            "canUpdatePlan": {
              "type": "boolean",
              "example": true,
              "description": "If the plan can be updated by the given user"
            },
            "applicationUse": {
              "type": "string",
              "example": "ALLOWED",
              "pattern": "^(ALLOWED|ALLOWED_WITH_WARNING|THROTTLED|RESTRICTED)$",
              "description": "The current usage of the application."
            },
            "planExpirationDays": {
              "type": "integer",
              "example": 20,
              "description": "The number of days in which the plan will expire"
            }
          },
          "description": "Information about the account's plan and payment."
        }
      ]
  getSubdomain:
    description: |-
      Get the configured subdomain.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getSubdomain
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "createdAt",
            "createdBy",
            "modifiedAt",
            "modifiedBy",
            "subdomain",
            "url"
          ],
          "properties": {
            "url": {
              "type": "string",
              "example": "https://your-company.sumologic.com",
              "description": "Login URL corresponding to the subdomain."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.\n"
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "subdomain": {
              "type": "string",
              "example": "my-company",
              "description": "The new subdomain."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            }
          }
        }
      ]
  getToken:
    description: |-
      Get a token with the given identifier in the token library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getToken
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "createdAt",
            "createdBy",
            "description",
            "id",
            "modifiedAt",
            "modifiedBy",
            "name",
            "status",
            "type",
            "version"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the token."
            },
            "name": {
              "type": "string",
              "example": "token-name",
              "maxLength": 255,
              "minLength": 1,
              "description": "Name of the token."
            },
            "type": {
              "type": "string",
              "example": "CollectorRegistrationTokenResponse",
              "pattern": "^(CollectorRegistrationTokenResponse)$",
              "description": "Type of the token. Valid values: 1) CollectorRegistrationTokenResponse",
              "x-pattern-message": "must be `CollectorRegistrationTokenResponse`"
            },
            "status": {
              "type": "string",
              "example": "Active",
              "pattern": "^(Active|Inactive)$",
              "description": "Status of the token. Can be `Active`, or `Inactive`.",
              "x-pattern-message": "must be either `Active` or `Inactive`"
            },
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "Version of the token."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            },
            "description": {
              "type": "string",
              "example": "token description: for test.",
              "maxLength": 4096,
              "minLength": 0,
              "description": "Description of the token."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  getTransformationRule:
    description: |-
      Get a transformation rule with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getTransformationRule
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "enabled",
                "ruleDefinition"
              ],
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "example": true,
                  "description": "True if the rule is enabled."
                },
                "ruleDefinition": {
                  "type": "object",
                  "required": [
                    "name",
                    "retention",
                    "selector"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Transformation Rule 1",
                      "description": "Name of the transformation rule."
                    },
                    "selector": {
                      "type": "string",
                      "example": "_sourceCategory=metricsstore",
                      "description": "Selector of the transformation rule."
                    },
                    "retention": {
                      "type": "integer",
                      "format": "int64",
                      "default": 400,
                      "example": 8,
                      "description": "Retention period in days for the metrics that are selected by the selector. The supported retention periods for selected metrics are 8 days, 400 days, and 0 (Do not store) if this rule contains dimension transformation."
                    },
                    "dimensionTransformations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "transformationType"
                        ],
                        "properties": {
                          "transformationType": {
                            "type": "string",
                            "description": "This is the base type of all dimension transformations."
                          }
                        },
                        "description": "Base class of all transformation types.",
                        "discriminator": {
                          "propertyName": "transformationType"
                        }
                      },
                      "default": [],
                      "example": [
                        {
                          "aggregateOn": [
                            "metric"
                          ],
                          "transformationType": "AggregateOnTransformation"
                        },
                        {
                          "value": "{{metric}}_aggregated",
                          "dimensionToReplace": "metric",
                          "transformationType": "AddOrReplaceTransformation"
                        }
                      ],
                      "description": "Dimension transformations of the transformation rule."
                    },
                    "transformedMetricsRetention": {
                      "type": "integer",
                      "format": "int64",
                      "default": 0,
                      "example": 8,
                      "description": "Retention period in days for the transformed metrics that are generated by this rule. The supported retention periods for transformed metrics are 8 days, and 400 days. If no dimension transformations are defined, this value will be set to 0."
                    }
                  },
                  "description": "The properties that define a transformation rule."
                }
              },
              "description": "A request for creating or updating a transformation rule."
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the transformation rule."
                }
              }
            }
          ],
          "description": "A generic response for transformation rule."
        }
      ]
  getTransformationRules:
    description: |-
      Get a list of transformation rules in the organization. The response is paginated with a default limit of 100 rules per page.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getTransformationRules
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "enabled",
                      "ruleDefinition"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "example": true,
                        "description": "True if the rule is enabled."
                      },
                      "ruleDefinition": {
                        "type": "object",
                        "required": [
                          "name",
                          "retention",
                          "selector"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Transformation Rule 1",
                            "description": "Name of the transformation rule."
                          },
                          "selector": {
                            "type": "string",
                            "example": "_sourceCategory=metricsstore",
                            "description": "Selector of the transformation rule."
                          },
                          "retention": {
                            "type": "integer",
                            "format": "int64",
                            "default": 400,
                            "example": 8,
                            "description": "Retention period in days for the metrics that are selected by the selector. The supported retention periods for selected metrics are 8 days, 400 days, and 0 (Do not store) if this rule contains dimension transformation."
                          },
                          "dimensionTransformations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "transformationType"
                              ],
                              "properties": {
                                "transformationType": {
                                  "type": "string",
                                  "description": "This is the base type of all dimension transformations."
                                }
                              },
                              "description": "Base class of all transformation types.",
                              "discriminator": {
                                "propertyName": "transformationType"
                              }
                            },
                            "default": [],
                            "example": [
                              {
                                "aggregateOn": [
                                  "metric"
                                ],
                                "transformationType": "AggregateOnTransformation"
                              },
                              {
                                "value": "{{metric}}_aggregated",
                                "dimensionToReplace": "metric",
                                "transformationType": "AddOrReplaceTransformation"
                              }
                            ],
                            "description": "Dimension transformations of the transformation rule."
                          },
                          "transformedMetricsRetention": {
                            "type": "integer",
                            "format": "int64",
                            "default": 0,
                            "example": 8,
                            "description": "Retention period in days for the transformed metrics that are generated by this rule. The supported retention periods for transformed metrics are 8 days, and 400 days. If no dimension transformations are defined, this value will be set to 0."
                          }
                        },
                        "description": "The properties that define a transformation rule."
                      }
                    },
                    "description": "A request for creating or updating a transformation rule."
                  },
                  {
                    "type": "object",
                    "required": [
                      "createdAt",
                      "createdBy",
                      "modifiedAt",
                      "modifiedBy"
                    ],
                    "properties": {
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                      },
                      "createdBy": {
                        "type": "string",
                        "example": "0000000006743FDD",
                        "description": "Identifier of the user who created the resource."
                      },
                      "modifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last modification timestamp in UTC."
                      },
                      "modifiedBy": {
                        "type": "string",
                        "example": "0000000006743FE8",
                        "description": "Identifier of the user who last modified the resource."
                      }
                    }
                  },
                  {
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the transformation rule."
                      }
                    }
                  }
                ],
                "description": "A generic response for transformation rule."
              },
              "description": "List of transformation rules."
            },
            "next": {
              "type": "string",
              "example": "aGNzTmZBN1ZZWFk9",
              "description": "Next continuation token."
            }
          },
          "description": "A generic response for transformation rule."
        }
      ]
  getUser:
    description: |-
      Get a user with the given identifier from the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/getUser
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "email",
                "firstName",
                "lastName",
                "roleIds"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "johndoe@acme.com",
                  "maxLength": 255,
                  "description": "Email address of the user."
                },
                "roleIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "00000000000001DF",
                    "00000000000002D2"
                  ],
                  "description": "List of roleIds associated with the user."
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe",
                  "maxLength": 128,
                  "minLength": 0,
                  "description": "Last name of the user."
                },
                "firstName": {
                  "type": "string",
                  "example": "John",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "First name of the user."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "000000000FE20FE2",
                  "description": "Unique identifier for the user."
                },
                "isActive": {
                  "type": "boolean",
                  "example": true,
                  "description": "True if the user is active."
                },
                "isLocked": {
                  "type": "boolean",
                  "example": false,
                  "description": "This has the value `true` if the user's account has been locked. If a user tries to log into their account several times and fails, his or her account will be locked for security reasons."
                },
                "isMfaEnabled": {
                  "type": "boolean",
                  "example": false,
                  "description": "True if multi factor authentication is enabled for the user."
                },
                "lastLoginTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the last login for the user in UTC. Will be null if the user has never logged in."
                }
              }
            }
          ]
        }
      ]
  installApp:
    description: |-
      Installs the app with given UUID in the folder specified using destinationFolderId.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/installApp
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "description",
            "destinationFolderId",
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "Sumo Logic Configuration App",
              "maxLength": 128,
              "minLength": 1,
              "description": "Preferred name of the app to be installed. This will be the name of the app in the selected installation folder."
            },
            "description": {
              "type": "string",
              "example": "Sumo Logic Configuration App to configure collectors and data sources",
              "maxLength": 255,
              "minLength": 1,
              "description": "Preferred description of the app to be installed. This will be displayed as the app description in the selected installation folder."
            },
            "dataSourceValues": {
              "type": "object",
              "example": {
                "logsrc": "_sourceCategory = api"
              },
              "description": "Dictionary of properties specifying log-source name and value.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "destinationFolderId": {
              "type": "string",
              "example": "00000000000001C8",
              "description": "Identifier of the folder in which the app will be installed in hexadecimal format."
            }
          },
          "description": "JSON object containing name, description, destinationFolderId, and dataSourceType."
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string",
              "example": "C03E086C137F38B4",
              "description": "Identifier to get the status of an asynchronous job."
            }
          }
        }
      ]
  listAccessKeys:
    description: |-
      List all access keys in your account.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listAccessKeys
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "createdAt",
                  "createdBy",
                  "disabled",
                  "id",
                  "label",
                  "modifiedAt"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "su0w3Q37CBzHUM",
                    "description": "Identifier of the access key."
                  },
                  "label": {
                    "type": "string",
                    "example": "collector access key",
                    "description": "The name of the access key."
                  },
                  "disabled": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates whether the access key is disabled or not."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                  },
                  "createdBy": {
                    "type": "string",
                    "example": "0000000006743FDD",
                    "description": "Identifier of the user who created the access key."
                  },
                  "modifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last modification timestamp in UTC."
                  },
                  "corsHeaders": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://my-app.com",
                      "https://mail.my-app.com"
                    ],
                    "description": "An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:\n  1. Requests with an ORIGIN header but the allowlist is empty.\n  2. Requests with an ORIGIN header that don't match any entry in the allowlist."
                  }
                }
              },
              "description": "An array of access keys."
            },
            "next": {
              "type": "string",
              "example": "GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc",
              "description": "Next continuation token."
            }
          },
          "description": "List of access keys."
        }
      ]
  listAllHealthEvents:
    description: |-
      Get a list of all the unresolved health events in your account.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listAllHealthEvents
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "details",
                  "eventId",
                  "eventName",
                  "eventTime",
                  "resourceIdentity",
                  "severityLevel",
                  "subsystem"
                ],
                "properties": {
                  "details": {
                    "type": "object",
                    "required": [
                      "description",
                      "error",
                      "trackerId"
                    ],
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Access denied to Amazon S3 bucket",
                        "description": "Description of the underlying reason for the event change."
                      },
                      "trackerId": {
                        "type": "string",
                        "description": "Name that uniquely identifies the health event. It focuses on what happened rather than why."
                      },
                      "description": {
                        "type": "string",
                        "example": "S3 collection is not working as expected because of access issues.",
                        "description": "A more elaborate description of why the event occurred."
                      }
                    },
                    "discriminator": {
                      "propertyName": "description"
                    }
                  },
                  "eventId": {
                    "type": "string",
                    "example": "e801dc7d-f483-46e9-bcc9-410f08f96497",
                    "description": "The unique identifier of the event."
                  },
                  "eventName": {
                    "type": "string",
                    "example": "InstalledCollectorOffline",
                    "description": "The name of the event."
                  },
                  "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                  },
                  "subsystem": {
                    "type": "string",
                    "description": "The product area of the event."
                  },
                  "severityLevel": {
                    "type": "string",
                    "description": "The criticality of the event. It is either `Error` or `Warning`"
                  },
                  "resourceIdentity": {
                    "type": "object",
                    "required": [
                      "id",
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "C03E086C137F38B4",
                        "description": "The unique identifier of the resource."
                      },
                      "name": {
                        "type": "string",
                        "default": "Unknown",
                        "example": "S3 Source, Scheduled View name.",
                        "description": "The name of the resource."
                      },
                      "type": {
                        "type": "string",
                        "example": "Collector",
                        "description": "-> Resource type. Supported types are - `Collector`, `Source`, `IngestBudget` and `Organisation`."
                      }
                    },
                    "discriminator": {
                      "mapping": {
                        "Source": "#/components/schemas/SourceResourceIdentity",
                        "Collector": "#/components/schemas/CollectorResourceIdentity",
                        "IngestBudget": "#/components/schemas/IngestBudgetResourceIdentity",
                        "Organisation": "#/components/schemas/OrgIdentity",
                        "LogsToMetricsRule": "#/components/schemas/LogsToMetricsRuleIdentity"
                      },
                      "propertyName": "type"
                    }
                  }
                }
              },
              "description": "List of health events."
            },
            "next": {
              "type": "string",
              "description": "Next continuation token."
            }
          }
        }
      ]
  listAllHealthEventsForResources:
    description: |-
      Get a list of all the unresolved events in your account that belong to the supplied resource identifiers.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listAllHealthEventsForResources
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "id",
                  "type"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "C03E086C137F38B4",
                    "description": "The unique identifier of the resource."
                  },
                  "name": {
                    "type": "string",
                    "default": "Unknown",
                    "example": "S3 Source, Scheduled View name.",
                    "description": "The name of the resource."
                  },
                  "type": {
                    "type": "string",
                    "example": "Collector",
                    "description": "-> Resource type. Supported types are - `Collector`, `Source`, `IngestBudget` and `Organisation`."
                  }
                },
                "discriminator": {
                  "mapping": {
                    "Source": "#/components/schemas/SourceResourceIdentity",
                    "Collector": "#/components/schemas/CollectorResourceIdentity",
                    "IngestBudget": "#/components/schemas/IngestBudgetResourceIdentity",
                    "Organisation": "#/components/schemas/OrgIdentity",
                    "LogsToMetricsRule": "#/components/schemas/LogsToMetricsRuleIdentity"
                  },
                  "propertyName": "type"
                }
              },
              "description": "A list of the resources."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "details",
                  "eventId",
                  "eventName",
                  "eventTime",
                  "resourceIdentity",
                  "severityLevel",
                  "subsystem"
                ],
                "properties": {
                  "details": {
                    "type": "object",
                    "required": [
                      "description",
                      "error",
                      "trackerId"
                    ],
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Access denied to Amazon S3 bucket",
                        "description": "Description of the underlying reason for the event change."
                      },
                      "trackerId": {
                        "type": "string",
                        "description": "Name that uniquely identifies the health event. It focuses on what happened rather than why."
                      },
                      "description": {
                        "type": "string",
                        "example": "S3 collection is not working as expected because of access issues.",
                        "description": "A more elaborate description of why the event occurred."
                      }
                    },
                    "discriminator": {
                      "propertyName": "description"
                    }
                  },
                  "eventId": {
                    "type": "string",
                    "example": "e801dc7d-f483-46e9-bcc9-410f08f96497",
                    "description": "The unique identifier of the event."
                  },
                  "eventName": {
                    "type": "string",
                    "example": "InstalledCollectorOffline",
                    "description": "The name of the event."
                  },
                  "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                  },
                  "subsystem": {
                    "type": "string",
                    "description": "The product area of the event."
                  },
                  "severityLevel": {
                    "type": "string",
                    "description": "The criticality of the event. It is either `Error` or `Warning`"
                  },
                  "resourceIdentity": {
                    "type": "object",
                    "required": [
                      "id",
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "C03E086C137F38B4",
                        "description": "The unique identifier of the resource."
                      },
                      "name": {
                        "type": "string",
                        "default": "Unknown",
                        "example": "S3 Source, Scheduled View name.",
                        "description": "The name of the resource."
                      },
                      "type": {
                        "type": "string",
                        "example": "Collector",
                        "description": "-> Resource type. Supported types are - `Collector`, `Source`, `IngestBudget` and `Organisation`."
                      }
                    },
                    "discriminator": {
                      "mapping": {
                        "Source": "#/components/schemas/SourceResourceIdentity",
                        "Collector": "#/components/schemas/CollectorResourceIdentity",
                        "IngestBudget": "#/components/schemas/IngestBudgetResourceIdentity",
                        "Organisation": "#/components/schemas/OrgIdentity",
                        "LogsToMetricsRule": "#/components/schemas/LogsToMetricsRuleIdentity"
                      },
                      "propertyName": "type"
                    }
                  }
                }
              },
              "description": "List of health events."
            },
            "next": {
              "type": "string",
              "description": "Next continuation token."
            }
          }
        }
      ]
  listAllowlistedCidrs:
    description: |-
      Get a list of all allowlisted CIDR notations and/or IP addresses for the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listAllowlistedCidrs
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "cidr"
                ],
                "properties": {
                  "cidr": {
                    "type": "string",
                    "example": "192.35.24.1",
                    "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
                    "description": "The string representation of the CIDR notation or IP address.",
                    "x-pattern-message": "Invalid CIDR/IP"
                  },
                  "description": {
                    "type": "string",
                    "example": "Accountant",
                    "description": "Description of the CIDR notation or IP address."
                  }
                },
                "description": "A CIDR notation or IP address along with its description."
              },
              "maxItems": 50,
              "description": "An array of CIDR notations and/or IP addresses."
            }
          },
          "description": "A list of CIDR notations and/or IP addresses."
        }
      ]
  listApps:
    description: |-
      Lists all available apps from the App Catalog.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listApps
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "apps"
          ],
          "properties": {
            "apps": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "appDefinition",
                  "appManifest"
                ],
                "properties": {
                  "appManifest": {
                    "type": "object",
                    "required": [
                      "description",
                      "hoverText",
                      "iconURL"
                    ],
                    "properties": {
                      "author": {
                        "type": "string",
                        "example": "Sumo Logic",
                        "description": "App author."
                      },
                      "family": {
                        "type": "string",
                        "example": "IIS",
                        "description": "The app family"
                      },
                      "helpURL": {
                        "type": "string",
                        "example": "https://help.sumologic.com/",
                        "description": "App help page URL."
                      },
                      "iconURL": {
                        "type": "string",
                        "example": "https://sumologic-app-data.sumologic.com/icons/sumoconfig.png",
                        "description": "App icon URL."
                      },
                      "hoverText": {
                        "type": "string",
                        "example": "Sumo Config App",
                        "description": "Text to be displayed when hovered over in UI."
                      },
                      "categories": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "Sumo Logic",
                          "Configuration"
                        ],
                        "description": "Categories that the app belongs to."
                      },
                      "parameters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "parameterId",
                            "parameterType"
                          ],
                          "properties": {
                            "label": {
                              "type": "string",
                              "example": "Log label",
                              "description": "Label."
                            },
                            "hidden": {
                              "type": "boolean",
                              "default": false,
                              "description": "Should the UI display?"
                            },
                            "example": {
                              "type": "string",
                              "description": "Example."
                            },
                            "description": {
                              "type": "string",
                              "example": "Log data source",
                              "description": "Description."
                            },
                            "parameterId": {
                              "type": "string",
                              "example": "paramId1",
                              "description": "Parameter identifier."
                            },
                            "parameterType": {
                              "type": "string",
                              "example": "DATA_SOURCE",
                              "pattern": "^DATA_SOURCE$",
                              "description": "Parameter type.",
                              "x-pattern-message": "Supported parameter types include: DATA_SOURCE"
                            },
                            "dataSourceType": {
                              "type": "string",
                              "example": "LOG",
                              "pattern": "^(LOG|METRICS)$",
                              "description": "Data source type.",
                              "x-pattern-message": "Supported data source types include: LOG, METRICS"
                            }
                          }
                        },
                        "description": "Content identifier of the app."
                      },
                      "description": {
                        "type": "string",
                        "example": "A description for Sumo Logic Config App.",
                        "description": "Description of the app."
                      },
                      "accountTypes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "free"
                        ],
                        "description": "Account types that are allowed to install the app"
                      },
                      "communityURL": {
                        "type": "string",
                        "example": "https://support.sumologic.com/hc/en-us/community/topics/200263058-Applications-and-Integrations",
                        "description": "App community page URL."
                      },
                      "helpDocIdMap": {
                        "type": "object",
                        "description": "the IDs of the docs pages for this app",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "requirements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [],
                        "description": "Requirements for the app."
                      },
                      "authorWebsite": {
                        "type": "string",
                        "example": "https://www.sumologic.com",
                        "description": "App author website URL."
                      },
                      "screenshotURLs": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "https://sumologic-app-data.sumologic.com/icons/sumoconfig/overview.png",
                          "https://sumologic-app-data.sumologic.com/screenshots/sumoconfig/details.png"
                        ],
                        "description": "App screenshot URLs."
                      },
                      "installationInstructions": {
                        "type": "string",
                        "description": "Installation instructions for the app."
                      },
                      "requiresInstallationInstructions": {
                        "type": "boolean",
                        "example": false,
                        "description": "Indicates whether installation instructions are required or not."
                      }
                    }
                  },
                  "appDefinition": {
                    "type": "object",
                    "required": [
                      "appVersion",
                      "contentId",
                      "name",
                      "uuid"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Sumo Config",
                        "description": "Name of the app."
                      },
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "1c57fbc3-3141-4b12-aab3-5f40152bc3d9",
                        "description": "Unique identifier for the app."
                      },
                      "preview": {
                        "type": "boolean",
                        "example": true,
                        "description": "Indicates whether the app is in preview or not."
                      },
                      "contentId": {
                        "type": "string",
                        "example": "00000000000011AE",
                        "description": "Content identifier of the app in hexadecimal format."
                      },
                      "appVersion": {
                        "type": "string",
                        "example": "1.0",
                        "description": "Version of the app."
                      },
                      "manifestVersion": {
                        "type": "string",
                        "example": "0.1",
                        "description": "Manifest version of the app"
                      }
                    }
                  }
                }
              },
              "description": "An array of Apps"
            }
          },
          "description": "List of all available apps from the App Catalog."
        }
      ]
  listArchiveJobsBySourceId:
    description: |-
      Get a list of all the ingestion jobs created on an Archive Source. The response is paginated with a default limit of 10 jobs per page.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listArchiveJobsBySourceId
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "endTime",
                      "name",
                      "startTime"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "description": "The name of the ingestion job."
                      },
                      "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The ending timestamp of the ingestion job."
                      },
                      "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The starting timestamp of the ingestion job."
                      }
                    }
                  },
                  {
                    "required": [
                      "createdAt",
                      "createdBy",
                      "id",
                      "status",
                      "totalBytesIngested",
                      "totalObjectsIngested",
                      "totalObjectsScanned"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "4e214571-cf27-4114-93e6-69a98c017f3",
                        "description": "The unique identifier of the ingestion job."
                      },
                      "status": {
                        "type": "string",
                        "example": "Scanning",
                        "description": "The status of the ingestion job, either `Pending`,`Scanning`,`Ingesting`,`Failed`, or `Succeeded`."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The creation timestamp in UTC of the ingestion job."
                      },
                      "createdBy": {
                        "type": "string",
                        "example": "0000000006743FDD",
                        "description": "The identifier of the user who created the ingestion job."
                      },
                      "totalBytesIngested": {
                        "type": "integer",
                        "format": "int64",
                        "example": 100,
                        "description": "The total bytes ingested by the ingestion job."
                      },
                      "totalObjectsScanned": {
                        "type": "integer",
                        "format": "int64",
                        "example": 25,
                        "description": "The total number of objects scanned by the ingestion job."
                      },
                      "totalObjectsIngested": {
                        "type": "integer",
                        "format": "int64",
                        "example": 10,
                        "description": "The total number of objects ingested by the ingestion job."
                      }
                    }
                  }
                ]
              },
              "description": "List of Archive Jobs."
            },
            "next": {
              "type": "string",
              "description": "Next continuation token."
            }
          }
        }
      ]
  listArchiveJobsCountPerSource:
    description: |-
      Get a list of all Archive Sources with the count and status of ingestion jobs.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listArchiveJobsCountPerSource
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "failed",
                  "ingesting",
                  "pending",
                  "scanning",
                  "sourceId",
                  "succeeded"
                ],
                "properties": {
                  "failed": {
                    "type": "integer",
                    "format": "int64",
                    "example": 5,
                    "description": "The total number of archive jobs with failed status for the archive source."
                  },
                  "pending": {
                    "type": "integer",
                    "format": "int64",
                    "example": 4,
                    "description": "The total number of archive jobs with pending status for the archive source."
                  },
                  "scanning": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1,
                    "description": "The total number of archive jobs with scanning status for the archive source."
                  },
                  "sourceId": {
                    "type": "string",
                    "example": "000000000606C009",
                    "description": "Identifier for the archive source."
                  },
                  "ingesting": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2,
                    "description": "The total number of archive jobs with ingesting status for the archive source."
                  },
                  "succeeded": {
                    "type": "integer",
                    "format": "int64",
                    "example": 20,
                    "description": "The total number of archive jobs with succeeded status for the archive source."
                  }
                }
              },
              "description": "List of archive sources with count of jobs having various statuses."
            }
          }
        }
      ]
  listBuiltInFields:
    description: |-
      Built-in fields are created automatically by Sumo Logic for standard configuration purposes. They include `_sourceHost` and `_sourceCategory`. Built-in fields can't be deleted or disabled.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listBuiltInFields
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "fieldName"
                    ],
                    "properties": {
                      "fieldName": {
                        "type": "string",
                        "example": "hostIP",
                        "maxLength": 255,
                        "minLength": 1,
                        "description": "Field name."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "dataType",
                      "fieldId",
                      "state"
                    ],
                    "properties": {
                      "state": {
                        "type": "string",
                        "example": "Enabled",
                        "pattern": "^(Enabled|Disabled)$",
                        "description": "Indicates whether the field is enabled and its values are being accepted. Possible values are `Enabled` and `Disabled`.",
                        "x-pattern-message": "Must be `Enabled` or `Disabled`"
                      },
                      "fieldId": {
                        "type": "string",
                        "example": "00000000031D02DA",
                        "description": "Identifier of the field."
                      },
                      "dataType": {
                        "type": "string",
                        "example": "String",
                        "pattern": "^(String|Long|Int|Double|Boolean)$",
                        "description": "Field type. Possible values are `String`, `Long`, `Int`, `Double`, and `Boolean`.",
                        "x-pattern-message": "Must be `String`, `Long`, `Int`, `Double` or `Boolean`"
                      }
                    }
                  }
                ]
              },
              "description": "List of built-in fields."
            }
          }
        }
      ]
  listConnections:
    description: |-
      Get a list of all connections in the organization. The response is paginated with a default limit of 100 connections per page.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listConnections
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "createdAt",
                  "createdBy",
                  "description",
                  "id",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "type"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier for the connection."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the connection."
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of connection. Valid values are `WebhookConnection`, `ServiceNowConnection`."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                  },
                  "createdBy": {
                    "type": "string",
                    "description": "Identifier of the user who created the resource."
                  },
                  "modifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last modification timestamp in UTC."
                  },
                  "modifiedBy": {
                    "type": "string",
                    "description": "Identifier of the user who last modified the resource."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the connection."
                  }
                },
                "discriminator": {
                  "propertyName": "type"
                }
              },
              "description": "List of connections."
            },
            "next": {
              "type": "string",
              "description": "Next continuation token."
            }
          }
        }
      ]
  listCustomFields:
    description: |-
      Request a list of all the custom fields configured in your account.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listCustomFields
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "fieldName"
                    ],
                    "properties": {
                      "fieldName": {
                        "type": "string",
                        "example": "hostIP",
                        "maxLength": 255,
                        "minLength": 1,
                        "description": "Field name."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "dataType",
                      "fieldId",
                      "state"
                    ],
                    "properties": {
                      "state": {
                        "type": "string",
                        "example": "Enabled",
                        "pattern": "^(Enabled|Disabled)$",
                        "description": "Indicates whether the field is enabled and its values are being accepted. Possible values are `Enabled` and `Disabled`.",
                        "x-pattern-message": "Must be `Enabled` or `Disabled`"
                      },
                      "fieldId": {
                        "type": "string",
                        "example": "00000000031D02DA",
                        "description": "Identifier of the field."
                      },
                      "dataType": {
                        "type": "string",
                        "example": "String",
                        "pattern": "^(String|Long|Int|Double|Boolean)$",
                        "description": "Field type. Possible values are `String`, `Long`, `Int`, `Double`, and `Boolean`.",
                        "x-pattern-message": "Must be `String`, `Long`, `Int`, `Double` or `Boolean`"
                      }
                    }
                  }
                ]
              },
              "description": "List of custom fields."
            }
          }
        }
      ]
  listDroppedFields:
    description: |-
      Dropped fields are fields sent to Sumo Logic, but are ignored since they are not defined in your Fields schema. In order to save these values a field must both exist and be enabled.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listDroppedFields
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "fieldName"
                    ],
                    "properties": {
                      "fieldName": {
                        "type": "string",
                        "example": "hostIP",
                        "maxLength": 255,
                        "minLength": 1,
                        "description": "Field name."
                      }
                    }
                  }
                ]
              },
              "description": "List of dropped fields."
            }
          }
        }
      ]
  listDynamicParsingRules:
    description: |-
      Get a list of all dynamic parsing rules. The response is paginated with a default limit of 100 dynamic parsing rules per page.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listDynamicParsingRules
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "enabled",
                      "name",
                      "scope"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "DynamicParsingRule123",
                        "maxLength": 256,
                        "minLength": 1,
                        "description": "Name of the dynamic parsing rule. Use a name that makes it easy to identify the rule."
                      },
                      "scope": {
                        "type": "string",
                        "example": "_sourceHost=127.0.0.1",
                        "maxLength": 2048,
                        "minLength": 1,
                        "description": "Scope of the dynamic parsing rule. This could be a sourceCategory, sourceHost, or any other metadata that describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search, before the first pipe ( | ). You'll use the Scope to run a search against the rule."
                      },
                      "enabled": {
                        "type": "boolean",
                        "default": true,
                        "example": false,
                        "description": "Is the dynamic parsing rule enabled."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "createdAt",
                      "createdBy",
                      "modifiedAt",
                      "modifiedBy"
                    ],
                    "properties": {
                      "createdAt": {
                        "type": "string",
                        "format": "dateTime",
                        "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                      },
                      "createdBy": {
                        "type": "string",
                        "description": "Identifier of the user who created the resource."
                      },
                      "modifiedAt": {
                        "type": "string",
                        "format": "dateTime",
                        "description": "Last modification timestamp in UTC."
                      },
                      "modifiedBy": {
                        "type": "string",
                        "description": "Identifier of the user who last modified the resource."
                      }
                    }
                  },
                  {
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "0000000001C41EE4",
                        "description": "Unique identifier for the dynamic parsing rule."
                      }
                    }
                  }
                ]
              },
              "description": "List of dynamic parsing rules."
            },
            "next": {
              "type": "string",
              "example": "0000000001C51FF7",
              "description": "Next continuation token."
            }
          }
        }
      ]
  listExtractionRules:
    description: |-
      Get a list of all field extraction rules. The response is paginated with a default limit of 100 field extraction rules per page.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listExtractionRules
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "parseExpression",
                          "scope"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "ExtractionRule123",
                            "maxLength": 256,
                            "minLength": 1,
                            "description": "Name of the field extraction rule. Use a name that makes it easy to identify the rule."
                          },
                          "scope": {
                            "type": "string",
                            "example": "_sourceHost=127.0.0.1",
                            "maxLength": 2048,
                            "minLength": 0,
                            "description": "Scope of the field extraction rule. This could be a sourceCategory, sourceHost, or any other metadata that describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search, before the first pipe ( | ). You'll use the Scope to run a search against the rule."
                          },
                          "parseExpression": {
                            "type": "string",
                            "example": "csv _raw extract 1 as f1",
                            "maxLength": 16384,
                            "description": "Describes the fields to be parsed."
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Is the field extraction rule enabled."
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "createdAt",
                      "createdBy",
                      "modifiedAt",
                      "modifiedBy"
                    ],
                    "properties": {
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                      },
                      "createdBy": {
                        "type": "string",
                        "example": "0000000006743FDD",
                        "description": "Identifier of the user who created the resource."
                      },
                      "modifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last modification timestamp in UTC."
                      },
                      "modifiedBy": {
                        "type": "string",
                        "example": "0000000006743FE8",
                        "description": "Identifier of the user who last modified the resource."
                      }
                    }
                  },
                  {
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the field extraction rule."
                      },
                      "fieldNames": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of extracted fields from \"parseExpression\"."
                      }
                    }
                  }
                ],
                "x-tf-resource-name": "ExtractionRule",
                "x-tf-generated-properties": "id,name,scope,parseExpression,enabled"
              },
              "description": "List of field extraction rules."
            },
            "next": {
              "type": "string",
              "description": "Next continuation token."
            }
          }
        }
      ]
  listIngestBudgets:
    description: |-
      Get a list of all ingest budgets. The response is paginated with a default limit of 100 budgets per page.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listIngestBudgets
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "action",
                      "capacityBytes",
                      "fieldValue",
                      "name",
                      "resetTime",
                      "timezone"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Developer Budget",
                        "maxLength": 128,
                        "minLength": 1,
                        "description": "Display name of the ingest budget."
                      },
                      "action": {
                        "type": "string",
                        "example": "stopCollecting",
                        "pattern": "^(keepCollecting|stopCollecting)$",
                        "description": "Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n  * `stopCollecting`\n  * `keepCollecting`",
                        "x-pattern-message": "must be either `keepCollecting` or `stopCollecting`"
                      },
                      "timezone": {
                        "type": "string",
                        "example": "America/Los_Angeles",
                        "description": "Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
                      },
                      "resetTime": {
                        "type": "string",
                        "example": "23:30",
                        "maxLength": 5,
                        "minLength": 5,
                        "description": "Reset time of the ingest budget in HH:MM format."
                      },
                      "fieldValue": {
                        "type": "string",
                        "example": "dev_30_gb",
                        "maxLength": 1024,
                        "minLength": 1,
                        "description": "Custom field value that is used to assign Collectors to the ingest budget."
                      },
                      "description": {
                        "type": "string",
                        "maxLength": 1024,
                        "minLength": 0,
                        "description": "Description of the ingest budget."
                      },
                      "capacityBytes": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1000,
                        "minimum": 0,
                        "description": "Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit."
                      },
                      "auditThreshold": {
                        "type": "integer",
                        "format": "int32",
                        "example": 85,
                        "maximum": 99,
                        "minimum": 1,
                        "description": "The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "createdAt",
                      "createdByUser",
                      "modifiedAt",
                      "modifiedByUser"
                    ],
                    "properties": {
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                      },
                      "modifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                      },
                      "createdByUser": {
                        "type": "object",
                        "required": [
                          "email",
                          "firstName",
                          "id",
                          "lastName"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "0000000006743FDD",
                            "description": "User's identifier."
                          },
                          "email": {
                            "type": "string",
                            "example": "johndoe@acme.com",
                            "description": "User's email."
                          },
                          "lastName": {
                            "type": "string",
                            "example": "Doe",
                            "description": "User's last name."
                          },
                          "firstName": {
                            "type": "string",
                            "example": "John",
                            "description": "User's first name."
                          }
                        }
                      },
                      "modifiedByUser": {
                        "type": "object",
                        "required": [
                          "email",
                          "firstName",
                          "id",
                          "lastName"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "0000000006743FDD",
                            "description": "User's identifier."
                          },
                          "email": {
                            "type": "string",
                            "example": "johndoe@acme.com",
                            "description": "User's email."
                          },
                          "lastName": {
                            "type": "string",
                            "example": "Doe",
                            "description": "User's last name."
                          },
                          "firstName": {
                            "type": "string",
                            "example": "John",
                            "description": "User's first name."
                          }
                        }
                      }
                    }
                  },
                  {
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the ingest budget."
                      },
                      "usageBytes": {
                        "type": "integer",
                        "format": "int64",
                        "example": 900,
                        "description": "Current usage since the last reset, in bytes."
                      },
                      "usageStatus": {
                        "type": "string",
                        "example": "Approaching",
                        "description": "Status of the current usage. Can be `Normal`, `Approaching`, `Exceeded`, or `Unknown` (unable to retrieve usage)."
                      },
                      "numberOfCollectors": {
                        "type": "integer",
                        "format": "int64",
                        "example": 10,
                        "description": "Number of collectors assigned to the ingest budget."
                      }
                    }
                  }
                ]
              },
              "description": "List of ingest budgets."
            },
            "next": {
              "type": "string",
              "description": "Next continuation token."
            }
          }
        }
      ]
  listIngestBudgetsV2:
    description: |-
      Get a list of all ingest budgets. The response is paginated with a default limit of 100 budgets per page.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listIngestBudgetsV2
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "action",
                      "capacityBytes",
                      "name",
                      "resetTime",
                      "scope",
                      "timezone"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Developer Budget",
                        "maxLength": 128,
                        "minLength": 1,
                        "description": "Display name of the ingest budget."
                      },
                      "scope": {
                        "type": "string",
                        "example": "_sourceCategory=*prod*nginx*",
                        "maxLength": 1024,
                        "minLength": 1,
                        "description": "A scope is a constraint that will be used to identify the messages on which budget needs to be applied. A scope is consists of key and value separated by =. The field must be enabled in the fields table. Value supports wildcard. e.g. _sourceCategory=*prod*payment*, cluster=kafka. If the scope is defined _sourceCategory=*nginx* in this budget will be applied on messages having fields _sourceCategory=prod/nginx, _sourceCategory=dev/nginx, or _sourceCategory=dev/nginx/error"
                      },
                      "action": {
                        "type": "string",
                        "example": "stopCollecting",
                        "pattern": "^(keepCollecting|stopCollecting)$",
                        "description": "Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n  * `stopCollecting`\n  * `keepCollecting`",
                        "x-pattern-message": "must be either `keepCollecting` or `stopCollecting`"
                      },
                      "timezone": {
                        "type": "string",
                        "example": "America/Los_Angeles",
                        "description": "Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
                      },
                      "resetTime": {
                        "type": "string",
                        "example": "23:30",
                        "maxLength": 5,
                        "minLength": 5,
                        "description": "Reset time of the ingest budget in HH:MM format."
                      },
                      "description": {
                        "type": "string",
                        "maxLength": 1024,
                        "minLength": 0,
                        "description": "Description of the ingest budget."
                      },
                      "capacityBytes": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1000,
                        "minimum": 1,
                        "description": "Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit."
                      },
                      "auditThreshold": {
                        "type": "integer",
                        "format": "int32",
                        "example": 85,
                        "maximum": 99,
                        "minimum": 1,
                        "description": "The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index."
                      }
                    }
                  },
                  {
                    "required": [
                      "createdAt",
                      "createdBy",
                      "id",
                      "modifiedAt",
                      "modifiedBy",
                      "version"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "0000000003343FDD",
                        "description": "Unique identifier for the ingest budget."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The creation timestamp in UTC of the Ingest Budget."
                      },
                      "createdBy": {
                        "type": "string",
                        "example": "0000000006743FDD",
                        "description": "The identifier of the user who created the Ingest Budget."
                      },
                      "modifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The modified timestamp in UTC of the Ingest Budget."
                      },
                      "modifiedBy": {
                        "type": "string",
                        "example": "0000000001243FDD",
                        "description": "The identifier of the user who modified the Ingest Budget."
                      },
                      "usageBytes": {
                        "type": "integer",
                        "format": "int64",
                        "example": 900,
                        "description": "Current usage since the last reset, in bytes."
                      },
                      "usageStatus": {
                        "type": "string",
                        "example": "Approaching",
                        "pattern": "^(Normal|Approaching|Exceeded|Unknown)$",
                        "description": "Status of the current usage. Can be `Normal`, `Approaching`, `Exceeded`, or `Unknown` (unable to retrieve usage).",
                        "x-pattern-message": "must be either `Normal`, `Approaching`, `Exceeded`, or `Unknown`"
                      },
                      "budgetVersion": {
                        "type": "integer",
                        "format": "int32",
                        "example": 2,
                        "description": "The version of the Ingest Budget"
                      }
                    }
                  }
                ]
              },
              "description": "List of ingest budgets."
            },
            "next": {
              "type": "string",
              "description": "Next continuation token."
            }
          }
        }
      ]
  listPartitions:
    description: |-
      Get a list of all partitions in the organization. The response is paginated with a default limit of 100 partitions per page.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listPartitions
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "name",
                      "routingExpression"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "apache",
                        "maxLength": 255,
                        "description": "The name of the partition."
                      },
                      "isCompliant": {
                        "type": "boolean",
                        "default": false,
                        "example": false,
                        "description": "Whether the partition is compliant or not. Mark a partition as compliant if it contains data used for compliance or audit purpose. Retention for a compliant partition can only be increased and cannot be reduced after the partition is marked compliant. A partition once marked compliant, cannot be marked non-compliant later."
                      },
                      "analyticsTier": {
                        "type": "string",
                        "default": "continuous",
                        "example": "continuous",
                        "pattern": "^(frequent|infrequent|continuous)$",
                        "description": "The Data Tier where the data in the partition will reside. Possible values are:\n              1. `continuous`\n              2. `frequent`\n              3. `infrequent`\nNote: The \"infrequent\" and \"frequent\" tiers are only to available Cloud Flex Credits Enterprise Suite accounts.",
                        "x-pattern-message": "must be one of `continuous`, `frequent` or `infrequent`"
                      },
                      "retentionPeriod": {
                        "type": "integer",
                        "default": -1,
                        "example": 365,
                        "description": "The number of days to retain data in the partition, or -1 to use the default value for your account.  Only relevant if your account has variable retention enabled."
                      },
                      "routingExpression": {
                        "type": "string",
                        "example": "_sourcecategory=*/Apache",
                        "maxLength": 16384,
                        "minLength": 1,
                        "description": "The query that defines the data to be included in the partition."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "createdAt",
                      "createdBy",
                      "modifiedAt",
                      "modifiedBy"
                    ],
                    "properties": {
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                      },
                      "createdBy": {
                        "type": "string",
                        "example": "0000000006743FDD",
                        "description": "Identifier of the user who created the resource."
                      },
                      "modifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last modification timestamp in UTC."
                      },
                      "modifiedBy": {
                        "type": "string",
                        "example": "0000000006743FE8",
                        "description": "Identifier of the user who last modified the resource."
                      }
                    }
                  },
                  {
                    "required": [
                      "id",
                      "totalBytes"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1",
                        "description": "Unique identifier for the partition."
                      },
                      "isActive": {
                        "type": "boolean",
                        "description": "This has the value `true` if the partition is active and `false` if it has been decommissioned."
                      },
                      "indexType": {
                        "type": "string",
                        "example": "Partition",
                        "pattern": "^(DefaultIndex|AuditIndex|Partition)$",
                        "description": "This has the value `DefaultIndex`, `AuditIndex`or `Partition` depending upon the type of partition."
                      },
                      "totalBytes": {
                        "type": "integer",
                        "format": "int64",
                        "example": 42,
                        "description": "Size of data in partition in bytes."
                      },
                      "dataForwardingId": {
                        "type": "string",
                        "description": "Id of the data forwarding configuration to be used by the partition."
                      },
                      "newRetentionPeriod": {
                        "type": "integer",
                        "format": "int32",
                        "example": 300,
                        "description": "If the retentionPeriod is scheduled to be updated in the future (i.e., if retentionPeriod is previously reduced with value of reduceRetentionPeriodImmediately as false), this property gives the future value of retentionPeriod while retentionPeriod gives the current value. retentionPeriod will take up the value of newRetentionPeriod after the scheduled time."
                      },
                      "retentionEffectiveAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the newRetentionPeriod will become effective in UTC format."
                      }
                    }
                  }
                ]
              },
              "description": "List of partitions."
            },
            "next": {
              "type": "string",
              "example": "1",
              "description": "Next continuation token."
            }
          }
        }
      ]
  listPersonalAccessKeys:
    description: |-
      List all access keys that belong to your user.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listPersonalAccessKeys
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "createdAt",
                  "createdBy",
                  "disabled",
                  "id",
                  "label",
                  "modifiedAt"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "su0w3Q37CBzHUM",
                    "description": "Identifier of the access key."
                  },
                  "label": {
                    "type": "string",
                    "example": "collector access key",
                    "description": "The name of the access key."
                  },
                  "disabled": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates whether the access key is disabled or not."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                  },
                  "createdBy": {
                    "type": "string",
                    "example": "0000000006743FDD",
                    "description": "Identifier of the user who created the access key."
                  },
                  "modifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last modification timestamp in UTC."
                  },
                  "corsHeaders": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://my-app.com",
                      "https://mail.my-app.com"
                    ],
                    "description": "An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:\n  1. Requests with an ORIGIN header but the allowlist is empty.\n  2. Requests with an ORIGIN header that don't match any entry in the allowlist."
                  }
                }
              },
              "description": "An array of access keys."
            }
          },
          "description": "List of access keys."
        }
      ]
  listRoles:
    description: |-
      Get a list of all the roles in the organization. The response is paginated with a default limit of 100 roles per page.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listRoles
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "DataAdmin",
                        "maxLength": 128,
                        "minLength": 1,
                        "description": "Name of the role."
                      },
                      "users": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "0000000006743FE0",
                          "0000000005FCE0EE"
                        ],
                        "description": "List of user identifiers to assign the role to."
                      },
                      "description": {
                        "type": "string",
                        "example": "Manage data of the org.",
                        "maxLength": 255,
                        "minLength": 0,
                        "description": "Description of the role."
                      },
                      "capabilities": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "manageContent",
                          "manageDataVolumeFeed",
                          "manageFieldExtractionRules",
                          "manageS3DataForwarding"
                        ],
                        "description": "List of [capabilities](https://help.sumologic.com/Manage/Users-and-Roles/Manage-Roles/Role-Capabilities) associated with this role. Valid values are\n### Data Management\n  - viewCollectors\n  - manageCollectors\n  - manageBudgets\n  - manageDataVolumeFeed\n  - viewFieldExtraction\n  - manageFieldExtractionRules\n  - manageS3DataForwarding\n  - manageContent\n  - dataVolumeIndex\n  - viewConnections\n  - manageConnections\n  - viewScheduledViews\n  - manageScheduledViews\n  - viewPartitions\n  - managePartitions\n  - viewFields\n  - manageFields\n  - viewAccountOverview\n  - manageTokens\n  - manageDataStreams\n\n### Entity management\n  - manageEntityTypeConfig\n\n### Metrics\n  - manageMonitors\n  - metricsTransformation\n  - metricsExtraction\n  - metricsRules\n\n### Security\n  - managePasswordPolicy\n  - ipAllowlisting\n  - createAccessKeys\n  - manageAccessKeys\n  - manageSupportAccountAccess\n  - manageAuditDataFeed\n  - manageSaml\n  - shareDashboardOutsideOrg\n  - manageOrgSettings\n  - changeDataAccessLevel\n\n### Dashboards\n  - shareDashboardWorld\n  - shareDashboardAllowlist\n\n### UserManagement\n  - manageUsersAndRoles\n\n### Observability\n  - searchAuditIndex\n  - auditEventIndex\n\n### Cloud SIEM Enterprise\n  - viewCse\n\n### Monitors (New)\n  - viewMonitorsV2\n  - manageMonitorsV2"
                      },
                      "filterPredicate": {
                        "type": "string",
                        "example": "!_sourceCategory=billing",
                        "description": "A search filter to restrict access to specific logs. The filter is silently added to the beginning of each query a user runs. For example, using '!_sourceCategory=billing' as a filter predicate will prevent users assigned to the role from viewing logs from the source category named 'billing'."
                      },
                      "autofillDependencies": {
                        "type": "boolean",
                        "default": true,
                        "description": "Set this to true if you want to automatically append all missing capability requirements. If set to false an error will be thrown if any capabilities are missing their dependencies."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "createdAt",
                      "createdBy",
                      "modifiedAt",
                      "modifiedBy"
                    ],
                    "properties": {
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                      },
                      "createdBy": {
                        "type": "string",
                        "example": "0000000006743FDD",
                        "description": "Identifier of the user who created the resource."
                      },
                      "modifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last modification timestamp in UTC."
                      },
                      "modifiedBy": {
                        "type": "string",
                        "example": "0000000006743FE8",
                        "description": "Identifier of the user who last modified the resource."
                      }
                    }
                  },
                  {
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "0000000000E20FE3",
                        "description": "Unique identifier for the role."
                      },
                      "systemDefined": {
                        "type": "boolean",
                        "example": false,
                        "description": "Role is system or user defined."
                      }
                    }
                  }
                ],
                "x-tf-resource-name": "Role",
                "x-tf-generated-properties": "id,name,description,filterPredicate,capabilities"
              },
              "description": "List of roles."
            },
            "next": {
              "type": "string",
              "example": "GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc",
              "description": "Next continuation token."
            }
          }
        }
      ]
  listScheduledViews:
    description: |-
      Get a list of all scheduled views in the organization. The response is paginated with a default limit of 100 scheduled views per page.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listScheduledViews
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "indexName",
                      "query",
                      "startTime",
                      "store"
                    ],
                    "properties": {
                      "query": {
                        "type": "string",
                        "example": "_sourcecategory=*/Apache",
                        "maxLength": 16384,
                        "minLength": 1,
                        "description": "The query that defines the data to be included in the scheduled view."
                      },
                      "indexName": {
                        "type": "string",
                        "example": "TestScheduledView",
                        "maxLength": 255,
                        "minLength": 0,
                        "description": "Name of the index for the scheduled view."
                      },
                      "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                      },
                      "parsingMode": {
                        "type": "string",
                        "default": "Manual",
                        "example": "AutoParse",
                        "pattern": "^(AutoParse|Manual)$",
                        "description": "Define the parsing mode to scan the JSON format log messages. Possible values are:\n  1. `AutoParse`\n  2. `Manual`\nIn AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).",
                        "x-pattern-message": "should be either AutoParse or Manual"
                      },
                      "retentionPeriod": {
                        "type": "integer",
                        "format": "int32",
                        "default": -1,
                        "example": 365,
                        "description": "The number of days to retain data in the scheduled view, or -1 to use the default value for your account.  Only relevant if your account has multi-retention. enabled."
                      },
                      "dataForwardingId": {
                        "type": "string",
                        "description": "An optional ID of a data forwarding configuration to be used by the scheduled view."
                      }
                    }
                  },
                  {
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Identifier for the scheduled view."
                      },
                      "error": {
                        "type": "string",
                        "description": "Errors related to the scheduled view."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the scheduled view."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp in UTC."
                      },
                      "createdBy": {
                        "type": "string",
                        "description": "Identifier of the user who created the scheduled view."
                      },
                      "totalBytes": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total storage consumed by the scheduled view."
                      },
                      "totalMessageCount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total number of messages for the scheduled view."
                      },
                      "createdByOptimizeIt": {
                        "type": "boolean",
                        "description": "If the scheduled view is created by OptimizeIt."
                      }
                    }
                  }
                ],
                "x-tf-generated-properties": "id,query,indexName,startTime,retentionPeriod,parsingMode"
              },
              "description": "List of scheduled views."
            },
            "next": {
              "type": "string",
              "description": "Next continuation token."
            }
          }
        }
      ]
  listTokens:
    description: |-
      Get a list of all tokens in the token library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listTokens
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "createdAt",
                  "createdBy",
                  "description",
                  "id",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "status",
                  "type",
                  "version"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Identifier of the token."
                  },
                  "name": {
                    "type": "string",
                    "example": "token-name",
                    "maxLength": 255,
                    "minLength": 1,
                    "description": "Name of the token."
                  },
                  "type": {
                    "type": "string",
                    "example": "CollectorRegistrationTokenResponse",
                    "pattern": "^(CollectorRegistrationTokenResponse)$",
                    "description": "Type of the token. Valid values: 1) CollectorRegistrationTokenResponse",
                    "x-pattern-message": "must be `CollectorRegistrationTokenResponse`"
                  },
                  "status": {
                    "type": "string",
                    "example": "Active",
                    "pattern": "^(Active|Inactive)$",
                    "description": "Status of the token. Can be `Active`, or `Inactive`.",
                    "x-pattern-message": "must be either `Active` or `Inactive`"
                  },
                  "version": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Version of the token."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                  },
                  "createdBy": {
                    "type": "string",
                    "description": "Identifier of the user who created the resource."
                  },
                  "modifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last modification timestamp in UTC."
                  },
                  "modifiedBy": {
                    "type": "string",
                    "description": "Identifier of the user who last modified the resource."
                  },
                  "description": {
                    "type": "string",
                    "example": "token description: for test.",
                    "maxLength": 4096,
                    "minLength": 0,
                    "description": "Description of the token."
                  }
                },
                "discriminator": {
                  "propertyName": "type"
                }
              },
              "description": "List of tokens."
            }
          }
        }
      ]
  listUsers:
    description: |-
      Get a list of all users in the organization. The response is paginated with a default limit of 100 users per page.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/listUsers
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "email",
                      "firstName",
                      "lastName",
                      "roleIds"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@acme.com",
                        "maxLength": 255,
                        "description": "Email address of the user."
                      },
                      "roleIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "00000000000001DF",
                          "00000000000002D2"
                        ],
                        "description": "List of roleIds associated with the user."
                      },
                      "lastName": {
                        "type": "string",
                        "example": "Doe",
                        "maxLength": 128,
                        "minLength": 0,
                        "description": "Last name of the user."
                      },
                      "firstName": {
                        "type": "string",
                        "example": "John",
                        "maxLength": 128,
                        "minLength": 1,
                        "description": "First name of the user."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "createdAt",
                      "createdBy",
                      "modifiedAt",
                      "modifiedBy"
                    ],
                    "properties": {
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                      },
                      "createdBy": {
                        "type": "string",
                        "example": "0000000006743FDD",
                        "description": "Identifier of the user who created the resource."
                      },
                      "modifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last modification timestamp in UTC."
                      },
                      "modifiedBy": {
                        "type": "string",
                        "example": "0000000006743FE8",
                        "description": "Identifier of the user who last modified the resource."
                      }
                    }
                  },
                  {
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "000000000FE20FE2",
                        "description": "Unique identifier for the user."
                      },
                      "isActive": {
                        "type": "boolean",
                        "example": true,
                        "description": "True if the user is active."
                      },
                      "isLocked": {
                        "type": "boolean",
                        "example": false,
                        "description": "This has the value `true` if the user's account has been locked. If a user tries to log into their account several times and fails, his or her account will be locked for security reasons."
                      },
                      "isMfaEnabled": {
                        "type": "boolean",
                        "example": false,
                        "description": "True if multi factor authentication is enabled for the user."
                      },
                      "lastLoginTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of the last login for the user in UTC. Will be null if the user has never logged in."
                      }
                    }
                  }
                ]
              },
              "description": "List of users."
            },
            "next": {
              "type": "string",
              "example": "GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc",
              "description": "Next continuation token."
            }
          }
        }
      ]
  lookupTableById:
    description: |-
      Get a lookup table for the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/lookupTableById
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "description",
                    "fields",
                    "primaryKeys"
                  ],
                  "properties": {
                    "ttl": {
                      "type": "integer",
                      "format": "int32",
                      "default": 0,
                      "example": 100,
                      "maximum": 525600,
                      "minimum": 0,
                      "description": "A time to live for each entry in the lookup table (in minutes). 365 days is the maximum time to live for each entry that you can specify. Setting it to 0 means that the records will not expire automatically."
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "fieldName",
                          "fieldType"
                        ],
                        "properties": {
                          "fieldName": {
                            "type": "string",
                            "example": "FieldName1",
                            "description": "The name of the field."
                          },
                          "fieldType": {
                            "type": "string",
                            "example": "boolean",
                            "pattern": "^(boolean|int|long|double|string)$",
                            "description": "The data type of the field. Supported types:\n  - `boolean`\n  - `int`\n  - `long`\n  - `double`\n  - `string`",
                            "x-pattern-message": "must be one of the following: `boolean`, `int`, `long`, `double`, `string`"
                          }
                        },
                        "description": "The definition of the field."
                      },
                      "minItems": 1,
                      "description": "The list of fields in the lookup table."
                    },
                    "description": {
                      "type": "string",
                      "example": "This is a sample lookup table description.",
                      "maxLength": 1000,
                      "description": "The description of the lookup table."
                    },
                    "primaryKeys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "FieldName1"
                      ],
                      "minItems": 1,
                      "description": "The names of the fields that make up the primary key for the lookup table. These will be a subset of the fields that the table will contain.",
                      "uniqueItems": true
                    },
                    "sizeLimitAction": {
                      "type": "string",
                      "default": "StopIncomingMessages",
                      "example": "DeleteOldData",
                      "pattern": "^(StopIncomingMessages|DeleteOldData)$",
                      "description": "The action that needs to be taken when the size limit is reached for the table. The possible values can be `StopIncomingMessages` or `DeleteOldData`. DeleteOldData will start deleting old data once size limit is reached whereas StopIncomingMessages will discard all the updates made to the lookup table once size limit is reached.",
                      "x-pattern-message": "must be either `StopIncomingMessages` or `DeleteOldData`"
                    }
                  },
                  "description": "The lookup table definition independent of its location in the Library and name."
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "SampleLookupTable",
                      "maxLength": 255,
                      "description": "The name of the lookup table."
                    },
                    "parentFolderId": {
                      "type": "string",
                      "example": "0000000001C41EE4",
                      "description": "The parent-folder-path identifier of the lookup table in the Library."
                    }
                  }
                }
              ],
              "required": [
                "name",
                "parentFolderId"
              ],
              "description": "Definition of the lookup table."
            },
            {
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0000000001C41EE4",
                  "description": "Identifier of the lookup table as a content item."
                },
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 100,
                  "description": "The current size of the lookup table in bytes"
                },
                "contentPath": {
                  "type": "string",
                  "example": "/Library/Users/johndoe@acme.com/lookupTable",
                  "description": "Address/path of the parent folder of this lookup table in content library. For example, a lookup table existing  in the personal/lookupTable folder for user johndoe would be: /Library/Users/johndoe@acme.com/lookupTable"
                }
              }
            }
          ],
          "required": [
            "id"
          ],
          "description": "Lookup table definition and metadata."
        }
      ]
  monitorsCopy:
    description: |-
      Copy a monitor or folder in the monitors library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/monitorsCopy
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "parentId"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "Optionally provide a new name."
            },
            "parentId": {
              "type": "string",
              "description": "Identifier of the parent folder to copy to."
            },
            "description": {
              "type": "string",
              "description": "Optionally provide a new description."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "contentType",
            "createdAt",
            "createdBy",
            "description",
            "id",
            "isMutable",
            "isSystem",
            "modifiedAt",
            "modifiedBy",
            "name",
            "parentId",
            "type",
            "version"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the monitor or folder."
            },
            "name": {
              "type": "string",
              "description": "Identifier of the monitor or folder."
            },
            "type": {
              "type": "string",
              "description": "Type of the object model."
            },
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "Version of the monitor or folder."
            },
            "isSystem": {
              "type": "boolean",
              "description": "System objects are objects provided by Sumo Logic. System objects can only be localized. Non-local fields can't be updated."
            },
            "parentId": {
              "type": "string",
              "description": "Identifier of the parent folder."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "isMutable": {
              "type": "boolean",
              "description": "Immutable objects are \"READ-ONLY\"."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            },
            "contentType": {
              "type": "string",
              "description": "Type of the content. Valid values:\n  1) Monitor\n  2) Folder"
            },
            "description": {
              "type": "string",
              "description": "Description of the monitor or folder."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  monitorsCreate:
    description: |-
      Create a monitor or folder in the monitors library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/monitorsCreate
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name",
            "type"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the monitor or folder."
            },
            "type": {
              "type": "string",
              "description": "Type of the object model. Valid values:\n  1) MonitorsLibraryMonitor\n  2) MonitorsLibraryFolder"
            },
            "description": {
              "type": "string",
              "default": "",
              "description": "Description of the monitor or folder."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "contentType",
            "createdAt",
            "createdBy",
            "description",
            "id",
            "isMutable",
            "isSystem",
            "modifiedAt",
            "modifiedBy",
            "name",
            "parentId",
            "type",
            "version"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the monitor or folder."
            },
            "name": {
              "type": "string",
              "description": "Identifier of the monitor or folder."
            },
            "type": {
              "type": "string",
              "description": "Type of the object model."
            },
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "Version of the monitor or folder."
            },
            "isSystem": {
              "type": "boolean",
              "description": "System objects are objects provided by Sumo Logic. System objects can only be localized. Non-local fields can't be updated."
            },
            "parentId": {
              "type": "string",
              "description": "Identifier of the parent folder."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "isMutable": {
              "type": "boolean",
              "description": "Immutable objects are \"READ-ONLY\"."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            },
            "contentType": {
              "type": "string",
              "description": "Type of the content. Valid values:\n  1) Monitor\n  2) Folder"
            },
            "description": {
              "type": "string",
              "description": "Description of the monitor or folder."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  monitorsDeleteById:
    description: |-
      Delete a monitor or folder from the monitors library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/monitorsDeleteById
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  monitorsDeleteByIds:
    description: |-
      Bulk delete a monitor or folder by the given identifiers in the monitors library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/monitorsDeleteByIds
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "required": [
              "contentType",
              "createdAt",
              "createdBy",
              "description",
              "id",
              "isMutable",
              "isSystem",
              "modifiedAt",
              "modifiedBy",
              "name",
              "parentId",
              "type",
              "version"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the monitor or folder."
              },
              "name": {
                "type": "string",
                "description": "Identifier of the monitor or folder."
              },
              "type": {
                "type": "string",
                "description": "Type of the object model."
              },
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version of the monitor or folder."
              },
              "isSystem": {
                "type": "boolean",
                "description": "System objects are objects provided by Sumo Logic. System objects can only be localized. Non-local fields can't be updated."
              },
              "parentId": {
                "type": "string",
                "description": "Identifier of the parent folder."
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
              },
              "createdBy": {
                "type": "string",
                "description": "Identifier of the user who created the resource."
              },
              "isMutable": {
                "type": "boolean",
                "description": "Immutable objects are \"READ-ONLY\"."
              },
              "modifiedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Last modification timestamp in UTC."
              },
              "modifiedBy": {
                "type": "string",
                "description": "Identifier of the user who last modified the resource."
              },
              "contentType": {
                "type": "string",
                "description": "Type of the content. Valid values:\n  1) Monitor\n  2) Folder"
              },
              "description": {
                "type": "string",
                "description": "Description of the monitor or folder."
              }
            },
            "discriminator": {
              "propertyName": "type"
            }
          }
        }
      ]
  monitorsExportItem:
    description: |-
      Export a monitor or folder. If the given identifier is a folder, everything under the folder is exported recursively with folder as the root.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/monitorsExportItem
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "name",
            "type"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the monitor or folder."
            },
            "type": {
              "type": "string",
              "description": "Type of the object model."
            },
            "description": {
              "type": "string",
              "description": "Description of the monitor or folder."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  monitorsGetByPath:
    description: |-
      Read a monitor or folder by its path in the monitors library structure.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/monitorsGetByPath
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "contentType",
            "createdAt",
            "createdBy",
            "description",
            "id",
            "isMutable",
            "isSystem",
            "modifiedAt",
            "modifiedBy",
            "name",
            "parentId",
            "type",
            "version"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the monitor or folder."
            },
            "name": {
              "type": "string",
              "description": "Identifier of the monitor or folder."
            },
            "type": {
              "type": "string",
              "description": "Type of the object model."
            },
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "Version of the monitor or folder."
            },
            "isSystem": {
              "type": "boolean",
              "description": "System objects are objects provided by Sumo Logic. System objects can only be localized. Non-local fields can't be updated."
            },
            "parentId": {
              "type": "string",
              "description": "Identifier of the parent folder."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "isMutable": {
              "type": "boolean",
              "description": "Immutable objects are \"READ-ONLY\"."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            },
            "contentType": {
              "type": "string",
              "description": "Type of the content. Valid values:\n  1) Monitor\n  2) Folder"
            },
            "description": {
              "type": "string",
              "description": "Description of the monitor or folder."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  monitorsImportItem:
    description: |-
      Import a monitor or folder.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/monitorsImportItem
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "contentType",
            "createdAt",
            "createdBy",
            "description",
            "id",
            "isMutable",
            "isSystem",
            "modifiedAt",
            "modifiedBy",
            "name",
            "parentId",
            "type",
            "version"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the monitor or folder."
            },
            "name": {
              "type": "string",
              "description": "Identifier of the monitor or folder."
            },
            "type": {
              "type": "string",
              "description": "Type of the object model."
            },
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "Version of the monitor or folder."
            },
            "isSystem": {
              "type": "boolean",
              "description": "System objects are objects provided by Sumo Logic. System objects can only be localized. Non-local fields can't be updated."
            },
            "parentId": {
              "type": "string",
              "description": "Identifier of the parent folder."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "isMutable": {
              "type": "boolean",
              "description": "Immutable objects are \"READ-ONLY\"."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            },
            "contentType": {
              "type": "string",
              "description": "Type of the content. Valid values:\n  1) Monitor\n  2) Folder"
            },
            "description": {
              "type": "string",
              "description": "Description of the monitor or folder."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  monitorsMove:
    description: |-
      Move a monitor or folder to a different location in the monitors library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/monitorsMove
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "contentType",
            "createdAt",
            "createdBy",
            "description",
            "id",
            "isMutable",
            "isSystem",
            "modifiedAt",
            "modifiedBy",
            "name",
            "parentId",
            "type",
            "version"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the monitor or folder."
            },
            "name": {
              "type": "string",
              "description": "Identifier of the monitor or folder."
            },
            "type": {
              "type": "string",
              "description": "Type of the object model."
            },
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "Version of the monitor or folder."
            },
            "isSystem": {
              "type": "boolean",
              "description": "System objects are objects provided by Sumo Logic. System objects can only be localized. Non-local fields can't be updated."
            },
            "parentId": {
              "type": "string",
              "description": "Identifier of the parent folder."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "isMutable": {
              "type": "boolean",
              "description": "Immutable objects are \"READ-ONLY\"."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            },
            "contentType": {
              "type": "string",
              "description": "Type of the content. Valid values:\n  1) Monitor\n  2) Folder"
            },
            "description": {
              "type": "string",
              "description": "Description of the monitor or folder."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  monitorsReadById:
    description: |-
      Get a monitor or folder from the monitors library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/monitorsReadById
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "contentType",
            "createdAt",
            "createdBy",
            "description",
            "id",
            "isMutable",
            "isSystem",
            "modifiedAt",
            "modifiedBy",
            "name",
            "parentId",
            "type",
            "version"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the monitor or folder."
            },
            "name": {
              "type": "string",
              "description": "Identifier of the monitor or folder."
            },
            "type": {
              "type": "string",
              "description": "Type of the object model."
            },
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "Version of the monitor or folder."
            },
            "isSystem": {
              "type": "boolean",
              "description": "System objects are objects provided by Sumo Logic. System objects can only be localized. Non-local fields can't be updated."
            },
            "parentId": {
              "type": "string",
              "description": "Identifier of the parent folder."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "isMutable": {
              "type": "boolean",
              "description": "Immutable objects are \"READ-ONLY\"."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            },
            "contentType": {
              "type": "string",
              "description": "Type of the content. Valid values:\n  1) Monitor\n  2) Folder"
            },
            "description": {
              "type": "string",
              "description": "Description of the monitor or folder."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  monitorsReadByIds:
    description: |-
      Bulk read a monitor or folder by the given identifiers from the monitors library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/monitorsReadByIds
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "required": [
              "contentType",
              "createdAt",
              "createdBy",
              "description",
              "id",
              "isMutable",
              "isSystem",
              "modifiedAt",
              "modifiedBy",
              "name",
              "parentId",
              "type",
              "version"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the monitor or folder."
              },
              "name": {
                "type": "string",
                "description": "Identifier of the monitor or folder."
              },
              "type": {
                "type": "string",
                "description": "Type of the object model."
              },
              "version": {
                "type": "integer",
                "format": "int64",
                "description": "Version of the monitor or folder."
              },
              "isSystem": {
                "type": "boolean",
                "description": "System objects are objects provided by Sumo Logic. System objects can only be localized. Non-local fields can't be updated."
              },
              "parentId": {
                "type": "string",
                "description": "Identifier of the parent folder."
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
              },
              "createdBy": {
                "type": "string",
                "description": "Identifier of the user who created the resource."
              },
              "isMutable": {
                "type": "boolean",
                "description": "Immutable objects are \"READ-ONLY\"."
              },
              "modifiedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Last modification timestamp in UTC."
              },
              "modifiedBy": {
                "type": "string",
                "description": "Identifier of the user who last modified the resource."
              },
              "contentType": {
                "type": "string",
                "description": "Type of the content. Valid values:\n  1) Monitor\n  2) Folder"
              },
              "description": {
                "type": "string",
                "description": "Description of the monitor or folder."
              }
            },
            "discriminator": {
              "propertyName": "type"
            }
          }
        }
      ]
  monitorsSearch:
    description: |-
      Search for a monitor or folder in the monitors library structure.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/monitorsSearch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "item",
              "path"
            ],
            "properties": {
              "item": {
                "type": "object",
                "required": [
                  "contentType",
                  "createdAt",
                  "createdBy",
                  "description",
                  "id",
                  "isMutable",
                  "isSystem",
                  "modifiedAt",
                  "modifiedBy",
                  "name",
                  "parentId",
                  "type",
                  "version"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Identifier of the monitor or folder."
                  },
                  "name": {
                    "type": "string",
                    "description": "Identifier of the monitor or folder."
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the object model."
                  },
                  "version": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Version of the monitor or folder."
                  },
                  "isSystem": {
                    "type": "boolean",
                    "description": "System objects are objects provided by Sumo Logic. System objects can only be localized. Non-local fields can't be updated."
                  },
                  "parentId": {
                    "type": "string",
                    "description": "Identifier of the parent folder."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                  },
                  "createdBy": {
                    "type": "string",
                    "description": "Identifier of the user who created the resource."
                  },
                  "isMutable": {
                    "type": "boolean",
                    "description": "Immutable objects are \"READ-ONLY\"."
                  },
                  "modifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last modification timestamp in UTC."
                  },
                  "modifiedBy": {
                    "type": "string",
                    "description": "Identifier of the user who last modified the resource."
                  },
                  "contentType": {
                    "type": "string",
                    "description": "Type of the content. Valid values:\n  1) Monitor\n  2) Folder"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the monitor or folder."
                  }
                },
                "discriminator": {
                  "propertyName": "type"
                }
              },
              "path": {
                "type": "string",
                "example": "/Monitors/SampleFolder/TestMonitor",
                "description": "Path of the monitor or folder."
              }
            }
          },
          "description": "Multi-type list of types monitor or folder."
        }
      ]
  monitorsUpdateById:
    description: |-
      Update a monitor or folder in the monitors library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/monitorsUpdateById
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name",
            "type",
            "version"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the monitor or folder."
            },
            "type": {
              "type": "string",
              "description": "Type of the object model."
            },
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "The version of the monitor or folder."
            },
            "description": {
              "type": "string",
              "default": "",
              "description": "The description of the monitor or folder."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "contentType",
            "createdAt",
            "createdBy",
            "description",
            "id",
            "isMutable",
            "isSystem",
            "modifiedAt",
            "modifiedBy",
            "name",
            "parentId",
            "type",
            "version"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the monitor or folder."
            },
            "name": {
              "type": "string",
              "description": "Identifier of the monitor or folder."
            },
            "type": {
              "type": "string",
              "description": "Type of the object model."
            },
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "Version of the monitor or folder."
            },
            "isSystem": {
              "type": "boolean",
              "description": "System objects are objects provided by Sumo Logic. System objects can only be localized. Non-local fields can't be updated."
            },
            "parentId": {
              "type": "string",
              "description": "Identifier of the parent folder."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "isMutable": {
              "type": "boolean",
              "description": "Immutable objects are \"READ-ONLY\"."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            },
            "contentType": {
              "type": "string",
              "description": "Type of the content. Valid values:\n  1) Monitor\n  2) Folder"
            },
            "description": {
              "type": "string",
              "description": "Description of the monitor or folder."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  moveItem:
    description: |-
      Moves an item from its current location to another folder.
      
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/moveItem
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  pauseScheduledView:
    description: |-
      Pause a scheduled view with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/pauseScheduledView
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "indexName",
                "query",
                "startTime",
                "store"
              ],
              "properties": {
                "query": {
                  "type": "string",
                  "example": "_sourcecategory=*/Apache",
                  "maxLength": 16384,
                  "minLength": 1,
                  "description": "The query that defines the data to be included in the scheduled view."
                },
                "indexName": {
                  "type": "string",
                  "example": "TestScheduledView",
                  "maxLength": 255,
                  "minLength": 0,
                  "description": "Name of the index for the scheduled view."
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "parsingMode": {
                  "type": "string",
                  "default": "Manual",
                  "example": "AutoParse",
                  "pattern": "^(AutoParse|Manual)$",
                  "description": "Define the parsing mode to scan the JSON format log messages. Possible values are:\n  1. `AutoParse`\n  2. `Manual`\nIn AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).",
                  "x-pattern-message": "should be either AutoParse or Manual"
                },
                "retentionPeriod": {
                  "type": "integer",
                  "format": "int32",
                  "default": -1,
                  "example": 365,
                  "description": "The number of days to retain data in the scheduled view, or -1 to use the default value for your account.  Only relevant if your account has multi-retention. enabled."
                },
                "dataForwardingId": {
                  "type": "string",
                  "description": "An optional ID of a data forwarding configuration to be used by the scheduled view."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Identifier for the scheduled view."
                },
                "error": {
                  "type": "string",
                  "description": "Errors related to the scheduled view."
                },
                "status": {
                  "type": "string",
                  "description": "Status of the scheduled view."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC."
                },
                "createdBy": {
                  "type": "string",
                  "description": "Identifier of the user who created the scheduled view."
                },
                "totalBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total storage consumed by the scheduled view."
                },
                "totalMessageCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total number of messages for the scheduled view."
                },
                "createdByOptimizeIt": {
                  "type": "boolean",
                  "description": "If the scheduled view is created by OptimizeIt."
                }
              }
            }
          ],
          "x-tf-generated-properties": "id,query,indexName,startTime,retentionPeriod,parsingMode"
        }
      ]
  recoverSubdomains:
    description: |-
      Send an email with the subdomain information for a user with the given email address.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/recoverSubdomains
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  removeCollectorFromBudget:
    description: |-
      Remove Collector from a budget.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/removeCollectorFromBudget
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "action",
                "capacityBytes",
                "fieldValue",
                "name",
                "resetTime",
                "timezone"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Developer Budget",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "Display name of the ingest budget."
                },
                "action": {
                  "type": "string",
                  "example": "stopCollecting",
                  "pattern": "^(keepCollecting|stopCollecting)$",
                  "description": "Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n  * `stopCollecting`\n  * `keepCollecting`",
                  "x-pattern-message": "must be either `keepCollecting` or `stopCollecting`"
                },
                "timezone": {
                  "type": "string",
                  "example": "America/Los_Angeles",
                  "description": "Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
                },
                "resetTime": {
                  "type": "string",
                  "example": "23:30",
                  "maxLength": 5,
                  "minLength": 5,
                  "description": "Reset time of the ingest budget in HH:MM format."
                },
                "fieldValue": {
                  "type": "string",
                  "example": "dev_30_gb",
                  "maxLength": 1024,
                  "minLength": 1,
                  "description": "Custom field value that is used to assign Collectors to the ingest budget."
                },
                "description": {
                  "type": "string",
                  "maxLength": 1024,
                  "minLength": 0,
                  "description": "Description of the ingest budget."
                },
                "capacityBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "minimum": 0,
                  "description": "Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit."
                },
                "auditThreshold": {
                  "type": "integer",
                  "format": "int32",
                  "example": 85,
                  "maximum": 99,
                  "minimum": 1,
                  "description": "The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdByUser",
                "modifiedAt",
                "modifiedByUser"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdByUser": {
                  "type": "object",
                  "required": [
                    "email",
                    "firstName",
                    "id",
                    "lastName"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "User's identifier."
                    },
                    "email": {
                      "type": "string",
                      "example": "johndoe@acme.com",
                      "description": "User's email."
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe",
                      "description": "User's last name."
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John",
                      "description": "User's first name."
                    }
                  }
                },
                "modifiedByUser": {
                  "type": "object",
                  "required": [
                    "email",
                    "firstName",
                    "id",
                    "lastName"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "User's identifier."
                    },
                    "email": {
                      "type": "string",
                      "example": "johndoe@acme.com",
                      "description": "User's email."
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe",
                      "description": "User's last name."
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John",
                      "description": "User's first name."
                    }
                  }
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the ingest budget."
                },
                "usageBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 900,
                  "description": "Current usage since the last reset, in bytes."
                },
                "usageStatus": {
                  "type": "string",
                  "example": "Approaching",
                  "description": "Status of the current usage. Can be `Normal`, `Approaching`, `Exceeded`, or `Unknown` (unable to retrieve usage)."
                },
                "numberOfCollectors": {
                  "type": "integer",
                  "format": "int64",
                  "example": 10,
                  "description": "Number of collectors assigned to the ingest budget."
                }
              }
            }
          ]
        }
      ]
  removeContentPermissions:
    description: |-
      Remove permissions from a content item with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/removeContentPermissions
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "contentPermissionAssignments",
            "notificationMessage",
            "notifyRecipients"
          ],
          "properties": {
            "notifyRecipients": {
              "type": "boolean",
              "description": "Set this to \"true\" to notify the users who had a permission update."
            },
            "notificationMessage": {
              "type": "string",
              "description": "The notification message sent to the users who had a permission update."
            },
            "contentPermissionAssignments": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "contentId",
                  "permissionName",
                  "sourceId",
                  "sourceType"
                ],
                "properties": {
                  "sourceId": {
                    "type": "string",
                    "description": "An identifier that belongs to the source type chosen above. For e.g. if the sourceType is set to \"user\", sourceId should be identifier of a user (same goes for `role` and `org` sourceType)"
                  },
                  "contentId": {
                    "type": "string",
                    "description": "Unique identifier for the content item."
                  },
                  "sourceType": {
                    "type": "string",
                    "example": "role",
                    "pattern": "^(user|role|org)$",
                    "description": "Type of source for the permission. Valid values are: `user`, `role`, and `org`.",
                    "x-pattern-message": "must be one of the following: `user`, `role`, `org`"
                  },
                  "permissionName": {
                    "type": "string",
                    "pattern": "^(View|GrantView|Edit|GrantEdit|Manage|GrantManage)$",
                    "description": "Content permission name. Valid values are: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, and `GrantManage`.",
                    "x-pattern-message": "must be one of the following: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, `GrantManage`"
                  }
                }
              },
              "description": "Content permissions to be updated."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "explicitPermissions"
          ],
          "properties": {
            "explicitPermissions": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "contentId",
                  "permissionName",
                  "sourceId",
                  "sourceType"
                ],
                "properties": {
                  "sourceId": {
                    "type": "string",
                    "description": "An identifier that belongs to the source type chosen above. For e.g. if the sourceType is set to \"user\", sourceId should be identifier of a user (same goes for `role` and `org` sourceType)"
                  },
                  "contentId": {
                    "type": "string",
                    "description": "Unique identifier for the content item."
                  },
                  "sourceType": {
                    "type": "string",
                    "example": "role",
                    "pattern": "^(user|role|org)$",
                    "description": "Type of source for the permission. Valid values are: `user`, `role`, and `org`.",
                    "x-pattern-message": "must be one of the following: `user`, `role`, `org`"
                  },
                  "permissionName": {
                    "type": "string",
                    "pattern": "^(View|GrantView|Edit|GrantEdit|Manage|GrantManage)$",
                    "description": "Content permission name. Valid values are: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, and `GrantManage`.",
                    "x-pattern-message": "must be one of the following: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, `GrantManage`"
                  }
                }
              },
              "description": "Explicitly assigned content permissions."
            },
            "implicitPermissions": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "contentId",
                  "permissionName",
                  "sourceId",
                  "sourceType"
                ],
                "properties": {
                  "sourceId": {
                    "type": "string",
                    "description": "An identifier that belongs to the source type chosen above. For e.g. if the sourceType is set to \"user\", sourceId should be identifier of a user (same goes for `role` and `org` sourceType)"
                  },
                  "contentId": {
                    "type": "string",
                    "description": "Unique identifier for the content item."
                  },
                  "sourceType": {
                    "type": "string",
                    "example": "role",
                    "pattern": "^(user|role|org)$",
                    "description": "Type of source for the permission. Valid values are: `user`, `role`, and `org`.",
                    "x-pattern-message": "must be one of the following: `user`, `role`, `org`"
                  },
                  "permissionName": {
                    "type": "string",
                    "pattern": "^(View|GrantView|Edit|GrantEdit|Manage|GrantManage)$",
                    "description": "Content permission name. Valid values are: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, and `GrantManage`.",
                    "x-pattern-message": "must be one of the following: `View`, `GrantView`, `Edit`, `GrantEdit`, `Manage`, `GrantManage`"
                  }
                }
              },
              "description": "Implicitly inherited content permissions."
            }
          }
        }
      ]
  removeRoleFromUser:
    description: |-
      Remove a role from a user in the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/removeRoleFromUser
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  requestChangeEmail:
    description: |-
      An email with an activation link is sent to the user’s new email address. The user must click the link in the email within seven days to complete the email address change, or the link will expire.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/requestChangeEmail
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "email"
          ],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "example": "johndoe@acme.com",
              "maxLength": 255,
              "description": "New email address of the user."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  requestJobStatus:
    description: |-
      Retrieve the status of a previously made request. If the request was successful, the status of the response object will be `Success`.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/requestJobStatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "createdAt",
            "eventType",
            "jobId",
            "lookupContentId",
            "lookupContentPath",
            "lookupName",
            "modifiedAt",
            "status",
            "userId"
          ],
          "properties": {
            "jobId": {
              "type": "string",
              "example": "0000000001C41EF2",
              "description": "An identifier returned in response to an asynchronous request."
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "auth:password_too_short",
                    "description": "An error code describing the type of error."
                  },
                  "meta": {
                    "type": "object",
                    "example": {
                      "minLength": 12,
                      "actualLength": 5
                    },
                    "description": "An optional list of metadata about the error."
                  },
                  "detail": {
                    "type": "string",
                    "example": "Your password was 5 characters long, the minimum length is 12 characters. See http://example.com/password for more information.",
                    "description": "An optional fuller English-language description of the error."
                  },
                  "message": {
                    "type": "string",
                    "example": "Your password was too short.",
                    "description": "A short English-language description of the error."
                  }
                }
              },
              "description": "More information about the failures, if the status is `Failed`."
            },
            "status": {
              "type": "string",
              "description": "Whether or not the request is pending (`Pending`), in progress (`InProgress`), has completed successfully (`Success`), has completed partially with warnings (`PartialSuccess`) or has completed with an error (`Failed`)."
            },
            "userId": {
              "type": "string",
              "example": "0000000006743FDD",
              "description": "User id of user who initiated this operation."
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message"
                ],
                "properties": {
                  "cause": {
                    "type": "string",
                    "example": "Primary key values were duplicate.",
                    "description": "An optional cause of this warning."
                  },
                  "message": {
                    "type": "string",
                    "example": "60 rows were dropped.",
                    "description": "Description of the warning."
                  }
                },
                "description": "Warning description"
              },
              "description": "More information about the warnings, if the status is `PartialSuccess`."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation time of this job in UTC."
            },
            "lookupName": {
              "type": "string",
              "example": "sampleLookup",
              "description": "Name of lookup table on which this operation was performed."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp in UTC when status was last updated."
            },
            "requestType": {
              "type": "string",
              "example": "BulkMerge",
              "description": "Type of asynchronous request made:\n  - `BulkMerge`\n  - `BulkReplace`\n  - `Truncate`"
            },
            "statusMessages": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Additional status messages generated if any if the status is `Success`."
            },
            "lookupContentId": {
              "type": "string",
              "example": "0000000001C41EE4",
              "description": "Content id of lookup table on which this operation was performed."
            },
            "lookupContentPath": {
              "type": "string",
              "example": "/Library/Users/xyz@demo.com/sampleLookup",
              "description": "Content path of lookup table on which this operation was performed."
            }
          },
          "description": "Lookup table async job status."
        }
      ]
  resetPassword:
    description: |-
      Reset a user's password.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/resetPassword
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  resetUsage:
    description: |-
      Reset ingest budget's current usage to 0 before the scheduled reset time.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/resetUsage
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  resetUsageV2:
    description: |-
      Reset ingest budget's current usage to 0 before the scheduled reset time.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/resetUsageV2
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  setPasswordPolicy:
    description: |-
      Update the current password policy.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/setPasswordPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "maxLength": {
              "type": "integer",
              "format": "int32",
              "default": 128,
              "example": 128,
              "maximum": 128,
              "minimum": 32,
              "description": "The maximum length of the password."
            },
            "minLength": {
              "type": "integer",
              "format": "int32",
              "default": 8,
              "example": 8,
              "maximum": 128,
              "minimum": 8,
              "description": "The minimum length of the password."
            },
            "requireMfa": {
              "type": "boolean",
              "default": false,
              "example": false,
              "description": "If MFA should be required to log in. By default, this field is set to `false`."
            },
            "rememberMfa": {
              "type": "boolean",
              "default": true,
              "example": true,
              "description": "If MFA should be remembered on the browser."
            },
            "mustContainDigits": {
              "type": "boolean",
              "default": true,
              "example": true,
              "description": "If the password must contain digits."
            },
            "minUniquePasswords": {
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10,
              "maximum": 10,
              "minimum": 4,
              "description": "The minimum number of unique new passwords that a user must use before an old password can be reused."
            },
            "maxPasswordAgeInDays": {
              "type": "integer",
              "format": "int32",
              "default": 365,
              "example": 365,
              "maximum": 365,
              "minimum": -1,
              "description": "Maximum number of days that a password can be used before user is required to change it. Put -1 if the user should not have to change their password."
            },
            "mustContainLowercase": {
              "type": "boolean",
              "default": true,
              "example": true,
              "description": "If the password must contain lower case characters."
            },
            "mustContainUppercase": {
              "type": "boolean",
              "default": true,
              "example": true,
              "description": "If the password must contain upper case characters."
            },
            "accountLockoutThreshold": {
              "type": "integer",
              "format": "int32",
              "default": 6,
              "example": 6,
              "maximum": 10,
              "minimum": 3,
              "description": "Number of failed login attempts allowed before account is locked-out."
            },
            "mustContainSpecialChars": {
              "type": "boolean",
              "default": true,
              "example": true,
              "description": "If the password must contain special characters."
            },
            "accountLockoutDurationInMins": {
              "type": "integer",
              "format": "int32",
              "default": 30,
              "example": 30,
              "maximum": 120,
              "minimum": 30,
              "description": "The duration of time in minutes that a locked-out account remained locked before getting unlocked automatically."
            },
            "failedLoginResetDurationInMins": {
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10,
              "maximum": 10,
              "minimum": 1,
              "description": "The duration of time in minutes that must elapse from the first failed login attempt after which failed login count is reset to 0."
            }
          },
          "description": "Password Policy"
        }
      ]
  startScheduledView:
    description: |-
      Start a scheduled view with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/startScheduledView
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "indexName",
                "query",
                "startTime",
                "store"
              ],
              "properties": {
                "query": {
                  "type": "string",
                  "example": "_sourcecategory=*/Apache",
                  "maxLength": 16384,
                  "minLength": 1,
                  "description": "The query that defines the data to be included in the scheduled view."
                },
                "indexName": {
                  "type": "string",
                  "example": "TestScheduledView",
                  "maxLength": 255,
                  "minLength": 0,
                  "description": "Name of the index for the scheduled view."
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "parsingMode": {
                  "type": "string",
                  "default": "Manual",
                  "example": "AutoParse",
                  "pattern": "^(AutoParse|Manual)$",
                  "description": "Define the parsing mode to scan the JSON format log messages. Possible values are:\n  1. `AutoParse`\n  2. `Manual`\nIn AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).",
                  "x-pattern-message": "should be either AutoParse or Manual"
                },
                "retentionPeriod": {
                  "type": "integer",
                  "format": "int32",
                  "default": -1,
                  "example": 365,
                  "description": "The number of days to retain data in the scheduled view, or -1 to use the default value for your account.  Only relevant if your account has multi-retention. enabled."
                },
                "dataForwardingId": {
                  "type": "string",
                  "description": "An optional ID of a data forwarding configuration to be used by the scheduled view."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Identifier for the scheduled view."
                },
                "error": {
                  "type": "string",
                  "description": "Errors related to the scheduled view."
                },
                "status": {
                  "type": "string",
                  "description": "Status of the scheduled view."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC."
                },
                "createdBy": {
                  "type": "string",
                  "description": "Identifier of the user who created the scheduled view."
                },
                "totalBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total storage consumed by the scheduled view."
                },
                "totalMessageCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total number of messages for the scheduled view."
                },
                "createdByOptimizeIt": {
                  "type": "boolean",
                  "description": "If the scheduled view is created by OptimizeIt."
                }
              }
            }
          ],
          "x-tf-generated-properties": "id,query,indexName,startTime,retentionPeriod,parsingMode"
        }
      ]
  testConnection:
    description: |-
      Test a new connection url is valid and can connect.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/testConnection
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name",
            "type"
          ],
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^([a-zA-Z0-9 +%\\-@.,_()]+)$",
              "maxLength": 127,
              "minLength": 1,
              "description": "Name of connection. Name should be a valid alphanumeric value."
            },
            "type": {
              "type": "string",
              "pattern": "^(WebhookDefinition|ServiceNowDefinition)$",
              "description": "Type of connection. Valid values are `WebhookDefinition`, `ServiceNowDefinition`.",
              "x-pattern-message": "must be either `WebhookDefinition` or `ServiceNowDefinition`"
            },
            "description": {
              "type": "string",
              "default": "",
              "maxLength": 1024,
              "description": "Description of the connection."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "responseContent",
            "statusCode"
          ],
          "properties": {
            "statusCode": {
              "type": "integer",
              "description": "Status code of the response of the connection test."
            },
            "responseContent": {
              "type": "string",
              "description": "Content of the response of the connection test."
            }
          }
        }
      ]
  truncateTable:
    description: |-
      Delete all data from a lookup table.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/truncateTable
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string",
              "example": "0000000001C41EF2",
              "description": "The identifier used to track the request."
            }
          },
          "description": "Allows you to track the status of an upload or export request."
        }
      ]
  unlockUser:
    description: |-
      Unlock another user's account.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/unlockUser
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  updateAccessKey:
    description: |-
      Updates the properties of existing accessKey by accessId. It can be used to enable or disable the access key and to update the corsHeaders list.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateAccessKey
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "disabled"
          ],
          "properties": {
            "disabled": {
              "type": "boolean",
              "example": true,
              "description": "Indicates whether the access key is disabled or not."
            },
            "corsHeaders": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "https://my-app.com",
                "https://mail.my-app.com"
              ],
              "maxItems": 20,
              "description": "An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:\n  1. Requests with an ORIGIN header but the allowlist is empty.\n  2. Requests with an ORIGIN header that don't match any entry in the allowlist."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "createdAt",
            "createdBy",
            "disabled",
            "id",
            "label",
            "modifiedAt"
          ],
          "properties": {
            "id": {
              "type": "string",
              "example": "su0w3Q37CBzHUM",
              "description": "Identifier of the access key."
            },
            "label": {
              "type": "string",
              "example": "collector access key",
              "description": "The name of the access key."
            },
            "disabled": {
              "type": "boolean",
              "example": false,
              "description": "Indicates whether the access key is disabled or not."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "createdBy": {
              "type": "string",
              "example": "0000000006743FDD",
              "description": "Identifier of the user who created the access key."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "corsHeaders": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "https://my-app.com",
                "https://mail.my-app.com"
              ],
              "description": "An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:\n  1. Requests with an ORIGIN header but the allowlist is empty.\n  2. Requests with an ORIGIN header that don't match any entry in the allowlist."
            }
          }
        }
      ]
  updateConnection:
    description: |-
      Update an existing connection.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateConnection
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name",
            "type"
          ],
          "properties": {
            "name": {
              "type": "string",
              "pattern": "^([a-zA-Z0-9 +%\\-@.,_()]+)$",
              "maxLength": 127,
              "minLength": 1,
              "description": "Name of connection. Name should be a valid alphanumeric value."
            },
            "type": {
              "type": "string",
              "pattern": "^(WebhookDefinition|ServiceNowDefinition)$",
              "description": "Type of connection. Valid values are `WebhookDefinition`, `ServiceNowDefinition`.",
              "x-pattern-message": "must be either `WebhookDefinition` or `ServiceNowDefinition`"
            },
            "description": {
              "type": "string",
              "default": "",
              "maxLength": 1024,
              "description": "Description of the connection."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "createdAt",
            "createdBy",
            "description",
            "id",
            "modifiedAt",
            "modifiedBy",
            "name",
            "type"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier for the connection."
            },
            "name": {
              "type": "string",
              "description": "Name of the connection."
            },
            "type": {
              "type": "string",
              "description": "Type of connection. Valid values are `WebhookConnection`, `ServiceNowConnection`."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            },
            "description": {
              "type": "string",
              "description": "Description of the connection."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  updateDashboard:
    description: |-
      Update a dashboard by the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateDashboard
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "timeRange",
            "title"
          ],
          "properties": {
            "theme": {
              "type": "string",
              "default": "Light",
              "example": "light",
              "pattern": "^(light|dark|Light|Dark)$",
              "description": "Theme for the dashboard. Either `Light` or `Dark`.",
              "x-pattern-message": "Must be `Light`, or `Dark`"
            },
            "title": {
              "type": "string",
              "example": "Kubernetes Dashboard",
              "maxLength": 255,
              "minLength": 1,
              "description": "Title of the dashboard."
            },
            "domain": {
              "type": "string",
              "default": "",
              "example": "aws",
              "description": "If set denotes that the dashboard concerns a given domain (e.g. `aws`, `k8s`, `app`)."
            },
            "layout": {
              "type": "object",
              "required": [
                "layoutStructures",
                "layoutType"
              ],
              "properties": {
                "layoutType": {
                  "type": "string",
                  "example": "Grid",
                  "description": "The type of panel layout on the Dashboard. For example, Grid, Tabs, or Hierarchical. Currently supports `Grid` only."
                },
                "layoutStructures": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "key",
                      "structure"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "example": "panelPANE-3DC454FD977E2A46",
                        "description": "The identifier of the panel that this structure applies to."
                      },
                      "structure": {
                        "type": "string",
                        "example": "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\":0}",
                        "description": "The structure of a panel."
                      }
                    }
                  },
                  "description": "Layout structures for the panel childen."
                }
              },
              "discriminator": {
                "propertyName": "layoutType"
              }
            },
            "panels": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "key",
                  "panelType"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "2F7D449E3D511066",
                    "description": "Unique identifier for the panel."
                  },
                  "key": {
                    "type": "string",
                    "example": "panelca6280e4a75fca45",
                    "description": "Key for the panel. Used to create searches for the queries in the panel and configure the layout of the panel in the dashboard.\n"
                  },
                  "title": {
                    "type": "string",
                    "example": "This panel shows memory usage for your kubernetes pod.",
                    "description": "Title of the panel."
                  },
                  "panelType": {
                    "type": "string",
                    "example": "SumoSearchPanel",
                    "description": "Type of panel."
                  },
                  "visualSettings": {
                    "type": "string",
                    "example": "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}",
                    "description": "Visual settings of the panel."
                  },
                  "keepVisualSettingsConsistentWithParent": {
                    "type": "boolean",
                    "default": true,
                    "description": "Keeps the visual settings, like series colors, consistent with the settings of the parent panel."
                  }
                },
                "discriminator": {
                  "propertyName": "panelType"
                }
              },
              "description": "Panels in the dashboard."
            },
            "folderId": {
              "type": "string",
              "example": "000000000C1C17C6",
              "description": "The identifier of the folder to save the dashboard in. By default it is saved in your personal folder.\n"
            },
            "timeRange": {
              "type": "object",
              "example": {
                "from": {
                  "type": "RelativeTimeRangeBoundary",
                  "relativeTime": "-15m"
                },
                "type": "BeginBoundedTimeRange"
              },
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`."
                }
              },
              "discriminator": {
                "propertyName": "type"
              }
            },
            "variables": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "sourceDefinition"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier for the variable."
                  },
                  "name": {
                    "type": "string",
                    "example": "_sourceHost",
                    "pattern": "^[a-zA-Z0-9_]*$",
                    "maxLength": 256,
                    "description": "Name of the variable. The variable name is case-insensitive. Only alphanumeric, and underscores are\nallowed in the variable name.\n",
                    "x-pattern-message": "Only alphanumeric, and underscores are allowed."
                  },
                  "hideFromUI": {
                    "type": "boolean",
                    "default": false,
                    "example": false,
                    "description": "Hide the variable in the dashboard UI."
                  },
                  "displayName": {
                    "type": "string",
                    "example": "Source Host",
                    "maxLength": 256,
                    "description": "Display name of the variable shown in the UI. If this field is empty, the name field will be used.\nThe display name is case-insensitive. Only numbers, and underscores are allowed in the variable name.\nThis field is not yet supported by the UI.\n"
                  },
                  "defaultValue": {
                    "type": "string",
                    "example": "default_value",
                    "description": "Default value of the variable."
                  },
                  "allowMultiSelect": {
                    "type": "boolean",
                    "default": false,
                    "example": false,
                    "description": "Allow multiple selections in the values dropdown."
                  },
                  "includeAllOption": {
                    "type": "boolean",
                    "default": true,
                    "example": true,
                    "description": "Include an \"All\" option at the top of the variable's values dropdown."
                  },
                  "sourceDefinition": {
                    "type": "object",
                    "required": [
                      "variableSourceType"
                    ],
                    "properties": {
                      "variableSourceType": {
                        "type": "string",
                        "example": "MetadataVariableSourceDefinition",
                        "description": "Source type of the variable values."
                      }
                    },
                    "discriminator": {
                      "propertyName": "variableSourceType"
                    }
                  }
                }
              },
              "description": "Variables to apply to the panels."
            },
            "description": {
              "type": "string",
              "example": "A view of pods, namespaces and nodes of your cluster.",
              "description": "Description of the dashboard."
            },
            "coloringRules": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "coloringThresholds",
                  "multipleSeriesAggregateFunction",
                  "scope",
                  "singleSeriesAggregateFunction"
                ],
                "properties": {
                  "scope": {
                    "type": "string",
                    "example": "CPU_*",
                    "description": "Regex string to match queries to apply coloring to."
                  },
                  "colorThresholds": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "color"
                      ],
                      "properties": {
                        "max": {
                          "type": "number",
                          "format": "double",
                          "example": 50,
                          "description": "Absolute exclusive threshold to color by."
                        },
                        "min": {
                          "type": "number",
                          "format": "double",
                          "example": 0,
                          "description": "Absolute inclusive threshold to color by."
                        },
                        "color": {
                          "type": "string",
                          "example": "FFFFFF",
                          "description": "Color for the threshold."
                        }
                      }
                    },
                    "description": "Color thresholds."
                  },
                  "singleSeriesAggregateFunction": {
                    "type": "string",
                    "example": "Average",
                    "description": "Function to aggregate one series into one single value."
                  },
                  "multipleSeriesAggregateFunction": {
                    "type": "string",
                    "example": "Average",
                    "description": "Function to aggregate the aggregate values of multiple time series into one single value."
                  }
                }
              },
              "description": "Rules to set the color of data. This is an internal field and is not current supported by UI.",
              "x-visibility": "private"
            },
            "refreshInterval": {
              "type": "integer",
              "format": "int32",
              "description": "Interval of time (in seconds) to automatically refresh the dashboard. A value of 0 means we never automatically refresh the dashboard. This functionality is currently not supported.\n"
            },
            "topologyLabelMap": {
              "type": "object",
              "example": {
                "service": [
                  "kube-scheduler",
                  "kube-dns"
                ]
              },
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Map from topology labels to `TopologyLabelValuesList`.",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Value of the label."
                    },
                    "default": [],
                    "example": "kube-scheduler",
                    "description": "List of values corresponding to a key of a label."
                  }
                }
              },
              "description": "Map of the topology labels. Each label has a key and a list of values. If a value is `*`, it means the label will match content for all values of its key.\n"
            }
          }
        }
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "timeRange",
                "title"
              ],
              "properties": {
                "theme": {
                  "type": "string",
                  "default": "Light",
                  "example": "light",
                  "pattern": "^(light|dark|Light|Dark)$",
                  "description": "Theme for the dashboard. Either `Light` or `Dark`.",
                  "x-pattern-message": "Must be `Light`, or `Dark`"
                },
                "title": {
                  "type": "string",
                  "example": "Kubernetes Dashboard",
                  "maxLength": 255,
                  "minLength": 1,
                  "description": "Title of the dashboard."
                },
                "domain": {
                  "type": "string",
                  "default": "",
                  "example": "aws",
                  "description": "If set denotes that the dashboard concerns a given domain (e.g. `aws`, `k8s`, `app`)."
                },
                "layout": {
                  "type": "object",
                  "required": [
                    "layoutStructures",
                    "layoutType"
                  ],
                  "properties": {
                    "layoutType": {
                      "type": "string",
                      "example": "Grid",
                      "description": "The type of panel layout on the Dashboard. For example, Grid, Tabs, or Hierarchical. Currently supports `Grid` only."
                    },
                    "layoutStructures": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "key",
                          "structure"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "example": "panelPANE-3DC454FD977E2A46",
                            "description": "The identifier of the panel that this structure applies to."
                          },
                          "structure": {
                            "type": "string",
                            "example": "{\\\"height\\\":5,\\\"width\\\":9,\\\"x\\\":0,\\\"y\\\":0}",
                            "description": "The structure of a panel."
                          }
                        }
                      },
                      "description": "Layout structures for the panel childen."
                    }
                  },
                  "discriminator": {
                    "propertyName": "layoutType"
                  }
                },
                "panels": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "key",
                      "panelType"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "2F7D449E3D511066",
                        "description": "Unique identifier for the panel."
                      },
                      "key": {
                        "type": "string",
                        "example": "panelca6280e4a75fca45",
                        "description": "Key for the panel. Used to create searches for the queries in the panel and configure the layout of the panel in the dashboard.\n"
                      },
                      "title": {
                        "type": "string",
                        "example": "This panel shows memory usage for your kubernetes pod.",
                        "description": "Title of the panel."
                      },
                      "panelType": {
                        "type": "string",
                        "example": "SumoSearchPanel",
                        "description": "Type of panel."
                      },
                      "visualSettings": {
                        "type": "string",
                        "example": "{\\\"general\\\":{\\\"type\\\":\\\"column\\\"}",
                        "description": "Visual settings of the panel."
                      },
                      "keepVisualSettingsConsistentWithParent": {
                        "type": "boolean",
                        "default": true,
                        "description": "Keeps the visual settings, like series colors, consistent with the settings of the parent panel."
                      }
                    },
                    "discriminator": {
                      "propertyName": "panelType"
                    }
                  },
                  "description": "Panels in the dashboard."
                },
                "folderId": {
                  "type": "string",
                  "example": "000000000C1C17C6",
                  "description": "The identifier of the folder to save the dashboard in. By default it is saved in your personal folder.\n"
                },
                "timeRange": {
                  "type": "object",
                  "example": {
                    "from": {
                      "type": "RelativeTimeRangeBoundary",
                      "relativeTime": "-15m"
                    },
                    "type": "BeginBoundedTimeRange"
                  },
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`."
                    }
                  },
                  "discriminator": {
                    "propertyName": "type"
                  }
                },
                "variables": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "sourceDefinition"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the variable."
                      },
                      "name": {
                        "type": "string",
                        "example": "_sourceHost",
                        "pattern": "^[a-zA-Z0-9_]*$",
                        "maxLength": 256,
                        "description": "Name of the variable. The variable name is case-insensitive. Only alphanumeric, and underscores are\nallowed in the variable name.\n",
                        "x-pattern-message": "Only alphanumeric, and underscores are allowed."
                      },
                      "hideFromUI": {
                        "type": "boolean",
                        "default": false,
                        "example": false,
                        "description": "Hide the variable in the dashboard UI."
                      },
                      "displayName": {
                        "type": "string",
                        "example": "Source Host",
                        "maxLength": 256,
                        "description": "Display name of the variable shown in the UI. If this field is empty, the name field will be used.\nThe display name is case-insensitive. Only numbers, and underscores are allowed in the variable name.\nThis field is not yet supported by the UI.\n"
                      },
                      "defaultValue": {
                        "type": "string",
                        "example": "default_value",
                        "description": "Default value of the variable."
                      },
                      "allowMultiSelect": {
                        "type": "boolean",
                        "default": false,
                        "example": false,
                        "description": "Allow multiple selections in the values dropdown."
                      },
                      "includeAllOption": {
                        "type": "boolean",
                        "default": true,
                        "example": true,
                        "description": "Include an \"All\" option at the top of the variable's values dropdown."
                      },
                      "sourceDefinition": {
                        "type": "object",
                        "required": [
                          "variableSourceType"
                        ],
                        "properties": {
                          "variableSourceType": {
                            "type": "string",
                            "example": "MetadataVariableSourceDefinition",
                            "description": "Source type of the variable values."
                          }
                        },
                        "discriminator": {
                          "propertyName": "variableSourceType"
                        }
                      }
                    }
                  },
                  "description": "Variables to apply to the panels."
                },
                "description": {
                  "type": "string",
                  "example": "A view of pods, namespaces and nodes of your cluster.",
                  "description": "Description of the dashboard."
                },
                "coloringRules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "coloringThresholds",
                      "multipleSeriesAggregateFunction",
                      "scope",
                      "singleSeriesAggregateFunction"
                    ],
                    "properties": {
                      "scope": {
                        "type": "string",
                        "example": "CPU_*",
                        "description": "Regex string to match queries to apply coloring to."
                      },
                      "colorThresholds": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "color"
                          ],
                          "properties": {
                            "max": {
                              "type": "number",
                              "format": "double",
                              "example": 50,
                              "description": "Absolute exclusive threshold to color by."
                            },
                            "min": {
                              "type": "number",
                              "format": "double",
                              "example": 0,
                              "description": "Absolute inclusive threshold to color by."
                            },
                            "color": {
                              "type": "string",
                              "example": "FFFFFF",
                              "description": "Color for the threshold."
                            }
                          }
                        },
                        "description": "Color thresholds."
                      },
                      "singleSeriesAggregateFunction": {
                        "type": "string",
                        "example": "Average",
                        "description": "Function to aggregate one series into one single value."
                      },
                      "multipleSeriesAggregateFunction": {
                        "type": "string",
                        "example": "Average",
                        "description": "Function to aggregate the aggregate values of multiple time series into one single value."
                      }
                    }
                  },
                  "description": "Rules to set the color of data. This is an internal field and is not current supported by UI.",
                  "x-visibility": "private"
                },
                "refreshInterval": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Interval of time (in seconds) to automatically refresh the dashboard. A value of 0 means we never automatically refresh the dashboard. This functionality is currently not supported.\n"
                },
                "topologyLabelMap": {
                  "type": "object",
                  "example": {
                    "service": [
                      "kube-scheduler",
                      "kube-dns"
                    ]
                  },
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "Map from topology labels to `TopologyLabelValuesList`.",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Value of the label."
                        },
                        "default": [],
                        "example": "kube-scheduler",
                        "description": "List of values corresponding to a key of a label."
                      }
                    }
                  },
                  "description": "Map of the topology labels. Each label has a key and a list of values. If a value is `*`, it means the label will match content for all values of its key.\n"
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2",
                  "description": "Unique identifier for the dashboard."
                }
              }
            }
          ]
        }
      ]
  updateDynamicParsingRule:
    description: |-
      Update an existing dynamic parsing rule. All properties specified in the request are replaced. Missing properties are set to their default values.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateDynamicParsingRule
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "enabled",
            "name",
            "scope"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "DynamicParsingRule123",
              "maxLength": 256,
              "minLength": 1,
              "description": "Name of the dynamic parsing rule. Use a name that makes it easy to identify the rule."
            },
            "scope": {
              "type": "string",
              "example": "_sourceHost=127.0.0.1",
              "maxLength": 2048,
              "minLength": 1,
              "description": "Scope of the dynamic parsing rule. This could be a sourceCategory, sourceHost, or any other metadata that describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search, before the first pipe ( | ). You'll use the Scope to run a search against the rule."
            },
            "enabled": {
              "type": "boolean",
              "default": true,
              "example": false,
              "description": "Is the dynamic parsing rule enabled."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "enabled",
                "name",
                "scope"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "DynamicParsingRule123",
                  "maxLength": 256,
                  "minLength": 1,
                  "description": "Name of the dynamic parsing rule. Use a name that makes it easy to identify the rule."
                },
                "scope": {
                  "type": "string",
                  "example": "_sourceHost=127.0.0.1",
                  "maxLength": 2048,
                  "minLength": 1,
                  "description": "Scope of the dynamic parsing rule. This could be a sourceCategory, sourceHost, or any other metadata that describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search, before the first pipe ( | ). You'll use the Scope to run a search against the rule."
                },
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "example": false,
                  "description": "Is the dynamic parsing rule enabled."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "dateTime",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "dateTime",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0000000001C41EE4",
                  "description": "Unique identifier for the dynamic parsing rule."
                }
              }
            }
          ]
        }
      ]
  updateExtractionRule:
    description: |-
      Update an existing field extraction rule. All properties specified in the request are replaced. Missing properties are set to their default values.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateExtractionRule
    example:
      inputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "name",
                "parseExpression",
                "scope"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "ExtractionRule123",
                  "maxLength": 256,
                  "minLength": 1,
                  "description": "Name of the field extraction rule. Use a name that makes it easy to identify the rule."
                },
                "scope": {
                  "type": "string",
                  "example": "_sourceHost=127.0.0.1",
                  "maxLength": 2048,
                  "minLength": 0,
                  "description": "Scope of the field extraction rule. This could be a sourceCategory, sourceHost, or any other metadata that describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search, before the first pipe ( | ). You'll use the Scope to run a search against the rule."
                },
                "parseExpression": {
                  "type": "string",
                  "example": "csv _raw extract 1 as f1",
                  "maxLength": 16384,
                  "description": "Describes the fields to be parsed."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "enabled"
              ],
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Is the field extraction rule enabled."
                }
              }
            }
          ]
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "name",
                    "parseExpression",
                    "scope"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "ExtractionRule123",
                      "maxLength": 256,
                      "minLength": 1,
                      "description": "Name of the field extraction rule. Use a name that makes it easy to identify the rule."
                    },
                    "scope": {
                      "type": "string",
                      "example": "_sourceHost=127.0.0.1",
                      "maxLength": 2048,
                      "minLength": 0,
                      "description": "Scope of the field extraction rule. This could be a sourceCategory, sourceHost, or any other metadata that describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search, before the first pipe ( | ). You'll use the Scope to run a search against the rule."
                    },
                    "parseExpression": {
                      "type": "string",
                      "example": "csv _raw extract 1 as f1",
                      "maxLength": 16384,
                      "description": "Describes the fields to be parsed."
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Is the field extraction rule enabled."
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the field extraction rule."
                },
                "fieldNames": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of extracted fields from \"parseExpression\"."
                }
              }
            }
          ],
          "x-tf-resource-name": "ExtractionRule",
          "x-tf-generated-properties": "id,name,scope,parseExpression,enabled"
        }
      ]
  updateFolder:
    description: |-
      Update an existing folder with the given identifier.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateFolder
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "SampleFolder",
              "maxLength": 128,
              "minLength": 1,
              "description": "The name of the folder."
            },
            "description": {
              "type": "string",
              "example": "This is a sample folder.",
              "maxLength": 255,
              "minLength": 0,
              "description": "The description of the folder."
            }
          }
        }
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy"
                  ],
                  "properties": {
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "Identifier of the user who created the resource."
                    },
                    "modifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last modification timestamp in UTC."
                    },
                    "modifiedBy": {
                      "type": "string",
                      "example": "0000000006743FE8",
                      "description": "Identifier of the user who last modified the resource."
                    }
                  }
                },
                {
                  "required": [
                    "id",
                    "itemType",
                    "name",
                    "parentId",
                    "permissions"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "000000000C1C17C6",
                      "description": "Identifier of the content item."
                    },
                    "name": {
                      "type": "string",
                      "example": "Personal",
                      "description": "The name of the content item."
                    },
                    "itemType": {
                      "type": "string",
                      "example": "Folder",
                      "description": "Type of the content item. Supported values are:\n  1. Folder\n  2. Search\n  3. Report (for old dashboards)\n  4. Dashboard (for new dashboards)\n  5. Lookups"
                    },
                    "parentId": {
                      "type": "string",
                      "example": "0000000001C41EF2",
                      "description": "Identifier of the parent content item."
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "View",
                        "GrantView",
                        "Edit"
                      ],
                      "description": "List of permissions the user has on the content item."
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "properties": {
                "children": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "createdAt",
                          "createdBy",
                          "modifiedAt",
                          "modifiedBy"
                        ],
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                          },
                          "createdBy": {
                            "type": "string",
                            "example": "0000000006743FDD",
                            "description": "Identifier of the user who created the resource."
                          },
                          "modifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last modification timestamp in UTC."
                          },
                          "modifiedBy": {
                            "type": "string",
                            "example": "0000000006743FE8",
                            "description": "Identifier of the user who last modified the resource."
                          }
                        }
                      },
                      {
                        "required": [
                          "id",
                          "itemType",
                          "name",
                          "parentId",
                          "permissions"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "000000000C1C17C6",
                            "description": "Identifier of the content item."
                          },
                          "name": {
                            "type": "string",
                            "example": "Personal",
                            "description": "The name of the content item."
                          },
                          "itemType": {
                            "type": "string",
                            "example": "Folder",
                            "description": "Type of the content item. Supported values are:\n  1. Folder\n  2. Search\n  3. Report (for old dashboards)\n  4. Dashboard (for new dashboards)\n  5. Lookups"
                          },
                          "parentId": {
                            "type": "string",
                            "example": "0000000001C41EF2",
                            "description": "Identifier of the parent content item."
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "View",
                              "GrantView",
                              "Edit"
                            ],
                            "description": "List of permissions the user has on the content item."
                          }
                        }
                      }
                    ]
                  },
                  "description": "A list of the content items."
                },
                "description": {
                  "type": "string",
                  "example": "This is a sample folder.",
                  "maxLength": 255,
                  "minLength": 0,
                  "description": "The description of the folder."
                }
              }
            }
          ]
        }
      ]
  updateIdentityProvider:
    description: |-
      Update an existing SAML configuration in the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateIdentityProvider
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "configurationName",
            "issuer",
            "x509cert1"
          ],
          "properties": {
            "issuer": {
              "type": "string",
              "example": "http://www.okta.com/abxcseyuiwelflkdjh",
              "description": "The unique URL assigned to the organization by the SAML Identity Provider."
            },
            "debugMode": {
              "type": "boolean",
              "default": false,
              "description": "True if additional details are included when a user fails to sign in."
            },
            "logoutUrl": {
              "type": "string",
              "default": "",
              "example": "https://www.sumologic.com",
              "description": "The URL that users will be redirected to after signing out of Sumo Logic."
            },
            "x509cert1": {
              "type": "string",
              "description": "The certificate is used to verify the signature in SAML assertions."
            },
            "x509cert2": {
              "type": "string",
              "default": "",
              "description": "The backup certificate used to verify the signature in SAML assertions when x509cert1 expires."
            },
            "x509cert3": {
              "type": "string",
              "default": "",
              "description": "The backup certificate used to verify the signature in SAML assertions when x509cert1 expires and x509cert2 is empty."
            },
            "logoutEnabled": {
              "type": "boolean",
              "default": false,
              "description": "True if users are redirected to a URL after signing out of Sumo Logic."
            },
            "emailAttribute": {
              "type": "string",
              "default": "",
              "example": "attribute/subject",
              "description": "The email address of the new user account."
            },
            "rolesAttribute": {
              "type": "string",
              "default": "",
              "example": "Sumo_Role",
              "description": "The role that Sumo Logic will assign to users when they sign in."
            },
            "authnRequestUrl": {
              "type": "string",
              "default": "",
              "example": "https://service.sumologic.com/sumo/saml/login/9483922",
              "description": "The URL that the identity provider has assigned for Sumo Logic to submit SAML authentication requests to the identity provider."
            },
            "signAuthnRequest": {
              "type": "boolean",
              "default": false,
              "description": "True if Sumo Logic will send signed Authn requests to the identity provider."
            },
            "configurationName": {
              "type": "string",
              "example": "SumoLogic",
              "description": "Name of the SSO policy or another name used to describe the policy internally."
            },
            "isRedirectBinding": {
              "type": "boolean",
              "default": false,
              "description": "True if the SAML binding is of HTTP Redirect type."
            },
            "spInitiatedLoginPath": {
              "type": "string",
              "default": "",
              "example": "http://www.okta.com/abxcseyuiwelflkdjh",
              "description": "The identifier used to generate a unique URL for user login."
            },
            "spInitiatedLoginEnabled": {
              "type": "boolean",
              "default": false,
              "description": "True if Sumo Logic redirects users to your identity provider with a SAML AuthnRequest when signing in."
            },
            "onDemandProvisioningEnabled": {
              "type": "object",
              "required": [
                "onDemandProvisioningRoles"
              ],
              "properties": {
                "lastNameAttribute": {
                  "type": "string",
                  "default": "",
                  "example": "http://schemas.microsoft.com/ws/2008/06/identity/claims/surname",
                  "description": "Last name attribute of the new user account."
                },
                "firstNameAttribute": {
                  "type": "string",
                  "default": "",
                  "example": "http://schemas.microsoft.com/ws/2008/06/identity/claims/givenname",
                  "description": "First name attribute of the new user account."
                },
                "onDemandProvisioningRoles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "example": "Analyst/Administrator",
                  "description": "Sumo Logic RBAC roles to be assigned when user accounts are provisioned."
                }
              }
            },
            "disableRequestedAuthnContext": {
              "type": "boolean",
              "default": false,
              "description": "True if Sumo Logic will include the RequestedAuthnContext element of the SAML AuthnRequests it sends to the identity provider."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "configurationName",
                "issuer",
                "x509cert1"
              ],
              "properties": {
                "issuer": {
                  "type": "string",
                  "example": "http://www.okta.com/abxcseyuiwelflkdjh",
                  "description": "The unique URL assigned to the organization by the SAML Identity Provider."
                },
                "debugMode": {
                  "type": "boolean",
                  "default": false,
                  "description": "True if additional details are included when a user fails to sign in."
                },
                "logoutUrl": {
                  "type": "string",
                  "default": "",
                  "example": "https://www.sumologic.com",
                  "description": "The URL that users will be redirected to after signing out of Sumo Logic."
                },
                "x509cert1": {
                  "type": "string",
                  "description": "The certificate is used to verify the signature in SAML assertions."
                },
                "x509cert2": {
                  "type": "string",
                  "default": "",
                  "description": "The backup certificate used to verify the signature in SAML assertions when x509cert1 expires."
                },
                "x509cert3": {
                  "type": "string",
                  "default": "",
                  "description": "The backup certificate used to verify the signature in SAML assertions when x509cert1 expires and x509cert2 is empty."
                },
                "logoutEnabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "True if users are redirected to a URL after signing out of Sumo Logic."
                },
                "emailAttribute": {
                  "type": "string",
                  "default": "",
                  "example": "attribute/subject",
                  "description": "The email address of the new user account."
                },
                "rolesAttribute": {
                  "type": "string",
                  "default": "",
                  "example": "Sumo_Role",
                  "description": "The role that Sumo Logic will assign to users when they sign in."
                },
                "authnRequestUrl": {
                  "type": "string",
                  "default": "",
                  "example": "https://service.sumologic.com/sumo/saml/login/9483922",
                  "description": "The URL that the identity provider has assigned for Sumo Logic to submit SAML authentication requests to the identity provider."
                },
                "signAuthnRequest": {
                  "type": "boolean",
                  "default": false,
                  "description": "True if Sumo Logic will send signed Authn requests to the identity provider."
                },
                "configurationName": {
                  "type": "string",
                  "example": "SumoLogic",
                  "description": "Name of the SSO policy or another name used to describe the policy internally."
                },
                "isRedirectBinding": {
                  "type": "boolean",
                  "default": false,
                  "description": "True if the SAML binding is of HTTP Redirect type."
                },
                "spInitiatedLoginPath": {
                  "type": "string",
                  "default": "",
                  "example": "http://www.okta.com/abxcseyuiwelflkdjh",
                  "description": "The identifier used to generate a unique URL for user login."
                },
                "spInitiatedLoginEnabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "True if Sumo Logic redirects users to your identity provider with a SAML AuthnRequest when signing in."
                },
                "onDemandProvisioningEnabled": {
                  "type": "object",
                  "required": [
                    "onDemandProvisioningRoles"
                  ],
                  "properties": {
                    "lastNameAttribute": {
                      "type": "string",
                      "default": "",
                      "example": "http://schemas.microsoft.com/ws/2008/06/identity/claims/surname",
                      "description": "Last name attribute of the new user account."
                    },
                    "firstNameAttribute": {
                      "type": "string",
                      "default": "",
                      "example": "http://schemas.microsoft.com/ws/2008/06/identity/claims/givenname",
                      "description": "First name attribute of the new user account."
                    },
                    "onDemandProvisioningRoles": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": "Analyst/Administrator",
                      "description": "Sumo Logic RBAC roles to be assigned when user accounts are provisioned."
                    }
                  }
                },
                "disableRequestedAuthnContext": {
                  "type": "boolean",
                  "default": false,
                  "description": "True if Sumo Logic will include the RequestedAuthnContext element of the SAML AuthnRequests it sends to the identity provider."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "certificate"
              ],
              "properties": {
                "certificate": {
                  "type": "string",
                  "description": "Authentication Request Signing Certificate for the user."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "00000000361130F7",
                  "description": "Unique identifier of the SAML Identity Provider."
                },
                "assertionConsumerUrl": {
                  "type": "string",
                  "default": "",
                  "example": "https://service.sumologic.com/sumo/saml/consume/9483922",
                  "description": "The URL on Sumo Logic where the IdP will redirect to with its authentication response."
                }
              }
            }
          ]
        }
      ]
  updateIngestBudget:
    description: |-
      Update an existing ingest budget. All properties specified in the request are required.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateIngestBudget
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "action",
            "capacityBytes",
            "fieldValue",
            "name",
            "resetTime",
            "timezone"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "Developer Budget",
              "maxLength": 128,
              "minLength": 1,
              "description": "Display name of the ingest budget."
            },
            "action": {
              "type": "string",
              "example": "stopCollecting",
              "pattern": "^(keepCollecting|stopCollecting)$",
              "description": "Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n  * `stopCollecting`\n  * `keepCollecting`",
              "x-pattern-message": "must be either `keepCollecting` or `stopCollecting`"
            },
            "timezone": {
              "type": "string",
              "example": "America/Los_Angeles",
              "description": "Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
            },
            "resetTime": {
              "type": "string",
              "example": "23:30",
              "maxLength": 5,
              "minLength": 5,
              "description": "Reset time of the ingest budget in HH:MM format."
            },
            "fieldValue": {
              "type": "string",
              "example": "dev_30_gb",
              "maxLength": 1024,
              "minLength": 1,
              "description": "Custom field value that is used to assign Collectors to the ingest budget."
            },
            "description": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 0,
              "description": "Description of the ingest budget."
            },
            "capacityBytes": {
              "type": "integer",
              "format": "int64",
              "example": 1000,
              "minimum": 0,
              "description": "Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit."
            },
            "auditThreshold": {
              "type": "integer",
              "format": "int32",
              "example": 85,
              "maximum": 99,
              "minimum": 1,
              "description": "The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "action",
                "capacityBytes",
                "fieldValue",
                "name",
                "resetTime",
                "timezone"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Developer Budget",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "Display name of the ingest budget."
                },
                "action": {
                  "type": "string",
                  "example": "stopCollecting",
                  "pattern": "^(keepCollecting|stopCollecting)$",
                  "description": "Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n  * `stopCollecting`\n  * `keepCollecting`",
                  "x-pattern-message": "must be either `keepCollecting` or `stopCollecting`"
                },
                "timezone": {
                  "type": "string",
                  "example": "America/Los_Angeles",
                  "description": "Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
                },
                "resetTime": {
                  "type": "string",
                  "example": "23:30",
                  "maxLength": 5,
                  "minLength": 5,
                  "description": "Reset time of the ingest budget in HH:MM format."
                },
                "fieldValue": {
                  "type": "string",
                  "example": "dev_30_gb",
                  "maxLength": 1024,
                  "minLength": 1,
                  "description": "Custom field value that is used to assign Collectors to the ingest budget."
                },
                "description": {
                  "type": "string",
                  "maxLength": 1024,
                  "minLength": 0,
                  "description": "Description of the ingest budget."
                },
                "capacityBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "minimum": 0,
                  "description": "Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit."
                },
                "auditThreshold": {
                  "type": "integer",
                  "format": "int32",
                  "example": 85,
                  "maximum": 99,
                  "minimum": 1,
                  "description": "The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdByUser",
                "modifiedAt",
                "modifiedByUser"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdByUser": {
                  "type": "object",
                  "required": [
                    "email",
                    "firstName",
                    "id",
                    "lastName"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "User's identifier."
                    },
                    "email": {
                      "type": "string",
                      "example": "johndoe@acme.com",
                      "description": "User's email."
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe",
                      "description": "User's last name."
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John",
                      "description": "User's first name."
                    }
                  }
                },
                "modifiedByUser": {
                  "type": "object",
                  "required": [
                    "email",
                    "firstName",
                    "id",
                    "lastName"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "0000000006743FDD",
                      "description": "User's identifier."
                    },
                    "email": {
                      "type": "string",
                      "example": "johndoe@acme.com",
                      "description": "User's email."
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe",
                      "description": "User's last name."
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John",
                      "description": "User's first name."
                    }
                  }
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the ingest budget."
                },
                "usageBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 900,
                  "description": "Current usage since the last reset, in bytes."
                },
                "usageStatus": {
                  "type": "string",
                  "example": "Approaching",
                  "description": "Status of the current usage. Can be `Normal`, `Approaching`, `Exceeded`, or `Unknown` (unable to retrieve usage)."
                },
                "numberOfCollectors": {
                  "type": "integer",
                  "format": "int64",
                  "example": 10,
                  "description": "Number of collectors assigned to the ingest budget."
                }
              }
            }
          ]
        }
      ]
  updateIngestBudgetV2:
    description: |-
      Update an existing ingest budget. All properties specified in the request are required.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateIngestBudgetV2
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "action",
            "capacityBytes",
            "name",
            "resetTime",
            "scope",
            "timezone"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "Developer Budget",
              "maxLength": 128,
              "minLength": 1,
              "description": "Display name of the ingest budget."
            },
            "scope": {
              "type": "string",
              "example": "_sourceCategory=*prod*nginx*",
              "maxLength": 1024,
              "minLength": 1,
              "description": "A scope is a constraint that will be used to identify the messages on which budget needs to be applied. A scope is consists of key and value separated by =. The field must be enabled in the fields table. Value supports wildcard. e.g. _sourceCategory=*prod*payment*, cluster=kafka. If the scope is defined _sourceCategory=*nginx* in this budget will be applied on messages having fields _sourceCategory=prod/nginx, _sourceCategory=dev/nginx, or _sourceCategory=dev/nginx/error"
            },
            "action": {
              "type": "string",
              "example": "stopCollecting",
              "pattern": "^(keepCollecting|stopCollecting)$",
              "description": "Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n  * `stopCollecting`\n  * `keepCollecting`",
              "x-pattern-message": "must be either `keepCollecting` or `stopCollecting`"
            },
            "timezone": {
              "type": "string",
              "example": "America/Los_Angeles",
              "description": "Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
            },
            "resetTime": {
              "type": "string",
              "example": "23:30",
              "maxLength": 5,
              "minLength": 5,
              "description": "Reset time of the ingest budget in HH:MM format."
            },
            "description": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 0,
              "description": "Description of the ingest budget."
            },
            "capacityBytes": {
              "type": "integer",
              "format": "int64",
              "example": 1000,
              "minimum": 1,
              "description": "Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit."
            },
            "auditThreshold": {
              "type": "integer",
              "format": "int32",
              "example": 85,
              "maximum": 99,
              "minimum": 1,
              "description": "The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "action",
                "capacityBytes",
                "name",
                "resetTime",
                "scope",
                "timezone"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Developer Budget",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "Display name of the ingest budget."
                },
                "scope": {
                  "type": "string",
                  "example": "_sourceCategory=*prod*nginx*",
                  "maxLength": 1024,
                  "minLength": 1,
                  "description": "A scope is a constraint that will be used to identify the messages on which budget needs to be applied. A scope is consists of key and value separated by =. The field must be enabled in the fields table. Value supports wildcard. e.g. _sourceCategory=*prod*payment*, cluster=kafka. If the scope is defined _sourceCategory=*nginx* in this budget will be applied on messages having fields _sourceCategory=prod/nginx, _sourceCategory=dev/nginx, or _sourceCategory=dev/nginx/error"
                },
                "action": {
                  "type": "string",
                  "example": "stopCollecting",
                  "pattern": "^(keepCollecting|stopCollecting)$",
                  "description": "Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n  * `stopCollecting`\n  * `keepCollecting`",
                  "x-pattern-message": "must be either `keepCollecting` or `stopCollecting`"
                },
                "timezone": {
                  "type": "string",
                  "example": "America/Los_Angeles",
                  "description": "Time zone of the reset time for the ingest budget. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
                },
                "resetTime": {
                  "type": "string",
                  "example": "23:30",
                  "maxLength": 5,
                  "minLength": 5,
                  "description": "Reset time of the ingest budget in HH:MM format."
                },
                "description": {
                  "type": "string",
                  "maxLength": 1024,
                  "minLength": 0,
                  "description": "Description of the ingest budget."
                },
                "capacityBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000,
                  "minimum": 1,
                  "description": "Capacity of the ingest budget, in bytes. It takes a few minutes for Collectors to stop collecting when capacity is reached. We recommend setting a soft limit that is lower than your needed hard limit."
                },
                "auditThreshold": {
                  "type": "integer",
                  "format": "int32",
                  "example": 85,
                  "maximum": 99,
                  "minimum": 1,
                  "description": "The threshold as a percentage of when an ingest budget's capacity usage is logged in the Audit Index."
                }
              }
            },
            {
              "required": [
                "createdAt",
                "createdBy",
                "id",
                "modifiedAt",
                "modifiedBy",
                "version"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0000000003343FDD",
                  "description": "Unique identifier for the ingest budget."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The creation timestamp in UTC of the Ingest Budget."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "The identifier of the user who created the Ingest Budget."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The modified timestamp in UTC of the Ingest Budget."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000001243FDD",
                  "description": "The identifier of the user who modified the Ingest Budget."
                },
                "usageBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 900,
                  "description": "Current usage since the last reset, in bytes."
                },
                "usageStatus": {
                  "type": "string",
                  "example": "Approaching",
                  "pattern": "^(Normal|Approaching|Exceeded|Unknown)$",
                  "description": "Status of the current usage. Can be `Normal`, `Approaching`, `Exceeded`, or `Unknown` (unable to retrieve usage).",
                  "x-pattern-message": "must be either `Normal`, `Approaching`, `Exceeded`, or `Unknown`"
                },
                "budgetVersion": {
                  "type": "integer",
                  "format": "int32",
                  "example": 2,
                  "description": "The version of the Ingest Budget"
                }
              }
            }
          ]
        }
      ]
  updateMetricsSearch:
    description: |-
      Updates a metrics search with the specified identifier. Partial updates are not supported, you must provide values for all fields.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateMetricsSearch
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "description",
            "metricsQueries",
            "timeRange",
            "title"
          ],
          "properties": {
            "title": {
              "type": "string",
              "example": "Short title",
              "pattern": "^[a-zA-Z0-9 +%-@.,_()]+$",
              "maxLength": 255,
              "minLength": 1,
              "description": "Item title in the content library."
            },
            "logQuery": {
              "type": "string",
              "example": "my_metric | timeslice 1m | count by _timeslice",
              "maxLength": 10240,
              "description": "Log query used to add an overlay to the chart."
            },
            "timeRange": {
              "type": "object",
              "example": {
                "from": {
                  "type": "RelativeTimeRangeBoundary",
                  "relativeTime": "-15m"
                },
                "type": "BeginBoundedTimeRange"
              },
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`."
                }
              },
              "discriminator": {
                "propertyName": "type"
              }
            },
            "properties": {
              "type": "string",
              "example": "{ \\\"key\\\": \\\"value\\\" }",
              "description": "Chart properties, like line width, color palette, and the fill missing data method. Leave this field empty to use the defaults.\nThis property contains JSON object encoded as a string.\n"
            },
            "description": {
              "type": "string",
              "example": "Long and detailed description",
              "maxLength": 8192,
              "description": "Item description in the content library."
            },
            "metricsQueries": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "query",
                  "rowId"
                ],
                "properties": {
                  "query": {
                    "type": "string",
                    "example": "my_metric | avg",
                    "description": "Metrics query."
                  },
                  "rowId": {
                    "type": "string",
                    "example": "A",
                    "description": "Row identifier. All row IDs are represented by subsequent upper case letters starting with `A`."
                  }
                },
                "description": "Definition of a metrics query."
              },
              "description": "Metrics queries, up to the maximum of six."
            },
            "desiredQuantizationInSecs": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 60,
              "minimum": 0,
              "description": "Desired quantization in seconds."
            }
          },
          "description": "Definition of a metrics search."
        }
      ]
      outputs: [
        {
          "allOf": [
            {
              "type": "object",
              "required": [
                "description",
                "metricsQueries",
                "timeRange",
                "title"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Short title",
                  "pattern": "^[a-zA-Z0-9 +%-@.,_()]+$",
                  "maxLength": 255,
                  "minLength": 1,
                  "description": "Item title in the content library."
                },
                "logQuery": {
                  "type": "string",
                  "example": "my_metric | timeslice 1m | count by _timeslice",
                  "maxLength": 10240,
                  "description": "Log query used to add an overlay to the chart."
                },
                "timeRange": {
                  "type": "object",
                  "example": {
                    "from": {
                      "type": "RelativeTimeRangeBoundary",
                      "relativeTime": "-15m"
                    },
                    "type": "BeginBoundedTimeRange"
                  },
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`."
                    }
                  },
                  "discriminator": {
                    "propertyName": "type"
                  }
                },
                "properties": {
                  "type": "string",
                  "example": "{ \\\"key\\\": \\\"value\\\" }",
                  "description": "Chart properties, like line width, color palette, and the fill missing data method. Leave this field empty to use the defaults.\nThis property contains JSON object encoded as a string.\n"
                },
                "description": {
                  "type": "string",
                  "example": "Long and detailed description",
                  "maxLength": 8192,
                  "description": "Item description in the content library."
                },
                "metricsQueries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "query",
                      "rowId"
                    ],
                    "properties": {
                      "query": {
                        "type": "string",
                        "example": "my_metric | avg",
                        "description": "Metrics query."
                      },
                      "rowId": {
                        "type": "string",
                        "example": "A",
                        "description": "Row identifier. All row IDs are represented by subsequent upper case letters starting with `A`."
                      }
                    },
                    "description": "Definition of a metrics query."
                  },
                  "description": "Metrics queries, up to the maximum of six."
                },
                "desiredQuantizationInSecs": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "example": 60,
                  "minimum": 0,
                  "description": "Desired quantization in seconds."
                }
              },
              "description": "Definition of a metrics search."
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "000000000000001A",
                  "description": "Identifier of the metrics search."
                },
                "parentId": {
                  "type": "string",
                  "example": "0000000000007D2B",
                  "description": "Identifier of the parent element in the content library, such as folder."
                }
              }
            }
          ]
        }
      ]
  updatePartition:
    description: |-
      Update an existing partition in the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updatePartition
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "isCompliant": {
              "type": "boolean",
              "default": false,
              "example": false,
              "description": "Whether to mark a partition as compliant. Mark a partition as compliant if it contains data used for compliance or audit purpose. Retention for a compliant partition can only be increased and cannot be reduced after the partition marked as compliant. A partition once marked compliant, cannot be marked non-compliant later."
            },
            "retentionPeriod": {
              "type": "integer",
              "example": 365,
              "description": "The number of days to retain data in the partition, or -1 to use the default value for your account. Only relevant if your account has variable retention enabled."
            },
            "routingExpression": {
              "type": "string",
              "example": "_sourcecategory=*/Apache",
              "maxLength": 16384,
              "minLength": 1,
              "description": "The query that defines the data to be included in the partition."
            },
            "reduceRetentionPeriodImmediately": {
              "type": "boolean",
              "default": false,
              "description": "This is required if the newly specified `retentionPeriod` is less than the existing retention period.  In such a situation, a value of `true` says that data between the existing retention period and the new retention period should be deleted immediately; if `false`, such data will be deleted after seven days. This property is optional and ignored if the specified `retentionPeriod` is greater than or equal to the current retention period."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "name",
                "routingExpression"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "apache",
                  "maxLength": 255,
                  "description": "The name of the partition."
                },
                "isCompliant": {
                  "type": "boolean",
                  "default": false,
                  "example": false,
                  "description": "Whether the partition is compliant or not. Mark a partition as compliant if it contains data used for compliance or audit purpose. Retention for a compliant partition can only be increased and cannot be reduced after the partition is marked compliant. A partition once marked compliant, cannot be marked non-compliant later."
                },
                "analyticsTier": {
                  "type": "string",
                  "default": "continuous",
                  "example": "continuous",
                  "pattern": "^(frequent|infrequent|continuous)$",
                  "description": "The Data Tier where the data in the partition will reside. Possible values are:\n              1. `continuous`\n              2. `frequent`\n              3. `infrequent`\nNote: The \"infrequent\" and \"frequent\" tiers are only to available Cloud Flex Credits Enterprise Suite accounts.",
                  "x-pattern-message": "must be one of `continuous`, `frequent` or `infrequent`"
                },
                "retentionPeriod": {
                  "type": "integer",
                  "default": -1,
                  "example": 365,
                  "description": "The number of days to retain data in the partition, or -1 to use the default value for your account.  Only relevant if your account has variable retention enabled."
                },
                "routingExpression": {
                  "type": "string",
                  "example": "_sourcecategory=*/Apache",
                  "maxLength": 16384,
                  "minLength": 1,
                  "description": "The query that defines the data to be included in the partition."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id",
                "totalBytes"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1",
                  "description": "Unique identifier for the partition."
                },
                "isActive": {
                  "type": "boolean",
                  "description": "This has the value `true` if the partition is active and `false` if it has been decommissioned."
                },
                "indexType": {
                  "type": "string",
                  "example": "Partition",
                  "pattern": "^(DefaultIndex|AuditIndex|Partition)$",
                  "description": "This has the value `DefaultIndex`, `AuditIndex`or `Partition` depending upon the type of partition."
                },
                "totalBytes": {
                  "type": "integer",
                  "format": "int64",
                  "example": 42,
                  "description": "Size of data in partition in bytes."
                },
                "dataForwardingId": {
                  "type": "string",
                  "description": "Id of the data forwarding configuration to be used by the partition."
                },
                "newRetentionPeriod": {
                  "type": "integer",
                  "format": "int32",
                  "example": 300,
                  "description": "If the retentionPeriod is scheduled to be updated in the future (i.e., if retentionPeriod is previously reduced with value of reduceRetentionPeriodImmediately as false), this property gives the future value of retentionPeriod while retentionPeriod gives the current value. retentionPeriod will take up the value of newRetentionPeriod after the scheduled time."
                },
                "retentionEffectiveAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "When the newRetentionPeriod will become effective in UTC format."
                }
              }
            }
          ]
        }
      ]
  updateRole:
    description: |-
      Update an existing role in the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateRole
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "capabilities",
            "description",
            "filterPredicate",
            "name",
            "users"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "DataAdmin",
              "maxLength": 128,
              "minLength": 1,
              "description": "Name of the role."
            },
            "users": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "0000000006743FE0",
                "0000000005FCE0EE"
              ],
              "description": "List of user identifiers to assign the role to."
            },
            "description": {
              "type": "string",
              "example": "Manage data of the org.",
              "maxLength": 255,
              "minLength": 0,
              "description": "Description of the role."
            },
            "capabilities": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "manageContent",
                "manageDataVolumeFeed",
                "manageFieldExtractionRules",
                "manageS3DataForwarding"
              ],
              "description": "List of [capabilities](https://help.sumologic.com/Manage/Users-and-Roles/Manage-Roles/Role-Capabilities) associated with this role. Valid values are\n### Data Management\n  - viewCollectors\n  - manageCollectors\n  - manageBudgets\n  - manageDataVolumeFeed\n  - viewFieldExtraction\n  - manageFieldExtractionRules\n  - manageS3DataForwarding\n  - manageContent\n  - dataVolumeIndex\n  - viewConnections\n  - manageConnections\n  - viewScheduledViews\n  - manageScheduledViews\n  - viewPartitions\n  - managePartitions\n  - viewFields\n  - manageFields\n  - viewAccountOverview\n  - manageTokens\n  - manageDataStreams\n\n### Entity management\n  - manageEntityTypeConfig\n\n### Metrics\n  - manageMonitors\n  - metricsTransformation\n  - metricsExtraction\n  - metricsRules\n\n### Security\n  - managePasswordPolicy\n  - ipAllowlisting\n  - createAccessKeys\n  - manageAccessKeys\n  - manageSupportAccountAccess\n  - manageAuditDataFeed\n  - manageSaml\n  - shareDashboardOutsideOrg\n  - manageOrgSettings\n  - changeDataAccessLevel\n\n### Dashboards\n  - shareDashboardWorld\n  - shareDashboardAllowlist\n\n### UserManagement\n  - manageUsersAndRoles\n\n### Observability\n  - searchAuditIndex\n  - auditEventIndex\n\n### Cloud SIEM Enterprise\n  - viewCse\n\n### Monitors (New)\n  - viewMonitorsV2\n  - manageMonitorsV2"
            },
            "filterPredicate": {
              "type": "string",
              "example": "!_sourceCategory=billing",
              "description": "A search filter to restrict access to specific logs. The filter is silently added to the beginning of each query a user runs. For example, using '!_sourceCategory=billing' as a filter predicate will prevent users assigned to the role from viewing logs from the source category named 'billing'."
            },
            "autofillDependencies": {
              "type": "boolean",
              "default": true,
              "description": "Set this to true if you want to automatically append all missing capability requirements. If set to false an error will be thrown if any capabilities are missing their dependencies."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "DataAdmin",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "Name of the role."
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "0000000006743FE0",
                    "0000000005FCE0EE"
                  ],
                  "description": "List of user identifiers to assign the role to."
                },
                "description": {
                  "type": "string",
                  "example": "Manage data of the org.",
                  "maxLength": 255,
                  "minLength": 0,
                  "description": "Description of the role."
                },
                "capabilities": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "manageContent",
                    "manageDataVolumeFeed",
                    "manageFieldExtractionRules",
                    "manageS3DataForwarding"
                  ],
                  "description": "List of [capabilities](https://help.sumologic.com/Manage/Users-and-Roles/Manage-Roles/Role-Capabilities) associated with this role. Valid values are\n### Data Management\n  - viewCollectors\n  - manageCollectors\n  - manageBudgets\n  - manageDataVolumeFeed\n  - viewFieldExtraction\n  - manageFieldExtractionRules\n  - manageS3DataForwarding\n  - manageContent\n  - dataVolumeIndex\n  - viewConnections\n  - manageConnections\n  - viewScheduledViews\n  - manageScheduledViews\n  - viewPartitions\n  - managePartitions\n  - viewFields\n  - manageFields\n  - viewAccountOverview\n  - manageTokens\n  - manageDataStreams\n\n### Entity management\n  - manageEntityTypeConfig\n\n### Metrics\n  - manageMonitors\n  - metricsTransformation\n  - metricsExtraction\n  - metricsRules\n\n### Security\n  - managePasswordPolicy\n  - ipAllowlisting\n  - createAccessKeys\n  - manageAccessKeys\n  - manageSupportAccountAccess\n  - manageAuditDataFeed\n  - manageSaml\n  - shareDashboardOutsideOrg\n  - manageOrgSettings\n  - changeDataAccessLevel\n\n### Dashboards\n  - shareDashboardWorld\n  - shareDashboardAllowlist\n\n### UserManagement\n  - manageUsersAndRoles\n\n### Observability\n  - searchAuditIndex\n  - auditEventIndex\n\n### Cloud SIEM Enterprise\n  - viewCse\n\n### Monitors (New)\n  - viewMonitorsV2\n  - manageMonitorsV2"
                },
                "filterPredicate": {
                  "type": "string",
                  "example": "!_sourceCategory=billing",
                  "description": "A search filter to restrict access to specific logs. The filter is silently added to the beginning of each query a user runs. For example, using '!_sourceCategory=billing' as a filter predicate will prevent users assigned to the role from viewing logs from the source category named 'billing'."
                },
                "autofillDependencies": {
                  "type": "boolean",
                  "default": true,
                  "description": "Set this to true if you want to automatically append all missing capability requirements. If set to false an error will be thrown if any capabilities are missing their dependencies."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0000000000E20FE3",
                  "description": "Unique identifier for the role."
                },
                "systemDefined": {
                  "type": "boolean",
                  "example": false,
                  "description": "Role is system or user defined."
                }
              }
            }
          ],
          "x-tf-resource-name": "Role",
          "x-tf-generated-properties": "id,name,description,filterPredicate,capabilities"
        }
      ]
  updateScheduledView:
    description: |-
      Update an existing scheduled view.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateScheduledView
    example:
      inputs: [
        {
          "type": "object",
          "properties": {
            "retentionPeriod": {
              "type": "integer",
              "format": "int32",
              "default": -1,
              "example": 365,
              "description": "The number of days to retain data in the scheduled view, or -1 to use the default value for your account.  Only relevant if your account has multi-retention. enabled."
            },
            "dataForwardingId": {
              "type": "string",
              "description": "An optional ID of a data forwarding configuration to be used by the scheduled view."
            },
            "reduceRetentionPeriodImmediately": {
              "type": "boolean",
              "default": false,
              "description": "This is required if the newly specified `retentionPeriod` is less than the existing retention period.  In such a situation, a value of `true` says that data between the existing retention period and the new retention period should be deleted immediately; if `false`, such data will be deleted after seven days. This property is optional and ignored if the specified `retentionPeriod` is greater than or equal to the current retention period."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "indexName",
                "query",
                "startTime",
                "store"
              ],
              "properties": {
                "query": {
                  "type": "string",
                  "example": "_sourcecategory=*/Apache",
                  "maxLength": 16384,
                  "minLength": 1,
                  "description": "The query that defines the data to be included in the scheduled view."
                },
                "indexName": {
                  "type": "string",
                  "example": "TestScheduledView",
                  "maxLength": 255,
                  "minLength": 0,
                  "description": "Name of the index for the scheduled view."
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "parsingMode": {
                  "type": "string",
                  "default": "Manual",
                  "example": "AutoParse",
                  "pattern": "^(AutoParse|Manual)$",
                  "description": "Define the parsing mode to scan the JSON format log messages. Possible values are:\n  1. `AutoParse`\n  2. `Manual`\nIn AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).",
                  "x-pattern-message": "should be either AutoParse or Manual"
                },
                "retentionPeriod": {
                  "type": "integer",
                  "format": "int32",
                  "default": -1,
                  "example": 365,
                  "description": "The number of days to retain data in the scheduled view, or -1 to use the default value for your account.  Only relevant if your account has multi-retention. enabled."
                },
                "dataForwardingId": {
                  "type": "string",
                  "description": "An optional ID of a data forwarding configuration to be used by the scheduled view."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Identifier for the scheduled view."
                },
                "error": {
                  "type": "string",
                  "description": "Errors related to the scheduled view."
                },
                "status": {
                  "type": "string",
                  "description": "Status of the scheduled view."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC."
                },
                "createdBy": {
                  "type": "string",
                  "description": "Identifier of the user who created the scheduled view."
                },
                "totalBytes": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total storage consumed by the scheduled view."
                },
                "totalMessageCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Total number of messages for the scheduled view."
                },
                "createdByOptimizeIt": {
                  "type": "boolean",
                  "description": "If the scheduled view is created by OptimizeIt."
                }
              }
            }
          ],
          "x-tf-generated-properties": "id,query,indexName,startTime,retentionPeriod,parsingMode"
        }
      ]
  updateSubdomain:
    description: |-
      Update a subdomain. Only the Account Owner can update the subdomain.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateSubdomain
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "subdomain"
          ],
          "properties": {
            "subdomain": {
              "type": "string",
              "example": "my-company",
              "pattern": "^(?!xn--)[a-z]([a-z0-9-]*[a-z0-9])?$",
              "maxLength": 63,
              "minLength": 4,
              "description": "The new subdomain."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "createdAt",
            "createdBy",
            "modifiedAt",
            "modifiedBy",
            "subdomain",
            "url"
          ],
          "properties": {
            "url": {
              "type": "string",
              "example": "https://your-company.sumologic.com",
              "description": "Login URL corresponding to the subdomain."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.\n"
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "subdomain": {
              "type": "string",
              "example": "my-company",
              "description": "The new subdomain."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            }
          }
        }
      ]
  updateTable:
    description: |-
      Edit the lookup table data. All the fields are mandatory in the request.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateTable
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "description",
            "ttl"
          ],
          "properties": {
            "ttl": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 100,
              "maximum": 525600,
              "minimum": 0,
              "description": "A time to live for each entry in the lookup table (in minutes). 0 is a special value. A TTL of 0 implies entry will never be deleted from the table."
            },
            "description": {
              "type": "string",
              "example": "This is a sample lookup table description.",
              "maxLength": 1000,
              "description": "The description of the lookup table. The description cannot be blank."
            },
            "sizeLimitAction": {
              "type": "string",
              "default": "StopIncomingMessages",
              "example": "DeleteOldData",
              "description": "The action that needs to be taken when the size limit is reached for the table. The possible values can be `StopIncomingMessages` or `DeleteOldData`. DeleteOldData will starting deleting old data once size limit is reached whereas StopIncomingMessages will discard all the updates made to the lookup table once size limit is reached."
            }
          },
          "description": "The updated lookup table parameters."
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "description",
                    "fields",
                    "primaryKeys"
                  ],
                  "properties": {
                    "ttl": {
                      "type": "integer",
                      "format": "int32",
                      "default": 0,
                      "example": 100,
                      "maximum": 525600,
                      "minimum": 0,
                      "description": "A time to live for each entry in the lookup table (in minutes). 365 days is the maximum time to live for each entry that you can specify. Setting it to 0 means that the records will not expire automatically."
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "fieldName",
                          "fieldType"
                        ],
                        "properties": {
                          "fieldName": {
                            "type": "string",
                            "example": "FieldName1",
                            "description": "The name of the field."
                          },
                          "fieldType": {
                            "type": "string",
                            "example": "boolean",
                            "pattern": "^(boolean|int|long|double|string)$",
                            "description": "The data type of the field. Supported types:\n  - `boolean`\n  - `int`\n  - `long`\n  - `double`\n  - `string`",
                            "x-pattern-message": "must be one of the following: `boolean`, `int`, `long`, `double`, `string`"
                          }
                        },
                        "description": "The definition of the field."
                      },
                      "minItems": 1,
                      "description": "The list of fields in the lookup table."
                    },
                    "description": {
                      "type": "string",
                      "example": "This is a sample lookup table description.",
                      "maxLength": 1000,
                      "description": "The description of the lookup table."
                    },
                    "primaryKeys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "FieldName1"
                      ],
                      "minItems": 1,
                      "description": "The names of the fields that make up the primary key for the lookup table. These will be a subset of the fields that the table will contain.",
                      "uniqueItems": true
                    },
                    "sizeLimitAction": {
                      "type": "string",
                      "default": "StopIncomingMessages",
                      "example": "DeleteOldData",
                      "pattern": "^(StopIncomingMessages|DeleteOldData)$",
                      "description": "The action that needs to be taken when the size limit is reached for the table. The possible values can be `StopIncomingMessages` or `DeleteOldData`. DeleteOldData will start deleting old data once size limit is reached whereas StopIncomingMessages will discard all the updates made to the lookup table once size limit is reached.",
                      "x-pattern-message": "must be either `StopIncomingMessages` or `DeleteOldData`"
                    }
                  },
                  "description": "The lookup table definition independent of its location in the Library and name."
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "SampleLookupTable",
                      "maxLength": 255,
                      "description": "The name of the lookup table."
                    },
                    "parentFolderId": {
                      "type": "string",
                      "example": "0000000001C41EE4",
                      "description": "The parent-folder-path identifier of the lookup table in the Library."
                    }
                  }
                }
              ],
              "required": [
                "name",
                "parentFolderId"
              ],
              "description": "Definition of the lookup table."
            },
            {
              "properties": {
                "id": {
                  "type": "string",
                  "example": "0000000001C41EE4",
                  "description": "Identifier of the lookup table as a content item."
                },
                "size": {
                  "type": "integer",
                  "format": "int64",
                  "example": 100,
                  "description": "The current size of the lookup table in bytes"
                },
                "contentPath": {
                  "type": "string",
                  "example": "/Library/Users/johndoe@acme.com/lookupTable",
                  "description": "Address/path of the parent folder of this lookup table in content library. For example, a lookup table existing  in the personal/lookupTable folder for user johndoe would be: /Library/Users/johndoe@acme.com/lookupTable"
                }
              }
            }
          ],
          "required": [
            "id"
          ],
          "description": "Lookup table definition and metadata."
        }
      ]
  updateTableRow:
    description: |-
      Insert or update a row of a lookup table with the given identifier. A new row is inserted if the primary key does not exist already, otherwise the existing row with the specified primary key is updated. All the fields of the lookup table are required and will be updated to the given values. In case a field is not specified then it will be assumed to be set to null. If the table size exceeds the maximum limit of 100MB then based on the size limit action of the table the update will be processed or discarded.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateTableRow
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "row"
          ],
          "properties": {
            "row": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "columnName",
                  "columnValue"
                ],
                "properties": {
                  "columnName": {
                    "type": "string",
                    "example": "user_id",
                    "description": "Name of the column of the table."
                  },
                  "columnValue": {
                    "type": "string",
                    "example": "user1",
                    "description": "Value of the specified column."
                  }
                },
                "description": "Lookup table row column and column value."
              },
              "maxItems": 1000,
              "description": "A list of all the field identifiers and their corresponding values."
            }
          },
          "description": "Lookup table data to be uploaded."
        }
      ]
      outputs: [
        {}
      ]
  updateToken:
    description: |-
      Update a token with the given identifier in the token library.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateToken
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "name",
            "status",
            "type",
            "version"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "token-name",
              "maxLength": 255,
              "minLength": 1,
              "description": "Name of the token."
            },
            "type": {
              "type": "string",
              "example": "CollectorRegistration",
              "pattern": "^(CollectorRegistration)$",
              "description": "Type of the token. Valid values: 1) CollectorRegistration",
              "x-pattern-message": "must be `CollectorRegistration`"
            },
            "status": {
              "type": "string",
              "example": "Active",
              "pattern": "^(Active|Inactive)$",
              "description": "Status of the token. Can be `Active`, or `Inactive`.",
              "x-pattern-message": "must be either `Active` or `Inactive`"
            },
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "Version of the token."
            },
            "description": {
              "type": "string",
              "example": "token description: for test.",
              "maxLength": 4096,
              "minLength": 0,
              "description": "Description of the token."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "createdAt",
            "createdBy",
            "description",
            "id",
            "modifiedAt",
            "modifiedBy",
            "name",
            "status",
            "type",
            "version"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the token."
            },
            "name": {
              "type": "string",
              "example": "token-name",
              "maxLength": 255,
              "minLength": 1,
              "description": "Name of the token."
            },
            "type": {
              "type": "string",
              "example": "CollectorRegistrationTokenResponse",
              "pattern": "^(CollectorRegistrationTokenResponse)$",
              "description": "Type of the token. Valid values: 1) CollectorRegistrationTokenResponse",
              "x-pattern-message": "must be `CollectorRegistrationTokenResponse`"
            },
            "status": {
              "type": "string",
              "example": "Active",
              "pattern": "^(Active|Inactive)$",
              "description": "Status of the token. Can be `Active`, or `Inactive`.",
              "x-pattern-message": "must be either `Active` or `Inactive`"
            },
            "version": {
              "type": "integer",
              "format": "int64",
              "description": "Version of the token."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
            },
            "createdBy": {
              "type": "string",
              "description": "Identifier of the user who created the resource."
            },
            "modifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last modification timestamp in UTC."
            },
            "modifiedBy": {
              "type": "string",
              "description": "Identifier of the user who last modified the resource."
            },
            "description": {
              "type": "string",
              "example": "token description: for test.",
              "maxLength": 4096,
              "minLength": 0,
              "description": "Description of the token."
            }
          },
          "discriminator": {
            "propertyName": "type"
          }
        }
      ]
  updateTransformationRule:
    description: |-
      Update an existing transformation rule. All properties specified in the request are replaced. Missing properties will remain the same.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateTransformationRule
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "enabled",
            "ruleDefinition"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "example": true,
              "description": "True if the rule is enabled."
            },
            "ruleDefinition": {
              "type": "object",
              "required": [
                "name",
                "retention",
                "selector"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Transformation Rule 1",
                  "description": "Name of the transformation rule."
                },
                "selector": {
                  "type": "string",
                  "example": "_sourceCategory=metricsstore",
                  "description": "Selector of the transformation rule."
                },
                "retention": {
                  "type": "integer",
                  "format": "int64",
                  "default": 400,
                  "example": 8,
                  "description": "Retention period in days for the metrics that are selected by the selector. The supported retention periods for selected metrics are 8 days, 400 days, and 0 (Do not store) if this rule contains dimension transformation."
                },
                "dimensionTransformations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "transformationType"
                    ],
                    "properties": {
                      "transformationType": {
                        "type": "string",
                        "description": "This is the base type of all dimension transformations."
                      }
                    },
                    "description": "Base class of all transformation types.",
                    "discriminator": {
                      "propertyName": "transformationType"
                    }
                  },
                  "default": [],
                  "example": [
                    {
                      "aggregateOn": [
                        "metric"
                      ],
                      "transformationType": "AggregateOnTransformation"
                    },
                    {
                      "value": "{{metric}}_aggregated",
                      "dimensionToReplace": "metric",
                      "transformationType": "AddOrReplaceTransformation"
                    }
                  ],
                  "description": "Dimension transformations of the transformation rule."
                },
                "transformedMetricsRetention": {
                  "type": "integer",
                  "format": "int64",
                  "default": 0,
                  "example": 8,
                  "description": "Retention period in days for the transformed metrics that are generated by this rule. The supported retention periods for transformed metrics are 8 days, and 400 days. If no dimension transformations are defined, this value will be set to 0."
                }
              },
              "description": "The properties that define a transformation rule."
            }
          },
          "description": "A request for creating or updating a transformation rule."
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "enabled",
                "ruleDefinition"
              ],
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "example": true,
                  "description": "True if the rule is enabled."
                },
                "ruleDefinition": {
                  "type": "object",
                  "required": [
                    "name",
                    "retention",
                    "selector"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Transformation Rule 1",
                      "description": "Name of the transformation rule."
                    },
                    "selector": {
                      "type": "string",
                      "example": "_sourceCategory=metricsstore",
                      "description": "Selector of the transformation rule."
                    },
                    "retention": {
                      "type": "integer",
                      "format": "int64",
                      "default": 400,
                      "example": 8,
                      "description": "Retention period in days for the metrics that are selected by the selector. The supported retention periods for selected metrics are 8 days, 400 days, and 0 (Do not store) if this rule contains dimension transformation."
                    },
                    "dimensionTransformations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "transformationType"
                        ],
                        "properties": {
                          "transformationType": {
                            "type": "string",
                            "description": "This is the base type of all dimension transformations."
                          }
                        },
                        "description": "Base class of all transformation types.",
                        "discriminator": {
                          "propertyName": "transformationType"
                        }
                      },
                      "default": [],
                      "example": [
                        {
                          "aggregateOn": [
                            "metric"
                          ],
                          "transformationType": "AggregateOnTransformation"
                        },
                        {
                          "value": "{{metric}}_aggregated",
                          "dimensionToReplace": "metric",
                          "transformationType": "AddOrReplaceTransformation"
                        }
                      ],
                      "description": "Dimension transformations of the transformation rule."
                    },
                    "transformedMetricsRetention": {
                      "type": "integer",
                      "format": "int64",
                      "default": 0,
                      "example": 8,
                      "description": "Retention period in days for the transformed metrics that are generated by this rule. The supported retention periods for transformed metrics are 8 days, and 400 days. If no dimension transformations are defined, this value will be set to 0."
                    }
                  },
                  "description": "The properties that define a transformation rule."
                }
              },
              "description": "A request for creating or updating a transformation rule."
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the transformation rule."
                }
              }
            }
          ],
          "description": "A generic response for transformation rule."
        }
      ]
  updateUser:
    description: |-
      Update an existing user in the organization.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/updateUser
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "firstName",
            "isActive",
            "lastName",
            "roleIds"
          ],
          "properties": {
            "roleIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "00000000000001DF",
                "00000000000002D2"
              ],
              "description": "List of role identifiers associated with the user."
            },
            "isActive": {
              "type": "boolean",
              "example": true,
              "description": "This has the value `true` if the user is active and `false` if they have been deactivated."
            },
            "lastName": {
              "type": "string",
              "example": "Doe",
              "maxLength": 128,
              "minLength": 0,
              "description": "Last name of the user."
            },
            "firstName": {
              "type": "string",
              "example": "John",
              "maxLength": 128,
              "minLength": 1,
              "description": "First name of the user."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "required": [
                "email",
                "firstName",
                "lastName",
                "roleIds"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "johndoe@acme.com",
                  "maxLength": 255,
                  "description": "Email address of the user."
                },
                "roleIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "00000000000001DF",
                    "00000000000002D2"
                  ],
                  "description": "List of roleIds associated with the user."
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe",
                  "maxLength": 128,
                  "minLength": 0,
                  "description": "Last name of the user."
                },
                "firstName": {
                  "type": "string",
                  "example": "John",
                  "maxLength": 128,
                  "minLength": 1,
                  "description": "First name of the user."
                }
              }
            },
            {
              "type": "object",
              "required": [
                "createdAt",
                "createdBy",
                "modifiedAt",
                "modifiedBy"
              ],
              "properties": {
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format."
                },
                "createdBy": {
                  "type": "string",
                  "example": "0000000006743FDD",
                  "description": "Identifier of the user who created the resource."
                },
                "modifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp in UTC."
                },
                "modifiedBy": {
                  "type": "string",
                  "example": "0000000006743FE8",
                  "description": "Identifier of the user who last modified the resource."
                }
              }
            },
            {
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "000000000FE20FE2",
                  "description": "Unique identifier for the user."
                },
                "isActive": {
                  "type": "boolean",
                  "example": true,
                  "description": "True if the user is active."
                },
                "isLocked": {
                  "type": "boolean",
                  "example": false,
                  "description": "This has the value `true` if the user's account has been locked. If a user tries to log into their account several times and fails, his or her account will be locked for security reasons."
                },
                "isMfaEnabled": {
                  "type": "boolean",
                  "example": false,
                  "description": "True if multi factor authentication is enabled for the user."
                },
                "lastLoginTimestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the last login for the user in UTC. Will be null if the user has never logged in."
                }
              }
            }
          ]
        }
      ]
  uploadFile:
    description: |-
      Create a request to populate a lookup table with a CSV file.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/uploadFile
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "file"
          ],
          "properties": {
            "file": {
              "type": "string",
              "format": "binary",
              "description": "The CSV file to upload.\n  - The size limit for the CSV file is 100MB.\n  - Use Unix format, with newlines (\"\\n\") separating rows.\n  - The first row should contain headers that match the lookup table schema. Matching is\n    case-insensitive."
            }
          }
        }
      ]
      outputs: [
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string",
              "example": "0000000001C41EF2",
              "description": "The identifier used to track the request."
            }
          },
          "description": "Allows you to track the status of an upload or export request."
        }
      ]
  validateMonitorQueries:
    description: |-
      Validate the query strings to make sure they are valid monitor queries.
    versions:
      from: 1.0.0
    link: https://api.sumologic.com/docs/#operation/validateMonitorQueries
    example:
      inputs: [
        {
          "type": "object",
          "required": [
            "monitorType",
            "queries",
            "timeRange"
          ],
          "properties": {
            "queries": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "query",
                  "rowId"
                ],
                "properties": {
                  "query": {
                    "type": "string",
                    "example": "_sourceCategory=search error | timeslice 1m | count by _timeslice | outlier _count window=5,threshold=3,consecutive=2,direction=+",
                    "description": "The logs or metrics query that defines the stream of data the monitor runs on."
                  },
                  "rowId": {
                    "type": "string",
                    "example": "A",
                    "description": "The unique identifier of the row. Defaults to sequential capital letters, `A`, `B`, `C`, etc."
                  }
                },
                "description": "A search query."
              },
              "description": "Queries to be validated."
            },
            "timeRange": {
              "type": "string",
              "example": "15m",
              "description": "The relative time range of the monitor."
            },
            "monitorType": {
              "type": "string",
              "example": "Logs",
              "pattern": "^(Logs|Metrics)$",
              "description": "The type of monitor. Valid values:\n  1. `Logs`: A logs query monitor.\n  2. `Metrics`: A metrics query monitor.",
              "x-pattern-message": "should be either 'Logs' or 'Metrics'"
            }
          },
          "description": "Queries to be validated."
        }
      ]
      outputs: [
        {
          "type": "object",
          "properties": {
            "isValid": {
              "type": "boolean",
              "example": false,
              "description": "Whether or not if queries are valid."
            },
            "message": {
              "type": "string",
              "default": "",
              "example": "Field fieldName not found, please check the spelling and try again.",
              "description": "Message from validation."
            }
          },
          "description": "Validation result for the monitor queries."
        }
      ]