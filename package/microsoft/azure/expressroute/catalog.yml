Product:
  name: Azure Express Route
  versions: [2019.12.1,2020.11.1]
  package: microsoft.azure.expressroute
  description: |-
    ExpressRoute
  link: https://docs.microsoft.com/en-us/azure/expressroute/
  contentType: json
Operations:
  BgpServiceCommunities.List:
    description: |-
      Gets all the available bgp service communities.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/bgpservicecommunities/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/providers/Microsoft.Network/bgpServiceCommunities/skype",
              "name": "skype",
              "type": "Microsoft.Network/bgpServiceCommunities",
              "properties": {
                "serviceName": "skype",
                "bgpCommunities": [
                  {
                    "serviceGroup": "O365",
                    "communityName": "Skype For Business Online",
                    "communityValue": "12076:5030",
                    "communityPrefixes": [
                      "13.67.56.225/32",
                      "13.67.186.105/32"
                    ],
                    "isAuthorizedToUse": true,
                    "serviceSupportedRegion": "Global"
                  }
                ]
              }
            },
            {
              "id": "/subscriptions/subid/providers/Microsoft.Network/bgpServiceCommunities/exchange",
              "name": "exchange",
              "type": "Microsoft.Network/bgpServiceCommunities",
              "properties": {
                "serviceName": "exchange",
                "bgpCommunities": [
                  {
                    "serviceGroup": "O365",
                    "communityName": "Exchange Online",
                    "communityValue": "12076:5040",
                    "communityPrefixes": [
                      "13.67.56.225/32",
                      "13.67.186.105/32"
                    ],
                    "isAuthorizedToUse": true,
                    "serviceSupportedRegion": "Global"
                  }
                ]
              }
            }
          ]
        }
      ]
  ExpressRouteCircuitAuthorizations.CreateOrUpdate:
    description: |-
      Creates or updates an authorization in the specified express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuitauthorizations/createorupdate
    example:
      inputs: [
        {
          "properties": {}
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName/authorizations/authorizationName",
          "etag": "W/\"e22dd4b2-4c24-44cf-b702-70a472b62914\"",
          "name": "authorizationName",
          "properties": {
            "provisioningState": "Updating",
            "authorizationUseStatus": "Available"
          }
        }
      ]
  ExpressRouteCircuitAuthorizations.Delete:
    description: |-
      Deletes the specified authorization from the specified express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuitauthorizations/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ExpressRouteCircuitAuthorizations.Get:
    description: |-
      Gets the specified authorization from the specified express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuitauthorizations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName/authorizations/MyAuthorization1",
          "etag": "W/\"e33c875f-48df-4a91-b7d3-eb95b5ddbb89\"",
          "name": "MyAuthorization1",
          "type": "Microsoft.Network/expressRouteCircuits/authorizations",
          "properties": {
            "authorizationKey": "authKey",
            "provisioningState": "Succeeded",
            "authorizationUseStatus": "Available"
          }
        }
      ]
  ExpressRouteCircuitAuthorizations.List:
    description: |-
      Gets all authorizations in an express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuitauthorizations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName/authorizations/MyAuthorization1",
              "etag": "W/\"e33c875f-48df-4a91-b7d3-eb95b5ddbb89\"",
              "name": "MyAuthorization1",
              "properties": {
                "authorizationKey": "authKey",
                "provisioningState": "Succeeded",
                "authorizationUseStatus": "Available"
              }
            }
          ]
        }
      ]
  ExpressRouteCircuitConnections.CreateOrUpdate:
    description: |-
      Creates or updates a Express Route Circuit Connection in the specified express route circuits.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuitconnections/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "addressPrefix": "10.0.0.0/29",
            "authorizationKey": "946a1918-b7a2-4917-b43c-8c4cdaee006a",
            "expressRouteCircuitPeering": {
              "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"
            },
            "ipv6CircuitConnectionConfig": {
              "addressPrefix": "aa:bb::/125"
            },
            "peerExpressRouteCircuitPeering": {
              "id": "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/connections/circuitConnectionUSAUS",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "circuitConnectionUSAUS",
          "properties": {
            "addressPrefix": "10.0.0.0/24",
            "authorizationKey": "946a1918-b7a2-4917-b43c-8c4cdaee006a",
            "provisioningState": "Succeeded",
            "circuitConnectionStatus": "Connected",
            "expressRouteCircuitPeering": {
              "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"
            },
            "ipv6CircuitConnectionConfig": {
              "addressPrefix": "aa:bb::1/125",
              "circuitConnectionStatus": "Connected"
            },
            "peerExpressRouteCircuitPeering": {
              "id": "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering"
            }
          }
        }
      ]
  ExpressRouteCircuitConnections.Delete:
    description: |-
      Deletes the specified Express Route Circuit Connection from the specified express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuitconnections/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ExpressRouteCircuitConnections.Get:
    description: |-
      Gets the specified Express Route Circuit Connection from the specified express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuitconnections/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/connections/circuitConnectionUSAUS",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "circuitConnectionUSAUS",
          "type": "Microsoft.Network/expressRouteCircuits/peerings/connections",
          "properties": {
            "addressPrefix": "10.0.0.0/24",
            "authorizationKey": "946a1918-b7a2-4917-b43c-8c4cdaee006a",
            "provisioningState": "Succeeded",
            "circuitConnectionStatus": "Connected",
            "expressRouteCircuitPeering": {
              "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"
            },
            "ipv6CircuitConnectionConfig": {
              "addressPrefix": "aa:bb::1/125",
              "circuitConnectionStatus": "Connected"
            },
            "peerExpressRouteCircuitPeering": {
              "id": "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering"
            }
          }
        }
      ]
  ExpressRouteCircuitConnections.List:
    description: |-
      Gets all global reach connections associated with a private peering in an express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuitconnections/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/connections/circuitConnectionUSAUS",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "circuitConnectionUSAUS",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "authorizationKey": "946a1918-b7a2-4917-b43c-8c4cdaee006a",
                "provisioningState": "Succeeded",
                "circuitConnectionStatus": "Connected",
                "expressRouteCircuitPeering": {
                  "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"
                },
                "ipv6CircuitConnectionConfig": {
                  "addressPrefix": "aa:bb::1/125",
                  "circuitConnectionStatus": "Connected"
                },
                "peerExpressRouteCircuitPeering": {
                  "id": "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering"
                }
              }
            },
            {
              "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/connections/circuitConnectionUSEUR",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "circuitConnectionUSEUR",
              "properties": {
                "addressPrefix": "20.0.0.0/24",
                "provisioningState": "Succeeded",
                "circuitConnectionStatus": "Connected",
                "expressRouteCircuitPeering": {
                  "id": "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"
                },
                "peerExpressRouteCircuitPeering": {
                  "id": "/subscriptions/subid1/resourceGroups/dedharckteurope/providers/Microsoft.Network/expressRouteCircuits/dedharcktams/peerings/AzurePrivatePeering"
                }
              }
            }
          ]
        }
      ]
  ExpressRouteCircuitPeerings.CreateOrUpdate:
    description: |-
      Creates or updates a peering in the specified express route circuits.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuitpeerings/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "vlanId": 200,
            "peerASN": 200,
            "primaryPeerAddressPrefix": "192.168.16.252/30",
            "secondaryPeerAddressPrefix": "192.168.18.252/30"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering",
          "etag": "W/\"72090554-7e3b-43f2-80ad-99a9020dcb11\"",
          "name": "AzurePrivatePeering",
          "properties": {
            "state": "Enabled",
            "vlanId": 200,
            "peerASN": 200,
            "azureASN": 12076,
            "peeringType": "AzurePrivatePeering",
            "lastModifiedBy": "Customer",
            "primaryAzurePort": "",
            "ipv6PeeringConfig": {
              "state": "Enabled",
              "primaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::/126",
              "secondaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::4/126"
            },
            "provisioningState": "Succeeded",
            "gatewayManagerEtag": "",
            "secondaryAzurePort": "",
            "expressRouteConnection": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName/expressRouteConnections/connectionName"
            },
            "primaryPeerAddressPrefix": "192.168.16.252/30",
            "secondaryPeerAddressPrefix": "192.168.18.252/30"
          }
        }
      ]
  ExpressRouteCircuitPeerings.Delete:
    description: |-
      Deletes the specified peering from the specified express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuitpeerings/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ExpressRouteCircuitPeerings.Get:
    description: |-
      Gets the specified peering for the express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuitpeerings/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/MicrosoftPeering",
          "etag": "W/\"b2a25b98-2e6d-4d46-87f2-089de5f6fdf9\"",
          "name": "MicrosoftPeering",
          "type": "Microsoft.Network/expressRouteCircuits/peerings",
          "properties": {
            "state": "Enabled",
            "vlanId": 300,
            "peerASN": 100,
            "azureASN": 12076,
            "peeringType": "MicrosoftPeering",
            "routeFilter": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName"
            },
            "lastModifiedBy": "Customer",
            "primaryAzurePort": "A51-TEST-06GMR-CIS-1-PRI-A",
            "ipv6PeeringConfig": {
              "state": "Enabled",
              "microsoftPeeringConfig": {
                "legacyMode": 0,
                "customerASN": 23,
                "routingRegistryName": "ARIN",
                "advertisedCommunities": [],
                "advertisedPublicPrefixes": [
                  "3FFE:FFFF:0:CD31::/120"
                ],
                "advertisedPublicPrefixesState": "ValidationNeeded"
              },
              "primaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::/126",
              "secondaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::4/126"
            },
            "provisioningState": "Succeeded",
            "gatewayManagerEtag": "103",
            "secondaryAzurePort": "A51-TEST-06GMR-CIS-2-SEC-A",
            "microsoftPeeringConfig": {
              "legacyMode": 0,
              "customerASN": 23,
              "routingRegistryName": "ARIN",
              "advertisedCommunities": [],
              "advertisedPublicPrefixes": [
                "123.1.0.0/24"
              ],
              "advertisedPublicPrefixesState": "ValidationNeeded"
            },
            "primaryPeerAddressPrefix": "123.0.0.0/30",
            "secondaryPeerAddressPrefix": "123.0.0.4/30"
          }
        }
      ]
  ExpressRouteCircuitPeerings.List:
    description: |-
      Gets all peerings in a specified express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuitpeerings/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/MicrosoftPeering",
              "etag": "W/\"b2a25b98-2e6d-4d46-87f2-089de5f6fdf9\"",
              "name": "MicrosoftPeering",
              "properties": {
                "state": "Enabled",
                "vlanId": 300,
                "peerASN": 100,
                "azureASN": 12076,
                "peeringType": "MicrosoftPeering",
                "lastModifiedBy": "Customer",
                "primaryAzurePort": "A51-TEST-06GMR-CIS-1-PRI-A",
                "ipv6PeeringConfig": {
                  "state": "Enabled",
                  "microsoftPeeringConfig": {
                    "legacyMode": 0,
                    "customerASN": 23,
                    "routingRegistryName": "ARIN",
                    "advertisedCommunities": [],
                    "advertisedPublicPrefixes": [
                      "3FFE:FFFF:0:CD31::/120"
                    ],
                    "advertisedPublicPrefixesState": "ValidationNeeded"
                  },
                  "primaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::/126",
                  "secondaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::4/126"
                },
                "provisioningState": "Succeeded",
                "gatewayManagerEtag": "103",
                "secondaryAzurePort": "A51-TEST-06GMR-CIS-2-SEC-A",
                "expressRouteConnection": "",
                "microsoftPeeringConfig": {
                  "legacyMode": 0,
                  "customerASN": 23,
                  "routingRegistryName": "ARIN",
                  "advertisedCommunities": [],
                  "advertisedPublicPrefixes": [
                    "123.1.0.0/24"
                  ],
                  "advertisedPublicPrefixesState": "ValidationNeeded"
                },
                "primaryPeerAddressPrefix": "123.0.0.0/30",
                "secondaryPeerAddressPrefix": "123.0.0.4/30"
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering",
              "etag": "W/\"b2a25b98-2e6d-4d46-87f2-089de5f6fdf9\"",
              "name": "AzurePrivatePeering",
              "properties": {
                "state": "Enabled",
                "vlanId": 200,
                "peerASN": 100,
                "azureASN": 12076,
                "peeringType": "AzurePrivatePeering",
                "lastModifiedBy": "Customer",
                "primaryAzurePort": "A51-TEST-06GMR-CIS-1-PRI-A",
                "ipv6PeeringConfig": {
                  "state": "Enabled",
                  "primaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::/126",
                  "secondaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::4/126"
                },
                "provisioningState": "Succeeded",
                "gatewayManagerEtag": "103",
                "secondaryAzurePort": "A51-TEST-06GMR-CIS-2-SEC-A",
                "expressRouteConnection": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName/expressRouteConnections/connectionName"
                },
                "primaryPeerAddressPrefix": "10.0.0.0/30",
                "secondaryPeerAddressPrefix": "10.0.0.4/30"
              }
            }
          ]
        }
      ]
  ExpressRouteCircuits.CreateOrUpdate:
    description: |-
      Creates or updates an express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuits/createorupdate
    example:
      inputs: [
        {
          "sku": {
            "name": "Standard_MeteredData",
            "tier": "Standard",
            "family": "MeteredData"
          },
          "location": "Brazil South",
          "properties": {
            "peerings": [],
            "authorizations": [],
            "allowClassicOperations": false,
            "serviceProviderProperties": {
              "bandwidthInMbps": 200,
              "peeringLocation": "Silicon Valley",
              "serviceProviderName": "Equinix"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName",
          "sku": {
            "name": "Standard_MeteredData",
            "tier": "Standard",
            "family": "MeteredData"
          },
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "circuitName",
          "type": "Microsoft.Network/expressRouteCircuits",
          "location": "Brazil South",
          "properties": {
            "peerings": [],
            "serviceKey": "a1410692-0000-4ceb-b94a-b90b94d398d1",
            "authorizations": [],
            "provisioningState": "Succeeded",
            "allowClassicOperations": false,
            "circuitProvisioningState": "Enabled",
            "serviceProviderProperties": {
              "bandwidthInMbps": 200,
              "peeringLocation": "Silicon Valley",
              "serviceProviderName": "Equinix"
            },
            "serviceProviderProvisioningState": "NotProvisioned"
          }
        }
      ]
  ExpressRouteCircuits.Delete:
    description: |-
      Deletes the specified express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuits/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ExpressRouteCircuits.Get:
    description: |-
      Gets information about the specified express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuits/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName",
          "sku": {
            "name": "Standard_MeteredData",
            "tier": "Standard",
            "family": "MeteredData"
          },
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "circuitName",
          "type": "Microsoft.Network/expressRouteCircuits",
          "location": "westus",
          "properties": {
            "peerings": [],
            "serviceKey": "a1410692-0000-4ceb-b94a-b90b94d398d1",
            "authorizations": [],
            "provisioningState": "Succeeded",
            "allowClassicOperations": false,
            "circuitProvisioningState": "Enabled",
            "serviceProviderProperties": {
              "bandwidthInMbps": 200,
              "peeringLocation": "peeringLocation",
              "serviceProviderName": "providerName"
            },
            "serviceProviderProvisioningState": "NotProvisioned"
          }
        }
      ]
  ExpressRouteCircuits.GetPeeringStats:
    description: |-
      Gets all stats from an express route circuit in a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuits/getpeeringstats
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "primarybytesIn": 537408,
          "primarybytesOut": 44032550,
          "secondarybytesIn": 0,
          "secondarybytesOut": 39002500
        }
      ]
  ExpressRouteCircuits.GetStats:
    description: |-
      Gets all the stats from an express route circuit in a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuits/getstats
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "primarybytesIn": 537408,
          "primarybytesOut": 44032550,
          "secondarybytesIn": 0,
          "secondarybytesOut": 39002500
        }
      ]
  ExpressRouteCircuits.List:
    description: |-
      Gets all the express route circuits in a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuits/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName1",
              "sku": {
                "name": "Standard_MeteredData",
                "tier": "Standard",
                "family": "MeteredData"
              },
              "etag": "W/\"832b28c3-f5fd-4d2a-a2cb-6e4a2fe452b3\"",
              "name": "circuitName1",
              "type": "Microsoft.Network/expressRouteCircuits",
              "location": "westus",
              "properties": {
                "peerings": [],
                "serviceKey": "a1410692-ed3b-4ceb-b94a-b90b95d398d1",
                "authorizations": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName/authorizations/MyAuthorization1",
                    "etag": "W/\"832b28c3-f5fd-4d2a-a2cb-6e4a2fe452b3\"",
                    "name": "MyAuthorization1",
                    "properties": {
                      "authorizationKey": "authkey",
                      "provisioningState": "Succeeded",
                      "authorizationUseStatus": "Available"
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "gatewayManagerEtag": "113",
                "allowClassicOperations": false,
                "circuitProvisioningState": "Enabled",
                "serviceProviderProperties": {
                  "bandwidthInMbps": 200,
                  "peeringLocation": "peeringLocation",
                  "serviceProviderName": "providerName"
                },
                "serviceProviderProvisioningState": "Provisioned"
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName2",
              "sku": {
                "name": "Standard_MeteredData",
                "tier": "Standard",
                "family": "MeteredData"
              },
              "etag": "W/\"e33c875f-48df-4a91-b7d3-eb95b5ddbb89\"",
              "name": "circuitName2",
              "type": "Microsoft.Network/expressRouteCircuits",
              "location": "westus",
              "properties": {
                "peerings": [],
                "serviceKey": "6569625a-9ba4-498b-9719-14d778eef609",
                "authorizations": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName2/authorizations/MyAuthorization2",
                    "etag": "W/\"e33c875f-48df-4a91-b7d3-eb95b5ddbb89\"",
                    "name": "MyAuthorization2",
                    "properties": {
                      "authorizationKey": "authkey",
                      "provisioningState": "Succeeded",
                      "authorizationUseStatus": "Available"
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "gatewayManagerEtag": "",
                "allowClassicOperations": false,
                "circuitProvisioningState": "Enabled",
                "serviceProviderProperties": {
                  "bandwidthInMbps": 200,
                  "peeringLocation": "peeringLocation",
                  "serviceProviderName": "providerName"
                },
                "serviceProviderProvisioningState": "NotProvisioned"
              }
            }
          ]
        }
      ]
  ExpressRouteCircuits.ListAll:
    description: |-
      Gets all the express route circuits in a subscription.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuits/listall
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName1",
              "sku": {
                "name": "Standard_MeteredData",
                "tier": "Standard",
                "family": "MeteredData"
              },
              "etag": "W/\"832b28c3-f5fd-4d2a-a2cb-6e4a2fe452b3\"",
              "name": "circuitName1",
              "type": "Microsoft.Network/expressRouteCircuits",
              "location": "westus",
              "properties": {
                "peerings": [],
                "serviceKey": "a1410692-ed3b-4ceb-b94a-b90b95d398d1",
                "authorizations": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName/authorizations/MyAuthorization1",
                    "etag": "W/\"832b28c3-f5fd-4d2a-a2cb-6e4a2fe452b3\"",
                    "name": "MyAuthorization1",
                    "properties": {
                      "authorizationKey": "authkey",
                      "provisioningState": "Succeeded",
                      "authorizationUseStatus": "Available"
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "gatewayManagerEtag": "113",
                "allowClassicOperations": false,
                "circuitProvisioningState": "Enabled",
                "serviceProviderProperties": {
                  "bandwidthInMbps": 200,
                  "peeringLocation": "peeringLocation",
                  "serviceProviderName": "providerName"
                },
                "serviceProviderProvisioningState": "Provisioned"
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName2",
              "sku": {
                "name": "Standard_MeteredData",
                "tier": "Standard",
                "family": "MeteredData"
              },
              "etag": "W/\"e33c875f-48df-4a91-b7d3-eb95b5ddbb89\"",
              "name": "circuitName2",
              "type": "Microsoft.Network/expressRouteCircuits",
              "location": "westus",
              "properties": {
                "peerings": [],
                "serviceKey": "6569625a-9ba4-498b-9719-14d778eef609",
                "authorizations": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName2/authorizations/MyAuthorization2",
                    "etag": "W/\"e33c875f-48df-4a91-b7d3-eb95b5ddbb89\"",
                    "name": "MyAuthorization2",
                    "properties": {
                      "authorizationKey": "authkey",
                      "provisioningState": "Succeeded",
                      "authorizationUseStatus": "Available"
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "gatewayManagerEtag": "",
                "allowClassicOperations": false,
                "circuitProvisioningState": "Enabled",
                "serviceProviderProperties": {
                  "bandwidthInMbps": 200,
                  "peeringLocation": "peeringLocation",
                  "serviceProviderName": "providerName"
                },
                "serviceProviderProvisioningState": "NotProvisioned"
              }
            }
          ]
        }
      ]
  ExpressRouteCircuits.ListArpTable:
    description: |-
      Gets the currently advertised ARP table associated with the express route circuit in a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuits/listarptable
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "age": 0,
              "interface": "Microsoft",
              "ipAddress": "IPAddress",
              "macAddress": "macAddress"
            }
          ]
        }
      ]
  ExpressRouteCircuits.ListRoutesTable:
    description: |-
      Gets the currently advertised routes table associated with the express route circuit in a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuits/listroutestable
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "path": "",
              "locPrf": "",
              "weight": 0,
              "network": "",
              "nextHop": ""
            }
          ]
        }
      ]
  ExpressRouteCircuits.ListRoutesTableSummary:
    description: |-
      Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuits/listroutestablesummary
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "v": 4,
              "as": 9583,
              "upDown": "never",
              "neighbor": "100.65.171.1",
              "statePfxRcd": "Idle"
            }
          ]
        }
      ]
  ExpressRouteCircuits.UpdateTags:
    description: |-
      Updates an express route circuit tags.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecircuits/updatetags
    example:
      inputs: [
        {
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/ertest/providers/Microsoft.Network/expressRouteCircuits/er1",
          "sku": {
            "name": "Standard_MeteredData",
            "tier": "Standard",
            "family": "MeteredData"
          },
          "name": "er1",
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          },
          "type": "Microsoft.Network/expressRouteCircuits",
          "location": "brazilsouth",
          "properties": {
            "peerings": [],
            "serviceKey": "0b392c2e-1e9d-46d7-b5e0-9ce90ca6b60c",
            "authorizations": [],
            "provisioningState": "Failed",
            "gatewayManagerEtag": "",
            "allowClassicOperations": false,
            "circuitProvisioningState": "Enabled",
            "serviceProviderProperties": {
              "bandwidthInMbps": 1000,
              "peeringLocation": "Silicon Valley",
              "serviceProviderName": "Equinix"
            },
            "serviceProviderProvisioningState": "NotProvisioned"
          }
        }
      ]
  ExpressRouteConnections.CreateOrUpdate:
    description: |-
      Creates a connection between an ExpressRoute gateway and an ExpressRoute circuit.
    versions:
      from: 2019.12.1
      to: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressrouteconnections/createorupdate
    example:
      inputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/gateway-2/expressRouteConnections/connectionName",
          "name": "connectionName",
          "properties": {
            "routingWeight": 2,
            "authorizationKey": "authorizationKey",
            "expressRouteCircuitPeering": {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/gateway-2/expressRouteConnections/connectionName",
          "name": "connectionName",
          "properties": {
            "routingWeight": 2,
            "authorizationKey": "authorizationKey",
            "provisioningState": "Provisioned",
            "expressRouteCircuitPeering": {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering"
            }
          }
        }
      ]
  ExpressRouteConnections.Delete:
    description: |-
      Deletes a connection to a ExpressRoute circuit.
    versions:
      from: 2019.12.1
      to: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressrouteconnections/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ExpressRouteConnections.Get:
    description: |-
      Gets the specified ExpressRouteConnection.
    versions:
      from: 2019.12.1
      to: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressrouteconnections/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName/expressRouteConnections/connectionName",
          "name": "connectionName",
          "properties": {
            "routingWeight": 1,
            "authorizationKey": "authorizationKey",
            "provisioningState": "Provisioned",
            "expressRouteCircuitPeering": {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering"
            }
          }
        }
      ]
  ExpressRouteConnections.List:
    description: |-
      Lists ExpressRouteConnections.
    versions:
      from: 2019.12.1
      to: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressrouteconnections/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName/expressRouteConnections/connectionName",
              "name": "connectionName",
              "properties": {
                "routingWeight": 1,
                "authorizationKey": "authorizationKey",
                "provisioningState": "Provisioned",
                "expressRouteCircuitPeering": {
                  "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering"
                }
              }
            }
          ]
        }
      ]
  ExpressRouteCrossConnectionPeerings.CreateOrUpdate:
    description: |-
      Creates or updates a peering in the specified ExpressRouteCrossConnection.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecrossconnectionpeerings/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "vlanId": 200,
            "peerASN": 200,
            "ipv6PeeringConfig": {
              "primaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::/126",
              "secondaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::4/126"
            },
            "primaryPeerAddressPrefix": "192.168.16.252/30",
            "secondaryPeerAddressPrefix": "192.168.18.252/30"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/CrossConnection-SiliconValley/providers/Microsoft.Network/expressRouteCrossConnections/<circuitServiceKey>/peerings/AzurePrivatePeering",
          "etag": "W/\"72090554-7e3b-43f2-80ad-99a9020dcb11\"",
          "name": "AzurePrivatePeering",
          "properties": {
            "state": "Enabled",
            "vlanId": 200,
            "peerASN": 200,
            "azureASN": 12076,
            "peeringType": "AzurePrivatePeering",
            "lastModifiedBy": "Customer",
            "primaryAzurePort": "",
            "ipv6PeeringConfig": {
              "state": "Enabled",
              "primaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::/126",
              "secondaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::4/126"
            },
            "provisioningState": "Succeeded",
            "gatewayManagerEtag": "",
            "secondaryAzurePort": "",
            "primaryPeerAddressPrefix": "192.168.16.252/30",
            "secondaryPeerAddressPrefix": "192.168.18.252/30"
          }
        }
      ]
  ExpressRouteCrossConnectionPeerings.Delete:
    description: |-
      Deletes the specified peering from the ExpressRouteCrossConnection.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecrossconnectionpeerings/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ExpressRouteCrossConnectionPeerings.Get:
    description: |-
      Gets the specified peering for the ExpressRouteCrossConnection.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecrossconnectionpeerings/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/CrossConnection-Boydton1DC/providers/Microsoft.Network/expressRouteCrossConnections/<circuitServiceKey>/peerings/AzurePrivatePeering",
          "etag": "W/\"72090554-7e3b-43f2-80ad-99a9020dcb11\"",
          "name": "AzurePrivatePeering",
          "properties": {
            "state": "Enabled",
            "vlanId": 200,
            "peerASN": 200,
            "azureASN": 12076,
            "peeringType": "AzurePrivatePeering",
            "lastModifiedBy": "Customer",
            "primaryAzurePort": "",
            "ipv6PeeringConfig": {
              "state": "Enabled",
              "primaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::/126",
              "secondaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::4/126"
            },
            "provisioningState": "Succeeded",
            "gatewayManagerEtag": "",
            "secondaryAzurePort": "",
            "primaryPeerAddressPrefix": "192.168.16.252/30",
            "secondaryPeerAddressPrefix": "192.168.18.252/30"
          }
        }
      ]
  ExpressRouteCrossConnectionPeerings.List:
    description: |-
      Gets all peerings in a specified ExpressRouteCrossConnection.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecrossconnectionpeerings/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/CrossConnection-SiliconValley/providers/Microsoft.Network/expressRouteCrossConnections/<circuitServiceKey>/peerings/AzurePrivatePeering",
              "etag": "W/\"72090554-7e3b-43f2-80ad-99a9020dcb11\"",
              "name": "AzurePrivatePeering",
              "properties": {
                "state": "Enabled",
                "vlanId": 200,
                "peerASN": 200,
                "azureASN": 12076,
                "peeringType": "AzurePrivatePeering",
                "lastModifiedBy": "Customer",
                "primaryAzurePort": "",
                "ipv6PeeringConfig": {
                  "state": "Enabled",
                  "primaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::/126",
                  "secondaryPeerAddressPrefix": "3FFE:FFFF:0:CD30::4/126"
                },
                "provisioningState": "Succeeded",
                "gatewayManagerEtag": "",
                "secondaryAzurePort": "",
                "primaryPeerAddressPrefix": "192.168.16.252/30",
                "secondaryPeerAddressPrefix": "192.168.18.252/30"
              }
            }
          ]
        }
      ]
  ExpressRouteCrossConnections.CreateOrUpdate:
    description: |-
      Update the specified ExpressRouteCrossConnection.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecrossconnections/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "serviceProviderProvisioningState": "NotProvisioned"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/CrossConnectionSiliconValley/providers/Microsoft.Network/expressRouteCrossConnections/<circuitServiceKey>",
          "name": "<circuitServiceKey>",
          "type": "Microsoft.Network/expressRouteCrossConnections",
          "location": "brazilsouth",
          "properties": {
            "sTag": 2,
            "peerings": [],
            "bandwidthInMbps": 1000,
            "peeringLocation": "SiliconValley",
            "primaryAzurePort": "bvtazureixp01",
            "provisioningState": "Enabled",
            "secondaryAzurePort": "bvtazureixp01",
            "expressRouteCircuit": {
              "id": "/subscriptions/subid/resourceGroups/ertest/providers/Microsoft.Network/expressRouteCircuits/er1"
            },
            "serviceProviderProvisioningState": "NotProvisioned"
          }
        }
      ]
  ExpressRouteCrossConnections.Get:
    description: |-
      Gets details about the specified ExpressRouteCrossConnection.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecrossconnections/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/CrossConnection-SiliconValley/providers/Microsoft.Network/expressRouteCrossConnections/<circuitServiceKey>",
          "etag": "W/\"c0e6477e-8150-4d4f-9bf6-bb10e6acb63a\"",
          "name": "<circuitServiceKey>",
          "type": "Microsoft.Network/expressRouteCrossConnections",
          "location": "brazilsouth",
          "properties": {
            "sTag": 2,
            "peerings": [],
            "bandwidthInMbps": 1000,
            "peeringLocation": "SiliconValley",
            "primaryAzurePort": "bvtazureixp01",
            "provisioningState": "Enabled",
            "secondaryAzurePort": "bvtazureixp01",
            "expressRouteCircuit": {
              "id": "/subscriptions/subid/resourceGroups/ertest/providers/Microsoft.Network/expressRouteCircuits/er1"
            },
            "serviceProviderProvisioningState": "NotProvisioned"
          }
        }
      ]
  ExpressRouteCrossConnections.List:
    description: |-
      Retrieves all the ExpressRouteCrossConnections in a subscription.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecrossconnections/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/CrossConnectionSiliconValley/providers/Microsoft.Network/expressRouteCrossConnections/<circuitServiceKey>",
              "name": "<circuitServiceKey>",
              "type": "Microsoft.Network/expressRouteCrossConnections",
              "location": "brazilsouth",
              "properties": {
                "sTag": 2,
                "peerings": [],
                "bandwidthInMbps": 1000,
                "peeringLocation": "SiliconValley",
                "primaryAzurePort": "bvtazureixp01",
                "provisioningState": "Enabled",
                "secondaryAzurePort": "bvtazureixp01",
                "expressRouteCircuit": {
                  "id": "/subscriptions/subid/resourceGroups/ertest/providers/Microsoft.Network/expressRouteCircuits/er1"
                },
                "serviceProviderProvisioningState": "NotProvisioned"
              }
            }
          ]
        }
      ]
  ExpressRouteCrossConnections.ListArpTable:
    description: |-
      Gets the currently advertised ARP table associated with the express route cross connection in a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecrossconnections/listarptable
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "age": 0,
              "interface": "Microsoft",
              "ipAddress": "192.116.14.254",
              "macAddress": "885a.9269.9110"
            }
          ]
        }
      ]
  ExpressRouteCrossConnections.ListByResourceGroup:
    description: |-
      Retrieves all the ExpressRouteCrossConnections in a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecrossconnections/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/CrossConnectionSilicon-Valley/providers/Microsoft.Network/expressRouteCrossConnections/<circuitServiceKey>",
              "name": "<circuitServiceKey>",
              "type": "Microsoft.Network/expressRouteCrossConnections",
              "location": "brazilsouth",
              "properties": {
                "sTag": 2,
                "peerings": [],
                "bandwidthInMbps": 1000,
                "peeringLocation": "SiliconValley",
                "primaryAzurePort": "bvtazureixp01",
                "provisioningState": "Enabled",
                "secondaryAzurePort": "bvtazureixp01",
                "expressRouteCircuit": {
                  "id": "/subscriptions/subid/resourceGroups/ertest/providers/Microsoft.Network/expressRouteCircuits/er1"
                },
                "serviceProviderProvisioningState": "NotProvisioned"
              }
            }
          ]
        }
      ]
  ExpressRouteCrossConnections.ListRoutesTable:
    description: |-
      Gets the currently advertised routes table associated with the express route cross connection in a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecrossconnections/listroutestable
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "path": "65514",
              "locPrf": "",
              "weight": 0,
              "network": "10.6.0.0/16",
              "nextHop": "10.6.1.12"
            },
            {
              "path": "65514",
              "locPrf": "",
              "weight": 0,
              "network": "10.7.0.0/16",
              "nextHop": "10.7.1.13"
            }
          ]
        }
      ]
  ExpressRouteCrossConnections.ListRoutesTableSummary:
    description: |-
      Gets the route table summary associated with the express route cross connection in a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecrossconnections/listroutestablesummary
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "asn": 65514,
              "upDown": "1d14h",
              "neighbor": "10.6.1.112",
              "stateOrPrefixesReceived": "Active"
            },
            {
              "asn": 65514,
              "upDown": "1d14h",
              "neighbor": "10.6.1.113",
              "stateOrPrefixesReceived": "1"
            }
          ]
        }
      ]
  ExpressRouteCrossConnections.UpdateTags:
    description: |-
      Updates an express route cross connection tags.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutecrossconnections/updatetags
    example:
      inputs: [
        {
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/CrossConnectionSiliconValley/providers/Microsoft.Network/expressRouteCrossConnections/<circuitServiceKey>",
          "name": "er1",
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          },
          "type": "Microsoft.Network/expressRouteCrossConnections",
          "location": "brazilsouth",
          "properties": {
            "sTag": 2,
            "peerings": [],
            "bandwidthInMbps": 1000,
            "peeringLocation": "SiliconValley",
            "primaryAzurePort": "bvtazureixp01",
            "provisioningState": "Failed",
            "secondaryAzurePort": "bvtazureixp01",
            "expressRouteCircuit": {
              "id": "/subscriptions/subid/resourceGroups/ertest/providers/Microsoft.Network/expressRouteCircuits/er1"
            },
            "serviceProviderProvisioningState": "NotProvisioned"
          }
        }
      ]
  ExpressRouteGateways.CreateOrUpdate:
    description: |-
      Creates or updates a ExpressRoute gateway in a specified resource group.
    versions:
      from: 2019.12.1
      to: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutegateways/createorupdate
    example:
      inputs: [
        {
          "location": "westus",
          "properties": {
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupId/providers/Microsoft.Network/virtualHubs/virtualHubName"
            },
            "autoScaleConfiguration": {
              "bounds": {
                "min": 3
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/gateway-2",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "gateway-2",
          "type": "Microsoft.Network/expressRouteGateways",
          "location": "westus",
          "properties": {
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName"
            },
            "provisioningState": "Succeeded",
            "autoScaleConfiguration": {
              "bounds": {
                "min": 3
              }
            }
          }
        }
      ]
  ExpressRouteGateways.Delete:
    description: |-
      Deletes the specified ExpressRoute gateway in a resource group. An ExpressRoute gateway resource can only be deleted when there are no connection subresources.
    versions:
      from: 2019.12.1
      to: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutegateways/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ExpressRouteGateways.Get:
    description: |-
      Fetches the details of a ExpressRoute gateway in a resource group.
    versions:
      from: 2019.12.1
      to: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutegateways/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "expressRouteGatewayName",
          "type": "Microsoft.Network/expressRouteGateways",
          "location": "westus",
          "properties": {
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName"
            },
            "provisioningState": "Succeeded"
          }
        }
      ]
  ExpressRouteGateways.ListByResourceGroup:
    description: |-
      Lists ExpressRoute gateways in a given resource group.
    versions:
      from: 2019.12.1
      to: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutegateways/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "expressRouteGatewayName",
              "type": "Microsoft.Network/expressRouteGateways",
              "location": "westus",
              "properties": {
                "virtualHub": {
                  "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName"
                },
                "provisioningState": "Succeeded",
                "autoScaleConfiguration": {
                  "bounds": {
                    "min": 2
                  }
                },
                "expressRouteConnections": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName/expressRouteConnections/connectionName",
                    "name": "connectionName",
                    "properties": {
                      "routingWeight": 1,
                      "authorizationKey": "f28e9c99-78d8-4248-a855-c54cf6beb99d",
                      "provisioningState": "Provisioned",
                      "enableInternetSecurity": false,
                      "expressRouteCircuitPeering": {
                        "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  ExpressRouteGateways.ListBySubscription:
    description: |-
      Lists ExpressRoute gateways under a given subscription.
    versions:
      from: 2019.12.1
      to: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutegateways/listbysubscription
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "expressRouteGatewayName",
              "type": "Microsoft.Network/expressRouteGateways",
              "location": "westus",
              "properties": {
                "virtualHub": {
                  "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName"
                },
                "provisioningState": "Succeeded",
                "autoScaleConfiguration": {
                  "bounds": {
                    "min": 2
                  }
                },
                "expressRouteConnections": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName/expressRouteConnections/connectionName",
                    "name": "connectionName",
                    "properties": {
                      "routingWeight": 1,
                      "authorizationKey": "f28e9c99-78d8-4248-a855-c54cf6beb99d",
                      "provisioningState": "Provisioned",
                      "enableInternetSecurity": false,
                      "expressRouteCircuitPeering": {
                        "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  ExpressRouteLinks.Get:
    description: |-
      Retrieves the specified ExpressRouteLink resource.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutelinks/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/linkName",
          "name": "linkName",
          "properties": {
            "rackId": "rackId1",
            "adminState": "Disabled",
            "routerName": "router1",
            "patchPanelId": "patchPanelId1",
            "connectorType": "LC",
            "interfaceName": "Ethernet 0/0",
            "provisioningState": "Succeeded"
          }
        }
      ]
  ExpressRouteLinks.List:
    description: |-
      Retrieve the ExpressRouteLink sub-resources of the specified ExpressRoutePort resource.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressroutelinks/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link1",
              "name": "link1",
              "properties": {
                "rackId": "rackId1",
                "adminState": "Disabled",
                "routerName": "router1",
                "patchPanelId": "patchPanelId1",
                "connectorType": "LC",
                "interfaceName": "Ethernet 0/0",
                "provisioningState": "Succeeded"
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link2",
              "name": "link2",
              "properties": {
                "rackId": "rackId2",
                "adminState": "Disabled",
                "routerName": "router2",
                "patchPanelId": "patchPanelId2",
                "connectorType": "LC",
                "interfaceName": "Ethernet 0/0",
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]
  ExpressRoutePorts.CreateOrUpdate:
    description: |-
      Creates or updates the specified ExpressRoutePort resource.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressrouteports/createorupdate
    example:
      inputs: [
        {
          "location": "westus",
          "properties": {
            "encapsulation": "QinQ",
            "bandwidthInGbps": 100,
            "peeringLocation": "peeringLocationName"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName",
          "name": "portName",
          "type": "Microsoft.Network/expressRoutePorts",
          "location": "westus",
          "properties": {
            "mtu": "1500",
            "links": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link1",
                "name": "link1",
                "properties": {
                  "rackId": "rackId1",
                  "adminState": "Disabled",
                  "routerName": "router1",
                  "patchPanelId": "patchPanelId1",
                  "connectorType": "LC",
                  "interfaceName": "Ethernet 0/0",
                  "provisioningState": "Succeeded"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link2",
                "name": "link2",
                "properties": {
                  "rackId": "rackId2",
                  "adminState": "Disabled",
                  "routerName": "router2",
                  "patchPanelId": "patchPanelId2",
                  "connectorType": "LC",
                  "interfaceName": "Ethernet 0/0",
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "circuits": [],
            "etherType": "0x8100",
            "encapsulation": "QinQ",
            "allocationDate": "Friday, July 1, 2018",
            "bandwidthInGbps": 100,
            "peeringLocation": "peeringLocationName",
            "provisioningState": "Succeeded",
            "provisionedBandwidthInGbps": 0
          }
        }
      ]
  ExpressRoutePorts.Delete:
    description: |-
      Deletes the specified ExpressRoutePort resource.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressrouteports/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ExpressRoutePorts.GenerateLoa:
    description: |-
      Generate a letter of authorization for the requested ExpressRoutePort resource.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressrouteports/generateloa
    example:
      inputs: [
        {
          "customerName": "customerName"
        }
      ]
      outputs: [
        {
          "encodedContent": "TWFuIGlzIGRpc3"
        }
      ]
  ExpressRoutePorts.Get:
    description: |-
      Retrieves the requested ExpressRoutePort resource.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressrouteports/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName",
          "name": "portName",
          "type": "Microsoft.Network/expressRoutePorts",
          "location": "westus",
          "properties": {
            "mtu": "1500",
            "links": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link1",
                "name": "link1",
                "properties": {
                  "rackId": "rackId1",
                  "adminState": "Disabled",
                  "routerName": "router1",
                  "patchPanelId": "patchPanelId1",
                  "connectorType": "LC",
                  "interfaceName": "Ethernet 0/0",
                  "provisioningState": "Succeeded"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link2",
                "name": "link2",
                "properties": {
                  "rackId": "rackId2",
                  "adminState": "Disabled",
                  "routerName": "router2",
                  "patchPanelId": "patchPanelId2",
                  "connectorType": "LC",
                  "interfaceName": "Ethernet 0/0",
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "circuits": [],
            "etherType": "0x8100",
            "encapsulation": "QinQ",
            "allocationDate": "Friday, July 1, 2018",
            "bandwidthInGbps": 100,
            "peeringLocation": "peeringLocationName",
            "provisioningState": "Succeeded",
            "provisionedBandwidthInGbps": 0
          }
        }
      ]
  ExpressRoutePorts.List:
    description: |-
      List all the ExpressRoutePort resources in the specified subscription.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressrouteports/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName",
              "name": "portName",
              "type": "Microsoft.Network/expressRoutePorts",
              "location": "westus",
              "properties": {
                "mtu": "1500",
                "links": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link1",
                    "name": "link1",
                    "properties": {
                      "rackId": "rackId1",
                      "adminState": "Disabled",
                      "routerName": "router1",
                      "patchPanelId": "patchPanelId1",
                      "connectorType": "LC",
                      "interfaceName": "Ethernet 0/0",
                      "provisioningState": "Succeeded"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link2",
                    "name": "link2",
                    "properties": {
                      "rackId": "rackId2",
                      "adminState": "Disabled",
                      "routerName": "router2",
                      "patchPanelId": "patchPanelId2",
                      "connectorType": "LC",
                      "interfaceName": "Ethernet 0/0",
                      "provisioningState": "Succeeded"
                    }
                  }
                ],
                "circuits": [],
                "etherType": "0x8100",
                "encapsulation": "QinQ",
                "allocationDate": "Friday, July 1, 2018",
                "bandwidthInGbps": 100,
                "peeringLocation": "peeringLocationName",
                "provisioningState": "Succeeded",
                "provisionedBandwidthInGbps": 0
              }
            }
          ]
        }
      ]
  ExpressRoutePorts.ListByResourceGroup:
    description: |-
      List all the ExpressRoutePort resources in the specified resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressrouteports/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName",
              "name": "portName",
              "type": "Microsoft.Network/expressRoutePorts",
              "location": "westus",
              "properties": {
                "mtu": "1500",
                "links": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link1",
                    "name": "link1",
                    "properties": {
                      "rackId": "rackId1",
                      "adminState": "Disabled",
                      "routerName": "router1",
                      "patchPanelId": "patchPanelId1",
                      "connectorType": "LC",
                      "interfaceName": "Ethernet 0/0",
                      "provisioningState": "Succeeded"
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link2",
                    "name": "link2",
                    "properties": {
                      "rackId": "rackId2",
                      "adminState": "Disabled",
                      "routerName": "router2",
                      "patchPanelId": "patchPanelId2",
                      "connectorType": "LC",
                      "interfaceName": "Ethernet 0/0",
                      "provisioningState": "Succeeded"
                    }
                  }
                ],
                "circuits": [],
                "etherType": "0x8100",
                "encapsulation": "QinQ",
                "allocationDate": "Friday, July 1, 2018",
                "bandwidthInGbps": 100,
                "peeringLocation": "peeringLocationName",
                "provisioningState": "Succeeded",
                "provisionedBandwidthInGbps": 0
              }
            }
          ]
        }
      ]
  ExpressRoutePortsLocations.Get:
    description: |-
      Retrieves a single ExpressRoutePort peering location, including the list of available bandwidths available at said peering location.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressrouteportslocations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/providers/Microsoft.Network/expressRoutePortsLocations/locationName",
          "name": "locationName",
          "type": "Microsoft.Network/expressRoutePortsLocations",
          "location": "westus",
          "properties": {
            "address": "123 Main Street, City, State, Zip",
            "contact": "email@address.com",
            "provisioningState": "Succeeded",
            "availableBandwidths": [
              {
                "offerName": "100 Gbps",
                "valueInGbps": 100
              }
            ]
          }
        }
      ]
  ExpressRoutePortsLocations.List:
    description: |-
      Retrieves all ExpressRoutePort peering locations. Does not return available bandwidths for each location. Available bandwidths can only be obtained when retrieving a specific peering location.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressrouteportslocations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/providers/Microsoft.Network/expressRoutePortsLocations/locationName",
              "name": "locationName",
              "type": "Microsoft.Network/expressRoutePortsLocations",
              "location": "westus",
              "properties": {
                "address": "123 Main Street, City, State, Zip",
                "contact": "email@address.com",
                "provisioningState": "Succeeded",
                "availableBandwidths": []
              }
            }
          ]
        }
      ]
  ExpressRoutePorts.UpdateTags:
    description: |-
      Update ExpressRoutePort tags.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressrouteports/updatetags
    example:
      inputs: [
        {
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName",
          "name": "portName",
          "type": "Microsoft.Network/expressRoutePorts",
          "location": "westus",
          "properties": {
            "mtu": "1500",
            "links": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link1",
                "name": "link1",
                "properties": {
                  "rackId": "rackId1",
                  "adminState": "Disabled",
                  "routerName": "router1",
                  "patchPanelId": "patchPanelId1",
                  "connectorType": "LC",
                  "interfaceName": "Ethernet 0/0",
                  "provisioningState": "Succeeded"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName/links/link2",
                "name": "link2",
                "properties": {
                  "rackId": "rackId2",
                  "adminState": "Disabled",
                  "routerName": "router2",
                  "patchPanelId": "patchPanelId2",
                  "connectorType": "LC",
                  "interfaceName": "Ethernet 0/0",
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "circuits": [],
            "etherType": "0x8100",
            "encapsulation": "QinQ",
            "allocationDate": "Friday, July 1, 2018",
            "bandwidthInGbps": 100,
            "peeringLocation": "peeringLocationName",
            "provisioningState": "Succeeded",
            "provisionedBandwidthInGbps": 0
          }
        }
      ]
  ExpressRouteServiceProviders.List:
    description: |-
      Gets all the available express route service providers.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/expressrouteserviceproviders/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions//resourceGroups//providers/Microsoft.Network/expressRouteServiceProviders/",
              "name": "providerName",
              "type": "Microsoft.Network/expressRouteServiceProviders",
              "properties": {
                "peeringLocations": [
                  "peeringLocation1",
                  "peeringLocation2"
                ],
                "bandwidthsOffered": [
                  {
                    "offerName": "50Mbps",
                    "valueInMbps": 50
                  },
                  {
                    "offerName": "100Mbps",
                    "valueInMbps": 100
                  },
                  {
                    "offerName": "200Mbps",
                    "valueInMbps": 200
                  },
                  {
                    "offerName": "500Mbps",
                    "valueInMbps": 500
                  },
                  {
                    "offerName": "1Gbps",
                    "valueInMbps": 1000
                  },
                  {
                    "offerName": "2Gbps",
                    "valueInMbps": 2000
                  },
                  {
                    "offerName": "5Gbps",
                    "valueInMbps": 5000
                  },
                  {
                    "offerName": "10Gbps",
                    "valueInMbps": 10000
                  }
                ],
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]
  PeerExpressRouteCircuitConnections.Get:
    description: |-
      Gets the specified Peer Express Route Circuit Connection from the specified express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/peerexpressroutecircuitconnections/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/peerConnections/60aee347-e889-4a42-8c1b-0aae8b1e4013",
          "etag": "W/\"6ffbbb06-da20-44ca-a34f-280c4653b1e9\"",
          "name": "60aee347-e889-4a42-8c1b-0aae8b1e4013",
          "properties": {
            "addressPrefix": "20.0.0.0/29",
            "connectionName": "circuitConnectionWestusEastus",
            "authResourceGuid": "",
            "provisioningState": "Succeeded",
            "circuitConnectionStatus": "Connected",
            "expressRouteCircuitPeering": {
              "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering"
            },
            "peerExpressRouteCircuitPeering": {
              "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitB/peerings/AzurePrivatePeering"
            }
          }
        }
      ]
  PeerExpressRouteCircuitConnections.List:
    description: |-
      Gets all global reach peer connections associated with a private peering in an express route circuit.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/peerexpressroutecircuitconnections/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/peerConnections/60aee347-e889-4a42-8c1b-0aae8b1e4013",
              "etag": "W/\"6ffbbb06-da20-44ca-a34f-280c4653b1e9\"",
              "name": "60aee347-e889-4a42-8c1b-0aae8b1e4013",
              "properties": {
                "addressPrefix": "20.0.0.0/29",
                "connectionName": "circuitConnectionWestusEastus",
                "authResourceGuid": "",
                "provisioningState": "Succeeded",
                "circuitConnectionStatus": "Connected",
                "expressRouteCircuitPeering": {
                  "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering"
                },
                "peerExpressRouteCircuitPeering": {
                  "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitB/peerings/AzurePrivatePeering"
                }
              }
            },
            {
              "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/peerConnections/c8b17193-8dd3-4f61-866d-8cdd2e2e268e",
              "etag": "W/\"6ffbbb06-da20-44ca-a34f-280c4653b1e9\"",
              "name": "c8b17193-8dd3-4f61-866d-8cdd2e2e268e",
              "properties": {
                "addressPrefix": "30.0.0.0/29",
                "connectionName": "circuitConnectionCentralusEastus",
                "authResourceGuid": "64283012-d377-421d-8398-f6aeb2ac7ea0",
                "provisioningState": "Succeeded",
                "circuitConnectionStatus": "Connected",
                "expressRouteCircuitPeering": {
                  "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering"
                },
                "peerExpressRouteCircuitPeering": {
                  "id": "/subscriptions/subid2/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitC/peerings/AzurePrivatePeering"
                }
              }
            }
          ]
        }
      ]
  RouteFilterRules.CreateOrUpdate:
    description: |-
      Creates or updates a route in the specified route filter.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/routefilterrules/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "access": "Allow",
            "communities": [
              "12076:5030",
              "12076:5040"
            ],
            "routeFilterRuleType": "Community"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName/routeFilterRules/ruleName",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "ruleName",
          "properties": {
            "access": "Allow",
            "communities": [
              "12076:5030",
              "12076:5040"
            ],
            "provisioningState": "Succeeded",
            "routeFilterRuleType": "Community"
          }
        }
      ]
  RouteFilterRules.Delete:
    description: |-
      Deletes the specified rule from a route filter.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/routefilterrules/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  RouteFilterRules.Get:
    description: |-
      Gets the specified rule from a route filter.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/routefilterrules/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName/routeFilterRules/ruleName",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "ruleName",
          "properties": {
            "access": "Allow",
            "communities": [
              "12076:5030",
              "12076:5040"
            ],
            "provisioningState": "Succeeded",
            "routeFilterRuleType": "Community"
          }
        }
      ]
  RouteFilterRules.ListByRouteFilter:
    description: |-
      Gets all RouteFilterRules in a route filter.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/routefilterrules/listbyroutefilter
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName/routeFilterRules/ruleName",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "ruleName",
              "properties": {
                "access": "Allow",
                "communities": [
                  "12076:5030",
                  "12076:5040"
                ],
                "provisioningState": "Succeeded",
                "routeFilterRuleType": "Community"
              }
            }
          ]
        }
      ]
  RouteFilters.CreateOrUpdate:
    description: |-
      Creates or updates a route filter in a specified resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/routefilters/createorupdate
    example:
      inputs: [
        {
          "tags": {
            "key1": "value1"
          },
          "location": "West US",
          "properties": {
            "rules": [
              {
                "name": "ruleName",
                "properties": {
                  "access": "Allow",
                  "communities": [
                    "12076:5030",
                    "12076:5040"
                  ],
                  "routeFilterRuleType": "Community"
                }
              }
            ]
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "filterName",
          "tags": {
            "key1": "value1"
          },
          "type": "Microsoft.Network/routeFilters",
          "location": "West US",
          "properties": {
            "rules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName/routeFilterRules/ruleName",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "ruleName",
                "properties": {
                  "access": "Allow",
                  "communities": [
                    "12076:5030",
                    "12076:5040"
                  ],
                  "provisioningState": "Succeeded",
                  "routeFilterRuleType": "Community"
                }
              }
            ],
            "peerings": [],
            "provisioningState": "Succeeded"
          }
        }
      ]
  RouteFilters.Delete:
    description: |-
      Deletes the specified route filter.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/routefilters/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  RouteFilters.Get:
    description: |-
      Gets the specified route filter.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/routefilters/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "filterName",
          "tags": {
            "key1": "value1"
          },
          "type": "Microsoft.Network/routeFilters",
          "location": "West US",
          "properties": {
            "rules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName/routeFilterRules/ruleName",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "ruleName",
                "properties": {
                  "access": "Allow",
                  "communities": [
                    "12076:5030",
                    "12076:5040"
                  ],
                  "provisioningState": "Succeeded",
                  "routeFilterRuleType": "Community"
                }
              }
            ],
            "peerings": [],
            "provisioningState": "Succeeded"
          }
        }
      ]
  RouteFilters.List:
    description: |-
      Gets all route filters in a subscription.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/routefilters/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "filterName",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.Network/routeFilters",
              "location": "West US",
              "properties": {
                "rules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName/routeFilterRules/ruleName",
                    "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                    "name": "ruleName",
                    "properties": {
                      "access": "Allow",
                      "communities": [
                        "12076:5030",
                        "12076:5040"
                      ],
                      "provisioningState": "Succeeded",
                      "routeFilterRuleType": "Community"
                    }
                  }
                ],
                "peerings": [],
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]
  RouteFilters.ListByResourceGroup:
    description: |-
      Gets all route filters in a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/routefilters/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "filterName",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.Network/routeFilters",
              "location": "West US",
              "properties": {
                "rules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName/routeFilterRules/ruleName",
                    "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                    "name": "ruleName",
                    "properties": {
                      "access": "Allow",
                      "communities": [
                        "12076:5030",
                        "12076:5040"
                      ],
                      "provisioningState": "Succeeded",
                      "routeFilterRuleType": "Community"
                    }
                  }
                ],
                "peerings": [],
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]
  RouteFilters.UpdateTags:
    description: |-
      Updates tags of a route filter.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/routefilters/updatetags
    example:
      inputs: [
        {
          "tags": {
            "key1": "value1"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "filterName",
          "tags": {
            "key1": "value1"
          },
          "type": "Microsoft.Network/routeFilters",
          "location": "West US",
          "properties": {
            "rules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/routeFilters/filterName/routeFilterRules/ruleName",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "ruleName",
                "properties": {
                  "access": "Allow",
                  "communities": [
                    "12076:5030"
                  ],
                  "provisioningState": "Succeeded",
                  "routeFilterRuleType": "Community"
                }
              }
            ],
            "peerings": [],
            "provisioningState": "Succeeded"
          }
        }
      ]
  ServiceEndpointPolicies.CreateOrUpdate:
    description: |-
      Creates or updates a service Endpoint Policies.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/serviceendpointpolicies/createorupdate
    example:
      inputs: [
        {
          "location": "westus"
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/ServiceEndpointPolicies/testpolicy",
          "name": "testnsg",
          "type": "Microsoft.Network/ServiceEndpointPolicies",
          "location": "westus",
          "properties": {
            "subnets": [],
            "resourceGuid": "6A7C139D-8B8D-499B-B7CB-4F3F02A8A44F",
            "provisioningState": "Succeeded",
            "serviceEndpointPolicyDefinitions": []
          }
        }
      ]
  ServiceEndpointPolicies.Delete:
    description: |-
      Deletes the specified service endpoint policy.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/serviceendpointpolicies/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ServiceEndpointPolicies.Get:
    description: |-
      Gets the specified service Endpoint Policies in a specified resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/serviceendpointpolicies/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/serviceEndpointPolicies/testServiceEndpointPolicy",
          "name": "testServiceEndpointPolicy",
          "type": "Microsoft.Network/serviceEndpointPolicies",
          "location": "westus",
          "properties": {
            "subnets": [],
            "resourceGuid": "6A7C139D-8B8D-499B-B7CB-4F3F02A8A44F",
            "provisioningState": "Succeeded",
            "serviceEndpointPolicyDefinitions": [
              {
                "name": "StorageServiceEndpointPolicyDefinition",
                "properties": {
                  "service": "Microsoft.Storage",
                  "description": "Storage Service EndpointPolicy Definition",
                  "serviceResources": [
                    "/subscriptions/subid1",
                    "/subscriptions/subid1/resourceGroups/storageRg",
                    "/subscriptions/subid1/resourceGroups/storageRg/providers/Microsoft.Storage/storageAccounts/stAccount"
                  ]
                }
              }
            ]
          }
        }
      ]
  ServiceEndpointPolicies.List:
    description: |-
      Gets all the service endpoint policies in a subscription.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/serviceendpointpolicies/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/serviceEndpointPolicies/testPolicy",
              "name": "testPolicy",
              "type": "Microsoft.Network/serviceEndpointPolicies",
              "location": "westus",
              "properties": {
                "subnets": [],
                "resourceGuid": "6A7C139D-8B8D-499B-B7CB-4F3F02A8A44F",
                "provisioningState": "Succeeded",
                "serviceEndpointPolicyDefinitions": [
                  {
                    "name": "StorageServiceEndpointPolicyDefinition1",
                    "properties": {
                      "service": "Microsoft.Storage",
                      "description": "Storage Service EndpointPolicy Definition",
                      "serviceResources": [
                        "/subscriptions/subid1",
                        "/subscriptions/subid1/resourceGroups/storageRg",
                        "/subscriptions/subid1/resourceGroups/storageRg/providers/Microsoft.Storage/storageAccounts/stAccount"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/serviceEndpointPolicies/testPolicy2",
              "name": "testPolicy1",
              "type": "Microsoft.Network/serviceEndpointPolicies",
              "location": "westus",
              "properties": {
                "subnets": [],
                "resourceGuid": "6A7C139D-8B8D-499B-B7CB-4F3F02A8A44F",
                "provisioningState": "Succeeded",
                "serviceEndpointPolicyDefinitions": [
                  {
                    "name": "StorageServiceEndpointPolicyDefinition2",
                    "properties": {
                      "service": "Microsoft.Storage",
                      "description": "Storage Service EndpointPolicy Definition",
                      "serviceResources": [
                        "/subscriptions/subid1",
                        "/subscriptions/subid1/resourceGroups/storageRg",
                        "/subscriptions/subid1/resourceGroups/storageRg/providers/Microsoft.Storage/storageAccounts/stAccount"
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  ServiceEndpointPolicies.ListByResourceGroup:
    description: |-
      Gets all service endpoint Policies in a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/serviceendpointpolicies/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/serviceEndpointPolicies/testServiceEndpointPolicy",
              "name": "testServiceEndpointPolicy",
              "location": "westus",
              "properties": {
                "subnets": [],
                "resourceGuid": "6A7C139D-8B8D-499B-B7CB-4F3F02A8A44F",
                "provisioningState": "Succeeded",
                "serviceEndpointPolicyDefinitions": [
                  {
                    "name": "StorageServiceEndpointPolicyDefinition",
                    "properties": {
                      "service": "Microsoft.Storage",
                      "description": "Storage Service EndpointPolicy Definition",
                      "serviceResources": [
                        "/subscriptions/subid1",
                        "/subscriptions/subid1resourceGroups/storageRg",
                        "/subscriptions/subid1/resourceGroups/storageRg/providers/Microsoft.Storage/storageAccounts/stAccount"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/serviceEndpointPolicies/testServiceEndpointPolicy1",
              "name": "testServiceEndpointPolicy1",
              "location": "westus",
              "properties": {
                "subnets": [],
                "resourceGuid": "6A7C139D-8B8D-499B-B7CB-4F3F02A8A44F",
                "provisioningState": "Succeeded",
                "serviceEndpointPolicyDefinitions": [
                  {
                    "name": "StorageServiceEndpointPolicyDefinition1",
                    "properties": {
                      "service": "Microsoft.Storage",
                      "description": "Storage Service EndpointPolicy Definition",
                      "serviceResources": [
                        "/subscriptions/subid1",
                        "/subscriptions/subid1/resourceGroups/storageRg",
                        "/subscriptions/subid1/resourceGroups/storageRg/providers/Microsoft.Storage/storageAccounts/stAccount"
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  ServiceEndpointPolicies.UpdateTags:
    description: |-
      Updates tags of a service endpoint policy.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/serviceendpointpolicies/updatetags
    example:
      inputs: [
        {
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/serviceEndpointPolicies/testServiceEndpointPolicy",
          "name": "testServiceEndpointPolicy",
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          },
          "type": "Microsoft.Network/serviceEndpointPolicies",
          "location": "westus",
          "properties": {
            "subnets": [],
            "resourceGuid": "00000000-0000-0000-0000-000000000000",
            "provisioningState": "Succeeded",
            "serviceEndpointPolicyDefinitions": [
              {
                "name": "StorageServiceEndpointPolicyDefinition",
                "properties": {
                  "service": "Microsoft.Storage",
                  "description": "Storage Service EndpointPolicy Definition",
                  "serviceResources": [
                    "/subscriptions/subid1",
                    "/subscriptions/subid1/resourceGroups/storageRg",
                    "/subscriptions/subid1/resourceGroups/storageRg/providers/Microsoft.Storage/storageAccounts/stAccount"
                  ]
                }
              }
            ]
          }
        }
      ]
  ServiceEndpointPolicyDefinitions.CreateOrUpdate:
    description: |-
      Creates or updates a service endpoint policy definition in the specified service endpoint policy.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/serviceendpointpolicydefinitions/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "service": "Microsoft.Storage",
            "description": "Storage Service EndpointPolicy Definition",
            "serviceResources": [
              "/subscriptions/subid1",
              "/subscriptions/subid1/resourceGroups/storageRg",
              "/subscriptions/subid1/resourceGroups/storageRg/providers/Microsoft.Storage/storageAccounts/stAccount"
            ]
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/serviceEndpointPolicies/testPolicy/serviceEndpointPolicyDefinitions/testDefinition",
          "name": "testDefinition",
          "properties": {
            "service": "Microsoft.Storage",
            "description": "Storage Service EndpointPolicy Definition",
            "serviceResources": [
              "/subscriptions/subid1",
              "/subscriptions/subid1/resourceGroups/storageRg",
              "/subscriptions/subid1/resourceGroups/storageRg/providers/Microsoft.Storage/storageAccounts/stAccount"
            ]
          }
        }
      ]
  ServiceEndpointPolicyDefinitions.Delete:
    description: |-
      Deletes the specified ServiceEndpoint policy definitions.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/serviceendpointpolicydefinitions/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ServiceEndpointPolicyDefinitions.Get:
    description: |-
      Get the specified service endpoint policy definitions from service endpoint policy.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/serviceendpointpolicydefinitions/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/serviceEndpointPolicies/testPolicy/serviceEndpointPolicyDefinitions/testDefinition",
          "name": "testDefinition",
          "properties": {
            "service": "Microsoft.Storage",
            "description": "Storage Service EndpointPolicy Definition",
            "serviceResources": [
              "/subscriptions/subid1",
              "/subscriptions/subid1/resourceGroups/storageRg",
              "/subscriptions/subid1/resourceGroups/storageRg/providers/Microsoft.Storage/storageAccounts/stAccount"
            ]
          }
        }
      ]
  ServiceEndpointPolicyDefinitions.ListByResourceGroup:
    description: |-
      Gets all service endpoint policy definitions in a service end point policy.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/expressroute/serviceendpointpolicydefinitions/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/serviceEndpointPolicies/testPolicy/serviceEndpointPolicyDefinitions/testDef",
              "name": "testDef",
              "properties": {
                "service": "Microsoft.Storage",
                "description": "Storage Service EndpointPolicy Definition",
                "serviceResources": [
                  "/subscriptions/subid1",
                  "/subscriptions/subid1/resourceGroups/storageRg",
                  "/subscriptions/subid1/resourceGroups/storageRg/providers/Microsoft.Storage/storageAccounts/stAccount"
                ]
              }
            }
          ]
        }
      ]