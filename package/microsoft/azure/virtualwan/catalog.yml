Product:
  name: Azure Virtual WAN
  versions: [2020.11.1]
  package: microsoft.azure.virtualwan
  description: |-
    VirtualWan
  link: https://docs.microsoft.com/en-us/azure/virtual-wan/
  contentType: json
Operations:
  ExpressRouteConnections.CreateOrUpdate:
    description: |-
      Creates a connection between an ExpressRoute gateway and an ExpressRoute circuit.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/expressrouteconnections/createorupdate
    example:
      inputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/gateway-2/expressRouteConnections/connectionName",
          "name": "connectionName",
          "properties": {
            "routingWeight": 2,
            "authorizationKey": "authorizationKey",
            "expressRouteCircuitPeering": {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/gateway-2/expressRouteConnections/connectionName",
          "name": "connectionName",
          "properties": {
            "routingWeight": 2,
            "authorizationKey": "authorizationKey",
            "provisioningState": "Provisioned",
            "routingConfiguration": {
              "vnetRoutes": {
                "staticRoutes": []
              },
              "associatedRouteTable": {
                "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
              },
              "propagatedRouteTables": {
                "ids": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable2"
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable3"
                  }
                ],
                "labels": [
                  "label1",
                  "label2"
                ]
              }
            },
            "enableInternetSecurity": false,
            "expressRouteGatewayBypass": false,
            "expressRouteCircuitPeering": {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering"
            }
          }
        }
      ]
  ExpressRouteConnections.Delete:
    description: |-
      Deletes a connection to a ExpressRoute circuit.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/expressrouteconnections/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ExpressRouteConnections.Get:
    description: |-
      Gets the specified ExpressRouteConnection.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/expressrouteconnections/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName/expressRouteConnections/connectionName",
          "name": "connectionName",
          "properties": {
            "routingWeight": 1,
            "authorizationKey": "authorizationKey",
            "provisioningState": "Provisioned",
            "routingConfiguration": {
              "vnetRoutes": {
                "staticRoutes": []
              },
              "associatedRouteTable": {
                "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
              },
              "propagatedRouteTables": {
                "ids": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable2"
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable3"
                  }
                ],
                "labels": [
                  "label1",
                  "label2"
                ]
              }
            },
            "enableInternetSecurity": false,
            "expressRouteGatewayBypass": false,
            "expressRouteCircuitPeering": {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering"
            }
          }
        }
      ]
  ExpressRouteConnections.List:
    description: |-
      Lists ExpressRouteConnections.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/expressrouteconnections/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName/expressRouteConnections/connectionName",
              "name": "connectionName",
              "properties": {
                "routingWeight": 1,
                "authorizationKey": "authorizationKey",
                "provisioningState": "Provisioned",
                "routingConfiguration": {
                  "vnetRoutes": {
                    "staticRoutes": []
                  },
                  "associatedRouteTable": {
                    "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
                  },
                  "propagatedRouteTables": {
                    "ids": [
                      {
                        "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
                      },
                      {
                        "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable2"
                      },
                      {
                        "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable3"
                      }
                    ],
                    "labels": [
                      "label1",
                      "label2"
                    ]
                  }
                },
                "enableInternetSecurity": false,
                "expressRouteGatewayBypass": false,
                "expressRouteCircuitPeering": {
                  "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering"
                }
              }
            }
          ]
        }
      ]
  ExpressRouteGateways.CreateOrUpdate:
    description: |-
      Creates or updates a ExpressRoute gateway in a specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/expressroutegateways/createorupdate
    example:
      inputs: [
        {
          "location": "westus",
          "properties": {
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupId/providers/Microsoft.Network/virtualHubs/virtualHubName"
            },
            "autoScaleConfiguration": {
              "bounds": {
                "min": 3
              }
            }
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/gateway-2",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "gateway-2",
          "type": "Microsoft.Network/expressRouteGateways",
          "location": "westus",
          "properties": {
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName"
            },
            "provisioningState": "Succeeded",
            "autoScaleConfiguration": {
              "bounds": {
                "min": 3
              }
            }
          }
        }
      ]
  ExpressRouteGateways.Delete:
    description: |-
      Deletes the specified ExpressRoute gateway in a resource group. An ExpressRoute gateway resource can only be deleted when there are no connection subresources.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/expressroutegateways/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ExpressRouteGateways.Get:
    description: |-
      Fetches the details of a ExpressRoute gateway in a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/expressroutegateways/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "expressRouteGatewayName",
          "type": "Microsoft.Network/expressRouteGateways",
          "location": "westus",
          "properties": {
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName"
            },
            "provisioningState": "Succeeded"
          }
        }
      ]
  ExpressRouteGateways.ListByResourceGroup:
    description: |-
      Lists ExpressRoute gateways in a given resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/expressroutegateways/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "expressRouteGatewayName",
              "type": "Microsoft.Network/expressRouteGateways",
              "location": "westus",
              "properties": {
                "virtualHub": {
                  "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName"
                },
                "provisioningState": "Succeeded",
                "autoScaleConfiguration": {
                  "bounds": {
                    "min": 2
                  }
                },
                "expressRouteConnections": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName/expressRouteConnections/connectionName",
                    "name": "connectionName",
                    "properties": {
                      "routingWeight": 1,
                      "authorizationKey": "f28e9c99-78d8-4248-a855-c54cf6beb99d",
                      "provisioningState": "Provisioned",
                      "routingConfiguration": {
                        "vnetRoutes": {
                          "staticRoutes": []
                        },
                        "associatedRouteTable": {
                          "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName/hubRouteTables/hubRouteTable1"
                        },
                        "propagatedRouteTables": {
                          "ids": [
                            {
                              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName/hubRouteTables/hubRouteTable1"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName/hubRouteTables/hubRouteTable2"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/hvirtualHubNameub1/hubRouteTables/hubRouteTable3"
                            }
                          ],
                          "labels": [
                            "label1",
                            "label2"
                          ]
                        }
                      },
                      "enableInternetSecurity": false,
                      "expressRouteCircuitPeering": {
                        "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  ExpressRouteGateways.ListBySubscription:
    description: |-
      Lists ExpressRoute gateways under a given subscription.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/expressroutegateways/listbysubscription
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "expressRouteGatewayName",
              "type": "Microsoft.Network/expressRouteGateways",
              "location": "westus",
              "properties": {
                "virtualHub": {
                  "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName"
                },
                "provisioningState": "Succeeded",
                "autoScaleConfiguration": {
                  "bounds": {
                    "min": 2
                  }
                },
                "expressRouteConnections": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName/expressRouteConnections/connectionName",
                    "name": "connectionName",
                    "properties": {
                      "routingWeight": 1,
                      "authorizationKey": "f28e9c99-78d8-4248-a855-c54cf6beb99d",
                      "provisioningState": "Provisioned",
                      "routingConfiguration": {
                        "vnetRoutes": {
                          "staticRoutes": []
                        },
                        "associatedRouteTable": {
                          "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName/hubRouteTables/hubRouteTable1"
                        },
                        "propagatedRouteTables": {
                          "ids": [
                            {
                              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName/hubRouteTables/hubRouteTable1"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName/hubRouteTables/hubRouteTable2"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/hvirtualHubNameub1/hubRouteTables/hubRouteTable3"
                            }
                          ],
                          "labels": [
                            "label1",
                            "label2"
                          ]
                        }
                      },
                      "enableInternetSecurity": false,
                      "expressRouteCircuitPeering": {
                        "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/circuitName/peerings/AzurePrivatePeering"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  ExpressRouteGateways.UpdateTags:
    description: |-
      Updates express route gateway tags.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/expressroutegateways/updatetags
    example:
      inputs: [
        {
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "expressRouteGatewayName",
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          },
          "type": "Microsoft.Network/expressRouteGateways",
          "location": "westus",
          "properties": {
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualHubs/virtualHubName"
            },
            "provisioningState": "Succeeded"
          }
        }
      ]
  Generatevirtualwanvpnserverconfigurationvpnprofile.Generatevirtualwanvpnserverconfigurationvpnprofile:
    description: |-
      Generates a unique VPN profile for P2S clients for VirtualWan and associated VpnServerConfiguration combination in the specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/generatevirtualwanvpnserverconfigurationvpnprofile/generatevirtualwanvpnserverconfigurationvpnprofile
    example:
      inputs: [
        {
          "authenticationMethod": "EAPTLS",
          "vpnServerConfigurationResourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnconfig1"
        }
      ]
      outputs: [
        {}
      ]
  HubRouteTables.CreateOrUpdate:
    description: |-
      Creates a RouteTable resource if it doesn't exist else updates the existing RouteTable.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/hubroutetables/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "labels": [
              "label1",
              "label2"
            ],
            "routes": [
              {
                "name": "route1",
                "nextHop": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/azureFirewalls/azureFirewall1",
                "nextHopType": "ResourceId",
                "destinations": [
                  "10.0.0.0/8",
                  "20.0.0.0/8",
                  "30.0.0.0/8"
                ],
                "destinationType": "CIDR"
              }
            ]
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "hubRouteTable1",
          "type": "Microsoft.Network/virtualHubs/hubRouteTables",
          "properties": {
            "labels": [
              "label1",
              "label2"
            ],
            "routes": [
              {
                "name": "route1",
                "nextHop": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/azureFirewalls/azureFirewall1",
                "nextHopType": "ResourceId",
                "destinations": [
                  "10.0.0.0/8",
                  "20.0.0.0/8",
                  "30.0.0.0/8"
                ],
                "destinationType": "CIDR"
              }
            ],
            "provisioningState": "Succeeded",
            "associatedConnections": [
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubVirtualNetworkConnections/vnetConnn1",
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubVirtualNetworkConnections/vnetConnn2"
            ],
            "propagatingConnections": [
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteGateways/erg1/expressRouteConnections/erConn1",
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/vpngw1/vpnConnections/vpnConn2"
            ]
          }
        }
      ]
  HubRouteTables.Delete:
    description: |-
      Deletes a RouteTable.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/hubroutetables/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  HubRouteTables.Get:
    description: |-
      Retrieves the details of a RouteTable.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/hubroutetables/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "hubRouteTable1",
          "type": "Microsoft.Network/virtualHubs/hubRouteTables",
          "properties": {
            "labels": [
              "label1",
              "label2"
            ],
            "routes": [
              {
                "name": "route1",
                "nextHop": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/azureFirewalls/azureFirewall1",
                "nextHopType": "ResourceId",
                "destinations": [
                  "10.0.0.0/8",
                  "20.0.0.0/8",
                  "30.0.0.0/8"
                ],
                "destinationType": "CIDR"
              }
            ],
            "provisioningState": "Succeeded",
            "associatedConnections": [
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubVirtualNetworkConnections/vnetConnn1",
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubVirtualNetworkConnections/vnetConnn2"
            ],
            "propagatingConnections": [
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteGateways/erg1/expressRouteConnections/erConn1",
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/vpngw1/vpnConnections/vpnConn2"
            ]
          }
        }
      ]
  HubRouteTables.List:
    description: |-
      Retrieves the details of all RouteTables.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/hubroutetables/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "hubRouteTable1",
            "type": "Microsoft.Network/virtualHubs/hubRouteTables",
            "properties": {
              "labels": [
                "label1",
                "label2"
              ],
              "routes": [
                {
                  "name": "route1a",
                  "nextHop": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/azureFirewalls/azureFirewall1",
                  "nextHopType": "ResourceId",
                  "destinations": [
                    "10.0.0.0/8",
                    "20.0.0.0/8",
                    "30.0.0.0/8"
                  ],
                  "destinationType": "CIDR"
                }
              ],
              "provisioningState": "Succeeded",
              "associatedConnections": [
                "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubVirtualNetworkConnections/vnetConnn1",
                "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubVirtualNetworkConnections/vnetConnn2"
              ],
              "propagatingConnections": [
                "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteGateways/erg1/expressRouteConnections/erConn1",
                "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/vpngw1/vpnConnections/vpnConn2"
              ]
            }
          },
          {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "hubRouteTable2",
            "type": "Microsoft.Network/virtualHubs/hubRouteTables",
            "properties": {
              "labels": [
                "label3"
              ],
              "routes": [
                {
                  "name": "route2a",
                  "nextHop": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubVirtualNetworkConnections/vn1",
                  "nextHopType": "ResourceId",
                  "destinations": [
                    "40.0.0.0/8",
                    "50.0.0.0/8",
                    "60.0.0.0/8"
                  ],
                  "destinationType": "CIDR"
                }
              ],
              "provisioningState": "Succeeded",
              "associatedConnections": [
                "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubVirtualNetworkConnections/vnetConnn3",
                "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubVirtualNetworkConnections/vnetConnn4"
              ],
              "propagatingConnections": [
                "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteGateways/erg1/expressRouteConnections/erConn2",
                "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/vpngw1/vpnConnections/vpnConn1"
              ]
            }
          }
        ]
      ]
  HubVirtualNetworkConnections.CreateOrUpdate:
    description: |-
      Creates a hub virtual network connection if it doesn't exist else updates the existing one.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/hubvirtualnetworkconnections/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "remoteVirtualNetwork": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/SpokeVnet1"
            },
            "routingConfiguration": {
              "vnetRoutes": {
                "staticRoutes": [
                  {
                    "name": "route1",
                    "addressPrefixes": [
                      "10.1.0.0/16",
                      "10.2.0.0/16"
                    ],
                    "nextHopIpAddress": "10.0.0.68"
                  },
                  {
                    "name": "route2",
                    "addressPrefixes": [
                      "10.3.0.0/16",
                      "10.4.0.0/16"
                    ],
                    "nextHopIpAddress": "10.0.0.65"
                  }
                ]
              },
              "associatedRouteTable": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
              },
              "propagatedRouteTables": {
                "ids": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                  }
                ],
                "labels": [
                  "label1",
                  "label2"
                ]
              }
            },
            "enableInternetSecurity": false
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubVirtualNetworkConnections/connection1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "connection1",
          "properties": {
            "provisioningState": "Updating",
            "remoteVirtualNetwork": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/SpokeVnet1"
            },
            "routingConfiguration": {
              "vnetRoutes": {
                "staticRoutes": [
                  {
                    "name": "route1",
                    "addressPrefixes": [
                      "10.1.0.0/16",
                      "10.2.0.0/16"
                    ],
                    "nextHopIpAddress": "10.0.0.68"
                  },
                  {
                    "name": "route2",
                    "addressPrefixes": [
                      "10.3.0.0/16",
                      "10.4.0.0/16"
                    ],
                    "nextHopIpAddress": "10.0.0.65"
                  }
                ]
              },
              "associatedRouteTable": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
              },
              "propagatedRouteTables": {
                "ids": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                  }
                ],
                "labels": [
                  "label1",
                  "label2"
                ]
              }
            },
            "enableInternetSecurity": false
          }
        }
      ]
  HubVirtualNetworkConnections.Delete:
    description: |-
      Deletes a HubVirtualNetworkConnection.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/hubvirtualnetworkconnections/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  HubVirtualNetworkConnections.Get:
    description: |-
      Retrieves the details of a HubVirtualNetworkConnection.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/hubvirtualnetworkconnections/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/virtualHubVnetConnections/connection1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "connection1",
          "properties": {
            "provisioningState": "Succeeded",
            "remoteVirtualNetwork": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet1"
            },
            "routingConfiguration": {
              "vnetRoutes": {
                "staticRoutes": [
                  {
                    "name": "route1",
                    "addressPrefixes": [
                      "10.1.0.0/16",
                      "10.2.0.0/16"
                    ],
                    "nextHopIpAddress": "10.0.0.68"
                  },
                  {
                    "name": "route2",
                    "addressPrefixes": [
                      "10.3.0.0/16",
                      "10.4.0.0/16"
                    ],
                    "nextHopIpAddress": "10.0.0.65"
                  }
                ]
              },
              "associatedRouteTable": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
              },
              "propagatedRouteTables": {
                "ids": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                  }
                ],
                "labels": [
                  "label1",
                  "label2"
                ]
              }
            },
            "enableInternetSecurity": false
          }
        }
      ]
  HubVirtualNetworkConnections.List:
    description: |-
      Retrieves the details of all HubVirtualNetworkConnections.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/hubvirtualnetworkconnections/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/virtualHubVnetConnections/connection1",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "connection1",
            "properties": {
              "provisioningState": "Succeeded",
              "remoteVirtualNetwork": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet1"
              },
              "routingConfiguration": {
                "vnetRoutes": {
                  "staticRoutes": [
                    {
                      "name": "route1",
                      "addressPrefixes": [
                        "10.1.0.0/16",
                        "10.2.0.0/16"
                      ],
                      "nextHopIpAddress": "10.0.0.68"
                    },
                    {
                      "name": "route2",
                      "addressPrefixes": [
                        "10.3.0.0/16",
                        "10.4.0.0/16"
                      ],
                      "nextHopIpAddress": "10.0.0.65"
                    }
                  ]
                },
                "associatedRouteTable": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                },
                "propagatedRouteTables": {
                  "ids": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                    },
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                    },
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                    }
                  ],
                  "labels": [
                    "label1",
                    "label2"
                  ]
                }
              },
              "enableInternetSecurity": false
            }
          },
          {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/virtualHubVnetConnections/connection2",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "connection2",
            "properties": {
              "provisioningState": "Succeeded",
              "remoteVirtualNetwork": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet2"
              },
              "routingConfiguration": {
                "vnetRoutes": {
                  "staticRoutes": [
                    {
                      "name": "route1",
                      "addressPrefixes": [
                        "10.1.0.0/16",
                        "10.2.0.0/16"
                      ],
                      "nextHopIpAddress": "10.0.0.68"
                    },
                    {
                      "name": "route2",
                      "addressPrefixes": [
                        "10.3.0.0/16",
                        "10.4.0.0/16"
                      ],
                      "nextHopIpAddress": "10.0.0.65"
                    }
                  ]
                },
                "associatedRouteTable": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                },
                "propagatedRouteTables": {
                  "ids": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                    },
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                    },
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                    }
                  ],
                  "labels": [
                    "label1",
                    "label2"
                  ]
                }
              },
              "enableInternetSecurity": false
            }
          }
        ]
      ]
  NatRules.CreateOrUpdate:
    description: |-
      Creates a nat rule to a scalable vpn gateway if it doesn't exist else updates the existing nat rules.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/natrules/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "mode": "EgressSnat",
            "type": "Static",
            "externalMappings": [
              {
                "addressSpace": "192.168.21.0/24"
              }
            ],
            "internalMappings": [
              {
                "addressSpace": "10.4.0.0/24"
              }
            ],
            "ipConfigurationId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/cloudnet1-VNG/ipConfigurations/default"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/natRule1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "natRule1",
          "properties": {
            "mode": "EgressSnat",
            "type": "Static",
            "externalMappings": [
              {
                "addressSpace": "192.168.21.0/24"
              }
            ],
            "internalMappings": [
              {
                "addressSpace": "10.4.0.0/24"
              }
            ],
            "ipConfigurationId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/cloudnet1-VNG/ipConfigurations/default",
            "provisioningState": "Succeeded",
            "egressVpnSiteLinkConnections": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/vpnLinkConnections/vpnLinkConnection1"
              }
            ],
            "ingressVpnSiteLinkConnections": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/vpnLinkConnections/vpnLinkConnection2"
              }
            ]
          }
        }
      ]
  NatRules.Delete:
    description: |-
      Deletes a nat rule.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/natrules/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  NatRules.Get:
    description: |-
      Retrieves the details of a nat ruleGet.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/natrules/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/natRule1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "natRule1",
          "properties": {
            "mode": "EgressSnat",
            "type": "Static",
            "externalMappings": [],
            "internalMappings": [
              {
                "addressSpace": "10.4.0.0/24"
              }
            ],
            "provisioningState": "Succeeded",
            "egressVpnSiteLinkConnections": [],
            "ingressVpnSiteLinkConnections": []
          }
        }
      ]
  NatRules.ListByVpnGateway:
    description: |-
      Retrieves all nat rules for a particular virtual wan vpn gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/natrules/listbyvpngateway
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/natRule1",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "natRule1",
            "properties": {
              "mode": "EgressSnat",
              "type": "Static",
              "externalMappings": [
                {
                  "addressSpace": "192.168.21.0/24"
                }
              ],
              "internalMappings": [
                {
                  "addressSpace": "10.4.0.0/24"
                }
              ],
              "ipConfigurationId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/cloudnet1-VNG/ipConfigurations/default",
              "provisioningState": "Succeeded",
              "egressVpnSiteLinkConnections": [
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/vpnLinkConnections/vpnLinkConnection1"
                }
              ],
              "ingressVpnSiteLinkConnections": [
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/vpnLinkConnections/vpnLinkConnection2"
                }
              ]
            }
          },
          {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/natRule2",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "natRule2",
            "properties": {
              "mode": "EgressSnat",
              "type": "Static",
              "externalMappings": [
                {
                  "addressSpace": "192.168.21.0/24"
                }
              ],
              "internalMappings": [
                {
                  "addressSpace": "10.4.0.0/24"
                }
              ],
              "ipConfigurationId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/cloudnet1-VNG1/ipConfigurations/default",
              "provisioningState": "Succeeded",
              "egressVpnSiteLinkConnections": [
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/vpnLinkConnections/vpnLinkConnection1"
                }
              ],
              "ingressVpnSiteLinkConnections": [
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/vpnLinkConnections/vpnLinkConnection2"
                }
              ]
            }
          }
        ]
      ]
  P2SVpnGateways.2.Reset:
    description: |-
      Resets the primary of the p2s vpn gateway in the specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/p2svpngateways%202/reset
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/P2SvpnGateways/p2sVpnGateway1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "p2sVpnGateway1",
          "type": "Microsoft.Network/p2sVpnGateways",
          "location": "West US",
          "properties": {
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
            },
            "customDnsServers": [
              "3.3.3.3"
            ],
            "provisioningState": "Succeeded",
            "vpnGatewayScaleUnit": 1,
            "vpnServerConfiguration": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1"
            },
            "vpnClientConnectionHealth": {
              "allocatedIpAddresses": [
                "1.1.1.1",
                "2.2.2.2"
              ],
              "vpnClientConnectionsCount": 2,
              "totalEgressBytesTransferred": 3000,
              "totalIngressBytesTransferred": 2000
            },
            "isRoutingPreferenceInternet": false,
            "p2SConnectionConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "P2SConnectionConfig1",
                "properties": {
                  "provisioningState": "Succeeded",
                  "vpnClientAddressPool": {
                    "addressPrefixes": [
                      "101.3.0.0/16"
                    ]
                  },
                  "enableInternetSecurity": false
                }
              }
            ]
          }
        }
      ]
  P2sVpnGateways.CreateOrUpdate:
    description: |-
      Creates a virtual wan p2s vpn gateway if it doesn't exist else updates the existing gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/p2svpngateways/createorupdate
    example:
      inputs: [
        {
          "tags": {
            "key1": "value1"
          },
          "location": "West US",
          "properties": {
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
            },
            "customDnsServers": [
              "1.1.1.1",
              "2.2.2.2"
            ],
            "vpnGatewayScaleUnit": 1,
            "vpnServerConfiguration": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1"
            },
            "isRoutingPreferenceInternet": false,
            "p2SConnectionConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1",
                "name": "P2SConnectionConfig1",
                "properties": {
                  "routingConfiguration": {
                    "vnetRoutes": {
                      "staticRoutes": []
                    },
                    "associatedRouteTable": {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                    },
                    "propagatedRouteTables": {
                      "ids": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                        }
                      ],
                      "labels": [
                        "label1",
                        "label2"
                      ]
                    }
                  },
                  "vpnClientAddressPool": {
                    "addressPrefixes": [
                      "101.3.0.0/16"
                    ]
                  }
                }
              }
            ]
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/P2SvpnGateways/p2sVpnGateway1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "p2sVpnGateway1",
          "type": "Microsoft.Network/p2sVpnGateways",
          "location": "West US",
          "properties": {
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
            },
            "customDnsServers": [
              "1.1.1.1",
              "2.2.2.2"
            ],
            "provisioningState": "Succeeded",
            "vpnGatewayScaleUnit": 1,
            "vpnServerConfiguration": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1"
            },
            "vpnClientConnectionHealth": {
              "allocatedIpAddresses": [],
              "vpnClientConnectionsCount": 0,
              "totalEgressBytesTransferred": 0,
              "totalIngressBytesTransferred": 0
            },
            "isRoutingPreferenceInternet": false,
            "p2SConnectionConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "P2SConnectionConfig1",
                "properties": {
                  "provisioningState": "Succeeded",
                  "routingConfiguration": {
                    "vnetRoutes": {
                      "staticRoutes": []
                    },
                    "associatedRouteTable": {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                    },
                    "propagatedRouteTables": {
                      "ids": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                        }
                      ],
                      "labels": [
                        "label1",
                        "label2"
                      ]
                    }
                  },
                  "vpnClientAddressPool": {
                    "addressPrefixes": [
                      "101.3.0.0/16"
                    ]
                  },
                  "enableInternetSecurity": false
                }
              }
            ]
          }
        }
      ]
  P2sVpnGateways.Delete:
    description: |-
      Deletes a virtual wan p2s vpn gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/p2svpngateways/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  P2sVpnGateways.DisconnectP2sVpnConnections:
    description: |-
      Disconnect P2S vpn connections of the virtual wan P2SVpnGateway in the specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/p2svpngateways/disconnectp2svpnconnections
    example:
      inputs: [
        {
          "vpnConnectionIds": [
            "vpnconnId1",
            "vpnconnId2"
          ]
        }
      ]
      outputs: [
        {}
      ]
  P2sVpnGateways.GenerateVpnProfile:
    description: |-
      Generates VPN profile for P2S client of the P2SVpnGateway in the specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/p2svpngateways/generatevpnprofile
    example:
      inputs: [
        {
          "authenticationMethod": "EAPTLS"
        }
      ]
      outputs: [
        {}
      ]
  P2sVpnGateways.Get:
    description: |-
      Retrieves the details of a virtual wan p2s vpn gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/p2svpngateways/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/P2SvpnGateways/p2sVpnGateway1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "p2sVpnGateway1",
          "type": "Microsoft.Network/p2sVpnGateways",
          "location": "West US",
          "properties": {
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
            },
            "customDnsServers": [
              "3.3.3.3"
            ],
            "provisioningState": "Succeeded",
            "vpnGatewayScaleUnit": 1,
            "vpnServerConfiguration": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1"
            },
            "vpnClientConnectionHealth": {
              "allocatedIpAddresses": [
                "1.1.1.1",
                "2.2.2.2"
              ],
              "vpnClientConnectionsCount": 2,
              "totalEgressBytesTransferred": 3000,
              "totalIngressBytesTransferred": 2000
            },
            "isRoutingPreferenceInternet": false,
            "p2SConnectionConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "P2SConnectionConfig1",
                "properties": {
                  "provisioningState": "Succeeded",
                  "routingConfiguration": {
                    "vnetRoutes": {
                      "staticRoutes": []
                    },
                    "associatedRouteTable": {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                    },
                    "propagatedRouteTables": {
                      "ids": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                        }
                      ],
                      "labels": [
                        "label1",
                        "label2"
                      ]
                    }
                  },
                  "vpnClientAddressPool": {
                    "addressPrefixes": [
                      "101.3.0.0/16"
                    ]
                  },
                  "enableInternetSecurity": false
                }
              }
            ]
          }
        }
      ]
  P2sVpnGateways.GetP2sVpnConnectionHealth:
    description: |-
      Gets the connection health of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/p2svpngateways/getp2svpnconnectionhealth
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/P2SvpnGateways/p2sVpnGateway1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "p2sVpnGateway1",
          "type": "Microsoft.Network/p2sVpnGateways",
          "location": "West US",
          "properties": {
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
            },
            "customDnsServers": [
              "3.3.3.3"
            ],
            "provisioningState": "Succeeded",
            "vpnGatewayScaleUnit": 1,
            "vpnServerConfiguration": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1"
            },
            "vpnClientConnectionHealth": {
              "allocatedIpAddresses": [
                "1.1.1.1",
                "2.2.2.2"
              ],
              "vpnClientConnectionsCount": 2,
              "totalEgressBytesTransferred": 3000,
              "totalIngressBytesTransferred": 2000
            },
            "isRoutingPreferenceInternet": false,
            "p2SConnectionConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "P2SConnectionConfig1",
                "properties": {
                  "provisioningState": "Succeeded",
                  "vpnClientAddressPool": {
                    "addressPrefixes": [
                      "101.3.0.0/16"
                    ]
                  },
                  "enableInternetSecurity": false
                }
              }
            ]
          }
        }
      ]
  P2sVpnGateways.GetP2sVpnConnectionHealthDetailed:
    description: |-
      Gets the sas url to get the connection health detail of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/p2svpngateways/getp2svpnconnectionhealthdetailed
    example:
      inputs: [
        {
          "outputBlobSasUrl": "https://blobcortextesturl.blob.core.windows.net/folderforconfig/p2sconnectionhealths?sp=rw&se=2018-01-10T03%3A42%3A04Z&sv=2017-04-17&sig=WvXrT5bDmDFfgHs%2Brz%2BjAu123eRCNE9BO0eQYcPDT7pY%3D&sr=b",
          "vpnUserNamesFilter": [
            "vpnUser1",
            "vpnUser2"
          ]
        }
      ]
      outputs: [
        {}
      ]
  P2sVpnGateways.List:
    description: |-
      Lists all the P2SVpnGateways in a subscription.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/p2svpngateways/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/P2SvpnGateways/p2sVpnGateway1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "p2sVpnGateway1",
              "type": "Microsoft.Network/p2sVpnGateways",
              "location": "West US",
              "properties": {
                "virtualHub": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
                },
                "customDnsServers": [
                  "3.3.3.3"
                ],
                "provisioningState": "Succeeded",
                "vpnGatewayScaleUnit": 1,
                "vpnServerConfiguration": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1"
                },
                "vpnClientConnectionHealth": {
                  "allocatedIpAddresses": [
                    "1.1.1.1",
                    "2.2.2.2"
                  ],
                  "vpnClientConnectionsCount": 2,
                  "totalEgressBytesTransferred": 3000,
                  "totalIngressBytesTransferred": 2000
                },
                "isRoutingPreferenceInternet": false,
                "p2SConnectionConfigurations": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1",
                    "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                    "name": "P2SConnectionConfig1",
                    "properties": {
                      "provisioningState": "Succeeded",
                      "routingConfiguration": {
                        "vnetRoutes": {
                          "staticRoutes": []
                        },
                        "associatedRouteTable": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                        },
                        "propagatedRouteTables": {
                          "ids": [
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                            }
                          ],
                          "labels": [
                            "label1",
                            "label2"
                          ]
                        }
                      },
                      "vpnClientAddressPool": {
                        "addressPrefixes": [
                          "101.3.0.0/16"
                        ]
                      },
                      "enableInternetSecurity": true
                    }
                  }
                ]
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/P2SvpnGateways/p2sVpnGateway2",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "p2sVpnGateway2",
              "type": "Microsoft.Network/p2sVpnGateways",
              "location": "West US",
              "properties": {
                "virtualHub": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2"
                },
                "customDnsServers": [
                  "4.4.4.4"
                ],
                "provisioningState": "Succeeded",
                "vpnGatewayScaleUnit": 1,
                "vpnServerConfiguration": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1"
                },
                "vpnClientConnectionHealth": {
                  "allocatedIpAddresses": [
                    "1.1.1.1",
                    "2.2.2.2"
                  ],
                  "vpnClientConnectionsCount": 2,
                  "totalEgressBytesTransferred": 3000,
                  "totalIngressBytesTransferred": 2000
                },
                "isRoutingPreferenceInternet": false,
                "p2SConnectionConfigurations": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1",
                    "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                    "name": "P2SConnectionConfig1",
                    "properties": {
                      "provisioningState": "Succeeded",
                      "routingConfiguration": {
                        "vnetRoutes": {
                          "staticRoutes": []
                        },
                        "associatedRouteTable": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable1"
                        },
                        "propagatedRouteTables": {
                          "ids": [
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable1"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable2"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable3"
                            }
                          ],
                          "labels": [
                            "label1",
                            "label2"
                          ]
                        }
                      },
                      "vpnClientAddressPool": {
                        "addressPrefixes": [
                          "101.4.0.0/16"
                        ]
                      },
                      "enableInternetSecurity": true
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  P2sVpnGateways.ListByResourceGroup:
    description: |-
      Lists all the P2SVpnGateways in a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/p2svpngateways/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/P2SvpnGateways/p2sVpnGateway1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "p2sVpnGateway1",
              "type": "Microsoft.Network/p2sVpnGateways",
              "location": "West US",
              "properties": {
                "virtualHub": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
                },
                "customDnsServers": [
                  "3.3.3.3"
                ],
                "provisioningState": "Succeeded",
                "vpnGatewayScaleUnit": 1,
                "vpnServerConfiguration": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1"
                },
                "vpnClientConnectionHealth": {
                  "allocatedIpAddresses": [
                    "1.1.1.1",
                    "2.2.2.2"
                  ],
                  "vpnClientConnectionsCount": 2,
                  "totalEgressBytesTransferred": 3000,
                  "totalIngressBytesTransferred": 2000
                },
                "isRoutingPreferenceInternet": false,
                "p2SConnectionConfigurations": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1",
                    "name": "P2SConnectionConfig1",
                    "properties": {
                      "routingConfiguration": {
                        "vnetRoutes": {
                          "staticRoutes": []
                        },
                        "associatedRouteTable": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                        },
                        "propagatedRouteTables": {
                          "ids": [
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                            }
                          ],
                          "labels": [
                            "label1",
                            "label2"
                          ]
                        }
                      },
                      "vpnClientAddressPool": {
                        "addressPrefixes": [
                          "101.3.0.0/16"
                        ]
                      },
                      "enableInternetSecurity": false
                    }
                  }
                ]
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/P2SvpnGateways/p2sVpnGateway2",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "p2sVpnGateway2",
              "type": "Microsoft.Network/p2sVpnGateways",
              "location": "West US",
              "properties": {
                "virtualHub": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2"
                },
                "customDnsServers": [
                  "4.4.4.4"
                ],
                "provisioningState": "Succeeded",
                "vpnGatewayScaleUnit": 1,
                "vpnServerConfiguration": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1"
                },
                "vpnClientConnectionHealth": {
                  "allocatedIpAddresses": [
                    "1.1.1.1",
                    "2.2.2.2"
                  ],
                  "vpnClientConnectionsCount": 2,
                  "totalEgressBytesTransferred": 3000,
                  "totalIngressBytesTransferred": 2000
                },
                "isRoutingPreferenceInternet": false,
                "p2SConnectionConfigurations": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1",
                    "name": "P2SConnectionConfig1",
                    "properties": {
                      "routingConfiguration": {
                        "vnetRoutes": {
                          "staticRoutes": []
                        },
                        "associatedRouteTable": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable1"
                        },
                        "propagatedRouteTables": {
                          "ids": [
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable1"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable2"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable3"
                            }
                          ],
                          "labels": [
                            "label1",
                            "label2"
                          ]
                        }
                      },
                      "vpnClientAddressPool": {
                        "addressPrefixes": [
                          "101.3.0.0/16"
                        ]
                      },
                      "enableInternetSecurity": false
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  P2sVpnGateways.UpdateTags:
    description: |-
      Updates virtual wan p2s vpn gateway tags.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/p2svpngateways/updatetags
    example:
      inputs: [
        {
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/P2SvpnGateways/p2sVpnGateway1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "p2sVpnGateway1",
          "tags": {
            "key1": "value1",
            "key2": "value2"
          },
          "type": "Microsoft.Network/p2sVpnGateways",
          "location": "West US",
          "properties": {
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
            },
            "customDnsServers": [
              "3.3.3.3"
            ],
            "provisioningState": "Succeeded",
            "vpnGatewayScaleUnit": 1,
            "vpnServerConfiguration": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1"
            },
            "vpnClientConnectionHealth": {
              "allocatedIpAddresses": [
                "1.1.1.1",
                "2.2.2.2"
              ],
              "vpnClientConnectionsCount": 2,
              "totalEgressBytesTransferred": 3000,
              "totalIngressBytesTransferred": 2000
            },
            "isRoutingPreferenceInternet": false,
            "p2SConnectionConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1",
                "name": "P2SConnectionConfig1",
                "properties": {
                  "routingConfiguration": {
                    "vnetRoutes": {
                      "staticRoutes": []
                    },
                    "associatedRouteTable": {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                    },
                    "propagatedRouteTables": {
                      "ids": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                        }
                      ],
                      "labels": [
                        "label1",
                        "label2"
                      ]
                    }
                  },
                  "vpnClientAddressPool": {
                    "addressPrefixes": [
                      "101.3.0.0/16"
                    ]
                  },
                  "enableInternetSecurity": false
                }
              }
            ]
          }
        }
      ]
  SupportedSecurityProviders.SupportedSecurityProviders:
    description: |-
      Gives the supported security providers for the virtual wan.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/supportedsecurityproviders/supportedsecurityproviders
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "supportedProviders": [
            {
              "url": "",
              "name": "AzureFirewall",
              "type": "Native"
            }
          ]
        }
      ]
  VirtualHubBgpConnection.CreateOrUpdate:
    description: |-
      Creates a VirtualHubBgpConnection resource if it doesn't exist else updates the existing VirtualHubBgpConnection.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubbgpconnection/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "peerIp": "192.168.1.5",
            "peerAsn": 20000
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/bgpConnections/conn1",
          "etag": "W/\"72090554-7e3b-43f2-80ad-99a9020dcb11\"",
          "name": "conn1",
          "properties": {
            "peerIp": "192.168.1.5",
            "peerAsn": 20000,
            "connectionState": "Connected",
            "provisioningState": "Succeeded"
          }
        }
      ]
  VirtualHubBgpConnection.Delete:
    description: |-
      Deletes a VirtualHubBgpConnection.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubbgpconnection/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  VirtualHubBgpConnection.Get:
    description: |-
      Retrieves the details of a Virtual Hub Bgp Connection.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubbgpconnection/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/bgpConnections/conn1",
          "etag": "W/\"72090554-7e3b-43f2-80ad-99a9020dcb11\"",
          "name": "conn1",
          "properties": {
            "peerIp": "192.168.1.5",
            "peerAsn": 20000,
            "connectionState": "Connected",
            "provisioningState": "Succeeded"
          }
        }
      ]
  VirtualHubBgpConnections.List:
    description: |-
      Retrieves the details of all VirtualHubBgpConnections.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubbgpconnections/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/bgpConnections/conn1",
              "etag": "W/\"72090554-7e3b-43f2-80ad-99a9020dcb11\"",
              "name": "conn1",
              "properties": {
                "peerIp": "192.168.1.5",
                "peerAsn": 20000,
                "connectionState": "Connected",
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]
  VirtualHubBgpConnections.ListAdvertisedRoutes:
    description: |-
      Retrieves a list of routes the virtual hub bgp connection is advertising to the specified peer.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubbgpconnections/listadvertisedroutes
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "asPath": "65515",
              "origin": "Igp",
              "weight": 0,
              "network": "10.45.0.0/16",
              "nextHop": "10.85.3.4",
              "sourcePeer": "10.85.3.4",
              "localAddress": "10.85.3.4"
            },
            {
              "asPath": "65515",
              "origin": "Igp",
              "weight": 0,
              "network": "10.85.0.0/16",
              "nextHop": "10.85.3.4",
              "sourcePeer": "10.85.3.4",
              "localAddress": "10.85.3.4"
            },
            {
              "asPath": "65515",
              "origin": "Igp",
              "weight": 0,
              "network": "10.100.0.0/16",
              "nextHop": "10.85.3.4",
              "sourcePeer": "10.85.3.4",
              "localAddress": "10.85.3.4"
            }
          ]
        }
      ]
  VirtualHubBgpConnections.ListLearnedRoutes:
    description: |-
      Retrieves a list of routes the virtual hub bgp connection has learned.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubbgpconnections/listlearnedroutes
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "asPath": "65002-65001",
              "origin": "EBgp",
              "weight": 32768,
              "network": "10.101.0.0/16",
              "nextHop": "10.85.4.4",
              "sourcePeer": "10.85.4.4",
              "localAddress": "10.85.3.4"
            },
            {
              "asPath": "65002-65001",
              "origin": "EBgp",
              "weight": 32768,
              "network": "10.101.0.0/16",
              "nextHop": "10.85.4.4",
              "sourcePeer": "10.85.4.4",
              "localAddress": "10.85.3.5"
            }
          ]
        }
      ]
  VirtualHubIpConfiguration.CreateOrUpdate:
    description: |-
      Creates a VirtualHubIpConfiguration resource if it doesn't exist else updates the existing VirtualHubIpConfiguration.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubipconfiguration/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "subnet": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/ipConfigurations/ipconfig1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "ipconfig1",
          "type": "Microsoft.Network/virtualHubs/ipConfigurations",
          "properties": {
            "subnet": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1"
            },
            "provisioningState": "Succeeded"
          }
        }
      ]
  VirtualHubIpConfiguration.Delete:
    description: |-
      Deletes a VirtualHubIpConfiguration.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubipconfiguration/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  VirtualHubIpConfiguration.Get:
    description: |-
      Retrieves the details of a Virtual Hub Ip configuration.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubipconfiguration/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/ipConfigurations/ipconfig1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "ipconfig1",
          "type": "Microsoft.Network/virtualHubs/ipConfigurations",
          "properties": {
            "subnet": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1"
            },
            "provisioningState": "Succeeded"
          }
        }
      ]
  VirtualHubIpConfiguration.List:
    description: |-
      Retrieves the details of all VirtualHubIpConfigurations.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubipconfiguration/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/ipConfigurations/ipconfig1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "ipconfig1",
              "type": "Microsoft.Network/virtualHubs/ipConfigurations",
              "properties": {
                "subnet": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1"
                },
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]
  VirtualHubRouteTableV2s.CreateOrUpdate:
    description: |-
      Creates a VirtualHubRouteTableV2 resource if it doesn't exist else updates the existing VirtualHubRouteTableV2.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubroutetablev2s/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "routes": [
              {
                "nextHops": [
                  "10.0.0.68"
                ],
                "nextHopType": "IPAddress",
                "destinations": [
                  "20.10.0.0/16",
                  "20.20.0.0/16"
                ],
                "destinationType": "CIDR"
              },
              {
                "nextHops": [
                  "10.0.0.68"
                ],
                "nextHopType": "IPAddress",
                "destinations": [
                  "0.0.0.0/0"
                ],
                "destinationType": "CIDR"
              }
            ],
            "attachedConnections": [
              "All_Vnets"
            ]
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeTables/virtualHubRouteTable1a",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "virtualHubRouteTable1a",
          "properties": {
            "routes": [
              {
                "nextHops": [
                  "10.0.0.68"
                ],
                "nextHopType": "IPAddress",
                "destinations": [
                  "20.10.0.0/16",
                  "20.20.0.0/16"
                ],
                "destinationType": "CIDR"
              },
              {
                "nextHops": [
                  "10.0.0.68"
                ],
                "nextHopType": "IPAddress",
                "destinations": [
                  "0.0.0.0/0"
                ],
                "destinationType": "CIDR"
              }
            ],
            "provisioningState": "Succeeded",
            "attachedConnections": [
              "All_Vnets"
            ]
          }
        }
      ]
  VirtualHubRouteTableV2s.Delete:
    description: |-
      Deletes a VirtualHubRouteTableV2.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubroutetablev2s/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  VirtualHubRouteTableV2s.Get:
    description: |-
      Retrieves the details of a VirtualHubRouteTableV2.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubroutetablev2s/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeTables/virtualHubRouteTable1a",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "virtualHubRouteTable1a",
          "properties": {
            "routes": [
              {
                "nextHops": [
                  "10.0.0.68"
                ],
                "nextHopType": "IPAddress",
                "destinations": [
                  "20.10.0.0/16",
                  "20.20.0.0/16"
                ],
                "destinationType": "CIDR"
              },
              {
                "nextHops": [
                  "10.0.0.68"
                ],
                "nextHopType": "IPAddress",
                "destinations": [
                  "0.0.0.0/0"
                ],
                "destinationType": "CIDR"
              }
            ],
            "provisioningState": "Succeeded",
            "attachedConnections": [
              "All_Vnets"
            ]
          }
        }
      ]
  VirtualHubRouteTableV2s.List:
    description: |-
      Retrieves the details of all VirtualHubRouteTableV2s.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubroutetablev2s/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeTables/virtualHubRouteTable1a",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "virtualHubRouteTable1a",
            "properties": {
              "routes": [
                {
                  "nextHops": [
                    "10.0.0.68"
                  ],
                  "nextHopType": "IPAddress",
                  "destinations": [
                    "20.10.0.0/16",
                    "20.20.0.0/16"
                  ],
                  "destinationType": "CIDR"
                },
                {
                  "nextHops": [
                    "10.0.0.68"
                  ],
                  "nextHopType": "IPAddress",
                  "destinations": [
                    "0.0.0.0/0"
                  ],
                  "destinationType": "CIDR"
                }
              ],
              "provisioningState": "Succeeded",
              "attachedConnections": [
                "All_Vnets"
              ]
            }
          },
          {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeTables/virtualHubRouteTable1b",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "virtualHubRouteTable1b",
            "properties": {
              "routes": [
                {
                  "nextHops": [
                    "10.0.0.68"
                  ],
                  "nextHopType": "IPAddress",
                  "destinations": [
                    "20.30.0.0/16",
                    "20.40.0.0/16"
                  ],
                  "destinationType": "CIDR"
                }
              ],
              "provisioningState": "Succeeded",
              "attachedConnections": [
                "All_Branches"
              ]
            }
          }
        ]
      ]
  VirtualHubs.CreateOrUpdate:
    description: |-
      Creates a VirtualHub resource if it doesn't exist else updates the existing VirtualHub.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubs/createorupdate
    example:
      inputs: [
        {
          "tags": {
            "key1": "value1"
          },
          "location": "West US",
          "properties": {
            "sku": "Basic",
            "virtualWan": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"
            },
            "addressPrefix": "10.168.0.0/24"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "virtualHub2",
          "type": "Microsoft.Network/virtualHubs",
          "location": "West US",
          "properties": {
            "sku": "Basic",
            "virtualWan": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"
            },
            "routingState": "Provisioned",
            "addressPrefix": "10.168.0.0/24",
            "virtualRouterAsn": 65515,
            "virtualRouterIps": [
              "10.10.1.12",
              "10.10.1.13"
            ],
            "provisioningState": "Succeeded",
            "virtualHubRouteTableV2s": [],
            "allowBranchToBranchTraffic": false
          }
        }
      ]
  VirtualHubs.Delete:
    description: |-
      Deletes a VirtualHub.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubs/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  VirtualHubs.Get:
    description: |-
      Retrieves the details of a VirtualHub.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "virtualHub1",
          "type": "Microsoft.Network/virtualHubs",
          "location": "West US",
          "properties": {
            "sku": "Basic",
            "virtualWan": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"
            },
            "routingState": "Provisioned",
            "addressPrefix": "10.10.1.0/24",
            "virtualRouterAsn": 65515,
            "virtualRouterIps": [
              "10.10.1.12",
              "10.10.1.13"
            ],
            "provisioningState": "Succeeded",
            "virtualHubRouteTableV2s": [],
            "allowBranchToBranchTraffic": false
          }
        }
      ]
  VirtualHubs.GetEffectiveVirtualHubRoutes:
    description: |-
      Gets the effective routes configured for the Virtual Hub resource or the specified resource .
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubs/geteffectivevirtualhubroutes
    example:
      inputs: [
        {
          "resourceId": "/subscriptions/subid/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteGateways/expressRouteGatewayName/expressRouteConnections/connectionName",
          "virtualWanResourceType": "ExpressRouteConnection"
        }
      ]
      outputs: [
        {}
      ]
  VirtualHubs.List:
    description: |-
      Lists all the VirtualHubs in a subscription.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "virtualHub1",
              "type": "Microsoft.Network/virtualHubs",
              "location": "West US",
              "properties": {
                "sku": "Basic",
                "virtualWan": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"
                },
                "routingState": "Provisioned",
                "addressPrefix": "10.10.1.0/24",
                "virtualRouterAsn": 65515,
                "virtualRouterIps": [
                  "10.10.1.12",
                  "10.10.1.13"
                ],
                "provisioningState": "Succeeded",
                "virtualHubRouteTableV2s": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeTables/virtualHubRouteTable1",
                    "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                    "name": "rt2a",
                    "properties": {
                      "routes": [
                        {
                          "nextHops": [
                            "10.0.0.68"
                          ],
                          "nextHopType": "IPAddress",
                          "destinations": [
                            "20.10.0.0/16",
                            "20.20.0.0/16"
                          ],
                          "destinationType": "CIDR"
                        },
                        {
                          "nextHops": [
                            "10.0.0.68"
                          ],
                          "nextHopType": "IPAddress",
                          "destinations": [
                            "0.0.0.0/0"
                          ],
                          "destinationType": "CIDR"
                        }
                      ],
                      "provisioningState": "Succeeded",
                      "attachedConnections": [
                        "All_Vnets"
                      ]
                    }
                  }
                ],
                "allowBranchToBranchTraffic": false
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "virtualHub2",
              "type": "Microsoft.Network/virtualHubs",
              "location": "East US",
              "properties": {
                "sku": "Basic",
                "virtualWan": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"
                },
                "routingState": "Provisioned",
                "addressPrefix": "210.10.1.0/24",
                "virtualRouterAsn": 65515,
                "virtualRouterIps": [
                  "10.10.1.12",
                  "10.10.1.13"
                ],
                "provisioningState": "Succeeded",
                "virtualHubRouteTableV2s": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2/routeTables/virtualHubRouteTable2",
                    "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                    "name": "rt2a",
                    "properties": {
                      "routes": [
                        {
                          "nextHops": [
                            "10.0.0.68"
                          ],
                          "nextHopType": "IPAddress",
                          "destinations": [
                            "20.10.0.0/16",
                            "20.20.0.0/16"
                          ],
                          "destinationType": "CIDR"
                        },
                        {
                          "nextHops": [
                            "10.0.0.68"
                          ],
                          "nextHopType": "IPAddress",
                          "destinations": [
                            "0.0.0.0/0"
                          ],
                          "destinationType": "CIDR"
                        }
                      ],
                      "provisioningState": "Succeeded",
                      "attachedConnections": [
                        "All_Vnets"
                      ]
                    }
                  }
                ],
                "allowBranchToBranchTraffic": false
              }
            }
          ]
        }
      ]
  VirtualHubs.ListByResourceGroup:
    description: |-
      Lists all the VirtualHubs in a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubs/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "virtualHub1",
              "type": "Microsoft.Network/virtualHubs",
              "location": "West US",
              "properties": {
                "sku": "Basic",
                "virtualWan": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"
                },
                "routingState": "Provisioned",
                "addressPrefix": "10.10.1.0/24",
                "virtualRouterAsn": 65515,
                "virtualRouterIps": [
                  "10.10.1.12",
                  "10.10.1.13"
                ],
                "provisioningState": "Succeeded",
                "virtualHubRouteTableV2s": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2/routeTables/virtualHubRouteTable2",
                    "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                    "name": "rt2a",
                    "properties": {
                      "routes": [
                        {
                          "nextHops": [
                            "10.0.0.68"
                          ],
                          "nextHopType": "IPAddress",
                          "destinations": [
                            "20.10.0.0/16",
                            "20.20.0.0/16"
                          ],
                          "destinationType": "CIDR"
                        },
                        {
                          "nextHops": [
                            "10.0.0.68"
                          ],
                          "nextHopType": "IPAddress",
                          "destinations": [
                            "0.0.0.0/0"
                          ],
                          "destinationType": "CIDR"
                        }
                      ],
                      "provisioningState": "Succeeded",
                      "attachedConnections": [
                        "All_Vnets"
                      ]
                    }
                  }
                ],
                "allowBranchToBranchTraffic": false
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "virtualHub2",
              "type": "Microsoft.Network/virtualHubs",
              "location": "East US",
              "properties": {
                "sku": "Basic",
                "virtualWan": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"
                },
                "routingState": "Provisioned",
                "addressPrefix": "210.10.1.0/24",
                "virtualRouterAsn": 65515,
                "virtualRouterIps": [
                  "10.10.1.12",
                  "10.10.1.13"
                ],
                "provisioningState": "Succeeded",
                "virtualHubRouteTableV2s": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2/routeTables/virtualHubRouteTable2",
                    "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                    "name": "rt2a",
                    "properties": {
                      "routes": [
                        {
                          "nextHops": [
                            "10.0.0.68"
                          ],
                          "nextHopType": "IPAddress",
                          "destinations": [
                            "20.10.0.0/16",
                            "20.20.0.0/16"
                          ],
                          "destinationType": "CIDR"
                        },
                        {
                          "nextHops": [
                            "10.0.0.68"
                          ],
                          "nextHopType": "IPAddress",
                          "destinations": [
                            "0.0.0.0/0"
                          ],
                          "destinationType": "CIDR"
                        }
                      ],
                      "provisioningState": "Succeeded",
                      "attachedConnections": [
                        "All_Vnets"
                      ]
                    }
                  }
                ],
                "allowBranchToBranchTraffic": false
              }
            }
          ]
        }
      ]
  VirtualHubs.UpdateTags:
    description: |-
      Updates VirtualHub tags.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualhubs/updatetags
    example:
      inputs: [
        {
          "tags": {
            "key1": "value1",
            "key2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub2",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "virtualHub2",
          "tags": {
            "key1": "value1",
            "key2": "value2"
          },
          "type": "Microsoft.Network/virtualHubs",
          "location": "West US",
          "properties": {
            "sku": "Basic",
            "virtualWan": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"
            },
            "addressPrefix": "10.168.0.0/24",
            "virtualRouterAsn": 65515,
            "virtualRouterIps": [
              "10.10.1.12",
              "10.10.1.13"
            ],
            "provisioningState": "Succeeded",
            "virtualHubRouteTableV2s": [],
            "allowBranchToBranchTraffic": false
          }
        }
      ]
  VirtualWans.CreateOrUpdate:
    description: |-
      Creates a VirtualWAN resource if it doesn't exist else updates the existing VirtualWAN.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualwans/createorupdate
    example:
      inputs: [
        {
          "tags": {
            "key1": "value1"
          },
          "location": "West US",
          "properties": {
            "type": "Basic",
            "disableVpnEncryption": false
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "wan1",
          "tags": {
            "key1": "value1"
          },
          "type": "Microsoft.Network/virtualWANs",
          "location": "West US",
          "properties": {
            "type": "Basic",
            "vpnSites": [
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1",
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite2"
            ],
            "virtualHubs": [
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1",
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub2"
            ],
            "provisioningState": "Succeeded",
            "disableVpnEncryption": false
          }
        }
      ]
  VirtualWans.Delete:
    description: |-
      Deletes a VirtualWAN.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualwans/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  VirtualWans.Get:
    description: |-
      Retrieves the details of a VirtualWAN.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualwans/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "wan1",
          "tags": {
            "key1": "value1"
          },
          "type": "Microsoft.Network/virtualWANs",
          "location": "West US",
          "properties": {
            "type": "Basic",
            "vpnSites": [
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1",
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite2"
            ],
            "virtualHubs": [
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1",
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub2"
            ],
            "provisioningState": "Succeeded",
            "disableVpnEncryption": false
          }
        }
      ]
  VirtualWans.List:
    description: |-
      Lists all the VirtualWANs in a subscription.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualwans/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "wan1",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.Network/virtualWANs",
              "location": "West US",
              "properties": {
                "type": "Basic",
                "vpnSites": [
                  "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1",
                  "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite2"
                ],
                "virtualHubs": [
                  "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1",
                  "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub2"
                ],
                "provisioningState": "Succeeded",
                "disableVpnEncryption": false
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualWANs/wan2",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "wan2",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.Network/virtualWANs",
              "location": "East US",
              "properties": {
                "type": "Basic",
                "vpnSites": [
                  "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/vpnSites/vpnSite1",
                  "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/vpnSites/vpnSite2"
                ],
                "virtualHubs": [
                  "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualHubs/hub1",
                  "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualHubs/hub2"
                ],
                "provisioningState": "Succeeded",
                "disableVpnEncryption": false
              }
            }
          ]
        }
      ]
  VirtualWans.ListByResourceGroup:
    description: |-
      Lists all the VirtualWANs in a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualwans/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "wan1",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.Network/virtualWANs",
              "location": "West US",
              "properties": {
                "type": "Basic",
                "vpnSites": [
                  "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1",
                  "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite2"
                ],
                "virtualHubs": [
                  "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1",
                  "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub2"
                ],
                "provisioningState": "Succeeded",
                "disableVpnEncryption": false
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan2",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "wan2",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.Network/virtualWANs",
              "location": "East US",
              "properties": {
                "type": "Basic",
                "vpnSites": [
                  "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite3",
                  "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite4"
                ],
                "virtualHubs": [
                  "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub3",
                  "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub4"
                ],
                "provisioningState": "Succeeded",
                "disableVpnEncryption": false
              }
            }
          ]
        }
      ]
  VirtualWans.UpdateTags:
    description: |-
      Updates a VirtualWAN tags.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/virtualwans/updatetags
    example:
      inputs: [
        {
          "tags": {
            "key1": "value1",
            "key2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "wan1",
          "tags": {
            "key1": "value1",
            "key2": "value2"
          },
          "type": "Microsoft.Network/virtualWANs",
          "location": "West US",
          "properties": {
            "type": "Basic",
            "vpnSites": [
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1",
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite2"
            ],
            "virtualHubs": [
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1",
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub2"
            ],
            "provisioningState": "Succeeded",
            "disableVpnEncryption": false
          }
        }
      ]
  VpnConnections.CreateOrUpdate:
    description: |-
      Creates a vpn connection to a scalable vpn gateway if it doesn't exist else updates the existing connection.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnconnections/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "remoteVpnSite": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
            },
            "vpnLinkConnections": [
              {
                "name": "Connection-Link1",
                "properties": {
                  "sharedKey": "key",
                  "vpnSiteLink": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
                  },
                  "connectionBandwidth": 200,
                  "vpnLinkConnectionMode": "Default",
                  "vpnConnectionProtocolType": "IKEv2",
                  "usePolicyBasedTrafficSelectors": false
                }
              }
            ],
            "trafficSelectorPolicies": []
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "vpnConnection1",
          "properties": {
            "remoteVpnSite": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
            },
            "provisioningState": "Succeeded",
            "vpnLinkConnections": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link1",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "Connection-Link1",
                "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
                "properties": {
                  "enableBgp": false,
                  "sharedKey": "key",
                  "vpnSiteLink": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
                  },
                  "ipsecPolicies": [],
                  "routingWeight": 0,
                  "provisioningState": "Succeeded",
                  "enableRateLimiting": false,
                  "connectionBandwidth": 200,
                  "vpnLinkConnectionMode": "Default",
                  "egressBytesTransferred": 0,
                  "useLocalAzureIpAddress": false,
                  "ingressBytesTransferred": 0,
                  "vpnConnectionProtocolType": "IKEv2",
                  "usePolicyBasedTrafficSelectors": false
                }
              }
            ],
            "routingConfiguration": {
              "vnetRoutes": {
                "staticRoutes": []
              },
              "associatedRouteTable": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
              },
              "propagatedRouteTables": {
                "ids": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable2"
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable3"
                  }
                ],
                "labels": [
                  "label1",
                  "label2"
                ]
              }
            },
            "egressBytesTransferred": 0,
            "enableInternetSecurity": false,
            "ingressBytesTransferred": 0,
            "trafficSelectorPolicies": []
          }
        }
      ]
  VpnConnections.Delete:
    description: |-
      Deletes a vpn connection.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnconnections/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  VpnConnections.Get:
    description: |-
      Retrieves the details of a vpn connection.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnconnections/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "vpnConnection1",
          "properties": {
            "remoteVpnSite": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
            },
            "provisioningState": "Succeeded",
            "vpnLinkConnections": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link1",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "Connection-Link1",
                "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
                "properties": {
                  "enableBgp": false,
                  "sharedKey": "key",
                  "vpnSiteLink": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
                  },
                  "ipsecPolicies": [],
                  "routingWeight": 0,
                  "provisioningState": "Succeeded",
                  "enableRateLimiting": false,
                  "connectionBandwidth": 200,
                  "vpnLinkConnectionMode": "ResponderOnly",
                  "egressBytesTransferred": 0,
                  "useLocalAzureIpAddress": false,
                  "ingressBytesTransferred": 0,
                  "vpnConnectionProtocolType": "IKEv2",
                  "usePolicyBasedTrafficSelectors": false
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link2",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "Connection-Link2",
                "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
                "properties": {
                  "enableBgp": false,
                  "sharedKey": "key",
                  "vpnSiteLink": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink2"
                  },
                  "ipsecPolicies": [],
                  "routingWeight": 0,
                  "provisioningState": "Succeeded",
                  "enableRateLimiting": false,
                  "connectionBandwidth": 200,
                  "vpnLinkConnectionMode": "InitiatorOnly",
                  "egressBytesTransferred": 0,
                  "useLocalAzureIpAddress": false,
                  "ingressBytesTransferred": 0,
                  "vpnConnectionProtocolType": "IKEv2",
                  "usePolicyBasedTrafficSelectors": false
                }
              }
            ],
            "routingConfiguration": {
              "vnetRoutes": {
                "staticRoutes": []
              },
              "associatedRouteTable": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
              },
              "propagatedRouteTables": {
                "ids": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable2"
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable3"
                  }
                ],
                "labels": [
                  "label1",
                  "label2"
                ]
              }
            },
            "egressBytesTransferred": 0,
            "enableInternetSecurity": false,
            "ingressBytesTransferred": 0,
            "trafficSelectorPolicies": []
          }
        }
      ]
  VpnConnections.ListByVpnGateway:
    description: |-
      Retrieves all vpn connections for a particular virtual wan vpn gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnconnections/listbyvpngateway
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "vpnConnection1",
            "properties": {
              "remoteVpnSite": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
              },
              "provisioningState": "Succeeded",
              "vpnLinkConnections": [
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link1",
                  "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                  "name": "Connection-Link1",
                  "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
                  "properties": {
                    "enableBgp": false,
                    "sharedKey": "key",
                    "vpnSiteLink": {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
                    },
                    "ipsecPolicies": [],
                    "routingWeight": 0,
                    "provisioningState": "Succeeded",
                    "enableRateLimiting": false,
                    "connectionBandwidth": 200,
                    "vpnLinkConnectionMode": "Default",
                    "egressBytesTransferred": 0,
                    "useLocalAzureIpAddress": false,
                    "ingressBytesTransferred": 0,
                    "vpnConnectionProtocolType": "IKEv2",
                    "usePolicyBasedTrafficSelectors": false
                  }
                },
                {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link2",
                  "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                  "name": "Connection-Link2",
                  "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
                  "properties": {
                    "enableBgp": false,
                    "sharedKey": "key",
                    "vpnSiteLink": {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink2"
                    },
                    "ipsecPolicies": [],
                    "routingWeight": 0,
                    "provisioningState": "Succeeded",
                    "enableRateLimiting": false,
                    "connectionBandwidth": 200,
                    "vpnLinkConnectionMode": "Default",
                    "egressBytesTransferred": 0,
                    "useLocalAzureIpAddress": false,
                    "ingressBytesTransferred": 0,
                    "vpnConnectionProtocolType": "IKEv2",
                    "usePolicyBasedTrafficSelectors": false
                  }
                }
              ],
              "routingConfiguration": {
                "vnetRoutes": {
                  "staticRoutes": []
                },
                "associatedRouteTable": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
                },
                "propagatedRouteTables": {
                  "ids": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable1"
                    },
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable2"
                    },
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1/hubRouteTables/hubRouteTable3"
                    }
                  ],
                  "labels": [
                    "label1",
                    "label2"
                  ]
                }
              },
              "egressBytesTransferred": 0,
              "enableInternetSecurity": false,
              "ingressBytesTransferred": 0,
              "trafficSelectorPolicies": []
            }
          }
        ]
      ]
  VpnConnections.StartPacketCapture:
    description: |-
      Starts packet capture on Vpn connection in the specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnconnections/startpacketcapture
    example:
      inputs: [
        {
          "filterData": "{'TracingFlags': 11,'MaxPacketBufferSize': 120,'MaxFileSize': 200,'Filters': [{'SourceSubnets': ['20.1.1.0/24'],'DestinationSubnets': ['10.1.1.0/24'],'SourcePort': [500],'DestinationPort': [4500],'Protocol': 6,'TcpFlags': 16,'CaptureSingleDirectionTrafficOnly': true}]}",
          "linkConnectionNames": [
            "siteLink1",
            "siteLink2"
          ]
        }
      ]
      outputs: [
        "\"{\"Status\":\"Successful\",\"Data\":null}\""
      ]
  VpnConnections.StopPacketCapture:
    description: |-
      Stops packet capture on Vpn connection in the specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnconnections/stoppacketcapture
    example:
      inputs: [
        {
          "sasUrl": "https://teststorage.blob.core.windows.net/?sv=2018-03-28&ss=bfqt&srt=sco&sp=rwdlacup&se=2019-09-13T07:44:05Z&st=2019-09-06T23:44:05Z&spr=https&sig=V1h9D1riltvZMI69d6ihENnFo%2FrCvTqGgjO2lf%2FVBhE%3D",
          "linkConnectionNames": [
            "vpnSiteLink1",
            "vpnSiteLink2"
          ]
        }
      ]
      outputs: [
        "\"{\"Status\":\"Successful\",\"Data\":null}\""
      ]
  VpnGateways.CreateOrUpdate:
    description: |-
      Creates a virtual wan vpn gateway if it doesn't exist else updates the existing gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpngateways/createorupdate
    example:
      inputs: [
        {
          "tags": {
            "key1": "value1"
          },
          "location": "westcentralus",
          "properties": {
            "natRules": [
              {
                "name": "nat03",
                "properties": {
                  "mode": "EgressSnat",
                  "type": "Static",
                  "externalMappings": [
                    {
                      "addressSpace": "192.168.0.0/26"
                    }
                  ],
                  "internalMappings": [
                    {
                      "addressSpace": "0.0.0.0/26"
                    }
                  ],
                  "ipConfigurationId": ""
                }
              }
            ],
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
            },
            "bgpSettings": {
              "asn": 65515,
              "peerWeight": 0,
              "bgpPeeringAddresses": [
                {
                  "ipconfigurationId": "Instance0",
                  "customBgpIpAddresses": [
                    "169.254.21.5"
                  ]
                },
                {
                  "ipconfigurationId": "Instance1",
                  "customBgpIpAddresses": [
                    "169.254.21.10"
                  ]
                }
              ]
            },
            "connections": [
              {
                "name": "vpnConnection1",
                "properties": {
                  "remoteVpnSite": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
                  },
                  "vpnLinkConnections": [
                    {
                      "name": "Connection-Link1",
                      "properties": {
                        "sharedKey": "key",
                        "vpnSiteLink": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
                        },
                        "egressNatRules": [
                          {
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat03"
                          }
                        ],
                        "connectionBandwidth": 200,
                        "vpnConnectionProtocolType": "IKEv2"
                      }
                    }
                  ]
                }
              }
            ],
            "isRoutingPreferenceInternet": false
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "gateway1",
          "type": "Microsoft.Network/vpnGateways",
          "location": "West US",
          "properties": {
            "natRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat03",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "nat03",
                "properties": {
                  "mode": "EgressSnat",
                  "type": "Static",
                  "externalMappings": [
                    {
                      "addressSpace": "192.168.0.0/26"
                    }
                  ],
                  "internalMappings": [
                    {
                      "addressSpace": "0.0.0.0/26"
                    }
                  ],
                  "egressVpnSiteLinkConnections": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/vpnLinkConnections/Connection-Link1"
                    }
                  ]
                }
              }
            ],
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
            },
            "bgpSettings": {
              "asn": 65514,
              "peerWeight": 0,
              "bgpPeeringAddress": "10.0.1.30",
              "bgpPeeringAddresses": [
                {
                  "ipconfigurationId": "Instance0",
                  "tunnelIpAddresses": [
                    "104.208.48.178"
                  ],
                  "customBgpIpAddresses": [
                    "169.254.21.5"
                  ],
                  "defaultBgpIpAddresses": [
                    "10.30.0.4"
                  ]
                },
                {
                  "ipconfigurationId": "Instance1",
                  "tunnelIpAddresses": [
                    "104.208.48.179"
                  ],
                  "customBgpIpAddresses": [
                    "169.254.21.10"
                  ],
                  "defaultBgpIpAddresses": [
                    "10.30.0.5"
                  ]
                }
              ]
            },
            "connections": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "vpnConnection1",
                "properties": {
                  "remoteVpnSite": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
                  },
                  "provisioningState": "Succeeded",
                  "vpnLinkConnections": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link1",
                      "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                      "name": "Connection-Link1",
                      "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
                      "properties": {
                        "enableBgp": false,
                        "sharedKey": "key",
                        "vpnSiteLink": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
                        },
                        "ipsecPolicies": [],
                        "routingWeight": 0,
                        "egressNatRules": [
                          {
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat03"
                          }
                        ],
                        "provisioningState": "Succeeded",
                        "enableRateLimiting": false,
                        "connectionBandwidth": 200,
                        "egressBytesTransferred": 0,
                        "useLocalAzureIpAddress": false,
                        "ingressBytesTransferred": 0,
                        "vpnConnectionProtocolType": "IKEv2",
                        "usePolicyBasedTrafficSelectors": false
                      }
                    }
                  ],
                  "routingConfiguration": {
                    "vnetRoutes": {
                      "staticRoutes": []
                    },
                    "associatedRouteTable": {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                    },
                    "propagatedRouteTables": {
                      "ids": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                        }
                      ],
                      "labels": [
                        "label1",
                        "label2"
                      ]
                    }
                  },
                  "egressBytesTransferred": 0,
                  "enableInternetSecurity": false,
                  "ingressBytesTransferred": 0
                }
              }
            ],
            "provisioningState": "Succeeded",
            "isRoutingPreferenceInternet": false
          }
        }
      ]
  VpnGateways.Delete:
    description: |-
      Deletes a virtual wan vpn gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpngateways/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  VpnGateways.Get:
    description: |-
      Retrieves the details of a virtual wan vpn gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpngateways/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "gateway1",
          "type": "Microsoft.Network/vpnGateways",
          "location": "West US",
          "properties": {
            "natRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat03",
                "name": "nat03",
                "type": "Microsoft.Network/vpnGateways/natRules",
                "properties": {
                  "mode": "IgressSnat",
                  "type": "Dynamic",
                  "externalMappings": [
                    {
                      "addressSpace": "192.168.0.0/26"
                    }
                  ],
                  "internalMappings": [
                    {
                      "addressSpace": "0.0.0.0/26"
                    }
                  ],
                  "ingressVpnSiteLinkConnections": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/vpnLinkConnections/Connection-Link1"
                    }
                  ]
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat04",
                "name": "nat04",
                "type": "Microsoft.Network/vpnGateways/natRules",
                "properties": {
                  "mode": "EgressSnat",
                  "type": "Static",
                  "externalMappings": [
                    {
                      "addressSpace": "192.168.0.0/26"
                    }
                  ],
                  "internalMappings": [
                    {
                      "addressSpace": "0.0.0.0/26"
                    }
                  ],
                  "egressVpnSiteLinkConnections": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/vpnLinkConnections/Connection-Link2"
                    }
                  ]
                }
              }
            ],
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
            },
            "bgpSettings": {
              "asn": 65514,
              "peerWeight": 0,
              "bgpPeeringAddress": "10.0.1.30",
              "bgpPeeringAddresses": [
                {
                  "ipconfigurationId": "Instance0",
                  "tunnelIpAddresses": [
                    "104.208.48.178"
                  ],
                  "customBgpIpAddresses": [
                    "169.254.21.5"
                  ],
                  "defaultBgpIpAddresses": [
                    "10.30.0.4"
                  ]
                },
                {
                  "ipconfigurationId": "Instance1",
                  "tunnelIpAddresses": [
                    "104.208.48.179"
                  ],
                  "customBgpIpAddresses": [
                    "169.254.21.10"
                  ],
                  "defaultBgpIpAddresses": [
                    "10.30.0.5"
                  ]
                }
              ]
            },
            "connections": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "vpnConnection1",
                "properties": {
                  "remoteVpnSite": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
                  },
                  "provisioningState": "Succeeded",
                  "vpnLinkConnections": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link1",
                      "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                      "name": "Connection-Link1",
                      "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
                      "properties": {
                        "enableBgp": false,
                        "sharedKey": "key",
                        "vpnSiteLink": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
                        },
                        "ipsecPolicies": [],
                        "routingWeight": 0,
                        "ingressNatRules": [
                          {
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat03"
                          }
                        ],
                        "provisioningState": "Succeeded",
                        "enableRateLimiting": false,
                        "connectionBandwidth": 200,
                        "egressBytesTransferred": 0,
                        "useLocalAzureIpAddress": false,
                        "ingressBytesTransferred": 0,
                        "vpnConnectionProtocolType": "IKEv2",
                        "usePolicyBasedTrafficSelectors": false
                      }
                    },
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link2",
                      "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                      "name": "Connection-Link2",
                      "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
                      "properties": {
                        "enableBgp": false,
                        "sharedKey": "key",
                        "vpnSiteLink": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink2"
                        },
                        "ipsecPolicies": [],
                        "routingWeight": 0,
                        "egressNatRules": [
                          {
                            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat04"
                          }
                        ],
                        "provisioningState": "Succeeded",
                        "enableRateLimiting": false,
                        "connectionBandwidth": 200,
                        "egressBytesTransferred": 0,
                        "useLocalAzureIpAddress": false,
                        "ingressBytesTransferred": 0,
                        "vpnConnectionProtocolType": "IKEv2",
                        "usePolicyBasedTrafficSelectors": false
                      }
                    }
                  ],
                  "routingConfiguration": {
                    "vnetRoutes": {
                      "staticRoutes": []
                    },
                    "associatedRouteTable": {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                    },
                    "propagatedRouteTables": {
                      "ids": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                        }
                      ],
                      "labels": [
                        "label1",
                        "label2"
                      ]
                    }
                  },
                  "egressBytesTransferred": 0,
                  "enableInternetSecurity": false,
                  "ingressBytesTransferred": 0
                }
              }
            ],
            "provisioningState": "Succeeded",
            "isRoutingPreferenceInternet": false
          }
        }
      ]
  VpnGateways.List:
    description: |-
      Lists all the VpnGateways in a subscription.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpngateways/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "gateway1",
              "type": "Microsoft.Network/vpnGateways",
              "location": "West US",
              "properties": {
                "natRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat03",
                    "name": "nat03",
                    "type": "Microsoft.Network/vpnGateways/natRules",
                    "properties": {
                      "mode": "IgressSnat",
                      "type": "Dynamic",
                      "externalMappings": [
                        {
                          "addressSpace": "192.168.0.0/26"
                        }
                      ],
                      "internalMappings": [
                        {
                          "addressSpace": "0.0.0.0/26"
                        }
                      ],
                      "ingressVpnSiteLinkConnections": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/vpnLinkConnections/Connection-Link1"
                        }
                      ]
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat04",
                    "name": "nat04",
                    "type": "Microsoft.Network/vpnGateways/natRules",
                    "properties": {
                      "mode": "EgressSnat",
                      "type": "Static",
                      "externalMappings": [
                        {
                          "addressSpace": "192.168.0.0/26"
                        }
                      ],
                      "internalMappings": [
                        {
                          "addressSpace": "0.0.0.0/26"
                        }
                      ],
                      "egressVpnSiteLinkConnections": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/vpnLinkConnections/Connection-Link2"
                        }
                      ]
                    }
                  }
                ],
                "virtualHub": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
                },
                "bgpSettings": {
                  "asn": 65514,
                  "peerWeight": 0,
                  "bgpPeeringAddress": "10.0.1.30",
                  "bgpPeeringAddresses": [
                    {
                      "ipconfigurationId": "Instance0",
                      "tunnelIpAddresses": [
                        "104.208.48.178"
                      ],
                      "customBgpIpAddresses": [
                        "169.254.21.5"
                      ],
                      "defaultBgpIpAddresses": [
                        "10.30.0.4"
                      ]
                    },
                    {
                      "ipconfigurationId": "Instance1",
                      "tunnelIpAddresses": [
                        "104.208.48.179"
                      ],
                      "customBgpIpAddresses": [
                        "169.254.21.10"
                      ],
                      "defaultBgpIpAddresses": [
                        "10.30.0.5"
                      ]
                    }
                  ]
                },
                "connections": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1",
                    "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                    "name": "vpnConnection1",
                    "properties": {
                      "remoteVpnSite": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
                      },
                      "provisioningState": "Succeeded",
                      "vpnLinkConnections": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link1",
                          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                          "name": "Connection-Link1",
                          "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
                          "properties": {
                            "enableBgp": false,
                            "sharedKey": "key",
                            "vpnSiteLink": {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
                            },
                            "ipsecPolicies": [],
                            "routingWeight": 0,
                            "ingressNatRules": [
                              {
                                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat03"
                              }
                            ],
                            "provisioningState": "Succeeded",
                            "enableRateLimiting": false,
                            "connectionBandwidth": 200,
                            "egressBytesTransferred": 0,
                            "useLocalAzureIpAddress": false,
                            "ingressBytesTransferred": 0,
                            "vpnConnectionProtocolType": "IKEv2",
                            "usePolicyBasedTrafficSelectors": false
                          }
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link2",
                          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                          "name": "Connection-Link2",
                          "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
                          "properties": {
                            "enableBgp": false,
                            "sharedKey": "key",
                            "vpnSiteLink": {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink2"
                            },
                            "ipsecPolicies": [],
                            "routingWeight": 0,
                            "egressNatRules": [
                              {
                                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat04"
                              }
                            ],
                            "provisioningState": "Succeeded",
                            "enableRateLimiting": false,
                            "connectionBandwidth": 200,
                            "egressBytesTransferred": 0,
                            "useLocalAzureIpAddress": false,
                            "ingressBytesTransferred": 0,
                            "vpnConnectionProtocolType": "IKEv2",
                            "usePolicyBasedTrafficSelectors": false
                          }
                        }
                      ],
                      "routingConfiguration": {
                        "vnetRoutes": {
                          "staticRoutes": []
                        },
                        "associatedRouteTable": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                        },
                        "propagatedRouteTables": {
                          "ids": [
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                            }
                          ],
                          "labels": [
                            "label1",
                            "label2"
                          ]
                        }
                      },
                      "egressBytesTransferred": 0,
                      "enableInternetSecurity": false,
                      "ingressBytesTransferred": 0
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "isRoutingPreferenceInternet": false
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/vpnGateways/gateway2",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "gateway2",
              "type": "Microsoft.Network/vpnGateways",
              "location": "West US",
              "properties": {
                "natRules": [],
                "virtualHub": {
                  "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualHubs/virtualHub2"
                },
                "bgpSettings": {
                  "asn": 65514,
                  "peerWeight": 0,
                  "bgpPeeringAddress": "10.0.1.30",
                  "bgpPeeringAddresses": [
                    {
                      "ipconfigurationId": "Instance0",
                      "tunnelIpAddresses": [
                        "104.208.48.178"
                      ],
                      "customBgpIpAddresses": [
                        "169.254.21.5"
                      ],
                      "defaultBgpIpAddresses": [
                        "10.30.0.4"
                      ]
                    },
                    {
                      "ipconfigurationId": "Instance1",
                      "tunnelIpAddresses": [
                        "104.208.48.179"
                      ],
                      "customBgpIpAddresses": [
                        "169.254.21.10"
                      ],
                      "defaultBgpIpAddresses": [
                        "10.30.0.5"
                      ]
                    }
                  ]
                },
                "connections": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/vpnGateways/gateway2/vpnConnections/vpnConnection2",
                    "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                    "name": "vpnConnection1",
                    "properties": {
                      "enableBgp": false,
                      "sharedKey": "key",
                      "ipsecPolicies": [],
                      "remoteVpnSite": {
                        "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/vpnSites/vpnSite2"
                      },
                      "routingWeight": 0,
                      "connectionStatus": "Connected",
                      "provisioningState": "Succeeded",
                      "connectionBandwidth": 100,
                      "routingConfiguration": {
                        "vnetRoutes": {
                          "staticRoutes": []
                        },
                        "associatedRouteTable": {
                          "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable1"
                        },
                        "propagatedRouteTables": {
                          "ids": [
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable1"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable2"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable3"
                            }
                          ],
                          "labels": [
                            "label1",
                            "label2"
                          ]
                        }
                      },
                      "egressBytesTransferred": 0,
                      "useLocalAzureIpAddress": false,
                      "ingressBytesTransferred": 0
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "isRoutingPreferenceInternet": false
              }
            }
          ]
        }
      ]
  VpnGateways.ListByResourceGroup:
    description: |-
      Lists all the VpnGateways in a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpngateways/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "gateway1",
              "type": "Microsoft.Network/vpnGateways",
              "location": "West US",
              "properties": {
                "natRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat03",
                    "name": "nat03",
                    "type": "Microsoft.Network/vpnGateways/natRules",
                    "properties": {
                      "mode": "EgressSnat",
                      "type": "Static",
                      "externalMappings": [
                        {
                          "addressSpace": "192.168.0.0/26"
                        }
                      ],
                      "internalMappings": [
                        {
                          "addressSpace": "0.0.0.0/26"
                        }
                      ],
                      "egressVpnSiteLinkConnections": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/vpnLinkConnections/Connection-Link1"
                        }
                      ]
                    }
                  }
                ],
                "virtualHub": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
                },
                "bgpSettings": {
                  "asn": 65514,
                  "peerWeight": 0,
                  "bgpPeeringAddress": "10.0.1.30",
                  "bgpPeeringAddresses": [
                    {
                      "ipconfigurationId": "Instance0",
                      "tunnelIpAddresses": [
                        "104.208.48.178"
                      ],
                      "customBgpIpAddresses": [
                        "169.254.21.5"
                      ],
                      "defaultBgpIpAddresses": [
                        "10.30.0.4"
                      ]
                    },
                    {
                      "ipconfigurationId": "Instance1",
                      "tunnelIpAddresses": [
                        "104.208.48.179"
                      ],
                      "customBgpIpAddresses": [
                        "169.254.21.10"
                      ],
                      "defaultBgpIpAddresses": [
                        "10.30.0.5"
                      ]
                    }
                  ]
                },
                "connections": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1",
                    "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                    "name": "vpnConnection1",
                    "properties": {
                      "remoteVpnSite": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
                      },
                      "provisioningState": "Succeeded",
                      "vpnLinkConnections": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link1",
                          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                          "name": "Connection-Link1",
                          "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
                          "properties": {
                            "enableBgp": false,
                            "sharedKey": "key",
                            "vpnSiteLink": {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
                            },
                            "ipsecPolicies": [],
                            "routingWeight": 0,
                            "egressNatRules": [
                              {
                                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat03"
                              }
                            ],
                            "provisioningState": "Succeeded",
                            "enableRateLimiting": false,
                            "connectionBandwidth": 200,
                            "egressBytesTransferred": 0,
                            "useLocalAzureIpAddress": false,
                            "ingressBytesTransferred": 0,
                            "vpnConnectionProtocolType": "IKEv2",
                            "usePolicyBasedTrafficSelectors": false
                          }
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link2",
                          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                          "name": "Connection-Link2",
                          "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
                          "properties": {
                            "enableBgp": false,
                            "sharedKey": "key",
                            "vpnSiteLink": {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink2"
                            },
                            "ipsecPolicies": [],
                            "routingWeight": 0,
                            "egressNatRules": [
                              {
                                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat03"
                              }
                            ],
                            "provisioningState": "Succeeded",
                            "enableRateLimiting": false,
                            "connectionBandwidth": 200,
                            "egressBytesTransferred": 0,
                            "useLocalAzureIpAddress": false,
                            "ingressBytesTransferred": 0,
                            "vpnConnectionProtocolType": "IKEv2",
                            "usePolicyBasedTrafficSelectors": false
                          }
                        }
                      ],
                      "routingConfiguration": {
                        "vnetRoutes": {
                          "staticRoutes": []
                        },
                        "associatedRouteTable": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                        },
                        "propagatedRouteTables": {
                          "ids": [
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                            }
                          ],
                          "labels": [
                            "label1",
                            "label2"
                          ]
                        }
                      },
                      "egressBytesTransferred": 0,
                      "enableInternetSecurity": false,
                      "ingressBytesTransferred": 0
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "isRoutingPreferenceInternet": false
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/vpnGateways/gateway2",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "gateway2",
              "type": "Microsoft.Network/vpnGateways",
              "location": "West US",
              "properties": {
                "natRules": [],
                "virtualHub": {
                  "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualHubs/virtualHub2"
                },
                "bgpSettings": {
                  "asn": 65514,
                  "peerWeight": 0,
                  "bgpPeeringAddress": "10.0.1.30",
                  "bgpPeeringAddresses": [
                    {
                      "ipconfigurationId": "Instance0",
                      "tunnelIpAddresses": [
                        "104.208.48.178"
                      ],
                      "customBgpIpAddresses": [
                        "169.254.21.5"
                      ],
                      "defaultBgpIpAddresses": [
                        "10.30.0.4"
                      ]
                    },
                    {
                      "ipconfigurationId": "Instance1",
                      "tunnelIpAddresses": [
                        "104.208.48.179"
                      ],
                      "customBgpIpAddresses": [
                        "169.254.21.10"
                      ],
                      "defaultBgpIpAddresses": [
                        "10.30.0.5"
                      ]
                    }
                  ]
                },
                "connections": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/vpnGateways/gateway2/vpnConnections/vpnConnection2",
                    "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                    "name": "vpnConnection1",
                    "properties": {
                      "enableBgp": false,
                      "sharedKey": "key",
                      "ipsecPolicies": [],
                      "remoteVpnSite": {
                        "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/vpnSites/vpnSite2"
                      },
                      "routingWeight": 0,
                      "connectionStatus": "Connected",
                      "provisioningState": "Succeeded",
                      "connectionBandwidth": 100,
                      "routingConfiguration": {
                        "vnetRoutes": {
                          "staticRoutes": []
                        },
                        "associatedRouteTable": {
                          "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable1"
                        },
                        "propagatedRouteTables": {
                          "ids": [
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable1"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable2"
                            },
                            {
                              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualHubs/virtualHub2/hubRouteTables/hubRouteTable3"
                            }
                          ],
                          "labels": [
                            "label1",
                            "label2"
                          ]
                        }
                      },
                      "egressBytesTransferred": 0,
                      "useLocalAzureIpAddress": false,
                      "ingressBytesTransferred": 0
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "isRoutingPreferenceInternet": false
              }
            }
          ]
        }
      ]
  VpnGateways.Reset:
    description: |-
      Resets the primary of the vpn gateway in the specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpngateways/reset
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/vpngw",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "vpngw",
          "type": "Microsoft.Network/vpnGateways",
          "location": "West US",
          "properties": {
            "natRules": [],
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
            },
            "bgpSettings": {
              "asn": 65514,
              "peerWeight": 0,
              "bgpPeeringAddress": "10.0.1.30",
              "bgpPeeringAddresses": [
                {
                  "ipconfigurationId": "Instance0",
                  "tunnelIpAddresses": [
                    "104.208.48.178"
                  ],
                  "customBgpIpAddresses": [
                    "169.254.21.5"
                  ],
                  "defaultBgpIpAddresses": [
                    "10.30.0.4"
                  ]
                },
                {
                  "ipconfigurationId": "Instance1",
                  "tunnelIpAddresses": [
                    "104.208.48.179"
                  ],
                  "customBgpIpAddresses": [
                    "169.254.21.10"
                  ],
                  "defaultBgpIpAddresses": [
                    "10.30.0.5"
                  ]
                }
              ]
            },
            "connections": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/vpngw/vpnConnections/vpnConnection1",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "vpnConnection1",
                "properties": {
                  "enableBgp": false,
                  "sharedKey": "key",
                  "ipsecPolicies": [],
                  "remoteVpnSite": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
                  },
                  "routingWeight": 0,
                  "connectionStatus": "Connected",
                  "provisioningState": "Succeeded",
                  "connectionBandwidth": 100,
                  "routingConfiguration": {
                    "vnetRoutes": {
                      "staticRoutes": []
                    },
                    "associatedRouteTable": {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                    },
                    "propagatedRouteTables": {
                      "ids": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                        }
                      ],
                      "labels": [
                        "label1",
                        "label2"
                      ]
                    }
                  },
                  "egressBytesTransferred": 0,
                  "useLocalAzureIpAddress": false,
                  "ingressBytesTransferred": 0
                }
              }
            ],
            "provisioningState": "Succeeded",
            "isRoutingPreferenceInternet": false
          }
        }
      ]
  VpnGateways.StartPacketCapture:
    description: |-
      Starts packet capture on vpn gateway in the specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpngateways/startpacketcapture
    example:
      inputs: [
        {
          "filterData": "{'TracingFlags': 11,'MaxPacketBufferSize': 120,'MaxFileSize': 200,'Filters': [{'SourceSubnets': ['20.1.1.0/24'],'DestinationSubnets': ['10.1.1.0/24'],'SourcePort': [500],'DestinationPort': [4500],'Protocol': 6,'TcpFlags': 16,'CaptureSingleDirectionTrafficOnly': true}]}"
        }
      ]
      outputs: [
        "\"{\"Status\":\"Successful\",\"Data\":null}\""
      ]
  VpnGateways.StopPacketCapture:
    description: |-
      Stops packet capture on vpn gateway in the specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpngateways/stoppacketcapture
    example:
      inputs: [
        {
          "sasUrl": "https://teststorage.blob.core.windows.net/?sv=2018-03-28&ss=bfqt&srt=sco&sp=rwdlacup&se=2019-09-13T07:44:05Z&st=2019-09-06T23:44:05Z&spr=https&sig=V1h9D1riltvZMI69d6ihENnFo%2FrCvTqGgjO2lf%2FVBhE%3D"
        }
      ]
      outputs: [
        "\"{\"Status\":\"Successful\",\"Data\":null}\""
      ]
  VpnGateways.UpdateTags:
    description: |-
      Updates virtual wan vpn gateway tags.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpngateways/updatetags
    example:
      inputs: [
        {
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "gateway1",
          "tags": {
            "key1": "value1",
            "key2": "value2"
          },
          "type": "Microsoft.Network/vpnGateways",
          "location": "West US",
          "properties": {
            "natRules": [],
            "virtualHub": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1"
            },
            "bgpSettings": {
              "asn": 65515,
              "peerWeight": 0,
              "bgpPeeringAddress": "10.0.1.30",
              "bgpPeeringAddresses": [
                {
                  "ipconfigurationId": "Instance0",
                  "tunnelIpAddresses": [
                    "104.208.48.178"
                  ],
                  "customBgpIpAddresses": [
                    "169.254.21.5"
                  ],
                  "defaultBgpIpAddresses": [
                    "10.30.0.4"
                  ]
                },
                {
                  "ipconfigurationId": "Instance1",
                  "tunnelIpAddresses": [
                    "104.208.48.179"
                  ],
                  "customBgpIpAddresses": [
                    "169.254.21.10"
                  ],
                  "defaultBgpIpAddresses": [
                    "10.30.0.5"
                  ]
                }
              ]
            },
            "connections": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1",
                "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
                "name": "vpnConnection1",
                "properties": {
                  "enableBgp": false,
                  "sharedKey": "key",
                  "ipsecPolicies": [],
                  "remoteVpnSite": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"
                  },
                  "routingWeight": 0,
                  "connectionStatus": "Connected",
                  "provisioningState": "Succeeded",
                  "routingConfiguration": {
                    "vnetRoutes": {
                      "staticRoutes": []
                    },
                    "associatedRouteTable": {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                    },
                    "propagatedRouteTables": {
                      "ids": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3"
                        }
                      ],
                      "labels": [
                        "label1",
                        "label2"
                      ]
                    }
                  },
                  "egressBytesTransferred": 0,
                  "ingressBytesTransferred": 0
                }
              }
            ],
            "provisioningState": "Succeeded",
            "isRoutingPreferenceInternet": false
          }
        }
      ]
  VpnLinkConnections.GetIkeSas:
    description: |-
      Lists IKE Security Associations for Vpn Site Link Connection in the specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnlinkconnections/getikesas
    example:
      inputs: [
        {}
      ]
      outputs: [
        "\"{\"Status\":\"Successful\",\"Data\":null}\""
      ]
  VpnLinkConnections.ListByVpnConnection:
    description: |-
      Retrieves all vpn site link connections for a particular virtual wan vpn gateway vpn connection.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnlinkconnections/listbyvpnconnection
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link1",
            "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
            "name": "Connection-Link1",
            "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
            "properties": {
              "enableBgp": false,
              "sharedKey": "key",
              "vpnSiteLink": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
              },
              "ipsecPolicies": [],
              "routingWeight": 0,
              "provisioningState": "Succeeded",
              "enableRateLimiting": false,
              "connectionBandwidth": 200,
              "egressBytesTransferred": 0,
              "useLocalAzureIpAddress": false,
              "ingressBytesTransferred": 0,
              "vpnConnectionProtocolType": "IKEv2",
              "usePolicyBasedTrafficSelectors": false
            }
          }
        ]
      ]
  VpnLinkConnections.ResetConnection:
    description: |-
      Resets the VpnLink connection specified.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnlinkconnections/resetconnection
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  VpnServerConfigurationsAssociatedWithVirtualWan.List:
    description: |-
      Gives the list of VpnServerConfigurations associated with Virtual Wan in a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnserverconfigurationsassociatedwithvirtualwan/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "vpnServerConfigurationResourceIds": [
            "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnconfig1",
            "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnconfig2"
          ]
        }
      ]
  VpnServerConfigurations.CreateOrUpdate:
    description: |-
      Creates a VpnServerConfiguration resource if it doesn't exist else updates the existing VpnServerConfiguration.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnserverconfigurations/createorupdate
    example:
      inputs: [
        {
          "tags": {
            "key1": "value1"
          },
          "location": "West US",
          "properties": {
            "vpnProtocols": [
              "IkeV2"
            ],
            "radiusServers": [
              {
                "radiusServerScore": 25,
                "radiusServerSecret": "radiusServerSecret",
                "radiusServerAddress": "10.0.0.0"
              }
            ],
            "vpnClientIpsecPolicies": [
              {
                "dhGroup": "DHGroup14",
                "pfsGroup": "PFS14",
                "ikeIntegrity": "SHA384",
                "ikeEncryption": "AES256",
                "ipsecIntegrity": "SHA256",
                "ipsecEncryption": "AES256",
                "saLifeTimeSeconds": 86472,
                "saDataSizeKilobytes": 429497
              }
            ],
            "vpnClientRootCertificates": [
              {
                "name": "vpnServerConfigVpnClientRootCert1",
                "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN"
              }
            ],
            "radiusClientRootCertificates": [
              {
                "name": "vpnServerConfigRadiusClientRootCert1",
                "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
              }
            ],
            "radiusServerRootCertificates": [
              {
                "name": "vpnServerConfigRadiusServerRootCer1",
                "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM"
              }
            ],
            "vpnClientRevokedCertificates": [
              {
                "name": "vpnServerConfigVpnClientRevokedCert1",
                "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
              }
            ]
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "vpnServerConfiguration1",
          "tags": {
            "key1": "value1"
          },
          "type": "Microsoft.Network/vpnServerConfigurations",
          "location": "West US",
          "properties": {
            "vpnProtocols": [
              "IkeV2"
            ],
            "radiusServers": [
              {
                "radiusServerScore": 25,
                "radiusServerAddress": "10.0.0.0"
              }
            ],
            "provisioningState": "Succeeded",
            "vpnAuthenticationTypes": [
              "Certificate"
            ],
            "vpnClientIpsecPolicies": [
              {
                "dhGroup": "DHGroup14",
                "pfsGroup": "PFS14",
                "ikeIntegrity": "SHA384",
                "ikeEncryption": "AES256",
                "ipsecIntegrity": "SHA256",
                "ipsecEncryption": "AES256",
                "saLifeTimeSeconds": 86472,
                "saDataSizeKilobytes": 429497
              }
            ],
            "vpnClientRootCertificates": [
              {
                "name": "vpnServerConfigVpnClientRootCert1",
                "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN"
              }
            ],
            "radiusClientRootCertificates": [
              {
                "name": "vpnServerConfigRadiusClientRootCert1",
                "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
              }
            ],
            "radiusServerRootCertificates": [
              {
                "name": "vpnServerConfigRadiusServerRootCer1",
                "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM"
              }
            ],
            "vpnClientRevokedCertificates": [
              {
                "name": "vpnServerConfigVpnClientRevokedCert1",
                "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
              }
            ]
          }
        }
      ]
  VpnServerConfigurations.Delete:
    description: |-
      Deletes a VpnServerConfiguration.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnserverconfigurations/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  VpnServerConfigurations.Get:
    description: |-
      Retrieves the details of a VpnServerConfiguration.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnserverconfigurations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "vpnServerConfiguration1",
          "tags": {
            "key1": "value1"
          },
          "type": "Microsoft.Network/vpnServerConfigurations",
          "location": "West US",
          "properties": {
            "vpnProtocols": [
              "IkeV2"
            ],
            "radiusServers": [
              {
                "radiusServerScore": 25,
                "radiusServerAddress": "10.0.0.0"
              }
            ],
            "provisioningState": "Succeeded",
            "vpnAuthenticationTypes": [
              "Certificate"
            ],
            "vpnClientIpsecPolicies": [
              {
                "dhGroup": "DHGroup14",
                "pfsGroup": "PFS14",
                "ikeIntegrity": "SHA384",
                "ikeEncryption": "AES256",
                "ipsecIntegrity": "SHA256",
                "ipsecEncryption": "AES256",
                "saLifeTimeSeconds": 86472,
                "saDataSizeKilobytes": 429497
              }
            ],
            "vpnClientRootCertificates": [
              {
                "name": "vpnServerConfigVpnClientRootCert1",
                "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN"
              }
            ],
            "radiusClientRootCertificates": [
              {
                "name": "vpnServerConfigRadiusClientRootCert1",
                "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
              }
            ],
            "radiusServerRootCertificates": [
              {
                "name": "vpnServerConfigRadiusServerRootCer1",
                "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM"
              }
            ],
            "vpnClientRevokedCertificates": [
              {
                "name": "vpnServerConfigVpnClientRevokedCert1",
                "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
              }
            ]
          }
        }
      ]
  VpnServerConfigurations.List:
    description: |-
      Lists all the VpnServerConfigurations in a subscription.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnserverconfigurations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "vpnServerConfiguration1",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.Network/vpnServerConfigurations",
              "location": "West US",
              "properties": {
                "vpnProtocols": [
                  "IkeV2"
                ],
                "provisioningState": "Succeeded",
                "radiusServerSecret": "<password>",
                "radiusServerAddress": "8.9.9.9",
                "vpnAuthenticationTypes": [
                  "Certificate"
                ],
                "vpnClientIpsecPolicies": [
                  {
                    "dhGroup": "DHGroup14",
                    "pfsGroup": "PFS14",
                    "ikeIntegrity": "SHA384",
                    "ikeEncryption": "AES256",
                    "ipsecIntegrity": "SHA256",
                    "ipsecEncryption": "AES256",
                    "saLifeTimeSeconds": 86472,
                    "saDataSizeKilobytes": 429497
                  }
                ],
                "vpnClientRootCertificates": [
                  {
                    "name": "vpnServerConfigVpnClientRootCert1",
                    "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN"
                  }
                ],
                "radiusClientRootCertificates": [
                  {
                    "name": "vpnServerConfigRadiusClientRootCert1",
                    "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
                  }
                ],
                "radiusServerRootCertificates": [
                  {
                    "name": "vpnServerConfigRadiusServerRootCer1",
                    "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM"
                  }
                ],
                "vpnClientRevokedCertificates": [
                  {
                    "name": "vpnServerConfigVpnClientRevokedCert1",
                    "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
                  }
                ]
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration2",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "vpnServerConfiguration2",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.Network/vpnServerConfigurations",
              "location": "East US",
              "properties": {
                "vpnProtocols": [
                  "IkeV2"
                ],
                "radiusServers": [
                  {
                    "radiusServerScore": 25,
                    "radiusServerAddress": "10.0.0.0"
                  }
                ],
                "provisioningState": "Succeeded",
                "vpnAuthenticationTypes": [
                  "Certificate"
                ],
                "vpnClientIpsecPolicies": [
                  {
                    "dhGroup": "DHGroup14",
                    "pfsGroup": "PFS14",
                    "ikeIntegrity": "SHA384",
                    "ikeEncryption": "AES256",
                    "ipsecIntegrity": "SHA256",
                    "ipsecEncryption": "AES256",
                    "saLifeTimeSeconds": 86472,
                    "saDataSizeKilobytes": 429497
                  }
                ],
                "vpnClientRootCertificates": [
                  {
                    "name": "vpnServerConfigVpnClientRootCert1",
                    "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN"
                  }
                ],
                "radiusClientRootCertificates": [
                  {
                    "name": "vpnServerConfigRadiusClientRootCert1",
                    "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
                  }
                ],
                "radiusServerRootCertificates": [
                  {
                    "name": "vpnServerConfigRadiusServerRootCer1",
                    "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM"
                  }
                ],
                "vpnClientRevokedCertificates": [
                  {
                    "name": "vpnServerConfigVpnClientRevokedCert1",
                    "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
                  }
                ]
              }
            }
          ]
        }
      ]
  VpnServerConfigurations.ListByResourceGroup:
    description: |-
      Lists all the vpnServerConfigurations in a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnserverconfigurations/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "vpnServerConfiguration1",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.Network/vpnServerConfigurations",
              "location": "West US",
              "properties": {
                "vpnProtocols": [
                  "IkeV2"
                ],
                "provisioningState": "Succeeded",
                "radiusServerSecret": "<password>",
                "radiusServerAddress": "8.9.9.9",
                "vpnAuthenticationTypes": [
                  "Certificate"
                ],
                "vpnClientIpsecPolicies": [
                  {
                    "dhGroup": "DHGroup14",
                    "pfsGroup": "PFS14",
                    "ikeIntegrity": "SHA384",
                    "ikeEncryption": "AES256",
                    "ipsecIntegrity": "SHA256",
                    "ipsecEncryption": "AES256",
                    "saLifeTimeSeconds": 86472,
                    "saDataSizeKilobytes": 429497
                  }
                ],
                "vpnClientRootCertificates": [
                  {
                    "name": "vpnServerConfigVpnClientRootCert1",
                    "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN"
                  }
                ],
                "radiusClientRootCertificates": [
                  {
                    "name": "vpnServerConfigRadiusClientRootCert1",
                    "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
                  }
                ],
                "radiusServerRootCertificates": [
                  {
                    "name": "vpnServerConfigRadiusServerRootCer1",
                    "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM"
                  }
                ],
                "vpnClientRevokedCertificates": [
                  {
                    "name": "vpnServerConfigVpnClientRevokedCert1",
                    "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
                  }
                ]
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration2",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "vpnServerConfiguration2",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.Network/vpnServerConfigurations",
              "location": "West US",
              "properties": {
                "vpnProtocols": [
                  "IkeV2"
                ],
                "provisioningState": "Succeeded",
                "radiusServerSecret": "<password>",
                "radiusServerAddress": "8.9.9.9",
                "vpnAuthenticationTypes": [
                  "Certificate"
                ],
                "vpnClientIpsecPolicies": [
                  {
                    "dhGroup": "DHGroup14",
                    "pfsGroup": "PFS14",
                    "ikeIntegrity": "SHA384",
                    "ikeEncryption": "AES256",
                    "ipsecIntegrity": "SHA256",
                    "ipsecEncryption": "AES256",
                    "saLifeTimeSeconds": 86472,
                    "saDataSizeKilobytes": 429497
                  }
                ],
                "vpnClientRootCertificates": [
                  {
                    "name": "vpnServerConfigVpnClientRootCert1",
                    "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN"
                  }
                ],
                "radiusClientRootCertificates": [
                  {
                    "name": "vpnServerConfigRadiusClientRootCert1",
                    "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
                  }
                ],
                "radiusServerRootCertificates": [
                  {
                    "name": "vpnServerConfigRadiusServerRootCer1",
                    "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM"
                  }
                ],
                "vpnClientRevokedCertificates": [
                  {
                    "name": "vpnServerConfigVpnClientRevokedCert1",
                    "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
                  }
                ]
              }
            }
          ]
        }
      ]
  VpnServerConfigurations.UpdateTags:
    description: |-
      Updates VpnServerConfiguration tags.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnserverconfigurations/updatetags
    example:
      inputs: [
        {
          "tags": {
            "key1": "value1",
            "key2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "vpnServerConfiguration1",
          "tags": {
            "key1": "value1",
            "key2": "value2"
          },
          "type": "Microsoft.Network/vpnServerConfigurations",
          "location": "West US",
          "properties": {
            "vpnProtocols": [
              "IkeV2"
            ],
            "provisioningState": "Succeeded",
            "radiusServerSecret": "<password>",
            "radiusServerAddress": "8.9.9.9",
            "vpnClientIpsecPolicies": [
              {
                "dhGroup": "DHGroup14",
                "pfsGroup": "PFS14",
                "ikeIntegrity": "SHA384",
                "ikeEncryption": "AES256",
                "ipsecIntegrity": "SHA256",
                "ipsecEncryption": "AES256",
                "saLifeTimeSeconds": 86472,
                "saDataSizeKilobytes": 429497
              }
            ],
            "vpnClientRootCertificates": [
              {
                "name": "vpnServerConfigVpnClientRootCert1",
                "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuN"
              }
            ],
            "radiusClientRootCertificates": [
              {
                "name": "vpnServerConfigRadiusClientRootCert1",
                "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
              }
            ],
            "radiusServerRootCertificates": [
              {
                "name": "vpnServerConfigRadiusServerRootCer1",
                "publicCertData": "MIIC5zCCAc+gAwIBAgIQErQ0Hk4aDJxIA+Q5RagB+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0xNzEyMTQyMTA3MzhaFw0xODEyMTQyMTI3MzhaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArP7/NQXmW7cQ/ZR1mv3Y3I29Lt7HTOqzo/1KUOoVH3NItbQIRAQbwKy3UWrOFz4eGNX2GWtNRMdCyWsKeqy9Ltsdfcm1IbKXkl84DFeU/ZacXu4Dl3xX3gV5du4TLZjEowJELyur11Ea2YcjPRQ/FzAF9/hGuboS1HZQEPLx4FdUs9OxCYOtc0MxBCwLfVTTRqarb0Ne+arNYd4kCzIhAke1nOyKAJBda5ZL+VHy3S5S8qGlD46jm8HXugmAkUygS4oIIXOmj/1O9sNAi3LN60zufSzCmP8Rm/iUGX+DHAGGiXxwZOKQLEDaZXKqoHjMPP0XudmSWwOIbyeQVrLhkwIDAQABozEwLzAOBgNVHQ8BAf8EBAMCAgQwHQYDVR0OBBYEFEfeNU2trYxNLF9ONmuJUsT13pKDMA0GCSqGSIb3DQEBCwUAA4IBAQBmM6RJzsGGipxyMhimHKN2xlkejhVsgBoTAhOU0llW9aUSwINJ9zFUGgI8IzUFy1VG776fchHp0LMRmPSIUYk5btEPxbsrPtumPuMH8EQGrS+Rt4pD+78c8H1fEPkq5CmDl/PKu4JoFGv+aFcE+Od0hlILstIF10Qysf++QXDolKfzJa/56bgMeYKFiju73loiRM57ns8ddXpfLl792UVpRkFU62LNns6Y1LKTwapmUF4IvIuAIzd6LZNOQng64LAKXtKnViJ1JQiXwf4CEzhgvAti3/ejpb3U90hsrUcyZi6wBv9bZLcAJRWpz61JNYliM1d1grSwQDKGXNQE4xuM"
              }
            ],
            "vpnClientRevokedCertificates": [
              {
                "name": "vpnServerConfigVpnClientRevokedCert1",
                "thumbprint": "83FFBFC8848B5A5836C94D0112367E16148A286F"
              }
            ]
          }
        }
      ]
  VpnSiteLinkConnections.Get:
    description: |-
      Retrieves the details of a vpn site link connection.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnsitelinkconnections/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/vpnConnection1/VpnSiteLinkConnections/Connection-Link1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "Connection-Link1",
          "type": "Microsoft.Network/vpnGateways/vpnConnections/VpnSiteLinkConnections",
          "properties": {
            "enableBgp": false,
            "sharedKey": "key",
            "vpnSiteLink": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1"
            },
            "ipsecPolicies": [],
            "routingWeight": 0,
            "provisioningState": "Succeeded",
            "enableRateLimiting": false,
            "connectionBandwidth": 200,
            "egressBytesTransferred": 0,
            "useLocalAzureIpAddress": false,
            "ingressBytesTransferred": 0,
            "vpnConnectionProtocolType": "IKEv2",
            "usePolicyBasedTrafficSelectors": false
          }
        }
      ]
  VpnSiteLinks.Get:
    description: |-
      Retrieves the details of a VPN site link.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnsitelinks/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/vpnSiteLink1",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "vpnSiteLink1",
          "type": "Microsoft.Network/vpnSites/vpnSiteLinks",
          "properties": {
            "ipAddress": "50.50.50.56",
            "bgpProperties": {
              "asn": 1234,
              "bgpPeeringAddress": "192.168.0.0"
            },
            "linkProperties": {
              "linkSpeedInMbps": 0
            },
            "provisioningState": "Succeeded"
          }
        }
      ]
  VpnSiteLinks.ListByVpnSite:
    description: |-
      Lists all the vpnSiteLinks in a resource group for a vpn site.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnsitelinks/listbyvpnsite
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/vpnSiteLink1",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "vpnSiteLink1",
              "type": "Microsoft.Network/vpnSites/vpnSiteLinks",
              "properties": {
                "ipAddress": "50.50.50.56",
                "bgpProperties": {
                  "asn": 1234,
                  "bgpPeeringAddress": "192.168.0.0"
                },
                "linkProperties": {
                  "linkSpeedInMbps": 200
                },
                "provisioningState": "Succeeded"
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/vpnSiteLink2",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "vpnSiteLink2",
              "type": "Microsoft.Network/vpnSites/vpnSiteLinks",
              "properties": {
                "ipAddress": "40.40.40.46",
                "bgpProperties": {
                  "asn": 1234,
                  "bgpPeeringAddress": "192.168.0.1"
                },
                "linkProperties": {
                  "linkSpeedInMbps": 200
                },
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]
  VpnSitesConfiguration.Download:
    description: |-
      Gives the sas-url to download the configurations for vpn-sites in a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnsitesconfiguration/download
    example:
      inputs: [
        {
          "vpnSites": [
            "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/abc"
          ],
          "outputBlobSasUrl": "https://blobcortextesturl.blob.core.windows.net/folderforconfig/vpnFile?sp=rw&se=2018-01-10T03%3A42%3A04Z&sv=2017-04-17&sig=WvXrT5bDmDFfgHs%2Brz%2BjAu123eRCNE9BO0eQYcPDT7pY%3D&sr=b"
        }
      ]
      outputs: [
        {}
      ]
  VpnSites.CreateOrUpdate:
    description: |-
      Creates a VpnSite resource if it doesn't exist else updates the existing VpnSite.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnsites/createorupdate
    example:
      inputs: [
        {
          "tags": {
            "key1": "value1"
          },
          "location": "West US",
          "properties": {
            "o365Policy": {
              "breakOutCategories": {
                "allow": true,
                "default": false,
                "optimize": true
              }
            },
            "virtualWan": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1"
            },
            "addressSpace": {
              "addressPrefixes": [
                "10.0.0.0/16"
              ]
            },
            "vpnSiteLinks": [
              {
                "name": "vpnSiteLink1",
                "properties": {
                  "fqdn": "link1.vpnsite1.contoso.com",
                  "ipAddress": "50.50.50.56",
                  "bgpProperties": {
                    "asn": 1234,
                    "bgpPeeringAddress": "192.168.0.0"
                  },
                  "linkProperties": {
                    "linkSpeedInMbps": 0,
                    "linkProviderName": "vendor1"
                  }
                }
              }
            ],
            "isSecuritySite": false
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "vpnSite1",
          "tags": {
            "key1": "value1"
          },
          "type": "Microsoft.Network/vpnSites",
          "location": "West US",
          "properties": {
            "virtualWan": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1"
            },
            "addressSpace": {
              "addressPrefixes": [
                "10.0.0.0/16"
              ]
            },
            "vpnSiteLinks": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/vpnSiteLink1",
                "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
                "name": "vpnSiteLink1",
                "type": "Microsoft.Network/vpnSites/vpnSiteLinks",
                "properties": {
                  "ipAddress": "50.50.50.56",
                  "bgpProperties": {
                    "asn": 1234,
                    "bgpPeeringAddress": "192.168.0.0"
                  },
                  "linkProperties": {
                    "linkSpeedInMbps": 0,
                    "linkProviderName": "vendor1"
                  },
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "isSecuritySite": false,
            "deviceProperties": {
              "linkSpeedInMbps": 0
            },
            "provisioningState": "Succeeded"
          }
        }
      ]
  VpnSites.Delete:
    description: |-
      Deletes a VpnSite.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnsites/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  VpnSites.Get:
    description: |-
      Retrieves the details of a VPN site.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnsites/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "vpnSite1",
          "tags": {
            "key1": "value1"
          },
          "type": "Microsoft.Network/vpnSites",
          "location": "West US",
          "properties": {
            "virtualWan": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1"
            },
            "addressSpace": {
              "addressPrefixes": [
                "10.0.0.0/16"
              ]
            },
            "vpnSiteLinks": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/vpnSiteLink1",
                "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
                "name": "vpnSiteLink1",
                "type": "Microsoft.Network/vpnSites/vpnSiteLinks",
                "properties": {
                  "ipAddress": "50.50.50.56",
                  "bgpProperties": {
                    "asn": 1234,
                    "bgpPeeringAddress": "192.168.0.0"
                  },
                  "linkProperties": {
                    "linkSpeedInMbps": 0,
                    "linkProviderName": "vendor1"
                  },
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "isSecuritySite": false,
            "deviceProperties": {
              "linkSpeedInMbps": 0
            },
            "provisioningState": "Succeeded"
          }
        }
      ]
  VpnSites.List:
    description: |-
      Lists all the VpnSites in a subscription.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnsites/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "vpnSite1",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.Network/vpnSites",
              "location": "West US",
              "properties": {
                "virtualWan": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1"
                },
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "vpnSiteLinks": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/vpnSiteLink1",
                    "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
                    "name": "vpnSiteLink1",
                    "type": "Microsoft.Network/vpnSites/vpnSiteLinks",
                    "properties": {
                      "ipAddress": "50.50.50.56",
                      "bgpProperties": {
                        "asn": 1234,
                        "bgpPeeringAddress": "192.168.0.0"
                      },
                      "linkProperties": {
                        "linkSpeedInMbps": 0
                      },
                      "provisioningState": "Succeeded"
                    }
                  }
                ],
                "isSecuritySite": false,
                "deviceProperties": {
                  "linkSpeedInMbps": 0
                },
                "provisioningState": "Succeeded"
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/vpnSites/vpnSite2",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "vpnSite2",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.Network/vpnSites",
              "location": "East US",
              "properties": {
                "ipAddress": "10.1.0.0",
                "virtualWan": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualWANs/wan1",
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "bgpProperties": {
                  "asn": 1234,
                  "bgpPeeringAddress": "192.168.0.0"
                },
                "isSecuritySite": false,
                "deviceProperties": {
                  "deviceModel": "model01",
                  "deviceVendor": "vendor1",
                  "linkSpeedInMbps": 200
                },
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]
  VpnSites.ListByResourceGroup:
    description: |-
      Lists all the vpnSites in a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnsites/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "vpnSite1",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.Network/vpnSites",
              "location": "West US",
              "properties": {
                "virtualWan": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1"
                },
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "vpnSiteLinks": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/vpnSiteLink1",
                    "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
                    "name": "vpnSiteLink1",
                    "type": "Microsoft.Network/vpnSites/vpnSiteLinks",
                    "properties": {
                      "ipAddress": "50.50.50.56",
                      "bgpProperties": {
                        "asn": 1234,
                        "bgpPeeringAddress": "192.168.0.0"
                      },
                      "linkProperties": {
                        "linkSpeedInMbps": 0
                      },
                      "provisioningState": "Succeeded"
                    }
                  }
                ],
                "isSecuritySite": false,
                "deviceProperties": {
                  "linkSpeedInMbps": 0
                },
                "provisioningState": "Succeeded"
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite2",
              "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
              "name": "vpnSite2",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.Network/vpnSites",
              "location": "West US",
              "properties": {
                "ipAddress": "10.1.0.0",
                "virtualWan": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1",
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "bgpProperties": {
                  "asn": 1234,
                  "bgpPeeringAddress": "192.168.0.0"
                },
                "deviceProperties": {
                  "deviceModel": "model01",
                  "deviceVendor": "vendor1",
                  "linkSpeedInMbps": 200
                },
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]
  VpnSites.UpdateTags:
    description: |-
      Updates VpnSite tags.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/virtualwan/vpnsites/updatetags
    example:
      inputs: [
        {
          "tags": {
            "key1": "value1",
            "key2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1",
          "etag": "w/\\00000000-0000-0000-0000-000000000000\\",
          "name": "vpnSite1",
          "tags": {
            "key1": "value1",
            "key2": "value2"
          },
          "type": "Microsoft.Network/vpnSites",
          "location": "West US",
          "properties": {
            "ipAddress": "10.0.0.0",
            "virtualWan": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1",
            "addressSpace": {
              "addressPrefixes": [
                "10.0.0.0/16"
              ]
            },
            "bgpProperties": {
              "asn": 1234,
              "bgpPeeringAddress": "192.168.0.0"
            },
            "deviceProperties": {
              "deviceModel": "model01",
              "deviceVendor": "vendor1",
              "linkSpeedInMbps": 200
            },
            "provisioningState": "Succeeded"
          }
        }
      ]