Product:
  name: Azure Container Instances
  versions: [2019.12.1]
  package: microsoft.azure.containerinstances
  description: |-
    ContainerInstances
  link: https://docs.microsoft.com/en-us/azure/container-instances/
  contentType: json
Operations:
  ContainerGroups.CreateOrUpdate:
    description: |-
      Create or update container groups.
    versions:
      from: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/container-instances/containergroups/createorupdate
    example:
      inputs: [
        {
          "identity": {
            "type": "SystemAssigned, UserAssigned",
            "userAssignedIdentities": {
              "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-name": {}
            }
          },
          "location": "west us",
          "properties": {
            "osType": "Linux",
            "volumes": [
              {
                "name": "volume1",
                "azureFile": {
                  "shareName": "shareName",
                  "storageAccountKey": "accountKey",
                  "storageAccountName": "accountName"
                }
              },
              {
                "name": "volume2",
                "emptyDir": {}
              },
              {
                "name": "volume3",
                "secret": {
                  "secretKey1": "SecretValue1InBase64",
                  "secretKey2": "SecretValue2InBase64"
                }
              }
            ],
            "dnsConfig": {
              "options": "ndots:2",
              "nameServers": [
                "1.1.1.1"
              ],
              "searchDomains": "cluster.local svc.cluster.local"
            },
            "ipAddress": {
              "type": "Public",
              "ports": [
                {
                  "port": 80,
                  "protocol": "TCP"
                }
              ],
              "dnsNameLabel": "dnsnamelabel1"
            },
            "containers": [
              {
                "name": "demo1",
                "properties": {
                  "image": "nginx",
                  "ports": [
                    {
                      "port": 80
                    }
                  ],
                  "command": [],
                  "resources": {
                    "requests": {
                      "cpu": 1,
                      "gpu": {
                        "sku": "K80",
                        "count": 1
                      },
                      "memoryInGB": 1.5
                    }
                  },
                  "volumeMounts": [
                    {
                      "name": "volume1",
                      "readOnly": false,
                      "mountPath": "/mnt/volume1"
                    },
                    {
                      "name": "volume2",
                      "readOnly": false,
                      "mountPath": "/mnt/volume2"
                    },
                    {
                      "name": "volume3",
                      "readOnly": true,
                      "mountPath": "/mnt/volume3"
                    }
                  ],
                  "environmentVariables": []
                }
              }
            ],
            "diagnostics": {
              "logAnalytics": {
                "logType": "ContainerInsights",
                "metadata": {
                  "test-key": "test-metadata-value"
                },
                "workspaceId": "workspaceid",
                "workspaceKey": "workspaceKey"
              }
            },
            "networkProfile": {
              "id": "test-network-profile-id"
            },
            "imageRegistryCredentials": []
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1",
          "name": "demo1",
          "type": "Microsoft.ContainerInstance/containerGroups",
          "location": "WestUs",
          "properties": {
            "osType": "Linux",
            "volumes": [
              {
                "name": "volume1",
                "azureFile": {
                  "shareName": "shareName",
                  "storageAccountName": "accountName"
                }
              },
              {
                "name": "volume2",
                "emptyDir": {}
              },
              {
                "name": "volume3",
                "secret": {}
              }
            ],
            "dnsConfig": {
              "options": "ndots:2",
              "nameServers": [
                "1.1.1.1"
              ],
              "searchDomains": "cluster.local svc.cluster.local"
            },
            "ipAddress": {
              "ip": "10.0.0.1",
              "fqdn": "dnsnamelabel1.azure-container.io",
              "type": "Public",
              "ports": [
                {
                  "port": 80,
                  "protocol": "TCP"
                }
              ],
              "dnsNameLabel": "dnsnamelabel1"
            },
            "containers": [
              {
                "name": "demo1",
                "properties": {
                  "image": "nginx",
                  "ports": [
                    {
                      "port": 80
                    }
                  ],
                  "command": [],
                  "resources": {
                    "requests": {
                      "cpu": 1,
                      "gpu": {
                        "sku": "K80",
                        "count": 1
                      },
                      "memoryInGB": 1.5
                    }
                  },
                  "volumeMounts": [
                    {
                      "name": "volume1",
                      "readOnly": false,
                      "mountPath": "/mnt/volume1"
                    },
                    {
                      "name": "volume2",
                      "readOnly": false,
                      "mountPath": "/mnt/volume2"
                    },
                    {
                      "name": "volume3",
                      "readOnly": true,
                      "mountPath": "/mnt/volume3"
                    }
                  ],
                  "environmentVariables": []
                }
              }
            ],
            "diagnostics": {
              "logAnalytics": {
                "workspaceId": "workspaceid",
                "workspaceKey": ""
              }
            },
            "provisioningState": "Succeeded",
            "imageRegistryCredentials": []
          }
        }
      ]
  ContainerGroups.Delete:
    description: |-
      Delete the specified container group.
    versions:
      from: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/container-instances/containergroups/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1",
          "name": "demo1",
          "type": "Microsoft.ContainerInstance/containerGroups",
          "location": "WestUs",
          "properties": {
            "osType": "Linux",
            "volumes": [
              {
                "name": "volume1",
                "azureFile": {
                  "readOnly": false,
                  "shareName": "share1",
                  "storageAccountName": "storage1"
                }
              }
            ],
            "ipAddress": {
              "ip": "10.0.0.1",
              "type": "Public",
              "ports": [
                {
                  "port": 80,
                  "protocol": "TCP"
                }
              ]
            },
            "containers": [
              {
                "name": "demo1",
                "properties": {
                  "image": "nginx",
                  "ports": [
                    {
                      "port": 80
                    }
                  ],
                  "command": [],
                  "resources": {
                    "requests": {
                      "cpu": 1,
                      "memoryInGB": 1.5
                    }
                  },
                  "volumeMounts": [
                    {
                      "name": "volume1",
                      "readOnly": false,
                      "mountPath": "/mnt/volume1"
                    }
                  ],
                  "environmentVariables": []
                }
              }
            ],
            "provisioningState": "Succeeded",
            "imageRegistryCredentials": [
              {
                "server": "azcloudconsoleregistry.azurecr.io",
                "username": "azcloudconsoleregistry"
              }
            ]
          }
        }
      ]
  ContainerGroups.Get:
    description: |-
      Get the properties of the specified container group.
    versions:
      from: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/container-instances/containergroups/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1",
          "name": "demo1",
          "type": "Microsoft.ContainerInstance/containerGroups",
          "location": "WestUs",
          "properties": {
            "osType": "Linux",
            "volumes": [
              {
                "name": "volume1",
                "azureFile": {
                  "readOnly": false,
                  "shareName": "share1",
                  "storageAccountName": "storage1"
                }
              }
            ],
            "ipAddress": {
              "ip": "10.0.0.1",
              "type": "Public",
              "ports": [
                {
                  "port": 80,
                  "protocol": "TCP"
                }
              ]
            },
            "containers": [
              {
                "name": "demo1",
                "properties": {
                  "image": "nginx",
                  "ports": [
                    {
                      "port": 80
                    }
                  ],
                  "command": [],
                  "resources": {
                    "requests": {
                      "cpu": 1,
                      "memoryInGB": 1.5
                    }
                  },
                  "instanceView": {
                    "events": [
                      {
                        "name": "Pulling",
                        "type": "Normal",
                        "count": 1,
                        "message": "pulling image \"nginx\"",
                        "lastTimestamp": "2017-08-08T00:09:01Z",
                        "firstTimestamp": "2017-08-08T00:09:01Z"
                      },
                      {
                        "name": "Pulled",
                        "type": "Normal",
                        "count": 1,
                        "message": "Successfully pulled image \"nginx\"",
                        "lastTimestamp": "2017-08-08T00:09:10Z",
                        "firstTimestamp": "2017-08-08T00:09:10Z"
                      }
                    ],
                    "currentState": {
                      "state": "Waiting",
                      "startTime": "2017-08-08T00:09:10Z",
                      "detailStatus": ""
                    },
                    "restartCount": 0
                  },
                  "volumeMounts": [
                    {
                      "name": "volume1",
                      "readOnly": false,
                      "mountPath": "/mnt/volume1"
                    }
                  ],
                  "environmentVariables": []
                }
              }
            ],
            "instanceView": {
              "state": "Pending",
              "events": [
                {
                  "name": "FailedMount",
                  "type": "Normal",
                  "count": 1,
                  "message": "Output: mount error(2): Permission denied",
                  "lastTimestamp": "2017-10-08T00:19:10Z",
                  "firstTimestamp": "2017-10-08T00:19:10Z"
                }
              ]
            },
            "provisioningState": "Failed",
            "imageRegistryCredentials": [
              {
                "server": "azcloudconsoleregistry.azurecr.io",
                "username": "azcloudconsoleregistry"
              }
            ]
          }
        }
      ]
  ContainerGroups.List:
    description: |-
      Get a list of container groups in the specified subscription.
    versions:
      from: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/container-instances/containergroups/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1",
              "name": "demo1",
              "type": "Microsoft.ContainerInstance/containerGroups",
              "location": "WestUs",
              "properties": {
                "osType": "Linux",
                "volumes": [
                  {
                    "name": "volume1",
                    "azureFile": {
                      "readOnly": false,
                      "shareName": "share1",
                      "storageAccountName": "storage1"
                    }
                  }
                ],
                "ipAddress": {
                  "ip": "10.0.0.1",
                  "type": "Public",
                  "ports": [
                    {
                      "port": 80,
                      "protocol": "TCP"
                    }
                  ]
                },
                "containers": [
                  {
                    "name": "demo1",
                    "properties": {
                      "image": "nginx",
                      "ports": [
                        {
                          "port": 80
                        }
                      ],
                      "command": [],
                      "resources": {
                        "requests": {
                          "cpu": 1,
                          "memoryInGB": 1.5
                        }
                      },
                      "instanceView": {
                        "events": [],
                        "currentState": {
                          "state": "Running",
                          "startTime": "2017-10-17T17:27:21Z",
                          "detailStatus": ""
                        },
                        "restartCount": 0
                      },
                      "volumeMounts": [
                        {
                          "name": "volume1",
                          "readOnly": false,
                          "mountPath": "/mnt/volume1"
                        }
                      ],
                      "environmentVariables": []
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "imageRegistryCredentials": [
                  {
                    "server": "azcloudconsoleregistry.azurecr.io",
                    "username": "azcloudconsoleregistry"
                  }
                ]
              }
            }
          ]
        }
      ]
  ContainerGroups.ListByResourceGroup:
    description: |-
      Get a list of container groups in the specified subscription and resource group.
    versions:
      from: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/container-instances/containergroups/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1",
              "name": "demo1",
              "type": "Microsoft.ContainerInstance/containerGroups",
              "location": "WestUs",
              "properties": {
                "osType": "Linux",
                "volumes": [
                  {
                    "name": "volume1",
                    "azureFile": {
                      "readOnly": false,
                      "shareName": "share1",
                      "storageAccountName": "storage1"
                    }
                  }
                ],
                "ipAddress": {
                  "ip": "10.0.0.1",
                  "type": "Public",
                  "ports": [
                    {
                      "port": 80,
                      "protocol": "TCP"
                    }
                  ]
                },
                "containers": [
                  {
                    "name": "demo1",
                    "properties": {
                      "image": "nginx",
                      "ports": [
                        {
                          "port": 80
                        }
                      ],
                      "command": [],
                      "resources": {
                        "requests": {
                          "cpu": 1,
                          "memoryInGB": 1.5
                        }
                      },
                      "volumeMounts": [
                        {
                          "name": "volume1",
                          "readOnly": false,
                          "mountPath": "/mnt/volume1"
                        }
                      ],
                      "environmentVariables": []
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "imageRegistryCredentials": [
                  {
                    "server": "azcloudconsoleregistry.azurecr.io",
                    "username": "azcloudconsoleregistry"
                  }
                ]
              }
            }
          ]
        }
      ]
  ContainerGroups.Restart:
    description: |-
      Restarts all containers in a container group.
    versions:
      from: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/container-instances/containergroups/restart
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ContainerGroups.Start:
    description: |-
      Starts all containers in a container group.
    versions:
      from: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/container-instances/containergroups/start
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ContainerGroups.Stop:
    description: |-
      Stops all containers in a container group.
    versions:
      from: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/container-instances/containergroups/stop
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ContainerGroups.Update:
    description: |-
      Update container groups.
    versions:
      from: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/container-instances/containergroups/update
    example:
      inputs: [
        {
          "tags": {
            "tag1key": "tag1Value",
            "tag2key": "tag2Value"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/demoResource/providers/Microsoft.ContainerInstance/containerGroups/demo1",
          "name": "demo1",
          "tags": {
            "tag1key": "tag1Value",
            "tag2key": "tag2Value"
          },
          "type": "Microsoft.ContainerInstance/containerGroups",
          "location": "WestUs",
          "properties": {
            "osType": "Linux",
            "volumes": [
              {
                "name": "volume1",
                "azureFile": {
                  "shareName": "shareName",
                  "storageAccountName": "accountName"
                }
              },
              {
                "name": "volume2",
                "emptyDir": {}
              },
              {
                "name": "volume3",
                "secret": {}
              }
            ],
            "ipAddress": {
              "ip": "10.0.0.1",
              "fqdn": "dnsnamelabel1.azure-container.io",
              "type": "Public",
              "ports": [
                {
                  "port": 80,
                  "protocol": "TCP"
                }
              ],
              "dnsNameLabel": "dnsnamelabel1"
            },
            "containers": [
              {
                "name": "demo1",
                "properties": {
                  "image": "nginx",
                  "ports": [
                    {
                      "port": 80
                    }
                  ],
                  "command": [],
                  "resources": {
                    "requests": {
                      "cpu": 1,
                      "memoryInGB": 1.5
                    }
                  },
                  "volumeMounts": [
                    {
                      "name": "volume1",
                      "readOnly": false,
                      "mountPath": "/mnt/volume1"
                    },
                    {
                      "name": "volume2",
                      "readOnly": false,
                      "mountPath": "/mnt/volume2"
                    },
                    {
                      "name": "volume3",
                      "readOnly": true,
                      "mountPath": "/mnt/volume3"
                    }
                  ],
                  "environmentVariables": []
                }
              }
            ],
            "provisioningState": "Succeeded",
            "imageRegistryCredentials": []
          }
        }
      ]
  Containers.ExecuteCommand:
    description: |-
      Executes a command in a specific container instance.
    versions:
      from: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/container-instances/containers/executecommand
    example:
      inputs: [
        {
          "command": "/bin/bash",
          "terminalSize": {
            "cols": 12,
            "rows": 12
          }
        }
      ]
      outputs: [
        {
          "password": "password",
          "webSocketUri": "wss://web-socket-uri"
        }
      ]
  Containers.ListLogs:
    description: |-
      Get the logs for a specified container instance.
    versions:
      from: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/container-instances/containers/listlogs
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "content": "log content"
        }
      ]
  Location.ListCachedImages:
    description: |-
      Get the list of cached images.
    versions:
      from: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/container-instances/location/listcachedimages
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "image": "ubuntu:16.04",
              "osType": "Linux"
            },
            {
              "image": "alpine:3.6",
              "osType": "Linux"
            },
            {
              "image": "microsoft/nanoserver:10.0.14393.2485",
              "osType": "Windows"
            }
          ]
        }
      ]
  Location.ListCapabilities:
    description: |-
      Get the list of capabilities of the location.
    versions:
      from: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/container-instances/location/listcapabilities
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "gpu": "K80",
              "osType": "Linux",
              "location": "West US",
              "capabilities": {
                "maxCpu": 4,
                "maxGpuCount": 4,
                "maxMemoryInGB": 14
              },
              "resourceType": "containerGroups",
              "ipAddressType": "Public"
            },
            {
              "gpu": "None",
              "osType": "Windows",
              "location": "West US",
              "capabilities": {
                "maxCpu": 4,
                "maxGpuCount": 0,
                "maxMemoryInGB": 14
              },
              "resourceType": "containerGroups",
              "ipAddressType": "Public"
            }
          ]
        }
      ]
  Location.ListUsage:
    description: |-
      Get the usage for a subscription
    versions:
      from: 2019.12.1
    link: https://docs.microsoft.com/en-us/rest/api/container-instances/location/listusage
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "name": {
                "value": "ContainerGroups",
                "localizedValue": "Container Groups"
              },
              "unit": "Count",
              "limit": 2000,
              "currentValue": 1
            }
          ]
        }
      ]