Product:
  name: Azure Load Balancer
  versions: [2020.11.1]
  package: microsoft.azure.loadbalancer
  description: |-
    LoadBalancer
  link: https://docs.microsoft.com/en-us/azure/load-balancer/
  contentType: json
Operations:
  InboundNatRules.CreateOrUpdate:
    description: |-
      Creates or updates a load balancer inbound nat rule.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/inboundnatrules/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "protocol": "Tcp",
            "backendPort": 3389,
            "frontendPort": 3390,
            "enableTcpReset": false,
            "enableFloatingIP": false,
            "idleTimeoutInMinutes": 4,
            "frontendIPConfiguration": {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/ip1"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/inboundNatRules/natRule1.1",
          "name": "natRule1.1",
          "properties": {
            "protocol": "Tcp",
            "backendPort": 3389,
            "frontendPort": 3390,
            "enableTcpReset": false,
            "enableFloatingIP": false,
            "provisioningState": "Succeeded",
            "idleTimeoutInMinutes": 4,
            "backendIPConfiguration": {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Compute/virtualMachineScaleSets/vmss1/virtualMachines/1/networkInterfaces/nic1/ipConfigurations/ip1"
            },
            "frontendIPConfiguration": {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/ip1"
            }
          }
        }
      ]
  InboundNatRules.Delete:
    description: |-
      Deletes the specified load balancer inbound nat rule.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/inboundnatrules/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  InboundNatRules.Get:
    description: |-
      Gets the specified load balancer inbound nat rule.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/inboundnatrules/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/inboundNatRules/natRule1.1",
          "name": "natRule1.1",
          "properties": {
            "protocol": "Tcp",
            "backendPort": 3389,
            "frontendPort": 3390,
            "enableTcpReset": true,
            "enableFloatingIP": false,
            "provisioningState": "Succeeded",
            "idleTimeoutInMinutes": 4,
            "backendIPConfiguration": {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Compute/virtualMachineScaleSets/vmss1/virtualMachines/1/networkInterfaces/nic1/ipConfigurations/ip1"
            },
            "frontendIPConfiguration": {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/ip1"
            }
          }
        }
      ]
  InboundNatRules.List:
    description: |-
      Gets all the inbound nat rules in a load balancer.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/inboundnatrules/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/inboundNatRules/natRule1.1",
              "name": "natRule1.1",
              "properties": {
                "protocol": "Tcp",
                "backendPort": 3389,
                "frontendPort": 3390,
                "enableTcpReset": true,
                "enableFloatingIP": false,
                "provisioningState": "Succeeded",
                "idleTimeoutInMinutes": 4,
                "backendIPConfiguration": {
                  "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Compute/virtualMachineScaleSets/vmss1/virtualMachines/1/networkInterfaces/nic1/ipConfigurations/ip1"
                },
                "frontendIPConfiguration": {
                  "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/ip1"
                }
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/inboundNatRules/natRule1.3",
              "name": "natRule1.3",
              "properties": {
                "protocol": "Tcp",
                "backendPort": 3389,
                "frontendPort": 3392,
                "enableTcpReset": true,
                "enableFloatingIP": false,
                "provisioningState": "Succeeded",
                "idleTimeoutInMinutes": 4,
                "backendIPConfiguration": {
                  "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Compute/virtualMachineScaleSets/vmss1/virtualMachines/3/networkInterfaces/nic1/ipConfigurations/ip1"
                },
                "frontendIPConfiguration": {
                  "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/ip1"
                }
              }
            }
          ]
        }
      ]
  LoadBalancerBackendAddressPools.CreateOrUpdate:
    description: |-
      Creates or updates a load balancer backend address pool.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancerbackendaddresspools/createorupdate
    example:
      inputs: [
        {
          "properties": {
            "loadBalancerBackendAddresses": [
              {
                "name": "address1",
                "properties": {
                  "ipAddress": "10.0.0.4",
                  "virtualNetwork": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb"
                  }
                }
              },
              {
                "name": "address2",
                "properties": {
                  "ipAddress": "10.0.0.5",
                  "virtualNetwork": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb"
                  }
                }
              }
            ]
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/backend",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "backend",
          "type": "Microsoft.Network/loadBalancers/backendAddressPools",
          "properties": {
            "provisioningState": "Succeeded",
            "loadBalancingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
              }
            ],
            "loadBalancerBackendAddresses": [
              {
                "name": "address1",
                "properties": {
                  "ipAddress": "10.0.0.4",
                  "virtualNetwork": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb"
                  }
                }
              },
              {
                "name": "address2",
                "properties": {
                  "ipAddress": "10.0.0.5",
                  "virtualNetwork": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb"
                  }
                }
              }
            ]
          }
        }
      ]
  LoadBalancerBackendAddressPools.Delete:
    description: |-
      Deletes the specified load balancer backend address pool.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancerbackendaddresspools/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  LoadBalancerBackendAddressPools.Get:
    description: |-
      Gets load balancer backend address pool.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancerbackendaddresspools/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/backend",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "backend",
          "type": "Microsoft.Network/loadBalancers/backendAddressPools",
          "properties": {
            "provisioningState": "Succeeded",
            "loadBalancingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
              }
            ],
            "loadBalancerBackendAddresses": [
              {
                "name": "address1",
                "properties": {
                  "ipAddress": "10.0.0.4",
                  "virtualNetwork": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb"
                  }
                }
              },
              {
                "name": "address2",
                "properties": {
                  "ipAddress": "10.0.0.5",
                  "virtualNetwork": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb"
                  }
                }
              }
            ]
          }
        }
      ]
  LoadBalancerBackendAddressPools.List:
    description: |-
      Gets all the load balancer backed address pools.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancerbackendaddresspools/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/backend",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "backend",
              "type": "Microsoft.Network/loadBalancers/backendAddressPools",
              "properties": {
                "provisioningState": "Succeeded",
                "loadBalancingRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                  }
                ],
                "loadBalancerBackendAddresses": [
                  {
                    "name": "address1",
                    "properties": {
                      "ipAddress": "10.0.0.4",
                      "virtualNetwork": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb"
                      }
                    }
                  },
                  {
                    "name": "address2",
                    "properties": {
                      "ipAddress": "10.0.0.5",
                      "virtualNetwork": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  LoadBalancerFrontendIpConfigurations.Get:
    description: |-
      Gets load balancer frontend IP configuration.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancerfrontendipconfigurations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/frontend",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "frontend",
          "type": "Microsoft.Network/loadBalancers/frontendIPConfigurations",
          "properties": {
            "subnet": {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/vnetlb/subnets/subnetlb"
            },
            "inboundNatRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/inboundNatRules/inrlb"
              }
            ],
            "privateIPAddress": "10.0.1.4",
            "provisioningState": "Succeeded",
            "loadBalancingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
              }
            ],
            "privateIPAddressVersion": "IPv4",
            "privateIPAllocationMethod": "Dynamic"
          }
        }
      ]
  LoadBalancerFrontendIpConfigurations.List:
    description: |-
      Gets all the load balancer frontend IP configurations.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancerfrontendipconfigurations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/frontend",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "frontend",
              "type": "Microsoft.Network/loadBalancers/frontendIPConfigurations",
              "properties": {
                "subnet": {
                  "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/vnetlb/subnets/subnetlb"
                },
                "inboundNatRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/inboundNatRules/inrlb"
                  }
                ],
                "privateIPAddress": "10.0.1.4",
                "provisioningState": "Succeeded",
                "loadBalancingRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                  }
                ],
                "privateIPAddressVersion": "IPv4",
                "privateIPAllocationMethod": "Dynamic"
              }
            }
          ]
        }
      ]
  LoadBalancerLoadBalancingRules.Get:
    description: |-
      Gets the specified load balancer load balancing rule.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancerloadbalancingrules/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/loadBalancingRules/rule1",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "rule1",
          "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
          "properties": {
            "probe": {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/probes/probe1"
            },
            "protocol": "Tcp",
            "backendPort": 80,
            "frontendPort": 80,
            "enableTcpReset": true,
            "enableFloatingIP": false,
            "loadDistribution": "Default",
            "provisioningState": "Succeeded",
            "backendAddressPool": {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/backendAddressPools/bepool1"
            },
            "idleTimeoutInMinutes": 15,
            "frontendIPConfiguration": {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/lbfrontend"
            }
          }
        }
      ]
  LoadBalancerLoadBalancingRules.List:
    description: |-
      Gets all the load balancing rules in a load balancer.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancerloadbalancingrules/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/loadBalancingRules/rule1",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "rule1",
              "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
              "properties": {
                "probe": {
                  "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/probes/probe1"
                },
                "protocol": "Tcp",
                "backendPort": 80,
                "frontendPort": 80,
                "enableTcpReset": true,
                "enableFloatingIP": false,
                "loadDistribution": "Default",
                "provisioningState": "Succeeded",
                "backendAddressPool": {
                  "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/backendAddressPools/bepool1"
                },
                "idleTimeoutInMinutes": 15,
                "frontendIPConfiguration": {
                  "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/lbfrontend"
                }
              }
            }
          ]
        }
      ]
  LoadBalancerNetworkInterfaces.List:
    description: |-
      Gets associated load balancer network interfaces.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancernetworkinterfaces/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/networkInterfaces/mynic",
              "etag": "W/\\\"00000000-0000-0000-0000-000000000000\\\"",
              "name": "mynic",
              "type": "Microsoft.Network/networkInterfaces",
              "location": "westus",
              "properties": {
                "dnsSettings": {
                  "dnsServers": [],
                  "appliedDnsServers": []
                },
                "resourceGuid": "00000000-0000-0000-0000-000000000000",
                "ipConfigurations": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/networkInterfaces/mynic/ipConfigurations/ipconfig1",
                    "etag": "W/\\\"00000000-0000-0000-0000-000000000000\\\"",
                    "name": "ipconfig1",
                    "properties": {
                      "subnet": {
                        "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/myVirtualNetwork/subnets/frontendSubnet"
                      },
                      "privateIPAddress": "10.0.1.4",
                      "provisioningState": "Succeeded",
                      "privateIPAddressVersion": "IPv4",
                      "privateIPAllocationMethod": "Dynamic",
                      "loadBalancerInboundNatRules": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/inboundNatRules/inbound1"
                        }
                      ],
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/bepool1"
                        }
                      ]
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "enableIPForwarding": false,
                "enableAcceleratedNetworking": false
              }
            }
          ]
        }
      ]
  LoadBalancerOutboundRules.Get:
    description: |-
      Gets the specified load balancer outbound rule.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalanceroutboundrules/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/outboundRules/rule1",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "rule1",
          "type": "Microsoft.Network/loadBalancers/outboundRules",
          "properties": {
            "protocol": "Tcp",
            "enableTcpReset": true,
            "provisioningState": "Succeeded",
            "backendAddressPool": {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/backendAddressPools/bepool1"
            },
            "idleTimeoutInMinutes": 15,
            "allocatedOutboundPorts": 64,
            "frontendIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/lbfrontend"
              }
            ]
          }
        }
      ]
  LoadBalancerOutboundRules.List:
    description: |-
      Gets all the outbound rules in a load balancer.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalanceroutboundrules/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/outboundRules/rule1",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "rule1",
              "type": "Microsoft.Network/loadBalancers/outboundRules",
              "properties": {
                "protocol": "Tcp",
                "enableTcpReset": true,
                "provisioningState": "Succeeded",
                "backendAddressPool": {
                  "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/backendAddressPools/bepool1"
                },
                "idleTimeoutInMinutes": 15,
                "allocatedOutboundPorts": 64,
                "frontendIPConfigurations": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/lbfrontend"
                  }
                ]
              }
            }
          ]
        }
      ]
  LoadBalancerProbes.Get:
    description: |-
      Gets load balancer probe.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancerprobes/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/probes/probe1",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "probe1",
          "type": "Microsoft.Network/loadBalancers/probes",
          "properties": {
            "port": 80,
            "protocol": "Http",
            "requestPath": "healthcheck.aspx",
            "numberOfProbes": 2,
            "intervalInSeconds": 15,
            "provisioningState": "Succeeded",
            "loadBalancingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
              }
            ]
          }
        }
      ]
  LoadBalancerProbes.List:
    description: |-
      Gets all the load balancer probes.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancerprobes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/probes/prlb",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "prlb",
              "type": "Microsoft.Network/loadBalancers/probes",
              "properties": {
                "port": 80,
                "protocol": "Http",
                "requestPath": "healthcheck.aspx",
                "numberOfProbes": 2,
                "intervalInSeconds": 15,
                "provisioningState": "Succeeded",
                "loadBalancingRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                  }
                ]
              }
            }
          ]
        }
      ]
  LoadBalancers.CreateOrUpdate:
    description: |-
      Creates or updates a load balancer.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancers/createorupdate
    example:
      inputs: [
        {
          "location": "eastus",
          "properties": {
            "probes": [
              {
                "name": "probe-lb",
                "properties": {
                  "port": 80,
                  "protocol": "Http",
                  "requestPath": "healthcheck.aspx",
                  "numberOfProbes": 2,
                  "intervalInSeconds": 15
                }
              }
            ],
            "inboundNatPools": [],
            "inboundNatRules": [
              {
                "name": "in-nat-rule",
                "properties": {
                  "protocol": "Tcp",
                  "backendPort": 3389,
                  "frontendPort": 3389,
                  "enableTcpReset": false,
                  "enableFloatingIP": true,
                  "idleTimeoutInMinutes": 15,
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/fe-lb"
                  }
                }
              }
            ],
            "loadBalancingRules": [
              {
                "name": "rulelb",
                "properties": {
                  "probe": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/probes/probe-lb"
                  },
                  "protocol": "Tcp",
                  "backendPort": 80,
                  "frontendPort": 80,
                  "enableTcpReset": false,
                  "enableFloatingIP": true,
                  "loadDistribution": "Default",
                  "backendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/be-lb"
                  },
                  "idleTimeoutInMinutes": 15,
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/fe-lb"
                  }
                }
              }
            ],
            "backendAddressPools": [
              {
                "name": "be-lb",
                "properties": {}
              }
            ],
            "frontendIPConfigurations": [
              {
                "name": "fe-lb",
                "properties": {
                  "subnet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb/subnets/subnetlb"
                  }
                }
              }
            ]
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb",
          "sku": {
            "name": "Basic"
          },
          "etag": "W/\"00000000-0000-0000-0000-00000000\"",
          "name": "lb",
          "type": "Microsoft.Network/loadBalancers",
          "location": "eastus",
          "properties": {
            "probes": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/probes/probe-lb",
                "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                "name": "probe-lb",
                "type": "Microsoft.Network/loadBalancers/probes",
                "properties": {
                  "port": 80,
                  "protocol": "Http",
                  "requestPath": "healthcheck.aspx",
                  "numberOfProbes": 2,
                  "intervalInSeconds": 15,
                  "provisioningState": "Succeeded",
                  "loadBalancingRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                    }
                  ]
                }
              }
            ],
            "resourceGuid": "00000000-0000-0000-0000-00000000",
            "inboundNatPools": [],
            "inboundNatRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/inboundNatRules/in-nat-rule",
                "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                "name": "in-nat-rule",
                "type": "Microsoft.Network/loadBalancers/inboundNatRules",
                "properties": {
                  "protocol": "Tcp",
                  "backendPort": 3389,
                  "frontendPort": 3389,
                  "enableTcpReset": false,
                  "enableFloatingIP": true,
                  "provisioningState": "Succeeded",
                  "idleTimeoutInMinutes": 15,
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/fe-lb"
                  }
                }
              }
            ],
            "provisioningState": "Succeeded",
            "loadBalancingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb",
                "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                "name": "rulelb",
                "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
                "properties": {
                  "probe": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/probes/probe-lb"
                  },
                  "protocol": "Tcp",
                  "backendPort": 80,
                  "frontendPort": 80,
                  "enableTcpReset": false,
                  "enableFloatingIP": true,
                  "loadDistribution": "Default",
                  "provisioningState": "Succeeded",
                  "backendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/be-lb"
                  },
                  "disableOutboundSnat": false,
                  "idleTimeoutInMinutes": 15,
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/fe-lb"
                  }
                }
              }
            ],
            "backendAddressPools": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/be-lb",
                "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                "name": "be-lb",
                "type": "Microsoft.Network/loadBalancers/backendAddressPools",
                "properties": {
                  "provisioningState": "Succeeded",
                  "loadBalancingRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                    }
                  ]
                }
              }
            ],
            "frontendIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/fe-lb",
                "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                "name": "fe-lb",
                "type": "Microsoft.Network/loadBalancers/frontendIPConfigurations",
                "properties": {
                  "subnet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb/subnets/subnetlb"
                  },
                  "inboundNatRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/inboundNatRules/in-nat-rule"
                    }
                  ],
                  "privateIPAddress": "10.0.1.4",
                  "provisioningState": "Succeeded",
                  "loadBalancingRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                    }
                  ],
                  "privateIPAllocationMethod": "Dynamic"
                }
              }
            ]
          }
        }
      ]
  LoadBalancers.Delete:
    description: |-
      Deletes the specified load balancer.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancers/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  LoadBalancers.Get:
    description: |-
      Gets the specified load balancer.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancers/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb",
          "sku": {
            "name": "Basic"
          },
          "etag": "W/\"00000000-0000-0000-0000-00000000\"",
          "name": "lb",
          "type": "Microsoft.Network/loadBalancers",
          "location": "westus",
          "properties": {
            "probes": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/probes/probe-lb",
                "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                "name": "probe-lb",
                "type": "Microsoft.Network/loadBalancers/probes",
                "properties": {
                  "port": 80,
                  "protocol": "Http",
                  "requestPath": "healthcheck.aspx",
                  "numberOfProbes": 2,
                  "intervalInSeconds": 15,
                  "provisioningState": "Succeeded",
                  "loadBalancingRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                    }
                  ]
                }
              }
            ],
            "resourceGuid": "00000000-0000-0000-0000-00000000",
            "inboundNatPools": [],
            "inboundNatRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/inboundNatRules/in-nat-rule",
                "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                "name": "in-nat-rule",
                "type": "Microsoft.Network/loadBalancers/inboundNatRules",
                "properties": {
                  "protocol": "Tcp",
                  "backendPort": 3389,
                  "frontendPort": 3389,
                  "enableTcpReset": true,
                  "enableFloatingIP": true,
                  "provisioningState": "Succeeded",
                  "idleTimeoutInMinutes": 15,
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/fe-lb"
                  }
                }
              }
            ],
            "provisioningState": "Succeeded",
            "loadBalancingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb",
                "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                "name": "rulelb",
                "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
                "properties": {
                  "probe": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/probes/probe-lb"
                  },
                  "protocol": "Tcp",
                  "backendPort": 80,
                  "frontendPort": 80,
                  "enableTcpReset": true,
                  "enableFloatingIP": true,
                  "loadDistribution": "Default",
                  "provisioningState": "Succeeded",
                  "backendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/be-lb"
                  },
                  "disableOutboundSnat": false,
                  "idleTimeoutInMinutes": 15,
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/fe-lb"
                  }
                }
              }
            ],
            "backendAddressPools": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/be-lb",
                "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                "name": "be-lb",
                "type": "Microsoft.Network/loadBalancers/backendAddressPools",
                "properties": {
                  "provisioningState": "Succeeded",
                  "loadBalancingRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                    }
                  ]
                }
              }
            ],
            "frontendIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/fe-lb",
                "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                "name": "fe-lb",
                "type": "Microsoft.Network/loadBalancers/frontendIPConfigurations",
                "properties": {
                  "subnet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb/subnets/subnetlb"
                  },
                  "inboundNatRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/inboundNatRules/in-nat-rule"
                    }
                  ],
                  "privateIPAddress": "10.0.1.4",
                  "provisioningState": "Succeeded",
                  "loadBalancingRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                    }
                  ],
                  "privateIPAddressVersion": "IPv4",
                  "privateIPAllocationMethod": "Dynamic"
                }
              }
            ]
          }
        }
      ]
  LoadBalancers.List:
    description: |-
      Gets all the load balancers in a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancers/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb",
              "sku": {
                "name": "Basic"
              },
              "etag": "W/\"00000000-0000-0000-0000-00000000\"",
              "name": "lb",
              "type": "Microsoft.Network/loadBalancers",
              "location": "westus",
              "properties": {
                "probes": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/probes/prlb",
                    "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                    "name": "prlb",
                    "type": "Microsoft.Network/loadBalancers/probes",
                    "properties": {
                      "port": 80,
                      "protocol": "Http",
                      "requestPath": "healthcheck.aspx",
                      "numberOfProbes": 2,
                      "intervalInSeconds": 15,
                      "provisioningState": "Succeeded",
                      "loadBalancingRules": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                        }
                      ]
                    }
                  }
                ],
                "resourceGuid": "00000000-0000-0000-0000-00000000",
                "inboundNatPools": [],
                "inboundNatRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/inboundNatRules/inrlb",
                    "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                    "name": "inrlb",
                    "type": "Microsoft.Network/loadBalancers/inboundNatRules",
                    "properties": {
                      "protocol": "Tcp",
                      "backendPort": 3389,
                      "frontendPort": 3389,
                      "enableTcpReset": true,
                      "enableFloatingIP": true,
                      "provisioningState": "Succeeded",
                      "idleTimeoutInMinutes": 15,
                      "frontendIPConfiguration": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/felb"
                      }
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "loadBalancingRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb",
                    "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                    "name": "rulelb",
                    "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
                    "properties": {
                      "probe": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/probes/prlb"
                      },
                      "protocol": "Tcp",
                      "backendPort": 80,
                      "frontendPort": 80,
                      "enableTcpReset": true,
                      "enableFloatingIP": true,
                      "loadDistribution": "Default",
                      "provisioningState": "Succeeded",
                      "backendAddressPool": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/belb"
                      },
                      "idleTimeoutInMinutes": 15,
                      "frontendIPConfiguration": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/felb"
                      }
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/belb",
                    "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                    "name": "belb",
                    "type": "Microsoft.Network/loadBalancers/backendAddressPools",
                    "properties": {
                      "provisioningState": "Succeeded",
                      "loadBalancingRules": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                        }
                      ]
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/felb",
                    "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                    "name": "felb",
                    "type": "Microsoft.Network/loadBalancers/frontendIPConfigurations",
                    "properties": {
                      "subnet": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb/subnets/subnetlb"
                      },
                      "inboundNatRules": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/inboundNatRules/inrlb"
                        }
                      ],
                      "privateIPAddress": "10.0.1.4",
                      "provisioningState": "Succeeded",
                      "loadBalancingRules": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                        }
                      ],
                      "privateIPAddressVersion": "IPv4",
                      "privateIPAllocationMethod": "Dynamic"
                    }
                  }
                ]
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb2",
              "sku": {
                "name": "Basic"
              },
              "etag": "W/\"00000000-0000-0000-0000-00000000\"",
              "name": "lb2",
              "type": "Microsoft.Network/loadBalancers",
              "location": "westus",
              "properties": {
                "probes": [],
                "resourceGuid": "00000000-0000-0000-0000-00000000",
                "inboundNatPools": [],
                "inboundNatRules": [],
                "provisioningState": "Succeeded",
                "loadBalancingRules": [],
                "backendAddressPools": [],
                "frontendIPConfigurations": []
              }
            }
          ]
        }
      ]
  LoadBalancers.ListAll:
    description: |-
      Gets all the load balancers in a subscription.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancers/listall
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb",
              "sku": {
                "name": "Basic"
              },
              "etag": "W/\"00000000-0000-0000-0000-00000000\"",
              "name": "lb",
              "type": "Microsoft.Network/loadBalancers",
              "location": "westus",
              "properties": {
                "probes": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/probes/prlb",
                    "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                    "name": "prlb",
                    "type": "Microsoft.Network/loadBalancers/probes",
                    "properties": {
                      "port": 80,
                      "protocol": "Http",
                      "requestPath": "healthcheck.aspx",
                      "numberOfProbes": 2,
                      "intervalInSeconds": 15,
                      "provisioningState": "Succeeded",
                      "loadBalancingRules": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                        }
                      ]
                    }
                  }
                ],
                "resourceGuid": "00000000-0000-0000-0000-00000000",
                "inboundNatPools": [],
                "inboundNatRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/inboundNatRules/inrlb",
                    "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                    "name": "inrlb",
                    "type": "Microsoft.Network/loadBalancers/inboundNatRules",
                    "properties": {
                      "protocol": "Tcp",
                      "backendPort": 3389,
                      "frontendPort": 3389,
                      "enableTcpReset": true,
                      "enableFloatingIP": true,
                      "provisioningState": "Succeeded",
                      "idleTimeoutInMinutes": 15,
                      "frontendIPConfiguration": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/felb"
                      }
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "loadBalancingRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb",
                    "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                    "name": "rulelb",
                    "type": "Microsoft.Network/loadBalancers/loadBalancingRules",
                    "properties": {
                      "probe": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/probes/prlb"
                      },
                      "protocol": "Tcp",
                      "backendPort": 80,
                      "frontendPort": 80,
                      "enableTcpReset": true,
                      "enableFloatingIP": true,
                      "loadDistribution": "Default",
                      "provisioningState": "Succeeded",
                      "backendAddressPool": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/belb"
                      },
                      "idleTimeoutInMinutes": 15,
                      "frontendIPConfiguration": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/felb"
                      }
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/belb",
                    "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                    "name": "belb",
                    "type": "Microsoft.Network/loadBalancers/backendAddressPools",
                    "properties": {
                      "provisioningState": "Succeeded",
                      "loadBalancingRules": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                        }
                      ]
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/felb",
                    "etag": "W/\"00000000-0000-0000-0000-00000000\"",
                    "name": "felb",
                    "type": "Microsoft.Network/loadBalancers/frontendIPConfigurations",
                    "properties": {
                      "subnet": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb/subnets/subnetlb"
                      },
                      "inboundNatRules": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/inboundNatRules/inrlb"
                        }
                      ],
                      "privateIPAddress": "10.0.1.4",
                      "provisioningState": "Succeeded",
                      "loadBalancingRules": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                        }
                      ],
                      "privateIPAddressVersion": "IPv4",
                      "privateIPAllocationMethod": "Dynamic"
                    }
                  }
                ]
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/loadBalancers/lb3",
              "sku": {
                "name": "Basic"
              },
              "etag": "W/\"00000000-0000-0000-0000-00000000\"",
              "name": "lb3",
              "type": "Microsoft.Network/loadBalancers",
              "location": "westus",
              "properties": {
                "probes": [],
                "resourceGuid": "00000000-0000-0000-0000-00000000",
                "inboundNatPools": [],
                "inboundNatRules": [],
                "provisioningState": "Succeeded",
                "loadBalancingRules": [],
                "backendAddressPools": [],
                "frontendIPConfigurations": []
              }
            }
          ]
        }
      ]
  LoadBalancers.UpdateTags:
    description: |-
      Updates a load balancer tags.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/load-balancer/loadbalancers/updatetags
    example:
      inputs: [
        {
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb",
          "name": "lb",
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          },
          "type": "Microsoft.Network/loadBalancers",
          "location": "westus",
          "properties": {
            "probes": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/probes/probe-lb",
                "name": "probe-lb",
                "properties": {
                  "port": 80,
                  "protocol": "Http",
                  "requestPath": "healthcheck.aspx",
                  "numberOfProbes": 2,
                  "intervalInSeconds": 15,
                  "provisioningState": "Succeeded",
                  "loadBalancingRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                    }
                  ]
                }
              }
            ],
            "outboundRules": [],
            "inboundNatPools": [],
            "inboundNatRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/inboundNatRules/in-nat-rule",
                "name": "in-nat-rule",
                "properties": {
                  "protocol": "Tcp",
                  "backendPort": 3389,
                  "frontendPort": 3389,
                  "enableFloatingIP": true,
                  "provisioningState": "Succeeded",
                  "idleTimeoutInMinutes": 15,
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/fe-lb"
                  }
                }
              }
            ],
            "provisioningState": "Succeeded",
            "loadBalancingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb",
                "name": "rulelb",
                "properties": {
                  "probe": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/probes/probe-lb"
                  },
                  "protocol": "Tcp",
                  "backendPort": 80,
                  "frontendPort": 80,
                  "enableFloatingIP": true,
                  "loadDistribution": "Default",
                  "provisioningState": "Succeeded",
                  "backendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/be-lb"
                  },
                  "disableOutboundSnat": false,
                  "idleTimeoutInMinutes": 15,
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/fe-lb"
                  }
                }
              }
            ],
            "backendAddressPools": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/backendAddressPools/be-lb",
                "name": "be-lb",
                "properties": {
                  "provisioningState": "Succeeded",
                  "loadBalancingRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                    }
                  ]
                }
              }
            ],
            "frontendIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/fe-lb",
                "name": "fe-lb",
                "properties": {
                  "subnet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb/subnets/subnetlb"
                  },
                  "inboundNatRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/inboundNatRules/in-nat-rule"
                    }
                  ],
                  "privateIPAddress": "10.0.1.4",
                  "provisioningState": "Succeeded",
                  "loadBalancingRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/loadBalancingRules/rulelb"
                    }
                  ],
                  "privateIPAllocationMethod": "Dynamic"
                }
              }
            ]
          }
        }
      ]