Product:
  name: Azure Cognitive Services Face
  versions: [1.0.0]
  package: microsoft.azure.cognitiveservicesface
  description: |-
    CognitiveServicesFace
  link: https://docs.microsoft.com/en-us/azure/cognitive-services/face/
  contentType: json
Operations:
  Face.DetectWithStream:
    description: |-
      Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and attributes.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/face/detectwithstream
    example:
      inputs: [
        "{Image binary in base 64 format}"
      ]
      outputs: [
        [
          {
            "faceId": "c5c24a82-6845-4031-9d5d-978df9175426",
            "faceLandmarks": {
              "noseTip": {
                "x": 437.7,
                "y": 92.4
              },
              "mouthLeft": {
                "x": 417.8,
                "y": 114.4
              },
              "pupilLeft": {
                "x": 412.7,
                "y": 78.4
              },
              "eyeLeftTop": {
                "x": 412.2,
                "y": 76.2
              },
              "mouthRight": {
                "x": 451.3,
                "y": 109.3
              },
              "pupilRight": {
                "x": 446.8,
                "y": 74.2
              },
              "eyeRightTop": {
                "x": 446.4,
                "y": 71.7
              },
              "underLipTop": {
                "x": 436.8,
                "y": 111.4
              },
              "upperLipTop": {
                "x": 437.6,
                "y": 105.9
              },
              "eyeLeftInner": {
                "x": 418.9,
                "y": 78
              },
              "eyeLeftOuter": {
                "x": 406.7,
                "y": 80.6
              },
              "noseRootLeft": {
                "x": 428,
                "y": 77.1
              },
              "eyeLeftBottom": {
                "x": 413,
                "y": 80.1
              },
              "eyeRightInner": {
                "x": 441.5,
                "y": 75
              },
              "eyeRightOuter": {
                "x": 451.7,
                "y": 73.4
              },
              "noseRootRight": {
                "x": 435.8,
                "y": 75.6
              },
              "eyeRightBottom": {
                "x": 447,
                "y": 75.3
              },
              "underLipBottom": {
                "x": 437.3,
                "y": 114.5
              },
              "upperLipBottom": {
                "x": 437.6,
                "y": 108.2
              },
              "noseLeftAlarTop": {
                "x": 428.3,
                "y": 89.7
              },
              "eyebrowLeftInner": {
                "x": 425.4,
                "y": 70.5
              },
              "eyebrowLeftOuter": {
                "x": 397.9,
                "y": 78.5
              },
              "noseRightAlarTop": {
                "x": 442.2,
                "y": 87
              },
              "eyebrowRightInner": {
                "x": 4.8,
                "y": 69.7
              },
              "eyebrowRightOuter": {
                "x": 5.5,
                "y": 68.5
              },
              "noseLeftAlarOutTip": {
                "x": 424.3,
                "y": 96.4
              },
              "noseRightAlarOutTip": {
                "x": 446.6,
                "y": 92.5
              }
            },
            "faceRectangle": {
              "top": 54,
              "left": 394,
              "width": 78,
              "height": 78
            },
            "faceAttributes": {
              "age": 71,
              "blur": {
                "value": 0.51,
                "blurLevel": "Medium"
              },
              "hair": {
                "bald": 0,
                "hairColor": [
                  {
                    "color": "brown",
                    "confidence": 1
                  },
                  {
                    "color": "blond",
                    "confidence": 0.88
                  },
                  {
                    "color": "black",
                    "confidence": 0.48
                  },
                  {
                    "color": "other",
                    "confidence": 0.11
                  },
                  {
                    "color": "gray",
                    "confidence": 0.07
                  },
                  {
                    "color": "red",
                    "confidence": 0.03
                  }
                ],
                "invisible": false
              },
              "noise": {
                "value": 0.12,
                "noiseLevel": "Low"
              },
              "smile": 0.88,
              "gender": "male",
              "makeup": {
                "eyeMakeup": true,
                "lipMakeup": false
              },
              "emotion": {
                "fear": 0.008,
                "anger": 0.575,
                "disgust": 0.006,
                "neutral": 0.013,
                "sadness": 0,
                "contempt": 0,
                "surprise": 0.004,
                "happiness": 0.394
              },
              "glasses": "sunglasses",
              "exposure": {
                "value": 0.55,
                "exposureLevel": "GoodExposure"
              },
              "headPose": {
                "yaw": 3,
                "roll": 2.1,
                "pitch": 1.6
              },
              "occlusion": {
                "eyeOccluded": false,
                "mouthOccluded": false,
                "foreheadOccluded": false
              },
              "facialHair": {
                "beard": 0.1,
                "moustache": 0.8,
                "sideburns": 0.02
              },
              "accessories": [
                {
                  "type": "headWear",
                  "confidence": 0.99
                },
                {
                  "type": "glasses",
                  "confidence": 1
                },
                {
                  "type": "mask",
                  "confidence": 0.87
                }
              ]
            },
            "recognitionModel": "recognition_01"
          }
        ]
      ]
  Face.DetectWithUrl:
    description: |-
      Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and attributes.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/face/detectwithurl
    example:
      inputs: [
        {
          "url": "{Image Url here}"
        }
      ]
      outputs: [
        [
          {
            "faceId": "c5c24a82-6845-4031-9d5d-978df9175426",
            "faceLandmarks": {
              "noseTip": {
                "x": 437.7,
                "y": 92.4
              },
              "mouthLeft": {
                "x": 417.8,
                "y": 114.4
              },
              "pupilLeft": {
                "x": 412.7,
                "y": 78.4
              },
              "eyeLeftTop": {
                "x": 412.2,
                "y": 76.2
              },
              "mouthRight": {
                "x": 451.3,
                "y": 109.3
              },
              "pupilRight": {
                "x": 446.8,
                "y": 74.2
              },
              "eyeRightTop": {
                "x": 446.4,
                "y": 71.7
              },
              "underLipTop": {
                "x": 436.8,
                "y": 111.4
              },
              "upperLipTop": {
                "x": 437.6,
                "y": 105.9
              },
              "eyeLeftInner": {
                "x": 418.9,
                "y": 78
              },
              "eyeLeftOuter": {
                "x": 406.7,
                "y": 80.6
              },
              "noseRootLeft": {
                "x": 428,
                "y": 77.1
              },
              "eyeLeftBottom": {
                "x": 413,
                "y": 80.1
              },
              "eyeRightInner": {
                "x": 441.5,
                "y": 75
              },
              "eyeRightOuter": {
                "x": 451.7,
                "y": 73.4
              },
              "noseRootRight": {
                "x": 435.8,
                "y": 75.6
              },
              "eyeRightBottom": {
                "x": 447,
                "y": 75.3
              },
              "underLipBottom": {
                "x": 437.3,
                "y": 114.5
              },
              "upperLipBottom": {
                "x": 437.6,
                "y": 108.2
              },
              "noseLeftAlarTop": {
                "x": 428.3,
                "y": 89.7
              },
              "eyebrowLeftInner": {
                "x": 425.4,
                "y": 70.5
              },
              "eyebrowLeftOuter": {
                "x": 397.9,
                "y": 78.5
              },
              "noseRightAlarTop": {
                "x": 442.2,
                "y": 87
              },
              "eyebrowRightInner": {
                "x": 4.8,
                "y": 69.7
              },
              "eyebrowRightOuter": {
                "x": 5.5,
                "y": 68.5
              },
              "noseLeftAlarOutTip": {
                "x": 424.3,
                "y": 96.4
              },
              "noseRightAlarOutTip": {
                "x": 446.6,
                "y": 92.5
              }
            },
            "faceRectangle": {
              "top": 54,
              "left": 394,
              "width": 78,
              "height": 78
            },
            "faceAttributes": {
              "age": 71,
              "blur": {
                "value": 0.51,
                "blurLevel": "Medium"
              },
              "hair": {
                "bald": 0,
                "hairColor": [
                  {
                    "color": "brown",
                    "confidence": 1
                  },
                  {
                    "color": "blond",
                    "confidence": 0.88
                  },
                  {
                    "color": "black",
                    "confidence": 0.48
                  },
                  {
                    "color": "other",
                    "confidence": 0.11
                  },
                  {
                    "color": "gray",
                    "confidence": 0.07
                  },
                  {
                    "color": "red",
                    "confidence": 0.03
                  }
                ],
                "invisible": false
              },
              "noise": {
                "value": 0.12,
                "noiseLevel": "Low"
              },
              "smile": 0.88,
              "gender": "male",
              "makeup": {
                "eyeMakeup": true,
                "lipMakeup": false
              },
              "emotion": {
                "fear": 0.008,
                "anger": 0.575,
                "disgust": 0.006,
                "neutral": 0.013,
                "sadness": 0,
                "contempt": 0,
                "surprise": 0.004,
                "happiness": 0.394
              },
              "glasses": "sunglasses",
              "exposure": {
                "value": 0.55,
                "exposureLevel": "GoodExposure"
              },
              "headPose": {
                "yaw": 3,
                "roll": 2.1,
                "pitch": 1.6
              },
              "occlusion": {
                "eyeOccluded": false,
                "mouthOccluded": false,
                "foreheadOccluded": false
              },
              "facialHair": {
                "beard": 0.1,
                "moustache": 0.8,
                "sideburns": 0.02
              },
              "accessories": [
                {
                  "type": "headWear",
                  "confidence": 0.99
                },
                {
                  "type": "glasses",
                  "confidence": 1
                },
                {
                  "type": "mask",
                  "confidence": 0.87
                }
              ]
            },
            "recognitionModel": "recognition_01"
          }
        ]
      ]
  Face.FindSimilar:
    description: |-
      Given query face's faceId, to search the similar-looking faces from a faceId array, a face list or a large face list. faceId array contains the faces created by Face - Detect With Url or Face - Detect With Stream, which will expire at the time specified by faceIdTimeToLive after creation. A `faceListId` is created by FaceList - Create containing persistedFaceIds that will not expire. And a `largeFaceListId` is created by LargeFaceList - Create containing persistedFaceIds that will also not expire. Depending on the input the returned similar faces list contains faceIds or persistedFaceIds ranked by similarity.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/face/findsimilar
    example:
      inputs: [
        {
          "mode": "matchPerson",
          "faceId": "c5c24a82-6845-4031-9d5d-978df9175426",
          "largeFaceListId": "sample_list",
          "maxNumOfCandidatesReturned": 1
        }
      ]
      outputs: [
        [
          {
            "confidence": 0.82,
            "persistedFaceId": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9"
          }
        ]
      ]
  Face.Group:
    description: |-
      Divide candidate faces into groups based on face similarity.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/face/group
    example:
      inputs: [
        {
          "faceIds": [
            "c5c24a82-6845-4031-9d5d-978df9175426",
            "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
            "65d083d4-9447-47d1-af30-b626144bf0fb",
            "fce92aed-d578-4d2e-8114-068f8af4492e",
            "30ea1073-cc9e-4652-b1e3-d08fb7b95315",
            "be386ab3-af91-4104-9e6d-4dae4c9fddb7",
            "fbd2a038-dbff-452c-8e79-2ee81b1aa84e",
            "b64d5e15-8257-4af2-b20a-5a750f8940e7"
          ]
        }
      ]
      outputs: [
        {
          "groups": [
            [
              "c5c24a82-6845-4031-9d5d-978df9175426",
              "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
              "fce92aed-d578-4d2e-8114-068f8af4492e",
              "b64d5e15-8257-4af2-b20a-5a750f8940e7"
            ],
            [
              "65d083d4-9447-47d1-af30-b626144bf0fb",
              "30ea1073-cc9e-4652-b1e3-d08fb7b95315"
            ]
          ],
          "messyGroup": [
            "be386ab3-af91-4104-9e6d-4dae4c9fddb7"
          ]
        }
      ]
  Face.Identify:
    description: |-
      1-to-many identification to find the closest matches of the specific query person face from a person group or large person group.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/face/identify
    example:
      inputs: [
        {
          "faceIds": [
            "c5c24a82-6845-4031-9d5d-978df9175426",
            "65d083d4-9447-47d1-af30-b626144bf0fb"
          ],
          "largePersonGroupId": "sample_group",
          "confidenceThreshold": 0.5,
          "maxNumOfCandidatesReturned": 1
        }
      ]
      outputs: [
        [
          {
            "faceId": "c5c24a82-6845-4031-9d5d-978df9175426",
            "candidates": [
              {
                "personId": "25985303-c537-4467-b41d-bdb45cd95ca1",
                "confidence": 0.92
              }
            ]
          },
          {
            "faceId": "65d083d4-9447-47d1-af30-b626144bf0fb",
            "candidates": [
              {
                "personId": "2ae4935b-9659-44c3-977f-61fac20d0538",
                "confidence": 0.89
              }
            ]
          }
        ]
      ]
  FaceList.AddFaceFromStream:
    description: |-
      Add a face to a specified face list, up to 1,000 faces.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/facelist/addfacefromstream
    example:
      inputs: [
        "{Image stream in base 64 encoded format}"
      ]
      outputs: [
        {
          "persistedFaceId": "B8D802CF-DD8F-4E61-B15C-9E6C5844CCBA"
        }
      ]
  FaceList.AddFaceFromUrl:
    description: |-
      Add a face to a specified face list, up to 1,000 faces.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/facelist/addfacefromurl
    example:
      inputs: [
        {
          "url": "{Image Url here}"
        }
      ]
      outputs: [
        {
          "persistedFaceId": "B8D802CF-DD8F-4E61-B15C-9E6C5844CCBA"
        }
      ]
  FaceList.Create:
    description: |-
      Create an empty face list with user-specified faceListId, name, an optional userData and recognitionModel. Up to 64 face lists are allowed in one subscription.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/facelist/create
    example:
      inputs: [
        {
          "name": "sample_list",
          "userData": "User-provided data attached to the face list.",
          "recognitionModel": "recognition_01"
        }
      ]
      outputs: [
        {}
      ]
  FaceList.Delete:
    description: |-
      Delete a specified face list.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/facelist/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  FaceList.DeleteFace:
    description: |-
      Delete a face from a face list by specified faceListId and persistedFaceId.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/facelist/deleteface
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  FaceList.Get:
    description: |-
      Retrieve a face list’s faceListId, name, userData, recognitionModel and faces in the face list.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/facelist/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "name": "list1",
          "userData": "User-provided data attached to the face list.",
          "faceListId": "sample_list",
          "persistedFaces": [
            {
              "userData": "User-provided data attached to the face.",
              "persistedFaceId": "B8D802CF-DD8F-4E61-B15C-9E6C5844CCBD"
            }
          ],
          "recognitionModel": "recognition_01"
        }
      ]
  FaceList.List:
    description: |-
      List face lists’ faceListId, name, userData and recognitionModel. 
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/facelist/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "name": "list1",
            "userData": "User-provided data attached to the face list.",
            "faceListId": "sample_face_list",
            "recognitionModel": "recognition_01"
          }
        ]
      ]
  FaceList.Update:
    description: |-
      Update information of a face list.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/facelist/update
    example:
      inputs: [
        {
          "name": "list1",
          "userData": "User-provided data attached to the face list."
        }
      ]
      outputs: [
        {}
      ]
  Face.VerifyFaceToFace:
    description: |-
      Verify whether two faces belong to a same person or whether one face belongs to a person.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/face/verifyfacetoface
    example:
      inputs: [
        {
          "faceId1": "c5c24a82-6845-4031-9d5d-978df9175426",
          "faceId2": "815df99c-598f-4926-930a-a734b3fd651c"
        }
      ]
      outputs: [
        {
          "confidence": 0.9,
          "isIdentical": true
        }
      ]
  Face.VerifyFaceToPerson:
    description: |-
      Verify whether two faces belong to a same person. Compares a face Id with a Person Id
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/face/verifyfacetoperson
    example:
      inputs: [
        {
          "faceId": "c5c24a82-6845-4031-9d5d-978df9175426",
          "personId": "815df99c-598f-4926-930a-a734b3fd651c",
          "largePersonGroupId": "sample_group"
        }
      ]
      outputs: [
        {
          "confidence": 0.9,
          "isIdentical": true
        }
      ]
  LargeFaceList.AddFaceFromStream:
    description: |-
      Add a face to a specified large face list, up to 1,000,000 faces.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largefacelist/addfacefromstream
    example:
      inputs: [
        "{Image stream in base 64 encoded format}"
      ]
      outputs: [
        {
          "persistedFaceId": "B8D802CF-DD8F-4E61-B15C-9E6C5844CCBA"
        }
      ]
  LargeFaceList.AddFaceFromUrl:
    description: |-
      Add a face to a specified large face list, up to 1,000,000 faces.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largefacelist/addfacefromurl
    example:
      inputs: [
        {
          "url": "{Image Url here}"
        }
      ]
      outputs: [
        {
          "persistedFaceId": "B8D802CF-DD8F-4E61-B15C-9E6C5844CCBA"
        }
      ]
  LargeFaceList.Create:
    description: |-
      Create an empty large face list with user-specified largeFaceListId, name, an optional userData and recognitionModel.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largefacelist/create
    example:
      inputs: [
        {
          "name": "large-face-list-name",
          "userData": "User-provided data attached to the large face list.",
          "recognitionModel": "recognition_01"
        }
      ]
      outputs: [
        {}
      ]
  LargeFaceList.Delete:
    description: |-
      Delete a specified large face list.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largefacelist/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  LargeFaceList.DeleteFace:
    description: |-
      Delete a face from a large face list by specified largeFaceListId and persistedFaceId.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largefacelist/deleteface
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  LargeFaceList.Get:
    description: |-
      Retrieve a large face list’s largeFaceListId, name, userData and recognitionModel.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largefacelist/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "name": "large-face-list-name",
          "userData": "User-provided data attached to the large face list.",
          "largeFaceListId": "f92f6f1b-3258-4444-8fa2-c2df505cc7ac",
          "recognitionModel": "recognition_01"
        }
      ]
  LargeFaceList.GetFace:
    description: |-
      Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largefacelist/getface
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "userData": "User-provided data attached to the face.",
          "persistedFaceId": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9"
        }
      ]
  LargeFaceList.GetTrainingStatus:
    description: |-
      Retrieve the training status of a large face list (completed or ongoing).
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largefacelist/gettrainingstatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "status": "succeeded",
          "message": null,
          "createdDateTime": "2017-12-21T12:57:27.00Z",
          "lastActionDateTime": "2017-12-21T12:57:30.00Z",
          "lastSuccessfulTrainingDateTime": "2017-12-21T12:57:30.00Z"
        }
      ]
  LargeFaceList.List:
    description: |-
      List large face lists’ information of largeFaceListId, name, userData and recognitionModel. 
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largefacelist/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "name": "large-face-list-name1",
            "userData": "User-provided data attached to the large face list.",
            "largeFaceListId": "f92f6f1b-3258-4444-8fa2-c2df505cc7ac",
            "recognitionModel": "recognition_01"
          },
          {
            "name": "large-face-list-name2",
            "userData": "User-provided data attached to the large face list.",
            "largeFaceListId": "c76f7f13-0ed3-4d00-8a3e-2ad3d78f6c37",
            "recognitionModel": "recognition_01"
          }
        ]
      ]
  LargeFaceList.ListFaces:
    description: |-
      List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largefacelist/listfaces
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "userData": "User-provided data attached to the large face list face.",
            "persistedFaceId": "8a887ac2-53fd-4f55-9024-1ec77eecd08e"
          },
          {
            "userData": "User-provided data attached to the large face list face.",
            "persistedFaceId": "f92f6f1b-3258-4444-8fa2-c2df505cc7ac"
          }
        ]
      ]
  LargeFaceList.Train:
    description: |-
      Queue a large face list training task, the training task may not be started immediately.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largefacelist/train
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  LargeFaceList.Update:
    description: |-
      Update information of a large face list.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largefacelist/update
    example:
      inputs: [
        {
          "name": "large-face-list-name",
          "userData": "User-provided data attached to the large face list."
        }
      ]
      outputs: [
        {}
      ]
  LargeFaceList.UpdateFace:
    description: |-
      Update a persisted face's userData field.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largefacelist/updateface
    example:
      inputs: [
        {
          "userData": "User-provided data attached to the face."
        }
      ]
      outputs: [
        {}
      ]
  LargePersonGroup.Create:
    description: |-
      Create a new large person group with user-specified largePersonGroupId, name, an optional userData and recognitionModel.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroup/create
    example:
      inputs: [
        {
          "name": "large-person-group-name",
          "userData": "User-provided data attached to the large person group.",
          "recognitionModel": "recognition_01"
        }
      ]
      outputs: [
        {}
      ]
  LargePersonGroup.Delete:
    description: |-
      Delete an existing large person group. Persisted face features of all people in the large person group will also be deleted.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroup/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  LargePersonGroup.Get:
    description: |-
      Retrieve the information of a large person group, including its name, userData and recognitionModel. This API returns large person group information only, use LargePersonGroup Person - List instead to retrieve person information under the large person group.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroup/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "name": "large-person-group-name",
          "userData": "User-provided data attached to the large person group.",
          "recognitionModel": "recognition_01",
          "largePersonGroupId": "d408cb4e-2f5f-4b4d-b99e-f0b72870e5b5"
        }
      ]
  LargePersonGroup.GetTrainingStatus:
    description: |-
      Retrieve the training status of a large person group (completed or ongoing).
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroup/gettrainingstatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "status": "succeeded",
          "message": null,
          "createdDateTime": "2017-12-21T12:57:27.00Z",
          "lastActionDateTime": "2017-12-21T12:57:30.00Z",
          "lastSuccessfulTrainingDateTime": "2017-12-21T12:57:30.00Z"
        }
      ]
  LargePersonGroup.List:
    description: |-
      List all existing large person groups’ largePersonGroupId, name, userData and recognitionModel.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroup/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "name": "large-person-group-name1",
            "userData": "User-provided data attached to the large person group.",
            "recognitionModel": "recognition_01",
            "largePersonGroupId": "f92f6f1b-3258-4444-8fa2-c2df505cc7ac"
          },
          {
            "name": "large-person-group-name2",
            "userData": "User-provided data attached to the large person group.",
            "recognitionModel": "recognition_01",
            "largePersonGroupId": "c76f7f13-0ed3-4d00-8a3e-2ad3d78f6c37"
          }
        ]
      ]
  LargePersonGroupPerson.AddFaceFromStream:
    description: |-
      Add a face to a person into a large person group for face identification or verification. To deal with an image contains multiple faces, input face can be specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face. No image will be stored. Only the extracted face feature will be stored on server until LargePersonGroup PersonFace - Delete, LargePersonGroup Person - Delete or LargePersonGroup - Delete is called.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroupperson/addfacefromstream
    example:
      inputs: [
        "{Image stream in base 64 encoded format}"
      ]
      outputs: [
        {
          "persistedFaceId": "6e04c175-219e-42a2-9d26-0e7b790e1ef4"
        }
      ]
  LargePersonGroupPerson.AddFaceFromUrl:
    description: |-
      Add a face to a person into a large person group for face identification or verification. To deal with an image contains multiple faces, input face can be specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face. No image will be stored. Only the extracted face feature will be stored on server until LargePersonGroup PersonFace - Delete, LargePersonGroup Person - Delete or LargePersonGroup - Delete is called.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroupperson/addfacefromurl
    example:
      inputs: [
        {
          "url": "{Image Url here}"
        }
      ]
      outputs: [
        {
          "persistedFaceId": "6e04c175-219e-42a2-9d26-0e7b790e1ef4"
        }
      ]
  LargePersonGroupPerson.Create:
    description: |-
      Create a new person in a specified large person group.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroupperson/create
    example:
      inputs: [
        {
          "name": "mike",
          "userData": "{additional data associated with mike}"
        }
      ]
      outputs: [
        {
          "personId": "4caa25ee-3bc6-4e88-adf8-12455ce7aab0"
        }
      ]
  LargePersonGroupPerson.Delete:
    description: |-
      Delete an existing person from a large person group. The persistedFaceId, userData, person name and face feature in the person entry will all be deleted.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroupperson/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  LargePersonGroupPerson.DeleteFace:
    description: |-
      Delete a face from a person in a large person group by specified largePersonGroupId, personId and persistedFaceId.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroupperson/deleteface
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  LargePersonGroupPerson.Get:
    description: |-
      Retrieve a person's name and userData, and the persisted faceIds representing the registered person face feature.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroupperson/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "name": "person-name",
          "personId": "25985303-c537-4467-b41d-bdb45cd95ca1",
          "userData": "User-provided data attached to the person.",
          "persistedFaceIds": [
            "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
            "fce92aed-d578-4d2e-8114-068f8af4492e",
            "b64d5e15-8257-4af2-b20a-5a750f8940e7"
          ]
        }
      ]
  LargePersonGroupPerson.GetFace:
    description: |-
      Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroupperson/getface
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "userData": "User-provided data attached to the person face.",
          "persistedFaceId": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9"
        }
      ]
  LargePersonGroupPerson.List:
    description: |-
      List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroupperson/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "name": "person-name1",
            "personId": "25985303-c537-4467-b41d-bdb45cd95ca1",
            "userData": "User-provided data attached to the person.",
            "persistedFaceIds": [
              "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
              "fce92aed-d578-4d2e-8114-068f8af4492e",
              "b64d5e15-8257-4af2-b20a-5a750f8940e7"
            ]
          },
          {
            "name": "person-name2",
            "personId": "2ae4935b-9659-44c3-977f-61fac20d0538",
            "userData": "User-provided data attached to the person.",
            "persistedFaceIds": [
              "30ea1073-cc9e-4652-b1e3-d08fb7b95315",
              "fbd2a038-dbff-452c-8e79-2ee81b1aa84e"
            ]
          }
        ]
      ]
  LargePersonGroupPerson.Update:
    description: |-
      Update name or userData of a person.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroupperson/update
    example:
      inputs: [
        {
          "name": "mike",
          "userData": "{additional data associated with mike}"
        }
      ]
      outputs: [
        {}
      ]
  LargePersonGroupPerson.UpdateFace:
    description: |-
      Update a person persisted face's userData field.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroupperson/updateface
    example:
      inputs: [
        {
          "userData": "User-provided data attached to the face."
        }
      ]
      outputs: [
        {}
      ]
  LargePersonGroup.Train:
    description: |-
      Queue a large person group training task, the training task may not be started immediately.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroup/train
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  LargePersonGroup.Update:
    description: |-
      Update an existing large person group's display name and userData. The properties which does not appear in request body will not be updated.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/largepersongroup/update
    example:
      inputs: [
        {
          "name": "group1",
          "userData": "user-provided data attached to the large person group."
        }
      ]
      outputs: [
        {}
      ]
  PersonGroup.Create:
    description: |-
      Create a new person group with specified personGroupId, name, user-provided userData and recognitionModel.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroup/create
    example:
      inputs: [
        {
          "name": "group1",
          "userData": "user-provided data attached to the person group.",
          "recognitionModel": "recognition_01"
        }
      ]
      outputs: [
        {}
      ]
  PersonGroup.Delete:
    description: |-
      Delete an existing person group. Persisted face features of all people in the person group will also be deleted.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroup/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  PersonGroup.Get:
    description: |-
      Retrieve person group name, userData and recognitionModel. To get person information under this personGroup, use PersonGroup Person - List.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroup/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "name": "group1",
          "userData": "User-provided data attached to the person group.",
          "personGroupId": "sample_group",
          "recognitionModel": "recognition_01"
        }
      ]
  PersonGroup.GetTrainingStatus:
    description: |-
      Retrieve the training status of a person group (completed or ongoing).
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroup/gettrainingstatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "status": "succeeded",
          "message": null,
          "createdDateTime": "2017-12-21T12:57:27.00Z",
          "lastActionDateTime": "2017-12-21T12:57:30.00Z"
        }
      ]
  PersonGroup.List:
    description: |-
      List person groups’ personGroupId, name, userData and recognitionModel.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroup/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "name": "group1",
            "userData": "User-provided data attached to the person group.",
            "personGroupId": "sample_group",
            "recognitionModel": "recognition_01"
          },
          {
            "name": "group2",
            "userData": "User-provided data attached to the person group.",
            "personGroupId": "sample_group2",
            "recognitionModel": "recognition_01"
          }
        ]
      ]
  PersonGroupPerson.AddFaceFromStream:
    description: |-
      Add a face to a person into a person group for face identification or verification. To deal with an image contains multiple faces, input face can be specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face. No image will be stored. Only the extracted face feature will be stored on server until PersonGroup PersonFace - Delete, PersonGroup Person - Delete or PersonGroup - Delete is called.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroupperson/addfacefromstream
    example:
      inputs: [
        "{Image stream in base 64 encoded format}"
      ]
      outputs: [
        {
          "persistedFaceId": "6e04c175-219e-42a2-9d26-0e7b790e1ef4"
        }
      ]
  PersonGroupPerson.AddFaceFromUrl:
    description: |-
      Add a face to a person into a person group for face identification or verification. To deal with an image contains multiple faces, input face can be specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face. No image will be stored. Only the extracted face feature will be stored on server until PersonGroup PersonFace - Delete, PersonGroup Person - Delete or PersonGroup - Delete is called.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroupperson/addfacefromurl
    example:
      inputs: [
        {
          "url": "{Image Url here}"
        }
      ]
      outputs: [
        {
          "persistedFaceId": "6e04c175-219e-42a2-9d26-0e7b790e1ef4"
        }
      ]
  PersonGroupPerson.Create:
    description: |-
      Create a new person in a specified person group.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroupperson/create
    example:
      inputs: [
        {
          "name": "mike",
          "userData": "{additional data associated with mike}"
        }
      ]
      outputs: [
        {
          "personId": "4caa25ee-3bc6-4e88-adf8-12455ce7aab0"
        }
      ]
  PersonGroupPerson.Delete:
    description: |-
      Delete an existing person from a person group. The persistedFaceId, userData, person name and face feature in the person entry will all be deleted.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroupperson/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  PersonGroupPerson.DeleteFace:
    description: |-
      Delete a face from a person in a person group by specified personGroupId, personId and persistedFaceId.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroupperson/deleteface
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  PersonGroupPerson.Get:
    description: |-
      Retrieve a person's information, including registered persisted faces, name and userData.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroupperson/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "name": "Ryan",
          "personId": "25985303-c537-4467-b41d-bdb45cd95ca1",
          "userData": "User-provided data attached to the person.",
          "persistedFaceIds": [
            "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
            "fce92aed-d578-4d2e-8114-068f8af4492e",
            "b64d5e15-8257-4af2-b20a-5a750f8940e7"
          ]
        }
      ]
  PersonGroupPerson.GetFace:
    description: |-
      Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroupperson/getface
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "userData": "User-provided data attached to the person face.",
          "persistedFaceId": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9"
        }
      ]
  PersonGroupPerson.List:
    description: |-
      List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroupperson/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "name": "Ryan",
            "personId": "25985303-c537-4467-b41d-bdb45cd95ca1",
            "userData": "User-provided data attached to the person",
            "persistedFaceIds": [
              "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
              "fce92aed-d578-4d2e-8114-068f8af4492e",
              "b64d5e15-8257-4af2-b20a-5a750f8940e7"
            ]
          },
          {
            "name": "David",
            "personId": "2ae4935b-9659-44c3-977f-61fac20d0538",
            "userData": "User-provided data attached to the person",
            "persistedFaceIds": [
              "30ea1073-cc9e-4652-b1e3-d08fb7b95315",
              "fbd2a038-dbff-452c-8e79-2ee81b1aa84e"
            ]
          }
        ]
      ]
  PersonGroupPerson.Update:
    description: |-
      Update name or userData of a person.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroupperson/update
    example:
      inputs: [
        {
          "name": "mike",
          "userData": "{additional data associated with mike}"
        }
      ]
      outputs: [
        {}
      ]
  PersonGroupPerson.UpdateFace:
    description: |-
      Add a face to a person into a person group for face identification or verification. To deal with an image contains multiple faces, input face can be specified as an image with a targetFace rectangle. It returns a persistedFaceId representing the added face. No image will be stored. Only the extracted face feature will be stored on server until PersonGroup PersonFace - Delete, PersonGroup Person - Delete or PersonGroup - Delete is called.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroupperson/updateface
    example:
      inputs: [
        {
          "userData": "User-provided data attached to the face."
        }
      ]
      outputs: [
        {}
      ]
  PersonGroup.Train:
    description: |-
      Queue a person group training task, the training task may not be started immediately.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroup/train
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  PersonGroup.Update:
    description: |-
      Update an existing person group's display name and userData. The properties which does not appear in request body will not be updated.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/persongroup/update
    example:
      inputs: [
        {
          "name": "group1",
          "userData": "user-provided data attached to the person group."
        }
      ]
      outputs: [
        {}
      ]
  Snapshot.Apply:
    description: |-
      Submit an operation to apply a snapshot to current subscription. For each snapshot, only subscriptions included in the applyScope of Snapshot - Take can apply it.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/snapshot/apply
    example:
      inputs: [
        {
          "mode": "CreateNew",
          "objectId": "target-face-list-id"
        }
      ]
      outputs: [
        {}
      ]
  Snapshot.Delete:
    description: |-
      Delete an existing snapshot according to the snapshotId. All object data and information in the snapshot will also be deleted. Only the source subscription who took the snapshot can delete the snapshot. If the user does not delete a snapshot with this API, the snapshot will still be automatically deleted in 48 hours after creation.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/snapshot/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  Snapshot.Get:
    description: |-
      Retrieve information about a snapshot. Snapshot is only accessible to the source subscription who took it, and target subscriptions included in the applyScope in Snapshot - Take.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/snapshot/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "e58b3f08-1e8b-4165-81df-aa9858f233dc",
          "type": "FaceList",
          "account": "/subscriptions/f9b96b36-1f5e-4021-8959-51527e26e6d3/resourceGroups/TestRG/providers/Microsoft.CognitiveServices/accounts/FaceTest01",
          "userData": "User-provided data attached to the snapshot.",
          "applyScope": [
            "35230F59-AA9C-45E0-AB5E-C859BF1A5429",
            "64084E07-9B7F-4A98-BEA4-9986D3A1EDEB"
          ],
          "createdTime": "2018-12-25T11:41:02.2331413Z",
          "lastUpdateTime": "2018-12-25T11:51:27.8705696Z"
        }
      ]
  Snapshot.GetOperationStatus:
    description: |-
      Retrieve the status of a take/apply snapshot operation.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/snapshot/getoperationstatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "status": "succeeded",
          "message": null,
          "createdTime": "2018-12-25T11:41:02.2331413Z",
          "lastActionTime": "2018-12-25T11:51:27.8705696Z",
          "resourceLocation": "/snapshots/e58b3f08-1e8b-4165-81df-aa9858f233dc"
        }
      ]
  Snapshot.List:
    description: |-
      List all accessible snapshots with related information, including snapshots that were taken by the user, or snapshots to be applied to the user (subscription id was included in the applyScope in Snapshot - Take).
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/snapshot/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          {
            "id": "e58b3f08-1e8b-4165-81df-aa9858f233dc",
            "type": "FaceList",
            "account": "/subscriptions/f9b96b36-1f5e-4021-8959-51527e26e6d3/resourceGroups/TestRG/providers/Microsoft.CognitiveServices/accounts/FaceTest01",
            "userData": "User-provided data attached to the snapshot1.",
            "applyScope": [
              "35230F59-AA9C-45E0-AB5E-C859BF1A5429",
              "64084E07-9B7F-4A98-BEA4-9986D3A1EDEB"
            ],
            "createdTime": "2018-12-25T11:41:02.2331413Z",
            "lastUpdateTime": "2018-12-25T11:51:27.8705696Z"
          },
          {
            "id": "a61e61e4-c3d1-4d33-8ae8-676e6104757d",
            "type": "FaceList",
            "account": "/subscriptions/6622996e-0149-4b22-9703-4216dc948d52/resourceGroups/TestRG/providers/Microsoft.CognitiveServices/accounts/FaceTest01",
            "userData": "User-provided data attached to the snapshot2.",
            "applyScope": [
              "64084E07-9B7F-4A98-BEA4-9986D3A1EDEB"
            ],
            "createdTime": "2018-12-29T17:09:32.3298483Z",
            "lastUpdateTime": "2018-12-29T17:14:34.5645877Z"
          }
        ]
      ]
  Snapshot.Take:
    description: |-
      Submit an operation to take a snapshot of face list, large face list, person group or large person group, with user-specified snapshot type, source object id, apply scope and an optional user data.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/snapshot/take
    example:
      inputs: [
        {
          "type": "FaceList",
          "objectId": "source-face-list-id",
          "userData": "User-provided data attached to the snapshot.",
          "applyScope": [
            "35230F59-AA9C-45E0-AB5E-C859BF1A5429",
            "64084E07-9B7F-4A98-BEA4-9986D3A1EDEB"
          ]
        }
      ]
      outputs: [
        {}
      ]
  Snapshot.Update:
    description: |-
      Update the information of a snapshot. Only the source subscription who took the snapshot can update the snapshot.
    versions:
      from: 1.0.0
    link: https://docs.microsoft.com/en-us/rest/api/faceapi/snapshot/update
    example:
      inputs: [
        {
          "userData": "User-provided data attached to the snapshot.",
          "applyScope": [
            "64084E07-9B7F-4A98-BEA4-9986D3A1EDEB"
          ]
        }
      ]
      outputs: [
        {}
      ]