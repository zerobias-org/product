Product:
  name: Azure SignalR Service
  versions: [2020.5.1]
  package: microsoft.azure.signalrservice
  description: |-
    SignalRService
  link: https://docs.microsoft.com/en-us/azure/azure-signalr/
  contentType: json
Operations:
  SignalR.CheckNameAvailability:
    description: |-
      Checks that the SignalR name is valid and is not already in use.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/signalr/checknameavailability
    example:
      inputs: [
        {
          "name": "my-signalr-service",
          "type": "Microsoft.SignalRService/SignalR"
        }
      ]
      outputs: [
        {
          "reason": "AlreadyExists",
          "message": "The leaf is already used by other people",
          "nameAvailable": false
        }
      ]
  SignalR.CreateOrUpdate:
    description: |-
      Create a new SignalR service and update an exiting SignalR service.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/signalr/createorupdate
    example:
      inputs: [
        {
          "sku": {
            "name": "Standard_S1",
            "tier": "Standard",
            "capacity": 1
          },
          "kind": "SignalR",
          "tags": {
            "key1": "value1"
          },
          "location": "eastus",
          "properties": {
            "cors": {
              "allowedOrigins": [
                "https://foo.com",
                "https://bar.com"
              ]
            },
            "features": [
              {
                "flag": "ServiceMode",
                "value": "Serverless",
                "properties": {}
              },
              {
                "flag": "EnableConnectivityLogs",
                "value": "True",
                "properties": {}
              },
              {
                "flag": "EnableMessagingLogs",
                "value": "False",
                "properties": {}
              }
            ],
            "upstream": {
              "templates": [
                {
                  "hubPattern": "*",
                  "urlTemplate": "https://example.com/chat/api/connect",
                  "eventPattern": "connect,disconnect",
                  "categoryPattern": "*"
                }
              ]
            },
            "networkACLs": {
              "defaultAction": "Deny",
              "publicNetwork": {
                "deny": null,
                "allow": [
                  "ClientConnection"
                ]
              },
              "privateEndpoints": [
                {
                  "deny": null,
                  "name": "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                  "allow": [
                    "ServerConnection"
                  ]
                }
              ]
            }
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService",
          "sku": {
            "name": "Standard_S1",
            "size": "S1",
            "tier": "Standard",
            "capacity": 1
          },
          "kind": "SignalR",
          "name": "mySignalRService",
          "tags": {
            "key1": "value1"
          },
          "type": "Microsoft.SignalRService/SignalR",
          "location": "eastus",
          "properties": {
            "cors": {
              "allowedOrigins": [
                "https://foo.com",
                "https://bar.com"
              ]
            },
            "version": "1.0",
            "features": [
              {
                "flag": "ServiceMode",
                "value": "Serverless",
                "properties": {}
              },
              {
                "flag": "EnableConnectivityLogs",
                "value": "True",
                "properties": {}
              },
              {
                "flag": "EnableMessagingLogs",
                "value": "False",
                "properties": {}
              }
            ],
            "hostName": "mysignalrservice.service.signalr.net",
            "upstream": {
              "templates": [
                {
                  "hubPattern": null,
                  "urlTemplate": "http://foo.com",
                  "eventPattern": null,
                  "categoryPattern": null
                }
              ]
            },
            "externalIP": "10.0.0.1",
            "publicPort": 443,
            "serverPort": 443,
            "networkACLs": {
              "defaultAction": "Deny",
              "publicNetwork": {
                "deny": null,
                "allow": [
                  "ClientConnection"
                ]
              },
              "privateEndpoints": [
                {
                  "deny": null,
                  "name": "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                  "allow": [
                    "ServerConnection"
                  ]
                }
              ]
            },
            "hostNamePrefix": "mysignalrservice",
            "provisioningState": "Succeeded",
            "privateEndpointConnections": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService/privateEndpointConnections/mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                "name": "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                "properties": {
                  "privateEndpoint": {
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint"
                  },
                  "provisioningState": "Succeeded",
                  "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "description": null,
                    "actionsRequired": "None"
                  }
                }
              }
            ]
          }
        }
      ]
  SignalR.Delete:
    description: |-
      Operation to delete a SignalR service.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/signalr/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  SignalR.Get:
    description: |-
      Get the SignalR service and its properties.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/signalr/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService",
          "sku": {
            "name": "Standard_S1",
            "size": "S1",
            "tier": "Standard",
            "capacity": 1
          },
          "kind": "SignalR",
          "name": "mySignalRService",
          "tags": {
            "key1": "value1"
          },
          "type": "Microsoft.SignalRService/SignalR",
          "location": "eastus",
          "properties": {
            "cors": {
              "allowedOrigins": [
                "https://foo.com",
                "https://bar.com"
              ]
            },
            "version": "1.0",
            "features": [
              {
                "flag": "ServiceMode",
                "value": "Serverless",
                "properties": {}
              },
              {
                "flag": "EnableConnectivityLogs",
                "value": "True",
                "properties": {}
              },
              {
                "flag": "EnableMessagingLogs",
                "value": "False",
                "properties": {}
              }
            ],
            "hostName": "mysignalrservice.service.signalr.net",
            "upstream": {
              "templates": [
                {
                  "hubPattern": null,
                  "urlTemplate": "http://foo.com",
                  "eventPattern": null,
                  "categoryPattern": null
                }
              ]
            },
            "externalIP": "10.0.0.1",
            "publicPort": 443,
            "serverPort": 443,
            "networkACLs": {
              "defaultAction": "Deny",
              "publicNetwork": {
                "deny": null,
                "allow": [
                  "ClientConnection"
                ]
              },
              "privateEndpoints": [
                {
                  "deny": null,
                  "name": "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                  "allow": [
                    "ServerConnection"
                  ]
                }
              ]
            },
            "hostNamePrefix": "mysignalrservice",
            "provisioningState": "Succeeded",
            "privateEndpointConnections": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService/privateEndpointConnections/mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                "name": "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                "properties": {
                  "privateEndpoint": {
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint"
                  },
                  "provisioningState": "Succeeded",
                  "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "description": null,
                    "actionsRequired": "None"
                  }
                }
              }
            ]
          }
        }
      ]
  SignalR.ListByResourceGroup:
    description: |-
      Handles requests to list all resources in a resource group.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/signalr/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService",
              "sku": {
                "name": "Standard_S1",
                "size": "S1",
                "tier": "Standard",
                "capacity": 1
              },
              "kind": "SignalR",
              "name": "mySignalRService",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.SignalRService/SignalR",
              "location": "eastus",
              "properties": {
                "cors": {
                  "allowedOrigins": [
                    "https://foo.com",
                    "https://bar.com"
                  ]
                },
                "version": "1.0",
                "features": [
                  {
                    "flag": "ServiceMode",
                    "value": "Serverless",
                    "properties": {}
                  },
                  {
                    "flag": "EnableConnectivityLogs",
                    "value": "True",
                    "properties": {}
                  },
                  {
                    "flag": "EnableMessagingLogs",
                    "value": "False",
                    "properties": {}
                  }
                ],
                "hostName": "mysignalrservice.service.signalr.net",
                "upstream": {
                  "templates": [
                    {
                      "hubPattern": null,
                      "urlTemplate": "http://foo.com",
                      "eventPattern": null,
                      "categoryPattern": null
                    }
                  ]
                },
                "externalIP": "10.0.0.1",
                "publicPort": 443,
                "serverPort": 443,
                "networkACLs": {
                  "defaultAction": "Deny",
                  "publicNetwork": {
                    "deny": null,
                    "allow": [
                      "ClientConnection"
                    ]
                  },
                  "privateEndpoints": [
                    {
                      "deny": null,
                      "name": "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "allow": [
                        "ServerConnection"
                      ]
                    }
                  ]
                },
                "hostNamePrefix": "mysignalrservice",
                "provisioningState": "Succeeded",
                "privateEndpointConnections": [
                  {
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService/privateEndpointConnections/mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                    "name": "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                    "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                    "properties": {
                      "privateEndpoint": {
                        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint"
                      },
                      "provisioningState": "Succeeded",
                      "privateLinkServiceConnectionState": {
                        "status": "Approved",
                        "description": null,
                        "actionsRequired": "None"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  SignalR.ListBySubscription:
    description: |-
      Handles requests to list all resources in a subscription.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/signalr/listbysubscription
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService",
              "sku": {
                "name": "Standard_S1",
                "size": "S1",
                "tier": "Standard",
                "capacity": 1
              },
              "kind": "SignalR",
              "name": "mySignalRService",
              "tags": {
                "key1": "value1"
              },
              "type": "Microsoft.SignalRService/SignalR",
              "location": "eastus",
              "properties": {
                "cors": {
                  "allowedOrigins": [
                    "https://foo.com",
                    "https://bar.com"
                  ]
                },
                "version": "1.0",
                "features": [
                  {
                    "flag": "ServiceMode",
                    "value": "Serverless",
                    "properties": {}
                  },
                  {
                    "flag": "EnableConnectivityLogs",
                    "value": "True",
                    "properties": {}
                  },
                  {
                    "flag": "EnableMessagingLogs",
                    "value": "False",
                    "properties": {}
                  }
                ],
                "hostName": "mysignalrservice.service.signalr.net",
                "upstream": {
                  "templates": [
                    {
                      "hubPattern": null,
                      "urlTemplate": "http://foo.com",
                      "eventPattern": null,
                      "categoryPattern": null
                    }
                  ]
                },
                "externalIP": "10.0.0.1",
                "publicPort": 443,
                "serverPort": 443,
                "networkACLs": {
                  "defaultAction": "Deny",
                  "publicNetwork": {
                    "deny": null,
                    "allow": [
                      "ClientConnection"
                    ]
                  },
                  "privateEndpoints": [
                    {
                      "deny": null,
                      "name": "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                      "allow": [
                        "ServerConnection"
                      ]
                    }
                  ]
                },
                "hostNamePrefix": "mysignalrservice",
                "provisioningState": "Succeeded",
                "privateEndpointConnections": [
                  {
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService/privateEndpointConnections/mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                    "name": "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                    "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                    "properties": {
                      "privateEndpoint": {
                        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint"
                      },
                      "provisioningState": "Succeeded",
                      "privateLinkServiceConnectionState": {
                        "status": "Approved",
                        "description": null,
                        "actionsRequired": "None"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  SignalR.ListKeys:
    description: |-
      Get the access keys of the SignalR resource.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/signalr/listkeys
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "primaryKey": "primaryAccessKey",
          "secondaryKey": "secondaryAccessKey",
          "primaryConnectionString": "Endpoint=https://yourServiceName.service.signalr.net;AccessKey=primaryAccessKey;Version=1.0",
          "secondaryConnectionString": "Endpoint=https://yourServiceName.service.signalr.net;AccessKey=secondaryAccessKey;Version=1.0"
        }
      ]
  SignalRPrivateEndpointConnections.Delete:
    description: |-
      Delete the specified private endpoint connection associated with a SignalR resource.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/signalrprivateendpointconnections/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  SignalRPrivateEndpointConnections.Get:
    description: |-
      Get the specified private endpoint connection associated with a SignalR resource.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/signalrprivateendpointconnections/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService/privateEndpointConnections/mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
          "name": "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
          "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
          "properties": {
            "privateEndpoint": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint"
            },
            "provisioningState": "Succeeded",
            "privateLinkServiceConnectionState": {
              "status": "Approved",
              "description": null,
              "actionsRequired": "None"
            }
          }
        }
      ]
  SignalRPrivateEndpointConnections.Update:
    description: |-
      Update the state of specified private endpoint connection associated with a SignalR resource.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/signalrprivateendpointconnections/update
    example:
      inputs: [
        {
          "properties": {
            "privateEndpoint": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint"
            },
            "privateLinkServiceConnectionState": {
              "status": "Approved",
              "description": null,
              "actionsRequired": "None"
            }
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService/privateEndpointConnections/mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
          "name": "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
          "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
          "properties": {
            "privateEndpoint": {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint"
            },
            "provisioningState": "Succeeded",
            "privateLinkServiceConnectionState": {
              "status": "Approved",
              "description": null,
              "actionsRequired": "None"
            }
          }
        }
      ]
  SignalRPrivateLinkResources.List:
    description: |-
      Get the private link resources that need to be created for a SignalR resource.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/signalrprivatelinkresources/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/privateLinkResources",
              "name": "signalr",
              "type": "privateLinkResources",
              "properties": {
                "groupId": "signalr",
                "requiredMembers": [
                  "signalr"
                ],
                "requiredZoneNames": [
                  "privatelink.service.signalr.net"
                ]
              }
            }
          ],
          "nextLink": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToMoreResults..."
        }
      ]
  SignalR.RegenerateKey:
    description: |-
      Regenerate SignalR service access key. PrimaryKey and SecondaryKey cannot be regenerated at the same time.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/signalr/regeneratekey
    example:
      inputs: [
        {
          "keyType": "Primary"
        }
      ]
      outputs: [
        {
          "primaryKey": "primaryAccessKey",
          "secondaryKey": "secondaryAccessKey",
          "primaryConnectionString": "Endpoint=https://yourServiceName.service.signalr.net;AccessKey=primaryAccessKey;Version=1.0;",
          "secondaryConnectionString": "Endpoint=https://yourServiceName.service.signalr.net;AccessKey=secondaryAccessKey;Version=1.0;"
        }
      ]
  SignalR.Restart:
    description: |-
      Operation to restart a SignalR service.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/signalr/restart
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  SignalR.Update:
    description: |-
      Operation to update an exiting SignalR service.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/signalr/update
    example:
      inputs: [
        {
          "sku": {
            "name": "Standard_S1",
            "tier": "Standard",
            "capacity": 1
          },
          "kind": "SignalR",
          "tags": {
            "key1": "value1"
          },
          "location": "eastus",
          "properties": {
            "cors": {
              "allowedOrigins": [
                "https://foo.com",
                "https://bar.com"
              ]
            },
            "features": [
              {
                "flag": "ServiceMode",
                "value": "Serverless",
                "properties": {}
              },
              {
                "flag": "EnableConnectivityLogs",
                "value": "True",
                "properties": {}
              },
              {
                "flag": "EnableMessagingLogs",
                "value": "False",
                "properties": {}
              }
            ],
            "upstream": {
              "templates": [
                {
                  "hubPattern": "*",
                  "urlTemplate": "https://example.com/chat/api/connect",
                  "eventPattern": "connect,disconnect",
                  "categoryPattern": "*"
                }
              ]
            },
            "networkACLs": {
              "defaultAction": "Deny",
              "publicNetwork": {
                "deny": null,
                "allow": [
                  "ClientConnection"
                ]
              },
              "privateEndpoints": [
                {
                  "deny": null,
                  "name": "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                  "allow": [
                    "ServerConnection"
                  ]
                }
              ]
            }
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService",
          "sku": {
            "name": "Standard_S1",
            "size": "S1",
            "tier": "Standard",
            "capacity": 1
          },
          "kind": "SignalR",
          "name": "mySignalRService",
          "tags": {
            "key1": "value1"
          },
          "type": "Microsoft.SignalRService/SignalR",
          "location": "eastus",
          "properties": {
            "cors": {
              "allowedOrigins": [
                "https://foo.com",
                "https://bar.com"
              ]
            },
            "version": "1.0",
            "features": [
              {
                "flag": "ServiceMode",
                "value": "Serverless",
                "properties": {}
              },
              {
                "flag": "EnableConnectivityLogs",
                "value": "True",
                "properties": {}
              },
              {
                "flag": "EnableMessagingLogs",
                "value": "False",
                "properties": {}
              }
            ],
            "hostName": "mysignalrservice.service.signalr.net",
            "upstream": {
              "templates": [
                {
                  "hubPattern": null,
                  "urlTemplate": "http://foo.com",
                  "eventPattern": null,
                  "categoryPattern": null
                }
              ]
            },
            "externalIP": "10.0.0.1",
            "publicPort": 443,
            "serverPort": 443,
            "networkACLs": {
              "defaultAction": "Deny",
              "publicNetwork": {
                "deny": null,
                "allow": [
                  "ClientConnection"
                ]
              },
              "privateEndpoints": [
                {
                  "deny": null,
                  "name": "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                  "allow": [
                    "ServerConnection"
                  ]
                }
              ]
            },
            "hostNamePrefix": "mysignalrservice",
            "provisioningState": "Succeeded",
            "privateEndpointConnections": [
              {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/SignalR/mySignalRService/privateEndpointConnections/mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                "name": "mySignalRService.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                "type": "Microsoft.SignalRService/SignalR/privateEndpointConnections",
                "properties": {
                  "privateEndpoint": {
                    "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.Network/privateEndpoints/myPrivateEndpoint"
                  },
                  "provisioningState": "Succeeded",
                  "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "description": null,
                    "actionsRequired": "None"
                  }
                }
              }
            ]
          }
        }
      ]
  Usages.List:
    description: |-
      List usage quotas for Azure SignalR service by location.
    versions:
      from: 2020.5.1
    link: https://docs.microsoft.com/en-us/rest/api/signalr/usages/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.SignalRService/locations/eastus/usages/Usage1",
              "name": {
                "value": "Usage1",
                "localizedValue": "Usage1"
              },
              "unit": "Count",
              "limit": 100,
              "currentValue": 0
            },
            {
              "id": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.SignalRService/locations/eastus/usages/Usage2",
              "name": {
                "value": "Usage2",
                "localizedValue": "Usage2"
              },
              "unit": "Count",
              "limit": 100,
              "currentValue": 0
            }
          ],
          "nextLink": "https://management.azure.com/subscriptions/subid/providers/Microsoft.SignalRService/...pathToMoreResults..."
        }
      ]