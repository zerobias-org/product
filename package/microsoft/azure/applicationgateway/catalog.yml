Product:
  name: Azure Application Gateway
  versions: [2020.11.1]
  package: microsoft.azure.applicationgateway
  description: |-
    ApplicationGateway
  link: https://docs.microsoft.com/en-us/azure/application-gateway/
  contentType: json
Operations:
  ApplicationGatewayPrivateEndpointConnections.Delete:
    description: |-
      Deletes the specified private endpoint connection on application gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgatewayprivateendpointconnections/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ApplicationGatewayPrivateEndpointConnections.Get:
    description: |-
      Gets the specified private endpoint connection on application gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgatewayprivateendpointconnections/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/privateLinkResources/connection1",
          "name": "coonection1",
          "type": "Microsoft.Network/applicationGateways/privateEndpointConnections",
          "properties": {
            "linkIdentifier": "805319460",
            "privateEndpoint": {
              "id": "/subscriptions/subid2/resourceGroups/rg1/providers/Microsoft.Network/privateEndpoints/pe1"
            },
            "provisioningState": "Succeeded",
            "privateLinkServiceConnectionState": {
              "status": "Approved",
              "description": "Approval Done"
            }
          }
        }
      ]
  ApplicationGatewayPrivateEndpointConnections.List:
    description: |-
      Lists all private endpoint connections on an application gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgatewayprivateendpointconnections/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/privateLinkResources/connection1",
              "name": "coonection1",
              "type": "Microsoft.Network/applicationGateways/privateEndpointConnections",
              "properties": {
                "linkIdentifier": "805319460",
                "privateEndpoint": {
                  "id": "/subscriptions/subid2/resourceGroups/rg1/providers/Microsoft.Network/privateEndpoints/pe1"
                },
                "provisioningState": "Succeeded",
                "privateLinkServiceConnectionState": {
                  "status": "Approved",
                  "description": "Approval Done"
                }
              }
            }
          ]
        }
      ]
  ApplicationGatewayPrivateEndpointConnections.Update:
    description: |-
      Updates the specified private endpoint connection on application gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgatewayprivateendpointconnections/update
    example:
      inputs: [
        {
          "name": "connection1",
          "properties": {
            "privateEndpoint": {
              "id": "/subscriptions/subId2/resourceGroups/rg1/providers/Microsoft.Network/privateEndpoints/testPe"
            },
            "privateLinkServiceConnectionState": {
              "status": "Approved",
              "description": "approved it for some reason."
            }
          }
        }
      ]
      outputs: [
        {
          "name": "testPlePeConnection",
          "properties": {
            "linkIdentifier": "linkId",
            "privateEndpoint": {
              "id": "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateEndpoints/testPe"
            },
            "privateLinkServiceConnectionState": {
              "status": "Approved",
              "description": "approved it for some reason."
            }
          }
        }
      ]
  ApplicationGatewayPrivateLinkResources.List:
    description: |-
      Lists all private link resources on an application gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgatewayprivatelinkresources/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/privateLinkResources/privateLink1",
              "name": "privateLink1",
              "type": "Microsoft.Network/applicationGateways/privateLinkResources",
              "properties": {
                "groupId": "privateLink1",
                "requiredMembers": [
                  "privateLink1"
                ],
                "requiredZoneNames": []
              }
            }
          ]
        }
      ]
  ApplicationGateways.BackendHealth:
    description: |-
      Gets the backend health of the specified application gateway in a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/backendhealth
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "backendAddressPools": [
            {
              "backendAddressPool": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendaddressPools/MFAnalyticsPool"
              },
              "backendHttpSettingsCollection": [
                {
                  "servers": [
                    {
                      "health": "Up",
                      "address": "10.220.1.8"
                    }
                  ],
                  "backendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/MFPoolSettings"
                  }
                }
              ]
            },
            {
              "backendAddressPool": {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendaddressPools/MFPool"
              },
              "backendHttpSettingsCollection": [
                {
                  "servers": [
                    {
                      "health": "Up",
                      "address": "10.220.1.4"
                    },
                    {
                      "health": "Up",
                      "address": "10.220.1.5"
                    }
                  ],
                  "backendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/MFPoolSettings"
                  }
                }
              ]
            }
          ]
        }
      ]
  ApplicationGateways.BackendHealthOnDemand:
    description: |-
      Gets the backend health for given combination of backend pool and http setting of the specified application gateway in a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/backendhealthondemand
    example:
      inputs: [
        {
          "path": "/",
          "timeout": 30,
          "protocol": "Http",
          "backendAddressPool": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendaddressPools/MFAnalyticsPool"
          },
          "backendHttpSettings": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/MFPoolSettings"
          },
          "pickHostNameFromBackendHttpSettings": true
        }
      ]
      outputs: [
        {
          "backendAddressPool": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendaddressPools/MFAnalyticsPool"
          },
          "backendHealthHttpSettings": {
            "servers": [
              {
                "health": "Up",
                "address": "10.220.1.4"
              },
              {
                "health": "Up",
                "address": "10.220.1.5"
              }
            ],
            "backendHttpSettings": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/MFPoolSettings"
            }
          }
        }
      ]
  ApplicationGateways.CreateOrUpdate:
    description: |-
      Creates or updates the specified application gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/createorupdate
    example:
      inputs: [
        {
          "identity": {
            "type": "UserAssigned",
            "userAssignedIdentities": {
              "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1": {}
            }
          },
          "location": "eastus",
          "properties": {
            "sku": {
              "name": "Standard_v2",
              "tier": "Standard_v2",
              "capacity": 3
            },
            "sslProfiles": [
              {
                "name": "sslProfile1",
                "properties": {
                  "sslPolicy": {
                    "policyType": "Custom",
                    "cipherSuites": [
                      "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
                    ],
                    "minProtocolVersion": "TLSv1_1"
                  },
                  "clientAuthConfiguration": {
                    "verifyClientCertIssuerDN": true
                  },
                  "trustedClientCertificates": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/trustedClientCertificates/clientcert"
                    }
                  ]
                }
              }
            ],
            "urlPathMaps": [
              {
                "name": "pathMap1",
                "properties": {
                  "pathRules": [
                    {
                      "name": "apiPaths",
                      "properties": {
                        "paths": [
                          "/api",
                          "/v1/api"
                        ],
                        "rewriteRuleSet": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                        },
                        "backendAddressPool": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                        },
                        "backendHttpSettings": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                        }
                      }
                    }
                  ],
                  "defaultRewriteRuleSet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                  },
                  "defaultBackendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                  },
                  "defaultBackendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                  }
                }
              }
            ],
            "frontendPorts": [
              {
                "name": "appgwfp",
                "properties": {
                  "port": 443
                }
              },
              {
                "name": "appgwfp80",
                "properties": {
                  "port": 80
                }
              }
            ],
            "httpListeners": [
              {
                "name": "appgwhl",
                "properties": {
                  "protocol": "Https",
                  "sslProfile": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslProfiles/sslProfile1"
                  },
                  "frontendPort": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp"
                  },
                  "sslCertificate": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert"
                  },
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"
                  },
                  "requireServerNameIndication": false
                }
              },
              {
                "name": "appgwhttplistener",
                "properties": {
                  "protocol": "Http",
                  "frontendPort": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp80"
                  },
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"
                  }
                }
              }
            ],
            "rewriteRuleSets": [
              {
                "name": "rewriteRuleSet1",
                "properties": {
                  "rewriteRules": [
                    {
                      "name": "Set X-Forwarded-For",
                      "actionSet": {
                        "urlConfiguration": {
                          "modifiedPath": "/abc"
                        },
                        "requestHeaderConfigurations": [
                          {
                            "headerName": "X-Forwarded-For",
                            "headerValue": "{var_add_x_forwarded_for_proxy}"
                          }
                        ],
                        "responseHeaderConfigurations": [
                          {
                            "headerName": "Strict-Transport-Security",
                            "headerValue": "max-age=31536000"
                          }
                        ]
                      },
                      "conditions": [
                        {
                          "negate": false,
                          "pattern": "^Bearer",
                          "variable": "http_req_Authorization",
                          "ignoreCase": true
                        }
                      ],
                      "ruleSequence": 102
                    }
                  ]
                }
              }
            ],
            "sslCertificates": [
              {
                "name": "sslcert",
                "properties": {
                  "data": "****",
                  "password": "****"
                }
              },
              {
                "name": "sslcert2",
                "properties": {
                  "keyVaultSecretId": "https://kv/secret"
                }
              }
            ],
            "backendAddressPools": [
              {
                "name": "appgwpool",
                "properties": {
                  "backendAddresses": [
                    {
                      "ipAddress": "10.0.1.1"
                    },
                    {
                      "ipAddress": "10.0.1.2"
                    }
                  ]
                }
              }
            ],
            "requestRoutingRules": [
              {
                "name": "appgwrule",
                "properties": {
                  "priority": 10,
                  "ruleType": "Basic",
                  "httpListener": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl"
                  },
                  "rewriteRuleSet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                  },
                  "backendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                  },
                  "backendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                  }
                }
              },
              {
                "name": "appgwPathBasedRule",
                "properties": {
                  "priority": 20,
                  "ruleType": "PathBasedRouting",
                  "urlPathMap": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1"
                  },
                  "httpListener": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhttplistener"
                  }
                }
              }
            ],
            "gatewayIPConfigurations": [
              {
                "name": "appgwipc",
                "properties": {
                  "subnet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet/subnets/appgwsubnet"
                  }
                }
              }
            ],
            "trustedRootCertificates": [
              {
                "name": "rootcert",
                "properties": {
                  "data": "****"
                }
              },
              {
                "name": "rootcert1",
                "properties": {
                  "keyVaultSecretId": "https://kv/secret"
                }
              }
            ],
            "frontendIPConfigurations": [
              {
                "name": "appgwfip",
                "properties": {
                  "publicIPAddress": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/appgwpip"
                  }
                }
              }
            ],
            "trustedClientCertificates": [
              {
                "name": "clientcert",
                "properties": {
                  "data": "****"
                }
              }
            ],
            "backendHttpSettingsCollection": [
              {
                "name": "appgwbhs",
                "properties": {
                  "port": 80,
                  "protocol": "Http",
                  "requestTimeout": 30,
                  "cookieBasedAffinity": "Disabled"
                }
              }
            ]
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw",
          "name": "appgw",
          "type": "Microsoft.Network/applicationGateways",
          "location": "southcentralus",
          "properties": {
            "sku": {
              "name": "Standard_Medium",
              "tier": "Standard",
              "capacity": 3
            },
            "probes": [],
            "sslProfiles": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslProfiles/sslProfile1",
                "name": "sslProfile1",
                "properties": {
                  "sslPolicy": {
                    "policyType": "Custom",
                    "cipherSuites": [
                      "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
                    ],
                    "minProtocolVersion": "TLSv1_1"
                  },
                  "provisioningState": "Succeeded",
                  "clientAuthConfiguration": {
                    "verifyClientCertIssuerDN": true
                  },
                  "trustedClientCertificates": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/trustedClientCertificates/clientcert"
                    }
                  ]
                }
              }
            ],
            "urlPathMaps": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1",
                "name": "pathMap1",
                "properties": {
                  "pathRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1/pathRules/apiPaths",
                      "name": "apiPaths",
                      "properties": {
                        "paths": [
                          "/api",
                          "/v1/api"
                        ],
                        "rewriteRuleSet": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                        },
                        "provisioningState": "Succeeded",
                        "backendAddressPool": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                        },
                        "backendHttpSettings": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                        }
                      }
                    }
                  ],
                  "provisioningState": "Succeeded",
                  "defaultRewriteRuleSet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                  },
                  "defaultBackendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                  },
                  "defaultBackendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                  }
                }
              }
            ],
            "frontendPorts": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp",
                "name": "appgwfp",
                "properties": {
                  "port": 443,
                  "provisioningState": "Succeeded"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp80",
                "name": "appgwfp80",
                "properties": {
                  "port": 80,
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "httpListeners": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl",
                "name": "appgwhl",
                "properties": {
                  "protocol": "Https",
                  "sslProfile": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslProfiles/sslProfile1"
                  },
                  "frontendPort": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp"
                  },
                  "sslCertificate": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert"
                  },
                  "provisioningState": "Succeeded",
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"
                  },
                  "requireServerNameIndication": false
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhttplistener",
                "name": "appgwhttplistener",
                "properties": {
                  "protocol": "Http",
                  "frontendPort": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp80"
                  },
                  "provisioningState": "Succeeded",
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"
                  }
                }
              }
            ],
            "rewriteRuleSets": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1",
                "name": "rewriteRuleSet1",
                "properties": {
                  "rewriteRules": [
                    {
                      "name": "Set X-Forwarded-For",
                      "actionSet": {
                        "urlConfiguration": {
                          "reroute": true,
                          "modifiedPath": "/abc"
                        },
                        "requestHeaderConfigurations": [
                          {
                            "headerName": "X-Forwarded-For",
                            "headerValue": "{var_remote-addr}"
                          }
                        ],
                        "responseHeaderConfigurations": [
                          {
                            "headerName": "Strict-Transport-Security",
                            "headerValue": "max-age=31536000"
                          }
                        ]
                      },
                      "conditions": [
                        {
                          "negate": false,
                          "pattern": "^Bearer",
                          "variable": "http_req_Authorization",
                          "ignoreCase": true
                        }
                      ],
                      "ruleSequence": 102
                    }
                  ],
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "sslCertificates": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert",
                "name": "sslcert",
                "properties": {
                  "publicCertData": "*****",
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "operationalState": "Running",
            "provisioningState": "Succeeded",
            "backendAddressPools": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool",
                "name": "appgwpool",
                "properties": {
                  "backendAddresses": [],
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "requestRoutingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/requestRoutingRules/appgwrule",
                "name": "appgwrule",
                "properties": {
                  "ruleType": "Basic",
                  "httpListener": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl"
                  },
                  "rewriteRuleSet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                  },
                  "provisioningState": "Succeeded",
                  "backendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                  },
                  "backendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                  }
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/requestRoutingRules/appgwPathBasedRule",
                "name": "appgwPathBasedRule",
                "properties": {
                  "ruleType": "PathBasedRouting",
                  "urlPathMap": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1"
                  },
                  "httpListener": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhttplistener"
                  },
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "gatewayIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/gatewayIPConfigurations/appgwipc",
                "name": "appgwipc",
                "properties": {
                  "subnet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/virtualNetwork1/subnets/appgwsubnet"
                  },
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "frontendIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip",
                "name": "appgwfip",
                "properties": {
                  "publicIPAddress": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/appgwpip"
                  },
                  "provisioningState": "Succeeded",
                  "privateIPAllocationMethod": "Dynamic"
                }
              }
            ],
            "trustedClientCertificates": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/trustedClientCertificates/clientcert",
                "name": "clientcert",
                "properties": {
                  "data": "****",
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "authenticationCertificates": [],
            "backendHttpSettingsCollection": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs",
                "name": "appgwbhs",
                "properties": {
                  "port": 80,
                  "protocol": "Http",
                  "requestTimeout": 30,
                  "provisioningState": "Succeeded",
                  "cookieBasedAffinity": "Disabled"
                }
              }
            ]
          }
        }
      ]
  ApplicationGateways.Delete:
    description: |-
      Deletes the specified application gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ApplicationGateways.Get:
    description: |-
      Gets the specified application gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw",
          "name": "appgw",
          "type": "Microsoft.Network/applicationGateways",
          "location": "southcentralus",
          "properties": {
            "sku": {
              "name": "Standard_Medium",
              "tier": "Standard",
              "capacity": 3
            },
            "probes": [],
            "sslProfiles": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslProfiles/sslProfile1",
                "name": "sslProfile1",
                "properties": {
                  "sslPolicy": {
                    "policyType": "Custom",
                    "cipherSuites": [
                      "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
                    ],
                    "minProtocolVersion": "TLSv1_1"
                  },
                  "provisioningState": "Succeeded",
                  "clientAuthConfiguration": {
                    "verifyClientCertIssuerDN": true
                  },
                  "trustedClientCertificates": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/trustedClientCertificates/clientcert"
                    }
                  ]
                }
              }
            ],
            "urlPathMaps": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1",
                "name": "pathMap1",
                "properties": {
                  "pathRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1/pathRules/apiPaths",
                      "name": "apiPaths",
                      "properties": {
                        "paths": [
                          "/api",
                          "/v1/api"
                        ],
                        "rewriteRuleSet": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                        },
                        "provisioningState": "Succeeded",
                        "backendAddressPool": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                        },
                        "backendHttpSettings": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                        }
                      }
                    }
                  ],
                  "provisioningState": "Succeeded",
                  "defaultRewriteRuleSet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                  },
                  "defaultBackendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                  },
                  "defaultBackendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                  }
                }
              }
            ],
            "frontendPorts": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp",
                "name": "appgwfp",
                "properties": {
                  "port": 443,
                  "provisioningState": "Succeeded"
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp80",
                "name": "appgwfp80",
                "properties": {
                  "port": 80,
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "httpListeners": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl",
                "name": "appgwhl",
                "properties": {
                  "protocol": "Https",
                  "sslProfile": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslProfiles/sslProfile1"
                  },
                  "frontendPort": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp"
                  },
                  "sslCertificate": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert"
                  },
                  "provisioningState": "Succeeded",
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"
                  },
                  "requireServerNameIndication": false
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhttplistener",
                "name": "appgwhttplistener",
                "properties": {
                  "protocol": "Http",
                  "frontendPort": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp80"
                  },
                  "provisioningState": "Succeeded",
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"
                  }
                }
              }
            ],
            "rewriteRuleSets": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1",
                "name": "rewriteRuleSet1",
                "properties": {
                  "rewriteRules": [
                    {
                      "name": "Set X-Forwarded-For",
                      "actionSet": {
                        "urlConfiguration": {
                          "reroute": false,
                          "modifiedPath": "/abc",
                          "modifiedQueryString": "x=y&a=b"
                        },
                        "requestHeaderConfigurations": [
                          {
                            "headerName": "X-Forwarded-For",
                            "headerValue": "{var_remote-addr}"
                          }
                        ],
                        "responseHeaderConfigurations": [
                          {
                            "headerName": "Strict-Transport-Security",
                            "headerValue": "max-age=31536000"
                          }
                        ]
                      },
                      "conditions": [
                        {
                          "negate": false,
                          "pattern": "^Bearer",
                          "variable": "http_req_Authorization",
                          "ignoreCase": true
                        }
                      ],
                      "ruleSequence": 102
                    }
                  ],
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "sslCertificates": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert",
                "name": "sslcert",
                "properties": {
                  "publicCertData": "*****",
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "operationalState": "Running",
            "provisioningState": "Succeeded",
            "backendAddressPools": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool",
                "name": "appgwpool",
                "properties": {
                  "backendAddresses": [],
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "requestRoutingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/requestRoutingRules/appgwrule",
                "name": "appgwrule",
                "properties": {
                  "priority": 10,
                  "ruleType": "Basic",
                  "httpListener": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl"
                  },
                  "rewriteRuleSet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/rewriteRuleSets/rewriteRuleSet1"
                  },
                  "provisioningState": "Succeeded",
                  "backendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                  },
                  "backendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                  }
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/requestRoutingRules/appgwPathBasedRule",
                "name": "appgwPathBasedRule",
                "properties": {
                  "priority": 20,
                  "ruleType": "PathBasedRouting",
                  "urlPathMap": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/urlPathMaps/pathMap1"
                  },
                  "httpListener": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhttplistener"
                  },
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "gatewayIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/gatewayIPConfigurations/appgwipc",
                "name": "appgwipc",
                "properties": {
                  "subnet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/virtualNetwork1/subnets/appgwsubnet"
                  },
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "frontendIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip",
                "name": "appgwfip",
                "properties": {
                  "publicIPAddress": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/appgwpip"
                  },
                  "provisioningState": "Succeeded",
                  "privateIPAllocationMethod": "Dynamic"
                }
              }
            ],
            "privateLinkConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/privateLinkConfigurations/privateLink1",
                "name": "privateLink1",
                "properties": {
                  "ipConfigurations": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/privateLinkConfigurations/privateLink1/privateLinkConfigurations/privateLink1/ipConfigurations/natNicIpconfig1",
                      "name": "natNicIpconfig1",
                      "properties": {
                        "subnet": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/virtualNetwork1/subnets/appgwsubnet"
                        },
                        "primary": true,
                        "provisioningState": "Succeeded",
                        "privateIPAllocationMethod": "Dynamic"
                      }
                    },
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/privateLinkConfigurations/privateLink1/privateLinkConfigurations/privateLink1/ipConfigurations/natNicIpconfig2",
                      "name": "natNicIpconfig2",
                      "properties": {
                        "subnet": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/virtualNetwork1/subnets/appgwsubnet"
                        },
                        "provisioningState": "Succeeded",
                        "privateIPAllocationMethod": "Dynamic"
                      }
                    }
                  ],
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "trustedClientCertificates": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/trustedClientCertificates/clientcert",
                "name": "clientcert",
                "properties": {
                  "data": "****",
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "authenticationCertificates": [],
            "privateEndpointConnections": [],
            "backendHttpSettingsCollection": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs",
                "name": "appgwbhs",
                "properties": {
                  "port": 80,
                  "protocol": "Http",
                  "requestTimeout": 30,
                  "provisioningState": "Succeeded",
                  "cookieBasedAffinity": "Disabled"
                }
              }
            ]
          }
        }
      ]
  ApplicationGateways.GetSslPredefinedPolicy:
    description: |-
      Gets Ssl predefined policy with the specified policy name.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/getsslpredefinedpolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups//providers/Microsoft.Network/ApplicationGatewayAvailableSslOptions/default/ApplicationGatewaySslPredefinedPolicy/AppGwSslPolicy20150501",
          "name": "AppGwSslPolicy20150501",
          "properties": {
            "cipherSuites": [
              "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
              "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
              "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
              "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
              "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
              "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
              "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
              "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
              "TLS_DHE_RSA_WITH_AES_256_CBC_SHA",
              "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
              "TLS_RSA_WITH_AES_256_GCM_SHA384",
              "TLS_RSA_WITH_AES_128_GCM_SHA256",
              "TLS_RSA_WITH_AES_256_CBC_SHA256",
              "TLS_RSA_WITH_AES_128_CBC_SHA256",
              "TLS_RSA_WITH_AES_256_CBC_SHA",
              "TLS_RSA_WITH_AES_128_CBC_SHA",
              "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
              "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
              "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
              "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
              "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
              "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
              "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256",
              "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256",
              "TLS_DHE_DSS_WITH_AES_256_CBC_SHA",
              "TLS_DHE_DSS_WITH_AES_128_CBC_SHA",
              "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
              "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"
            ],
            "minProtocolVersion": "TLSv1_0"
          }
        }
      ]
  ApplicationGateways.List:
    description: |-
      Lists all application gateways in a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "name": "appgw",
              "type": "Microsoft.Network/applicationGateways",
              "location": "southcentralus",
              "properties": {
                "sku": {
                  "name": "Standard_Medium",
                  "tier": "Standard",
                  "capacity": 3
                },
                "frontendPorts": [
                  {
                    "name": "appgwfp",
                    "properties": {
                      "port": 443
                    }
                  }
                ],
                "httpListeners": [
                  {
                    "name": "appgwhl",
                    "properties": {
                      "protocol": "Https",
                      "frontendPort": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp"
                      },
                      "sslCertificate": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert"
                      },
                      "frontendIPConfiguration": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"
                      },
                      "requireServerNameIndication": false
                    }
                  }
                ],
                "sslCertificates": [
                  {
                    "name": "sslcert",
                    "properties": {
                      "data": "base64-pfxData",
                      "password": "<password>"
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "appgwpool",
                    "properties": {
                      "backendAddresses": [
                        {
                          "ipAddress": "10.0.1.1"
                        },
                        {
                          "ipAddress": "10.0.1.2"
                        }
                      ]
                    }
                  }
                ],
                "requestRoutingRules": [
                  {
                    "name": "appgwrule",
                    "properties": {
                      "ruleType": "Basic",
                      "httpListener": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl"
                      },
                      "backendAddressPool": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                      },
                      "backendHttpSettings": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                      }
                    }
                  }
                ],
                "gatewayIPConfigurations": [
                  {
                    "name": "appgwipc",
                    "properties": {
                      "subnet": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet/subnets/appgwsubnet"
                      }
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "name": "appgwfip",
                    "properties": {
                      "publicIPAddress": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/appgwpip"
                      }
                    }
                  }
                ],
                "backendHttpSettingsCollection": [
                  {
                    "name": "appgwbhs",
                    "properties": {
                      "port": 80,
                      "protocol": "Http",
                      "requestTimeout": 30,
                      "cookieBasedAffinity": "Disabled"
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  ApplicationGateways.ListAll:
    description: |-
      Gets all the application gateways in a subscription.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/listall
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "name": "appgw",
              "type": "Microsoft.Network/applicationGateways",
              "location": "southcentralus",
              "properties": {
                "sku": {
                  "name": "Standard_Medium",
                  "tier": "Standard",
                  "capacity": 3
                },
                "frontendPorts": [
                  {
                    "name": "appgwfp",
                    "properties": {
                      "port": 443
                    }
                  }
                ],
                "httpListeners": [
                  {
                    "name": "appgwhl",
                    "properties": {
                      "protocol": "Https",
                      "frontendPort": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendPorts/appgwfp"
                      },
                      "sslCertificate": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/sslCertificates/sslcert"
                      },
                      "frontendIPConfiguration": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/frontendIPConfigurations/appgwfip"
                      },
                      "requireServerNameIndication": false
                    }
                  }
                ],
                "sslCertificates": [
                  {
                    "name": "sslcert",
                    "properties": {
                      "data": "base64-pfxData",
                      "password": "<password>"
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "appgwpool",
                    "properties": {
                      "backendAddresses": [
                        {
                          "ipAddress": "10.0.1.1"
                        },
                        {
                          "ipAddress": "10.0.1.2"
                        }
                      ]
                    }
                  }
                ],
                "requestRoutingRules": [
                  {
                    "name": "appgwrule",
                    "properties": {
                      "ruleType": "Basic",
                      "httpListener": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/httpListeners/appgwhl"
                      },
                      "backendAddressPool": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendAddressPools/appgwpool"
                      },
                      "backendHttpSettings": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/appgw/backendHttpSettingsCollection/appgwbhs"
                      }
                    }
                  }
                ],
                "gatewayIPConfigurations": [
                  {
                    "name": "appgwipc",
                    "properties": {
                      "subnet": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet/subnets/appgwsubnet"
                      }
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "name": "appgwfip",
                    "properties": {
                      "publicIPAddress": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/appgwpip"
                      }
                    }
                  }
                ],
                "backendHttpSettingsCollection": [
                  {
                    "name": "appgwbhs",
                    "properties": {
                      "port": 80,
                      "protocol": "Http",
                      "requestTimeout": 30,
                      "cookieBasedAffinity": "Disabled"
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  ApplicationGateways.ListAvailableRequestHeaders:
    description: |-
      Lists all available request headers.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/listavailablerequestheaders
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          "Accept-Charset"
        ]
      ]
  ApplicationGateways.ListAvailableResponseHeaders:
    description: |-
      Lists all available response headers.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/listavailableresponseheaders
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          "Access-Control-Allow-Origin"
        ]
      ]
  ApplicationGateways.ListAvailableServerVariables:
    description: |-
      Lists all available server variables.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/listavailableservervariables
    example:
      inputs: [
        {}
      ]
      outputs: [
        [
          "request_query"
        ]
      ]
  ApplicationGateways.ListAvailableSslOptions:
    description: |-
      Lists available Ssl options for configuring Ssl policy.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/listavailablessloptions
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups//providers/Microsoft.Network/ApplicationGatewayAvailableSslOptions/default",
          "name": "default",
          "type": "Microsoft.Network/ApplicationGatewayAvailableSslOptions",
          "properties": {
            "defaultPolicy": "AppGwSslPolicy20150501",
            "availableProtocols": [
              "TLSv1_0",
              "TLSv1_1",
              "TLSv1_2"
            ],
            "predefinedPolicies": [
              {
                "id": "/subscriptions/subid/resourceGroups//providers/Microsoft.Network/ApplicationGatewayAvailableSslOptions/default/ApplicationGatewaySslPredefinedPolicy/AppGwSslPolicy20150501"
              },
              {
                "id": "/subscriptions/subid/resourceGroups//providers/Microsoft.Network/ApplicationGatewayAvailableSslOptions/default/ApplicationGatewaySslPredefinedPolicy/AppGwSslPolicy20170401"
              },
              {
                "id": "/subscriptions/subid/resourceGroups//providers/Microsoft.Network/ApplicationGatewayAvailableSslOptions/default/ApplicationGatewaySslPredefinedPolicy/AppGwSslPolicy20170401S"
              }
            ],
            "availableCipherSuites": [
              "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
              "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
              "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
              "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
              "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
              "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
              "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
              "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
              "TLS_DHE_RSA_WITH_AES_256_CBC_SHA",
              "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
              "TLS_RSA_WITH_AES_256_GCM_SHA384",
              "TLS_RSA_WITH_AES_128_GCM_SHA256",
              "TLS_RSA_WITH_AES_256_CBC_SHA256",
              "TLS_RSA_WITH_AES_128_CBC_SHA256",
              "TLS_RSA_WITH_AES_256_CBC_SHA",
              "TLS_RSA_WITH_AES_128_CBC_SHA",
              "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
              "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
              "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
              "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
              "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
              "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
              "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256",
              "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256",
              "TLS_DHE_DSS_WITH_AES_256_CBC_SHA",
              "TLS_DHE_DSS_WITH_AES_128_CBC_SHA",
              "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
              "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"
            ]
          }
        }
      ]
  ApplicationGateways.ListAvailableSslPredefinedPolicies:
    description: |-
      Lists all SSL predefined policies for configuring Ssl policy.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/listavailablesslpredefinedpolicies
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups//providers/Microsoft.Network/ApplicationGatewayAvailableSslOptions/default/ApplicationGatewaySslPredefinedPolicy/AppGwSslPolicy20150501",
              "name": "AppGwSslPolicy20150501",
              "properties": {
                "cipherSuites": [
                  "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                  "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                  "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
                  "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
                  "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
                  "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
                  "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
                  "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
                  "TLS_DHE_RSA_WITH_AES_256_CBC_SHA",
                  "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
                  "TLS_RSA_WITH_AES_256_GCM_SHA384",
                  "TLS_RSA_WITH_AES_128_GCM_SHA256",
                  "TLS_RSA_WITH_AES_256_CBC_SHA256",
                  "TLS_RSA_WITH_AES_128_CBC_SHA256",
                  "TLS_RSA_WITH_AES_256_CBC_SHA",
                  "TLS_RSA_WITH_AES_128_CBC_SHA",
                  "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                  "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                  "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
                  "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
                  "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
                  "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
                  "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256",
                  "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256",
                  "TLS_DHE_DSS_WITH_AES_256_CBC_SHA",
                  "TLS_DHE_DSS_WITH_AES_128_CBC_SHA",
                  "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
                  "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"
                ],
                "minProtocolVersion": "TLSv1_0"
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups//providers/Microsoft.Network/ApplicationGatewayAvailableSslOptions/default/ApplicationGatewaySslPredefinedPolicy/AppGwSslPolicy20170401",
              "name": "AppGwSslPolicy20170401",
              "properties": {
                "cipherSuites": [
                  "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                  "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                  "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
                  "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
                  "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
                  "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
                  "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                  "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                  "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
                  "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
                  "TLS_RSA_WITH_AES_256_GCM_SHA384",
                  "TLS_RSA_WITH_AES_128_GCM_SHA256",
                  "TLS_RSA_WITH_AES_256_CBC_SHA256",
                  "TLS_RSA_WITH_AES_128_CBC_SHA256",
                  "TLS_RSA_WITH_AES_256_CBC_SHA",
                  "TLS_RSA_WITH_AES_128_CBC_SHA"
                ],
                "minProtocolVersion": "TLSv1_1"
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups//providers/Microsoft.Network/ApplicationGatewayAvailableSslOptions/default/ApplicationGatewaySslPredefinedPolicy/AppGwSslPolicy20170401S",
              "name": "AppGwSslPolicy20170401S",
              "properties": {
                "cipherSuites": [
                  "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                  "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                  "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
                  "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
                  "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
                  "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
                  "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                  "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                  "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
                  "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
                  "TLS_RSA_WITH_AES_256_GCM_SHA384",
                  "TLS_RSA_WITH_AES_128_GCM_SHA256",
                  "TLS_RSA_WITH_AES_256_CBC_SHA256",
                  "TLS_RSA_WITH_AES_128_CBC_SHA256",
                  "TLS_RSA_WITH_AES_256_CBC_SHA",
                  "TLS_RSA_WITH_AES_128_CBC_SHA"
                ],
                "minProtocolVersion": "TLSv1_2"
              }
            }
          ]
        }
      ]
  ApplicationGateways.ListAvailableWafRuleSets:
    description: |-
      Lists all available web application firewall rule sets.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/listavailablewafrulesets
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions//resourceGroups//providers/Microsoft.Network/applicationGatewayAvailableWafRuleSets/",
              "name": "OWASP_3.0",
              "type": "Microsoft.Network/applicationGatewayAvailableWafRuleSets",
              "properties": {
                "ruleGroups": [
                  {
                    "rules": [
                      {
                        "ruleId": 200004,
                        "description": "Possible Multipart Unmatched Boundary."
                      }
                    ],
                    "description": "",
                    "ruleGroupName": "General"
                  }
                ],
                "ruleSetType": "OWASP",
                "ruleSetVersion": "3.0",
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]
  ApplicationGateways.Start:
    description: |-
      Starts the specified application gateway.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/start
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ApplicationGateways.Stop:
    description: |-
      Stops the specified application gateway in a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/stop
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ApplicationGateways.UpdateTags:
    description: |-
      Updates the specified application gateway tags.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/applicationgateways/updatetags
    example:
      inputs: [
        {
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw",
          "name": "AppGw",
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          },
          "type": "Microsoft.Network/applicationGateways",
          "location": "westus",
          "properties": {
            "sku": {
              "name": "Standard_Small",
              "tier": "Standard",
              "capacity": 2
            },
            "probes": [],
            "urlPathMaps": [],
            "resourceGuid": "00000000-0000-0000-0000-000000000000",
            "frontendPorts": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/frontendPorts/FrontEndPort01",
                "name": "FrontEndPort01",
                "properties": {
                  "port": 80,
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "httpListeners": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/httpListeners/listener1",
                "name": "listener1",
                "properties": {
                  "protocol": "Http",
                  "frontendPort": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/frontendPorts/FrontEndPort01"
                  },
                  "provisioningState": "Succeeded",
                  "frontendIPConfiguration": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/frontendIPConfigurations/FrontEndConfig01"
                  },
                  "requireServerNameIndication": false
                }
              }
            ],
            "sslCertificates": [],
            "operationalState": "Running",
            "provisioningState": "Succeeded",
            "backendAddressPools": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/backendAddressPools/Pool01",
                "name": "Pool01",
                "properties": {
                  "backendAddresses": [
                    {
                      "ipAddress": "10.10.10.1"
                    },
                    {
                      "ipAddress": "10.10.10.2"
                    },
                    {
                      "ipAddress": "10.10.10.3"
                    }
                  ],
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "requestRoutingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/requestRoutingRules/Rule01",
                "name": "Rule01",
                "properties": {
                  "ruleType": "Basic",
                  "httpListener": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/httpListeners/listener1"
                  },
                  "provisioningState": "Succeeded",
                  "backendAddressPool": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/backendAddressPools/Pool01"
                  },
                  "backendHttpSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/backendHttpSettingsCollection/PoolSetting01"
                  }
                }
              }
            ],
            "redirectConfigurations": [],
            "gatewayIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/gatewayIPConfigurations/GatewayIp01",
                "name": "GatewayIp01",
                "properties": {
                  "subnet": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet/subnets/subnet1"
                  },
                  "provisioningState": "Succeeded"
                }
              }
            ],
            "frontendIPConfigurations": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/frontendIPConfigurations/FrontEndConfig01",
                "name": "FrontEndConfig01",
                "properties": {
                  "publicIPAddress": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/publicIp1"
                  },
                  "provisioningState": "Succeeded",
                  "privateIPAllocationMethod": "Dynamic"
                }
              }
            ],
            "authenticationCertificates": [],
            "backendHttpSettingsCollection": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/applicationGateways/AppGw/backendHttpSettingsCollection/PoolSetting01",
                "name": "PoolSetting01",
                "properties": {
                  "port": 80,
                  "protocol": "Http",
                  "requestTimeout": 30,
                  "provisioningState": "Succeeded",
                  "cookieBasedAffinity": "Disabled",
                  "pickHostNameFromBackendAddress": false
                }
              }
            ]
          }
        }
      ]
  WebApplicationFirewallPolicies.CreateOrUpdate:
    description: |-
      Creates or update policy with specified rule set name within a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/webapplicationfirewallpolicies/createorupdate
    example:
      inputs: [
        {
          "location": "WestUs",
          "properties": {
            "customRules": [
              {
                "name": "Rule1",
                "action": "Block",
                "priority": 1,
                "ruleType": "MatchRule",
                "matchConditions": [
                  {
                    "operator": "IPMatch",
                    "matchValues": [
                      "192.168.1.0/24",
                      "10.0.0.0/24"
                    ],
                    "matchVariables": [
                      {
                        "selector": null,
                        "variableName": "RemoteAddr"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Rule2",
                "action": "Block",
                "priority": 2,
                "ruleType": "MatchRule",
                "matchConditions": [
                  {
                    "operator": "IPMatch",
                    "matchValues": [
                      "192.168.1.0/24"
                    ],
                    "matchVariables": [
                      {
                        "selector": null,
                        "variableName": "RemoteAddr"
                      }
                    ]
                  },
                  {
                    "operator": "Contains",
                    "matchValues": [
                      "Windows"
                    ],
                    "matchVariables": [
                      {
                        "selector": "UserAgent",
                        "variableName": "RequestHeaders"
                      }
                    ]
                  }
                ]
              }
            ],
            "managedRules": {
              "managedRuleSets": [
                {
                  "ruleSetType": "OWASP",
                  "ruleSetVersion": "3.0"
                }
              ]
            }
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/Policy1",
          "name": "Policy1",
          "tags": {
            "key1": "value1",
            "key2": "value2"
          },
          "type": "Microsoft.Network/applicationgatewaywebapplicationfirewallpolicies",
          "location": "WestUs",
          "properties": {
            "customRules": [
              {
                "name": "Rule1",
                "action": "Block",
                "priority": 1,
                "ruleType": "MatchRule",
                "matchConditions": [
                  {
                    "operator": "IPMatch",
                    "transforms": [],
                    "matchValues": [
                      "192.168.1.0/24",
                      "10.0.0.0/24"
                    ],
                    "matchVariables": [
                      {
                        "selector": null,
                        "variableName": "RemoteAddr"
                      }
                    ],
                    "negationConditon": false
                  }
                ]
              },
              {
                "name": "Rule2",
                "action": "Block",
                "priority": 2,
                "ruleType": "MatchRule",
                "matchConditions": [
                  {
                    "operator": "IPMatch",
                    "matchValues": [
                      "192.168.1.0/24"
                    ],
                    "matchVariables": [
                      {
                        "selector": null,
                        "variableName": "RemoteAddr"
                      }
                    ],
                    "negationConditon": false
                  },
                  {
                    "operator": "Contains",
                    "matchValues": [
                      "Windows"
                    ],
                    "matchVariables": [
                      {
                        "selector": "UserAgent",
                        "variableName": "RequestHeader"
                      }
                    ],
                    "negationConditon": false
                  }
                ]
              }
            ],
            "managedRules": {
              "managedRuleSets": [
                {
                  "ruleSetType": "OWASP",
                  "ruleSetVersion": "3.0"
                }
              ]
            },
            "resourceState": "Enabled",
            "policySettings": {
              "mode": "Detection",
              "state": "Enabled",
              "requestBodyCheck": true,
              "fileUploadLimitInMb": 750,
              "maxRequestBodySizeInKb": 128
            },
            "provisioningState": "Succeeded"
          }
        }
      ]
  WebApplicationFirewallPolicies.Delete:
    description: |-
      Deletes Policy.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/webapplicationfirewallpolicies/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  WebApplicationFirewallPolicies.Get:
    description: |-
      Retrieve protection policy with specified name within a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/webapplicationfirewallpolicies/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/Policy1",
          "name": "Policy1",
          "tags": {
            "key1": "value1",
            "key2": "value2"
          },
          "type": "Microsoft.Network/applicationgatewaywebapplicationfirewallpolicies",
          "location": "WestUs",
          "properties": {
            "customRules": [
              {
                "name": "Rule1",
                "action": "Block",
                "priority": 1,
                "ruleType": "MatchRule",
                "matchConditions": [
                  {
                    "operator": "IPMatch",
                    "transforms": [],
                    "matchValues": [
                      "192.168.1.0/24",
                      "10.0.0.0/24"
                    ],
                    "matchVariables": [
                      {
                        "selector": null,
                        "variableName": "RemoteAddr"
                      }
                    ],
                    "negationConditon": false
                  }
                ]
              },
              {
                "name": "Rule2",
                "action": "Block",
                "priority": 2,
                "ruleType": "MatchRule",
                "matchConditions": [
                  {
                    "operator": "IPMatch",
                    "matchValues": [
                      "192.168.1.0/24"
                    ],
                    "matchVariables": [
                      {
                        "selector": null,
                        "variableName": "RemoteAddr"
                      }
                    ],
                    "negationConditon": false
                  },
                  {
                    "operator": "Contains",
                    "matchValues": [
                      "Windows"
                    ],
                    "matchVariables": [
                      {
                        "selector": "UserAgent",
                        "variableName": "RequestHeader"
                      }
                    ],
                    "negationConditon": false
                  }
                ]
              }
            ],
            "managedRules": {
              "exclusions": [
                {
                  "selector": "testHeader1",
                  "matchVariable": "RequestHeaderNames",
                  "selectorMatchOperator": "Equals"
                },
                {
                  "selector": "testHeader2",
                  "matchVariable": "RequestHeaderNames",
                  "selectorMatchOperator": "StartsWith"
                }
              ],
              "managedRuleSets": [
                {
                  "ruleSetType": "OWASP",
                  "ruleSetVersion": "3.0",
                  "ruleGroupOverrides": [
                    {
                      "rules": [
                        {
                          "state": "Disabled",
                          "ruleId": "942130"
                        },
                        {
                          "state": "Disabled",
                          "ruleId": "942110"
                        }
                      ],
                      "ruleGroupName": "REQUEST-942-APPLICATION-ATTACK-SQLI"
                    },
                    {
                      "rules": [
                        {
                          "state": "Disabled",
                          "ruleId": "920100"
                        },
                        {
                          "state": "Disabled",
                          "ruleId": "920120"
                        }
                      ],
                      "ruleGroupName": "REQUEST-920-PROTOCOL-ENFORCEMENT"
                    }
                  ]
                }
              ]
            },
            "resourceState": "Enabled",
            "policySettings": {
              "mode": "Prevention",
              "state": "Enabled",
              "requestBodyCheck": true,
              "fileUploadLimitInMb": 750,
              "maxRequestBodySizeInKb": 128
            },
            "provisioningState": "Succeeded"
          }
        }
      ]
  WebApplicationFirewallPolicies.List:
    description: |-
      Lists all of the protection policies within a resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/webapplicationfirewallpolicies/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/Policy1",
              "name": "Policy1",
              "tags": {
                "key1": "value1",
                "key2": "value2"
              },
              "type": "Microsoft.Network/applicationgatewaywebapplicationfirewallpolicies",
              "location": "WestUs",
              "properties": {
                "customRules": [
                  {
                    "name": "Rule1",
                    "action": "Block",
                    "priority": 1,
                    "ruleType": "MatchRule",
                    "matchConditions": [
                      {
                        "operator": "IPMatch",
                        "transforms": [],
                        "matchValues": [
                          "192.168.1.0/24",
                          "10.0.0.0/24"
                        ],
                        "matchVariables": [
                          {
                            "selector": null,
                            "variableName": "RemoteAddr"
                          }
                        ],
                        "negationConditon": false
                      }
                    ]
                  },
                  {
                    "name": "Rule2",
                    "action": "Block",
                    "priority": 2,
                    "ruleType": "MatchRule",
                    "matchConditions": [
                      {
                        "operator": "IPMatch",
                        "matchValues": [
                          "192.168.1.0/24"
                        ],
                        "matchVariables": [
                          {
                            "selector": null,
                            "variableName": "RemoteAddr"
                          }
                        ],
                        "negationConditon": false
                      },
                      {
                        "operator": "Contains",
                        "matchValues": [
                          "Windows"
                        ],
                        "matchVariables": [
                          {
                            "selector": "UserAgent",
                            "variableName": "RequestHeader"
                          }
                        ],
                        "negationConditon": false
                      }
                    ]
                  }
                ],
                "managedRules": {
                  "managedRuleSets": [
                    {
                      "ruleSetType": "OWASP",
                      "ruleSetVersion": "3.0"
                    }
                  ]
                },
                "resourceState": "Enabled",
                "policySettings": {
                  "mode": "Detection",
                  "state": "Enabled",
                  "requestBodyCheck": true,
                  "fileUploadLimitInMb": 750,
                  "maxRequestBodySizeInKb": 128
                },
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]
  WebApplicationFirewallPolicies.ListAll:
    description: |-
      Gets all the WAF policies in a subscription.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/application-gateway/webapplicationfirewallpolicies/listall
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/Policy1",
              "name": "Policy1",
              "tags": {
                "key1": "value1",
                "key2": "value2"
              },
              "type": "Microsoft.Network/applicationgatewaywebapplicationfirewallpolicies",
              "location": "WestUs",
              "properties": {
                "customRules": [
                  {
                    "name": "Rule1",
                    "action": "Block",
                    "priority": 1,
                    "ruleType": "MatchRule",
                    "matchConditions": [
                      {
                        "operator": "IPMatch",
                        "transforms": [],
                        "matchValues": [
                          "192.168.1.0/24",
                          "10.0.0.0/24"
                        ],
                        "matchVariables": [
                          {
                            "selector": null,
                            "variableName": "RemoteAddr"
                          }
                        ],
                        "negationConditon": false
                      }
                    ]
                  },
                  {
                    "name": "Rule2",
                    "action": "Block",
                    "priority": 2,
                    "ruleType": "MatchRule",
                    "matchConditions": [
                      {
                        "operator": "IPMatch",
                        "matchValues": [
                          "192.168.1.0/24"
                        ],
                        "matchVariables": [
                          {
                            "selector": null,
                            "variableName": "RemoteAddr"
                          }
                        ],
                        "negationConditon": false
                      },
                      {
                        "operator": "Contains",
                        "matchValues": [
                          "Windows"
                        ],
                        "matchVariables": [
                          {
                            "selector": "UserAgent",
                            "variableName": "RequestHeader"
                          }
                        ],
                        "negationConditon": false
                      }
                    ]
                  }
                ],
                "managedRules": {
                  "managedRuleSets": [
                    {
                      "ruleSetType": "OWASP",
                      "ruleSetVersion": "3.0"
                    }
                  ]
                },
                "resourceState": "Enabled",
                "policySettings": {
                  "mode": "Prevention",
                  "state": "Enabled",
                  "requestBodyCheck": true,
                  "fileUploadLimitInMb": 750,
                  "maxRequestBodySizeInKb": 128
                },
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]