Product:
  name: Azure Front Door Service
  versions: [2019.5.1,2020.11.1]
  package: microsoft.azure.frontdoorservice
  description: |-
    FrontDoorService
  link: https://docs.microsoft.com/en-us/azure/frontdoor/
  contentType: json
Operations:
  FrontDoor.CheckFrontDoorNameAvailability.CheckFrontDoorNameAvailability:
    description: |-
      Check the availability of a Front Door resource name.
    versions:
      from: 2019.5.1
      to: 2019.5.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/frontdoor/checkfrontdoornameavailability/checkfrontdoornameavailability
    example:
      inputs: [
        {
          "name": "sampleName",
          "type": "Microsoft.Network/frontDoors"
        }
      ]
      outputs: [
        {
          "reason": "Name is already in use",
          "message": "Name not available",
          "nameAvailability": "Unavailable"
        }
      ]
  FrontDoor.CheckFrontDoorNameAvailabilityWithSubscription.CheckFrontDoorNameAvailabilityWithSubscription:
    description: |-
      Check the availability of a Front Door subdomain.
    versions:
      from: 2019.5.1
      to: 2019.5.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/frontdoor/checkfrontdoornameavailabilitywithsubscription/checkfrontdoornameavailabilitywithsubscription
    example:
      inputs: [
        {
          "name": "sampleName",
          "type": "Microsoft.Network/frontDoors/frontendEndpoints"
        }
      ]
      outputs: [
        {
          "reason": "Name is already in use",
          "message": "Name not available",
          "nameAvailability": "Unavailable"
        }
      ]
  FrontDoor.Endpoints.PurgeContent:
    description: |-
      Removes a content from Front Door.
    versions:
      from: 2019.5.1
      to: 2019.5.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/frontdoor/endpoints/purgecontent
    example:
      inputs: [
        {
          "contentPaths": [
            "/pictures.aspx",
            "/pictures/*"
          ]
        }
      ]
      outputs: [
        {}
      ]
  FrontDoor.FrontDoors.CreateOrUpdate:
    description: |-
      Creates a new Front Door with a Front Door name under the specified subscription and resource group.
    versions:
      from: 2019.5.1
      to: 2019.5.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/frontdoor/frontdoors/createorupdate
    example:
      inputs: [
        {
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          },
          "location": "westus",
          "properties": {
            "backendPools": [
              {
                "name": "backendPool1",
                "properties": {
                  "backends": [
                    {
                      "weight": 1,
                      "address": "w3.contoso.com",
                      "httpPort": 80,
                      "priority": 2,
                      "httpsPort": 443
                    },
                    {
                      "weight": 2,
                      "address": "contoso.com.website-us-west-2.othercloud.net",
                      "httpPort": 80,
                      "priority": 1,
                      "httpsPort": 443
                    },
                    {
                      "weight": 1,
                      "address": "contoso1.azurewebsites.net",
                      "httpPort": 80,
                      "priority": 1,
                      "httpsPort": 443
                    }
                  ],
                  "healthProbeSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/healthProbeSettings/healthProbeSettings1"
                  },
                  "loadBalancingSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/loadBalancingSettings/loadBalancingSettings1"
                  }
                }
              }
            ],
            "enabledState": "Enabled",
            "routingRules": [
              {
                "name": "routingRule1",
                "properties": {
                  "enabledState": "Enabled",
                  "patternsToMatch": [
                    "/*"
                  ],
                  "acceptedProtocols": [
                    "Http"
                  ],
                  "frontendEndpoints": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/frontendEndpoint1"
                    },
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/default"
                    }
                  ],
                  "routeConfiguration": {
                    "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                    "backendPool": {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/backendPools/backendPool1"
                    }
                  }
                }
              }
            ],
            "frontendEndpoints": [
              {
                "name": "frontendEndpoint1",
                "properties": {
                  "hostName": "www.contoso.com",
                  "sessionAffinityTtlSeconds": 60,
                  "sessionAffinityEnabledState": "Enabled",
                  "webApplicationFirewallPolicyLink": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoorWebApplicationFirewallPolicies/policy1"
                  }
                }
              },
              {
                "name": "default",
                "properties": {
                  "hostName": "frontDoor1.azurefd.net"
                }
              }
            ],
            "healthProbeSettings": [
              {
                "name": "healthProbeSettings1",
                "properties": {
                  "path": "/",
                  "protocol": "Http",
                  "enabledState": "Enabled",
                  "healthProbeMethod": "HEAD",
                  "intervalInSeconds": 120
                }
              }
            ],
            "backendPoolsSettings": {
              "sendRecvTimeoutSeconds": 60,
              "enforceCertificateNameCheck": "Enabled"
            },
            "loadBalancingSettings": [
              {
                "name": "loadBalancingSettings1",
                "properties": {
                  "sampleSize": 4,
                  "successfulSamplesRequired": 2
                }
              }
            ]
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1",
          "name": "frontDoor1",
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          },
          "type": "Microsoft.Network/frontDoor",
          "location": "westus",
          "properties": {
            "cname": "frontDoor1.azurefd.net",
            "backendPools": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/backendPools/backendPool1",
                "name": "backendPool1",
                "properties": {
                  "backends": [
                    {
                      "weight": 1,
                      "address": "w3.contoso.com",
                      "httpPort": 80,
                      "priority": 2,
                      "httpsPort": 443,
                      "enabledState": "Enabled"
                    },
                    {
                      "weight": 2,
                      "address": "contoso.com.website-us-west-2.othercloud.net",
                      "httpPort": 80,
                      "priority": 1,
                      "httpsPort": 443,
                      "enabledState": "Enabled"
                    },
                    {
                      "weight": 1,
                      "address": "contoso1.azurewebsites.net",
                      "httpPort": 80,
                      "priority": 1,
                      "httpsPort": 443,
                      "enabledState": "Enabled"
                    }
                  ],
                  "healthProbeSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/healthProbeSettings/healthProbeSettings1"
                  },
                  "loadBalancingSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/loadBalancingSettings/loadBalancingSettings1"
                  }
                }
              }
            ],
            "enabledState": "Enabled",
            "routingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/routingRules/routingRule1",
                "name": "routingRule1",
                "properties": {
                  "enabledState": "Enabled",
                  "patternsToMatch": [
                    "/*"
                  ],
                  "acceptedProtocols": [
                    "Http"
                  ],
                  "frontendEndpoints": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/frontendEndpoint1"
                    },
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/default"
                    }
                  ],
                  "routeConfiguration": {
                    "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                    "backendPool": {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/backendPools/backendPool1"
                    },
                    "forwardingProtocol": "MatchRequest",
                    "customForwardingPath": ""
                  }
                }
              }
            ],
            "resourceState": "Creating",
            "frontendEndpoints": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/frontendEndpoint1",
                "name": "frontendEndpoint1",
                "properties": {
                  "hostName": "www.contoso.com",
                  "sessionAffinityTtlSeconds": 60,
                  "sessionAffinityEnabledState": "Enabled",
                  "webApplicationFirewallPolicyLink": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoorWebApplicationFirewallPolicies/policy1"
                  }
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/default",
                "name": "default",
                "properties": {
                  "hostName": "frontDoor1.azurefd.net"
                }
              }
            ],
            "provisioningState": "Succeeded",
            "healthProbeSettings": [
              {
                "name": "healthProbeSettings1",
                "properties": {
                  "path": "/",
                  "protocol": "Http",
                  "enabledState": "Enabled",
                  "healthProbeMethod": "HEAD",
                  "intervalInSeconds": 120
                }
              }
            ],
            "backendPoolsSettings": {
              "sendRecvTimeoutSeconds": 60,
              "enforceCertificateNameCheck": "Enabled"
            },
            "loadBalancingSettings": [
              {
                "name": "loadBalancingSettings1",
                "properties": {
                  "sampleSize": 4,
                  "successfulSamplesRequired": 2
                }
              }
            ]
          }
        }
      ]
  FrontDoor.FrontDoors.Delete:
    description: |-
      Deletes an existing Front Door with the specified parameters.
    versions:
      from: 2019.5.1
      to: 2019.5.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/frontdoor/frontdoors/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  FrontDoor.FrontDoors.Get:
    description: |-
      Gets a Front Door with the specified Front Door name under the specified subscription and resource group.
    versions:
      from: 2019.5.1
      to: 2019.5.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/frontdoor/frontdoors/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1",
          "name": "frontDoor1",
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          },
          "type": "Microsoft.Network/frontDoor",
          "location": "westus",
          "properties": {
            "cname": "frontDoor1.azurefd.net",
            "backendPools": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/backendPools/backendPool1",
                "name": "backendPool1",
                "properties": {
                  "backends": [
                    {
                      "weight": 1,
                      "address": "w3.contoso.com",
                      "httpPort": 80,
                      "priority": 2,
                      "httpsPort": 443,
                      "enabledState": "Enabled"
                    },
                    {
                      "weight": 2,
                      "address": "contoso.com.website-us-west-2.othercloud.net",
                      "httpPort": 80,
                      "priority": 1,
                      "httpsPort": 443,
                      "enabledState": "Enabled"
                    },
                    {
                      "weight": 1,
                      "address": "contoso1.azurewebsites.net",
                      "httpPort": 80,
                      "priority": 1,
                      "httpsPort": 443,
                      "enabledState": "Enabled"
                    }
                  ],
                  "healthProbeSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/healthProbeSettings/healthProbeSettings1"
                  },
                  "loadBalancingSettings": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/loadBalancingSettings/loadBalancingSettings1"
                  }
                }
              }
            ],
            "enabledState": "Enabled",
            "routingRules": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/routingRules/routingRule1",
                "name": "routingRule1",
                "properties": {
                  "enabledState": "Enabled",
                  "patternsToMatch": [
                    "/*"
                  ],
                  "acceptedProtocols": [
                    "Http"
                  ],
                  "frontendEndpoints": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/frontendEndpoint1"
                    },
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/default"
                    }
                  ],
                  "routeConfiguration": {
                    "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                    "backendPool": {
                      "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/backendPools/backendPool1"
                    },
                    "forwardingProtocol": "MatchRequest",
                    "customForwardingPath": ""
                  }
                }
              }
            ],
            "resourceState": "Enabled",
            "frontendEndpoints": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/frontendEndpoint1",
                "name": "frontendEndpoint1",
                "properties": {
                  "hostName": "www.contoso.com",
                  "sessionAffinityTtlSeconds": 60,
                  "sessionAffinityEnabledState": "Enabled",
                  "webApplicationFirewallPolicyLink": {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoorWebApplicationFirewallPolicies/policy1"
                  }
                }
              },
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/default",
                "name": "default",
                "properties": {
                  "hostName": "frontDoor1.azurefd.net"
                }
              }
            ],
            "provisioningState": "Succeeded",
            "healthProbeSettings": [
              {
                "name": "healthProbeSettings1",
                "properties": {
                  "path": "/",
                  "protocol": "Http",
                  "enabledState": "Enabled",
                  "healthProbeMethod": "HEAD",
                  "intervalInSeconds": 120
                }
              }
            ],
            "backendPoolsSettings": {
              "sendRecvTimeoutSeconds": 60,
              "enforceCertificateNameCheck": "Enabled"
            },
            "loadBalancingSettings": [
              {
                "name": "loadBalancingSettings1",
                "properties": {
                  "sampleSize": 4,
                  "successfulSamplesRequired": 2
                }
              }
            ]
          }
        }
      ]
  FrontDoor.FrontDoors.List:
    description: |-
      Lists all of the Front Doors within an Azure subscription.
    versions:
      from: 2019.5.1
      to: 2019.5.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/frontdoor/frontdoors/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1",
              "name": "frontDoor1",
              "tags": {
                "tag1": "value1",
                "tag2": "value2"
              },
              "type": "Microsoft.Network/frontDoor",
              "location": "westus",
              "properties": {
                "cname": "frontDoor1.azurefd.net",
                "backendPools": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/backendPools/backendPool1",
                    "name": "backendPool1",
                    "properties": {
                      "backends": [
                        {
                          "weight": 1,
                          "address": "w3.contoso.com",
                          "httpPort": 80,
                          "priority": 2,
                          "httpsPort": 443,
                          "enabledState": "Enabled"
                        },
                        {
                          "weight": 2,
                          "address": "contoso.com.website-us-west-2.othercloud.net",
                          "httpPort": 80,
                          "priority": 1,
                          "httpsPort": 443,
                          "enabledState": "Enabled"
                        },
                        {
                          "weight": 1,
                          "address": "contoso1.azurewebsites.net",
                          "httpPort": 80,
                          "priority": 1,
                          "httpsPort": 443,
                          "enabledState": "Enabled"
                        }
                      ],
                      "healthProbeSettings": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/healthProbeSettings/healthProbeSettings1"
                      },
                      "loadBalancingSettings": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/loadBalancingSettings/loadBalancingSettings1"
                      }
                    }
                  }
                ],
                "enabledState": "Enabled",
                "routingRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/routingRules/routingRule1",
                    "name": "routingRule1",
                    "properties": {
                      "enabledState": "Enabled",
                      "patternsToMatch": [
                        "/*"
                      ],
                      "acceptedProtocols": [
                        "Http"
                      ],
                      "frontendEndpoints": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/frontendEndpoint1"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/default"
                        }
                      ],
                      "routeConfiguration": {
                        "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                        "backendPool": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/backendPools/backendPool1"
                        },
                        "forwardingProtocol": "MatchRequest",
                        "customForwardingPath": ""
                      }
                    }
                  }
                ],
                "resourceState": "Enabled",
                "frontendEndpoints": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/frontendEndpoint1",
                    "name": "frontendEndpoint1",
                    "properties": {
                      "hostName": "www.contoso.com",
                      "sessionAffinityTtlSeconds": 60,
                      "sessionAffinityEnabledState": "Enabled",
                      "webApplicationFirewallPolicyLink": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoorWebApplicationFirewallPolicies/policy1"
                      }
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/default",
                    "name": "default",
                    "properties": {
                      "hostName": "frontDoor1.azurefd.net"
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "healthProbeSettings": [
                  {
                    "name": "healthProbeSettings1",
                    "properties": {
                      "path": "/",
                      "protocol": "Http",
                      "enabledState": "Enabled",
                      "healthProbeMethod": "HEAD",
                      "intervalInSeconds": 120
                    }
                  }
                ],
                "backendPoolsSettings": {
                  "enforceCertificateNameCheck": "Enabled"
                },
                "loadBalancingSettings": [
                  {
                    "name": "loadBalancingSettings1",
                    "properties": {
                      "sampleSize": 4,
                      "successfulSamplesRequired": 2
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  FrontDoor.FrontDoors.ListByResourceGroup:
    description: |-
      Lists all of the Front Doors within a resource group under a subscription.
    versions:
      from: 2019.5.1
      to: 2019.5.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/frontdoor/frontdoors/listbyresourcegroup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1",
              "name": "frontDoor1",
              "tags": {
                "tag1": "value1",
                "tag2": "value2"
              },
              "type": "Microsoft.Network/frontDoor",
              "location": "westus",
              "properties": {
                "cname": "frontDoor1.azurefd.net",
                "backendPools": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/backendPools/backendPool1",
                    "name": "backendPool1",
                    "properties": {
                      "backends": [
                        {
                          "weight": 1,
                          "address": "w3.contoso.com",
                          "httpPort": 80,
                          "priority": 2,
                          "httpsPort": 443,
                          "enabledState": "Enabled"
                        },
                        {
                          "weight": 2,
                          "address": "contoso.com.website-us-west-2.othercloud.net",
                          "httpPort": 80,
                          "priority": 1,
                          "httpsPort": 443,
                          "enabledState": "Enabled"
                        },
                        {
                          "weight": 1,
                          "address": "contoso1.azurewebsites.net",
                          "httpPort": 80,
                          "priority": 1,
                          "httpsPort": 443,
                          "enabledState": "Enabled"
                        }
                      ],
                      "healthProbeSettings": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/healthProbeSettings/healthProbeSettings1"
                      },
                      "loadBalancingSettings": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/loadBalancingSettings/loadBalancingSettings1"
                      }
                    }
                  }
                ],
                "enabledState": "Enabled",
                "routingRules": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/routingRules/routingRule1",
                    "name": "routingRule1",
                    "properties": {
                      "enabledState": "Enabled",
                      "patternsToMatch": [
                        "/*"
                      ],
                      "acceptedProtocols": [
                        "Http"
                      ],
                      "frontendEndpoints": [
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/frontendEndpoint1"
                        },
                        {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/default"
                        }
                      ],
                      "routeConfiguration": {
                        "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                        "backendPool": {
                          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/backendPools/backendPool1"
                        },
                        "forwardingProtocol": "MatchRequest",
                        "customForwardingPath": ""
                      }
                    }
                  }
                ],
                "resourceState": "Enabled",
                "frontendEndpoints": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/frontendEndpoint1",
                    "name": "frontendEndpoint1",
                    "properties": {
                      "hostName": "www.contoso.com",
                      "sessionAffinityTtlSeconds": 60,
                      "sessionAffinityEnabledState": "Enabled",
                      "webApplicationFirewallPolicyLink": {
                        "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoorWebApplicationFirewallPolicies/policy1"
                      }
                    }
                  },
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/default",
                    "name": "default",
                    "properties": {
                      "hostName": "frontDoor1.azurefd.net"
                    }
                  }
                ],
                "provisioningState": "Succeeded",
                "healthProbeSettings": [
                  {
                    "name": "healthProbeSettings1",
                    "properties": {
                      "path": "/",
                      "protocol": "Http",
                      "enabledState": "Enabled",
                      "healthProbeMethod": "HEAD",
                      "intervalInSeconds": 120
                    }
                  }
                ],
                "backendPoolsSettings": {
                  "sendRecvTimeoutSeconds": 60,
                  "enforceCertificateNameCheck": "Enabled"
                },
                "loadBalancingSettings": [
                  {
                    "name": "loadBalancingSettings1",
                    "properties": {
                      "sampleSize": 4,
                      "successfulSamplesRequired": 2
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
  FrontDoor.FrontDoors.ValidateCustomDomain:
    description: |-
      Validates the custom domain mapping to ensure it maps to the correct Front Door endpoint in DNS.
    versions:
      from: 2019.5.1
      to: 2019.5.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/frontdoor/frontdoors/validatecustomdomain
    example:
      inputs: [
        {
          "hostName": "www.someDomain.com"
        }
      ]
      outputs: [
        {
          "reason": null,
          "message": null,
          "customDomainValidated": true
        }
      ]
  FrontDoor.FrontendEndpoints.DisableHttps:
    description: |-
      Disables a frontendEndpoint for HTTPS traffic
    versions:
      from: 2019.5.1
      to: 2019.5.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/frontdoor/frontendendpoints/disablehttps
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  FrontDoor.FrontendEndpoints.EnableHttps:
    description: |-
      Enables a frontendEndpoint for HTTPS traffic
    versions:
      from: 2019.5.1
      to: 2019.5.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/frontdoor/frontendendpoints/enablehttps
    example:
      inputs: [
        {
          "protocolType": "ServerNameIndication",
          "certificateSource": "AzureKeyVault",
          "minimumTlsVersion": "1.0",
          "keyVaultCertificateSourceParameters": {
            "vault": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.KeyVault/vaults/vault1"
            },
            "secretName": "secret1",
            "secretVersion": "00000000-0000-0000-0000-000000000000"
          }
        }
      ]
      outputs: [
        {}
      ]
  FrontDoor.FrontendEndpoints.Get:
    description: |-
      Gets a Frontend endpoint with the specified name within the specified Front Door.
    versions:
      from: 2019.5.1
      to: 2019.5.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/frontdoor/frontendendpoints/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/frontendEndpoint1",
          "name": "frontendEndpoint1",
          "properties": {
            "hostName": "www.contoso.com",
            "sessionAffinityTtlSeconds": 60,
            "sessionAffinityEnabledState": "Enabled",
            "webApplicationFirewallPolicyLink": {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoorWebApplicationFirewallPolicies/policy1"
            }
          }
        }
      ]
  FrontDoor.FrontendEndpoints.ListByFrontDoor:
    description: |-
      Lists all of the frontend endpoints within a Front Door.
    versions:
      from: 2019.5.1
      to: 2019.5.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/frontdoor/frontendendpoints/listbyfrontdoor
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/frontendEndpoint1",
              "name": "frontendEndpoint1",
              "properties": {
                "hostName": "www.contoso.com",
                "sessionAffinityTtlSeconds": 60,
                "sessionAffinityEnabledState": "Enabled",
                "webApplicationFirewallPolicyLink": {
                  "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoorWebApplicationFirewallPolicies/policy1"
                }
              }
            }
          ]
        }
      ]
  WebApplicationFirewall.ManagedRuleSets.List:
    description: |-
      Lists all available managed rule sets.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/webapplicationfirewall/managedrulesets/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/providers/Microsoft.Network/FrontDoorWebApplicationFirewallManagedRuleSets",
              "name": "DefaultRuleSet_1.0",
              "type": "Microsoft.Network/frontdoorwebapplicationfirewallmanagedrulesets",
              "properties": {
                "ruleSetId": "8125d145-ddc5-4d90-9bc3-24c5f2de69a2",
                "ruleGroups": [
                  {
                    "rules": [
                      {
                        "ruleId": "942100",
                        "description": "SQL Injection Attack Detected via libinjection",
                        "defaultState": "Enabled",
                        "defaultAction": "Block"
                      },
                      {
                        "ruleId": "942110",
                        "description": "SQL Injection Attack: Common Injection Testing Detected",
                        "defaultState": "Enabled",
                        "defaultAction": "Block"
                      }
                    ],
                    "description": "SQL injection",
                    "ruleGroupName": "SQLI"
                  },
                  {
                    "rules": [
                      {
                        "ruleId": "941100",
                        "description": "XSS Attack Detected via libinjection",
                        "defaultState": "Enabled",
                        "defaultAction": "Block"
                      },
                      {
                        "ruleId": "941101",
                        "description": "XSS Attack Detected via libinjection",
                        "defaultState": "Enabled",
                        "defaultAction": "Block"
                      },
                      {
                        "ruleId": "941110",
                        "description": "XSS Filter - Category 1: Script Tag Vector",
                        "defaultState": "Enabled",
                        "defaultAction": "Block"
                      }
                    ],
                    "description": "Cross-site scripting",
                    "ruleGroupName": "XSS"
                  }
                ],
                "ruleSetType": "DefaultRuleSet",
                "ruleSetVersion": "1.0",
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]
  WebApplicationFirewall.Policies.CreateOrUpdate:
    description: |-
      Create or update policy with specified rule set name within a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/webapplicationfirewall/policies/createorupdate
    example:
      inputs: [
        {
          "sku": {
            "name": "Classic_AzureFrontDoor"
          },
          "properties": {
            "customRules": {
              "rules": [
                {
                  "name": "Rule1",
                  "action": "Block",
                  "priority": 1,
                  "ruleType": "RateLimitRule",
                  "matchConditions": [
                    {
                      "operator": "IPMatch",
                      "matchValue": [
                        "192.168.1.0/24",
                        "10.0.0.0/24"
                      ],
                      "matchVariable": "RemoteAddr"
                    }
                  ],
                  "rateLimitThreshold": 1000
                },
                {
                  "name": "Rule2",
                  "action": "Block",
                  "priority": 2,
                  "ruleType": "MatchRule",
                  "matchConditions": [
                    {
                      "operator": "GeoMatch",
                      "matchValue": [
                        "CH"
                      ],
                      "matchVariable": "RemoteAddr"
                    },
                    {
                      "operator": "Contains",
                      "selector": "UserAgent",
                      "matchValue": [
                        "windows"
                      ],
                      "transforms": [
                        "Lowercase"
                      ],
                      "matchVariable": "RequestHeader"
                    }
                  ]
                }
              ]
            },
            "managedRules": {
              "managedRuleSets": [
                {
                  "exclusions": [
                    {
                      "selector": "User-Agent",
                      "matchVariable": "RequestHeaderNames",
                      "selectorMatchOperator": "Equals"
                    }
                  ],
                  "ruleSetType": "DefaultRuleSet",
                  "ruleSetAction": "Block",
                  "ruleSetVersion": "1.0",
                  "ruleGroupOverrides": [
                    {
                      "rules": [
                        {
                          "action": "Redirect",
                          "ruleId": "942100",
                          "exclusions": [
                            {
                              "selector": "query",
                              "matchVariable": "QueryStringArgNames",
                              "selectorMatchOperator": "Equals"
                            }
                          ],
                          "enabledState": "Enabled"
                        },
                        {
                          "ruleId": "942110",
                          "enabledState": "Disabled"
                        }
                      ],
                      "exclusions": [
                        {
                          "selector": "token",
                          "matchVariable": "RequestCookieNames",
                          "selectorMatchOperator": "StartsWith"
                        }
                      ],
                      "ruleGroupName": "SQLI"
                    }
                  ]
                }
              ]
            },
            "policySettings": {
              "mode": "Prevention",
              "redirectUrl": "http://www.bing.com",
              "enabledState": "Enabled",
              "requestBodyCheck": "Disabled",
              "customBlockResponseBody": "PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==",
              "customBlockResponseStatusCode": 499
            }
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/Policy1",
          "sku": {
            "name": "Classic_AzureFrontDoor"
          },
          "name": "Policy1",
          "tags": {
            "key1": "value1",
            "key2": "value2"
          },
          "type": "Microsoft.Network/frontdoorwebapplicationfirewallpolicies",
          "location": "WestUs",
          "properties": {
            "customRules": {
              "rules": [
                {
                  "name": "Rule1",
                  "action": "Block",
                  "priority": 1,
                  "ruleType": "RateLimitRule",
                  "enabledState": "Enabled",
                  "matchConditions": [
                    {
                      "operator": "IPMatch",
                      "selector": null,
                      "matchValue": [
                        "192.168.1.0/24",
                        "10.0.0.0/24"
                      ],
                      "transforms": [],
                      "matchVariable": "RemoteAddr",
                      "negateCondition": false
                    }
                  ],
                  "rateLimitThreshold": 1000,
                  "rateLimitDurationInMinutes": 0
                },
                {
                  "name": "Rule2",
                  "action": "Block",
                  "priority": 2,
                  "ruleType": "MatchRule",
                  "enabledState": "Enabled",
                  "matchConditions": [
                    {
                      "operator": "GeoMatch",
                      "selector": null,
                      "matchValue": [
                        "CH"
                      ],
                      "matchVariable": "RemoteAddr",
                      "negateCondition": false
                    },
                    {
                      "operator": "Contains",
                      "selector": "UserAgent",
                      "matchValue": [
                        "windows"
                      ],
                      "transforms": [
                        "Lowercase"
                      ],
                      "matchVariable": "RequestHeader",
                      "negateCondition": false
                    }
                  ],
                  "rateLimitThreshold": 0,
                  "rateLimitDurationInMinutes": 0
                }
              ]
            },
            "managedRules": {
              "managedRuleSets": [
                {
                  "exclusions": [
                    {
                      "selector": "User-Agent",
                      "matchVariable": "RequestHeaderNames",
                      "selectorMatchOperator": "Equals"
                    }
                  ],
                  "ruleSetType": "DefaultRuleSet",
                  "ruleSetAction": "Block",
                  "ruleSetVersion": "1.0",
                  "ruleGroupOverrides": [
                    {
                      "rules": [
                        {
                          "action": "Redirect",
                          "ruleId": "942100",
                          "exclusions": [
                            {
                              "selector": "query",
                              "matchVariable": "QueryStringArgNames",
                              "selectorMatchOperator": "Equals"
                            }
                          ],
                          "enabledState": "Enabled"
                        },
                        {
                          "ruleId": "942110",
                          "enabledState": "Disabled"
                        }
                      ],
                      "exclusions": [
                        {
                          "selector": "token",
                          "matchVariable": "RequestCookieNames",
                          "selectorMatchOperator": "StartsWith"
                        }
                      ],
                      "ruleGroupName": "SQLI"
                    }
                  ]
                }
              ]
            },
            "resourceState": "Enabled",
            "policySettings": {
              "mode": "Prevention",
              "redirectUrl": "http://www.bing.com",
              "enabledState": "Enabled",
              "requestBodyCheck": "Disabled",
              "customBlockResponseBody": "PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==",
              "customBlockResponseStatusCode": 499
            },
            "provisioningState": "Succeeded",
            "securityPolicyLinks": [],
            "frontendEndpointLinks": []
          }
        }
      ]
  WebApplicationFirewall.Policies.Delete:
    description: |-
      Deletes Policy
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/webapplicationfirewall/policies/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  WebApplicationFirewall.Policies.Get:
    description: |-
      Retrieve protection policy with specified name within a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/webapplicationfirewall/policies/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/Policy1",
          "sku": {
            "name": "Classic_AzureFrontDoor"
          },
          "name": "Policy1",
          "tags": {
            "key1": "value1",
            "key2": "value2"
          },
          "type": "Microsoft.Network/frontdoorwebapplicationfirewallpolicies",
          "location": "WestUs",
          "properties": {
            "customRules": {
              "rules": [
                {
                  "name": "Rule1",
                  "action": "Block",
                  "priority": 1,
                  "ruleType": "RateLimitRule",
                  "enabledState": "Enabled",
                  "matchConditions": [
                    {
                      "operator": "IPMatch",
                      "selector": null,
                      "matchValue": [
                        "192.168.1.0/24",
                        "10.0.0.0/24"
                      ],
                      "transforms": [],
                      "matchVariable": "RemoteAddr",
                      "negateCondition": false
                    }
                  ],
                  "rateLimitThreshold": 1000,
                  "rateLimitDurationInMinutes": 0
                },
                {
                  "name": "Rule2",
                  "action": "Block",
                  "priority": 2,
                  "ruleType": "MatchRule",
                  "enabledState": "Enabled",
                  "matchConditions": [
                    {
                      "operator": "GeoMatch",
                      "selector": null,
                      "matchValue": [
                        "CH"
                      ],
                      "matchVariable": "RemoteAddr",
                      "negateCondition": false
                    },
                    {
                      "operator": "Contains",
                      "selector": "UserAgent",
                      "matchValue": [
                        "windows"
                      ],
                      "transforms": [
                        "Lowercase"
                      ],
                      "matchVariable": "RequestHeader",
                      "negateCondition": false
                    }
                  ],
                  "rateLimitThreshold": 0,
                  "rateLimitDurationInMinutes": 0
                }
              ]
            },
            "managedRules": {
              "managedRuleSets": [
                {
                  "exclusions": [
                    {
                      "selector": "User-Agent",
                      "matchVariable": "RequestHeaderNames",
                      "selectorMatchOperator": "Equals"
                    }
                  ],
                  "ruleSetType": "DefaultRuleSet",
                  "ruleSetAction": "Block",
                  "ruleSetVersion": "1.0",
                  "ruleGroupOverrides": [
                    {
                      "rules": [
                        {
                          "action": "Redirect",
                          "ruleId": "942100",
                          "exclusions": [],
                          "enabledState": "Enabled"
                        },
                        {
                          "ruleId": "942110",
                          "enabledState": "Disabled"
                        }
                      ],
                      "exclusions": [],
                      "ruleGroupName": "SQLI"
                    }
                  ]
                }
              ]
            },
            "resourceState": "Enabled",
            "policySettings": {
              "mode": "Prevention",
              "redirectUrl": "http://www.bing.com",
              "enabledState": "Enabled",
              "requestBodyCheck": "Disabled",
              "customBlockResponseBody": "PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==",
              "customBlockResponseStatusCode": 499
            },
            "provisioningState": "Succeeded",
            "securityPolicyLinks": [],
            "frontendEndpointLinks": [
              {
                "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontdoors/fd1/frontendendpoints/fd1-azurefd-net"
              }
            ]
          }
        }
      ]
  WebApplicationFirewall.Policies.List:
    description: |-
      Lists all of the protection policies within a resource group.
    versions:
      from: 2020.11.1
      to: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/frontdoorservice/webapplicationfirewall/policies/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/Policy1",
              "sku": {
                "name": "Classic_AzureFrontDoor"
              },
              "name": "Policy1",
              "tags": {
                "key1": "value1",
                "key2": "value2"
              },
              "type": "Microsoft.Network/frontdoorwebapplicationfirewallpolicies",
              "location": "WestUs",
              "properties": {
                "customRules": {
                  "rules": [
                    {
                      "name": "Rule1",
                      "action": "Block",
                      "priority": 1,
                      "ruleType": "RateLimitRule",
                      "enabledState": "Enabled",
                      "matchConditions": [
                        {
                          "operator": "IPMatch",
                          "selector": null,
                          "matchValue": [
                            "192.168.1.0/24",
                            "10.0.0.0/24"
                          ],
                          "transforms": [],
                          "matchVariable": "RemoteAddr",
                          "negateCondition": false
                        }
                      ],
                      "rateLimitThreshold": 1000,
                      "rateLimitDurationInMinutes": 0
                    },
                    {
                      "name": "Rule2",
                      "action": "Block",
                      "priority": 2,
                      "ruleType": "MatchRule",
                      "enabledState": "Enabled",
                      "matchConditions": [
                        {
                          "operator": "GeoMatch",
                          "selector": null,
                          "matchValue": [
                            "CH"
                          ],
                          "matchVariable": "RemoteAddr",
                          "negateCondition": false
                        },
                        {
                          "operator": "Contains",
                          "selector": "UserAgent",
                          "matchValue": [
                            "windows"
                          ],
                          "transforms": [
                            "Lowercase"
                          ],
                          "matchVariable": "RequestHeader",
                          "negateCondition": false
                        }
                      ],
                      "rateLimitThreshold": 0,
                      "rateLimitDurationInMinutes": 0
                    }
                  ]
                },
                "managedRules": {
                  "managedRuleSets": [
                    {
                      "exclusions": [
                        {
                          "selector": "User-Agent",
                          "matchVariable": "RequestHeaderNames",
                          "selectorMatchOperator": "Equals"
                        }
                      ],
                      "ruleSetType": "DefaultRuleSet",
                      "ruleSetVersion": "1.0",
                      "ruleGroupOverrides": [
                        {
                          "rules": [
                            {
                              "action": "Redirect",
                              "ruleId": "942100",
                              "enabledState": "Enabled"
                            },
                            {
                              "ruleId": "942110",
                              "enabledState": "Disabled"
                            }
                          ],
                          "ruleGroupName": "SQLI"
                        }
                      ]
                    }
                  ]
                },
                "resourceState": "Enabled",
                "policySettings": {
                  "mode": "Prevention",
                  "redirectUrl": "http://www.bing.com",
                  "enabledState": "Enabled",
                  "customBlockResponseBody": "PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==",
                  "customBlockResponseStatusCode": 499
                },
                "provisioningState": "Succeeded",
                "securityPolicyLinks": [],
                "frontendEndpointLinks": [
                  {
                    "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontdoors/fd1/frontendendpoints/fd1-azurefd-net"
                  }
                ]
              }
            }
          ]
        }
      ]