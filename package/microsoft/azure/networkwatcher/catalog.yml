Product:
  name: Azure Network Watcher
  versions: [2020.11.1]
  package: microsoft.azure.networkwatcher
  description: |-
    NetworkWatcher
  link: https://docs.microsoft.com/en-us/azure/network-watcher/
  contentType: json
Operations:
  ConnectionMonitors.CreateOrUpdate:
    description: |-
      Create or update a connection monitor.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/connectionmonitors/createorupdate
    example:
      inputs: [
        {
          "location": "eastus",
          "properties": {
            "endpoints": [
              {
                "name": "source",
                "resourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/ct1"
              },
              {
                "name": "destination",
                "address": "bing.com"
              }
            ],
            "testGroups": [
              {
                "name": "tg",
                "sources": [
                  "source"
                ],
                "destinations": [
                  "destination"
                ],
                "testConfigurations": [
                  "tcp"
                ]
              }
            ],
            "testConfigurations": [
              {
                "name": "tcp",
                "protocol": "Tcp",
                "tcpConfiguration": {
                  "port": 80
                },
                "testFrequencySec": 60
              }
            ]
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1",
          "etag": "W/\"e7497f26-5f09-4559-900b-fe98f3dedb6f\"",
          "name": "cm1",
          "type": "Microsoft.Network/networkWatchers/connectionMonitors",
          "location": "eastus",
          "properties": {
            "endpoints": [
              {
                "name": "source",
                "resourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/ct1"
              },
              {
                "name": "destination",
                "address": "bing.com"
              }
            ],
            "testGroups": [
              {
                "name": "tg",
                "sources": [
                  "source"
                ],
                "destinations": [
                  "destination"
                ],
                "testConfigurations": [
                  "tcp"
                ]
              }
            ],
            "provisioningState": "Updating",
            "testConfigurations": [
              {
                "name": "tcp",
                "protocol": "Tcp",
                "tcpConfiguration": {
                  "port": 80
                },
                "testFrequencySec": 60
              }
            ]
          }
        }
      ]
  ConnectionMonitors.Delete:
    description: |-
      Deletes the specified connection monitor.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/connectionmonitors/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ConnectionMonitors.Get:
    description: |-
      Gets a connection monitor by name.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/connectionmonitors/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "cm1",
          "type": "Microsoft.Network/networkWatchers/connectionMonitors",
          "location": "eastus",
          "properties": {
            "endpoints": [
              {
                "name": "source",
                "resourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/ct1"
              },
              {
                "name": "destination",
                "address": "bing.com"
              }
            ],
            "testGroups": [
              {
                "name": "tg",
                "sources": [
                  "source"
                ],
                "destinations": [
                  "destination"
                ],
                "testConfigurations": [
                  "tcp"
                ]
              }
            ],
            "provisioningState": "Succeeded",
            "testConfigurations": [
              {
                "name": "tcp",
                "protocol": "Tcp",
                "tcpConfiguration": {
                  "port": 80
                },
                "testFrequencySec": 60
              }
            ]
          }
        }
      ]
  ConnectionMonitors.List:
    description: |-
      Lists all connection monitors for the specified Network Watcher.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/connectionmonitors/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "cm1",
              "type": "Microsoft.Network/networkWatchers/connectionMonitors",
              "location": "eastus",
              "properties": {
                "endpoints": [
                  {
                    "name": "source",
                    "resourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/ct1"
                  },
                  {
                    "name": "destination",
                    "address": "bing.com"
                  }
                ],
                "testGroups": [
                  {
                    "name": "tg",
                    "sources": [
                      "source"
                    ],
                    "destinations": [
                      "destination"
                    ],
                    "testConfigurations": [
                      "tcp"
                    ]
                  }
                ],
                "provisioningState": "Succeeded",
                "testConfigurations": [
                  {
                    "name": "tcp",
                    "protocol": "Tcp",
                    "tcpConfiguration": {
                      "port": 80
                    },
                    "testFrequencySec": 60
                  }
                ]
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm2",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "cm2",
              "type": "Microsoft.Network/networkWatchers/connectionMonitors",
              "location": "eastus",
              "properties": {
                "endpoints": [
                  {
                    "name": "source",
                    "resourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/ct2"
                  },
                  {
                    "name": "destination",
                    "address": "google.com"
                  }
                ],
                "testGroups": [
                  {
                    "name": "tg",
                    "sources": [
                      "source"
                    ],
                    "destinations": [
                      "destination"
                    ],
                    "testConfigurations": [
                      "tcp"
                    ]
                  }
                ],
                "provisioningState": "Succeeded",
                "testConfigurations": [
                  {
                    "name": "tcp",
                    "protocol": "Tcp",
                    "tcpConfiguration": {
                      "port": 80
                    },
                    "testFrequencySec": 60
                  }
                ]
              }
            }
          ]
        }
      ]
  ConnectionMonitors.Query:
    description: |-
      Query a snapshot of the most recent connection states.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/connectionmonitors/query
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "states": [
            {
              "hops": [
                {
                  "id": "7dbbe7aa-60ba-4650-831e-63d775d38e9e",
                  "type": "Source",
                  "issues": [],
                  "address": "10.1.1.4",
                  "nextHopIds": [
                    "75c8d819-b208-4584-a311-1aa45ce753f9"
                  ],
                  "resourceId": "subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkInterfaces/nic0/ipConfigurations/ipconfig1"
                },
                {
                  "id": "75c8d819-b208-4584-a311-1aa45ce753f9",
                  "type": "VirtualNetwork",
                  "issues": [],
                  "address": "192.168.100.4",
                  "nextHopIds": [],
                  "resourceId": "subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkInterfaces/nic1/ipConfigurations/ipconfig1"
                }
              ],
              "endTime": "2018-01-08T05:12:41.5265438Z",
              "startTime": "2018-01-08T03:42:33.3387305Z",
              "connectionState": "Reachable",
              "evaluationState": "Completed"
            }
          ],
          "sourceStatus": "Active"
        }
      ]
  ConnectionMonitors.Start:
    description: |-
      Starts the specified connection monitor.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/connectionmonitors/start
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ConnectionMonitors.Stop:
    description: |-
      Stops the specified connection monitor.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/connectionmonitors/stop
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  ConnectionMonitors.UpdateTags:
    description: |-
      Update tags of the specified connection monitor.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/connectionmonitors/updatetags
    example:
      inputs: [
        {
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/`/rg1/providers/Microsoft.Network/networkWatchers/nw1/connectionMonitors/cm1",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "cm1",
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          },
          "type": "Microsoft.Network/networkWatchers/connectionMonitors",
          "location": "westcentralus",
          "properties": {
            "source": {
              "port": 0,
              "resourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1"
            },
            "autoStart": true,
            "startTime": "2019-09-04T02:48:10.6797393Z",
            "destination": {
              "port": 80,
              "address": "bing.com"
            },
            "monitoringStatus": "Running",
            "provisioningState": "Succeeded",
            "monitoringIntervalInSeconds": 60
          }
        }
      ]
  FlowLogs.CreateOrUpdate:
    description: |-
      Create or update a flow log for the specified network security group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/flowlogs/createorupdate
    example:
      inputs: [
        {
          "location": "centraluseuap",
          "properties": {
            "format": {
              "type": "JSON",
              "version": 1
            },
            "enabled": true,
            "storageId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/nwtest1mgvbfmqsigdxe",
            "targetResourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/desmondcentral-nsg"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw/FlowLogs/fl",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "Microsoft.Networkdesmond-rgdesmondcentral-nsg",
          "type": "Microsoft.Network/networkWatchers/FlowLogs",
          "location": "centraluseuap",
          "properties": {
            "format": {
              "type": "JSON",
              "version": 1
            },
            "enabled": true,
            "storageId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/nwtest1mgvbfmqsigdxe",
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            },
            "targetResourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/desmondcentral-nsg",
            "provisioningState": "Updating",
            "targetResourceGuid": "00000000-0000-0000-0000-000000000000",
            "flowAnalyticsConfiguration": {}
          }
        }
      ]
  FlowLogs.Delete:
    description: |-
      Deletes the specified flow log resource.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/flowlogs/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  FlowLogs.Get:
    description: |-
      Gets a flow log resource by name.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/flowlogs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/тц1/FlowLogs/flowLog1",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "flowLog1",
          "type": "Microsoft.Network/networkWatchers/FlowLogs",
          "location": "centraluseuap",
          "properties": {
            "format": {
              "type": "JSON",
              "version": 2
            },
            "enabled": true,
            "storageId": "/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Storage/storageAccounts/wzstorage002",
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            },
            "targetResourceId": "/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Network/networkSecurityGroups/vm5-nsg",
            "provisioningState": "Succeeded",
            "targetResourceGuid": "00000000-0000-0000-0000-000000000000",
            "flowAnalyticsConfiguration": {
              "networkWatcherFlowAnalyticsConfiguration": {
                "enabled": false,
                "workspaceId": "-",
                "workspaceRegion": "-",
                "trafficAnalyticsInterval": 60
              }
            }
          }
        }
      ]
  FlowLogs.List:
    description: |-
      Lists all flow log resources for the specified Network Watcher.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/flowlogs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/тц1/FlowLogs/flowLog1",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "flowLog1",
              "type": "Microsoft.Network/networkWatchers/FlowLogs",
              "location": "centraluseuap",
              "properties": {
                "format": {
                  "type": "JSON",
                  "version": 2
                },
                "enabled": true,
                "storageId": "/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Storage/storageAccounts/wzstorage002",
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                },
                "targetResourceId": "/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Network/networkSecurityGroups/vm5-nsg",
                "provisioningState": "Succeeded",
                "targetResourceGuid": "00000000-0000-0000-0000-000000000000",
                "flowAnalyticsConfiguration": {
                  "networkWatcherFlowAnalyticsConfiguration": {
                    "enabled": false,
                    "workspaceId": "-",
                    "workspaceRegion": "-",
                    "trafficAnalyticsInterval": 60
                  }
                }
              }
            },
            {
              "id": "/subscriptions/96e68903-0a56-4819-9987-8d08ad6a1f99/resourceGroups/NetworkWatcherRG/providers/Microsoft.Network/networkWatchers/NetworkWatcher_centraluseuap/FlowLogs/flowLog2",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "flowLog2",
              "type": "Microsoft.Network/networkWatchers/FlowLogs",
              "location": "centraluseuap",
              "properties": {
                "format": {
                  "type": "JSON",
                  "version": 2
                },
                "enabled": true,
                "storageId": "/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Storage/storageAccounts/iraflowlogtest2diag",
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                },
                "targetResourceId": "/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Network/networkSecurityGroups/DSCP-test-vm1-nsg",
                "provisioningState": "Succeeded",
                "targetResourceGuid": "00000000-0000-0000-0000-000000000000",
                "flowAnalyticsConfiguration": {}
              }
            }
          ]
        }
      ]
  FlowLogs.UpdateTags:
    description: |-
      Update tags of the specified flow log.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/flowlogs/updatetags
    example:
      inputs: [
        {
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw/FlowLogs/fl",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "Microsoft.Networkdesmond-rgdesmondcentral-nsg",
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          },
          "type": "Microsoft.Network/networkWatchers/FlowLogs",
          "location": "centralus",
          "properties": {
            "format": {
              "type": "JSON",
              "version": 1
            },
            "enabled": true,
            "storageId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/nwtest1mgvbfmqsigdxe",
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            },
            "targetResourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/desmondcentral-nsg",
            "provisioningState": "Succeeded",
            "targetResourceGuid": "00000000-0000-0000-0000-000000000000",
            "flowAnalyticsConfiguration": {}
          }
        }
      ]
  NetworkWatchers.CheckConnectivity:
    description: |-
      Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/checkconnectivity
    example:
      inputs: [
        {
          "source": {
            "resourceId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1"
          },
          "destination": {
            "port": 3389,
            "address": "192.168.100.4"
          },
          "preferredIPVersion": "IPv4"
        }
      ]
      outputs: [
        {
          "hops": [
            {
              "id": "7dbbe7aa-60ba-4650-831e-63d775d38e9e",
              "type": "Source",
              "issues": [],
              "address": "10.1.1.4",
              "nextHopIds": [
                "75c8d819-b208-4584-a311-1aa45ce753f9"
              ],
              "resourceId": "subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkInterfaces/nic0/ipConfigurations/ipconfig1"
            },
            {
              "id": "75c8d819-b208-4584-a311-1aa45ce753f9",
              "type": "VirtualNetwork",
              "issues": [],
              "address": "192.168.100.4",
              "nextHopIds": [],
              "resourceId": "subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkInterfaces/nic1/ipConfigurations/ipconfig1"
            }
          ],
          "probesSent": 100,
          "probesFailed": 0,
          "avgLatencyInMs": 1,
          "maxLatencyInMs": 4,
          "minLatencyInMs": 1,
          "connectionStatus": "Connected"
        }
      ]
  NetworkWatchers.CreateOrUpdate:
    description: |-
      Creates or updates a network watcher in the specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/createorupdate
    example:
      inputs: [
        {
          "location": "eastus",
          "properties": {}
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "nw1",
          "tags": {},
          "type": "Microsoft.Network/networkWatchers",
          "location": "eastus",
          "properties": {
            "provisioningState": "Succeeded"
          }
        }
      ]
  NetworkWatchers.Delete:
    description: |-
      Deletes the specified network watcher resource.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  NetworkWatchers.Get:
    description: |-
      Gets the specified network watcher by resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "nw1",
          "tags": {},
          "type": "Microsoft.Network/networkWatchers",
          "location": "eastus",
          "properties": {
            "provisioningState": "Succeeded"
          }
        }
      ]
  NetworkWatchers.GetAzureReachabilityReport:
    description: |-
      NOTE: This feature is currently in preview and still being tested for stability. Gets the relative latency score for internet service providers from a specified location to Azure regions.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/getazurereachabilityreport
    example:
      inputs: [
        {
          "endTime": "2017-09-10T00:00:00Z",
          "providers": [
            "Frontier Communications of America, Inc. - ASN 5650"
          ],
          "startTime": "2017-09-07T00:00:00Z",
          "azureLocations": [
            "West US"
          ],
          "providerLocation": {
            "state": "washington",
            "country": "United States"
          }
        }
      ]
      outputs: [
        {
          "aggregationLevel": "State",
          "providerLocation": {
            "state": "washington",
            "country": "United States"
          },
          "reachabilityReport": [
            {
              "provider": "Frontier Communications of America, Inc. - ASN 5650",
              "latencies": [
                {
                  "score": 94,
                  "timeStamp": "2017-09-07T00:00:00Z"
                },
                {
                  "score": 94,
                  "timeStamp": "2017-09-08T00:00:00Z"
                },
                {
                  "score": 94,
                  "timeStamp": "2017-09-09T00:00:00Z"
                }
              ],
              "azureLocation": "West US"
            }
          ]
        }
      ]
  NetworkWatchers.GetFlowLogStatus:
    description: |-
      Queries status of flow log and traffic analytics (optional) on a specified resource.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/getflowlogstatus
    example:
      inputs: [
        {
          "targetResourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1"
        }
      ]
      outputs: [
        {
          "properties": {
            "enabled": true,
            "storageId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/st1"
          },
          "targetResourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1"
        }
      ]
  NetworkWatchers.GetNetworkConfigurationDiagnostic:
    description: |-
      Gets Network Configuration Diagnostic data to help customers understand and debug network behavior. It provides detailed information on what security rules were applied to a specified traffic flow and the result of evaluating these rules. Customers must provide details of a flow like source, destination, protocol, etc. The API returns whether traffic was allowed or denied, the rules evaluated for the specified flow and the evaluation results.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/getnetworkconfigurationdiagnostic
    example:
      inputs: [
        {
          "profiles": [
            {
              "source": "10.1.0.4",
              "protocol": "TCP",
              "direction": "Inbound",
              "destination": "12.11.12.14",
              "destinationPort": "12100"
            }
          ],
          "targetResourceId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1"
        }
      ]
      outputs: [
        {
          "results": [
            {
              "profile": {
                "source": "10.1.0.4",
                "protocol": "TCP",
                "direction": "Inbound",
                "destination": "12.11.12.14",
                "destinationPort": "12100"
              },
              "networkSecurityGroupResult": {
                "securityRuleAccessResult": "Allow",
                "evaluatedNetworkSecurityGroups": [
                  {
                    "appliedTo": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualNetworks/vnet/subnets/AppSubnet",
                    "matchedRule": {
                      "action": "Allow",
                      "ruleName": "UserRule_fe_rule"
                    },
                    "rulesEvaluationResult": [
                      {
                        "name": "UserRule_Cleanuptool-Allow-100",
                        "sourceMatched": false,
                        "protocolMatched": true,
                        "sourcePortMatched": true,
                        "destinationMatched": true,
                        "destinationPortMatched": false
                      },
                      {
                        "name": "UserRule_Cleanuptool-Allow-101",
                        "sourceMatched": true,
                        "protocolMatched": true,
                        "sourcePortMatched": true,
                        "destinationMatched": true,
                        "destinationPortMatched": false
                      },
                      {
                        "name": "UserRule_Cleanuptool-Allow-102",
                        "sourceMatched": false,
                        "protocolMatched": true,
                        "sourcePortMatched": true,
                        "destinationMatched": true,
                        "destinationPortMatched": false
                      },
                      {
                        "name": "UserRule_Cleanuptool-Deny-103",
                        "sourceMatched": true,
                        "protocolMatched": true,
                        "sourcePortMatched": true,
                        "destinationMatched": true,
                        "destinationPortMatched": false
                      },
                      {
                        "name": "UserRule_fe_rule",
                        "sourceMatched": true,
                        "protocolMatched": true,
                        "sourcePortMatched": true,
                        "destinationMatched": true,
                        "destinationPortMatched": true
                      }
                    ],
                    "networkSecurityGroupId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkSecurityGroups/nsg1"
                  },
                  {
                    "appliedTo": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualNetworks/vnet/networkInterfaces/nic",
                    "matchedRule": {
                      "action": "Allow",
                      "ruleName": "UserRule_fe_rule"
                    },
                    "rulesEvaluationResult": [
                      {
                        "name": "UserRule_fe_rule",
                        "sourceMatched": true,
                        "protocolMatched": true,
                        "sourcePortMatched": true,
                        "destinationMatched": true,
                        "destinationPortMatched": true
                      }
                    ],
                    "networkSecurityGroupId": "/subscriptions/61cc8a98-a8be-4bfe-a04e-0b461f93fe35/resourceGroups/NwRgCentralUSEUAP_copy/providers/Microsoft.Network/networkSecurityGroups/AppNSG"
                  }
                ]
              }
            }
          ]
        }
      ]
  NetworkWatchers.GetNextHop:
    description: |-
      Gets the next hop from the specified VM.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/getnexthop
    example:
      inputs: [
        {
          "sourceIPAddress": "10.0.0.5",
          "targetResourceId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1",
          "targetNicResourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkInterfaces/nic1",
          "destinationIPAddress": "10.0.0.10"
        }
      ]
      outputs: [
        {
          "nextHopType": "VnetLocal",
          "routeTableId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/routeTables/rt1",
          "nextHopIpAddress": "10.0.0.1"
        }
      ]
  NetworkWatchers.GetTopology:
    description: |-
      Gets the current network topology by resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/gettopology
    example:
      inputs: [
        {
          "targetResourceGroupName": "rg2"
        }
      ]
      outputs: [
        {
          "id": "ce592f46-8164-4bf2-ad36-b8e4acf6fb68",
          "resources": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/MultiTierApp0",
              "name": "MultiTierApp0",
              "location": "westus",
              "associations": [
                {
                  "name": "appNic0",
                  "resourceId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkInterfaces/appNic0",
                  "associationType": "Contains"
                },
                {
                  "name": "appNic10",
                  "resourceId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkInterfaces/appNic10",
                  "associationType": "Contains"
                }
              ]
            }
          ],
          "lastModified": "2017-05-27T00:00:13.2005337Z",
          "createdDateTime": "2017-08-02T19:31:55.9461781Z"
        }
      ]
  NetworkWatchers.GetTroubleshooting:
    description: |-
      Initiate troubleshooting on a specified resource.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/gettroubleshooting
    example:
      inputs: [
        {
          "properties": {
            "storageId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/st1",
            "storagePath": "https://st1.blob.core.windows.net/cn1"
          },
          "targetResourceId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1"
        }
      ]
      outputs: [
        {
          "code": "UnHealthy",
          "endTime": "2017-01-12T00:20:09.914Z",
          "results": [
            {
              "id": "000000",
              "detail": "During this time S2S VPN tunnels to on premises sites or other Azure virtual networks will be disconnected",
              "summary": "We are sorry, your VPN gateway is unreachable from the Internet",
              "reasonType": "VipUnResponsive",
              "recommendedActions": [
                {
                  "actionUri": "https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-nsg-arm-pportal",
                  "actionText": "Verify if there is a network security group (NSG) applied to the GatewaySubnet",
                  "actionUriText": "Verify"
                },
                {
                  "actionUri": "http://azure.microsoft.com/support",
                  "actionText": "If your VPN gateway isn't up and running by the expected resolution time, contact support",
                  "actionUriText": "contact support"
                }
              ]
            }
          ],
          "startTime": "2017-01-12T00:19:47.0442834Z"
        }
      ]
  NetworkWatchers.GetTroubleshootingResult:
    description: |-
      Get the last completed troubleshooting result on a specified resource.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/gettroubleshootingresult
    example:
      inputs: [
        {
          "targetResourceId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1"
        }
      ]
      outputs: [
        {
          "code": "UnHealthy",
          "endTime": "2017-01-12T00:20:09.914Z",
          "results": [
            {
              "id": "000000",
              "detail": "During this time S2S VPN tunnels to on premises sites or other Azure virtual networks will be disconnected",
              "summary": "We are sorry, your VPN gateway is unreachable from the Internet",
              "reasonType": "VipUnResponsive",
              "recommendedActions": [
                {
                  "actionUri": "https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-nsg-arm-pportal",
                  "actionText": "Verify if there is a network security group (NSG) applied to the GatewaySubnet",
                  "actionUriText": "Verify"
                },
                {
                  "actionUri": "http://azure.microsoft.com/support",
                  "actionText": "If your VPN gateway isn't up and running by the expected resolution time, contact support",
                  "actionUriText": "contact support"
                }
              ]
            }
          ],
          "startTime": "2017-01-12T00:19:47.0442834Z"
        }
      ]
  NetworkWatchers.GetVmSecurityRules:
    description: |-
      Gets the configured and effective security group rules on the specified VM.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/getvmsecurityrules
    example:
      inputs: [
        {
          "targetResourceId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1"
        }
      ]
      outputs: [
        {
          "networkInterfaces": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkInterfaces/nic1",
              "securityRuleAssociations": {
                "subnetAssociation": {
                  "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1",
                  "securityRules": [
                    {
                      "id": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/networkSecurityGroups/AppNSG/securityRules/fe_rule",
                      "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
                      "name": "fe_rule",
                      "properties": {
                        "access": "Allow",
                        "priority": 100,
                        "protocol": "Tcp",
                        "direction": "Inbound",
                        "description": "Allow Frontend",
                        "sourcePortRange": "*",
                        "provisioningState": "Succeeded",
                        "sourceAddressPrefix": "10.1.0.0/24",
                        "destinationPortRange": "*",
                        "destinationAddressPrefix": "*"
                      }
                    }
                  ]
                },
                "defaultSecurityRules": [
                  {
                    "id": "/subscriptions//resourceGroups//providers/Microsoft.Network/networkSecurityGroups//defaultSecurityRules/",
                    "name": "AllowVnetInBound",
                    "properties": {
                      "access": "Allow",
                      "priority": 65000,
                      "protocol": "*",
                      "direction": "Inbound",
                      "description": "Allow inbound traffic from all VMs in VNET",
                      "sourcePortRange": "*",
                      "provisioningState": "Succeeded",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationPortRange": "*",
                      "destinationAddressPrefix": "VirtualNetwork"
                    }
                  }
                ],
                "effectiveSecurityRules": [
                  {
                    "name": "DefaultOutboundDenyAll",
                    "access": "Deny",
                    "priority": 65500,
                    "protocol": "All",
                    "direction": "Outbound",
                    "sourcePortRange": "0-65535",
                    "sourceAddressPrefix": "*",
                    "destinationPortRange": "0-65535",
                    "destinationAddressPrefix": "*"
                  }
                ]
              }
            }
          ]
        }
      ]
  NetworkWatchers.List:
    description: |-
      Gets all network watchers by resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "nw1",
              "tags": {},
              "type": "Microsoft.Network/networkWatchers",
              "location": "eastus",
              "properties": {
                "provisioningState": "Succeeded"
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw2",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "nw2",
              "tags": {},
              "type": "Microsoft.Network/networkWatchers",
              "location": "eastus",
              "properties": {
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]
  NetworkWatchers.ListAll:
    description: |-
      Gets all network watchers by subscription.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/listall
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "nw1",
              "tags": {},
              "type": "Microsoft.Network/networkWatchers",
              "location": "eastus",
              "properties": {
                "provisioningState": "Succeeded"
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw2",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "nw2",
              "tags": {},
              "type": "Microsoft.Network/networkWatchers",
              "location": "westus",
              "properties": {
                "provisioningState": "Succeeded"
              }
            }
          ]
        }
      ]
  NetworkWatchers.ListAvailableProviders:
    description: |-
      NOTE: This feature is currently in preview and still being tested for stability. Lists all available internet service providers for a specified Azure region.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/listavailableproviders
    example:
      inputs: [
        {
          "city": "seattle",
          "state": "washington",
          "country": "United States",
          "azureLocations": [
            "West US"
          ]
        }
      ]
      outputs: [
        {
          "countries": [
            {
              "states": [
                {
                  "cities": [
                    {
                      "cityName": "seattle",
                      "providers": [
                        "Comcast Cable Communications, Inc. - ASN 7922",
                        "Comcast Cable Communications, LLC - ASN 7922",
                        "Level 3 Communications, Inc. (GBLX) - ASN 3549",
                        "Qwest Communications Company, LLC - ASN 209"
                      ]
                    }
                  ],
                  "stateName": "washington"
                }
              ],
              "countryName": "United States"
            }
          ]
        }
      ]
  NetworkWatchers.SetFlowLogConfiguration:
    description: |-
      Configures flow log and traffic analytics (optional) on a specified resource.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/setflowlogconfiguration
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "properties": {
            "enabled": true,
            "storageId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/st1"
          },
          "targetResourceId": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkSecurityGroups/nsg1"
        }
      ]
  NetworkWatchers.UpdateTags:
    description: |-
      Updates a network watcher tags.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/updatetags
    example:
      inputs: [
        {
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "nw1",
          "tags": {
            "tag1": "value1",
            "tag2": "value2"
          },
          "type": "Microsoft.Network/networkWatchers",
          "location": "eastus",
          "properties": {
            "provisioningState": "Succeeded"
          }
        }
      ]
  NetworkWatchers.VerifyIpFlow:
    description: |-
      Verify IP flow from the specified VM to a location given the currently configured NSG rules.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/networkwatchers/verifyipflow
    example:
      inputs: [
        {
          "protocol": "TCP",
          "direction": "Outbound",
          "localPort": "80",
          "remotePort": "80",
          "localIPAddress": "10.2.0.4",
          "remoteIPAddress": "121.10.1.1",
          "targetResourceId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1"
        }
      ]
      outputs: [
        {
          "access": "Allow",
          "ruleName": "Rule1"
        }
      ]
  PacketCaptures.Create:
    description: |-
      Create and start a packet capture on the specified VM.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/packetcaptures/create
    example:
      inputs: [
        {
          "properties": {
            "target": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1",
            "filters": [
              {
                "protocol": "TCP",
                "localPort": "80",
                "localIPAddress": "10.0.0.4"
              }
            ],
            "storageLocation": {
              "filePath": "D:\\capture\\pc1.cap",
              "storageId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Storage/storageAccounts/pcstore",
              "storagePath": "https://mytestaccountname.blob.core.windows.net/capture/pc1.cap"
            },
            "timeLimitInSeconds": 100,
            "totalBytesPerSession": 100000,
            "bytesToCapturePerPacket": 10000
          }
        }
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/packetCaptures/pc1",
          "name": "pc1",
          "properties": {
            "target": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1",
            "filters": [
              {
                "protocol": "TCP",
                "localPort": "80",
                "localIPAddress": "10.0.0.4"
              }
            ],
            "storageLocation": {
              "filePath": "D:\\capture\\pc1.cap",
              "storageId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Storage/storageAccounts/pcstore",
              "storagePath": "https://mytestaccountname.blob.core.windows.net/capture/pc1.cap"
            },
            "provisioningState": "Updating",
            "timeLimitInSeconds": 100,
            "totalBytesPerSession": 100000,
            "bytesToCapturePerPacket": 10000
          }
        }
      ]
  PacketCaptures.Delete:
    description: |-
      Deletes the specified packet capture session.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/packetcaptures/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  PacketCaptures.Get:
    description: |-
      Gets a packet capture session by name.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/packetcaptures/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/packetCaptures/pc1",
          "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
          "name": "pc1",
          "properties": {
            "target": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1",
            "filters": [
              {
                "protocol": "TCP",
                "localPort": "80",
                "localIPAddress": "10.0.0.4"
              }
            ],
            "storageLocation": {
              "filePath": "D:\\capture\\pc1.cap",
              "storageId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Storage/storageAccounts/pcstore",
              "storagePath": "https://mytestaccountname.blob.core.windows.net/capture/pc1.cap"
            },
            "provisioningState": "Updating",
            "timeLimitInSeconds": 100,
            "totalBytesPerSession": 100000,
            "bytesToCapturePerPacket": 10000
          }
        }
      ]
  PacketCaptures.GetStatus:
    description: |-
      Query the status of a running packet capture session.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/packetcaptures/getstatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/packetCaptures/pc1",
          "name": "pc1",
          "stopReason": "TimeExceeded",
          "captureStartTime": "2016-09-07T12:35:24Z",
          "packetCaptureError": [],
          "packetCaptureStatus": "Stopped"
        }
      ]
  PacketCaptures.List:
    description: |-
      Lists all packet capture sessions within the specified resource group.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/packetcaptures/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "value": [
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/packetCaptures/pc1",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "pc1",
              "properties": {
                "target": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1",
                "filters": [
                  {
                    "protocol": "TCP",
                    "localPort": "80",
                    "localIPAddress": "10.0.0.4"
                  }
                ],
                "storageLocation": {
                  "filePath": "D:\\capture\\pc1.cap",
                  "storageId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Storage/storageAccounts/pcstore",
                  "storagePath": "https://mytestaccountname.blob.core.windows.net/capture/pc1.cap"
                },
                "provisioningState": "Updating",
                "timeLimitInSeconds": 100,
                "totalBytesPerSession": 100000,
                "bytesToCapturePerPacket": 10000
              }
            },
            {
              "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/networkWatchers/nw1/packetCaptures/pc2",
              "etag": "W/\"00000000-0000-0000-0000-000000000000\"",
              "name": "pc2",
              "properties": {
                "target": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Compute/virtualMachines/vm1",
                "filters": [],
                "storageLocation": {
                  "filePath": "D:\\capture\\pc2.cap",
                  "storageId": "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Storage/storageAccounts/pcstore",
                  "storagePath": "https://mytestaccountname.blob.core.windows.net/capture/pc2.cap"
                },
                "provisioningState": "Succeeded",
                "timeLimitInSeconds": 100,
                "totalBytesPerSession": 100000,
                "bytesToCapturePerPacket": 10000
              }
            }
          ]
        }
      ]
  PacketCaptures.Stop:
    description: |-
      Stops a specified packet capture session.
    versions:
      from: 2020.11.1
    link: https://docs.microsoft.com/en-us/rest/api/network-watcher/packetcaptures/stop
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]