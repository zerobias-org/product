Product:
  name: Google Workspace Admin
  versions: [1.0.0]
  package: google.workspace.admin
  description: |-
    Admin
  link: https://developers.google.com/admin-sdk
  contentType: json
Operations:
  datatransfer.applications.get:
    description: |-
      Retrieves information about an application for the given application ID.
    versions:
      from: 1.0.0
    link: http://developers.google.com/admin-sdk/data-transfer/reference/rest/v1/applications/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Application",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "int64",
              "description": "The application's ID."
            },
            "etag": {
              "type": "string",
              "description": "Etag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#datatransfer#ApplicationResource",
              "description": "Identifies the resource as a DataTransfer Application Resource."
            },
            "name": {
              "type": "string",
              "description": "The application's name."
            },
            "transferParams": {
              "type": "array",
              "items": {
                "id": "ApplicationTransferParam",
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The type of the transfer parameter. eg: 'PRIVACY_LEVEL'"
                  },
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The value of the corresponding transfer parameter. eg: 'PRIVATE' or 'SHARED'"
                  }
                },
                "description": "Template for application transfer parameters."
              },
              "description": "The list of all possible transfer parameters for this application. These parameters can be used to select the data of the user in this application to be transferred."
            }
          },
          "description": "Applications resources represent applications installed on the domain that support transferring ownership of user data."
        }
      ]
  datatransfer.applications.list:
    description: |-
      Lists the applications available for data transfer for a customer.
    versions:
      from: 1.0.0
    link: http://developers.google.com/admin-sdk/data-transfer/reference/rest/v1/applications/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ApplicationsListResponse",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#datatransfer#applicationsList",
              "description": "Identifies the resource as a collection of Applications."
            },
            "applications": {
              "type": "array",
              "items": {
                "id": "Application",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "int64",
                    "description": "The application's ID."
                  },
                  "etag": {
                    "type": "string",
                    "description": "Etag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#datatransfer#ApplicationResource",
                    "description": "Identifies the resource as a DataTransfer Application Resource."
                  },
                  "name": {
                    "type": "string",
                    "description": "The application's name."
                  },
                  "transferParams": {
                    "type": "array",
                    "items": {
                      "id": "ApplicationTransferParam",
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "The type of the transfer parameter. eg: 'PRIVACY_LEVEL'"
                        },
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The value of the corresponding transfer parameter. eg: 'PRIVATE' or 'SHARED'"
                        }
                      },
                      "description": "Template for application transfer parameters."
                    },
                    "description": "The list of all possible transfer parameters for this application. These parameters can be used to select the data of the user in this application to be transferred."
                  }
                },
                "description": "Applications resources represent applications installed on the domain that support transferring ownership of user data."
              },
              "description": "List of applications that support data transfer and are also installed for the customer."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Continuation token which will be used to specify next page in list API."
            }
          },
          "description": "Template for a collection of Applications."
        }
      ]
  datatransfer.transfers.get:
    description: |-
      Retrieves a data transfer request by its resource ID.
    versions:
      from: 1.0.0
    link: http://developers.google.com/admin-sdk/data-transfer/reference/rest/v1/transfers/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DataTransfer",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The transfer's ID (Read-only)."
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#datatransfer#DataTransfer",
              "description": "Identifies the resource as a DataTransfer request."
            },
            "requestTime": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the data transfer was requested (Read-only)."
            },
            "newOwnerUserId": {
              "type": "string",
              "description": "ID of the user to whom the data is being transferred."
            },
            "oldOwnerUserId": {
              "type": "string",
              "description": "ID of the user whose data is being transferred."
            },
            "applicationDataTransfers": {
              "type": "array",
              "items": {
                "id": "ApplicationDataTransfer",
                "type": "object",
                "properties": {
                  "applicationId": {
                    "type": "string",
                    "format": "int64",
                    "description": "The application's ID."
                  },
                  "applicationTransferParams": {
                    "type": "array",
                    "items": {
                      "id": "ApplicationTransferParam",
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "The type of the transfer parameter. eg: 'PRIVACY_LEVEL'"
                        },
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The value of the corresponding transfer parameter. eg: 'PRIVATE' or 'SHARED'"
                        }
                      },
                      "description": "Template for application transfer parameters."
                    },
                    "description": "The transfer parameters for the application. These parameters are used to select the data which will get transferred in context of this application."
                  },
                  "applicationTransferStatus": {
                    "type": "string",
                    "description": "Current status of transfer for this application. (Read-only)"
                  }
                },
                "description": "Template to map fields of ApplicationDataTransfer resource."
              },
              "description": "List of per application data transfer resources. It contains data transfer details of the applications associated with this transfer resource. Note that this list is also used to specify the applications for which data transfer has to be done at the time of the transfer resource creation."
            },
            "overallTransferStatusCode": {
              "type": "string",
              "description": "Overall transfer status (Read-only)."
            }
          },
          "description": "A Transfer resource represents the transfer of the ownership of user data between users."
        }
      ]
  datatransfer.transfers.insert:
    description: |-
      Inserts a data transfer request.
    versions:
      from: 1.0.0
    link: http://developers.google.com/admin-sdk/data-transfer/reference/rest/v1/transfers/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DataTransfer",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The transfer's ID (Read-only)."
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#datatransfer#DataTransfer",
              "description": "Identifies the resource as a DataTransfer request."
            },
            "requestTime": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the data transfer was requested (Read-only)."
            },
            "newOwnerUserId": {
              "type": "string",
              "description": "ID of the user to whom the data is being transferred."
            },
            "oldOwnerUserId": {
              "type": "string",
              "description": "ID of the user whose data is being transferred."
            },
            "applicationDataTransfers": {
              "type": "array",
              "items": {
                "id": "ApplicationDataTransfer",
                "type": "object",
                "properties": {
                  "applicationId": {
                    "type": "string",
                    "format": "int64",
                    "description": "The application's ID."
                  },
                  "applicationTransferParams": {
                    "type": "array",
                    "items": {
                      "id": "ApplicationTransferParam",
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "The type of the transfer parameter. eg: 'PRIVACY_LEVEL'"
                        },
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The value of the corresponding transfer parameter. eg: 'PRIVATE' or 'SHARED'"
                        }
                      },
                      "description": "Template for application transfer parameters."
                    },
                    "description": "The transfer parameters for the application. These parameters are used to select the data which will get transferred in context of this application."
                  },
                  "applicationTransferStatus": {
                    "type": "string",
                    "description": "Current status of transfer for this application. (Read-only)"
                  }
                },
                "description": "Template to map fields of ApplicationDataTransfer resource."
              },
              "description": "List of per application data transfer resources. It contains data transfer details of the applications associated with this transfer resource. Note that this list is also used to specify the applications for which data transfer has to be done at the time of the transfer resource creation."
            },
            "overallTransferStatusCode": {
              "type": "string",
              "description": "Overall transfer status (Read-only)."
            }
          },
          "description": "A Transfer resource represents the transfer of the ownership of user data between users."
        }
      ]
  datatransfer.transfers.list:
    description: |-
      Lists the transfers for a customer by source user, destination user, or status.
    versions:
      from: 1.0.0
    link: http://developers.google.com/admin-sdk/data-transfer/reference/rest/v1/transfers/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DataTransfersListResponse",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#datatransfer#dataTransfersList",
              "description": "Identifies the resource as a collection of data transfer requests."
            },
            "dataTransfers": {
              "type": "array",
              "items": {
                "id": "DataTransfer",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The transfer's ID (Read-only)."
                  },
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#datatransfer#DataTransfer",
                    "description": "Identifies the resource as a DataTransfer request."
                  },
                  "requestTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which the data transfer was requested (Read-only)."
                  },
                  "newOwnerUserId": {
                    "type": "string",
                    "description": "ID of the user to whom the data is being transferred."
                  },
                  "oldOwnerUserId": {
                    "type": "string",
                    "description": "ID of the user whose data is being transferred."
                  },
                  "applicationDataTransfers": {
                    "type": "array",
                    "items": {
                      "id": "ApplicationDataTransfer",
                      "type": "object",
                      "properties": {
                        "applicationId": {
                          "type": "string",
                          "format": "int64",
                          "description": "The application's ID."
                        },
                        "applicationTransferParams": {
                          "type": "array",
                          "items": {
                            "id": "ApplicationTransferParam",
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "The type of the transfer parameter. eg: 'PRIVACY_LEVEL'"
                              },
                              "value": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The value of the corresponding transfer parameter. eg: 'PRIVATE' or 'SHARED'"
                              }
                            },
                            "description": "Template for application transfer parameters."
                          },
                          "description": "The transfer parameters for the application. These parameters are used to select the data which will get transferred in context of this application."
                        },
                        "applicationTransferStatus": {
                          "type": "string",
                          "description": "Current status of transfer for this application. (Read-only)"
                        }
                      },
                      "description": "Template to map fields of ApplicationDataTransfer resource."
                    },
                    "description": "List of per application data transfer resources. It contains data transfer details of the applications associated with this transfer resource. Note that this list is also used to specify the applications for which data transfer has to be done at the time of the transfer resource creation."
                  },
                  "overallTransferStatusCode": {
                    "type": "string",
                    "description": "Overall transfer status (Read-only)."
                  }
                },
                "description": "A Transfer resource represents the transfer of the ownership of user data between users."
              },
              "description": "List of data transfer requests."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Continuation token which will be used to specify next page in list API."
            }
          },
          "description": "Template for a collection of DataTransfer resources."
        }
      ]
  alertcenter.getSettings:
    description: |-
      Returns customer-level settings.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/alertcenter/reference/rest/v1beta1/alertcenter/getSettings
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Settings",
          "type": "object",
          "properties": {
            "notifications": {
              "type": "array",
              "items": {
                "id": "Notification",
                "type": "object",
                "properties": {
                  "cloudPubsubTopic": {
                    "id": "CloudPubsubTopic",
                    "type": "object",
                    "properties": {
                      "topicName": {
                        "type": "string",
                        "description": "The `name` field of a Cloud Pubsub [Topic] (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic)."
                      },
                      "payloadFormat": {
                        "enum": [
                          "PAYLOAD_FORMAT_UNSPECIFIED",
                          "JSON"
                        ],
                        "type": "string",
                        "description": "Optional. The format of the payload that would be sent. If not specified the format will be JSON.",
                        "enumDescriptions": [
                          "Payload format is not specified (will use JSON as default).",
                          "Use JSON."
                        ]
                      }
                    },
                    "description": "A Google Cloud Pub/sub topic destination."
                  }
                },
                "description": "Settings for callback notifications. For more details see [Google Workspace Alert Notification](https://developers.google.com/admin-sdk/alertcenter/guides/notifications)."
              },
              "description": "The list of notifications."
            }
          },
          "description": "Customer-level settings."
        }
      ]
  alertcenter.updateSettings:
    description: |-
      Updates the customer-level settings.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/alertcenter/reference/rest/v1beta1/alertcenter/updateSettings
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Settings",
          "type": "object",
          "properties": {
            "notifications": {
              "type": "array",
              "items": {
                "id": "Notification",
                "type": "object",
                "properties": {
                  "cloudPubsubTopic": {
                    "id": "CloudPubsubTopic",
                    "type": "object",
                    "properties": {
                      "topicName": {
                        "type": "string",
                        "description": "The `name` field of a Cloud Pubsub [Topic] (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic)."
                      },
                      "payloadFormat": {
                        "enum": [
                          "PAYLOAD_FORMAT_UNSPECIFIED",
                          "JSON"
                        ],
                        "type": "string",
                        "description": "Optional. The format of the payload that would be sent. If not specified the format will be JSON.",
                        "enumDescriptions": [
                          "Payload format is not specified (will use JSON as default).",
                          "Use JSON."
                        ]
                      }
                    },
                    "description": "A Google Cloud Pub/sub topic destination."
                  }
                },
                "description": "Settings for callback notifications. For more details see [Google Workspace Alert Notification](https://developers.google.com/admin-sdk/alertcenter/guides/notifications)."
              },
              "description": "The list of notifications."
            }
          },
          "description": "Customer-level settings."
        }
      ]
  alertcenter.alerts.batchDelete:
    description: |-
      Performs batch delete operation on alerts.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/alertcenter/reference/rest/v1beta1/alerts/batchDelete
    example:
      inputs: [
        {
          "id": "BatchDeleteAlertsRequest",
          "type": "object",
          "properties": {
            "alertId": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. list of alert IDs."
            },
            "customerId": {
              "type": "string",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alerts are associated with."
            }
          },
          "description": "A request to perform batch delete on alerts."
        }
      ]
      outputs: [
        {
          "id": "BatchDeleteAlertsResponse",
          "type": "object",
          "properties": {
            "successAlertIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The successful list of alert IDs."
            },
            "failedAlertStatus": {
              "type": "object",
              "description": "The status details for each failed alert_id.",
              "additionalProperties": {
                "id": "Status",
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The status code, which should be an enum value of google.rpc.Code."
                  },
                  "details": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "any",
                        "description": "Properties of the object. Contains field @type with type URL."
                      }
                    },
                    "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                  },
                  "message": {
                    "type": "string",
                    "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                  }
                },
                "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
              }
            }
          },
          "description": "Response to batch delete operation on alerts."
        }
      ]
  alertcenter.alerts.batchUndelete:
    description: |-
      Performs batch undelete operation on alerts.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/alertcenter/reference/rest/v1beta1/alerts/batchUndelete
    example:
      inputs: [
        {
          "id": "BatchUndeleteAlertsRequest",
          "type": "object",
          "properties": {
            "alertId": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. list of alert IDs."
            },
            "customerId": {
              "type": "string",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alerts are associated with."
            }
          },
          "description": "A request to perform batch undelete on alerts."
        }
      ]
      outputs: [
        {
          "id": "BatchUndeleteAlertsResponse",
          "type": "object",
          "properties": {
            "successAlertIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The successful list of alert IDs."
            },
            "failedAlertStatus": {
              "type": "object",
              "description": "The status details for each failed alert_id.",
              "additionalProperties": {
                "id": "Status",
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The status code, which should be an enum value of google.rpc.Code."
                  },
                  "details": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "any",
                        "description": "Properties of the object. Contains field @type with type URL."
                      }
                    },
                    "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                  },
                  "message": {
                    "type": "string",
                    "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                  }
                },
                "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
              }
            }
          },
          "description": "Response to batch undelete operation on alerts."
        }
      ]
  alertcenter.alerts.delete:
    description: |-
      Marks the specified alert for deletion. An alert that has been marked for deletion is removed from Alert Center after 30 days. Marking an alert for deletion has no effect on an alert which has already been marked for deletion. Attempting to mark a nonexistent alert for deletion results in a `NOT_FOUND` error.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/alertcenter/reference/rest/v1beta1/alerts/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  alertcenter.alerts.feedback.create:
    description: |-
      Creates new feedback for an alert. Attempting to create a feedback for a non-existent alert returns `NOT_FOUND` error. Attempting to create a feedback for an alert that is marked for deletion returns `FAILED_PRECONDITION' error.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/alertcenter/reference/rest/v1beta1/alerts.feedback/create
    example:
      inputs: [
        {
          "id": "AlertFeedback",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "ALERT_FEEDBACK_TYPE_UNSPECIFIED",
                "NOT_USEFUL",
                "SOMEWHAT_USEFUL",
                "VERY_USEFUL"
              ],
              "type": "string",
              "description": "Required. The type of the feedback.",
              "enumDescriptions": [
                "The feedback type is not specified.",
                "The alert report is not useful.",
                "The alert report is somewhat useful.",
                "The alert report is very useful."
              ]
            },
            "email": {
              "type": "string",
              "description": "Output only. The email of the user that provided the feedback."
            },
            "alertId": {
              "type": "string",
              "description": "Output only. The alert identifier."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time this feedback was created."
            },
            "customerId": {
              "type": "string",
              "description": "Output only. The unique identifier of the Google account of the customer."
            },
            "feedbackId": {
              "type": "string",
              "description": "Output only. The unique identifier for the feedback."
            }
          },
          "description": "A customer feedback about an alert."
        }
      ]
      outputs: [
        {}
      ]
  alertcenter.alerts.feedback.list:
    description: |-
      Lists all the feedback for an alert. Attempting to list feedbacks for a non-existent alert returns `NOT_FOUND` error.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/alertcenter/reference/rest/v1beta1/alerts.feedback/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListAlertFeedbackResponse",
          "type": "object",
          "properties": {
            "feedback": {
              "type": "array",
              "items": {
                "id": "AlertFeedback",
                "type": "object",
                "properties": {
                  "type": {
                    "enum": [
                      "ALERT_FEEDBACK_TYPE_UNSPECIFIED",
                      "NOT_USEFUL",
                      "SOMEWHAT_USEFUL",
                      "VERY_USEFUL"
                    ],
                    "type": "string",
                    "description": "Required. The type of the feedback.",
                    "enumDescriptions": [
                      "The feedback type is not specified.",
                      "The alert report is not useful.",
                      "The alert report is somewhat useful.",
                      "The alert report is very useful."
                    ]
                  },
                  "email": {
                    "type": "string",
                    "description": "Output only. The email of the user that provided the feedback."
                  },
                  "alertId": {
                    "type": "string",
                    "description": "Output only. The alert identifier."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time this feedback was created."
                  },
                  "customerId": {
                    "type": "string",
                    "description": "Output only. The unique identifier of the Google account of the customer."
                  },
                  "feedbackId": {
                    "type": "string",
                    "description": "Output only. The unique identifier for the feedback."
                  }
                },
                "description": "A customer feedback about an alert."
              },
              "description": "The list of alert feedback. Feedback entries for each alert are ordered by creation time descending."
            }
          },
          "description": "Response message for an alert feedback listing request."
        }
      ]
  alertcenter.alerts.get:
    description: |-
      Gets the specified alert. Attempting to get a nonexistent alert returns `NOT_FOUND` error.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/alertcenter/reference/rest/v1beta1/alerts/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Alert",
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "description": "Optional. The data associated with this alert, for example google.apps.alertcenter.type.DeviceCompromised.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "etag": {
              "type": "string",
              "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform alert updates in order to avoid race conditions: An `etag` is returned in the response which contains alerts, and systems are expected to put that etag in the request to update alert to ensure that their change will be applied to the same version of the alert. If no `etag` is provided in the call to update alert, then the existing alert is overwritten blindly."
            },
            "type": {
              "type": "string",
              "description": "Required. The type of the alert. This is output only after alert is created. For a list of available alert types see [Google Workspace Alert types](https://developers.google.com/admin-sdk/alertcenter/reference/alert-types)."
            },
            "source": {
              "type": "string",
              "description": "Required. A unique identifier for the system that reported the alert. This is output only after alert is created. Supported sources are any of the following: * Google Operations * Mobile device management * Gmail phishing * Data Loss Prevention * Domain wide takeout * State sponsored attack * Google identity"
            },
            "alertId": {
              "type": "string",
              "description": "Output only. The unique identifier for the alert."
            },
            "deleted": {
              "type": "boolean",
              "description": "Output only. `True` if this alert is marked for deletion."
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Optional. The time the event that caused this alert ceased being active. If provided, the end time must not be earlier than the start time. If not provided, it indicates an ongoing alert."
            },
            "metadata": {
              "id": "AlertMetadata",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert metadata from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform metatdata updates in order to avoid race conditions: An `etag` is returned in the response which contains alert metadata, and systems are expected to put that etag in the request to update alert metadata to ensure that their change will be applied to the same version of the alert metadata. If no `etag` is provided in the call to update alert metadata, then the existing alert metadata is overwritten blindly."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the alert. The supported values are the following: * NOT_STARTED * IN_PROGRESS * CLOSED"
                },
                "alertId": {
                  "type": "string",
                  "description": "Output only. The alert identifier."
                },
                "assignee": {
                  "type": "string",
                  "description": "The email address of the user assigned to the alert."
                },
                "severity": {
                  "type": "string",
                  "description": "The severity value of the alert. Alert Center will set this field at alert creation time, default's to an empty string when it could not be determined. The supported values for update actions on this field are the following: * HIGH * MEDIUM * LOW"
                },
                "customerId": {
                  "type": "string",
                  "description": "Output only. The unique identifier of the Google account of the customer."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Output only. The time this metadata was last updated."
                }
              },
              "description": "Output only. The metadata associated with this alert."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Required. The time the event that caused this alert was started or detected."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time this alert was created."
            },
            "customerId": {
              "type": "string",
              "description": "Output only. The unique identifier of the Google account of the customer."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time this alert was last updated."
            },
            "securityInvestigationToolLink": {
              "type": "string",
              "description": "Output only. An optional [Security Investigation Tool](https://support.google.com/a/answer/7575955) query for this alert."
            }
          },
          "description": "An alert affecting a customer."
        }
      ]
  alertcenter.alerts.getMetadata:
    description: |-
      Returns the metadata of an alert. Attempting to get metadata for a non-existent alert returns `NOT_FOUND` error.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/alertcenter/reference/rest/v1beta1/alerts/getMetadata
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "AlertMetadata",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert metadata from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform metatdata updates in order to avoid race conditions: An `etag` is returned in the response which contains alert metadata, and systems are expected to put that etag in the request to update alert metadata to ensure that their change will be applied to the same version of the alert metadata. If no `etag` is provided in the call to update alert metadata, then the existing alert metadata is overwritten blindly."
            },
            "status": {
              "type": "string",
              "description": "The current status of the alert. The supported values are the following: * NOT_STARTED * IN_PROGRESS * CLOSED"
            },
            "alertId": {
              "type": "string",
              "description": "Output only. The alert identifier."
            },
            "assignee": {
              "type": "string",
              "description": "The email address of the user assigned to the alert."
            },
            "severity": {
              "type": "string",
              "description": "The severity value of the alert. Alert Center will set this field at alert creation time, default's to an empty string when it could not be determined. The supported values for update actions on this field are the following: * HIGH * MEDIUM * LOW"
            },
            "customerId": {
              "type": "string",
              "description": "Output only. The unique identifier of the Google account of the customer."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time this metadata was last updated."
            }
          },
          "description": "An alert metadata."
        }
      ]
  alertcenter.alerts.list:
    description: |-
      Lists the alerts.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/alertcenter/reference/rest/v1beta1/alerts/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListAlertsResponse",
          "type": "object",
          "properties": {
            "alerts": {
              "type": "array",
              "items": {
                "id": "Alert",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Optional. The data associated with this alert, for example google.apps.alertcenter.type.DeviceCompromised.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "etag": {
                    "type": "string",
                    "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform alert updates in order to avoid race conditions: An `etag` is returned in the response which contains alerts, and systems are expected to put that etag in the request to update alert to ensure that their change will be applied to the same version of the alert. If no `etag` is provided in the call to update alert, then the existing alert is overwritten blindly."
                  },
                  "type": {
                    "type": "string",
                    "description": "Required. The type of the alert. This is output only after alert is created. For a list of available alert types see [Google Workspace Alert types](https://developers.google.com/admin-sdk/alertcenter/reference/alert-types)."
                  },
                  "source": {
                    "type": "string",
                    "description": "Required. A unique identifier for the system that reported the alert. This is output only after alert is created. Supported sources are any of the following: * Google Operations * Mobile device management * Gmail phishing * Data Loss Prevention * Domain wide takeout * State sponsored attack * Google identity"
                  },
                  "alertId": {
                    "type": "string",
                    "description": "Output only. The unique identifier for the alert."
                  },
                  "deleted": {
                    "type": "boolean",
                    "description": "Output only. `True` if this alert is marked for deletion."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Optional. The time the event that caused this alert ceased being active. If provided, the end time must not be earlier than the start time. If not provided, it indicates an ongoing alert."
                  },
                  "metadata": {
                    "id": "AlertMetadata",
                    "type": "object",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert metadata from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform metatdata updates in order to avoid race conditions: An `etag` is returned in the response which contains alert metadata, and systems are expected to put that etag in the request to update alert metadata to ensure that their change will be applied to the same version of the alert metadata. If no `etag` is provided in the call to update alert metadata, then the existing alert metadata is overwritten blindly."
                      },
                      "status": {
                        "type": "string",
                        "description": "The current status of the alert. The supported values are the following: * NOT_STARTED * IN_PROGRESS * CLOSED"
                      },
                      "alertId": {
                        "type": "string",
                        "description": "Output only. The alert identifier."
                      },
                      "assignee": {
                        "type": "string",
                        "description": "The email address of the user assigned to the alert."
                      },
                      "severity": {
                        "type": "string",
                        "description": "The severity value of the alert. Alert Center will set this field at alert creation time, default's to an empty string when it could not be determined. The supported values for update actions on this field are the following: * HIGH * MEDIUM * LOW"
                      },
                      "customerId": {
                        "type": "string",
                        "description": "Output only. The unique identifier of the Google account of the customer."
                      },
                      "updateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Output only. The time this metadata was last updated."
                      }
                    },
                    "description": "Output only. The metadata associated with this alert."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Required. The time the event that caused this alert was started or detected."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time this alert was created."
                  },
                  "customerId": {
                    "type": "string",
                    "description": "Output only. The unique identifier of the Google account of the customer."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time this alert was last updated."
                  },
                  "securityInvestigationToolLink": {
                    "type": "string",
                    "description": "Output only. An optional [Security Investigation Tool](https://support.google.com/a/answer/7575955) query for this alert."
                  }
                },
                "description": "An alert affecting a customer."
              },
              "description": "The list of alerts."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The token for the next page. If not empty, indicates that there may be more alerts that match the listing request; this value can be used in a subsequent ListAlertsRequest to get alerts continuing from last result of the current list call."
            }
          },
          "description": "Response message for an alert listing request."
        }
      ]
  alertcenter.alerts.undelete:
    description: |-
      Restores, or "undeletes", an alert that was marked for deletion within the past 30 days. Attempting to undelete an alert which was marked for deletion over 30 days ago (which has been removed from the Alert Center database) or a nonexistent alert returns a `NOT_FOUND` error. Attempting to undelete an alert which has not been marked for deletion has no effect.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/alertcenter/reference/rest/v1beta1/alerts/undelete
    example:
      inputs: [
        {
          "id": "UndeleteAlertRequest",
          "type": "object",
          "properties": {
            "customerId": {
              "type": "string",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert is associated with. Inferred from the caller identity if not provided."
            }
          },
          "description": "A request to undelete a specific alert that was marked for deletion."
        }
      ]
      outputs: [
        {
          "id": "Alert",
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "description": "Optional. The data associated with this alert, for example google.apps.alertcenter.type.DeviceCompromised.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "etag": {
              "type": "string",
              "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform alert updates in order to avoid race conditions: An `etag` is returned in the response which contains alerts, and systems are expected to put that etag in the request to update alert to ensure that their change will be applied to the same version of the alert. If no `etag` is provided in the call to update alert, then the existing alert is overwritten blindly."
            },
            "type": {
              "type": "string",
              "description": "Required. The type of the alert. This is output only after alert is created. For a list of available alert types see [Google Workspace Alert types](https://developers.google.com/admin-sdk/alertcenter/reference/alert-types)."
            },
            "source": {
              "type": "string",
              "description": "Required. A unique identifier for the system that reported the alert. This is output only after alert is created. Supported sources are any of the following: * Google Operations * Mobile device management * Gmail phishing * Data Loss Prevention * Domain wide takeout * State sponsored attack * Google identity"
            },
            "alertId": {
              "type": "string",
              "description": "Output only. The unique identifier for the alert."
            },
            "deleted": {
              "type": "boolean",
              "description": "Output only. `True` if this alert is marked for deletion."
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Optional. The time the event that caused this alert ceased being active. If provided, the end time must not be earlier than the start time. If not provided, it indicates an ongoing alert."
            },
            "metadata": {
              "id": "AlertMetadata",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert metadata from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform metatdata updates in order to avoid race conditions: An `etag` is returned in the response which contains alert metadata, and systems are expected to put that etag in the request to update alert metadata to ensure that their change will be applied to the same version of the alert metadata. If no `etag` is provided in the call to update alert metadata, then the existing alert metadata is overwritten blindly."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the alert. The supported values are the following: * NOT_STARTED * IN_PROGRESS * CLOSED"
                },
                "alertId": {
                  "type": "string",
                  "description": "Output only. The alert identifier."
                },
                "assignee": {
                  "type": "string",
                  "description": "The email address of the user assigned to the alert."
                },
                "severity": {
                  "type": "string",
                  "description": "The severity value of the alert. Alert Center will set this field at alert creation time, default's to an empty string when it could not be determined. The supported values for update actions on this field are the following: * HIGH * MEDIUM * LOW"
                },
                "customerId": {
                  "type": "string",
                  "description": "Output only. The unique identifier of the Google account of the customer."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Output only. The time this metadata was last updated."
                }
              },
              "description": "Output only. The metadata associated with this alert."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Required. The time the event that caused this alert was started or detected."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time this alert was created."
            },
            "customerId": {
              "type": "string",
              "description": "Output only. The unique identifier of the Google account of the customer."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time this alert was last updated."
            },
            "securityInvestigationToolLink": {
              "type": "string",
              "description": "Output only. An optional [Security Investigation Tool](https://support.google.com/a/answer/7575955) query for this alert."
            }
          },
          "description": "An alert affecting a customer."
        }
      ]
  directory.asps.delete:
    description: |-
      Delete an ASP issued by a user.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/asps/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.asps.get:
    description: |-
      Get information about an ASP issued by a user.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/asps/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Asp",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the ASP."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#asp",
              "description": "The type of the API resource. This is always `admin#directory#asp`."
            },
            "name": {
              "type": "string",
              "description": "The name of the application that the user, represented by their `userId`, entered when the ASP was created."
            },
            "codeId": {
              "type": "integer",
              "format": "int32",
              "description": "The unique ID of the ASP."
            },
            "userKey": {
              "type": "string",
              "description": "The unique ID of the user who issued the ASP."
            },
            "creationTime": {
              "type": "string",
              "format": "int64",
              "description": "The time when the ASP was created. Expressed in [Unix time](https://en.wikipedia.org/wiki/Epoch_time) format."
            },
            "lastTimeUsed": {
              "type": "string",
              "format": "int64",
              "description": "The time when the ASP was last used. Expressed in [Unix time](https://en.wikipedia.org/wiki/Epoch_time) format."
            }
          },
          "description": "An application-specific password (ASP) is used with applications that do not accept a verification code when logging into the application on certain devices. The ASP access code is used instead of the login and password you commonly use when accessing an application through a browser. For more information about ASPs and how to create one, see the [help center](https://support.google.com/a/answer/2537800#asp)."
        }
      ]
  directory.asps.list:
    description: |-
      List the ASPs issued by a user.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/asps/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Asps",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#aspList",
              "description": "The type of the API resource. This is always `admin#directory#aspList`."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "Asp",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "ETag of the ASP."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#asp",
                    "description": "The type of the API resource. This is always `admin#directory#asp`."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the application that the user, represented by their `userId`, entered when the ASP was created."
                  },
                  "codeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The unique ID of the ASP."
                  },
                  "userKey": {
                    "type": "string",
                    "description": "The unique ID of the user who issued the ASP."
                  },
                  "creationTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "The time when the ASP was created. Expressed in [Unix time](https://en.wikipedia.org/wiki/Epoch_time) format."
                  },
                  "lastTimeUsed": {
                    "type": "string",
                    "format": "int64",
                    "description": "The time when the ASP was last used. Expressed in [Unix time](https://en.wikipedia.org/wiki/Epoch_time) format."
                  }
                },
                "description": "An application-specific password (ASP) is used with applications that do not accept a verification code when logging into the application on certain devices. The ASP access code is used instead of the login and password you commonly use when accessing an application through a browser. For more information about ASPs and how to create one, see the [help center](https://support.google.com/a/answer/2537800#asp)."
              },
              "description": "A list of ASP resources."
            }
          }
        }
      ]
  directory.chromeosdevices.action:
    description: |-
      Takes an action that affects a Chrome OS Device. This includes deprovisioning, disabling, and re-enabling devices. *Warning:* * Deprovisioning a device will stop device policy syncing and remove device-level printers. After a device is deprovisioned, it must be wiped before it can be re-enrolled. * Lost or stolen devices should use the disable action. * Re-enabling a disabled device will consume a device license. If you do not have sufficient licenses available when completing the re-enable action, you will receive an error. For more information about deprovisioning and disabling devices, visit the [help center](https://support.google.com/chrome/a/answer/3523633).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/chromeosdevices/action
    example:
      inputs: [
        {
          "id": "ChromeOsDeviceAction",
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.chromeosdevices.action"
                ]
              },
              "description": "Action to be taken on the Chrome OS device."
            },
            "deprovisionReason": {
              "type": "string",
              "description": "Only used when the action is `deprovision`. With the `deprovision` action, this field is required. *Note*: The deprovision reason is audited because it might have implications on licenses for perpetual subscription customers."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  directory.chromeosdevices.get:
    description: |-
      Retrieves a Chrome OS device's properties.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/chromeosdevices/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ChromeOsDevice",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#chromeosdevice",
              "description": "The type of resource. For the Chromeosdevices resource, the value is `admin#directory#chromeosdevice`."
            },
            "meid": {
              "type": "string",
              "description": "The Mobile Equipment Identifier (MEID) or the International Mobile Equipment Identity (IMEI) for the 3G mobile card in a mobile device. A MEID/IMEI is typically used when adding a device to a wireless carrier's post-pay service plan. If the device does not have this information, this property is not included in the response. For more information on how to export a MEID/IMEI list, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-chrome-devices.html#export_meid)."
            },
            "model": {
              "type": "string",
              "description": "The device's model information. If the device does not have this information, this property is not included in the response."
            },
            "notes": {
              "type": "string",
              "description": "Notes about this device added by the administrator. This property can be [searched](https://support.google.com/chrome/a/answer/1698333) with the [list](/admin-sdk/directory/v1/reference/chromeosdevices/list) method's `query` parameter. Maximum length is 500 characters. Empty values are allowed."
            },
            "status": {
              "type": "string",
              "description": "The status of the device."
            },
            "bootMode": {
              "type": "string",
              "description": "The boot mode for the device. The possible values are: * `Verified`: The device is running a valid version of the Chrome OS. * `Dev`: The devices's developer hardware switch is enabled. When booted, the device has a command line shell. For an example of a developer switch, see the [Chromebook developer information](https://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/samsung-series-5-chromebook#TOC-Developer-switch)."
            },
            "deviceId": {
              "type": "string",
              "description": "The unique ID of the Chrome device."
            },
            "lastSync": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)"
            },
            "osVersion": {
              "type": "string",
              "description": "The Chrome device's operating system version."
            },
            "macAddress": {
              "type": "string",
              "description": "The device's wireless MAC address. If the device does not have this information, it is not included in the response."
            },
            "deviceFiles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "File name"
                  },
                  "type": {
                    "type": "string",
                    "description": "File type"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the file was created"
                  },
                  "downloadUrl": {
                    "type": "string",
                    "description": "File download URL"
                  }
                }
              },
              "description": "List of device files to download (Read-only)"
            },
            "orderNumber": {
              "type": "string",
              "description": "The device's order number. Only devices directly purchased from Google have an order number."
            },
            "orgUnitPath": {
              "type": "string",
              "description": "The full parent path with the organizational unit's name associated with the device. Path names are case insensitive. If the parent organizational unit is the top-level organization, it is represented as a forward slash, `/`. This property can be [updated](/admin-sdk/directory/v1/guides/manage-chrome-devices#update_chrome_device) using the API. For more information about how to create an organizational structure for your device, see the [administration help center](https://support.google.com/a/answer/182433)."
            },
            "recentUsers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of the user."
                  },
                  "email": {
                    "type": "string",
                    "description": "The user's email address. This is only present if the user type is `USER_TYPE_MANAGED`."
                  }
                },
                "description": "List of recent device users, in descending order, by last login time."
              },
              "description": "List of recent device users, in descending order, by last login time."
            },
            "serialNumber": {
              "type": "string",
              "description": "The Chrome device serial number entered when the device was enabled. This value is the same as the Admin console's *Serial Number* in the *Chrome OS Devices* tab."
            },
            "annotatedUser": {
              "type": "string",
              "description": "The user of the device as noted by the administrator. Maximum length is 100 characters. Empty values are allowed."
            },
            "willAutoRenew": {
              "type": "boolean",
              "description": "Determines if the device will auto renew its support after the support end date. This is a read-only property."
            },
            "dockMacAddress": {
              "type": "string",
              "description": "(Read-only) Built-in MAC address for the docking station that the device connected to. Factory sets Media access control address (MAC address) assigned for use by a dock. It is reserved specifically for MAC pass through device policy. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices."
            },
            "supportEndDate": {
              "type": "string",
              "format": "date-time",
              "description": "Final date the device will be supported (Read-only)"
            },
            "systemRamTotal": {
              "type": "string",
              "format": "int64",
              "description": "Total RAM on the device [in bytes] (Read-only)"
            },
            "tpmVersionInfo": {
              "type": "object",
              "properties": {
                "family": {
                  "type": "string",
                  "description": "TPM family. We use the TPM 2.0 style encoding, e.g.: TPM 1.2: \"1.2\" -> 312e3200 TPM 2.0: \"2.0\" -> 322e3000"
                },
                "tpmModel": {
                  "type": "string",
                  "description": "TPM model number."
                },
                "specLevel": {
                  "type": "string",
                  "description": "TPM specification level. See Library Specification for TPM 2.0 and Main Specification for TPM 1.2."
                },
                "manufacturer": {
                  "type": "string",
                  "description": "TPM manufacturer code."
                },
                "vendorSpecific": {
                  "type": "string",
                  "description": "Vendor-specific information such as Vendor ID."
                },
                "firmwareVersion": {
                  "type": "string",
                  "description": "TPM firmware version."
                }
              },
              "description": "Trusted Platform Module (TPM) (Read-only)"
            },
            "firmwareVersion": {
              "type": "string",
              "description": "The Chrome device's firmware version."
            },
            "manufactureDate": {
              "type": "string",
              "description": "(Read-only) The date the device was manufactured in yyyy-mm-dd format."
            },
            "platformVersion": {
              "type": "string",
              "description": "The Chrome device's platform version."
            },
            "screenshotFiles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "File name"
                  },
                  "type": {
                    "type": "string",
                    "description": "File type"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the file was created"
                  },
                  "downloadUrl": {
                    "type": "string",
                    "description": "File download URL"
                  }
                }
              },
              "description": "List of screenshot files to download. Type is always \"SCREENSHOT_FILE\". (Read-only)"
            },
            "activeTimeRanges": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of usage"
                  },
                  "activeTime": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Duration of usage in milliseconds."
                  }
                }
              },
              "description": "List of active time ranges (Read-only)."
            },
            "annotatedAssetId": {
              "type": "string",
              "description": "The asset identifier as noted by an administrator or specified during enrollment."
            },
            "cpuStatusReports": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "reportTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the report was received."
                  },
                  "cpuTemperatureInfo": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "CPU label"
                        },
                        "temperature": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Temperature in Celsius degrees."
                        }
                      }
                    },
                    "description": "List of CPU temperature samples."
                  },
                  "cpuUtilizationPercentageInfo": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              },
              "description": "Reports of CPU utilization and temperature (Read-only)"
            },
            "lastKnownNetwork": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ipAddress": {
                    "type": "string",
                    "description": "The IP address."
                  },
                  "wanIpAddress": {
                    "type": "string",
                    "description": "The WAN IP address."
                  }
                },
                "description": "Information for an ip address."
              },
              "description": "Contains last known network (Read-only)"
            },
            "annotatedLocation": {
              "type": "string",
              "description": "The address or location of the device as noted by the administrator. Maximum length is `200` characters. Empty values are allowed."
            },
            "diskVolumeReports": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "volumeInfo": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "volumeId": {
                          "type": "string",
                          "description": "Volume id"
                        },
                        "storageFree": {
                          "type": "string",
                          "format": "int64",
                          "description": "Free disk space [in bytes]"
                        },
                        "storageTotal": {
                          "type": "string",
                          "format": "int64",
                          "description": "Total disk space [in bytes]"
                        }
                      }
                    },
                    "description": "Disk volumes"
                  }
                }
              },
              "description": "Reports of disk space and other info about mounted/connected volumes."
            },
            "ethernetMacAddress": {
              "type": "string",
              "description": "The device's MAC address on the ethernet network interface."
            },
            "lastEnrollmentTime": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time the device was last enrolled (Read-only)"
            },
            "ethernetMacAddress0": {
              "type": "string",
              "description": "(Read-only) MAC address used by the Chromebook’s internal ethernet port, and for onboard network (ethernet) interface. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices."
            },
            "autoUpdateExpiration": {
              "type": "string",
              "format": "int64",
              "description": "(Read-only) The timestamp after which the device will stop receiving Chrome updates or support"
            },
            "systemRamFreeReports": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "reportTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the report was received."
                  },
                  "systemRamFreeInfo": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "int64"
                    }
                  }
                }
              },
              "description": "Reports of amounts of available RAM memory (Read-only)"
            }
          },
          "description": "Google Chrome devices run on the [Chrome OS](https://support.google.com/chromeos). For more information about common API tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-chrome-devices)."
        }
      ]
  directory.chromeosdevices.list:
    description: |-
      Retrieves a paginated list of Chrome OS devices within an account.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/chromeosdevices/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ChromeOsDevices",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#chromeosdevices",
              "description": "Kind of resource this is."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token used to access the next page of this result. To access the next page, use this token's value in the `pageToken` query string of this request."
            },
            "chromeosdevices": {
              "type": "array",
              "items": {
                "id": "ChromeOsDevice",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#chromeosdevice",
                    "description": "The type of resource. For the Chromeosdevices resource, the value is `admin#directory#chromeosdevice`."
                  },
                  "meid": {
                    "type": "string",
                    "description": "The Mobile Equipment Identifier (MEID) or the International Mobile Equipment Identity (IMEI) for the 3G mobile card in a mobile device. A MEID/IMEI is typically used when adding a device to a wireless carrier's post-pay service plan. If the device does not have this information, this property is not included in the response. For more information on how to export a MEID/IMEI list, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-chrome-devices.html#export_meid)."
                  },
                  "model": {
                    "type": "string",
                    "description": "The device's model information. If the device does not have this information, this property is not included in the response."
                  },
                  "notes": {
                    "type": "string",
                    "description": "Notes about this device added by the administrator. This property can be [searched](https://support.google.com/chrome/a/answer/1698333) with the [list](/admin-sdk/directory/v1/reference/chromeosdevices/list) method's `query` parameter. Maximum length is 500 characters. Empty values are allowed."
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the device."
                  },
                  "bootMode": {
                    "type": "string",
                    "description": "The boot mode for the device. The possible values are: * `Verified`: The device is running a valid version of the Chrome OS. * `Dev`: The devices's developer hardware switch is enabled. When booted, the device has a command line shell. For an example of a developer switch, see the [Chromebook developer information](https://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/samsung-series-5-chromebook#TOC-Developer-switch)."
                  },
                  "deviceId": {
                    "type": "string",
                    "description": "The unique ID of the Chrome device."
                  },
                  "lastSync": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)"
                  },
                  "osVersion": {
                    "type": "string",
                    "description": "The Chrome device's operating system version."
                  },
                  "macAddress": {
                    "type": "string",
                    "description": "The device's wireless MAC address. If the device does not have this information, it is not included in the response."
                  },
                  "deviceFiles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "File name"
                        },
                        "type": {
                          "type": "string",
                          "description": "File type"
                        },
                        "createTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time the file was created"
                        },
                        "downloadUrl": {
                          "type": "string",
                          "description": "File download URL"
                        }
                      }
                    },
                    "description": "List of device files to download (Read-only)"
                  },
                  "orderNumber": {
                    "type": "string",
                    "description": "The device's order number. Only devices directly purchased from Google have an order number."
                  },
                  "orgUnitPath": {
                    "type": "string",
                    "description": "The full parent path with the organizational unit's name associated with the device. Path names are case insensitive. If the parent organizational unit is the top-level organization, it is represented as a forward slash, `/`. This property can be [updated](/admin-sdk/directory/v1/guides/manage-chrome-devices#update_chrome_device) using the API. For more information about how to create an organizational structure for your device, see the [administration help center](https://support.google.com/a/answer/182433)."
                  },
                  "recentUsers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of the user."
                        },
                        "email": {
                          "type": "string",
                          "description": "The user's email address. This is only present if the user type is `USER_TYPE_MANAGED`."
                        }
                      },
                      "description": "List of recent device users, in descending order, by last login time."
                    },
                    "description": "List of recent device users, in descending order, by last login time."
                  },
                  "serialNumber": {
                    "type": "string",
                    "description": "The Chrome device serial number entered when the device was enabled. This value is the same as the Admin console's *Serial Number* in the *Chrome OS Devices* tab."
                  },
                  "annotatedUser": {
                    "type": "string",
                    "description": "The user of the device as noted by the administrator. Maximum length is 100 characters. Empty values are allowed."
                  },
                  "willAutoRenew": {
                    "type": "boolean",
                    "description": "Determines if the device will auto renew its support after the support end date. This is a read-only property."
                  },
                  "dockMacAddress": {
                    "type": "string",
                    "description": "(Read-only) Built-in MAC address for the docking station that the device connected to. Factory sets Media access control address (MAC address) assigned for use by a dock. It is reserved specifically for MAC pass through device policy. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices."
                  },
                  "supportEndDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Final date the device will be supported (Read-only)"
                  },
                  "systemRamTotal": {
                    "type": "string",
                    "format": "int64",
                    "description": "Total RAM on the device [in bytes] (Read-only)"
                  },
                  "tpmVersionInfo": {
                    "type": "object",
                    "properties": {
                      "family": {
                        "type": "string",
                        "description": "TPM family. We use the TPM 2.0 style encoding, e.g.: TPM 1.2: \"1.2\" -> 312e3200 TPM 2.0: \"2.0\" -> 322e3000"
                      },
                      "tpmModel": {
                        "type": "string",
                        "description": "TPM model number."
                      },
                      "specLevel": {
                        "type": "string",
                        "description": "TPM specification level. See Library Specification for TPM 2.0 and Main Specification for TPM 1.2."
                      },
                      "manufacturer": {
                        "type": "string",
                        "description": "TPM manufacturer code."
                      },
                      "vendorSpecific": {
                        "type": "string",
                        "description": "Vendor-specific information such as Vendor ID."
                      },
                      "firmwareVersion": {
                        "type": "string",
                        "description": "TPM firmware version."
                      }
                    },
                    "description": "Trusted Platform Module (TPM) (Read-only)"
                  },
                  "firmwareVersion": {
                    "type": "string",
                    "description": "The Chrome device's firmware version."
                  },
                  "manufactureDate": {
                    "type": "string",
                    "description": "(Read-only) The date the device was manufactured in yyyy-mm-dd format."
                  },
                  "platformVersion": {
                    "type": "string",
                    "description": "The Chrome device's platform version."
                  },
                  "screenshotFiles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "File name"
                        },
                        "type": {
                          "type": "string",
                          "description": "File type"
                        },
                        "createTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time the file was created"
                        },
                        "downloadUrl": {
                          "type": "string",
                          "description": "File download URL"
                        }
                      }
                    },
                    "description": "List of screenshot files to download. Type is always \"SCREENSHOT_FILE\". (Read-only)"
                  },
                  "activeTimeRanges": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of usage"
                        },
                        "activeTime": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Duration of usage in milliseconds."
                        }
                      }
                    },
                    "description": "List of active time ranges (Read-only)."
                  },
                  "annotatedAssetId": {
                    "type": "string",
                    "description": "The asset identifier as noted by an administrator or specified during enrollment."
                  },
                  "cpuStatusReports": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "reportTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time the report was received."
                        },
                        "cpuTemperatureInfo": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "CPU label"
                              },
                              "temperature": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Temperature in Celsius degrees."
                              }
                            }
                          },
                          "description": "List of CPU temperature samples."
                        },
                        "cpuUtilizationPercentageInfo": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "description": "Reports of CPU utilization and temperature (Read-only)"
                  },
                  "lastKnownNetwork": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ipAddress": {
                          "type": "string",
                          "description": "The IP address."
                        },
                        "wanIpAddress": {
                          "type": "string",
                          "description": "The WAN IP address."
                        }
                      },
                      "description": "Information for an ip address."
                    },
                    "description": "Contains last known network (Read-only)"
                  },
                  "annotatedLocation": {
                    "type": "string",
                    "description": "The address or location of the device as noted by the administrator. Maximum length is `200` characters. Empty values are allowed."
                  },
                  "diskVolumeReports": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "volumeInfo": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "volumeId": {
                                "type": "string",
                                "description": "Volume id"
                              },
                              "storageFree": {
                                "type": "string",
                                "format": "int64",
                                "description": "Free disk space [in bytes]"
                              },
                              "storageTotal": {
                                "type": "string",
                                "format": "int64",
                                "description": "Total disk space [in bytes]"
                              }
                            }
                          },
                          "description": "Disk volumes"
                        }
                      }
                    },
                    "description": "Reports of disk space and other info about mounted/connected volumes."
                  },
                  "ethernetMacAddress": {
                    "type": "string",
                    "description": "The device's MAC address on the ethernet network interface."
                  },
                  "lastEnrollmentTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the device was last enrolled (Read-only)"
                  },
                  "ethernetMacAddress0": {
                    "type": "string",
                    "description": "(Read-only) MAC address used by the Chromebook’s internal ethernet port, and for onboard network (ethernet) interface. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices."
                  },
                  "autoUpdateExpiration": {
                    "type": "string",
                    "format": "int64",
                    "description": "(Read-only) The timestamp after which the device will stop receiving Chrome updates or support"
                  },
                  "systemRamFreeReports": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "reportTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time the report was received."
                        },
                        "systemRamFreeInfo": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "int64"
                          }
                        }
                      }
                    },
                    "description": "Reports of amounts of available RAM memory (Read-only)"
                  }
                },
                "description": "Google Chrome devices run on the [Chrome OS](https://support.google.com/chromeos). For more information about common API tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-chrome-devices)."
              },
              "description": "List of Chrome OS Device objects."
            }
          }
        }
      ]
  directory.chromeosdevices.moveDevicesToOu:
    description: |-
      Move or insert multiple Chrome OS devices to an organizational unit. You can move up to 50 devices at once.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/chromeosdevices/moveDevicesToOu
    example:
      inputs: [
        {
          "id": "ChromeOsMoveDevicesToOu",
          "type": "object",
          "properties": {
            "deviceIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "annotations": {
                "required": [
                  "directory.chromeosdevices.moveDevicesToOu"
                ]
              },
              "description": "Chrome OS devices to be moved to OU"
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  directory.chromeosdevices.patch:
    description: |-
      Updates a device's updatable properties, such as `annotatedUser`, `annotatedLocation`, `notes`, `orgUnitPath`, or `annotatedAssetId`. This method supports [patch semantics](/admin-sdk/directory/v1/guides/performance#patch).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/chromeosdevices/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ChromeOsDevice",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#chromeosdevice",
              "description": "The type of resource. For the Chromeosdevices resource, the value is `admin#directory#chromeosdevice`."
            },
            "meid": {
              "type": "string",
              "description": "The Mobile Equipment Identifier (MEID) or the International Mobile Equipment Identity (IMEI) for the 3G mobile card in a mobile device. A MEID/IMEI is typically used when adding a device to a wireless carrier's post-pay service plan. If the device does not have this information, this property is not included in the response. For more information on how to export a MEID/IMEI list, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-chrome-devices.html#export_meid)."
            },
            "model": {
              "type": "string",
              "description": "The device's model information. If the device does not have this information, this property is not included in the response."
            },
            "notes": {
              "type": "string",
              "description": "Notes about this device added by the administrator. This property can be [searched](https://support.google.com/chrome/a/answer/1698333) with the [list](/admin-sdk/directory/v1/reference/chromeosdevices/list) method's `query` parameter. Maximum length is 500 characters. Empty values are allowed."
            },
            "status": {
              "type": "string",
              "description": "The status of the device."
            },
            "bootMode": {
              "type": "string",
              "description": "The boot mode for the device. The possible values are: * `Verified`: The device is running a valid version of the Chrome OS. * `Dev`: The devices's developer hardware switch is enabled. When booted, the device has a command line shell. For an example of a developer switch, see the [Chromebook developer information](https://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/samsung-series-5-chromebook#TOC-Developer-switch)."
            },
            "deviceId": {
              "type": "string",
              "description": "The unique ID of the Chrome device."
            },
            "lastSync": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)"
            },
            "osVersion": {
              "type": "string",
              "description": "The Chrome device's operating system version."
            },
            "macAddress": {
              "type": "string",
              "description": "The device's wireless MAC address. If the device does not have this information, it is not included in the response."
            },
            "deviceFiles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "File name"
                  },
                  "type": {
                    "type": "string",
                    "description": "File type"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the file was created"
                  },
                  "downloadUrl": {
                    "type": "string",
                    "description": "File download URL"
                  }
                }
              },
              "description": "List of device files to download (Read-only)"
            },
            "orderNumber": {
              "type": "string",
              "description": "The device's order number. Only devices directly purchased from Google have an order number."
            },
            "orgUnitPath": {
              "type": "string",
              "description": "The full parent path with the organizational unit's name associated with the device. Path names are case insensitive. If the parent organizational unit is the top-level organization, it is represented as a forward slash, `/`. This property can be [updated](/admin-sdk/directory/v1/guides/manage-chrome-devices#update_chrome_device) using the API. For more information about how to create an organizational structure for your device, see the [administration help center](https://support.google.com/a/answer/182433)."
            },
            "recentUsers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of the user."
                  },
                  "email": {
                    "type": "string",
                    "description": "The user's email address. This is only present if the user type is `USER_TYPE_MANAGED`."
                  }
                },
                "description": "List of recent device users, in descending order, by last login time."
              },
              "description": "List of recent device users, in descending order, by last login time."
            },
            "serialNumber": {
              "type": "string",
              "description": "The Chrome device serial number entered when the device was enabled. This value is the same as the Admin console's *Serial Number* in the *Chrome OS Devices* tab."
            },
            "annotatedUser": {
              "type": "string",
              "description": "The user of the device as noted by the administrator. Maximum length is 100 characters. Empty values are allowed."
            },
            "willAutoRenew": {
              "type": "boolean",
              "description": "Determines if the device will auto renew its support after the support end date. This is a read-only property."
            },
            "dockMacAddress": {
              "type": "string",
              "description": "(Read-only) Built-in MAC address for the docking station that the device connected to. Factory sets Media access control address (MAC address) assigned for use by a dock. It is reserved specifically for MAC pass through device policy. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices."
            },
            "supportEndDate": {
              "type": "string",
              "format": "date-time",
              "description": "Final date the device will be supported (Read-only)"
            },
            "systemRamTotal": {
              "type": "string",
              "format": "int64",
              "description": "Total RAM on the device [in bytes] (Read-only)"
            },
            "tpmVersionInfo": {
              "type": "object",
              "properties": {
                "family": {
                  "type": "string",
                  "description": "TPM family. We use the TPM 2.0 style encoding, e.g.: TPM 1.2: \"1.2\" -> 312e3200 TPM 2.0: \"2.0\" -> 322e3000"
                },
                "tpmModel": {
                  "type": "string",
                  "description": "TPM model number."
                },
                "specLevel": {
                  "type": "string",
                  "description": "TPM specification level. See Library Specification for TPM 2.0 and Main Specification for TPM 1.2."
                },
                "manufacturer": {
                  "type": "string",
                  "description": "TPM manufacturer code."
                },
                "vendorSpecific": {
                  "type": "string",
                  "description": "Vendor-specific information such as Vendor ID."
                },
                "firmwareVersion": {
                  "type": "string",
                  "description": "TPM firmware version."
                }
              },
              "description": "Trusted Platform Module (TPM) (Read-only)"
            },
            "firmwareVersion": {
              "type": "string",
              "description": "The Chrome device's firmware version."
            },
            "manufactureDate": {
              "type": "string",
              "description": "(Read-only) The date the device was manufactured in yyyy-mm-dd format."
            },
            "platformVersion": {
              "type": "string",
              "description": "The Chrome device's platform version."
            },
            "screenshotFiles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "File name"
                  },
                  "type": {
                    "type": "string",
                    "description": "File type"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the file was created"
                  },
                  "downloadUrl": {
                    "type": "string",
                    "description": "File download URL"
                  }
                }
              },
              "description": "List of screenshot files to download. Type is always \"SCREENSHOT_FILE\". (Read-only)"
            },
            "activeTimeRanges": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of usage"
                  },
                  "activeTime": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Duration of usage in milliseconds."
                  }
                }
              },
              "description": "List of active time ranges (Read-only)."
            },
            "annotatedAssetId": {
              "type": "string",
              "description": "The asset identifier as noted by an administrator or specified during enrollment."
            },
            "cpuStatusReports": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "reportTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the report was received."
                  },
                  "cpuTemperatureInfo": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "CPU label"
                        },
                        "temperature": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Temperature in Celsius degrees."
                        }
                      }
                    },
                    "description": "List of CPU temperature samples."
                  },
                  "cpuUtilizationPercentageInfo": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              },
              "description": "Reports of CPU utilization and temperature (Read-only)"
            },
            "lastKnownNetwork": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ipAddress": {
                    "type": "string",
                    "description": "The IP address."
                  },
                  "wanIpAddress": {
                    "type": "string",
                    "description": "The WAN IP address."
                  }
                },
                "description": "Information for an ip address."
              },
              "description": "Contains last known network (Read-only)"
            },
            "annotatedLocation": {
              "type": "string",
              "description": "The address or location of the device as noted by the administrator. Maximum length is `200` characters. Empty values are allowed."
            },
            "diskVolumeReports": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "volumeInfo": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "volumeId": {
                          "type": "string",
                          "description": "Volume id"
                        },
                        "storageFree": {
                          "type": "string",
                          "format": "int64",
                          "description": "Free disk space [in bytes]"
                        },
                        "storageTotal": {
                          "type": "string",
                          "format": "int64",
                          "description": "Total disk space [in bytes]"
                        }
                      }
                    },
                    "description": "Disk volumes"
                  }
                }
              },
              "description": "Reports of disk space and other info about mounted/connected volumes."
            },
            "ethernetMacAddress": {
              "type": "string",
              "description": "The device's MAC address on the ethernet network interface."
            },
            "lastEnrollmentTime": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time the device was last enrolled (Read-only)"
            },
            "ethernetMacAddress0": {
              "type": "string",
              "description": "(Read-only) MAC address used by the Chromebook’s internal ethernet port, and for onboard network (ethernet) interface. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices."
            },
            "autoUpdateExpiration": {
              "type": "string",
              "format": "int64",
              "description": "(Read-only) The timestamp after which the device will stop receiving Chrome updates or support"
            },
            "systemRamFreeReports": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "reportTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the report was received."
                  },
                  "systemRamFreeInfo": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "int64"
                    }
                  }
                }
              },
              "description": "Reports of amounts of available RAM memory (Read-only)"
            }
          },
          "description": "Google Chrome devices run on the [Chrome OS](https://support.google.com/chromeos). For more information about common API tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-chrome-devices)."
        }
      ]
  directory.chromeosdevices.update:
    description: |-
      Updates a device's updatable properties, such as `annotatedUser`, `annotatedLocation`, `notes`, `orgUnitPath`, or `annotatedAssetId`.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/chromeosdevices/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ChromeOsDevice",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#chromeosdevice",
              "description": "The type of resource. For the Chromeosdevices resource, the value is `admin#directory#chromeosdevice`."
            },
            "meid": {
              "type": "string",
              "description": "The Mobile Equipment Identifier (MEID) or the International Mobile Equipment Identity (IMEI) for the 3G mobile card in a mobile device. A MEID/IMEI is typically used when adding a device to a wireless carrier's post-pay service plan. If the device does not have this information, this property is not included in the response. For more information on how to export a MEID/IMEI list, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-chrome-devices.html#export_meid)."
            },
            "model": {
              "type": "string",
              "description": "The device's model information. If the device does not have this information, this property is not included in the response."
            },
            "notes": {
              "type": "string",
              "description": "Notes about this device added by the administrator. This property can be [searched](https://support.google.com/chrome/a/answer/1698333) with the [list](/admin-sdk/directory/v1/reference/chromeosdevices/list) method's `query` parameter. Maximum length is 500 characters. Empty values are allowed."
            },
            "status": {
              "type": "string",
              "description": "The status of the device."
            },
            "bootMode": {
              "type": "string",
              "description": "The boot mode for the device. The possible values are: * `Verified`: The device is running a valid version of the Chrome OS. * `Dev`: The devices's developer hardware switch is enabled. When booted, the device has a command line shell. For an example of a developer switch, see the [Chromebook developer information](https://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/samsung-series-5-chromebook#TOC-Developer-switch)."
            },
            "deviceId": {
              "type": "string",
              "description": "The unique ID of the Chrome device."
            },
            "lastSync": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)"
            },
            "osVersion": {
              "type": "string",
              "description": "The Chrome device's operating system version."
            },
            "macAddress": {
              "type": "string",
              "description": "The device's wireless MAC address. If the device does not have this information, it is not included in the response."
            },
            "deviceFiles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "File name"
                  },
                  "type": {
                    "type": "string",
                    "description": "File type"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the file was created"
                  },
                  "downloadUrl": {
                    "type": "string",
                    "description": "File download URL"
                  }
                }
              },
              "description": "List of device files to download (Read-only)"
            },
            "orderNumber": {
              "type": "string",
              "description": "The device's order number. Only devices directly purchased from Google have an order number."
            },
            "orgUnitPath": {
              "type": "string",
              "description": "The full parent path with the organizational unit's name associated with the device. Path names are case insensitive. If the parent organizational unit is the top-level organization, it is represented as a forward slash, `/`. This property can be [updated](/admin-sdk/directory/v1/guides/manage-chrome-devices#update_chrome_device) using the API. For more information about how to create an organizational structure for your device, see the [administration help center](https://support.google.com/a/answer/182433)."
            },
            "recentUsers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of the user."
                  },
                  "email": {
                    "type": "string",
                    "description": "The user's email address. This is only present if the user type is `USER_TYPE_MANAGED`."
                  }
                },
                "description": "List of recent device users, in descending order, by last login time."
              },
              "description": "List of recent device users, in descending order, by last login time."
            },
            "serialNumber": {
              "type": "string",
              "description": "The Chrome device serial number entered when the device was enabled. This value is the same as the Admin console's *Serial Number* in the *Chrome OS Devices* tab."
            },
            "annotatedUser": {
              "type": "string",
              "description": "The user of the device as noted by the administrator. Maximum length is 100 characters. Empty values are allowed."
            },
            "willAutoRenew": {
              "type": "boolean",
              "description": "Determines if the device will auto renew its support after the support end date. This is a read-only property."
            },
            "dockMacAddress": {
              "type": "string",
              "description": "(Read-only) Built-in MAC address for the docking station that the device connected to. Factory sets Media access control address (MAC address) assigned for use by a dock. It is reserved specifically for MAC pass through device policy. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices."
            },
            "supportEndDate": {
              "type": "string",
              "format": "date-time",
              "description": "Final date the device will be supported (Read-only)"
            },
            "systemRamTotal": {
              "type": "string",
              "format": "int64",
              "description": "Total RAM on the device [in bytes] (Read-only)"
            },
            "tpmVersionInfo": {
              "type": "object",
              "properties": {
                "family": {
                  "type": "string",
                  "description": "TPM family. We use the TPM 2.0 style encoding, e.g.: TPM 1.2: \"1.2\" -> 312e3200 TPM 2.0: \"2.0\" -> 322e3000"
                },
                "tpmModel": {
                  "type": "string",
                  "description": "TPM model number."
                },
                "specLevel": {
                  "type": "string",
                  "description": "TPM specification level. See Library Specification for TPM 2.0 and Main Specification for TPM 1.2."
                },
                "manufacturer": {
                  "type": "string",
                  "description": "TPM manufacturer code."
                },
                "vendorSpecific": {
                  "type": "string",
                  "description": "Vendor-specific information such as Vendor ID."
                },
                "firmwareVersion": {
                  "type": "string",
                  "description": "TPM firmware version."
                }
              },
              "description": "Trusted Platform Module (TPM) (Read-only)"
            },
            "firmwareVersion": {
              "type": "string",
              "description": "The Chrome device's firmware version."
            },
            "manufactureDate": {
              "type": "string",
              "description": "(Read-only) The date the device was manufactured in yyyy-mm-dd format."
            },
            "platformVersion": {
              "type": "string",
              "description": "The Chrome device's platform version."
            },
            "screenshotFiles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "File name"
                  },
                  "type": {
                    "type": "string",
                    "description": "File type"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the file was created"
                  },
                  "downloadUrl": {
                    "type": "string",
                    "description": "File download URL"
                  }
                }
              },
              "description": "List of screenshot files to download. Type is always \"SCREENSHOT_FILE\". (Read-only)"
            },
            "activeTimeRanges": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of usage"
                  },
                  "activeTime": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Duration of usage in milliseconds."
                  }
                }
              },
              "description": "List of active time ranges (Read-only)."
            },
            "annotatedAssetId": {
              "type": "string",
              "description": "The asset identifier as noted by an administrator or specified during enrollment."
            },
            "cpuStatusReports": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "reportTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the report was received."
                  },
                  "cpuTemperatureInfo": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "CPU label"
                        },
                        "temperature": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Temperature in Celsius degrees."
                        }
                      }
                    },
                    "description": "List of CPU temperature samples."
                  },
                  "cpuUtilizationPercentageInfo": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              },
              "description": "Reports of CPU utilization and temperature (Read-only)"
            },
            "lastKnownNetwork": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ipAddress": {
                    "type": "string",
                    "description": "The IP address."
                  },
                  "wanIpAddress": {
                    "type": "string",
                    "description": "The WAN IP address."
                  }
                },
                "description": "Information for an ip address."
              },
              "description": "Contains last known network (Read-only)"
            },
            "annotatedLocation": {
              "type": "string",
              "description": "The address or location of the device as noted by the administrator. Maximum length is `200` characters. Empty values are allowed."
            },
            "diskVolumeReports": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "volumeInfo": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "volumeId": {
                          "type": "string",
                          "description": "Volume id"
                        },
                        "storageFree": {
                          "type": "string",
                          "format": "int64",
                          "description": "Free disk space [in bytes]"
                        },
                        "storageTotal": {
                          "type": "string",
                          "format": "int64",
                          "description": "Total disk space [in bytes]"
                        }
                      }
                    },
                    "description": "Disk volumes"
                  }
                }
              },
              "description": "Reports of disk space and other info about mounted/connected volumes."
            },
            "ethernetMacAddress": {
              "type": "string",
              "description": "The device's MAC address on the ethernet network interface."
            },
            "lastEnrollmentTime": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time the device was last enrolled (Read-only)"
            },
            "ethernetMacAddress0": {
              "type": "string",
              "description": "(Read-only) MAC address used by the Chromebook’s internal ethernet port, and for onboard network (ethernet) interface. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices."
            },
            "autoUpdateExpiration": {
              "type": "string",
              "format": "int64",
              "description": "(Read-only) The timestamp after which the device will stop receiving Chrome updates or support"
            },
            "systemRamFreeReports": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "reportTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the report was received."
                  },
                  "systemRamFreeInfo": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "int64"
                    }
                  }
                }
              },
              "description": "Reports of amounts of available RAM memory (Read-only)"
            }
          },
          "description": "Google Chrome devices run on the [Chrome OS](https://support.google.com/chromeos). For more information about common API tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-chrome-devices)."
        }
      ]
  admin.customer.devices.chromeos.commands.get:
    description: |-
      Gets command data a specific command issued to the device.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/customer.devices.chromeos.commands/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DirectoryChromeosdevicesCommand",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "COMMAND_TYPE_UNSPECIFIED",
                "REBOOT",
                "TAKE_A_SCREENSHOT",
                "SET_VOLUME",
                "WIPE_USERS",
                "REMOTE_POWERWASH"
              ],
              "type": "string",
              "description": "The type of the command.",
              "enumDescriptions": [
                "The command type was unspecified.",
                "Reboot the device. Can only be issued to Kiosk and managed guest session devices.",
                "Take a screenshot of the device. Only available if the device is in Kiosk Mode.",
                "Set the volume of the device. Can only be issued to Kiosk and managed guest session devices.",
                "Wipe all the users off of the device. Executing this command in the device will remove all user profile data, but it will keep device policy and enrollment.",
                "Wipes the device by performing a power wash. Executing this command in the device will remove all data including user policies, device policies and enrollment policies. Warning: This will revert the device back to a factory state with no enrollment unless the device is subject to forced or auto enrollment. Use with caution, as this is an irreversible action!"
              ]
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "PENDING",
                "EXPIRED",
                "CANCELLED",
                "SENT_TO_CLIENT",
                "ACKED_BY_CLIENT",
                "EXECUTED_BY_CLIENT"
              ],
              "type": "string",
              "description": "Indicates the command state.",
              "enumDescriptions": [
                "The command status was unspecified.",
                "An unexpired command not yet sent to the client.",
                "The command didn't get executed by the client within the expected time.",
                "The command is cancelled by admin while in PENDING.",
                "The command has been sent to the client.",
                "The client has responded that it received the command.",
                "The client has (un)successfully executed the command."
              ]
            },
            "payload": {
              "type": "string",
              "description": "The payload that the command specified, if any."
            },
            "commandId": {
              "type": "string",
              "format": "int64",
              "description": "Unique ID of a device command."
            },
            "issueTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The timestamp when the command was issued by the admin."
            },
            "commandResult": {
              "id": "DirectoryChromeosdevicesCommandResult",
              "type": "object",
              "properties": {
                "result": {
                  "enum": [
                    "COMMAND_RESULT_TYPE_UNSPECIFIED",
                    "IGNORED",
                    "FAILURE",
                    "SUCCESS"
                  ],
                  "type": "string",
                  "description": "The result of the command.",
                  "enumDescriptions": [
                    "The command result was unspecified.",
                    "The command was ignored as obsolete.",
                    "The command could not be executed successfully.",
                    "The command was successfully executed."
                  ]
                },
                "executeTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The time at which the command was executed or failed to execute."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The error message with a short explanation as to why the command failed. Only present if the command failed."
                }
              },
              "description": "The result of the command execution."
            },
            "commandExpireTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time at which the command will expire. If the device doesn't execute the command within this time the command will become expired."
            }
          },
          "description": "Information regarding a command that was issued to a device."
        }
      ]
  admin.customer.devices.chromeos.issueCommand:
    description: |-
      Issues a command for the device to execute.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/customer.devices.chromeos/issueCommand
    example:
      inputs: [
        {
          "id": "DirectoryChromeosdevicesIssueCommandRequest",
          "type": "object",
          "properties": {
            "payload": {
              "type": "string",
              "description": "The payload for the command, provide it only if command supports it. The following commands support adding payload: - SET_VOLUME: Payload is a stringified JSON object in the form: { \"volume\": 50 }. The volume has to be an integer in the range [0,100]."
            },
            "commandType": {
              "enum": [
                "COMMAND_TYPE_UNSPECIFIED",
                "REBOOT",
                "TAKE_A_SCREENSHOT",
                "SET_VOLUME",
                "WIPE_USERS",
                "REMOTE_POWERWASH"
              ],
              "type": "string",
              "description": "The type of command.",
              "enumDescriptions": [
                "The command type was unspecified.",
                "Reboot the device. Can only be issued to Kiosk and managed guest session devices.",
                "Take a screenshot of the device. Only available if the device is in Kiosk Mode.",
                "Set the volume of the device. Can only be issued to Kiosk and managed guest session devices.",
                "Wipe all the users off of the device. Executing this command in the device will remove all user profile data, but it will keep device policy and enrollment.",
                "Wipes the device by performing a power wash. Executing this command in the device will remove all data including user policies, device policies and enrollment policies. Warning: This will revert the device back to a factory state with no enrollment unless the device is subject to forced or auto enrollment. Use with caution, as this is an irreversible action!"
              ]
            }
          },
          "description": "A request for issuing a command."
        }
      ]
      outputs: [
        {
          "id": "DirectoryChromeosdevicesIssueCommandResponse",
          "type": "object",
          "properties": {
            "commandId": {
              "type": "string",
              "format": "int64",
              "description": "The unique ID of the issued command, used to retrieve the command status."
            }
          },
          "description": "A response for issuing a command."
        }
      ]
  admin.customers.chrome.printers.batchCreatePrinters:
    description: |-
      Creates printers under given Organization Unit.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers.chrome.printers/batchCreatePrinters
    example:
      inputs: [
        {
          "id": "BatchCreatePrintersRequest",
          "type": "object",
          "properties": {
            "requests": {
              "type": "array",
              "items": {
                "id": "CreatePrinterRequest",
                "type": "object",
                "properties": {
                  "parent": {
                    "type": "string",
                    "description": "Required. The name of the customer. Format: customers/{customer_id}"
                  },
                  "printer": {
                    "id": "Printer",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id of the printer. (During printer creation leave empty)"
                      },
                      "uri": {
                        "type": "string",
                        "description": "Editable. Printer URI."
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name of the Printer object, in the format customers/{customer-id}/printers/{printer-id} (During printer creation leave empty)"
                      },
                      "orgUnitId": {
                        "type": "string",
                        "description": "Organization Unit that owns this printer (Only can be set during Printer creation)"
                      },
                      "createTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "readOnly": true,
                        "description": "Output only. Time when printer was created."
                      },
                      "description": {
                        "type": "string",
                        "description": "Editable. Description of printer."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Editable. Name of printer."
                      },
                      "makeAndModel": {
                        "type": "string",
                        "description": "Editable. Make and model of printer. e.g. Lexmark MS610de Value must be in format as seen in ListPrinterModels response."
                      },
                      "auxiliaryMessages": {
                        "type": "array",
                        "items": {
                          "id": "AuxiliaryMessage",
                          "type": "object",
                          "properties": {
                            "severity": {
                              "enum": [
                                "SEVERITY_UNSPECIFIED",
                                "SEVERITY_INFO",
                                "SEVERITY_WARNING",
                                "SEVERITY_ERROR"
                              ],
                              "type": "string",
                              "description": "Message severity",
                              "enumDescriptions": [
                                "Message type unspecified.",
                                "Message of severity: info.",
                                "Message of severity: warning.",
                                "Message of severity: error."
                              ]
                            },
                            "fieldMask": {
                              "type": "string",
                              "format": "google-fieldmask",
                              "description": "Field that this message concerns."
                            },
                            "auxiliaryMessage": {
                              "type": "string",
                              "description": "Human readable message in English. Example: \"Given printer is invalid or no longer supported.\""
                            }
                          },
                          "description": "Auxiliary message about issues with printers or settings. Example: {message_type:AUXILIARY_MESSAGE_WARNING, field_mask:make_and_model, message:\"Given printer is invalid or no longer supported.\"}"
                        },
                        "readOnly": true,
                        "description": "Output only. Auxiliary messages about issues with the printer configuration if any."
                      },
                      "useDriverlessConfig": {
                        "type": "boolean",
                        "description": "Editable. flag to use driverless configuration or not. If it's set to be true, make_and_model can be ignored"
                      }
                    },
                    "description": "Required. A printer to create. If you want to place the printer under particular OU then populate printer.org_unit_id filed. Otherwise the printer will be placed under root OU."
                  }
                },
                "description": "Request for adding a new printer."
              },
              "description": "A list of Printers to be created. Max 50 at a time."
            }
          },
          "description": "Request for adding new printers in batch."
        }
      ]
      outputs: [
        {
          "id": "BatchCreatePrintersResponse",
          "type": "object",
          "properties": {
            "failures": {
              "type": "array",
              "items": {
                "id": "FailureInfo",
                "type": "object",
                "properties": {
                  "printer": {
                    "id": "Printer",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id of the printer. (During printer creation leave empty)"
                      },
                      "uri": {
                        "type": "string",
                        "description": "Editable. Printer URI."
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name of the Printer object, in the format customers/{customer-id}/printers/{printer-id} (During printer creation leave empty)"
                      },
                      "orgUnitId": {
                        "type": "string",
                        "description": "Organization Unit that owns this printer (Only can be set during Printer creation)"
                      },
                      "createTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "readOnly": true,
                        "description": "Output only. Time when printer was created."
                      },
                      "description": {
                        "type": "string",
                        "description": "Editable. Description of printer."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Editable. Name of printer."
                      },
                      "makeAndModel": {
                        "type": "string",
                        "description": "Editable. Make and model of printer. e.g. Lexmark MS610de Value must be in format as seen in ListPrinterModels response."
                      },
                      "auxiliaryMessages": {
                        "type": "array",
                        "items": {
                          "id": "AuxiliaryMessage",
                          "type": "object",
                          "properties": {
                            "severity": {
                              "enum": [
                                "SEVERITY_UNSPECIFIED",
                                "SEVERITY_INFO",
                                "SEVERITY_WARNING",
                                "SEVERITY_ERROR"
                              ],
                              "type": "string",
                              "description": "Message severity",
                              "enumDescriptions": [
                                "Message type unspecified.",
                                "Message of severity: info.",
                                "Message of severity: warning.",
                                "Message of severity: error."
                              ]
                            },
                            "fieldMask": {
                              "type": "string",
                              "format": "google-fieldmask",
                              "description": "Field that this message concerns."
                            },
                            "auxiliaryMessage": {
                              "type": "string",
                              "description": "Human readable message in English. Example: \"Given printer is invalid or no longer supported.\""
                            }
                          },
                          "description": "Auxiliary message about issues with printers or settings. Example: {message_type:AUXILIARY_MESSAGE_WARNING, field_mask:make_and_model, message:\"Given printer is invalid or no longer supported.\"}"
                        },
                        "readOnly": true,
                        "description": "Output only. Auxiliary messages about issues with the printer configuration if any."
                      },
                      "useDriverlessConfig": {
                        "type": "boolean",
                        "description": "Editable. flag to use driverless configuration or not. If it's set to be true, make_and_model can be ignored"
                      }
                    },
                    "description": "Failed printer."
                  },
                  "errorCode": {
                    "enum": [
                      "OK",
                      "CANCELLED",
                      "UNKNOWN",
                      "INVALID_ARGUMENT",
                      "DEADLINE_EXCEEDED",
                      "NOT_FOUND",
                      "ALREADY_EXISTS",
                      "PERMISSION_DENIED",
                      "UNAUTHENTICATED",
                      "RESOURCE_EXHAUSTED",
                      "FAILED_PRECONDITION",
                      "ABORTED",
                      "OUT_OF_RANGE",
                      "UNIMPLEMENTED",
                      "INTERNAL",
                      "UNAVAILABLE",
                      "DATA_LOSS"
                    ],
                    "type": "string",
                    "description": "Canonical code for why the update failed to apply.",
                    "enumDescriptions": [
                      "Not an error; returned on success HTTP Mapping: 200 OK",
                      "The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request",
                      "Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error",
                      "The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request",
                      "The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout",
                      "Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found",
                      "The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict",
                      "The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden",
                      "The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized",
                      "Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests",
                      "The operation was rejected because the system is not in a state required for the operation's execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level. For example, when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence. (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. For example, if an \"rmdir\" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request",
                      "The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict",
                      "The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request",
                      "The operation is not implemented or is not supported/enabled in this service. HTTP Mapping: 501 Not Implemented",
                      "Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error",
                      "The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable",
                      "Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error"
                    ]
                  },
                  "printerId": {
                    "type": "string",
                    "description": "Id of a failed printer."
                  },
                  "errorMessage": {
                    "type": "string",
                    "description": "Failure reason message."
                  }
                },
                "description": "Info about failures"
              },
              "description": "A list of create failures. Printer IDs are not populated, as printer were not created."
            },
            "printers": {
              "type": "array",
              "items": {
                "id": "Printer",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Id of the printer. (During printer creation leave empty)"
                  },
                  "uri": {
                    "type": "string",
                    "description": "Editable. Printer URI."
                  },
                  "name": {
                    "type": "string",
                    "description": "The resource name of the Printer object, in the format customers/{customer-id}/printers/{printer-id} (During printer creation leave empty)"
                  },
                  "orgUnitId": {
                    "type": "string",
                    "description": "Organization Unit that owns this printer (Only can be set during Printer creation)"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Time when printer was created."
                  },
                  "description": {
                    "type": "string",
                    "description": "Editable. Description of printer."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Editable. Name of printer."
                  },
                  "makeAndModel": {
                    "type": "string",
                    "description": "Editable. Make and model of printer. e.g. Lexmark MS610de Value must be in format as seen in ListPrinterModels response."
                  },
                  "auxiliaryMessages": {
                    "type": "array",
                    "items": {
                      "id": "AuxiliaryMessage",
                      "type": "object",
                      "properties": {
                        "severity": {
                          "enum": [
                            "SEVERITY_UNSPECIFIED",
                            "SEVERITY_INFO",
                            "SEVERITY_WARNING",
                            "SEVERITY_ERROR"
                          ],
                          "type": "string",
                          "description": "Message severity",
                          "enumDescriptions": [
                            "Message type unspecified.",
                            "Message of severity: info.",
                            "Message of severity: warning.",
                            "Message of severity: error."
                          ]
                        },
                        "fieldMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "description": "Field that this message concerns."
                        },
                        "auxiliaryMessage": {
                          "type": "string",
                          "description": "Human readable message in English. Example: \"Given printer is invalid or no longer supported.\""
                        }
                      },
                      "description": "Auxiliary message about issues with printers or settings. Example: {message_type:AUXILIARY_MESSAGE_WARNING, field_mask:make_and_model, message:\"Given printer is invalid or no longer supported.\"}"
                    },
                    "readOnly": true,
                    "description": "Output only. Auxiliary messages about issues with the printer configuration if any."
                  },
                  "useDriverlessConfig": {
                    "type": "boolean",
                    "description": "Editable. flag to use driverless configuration or not. If it's set to be true, make_and_model can be ignored"
                  }
                },
                "description": "Printer configuration."
              },
              "description": "A list of successfully created printers with their IDs populated."
            }
          },
          "description": "Response for adding new printers in batch."
        }
      ]
  admin.customers.chrome.printers.batchDeletePrinters:
    description: |-
      Deletes printers in batch.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers.chrome.printers/batchDeletePrinters
    example:
      inputs: [
        {
          "id": "BatchDeletePrintersRequest",
          "type": "object",
          "properties": {
            "printerIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of Printer.id that should be deleted. Max 100 at a time."
            }
          },
          "description": "Request for deleting existing printers in batch."
        }
      ]
      outputs: [
        {
          "id": "BatchDeletePrintersResponse",
          "type": "object",
          "properties": {
            "printerIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of Printer.id that were successfully deleted."
            },
            "failedPrinters": {
              "type": "array",
              "items": {
                "id": "FailureInfo",
                "type": "object",
                "properties": {
                  "printer": {
                    "id": "Printer",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id of the printer. (During printer creation leave empty)"
                      },
                      "uri": {
                        "type": "string",
                        "description": "Editable. Printer URI."
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name of the Printer object, in the format customers/{customer-id}/printers/{printer-id} (During printer creation leave empty)"
                      },
                      "orgUnitId": {
                        "type": "string",
                        "description": "Organization Unit that owns this printer (Only can be set during Printer creation)"
                      },
                      "createTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "readOnly": true,
                        "description": "Output only. Time when printer was created."
                      },
                      "description": {
                        "type": "string",
                        "description": "Editable. Description of printer."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Editable. Name of printer."
                      },
                      "makeAndModel": {
                        "type": "string",
                        "description": "Editable. Make and model of printer. e.g. Lexmark MS610de Value must be in format as seen in ListPrinterModels response."
                      },
                      "auxiliaryMessages": {
                        "type": "array",
                        "items": {
                          "id": "AuxiliaryMessage",
                          "type": "object",
                          "properties": {
                            "severity": {
                              "enum": [
                                "SEVERITY_UNSPECIFIED",
                                "SEVERITY_INFO",
                                "SEVERITY_WARNING",
                                "SEVERITY_ERROR"
                              ],
                              "type": "string",
                              "description": "Message severity",
                              "enumDescriptions": [
                                "Message type unspecified.",
                                "Message of severity: info.",
                                "Message of severity: warning.",
                                "Message of severity: error."
                              ]
                            },
                            "fieldMask": {
                              "type": "string",
                              "format": "google-fieldmask",
                              "description": "Field that this message concerns."
                            },
                            "auxiliaryMessage": {
                              "type": "string",
                              "description": "Human readable message in English. Example: \"Given printer is invalid or no longer supported.\""
                            }
                          },
                          "description": "Auxiliary message about issues with printers or settings. Example: {message_type:AUXILIARY_MESSAGE_WARNING, field_mask:make_and_model, message:\"Given printer is invalid or no longer supported.\"}"
                        },
                        "readOnly": true,
                        "description": "Output only. Auxiliary messages about issues with the printer configuration if any."
                      },
                      "useDriverlessConfig": {
                        "type": "boolean",
                        "description": "Editable. flag to use driverless configuration or not. If it's set to be true, make_and_model can be ignored"
                      }
                    },
                    "description": "Failed printer."
                  },
                  "errorCode": {
                    "enum": [
                      "OK",
                      "CANCELLED",
                      "UNKNOWN",
                      "INVALID_ARGUMENT",
                      "DEADLINE_EXCEEDED",
                      "NOT_FOUND",
                      "ALREADY_EXISTS",
                      "PERMISSION_DENIED",
                      "UNAUTHENTICATED",
                      "RESOURCE_EXHAUSTED",
                      "FAILED_PRECONDITION",
                      "ABORTED",
                      "OUT_OF_RANGE",
                      "UNIMPLEMENTED",
                      "INTERNAL",
                      "UNAVAILABLE",
                      "DATA_LOSS"
                    ],
                    "type": "string",
                    "description": "Canonical code for why the update failed to apply.",
                    "enumDescriptions": [
                      "Not an error; returned on success HTTP Mapping: 200 OK",
                      "The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request",
                      "Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error",
                      "The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request",
                      "The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout",
                      "Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found",
                      "The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict",
                      "The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden",
                      "The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized",
                      "Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests",
                      "The operation was rejected because the system is not in a state required for the operation's execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level. For example, when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence. (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. For example, if an \"rmdir\" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request",
                      "The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict",
                      "The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request",
                      "The operation is not implemented or is not supported/enabled in this service. HTTP Mapping: 501 Not Implemented",
                      "Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error",
                      "The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable",
                      "Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error"
                    ]
                  },
                  "printerId": {
                    "type": "string",
                    "description": "Id of a failed printer."
                  },
                  "errorMessage": {
                    "type": "string",
                    "description": "Failure reason message."
                  }
                },
                "description": "Info about failures"
              },
              "description": "A list of update failures."
            }
          },
          "description": "Response for deleting existing printers in batch."
        }
      ]
  admin.customers.chrome.printers.create:
    description: |-
      Creates a printer under given Organization Unit.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers.chrome.printers/create
    example:
      inputs: [
        {
          "id": "Printer",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Id of the printer. (During printer creation leave empty)"
            },
            "uri": {
              "type": "string",
              "description": "Editable. Printer URI."
            },
            "name": {
              "type": "string",
              "description": "The resource name of the Printer object, in the format customers/{customer-id}/printers/{printer-id} (During printer creation leave empty)"
            },
            "orgUnitId": {
              "type": "string",
              "description": "Organization Unit that owns this printer (Only can be set during Printer creation)"
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Time when printer was created."
            },
            "description": {
              "type": "string",
              "description": "Editable. Description of printer."
            },
            "displayName": {
              "type": "string",
              "description": "Editable. Name of printer."
            },
            "makeAndModel": {
              "type": "string",
              "description": "Editable. Make and model of printer. e.g. Lexmark MS610de Value must be in format as seen in ListPrinterModels response."
            },
            "auxiliaryMessages": {
              "type": "array",
              "items": {
                "id": "AuxiliaryMessage",
                "type": "object",
                "properties": {
                  "severity": {
                    "enum": [
                      "SEVERITY_UNSPECIFIED",
                      "SEVERITY_INFO",
                      "SEVERITY_WARNING",
                      "SEVERITY_ERROR"
                    ],
                    "type": "string",
                    "description": "Message severity",
                    "enumDescriptions": [
                      "Message type unspecified.",
                      "Message of severity: info.",
                      "Message of severity: warning.",
                      "Message of severity: error."
                    ]
                  },
                  "fieldMask": {
                    "type": "string",
                    "format": "google-fieldmask",
                    "description": "Field that this message concerns."
                  },
                  "auxiliaryMessage": {
                    "type": "string",
                    "description": "Human readable message in English. Example: \"Given printer is invalid or no longer supported.\""
                  }
                },
                "description": "Auxiliary message about issues with printers or settings. Example: {message_type:AUXILIARY_MESSAGE_WARNING, field_mask:make_and_model, message:\"Given printer is invalid or no longer supported.\"}"
              },
              "readOnly": true,
              "description": "Output only. Auxiliary messages about issues with the printer configuration if any."
            },
            "useDriverlessConfig": {
              "type": "boolean",
              "description": "Editable. flag to use driverless configuration or not. If it's set to be true, make_and_model can be ignored"
            }
          },
          "description": "Printer configuration."
        }
      ]
      outputs: [
        {}
      ]
  admin.customers.chrome.printers.delete:
    description: |-
      Deletes a `Printer`.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers.chrome.printers/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  admin.customers.chrome.printers.get:
    description: |-
      Returns a `Printer` resource (printer's config).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers.chrome.printers/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  admin.customers.chrome.printers.list:
    description: |-
      List printers configs.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers.chrome.printers/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListPrintersResponse",
          "type": "object",
          "properties": {
            "printers": {
              "type": "array",
              "items": {
                "id": "Printer",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Id of the printer. (During printer creation leave empty)"
                  },
                  "uri": {
                    "type": "string",
                    "description": "Editable. Printer URI."
                  },
                  "name": {
                    "type": "string",
                    "description": "The resource name of the Printer object, in the format customers/{customer-id}/printers/{printer-id} (During printer creation leave empty)"
                  },
                  "orgUnitId": {
                    "type": "string",
                    "description": "Organization Unit that owns this printer (Only can be set during Printer creation)"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Time when printer was created."
                  },
                  "description": {
                    "type": "string",
                    "description": "Editable. Description of printer."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Editable. Name of printer."
                  },
                  "makeAndModel": {
                    "type": "string",
                    "description": "Editable. Make and model of printer. e.g. Lexmark MS610de Value must be in format as seen in ListPrinterModels response."
                  },
                  "auxiliaryMessages": {
                    "type": "array",
                    "items": {
                      "id": "AuxiliaryMessage",
                      "type": "object",
                      "properties": {
                        "severity": {
                          "enum": [
                            "SEVERITY_UNSPECIFIED",
                            "SEVERITY_INFO",
                            "SEVERITY_WARNING",
                            "SEVERITY_ERROR"
                          ],
                          "type": "string",
                          "description": "Message severity",
                          "enumDescriptions": [
                            "Message type unspecified.",
                            "Message of severity: info.",
                            "Message of severity: warning.",
                            "Message of severity: error."
                          ]
                        },
                        "fieldMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "description": "Field that this message concerns."
                        },
                        "auxiliaryMessage": {
                          "type": "string",
                          "description": "Human readable message in English. Example: \"Given printer is invalid or no longer supported.\""
                        }
                      },
                      "description": "Auxiliary message about issues with printers or settings. Example: {message_type:AUXILIARY_MESSAGE_WARNING, field_mask:make_and_model, message:\"Given printer is invalid or no longer supported.\"}"
                    },
                    "readOnly": true,
                    "description": "Output only. Auxiliary messages about issues with the printer configuration if any."
                  },
                  "useDriverlessConfig": {
                    "type": "boolean",
                    "description": "Editable. flag to use driverless configuration or not. If it's set to be true, make_and_model can be ignored"
                  }
                },
                "description": "Printer configuration."
              },
              "description": "List of printers. If `org_unit_id` was given in the request, then only printers visible for this OU will be returned. If `org_unit_id` was given in the request, then all printers will be returned."
            },
            "nextPageToken": {
              "type": "string",
              "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
            }
          },
          "description": "Response for listing printers."
        }
      ]
  admin.customers.chrome.printers.listPrinterModels:
    description: |-
      Lists the supported printer models.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers.chrome.printers/listPrinterModels
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListPrinterModelsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
            },
            "printerModels": {
              "type": "array",
              "items": {
                "id": "PrinterModel",
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "Display name. eq. \"Brother MFC-8840D\""
                  },
                  "makeAndModel": {
                    "type": "string",
                    "description": "Make and model as represented in \"make_and_model\" field in Printer object. eq. \"brother mfc-8840d\""
                  },
                  "manufacturer": {
                    "type": "string",
                    "description": "Manufacturer. eq. \"Brother\""
                  }
                },
                "description": "Printer manufacturer and model"
              },
              "description": "Printer models that are currently allowed to be configured for ChromeOs. Some printers may be added or removed over time."
            }
          },
          "description": "Response for listing allowed printer models."
        }
      ]
  admin.customers.chrome.printers.patch:
    description: |-
      Updates a `Printer` resource.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers.chrome.printers/patch
    example:
      inputs: [
        {
          "id": "Printer",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Id of the printer. (During printer creation leave empty)"
            },
            "uri": {
              "type": "string",
              "description": "Editable. Printer URI."
            },
            "name": {
              "type": "string",
              "description": "The resource name of the Printer object, in the format customers/{customer-id}/printers/{printer-id} (During printer creation leave empty)"
            },
            "orgUnitId": {
              "type": "string",
              "description": "Organization Unit that owns this printer (Only can be set during Printer creation)"
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Time when printer was created."
            },
            "description": {
              "type": "string",
              "description": "Editable. Description of printer."
            },
            "displayName": {
              "type": "string",
              "description": "Editable. Name of printer."
            },
            "makeAndModel": {
              "type": "string",
              "description": "Editable. Make and model of printer. e.g. Lexmark MS610de Value must be in format as seen in ListPrinterModels response."
            },
            "auxiliaryMessages": {
              "type": "array",
              "items": {
                "id": "AuxiliaryMessage",
                "type": "object",
                "properties": {
                  "severity": {
                    "enum": [
                      "SEVERITY_UNSPECIFIED",
                      "SEVERITY_INFO",
                      "SEVERITY_WARNING",
                      "SEVERITY_ERROR"
                    ],
                    "type": "string",
                    "description": "Message severity",
                    "enumDescriptions": [
                      "Message type unspecified.",
                      "Message of severity: info.",
                      "Message of severity: warning.",
                      "Message of severity: error."
                    ]
                  },
                  "fieldMask": {
                    "type": "string",
                    "format": "google-fieldmask",
                    "description": "Field that this message concerns."
                  },
                  "auxiliaryMessage": {
                    "type": "string",
                    "description": "Human readable message in English. Example: \"Given printer is invalid or no longer supported.\""
                  }
                },
                "description": "Auxiliary message about issues with printers or settings. Example: {message_type:AUXILIARY_MESSAGE_WARNING, field_mask:make_and_model, message:\"Given printer is invalid or no longer supported.\"}"
              },
              "readOnly": true,
              "description": "Output only. Auxiliary messages about issues with the printer configuration if any."
            },
            "useDriverlessConfig": {
              "type": "boolean",
              "description": "Editable. flag to use driverless configuration or not. If it's set to be true, make_and_model can be ignored"
            }
          },
          "description": "Printer configuration."
        }
      ]
      outputs: [
        {}
      ]
  directory.customers.get:
    description: |-
      Retrieves a customer.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Customer",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID for the customer's Google Workspace account. (Readonly)"
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#customer",
              "description": "Identifies the resource as a customer. Value: `admin#directory#customer`"
            },
            "language": {
              "type": "string",
              "description": "The customer's ISO 639-2 language code. See the [Language Codes](/admin-sdk/directory/v1/languages) page for the list of supported codes. Valid language codes outside the supported set will be accepted by the API but may lead to unexpected behavior. The default value is `en`."
            },
            "phoneNumber": {
              "type": "string",
              "description": "The customer's contact phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format."
            },
            "postalAddress": {
              "id": "CustomerPostalAddress",
              "type": "object",
              "properties": {
                "region": {
                  "type": "string",
                  "description": "Name of the region. An example of a region value is `NY` for the state of New York."
                },
                "locality": {
                  "type": "string",
                  "description": "Name of the locality. An example of a locality value is the city of `San Francisco`."
                },
                "postalCode": {
                  "type": "string",
                  "description": "The postal code. A postalCode example is a postal zip code such as `10009`. This is in accordance with - http: //portablecontacts.net/draft-spec.html#address_element."
                },
                "contactName": {
                  "type": "string",
                  "description": "The customer contact's name."
                },
                "countryCode": {
                  "type": "string",
                  "description": "This is a required property. For `countryCode` information see the [ISO 3166 country code elements](https://www.iso.org/iso/country_codes.htm)."
                },
                "addressLine1": {
                  "type": "string",
                  "description": "A customer's physical address. The address can be composed of one to three lines."
                },
                "addressLine2": {
                  "type": "string",
                  "description": "Address line 2 of the address."
                },
                "addressLine3": {
                  "type": "string",
                  "description": "Address line 3 of the address."
                },
                "organizationName": {
                  "type": "string",
                  "description": "The company or company division name."
                }
              },
              "description": "The customer's postal address information."
            },
            "alternateEmail": {
              "type": "string",
              "description": "The customer's secondary contact email address. This email address cannot be on the same domain as the `customerDomain`"
            },
            "customerDomain": {
              "type": "string",
              "description": "The customer's primary domain name string. Do not include the `www` prefix when creating a new customer."
            },
            "customerCreationTime": {
              "type": "string",
              "format": "date-time",
              "description": "The customer's creation time (Readonly)"
            }
          }
        }
      ]
  directory.customers.patch:
    description: |-
      Patch Customers via Apiary Patch Orchestration
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Customer",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID for the customer's Google Workspace account. (Readonly)"
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#customer",
              "description": "Identifies the resource as a customer. Value: `admin#directory#customer`"
            },
            "language": {
              "type": "string",
              "description": "The customer's ISO 639-2 language code. See the [Language Codes](/admin-sdk/directory/v1/languages) page for the list of supported codes. Valid language codes outside the supported set will be accepted by the API but may lead to unexpected behavior. The default value is `en`."
            },
            "phoneNumber": {
              "type": "string",
              "description": "The customer's contact phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format."
            },
            "postalAddress": {
              "id": "CustomerPostalAddress",
              "type": "object",
              "properties": {
                "region": {
                  "type": "string",
                  "description": "Name of the region. An example of a region value is `NY` for the state of New York."
                },
                "locality": {
                  "type": "string",
                  "description": "Name of the locality. An example of a locality value is the city of `San Francisco`."
                },
                "postalCode": {
                  "type": "string",
                  "description": "The postal code. A postalCode example is a postal zip code such as `10009`. This is in accordance with - http: //portablecontacts.net/draft-spec.html#address_element."
                },
                "contactName": {
                  "type": "string",
                  "description": "The customer contact's name."
                },
                "countryCode": {
                  "type": "string",
                  "description": "This is a required property. For `countryCode` information see the [ISO 3166 country code elements](https://www.iso.org/iso/country_codes.htm)."
                },
                "addressLine1": {
                  "type": "string",
                  "description": "A customer's physical address. The address can be composed of one to three lines."
                },
                "addressLine2": {
                  "type": "string",
                  "description": "Address line 2 of the address."
                },
                "addressLine3": {
                  "type": "string",
                  "description": "Address line 3 of the address."
                },
                "organizationName": {
                  "type": "string",
                  "description": "The company or company division name."
                }
              },
              "description": "The customer's postal address information."
            },
            "alternateEmail": {
              "type": "string",
              "description": "The customer's secondary contact email address. This email address cannot be on the same domain as the `customerDomain`"
            },
            "customerDomain": {
              "type": "string",
              "description": "The customer's primary domain name string. Do not include the `www` prefix when creating a new customer."
            },
            "customerCreationTime": {
              "type": "string",
              "format": "date-time",
              "description": "The customer's creation time (Readonly)"
            }
          }
        }
      ]
  directory.customers.update:
    description: |-
      Updates a customer.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Customer",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID for the customer's Google Workspace account. (Readonly)"
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#customer",
              "description": "Identifies the resource as a customer. Value: `admin#directory#customer`"
            },
            "language": {
              "type": "string",
              "description": "The customer's ISO 639-2 language code. See the [Language Codes](/admin-sdk/directory/v1/languages) page for the list of supported codes. Valid language codes outside the supported set will be accepted by the API but may lead to unexpected behavior. The default value is `en`."
            },
            "phoneNumber": {
              "type": "string",
              "description": "The customer's contact phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format."
            },
            "postalAddress": {
              "id": "CustomerPostalAddress",
              "type": "object",
              "properties": {
                "region": {
                  "type": "string",
                  "description": "Name of the region. An example of a region value is `NY` for the state of New York."
                },
                "locality": {
                  "type": "string",
                  "description": "Name of the locality. An example of a locality value is the city of `San Francisco`."
                },
                "postalCode": {
                  "type": "string",
                  "description": "The postal code. A postalCode example is a postal zip code such as `10009`. This is in accordance with - http: //portablecontacts.net/draft-spec.html#address_element."
                },
                "contactName": {
                  "type": "string",
                  "description": "The customer contact's name."
                },
                "countryCode": {
                  "type": "string",
                  "description": "This is a required property. For `countryCode` information see the [ISO 3166 country code elements](https://www.iso.org/iso/country_codes.htm)."
                },
                "addressLine1": {
                  "type": "string",
                  "description": "A customer's physical address. The address can be composed of one to three lines."
                },
                "addressLine2": {
                  "type": "string",
                  "description": "Address line 2 of the address."
                },
                "addressLine3": {
                  "type": "string",
                  "description": "Address line 3 of the address."
                },
                "organizationName": {
                  "type": "string",
                  "description": "The company or company division name."
                }
              },
              "description": "The customer's postal address information."
            },
            "alternateEmail": {
              "type": "string",
              "description": "The customer's secondary contact email address. This email address cannot be on the same domain as the `customerDomain`"
            },
            "customerDomain": {
              "type": "string",
              "description": "The customer's primary domain name string. Do not include the `www` prefix when creating a new customer."
            },
            "customerCreationTime": {
              "type": "string",
              "format": "date-time",
              "description": "The customer's creation time (Readonly)"
            }
          }
        }
      ]
  directory.domainAliases.delete:
    description: |-
      Deletes a domain Alias of the customer.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/domainAliases/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.domainAliases.get:
    description: |-
      Retrieves a domain alias of the customer.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/domainAliases/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DomainAlias",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#domainAlias",
              "description": "Kind of resource this is."
            },
            "verified": {
              "type": "boolean",
              "description": "Indicates the verification state of a domain alias. (Read-only)"
            },
            "creationTime": {
              "type": "string",
              "format": "int64",
              "description": "The creation time of the domain alias. (Read-only)."
            },
            "domainAliasName": {
              "type": "string",
              "description": "The domain alias name."
            },
            "parentDomainName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.domains.insert"
                ]
              },
              "description": "The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer."
            }
          }
        }
      ]
  directory.domainAliases.insert:
    description: |-
      Inserts a domain alias of the customer.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/domainAliases/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DomainAlias",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#domainAlias",
              "description": "Kind of resource this is."
            },
            "verified": {
              "type": "boolean",
              "description": "Indicates the verification state of a domain alias. (Read-only)"
            },
            "creationTime": {
              "type": "string",
              "format": "int64",
              "description": "The creation time of the domain alias. (Read-only)."
            },
            "domainAliasName": {
              "type": "string",
              "description": "The domain alias name."
            },
            "parentDomainName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.domains.insert"
                ]
              },
              "description": "The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer."
            }
          }
        }
      ]
  directory.domainAliases.list:
    description: |-
      Lists the domain aliases of the customer.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/domainAliases/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DomainAliases",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#domainAliases",
              "description": "Kind of resource this is."
            },
            "domainAliases": {
              "type": "array",
              "items": {
                "id": "DomainAlias",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#domainAlias",
                    "description": "Kind of resource this is."
                  },
                  "verified": {
                    "type": "boolean",
                    "description": "Indicates the verification state of a domain alias. (Read-only)"
                  },
                  "creationTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "The creation time of the domain alias. (Read-only)."
                  },
                  "domainAliasName": {
                    "type": "string",
                    "description": "The domain alias name."
                  },
                  "parentDomainName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.domains.insert"
                      ]
                    },
                    "description": "The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer."
                  }
                }
              },
              "description": "List of domain alias objects."
            }
          }
        }
      ]
  directory.domains.delete:
    description: |-
      Deletes a domain of the customer.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/domains/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.domains.get:
    description: |-
      Retrieves a domain of the customer.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/domains/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Domains",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#domain",
              "description": "Kind of resource this is."
            },
            "verified": {
              "type": "boolean",
              "description": "Indicates the verification state of a domain. (Read-only)."
            },
            "isPrimary": {
              "type": "boolean",
              "description": "Indicates if the domain is a primary domain (Read-only)."
            },
            "domainName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.domains.insert"
                ]
              },
              "description": "The domain name of the customer."
            },
            "creationTime": {
              "type": "string",
              "format": "int64",
              "description": "Creation time of the domain. Expressed in [Unix time](https://en.wikipedia.org/wiki/Epoch_time) format. (Read-only)."
            },
            "domainAliases": {
              "type": "array",
              "items": {
                "id": "DomainAlias",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#domainAlias",
                    "description": "Kind of resource this is."
                  },
                  "verified": {
                    "type": "boolean",
                    "description": "Indicates the verification state of a domain alias. (Read-only)"
                  },
                  "creationTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "The creation time of the domain alias. (Read-only)."
                  },
                  "domainAliasName": {
                    "type": "string",
                    "description": "The domain alias name."
                  },
                  "parentDomainName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.domains.insert"
                      ]
                    },
                    "description": "The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer."
                  }
                }
              },
              "description": "List of domain alias objects. (Read-only)"
            }
          }
        }
      ]
  directory.domains.insert:
    description: |-
      Inserts a domain of the customer.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/domains/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Domains",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#domain",
              "description": "Kind of resource this is."
            },
            "verified": {
              "type": "boolean",
              "description": "Indicates the verification state of a domain. (Read-only)."
            },
            "isPrimary": {
              "type": "boolean",
              "description": "Indicates if the domain is a primary domain (Read-only)."
            },
            "domainName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.domains.insert"
                ]
              },
              "description": "The domain name of the customer."
            },
            "creationTime": {
              "type": "string",
              "format": "int64",
              "description": "Creation time of the domain. Expressed in [Unix time](https://en.wikipedia.org/wiki/Epoch_time) format. (Read-only)."
            },
            "domainAliases": {
              "type": "array",
              "items": {
                "id": "DomainAlias",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#domainAlias",
                    "description": "Kind of resource this is."
                  },
                  "verified": {
                    "type": "boolean",
                    "description": "Indicates the verification state of a domain alias. (Read-only)"
                  },
                  "creationTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "The creation time of the domain alias. (Read-only)."
                  },
                  "domainAliasName": {
                    "type": "string",
                    "description": "The domain alias name."
                  },
                  "parentDomainName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.domains.insert"
                      ]
                    },
                    "description": "The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer."
                  }
                }
              },
              "description": "List of domain alias objects. (Read-only)"
            }
          }
        }
      ]
  directory.domains.list:
    description: |-
      Lists the domains of the customer.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/domains/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Domains2",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#domains",
              "description": "Kind of resource this is."
            },
            "domains": {
              "type": "array",
              "items": {
                "id": "Domains",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#domain",
                    "description": "Kind of resource this is."
                  },
                  "verified": {
                    "type": "boolean",
                    "description": "Indicates the verification state of a domain. (Read-only)."
                  },
                  "isPrimary": {
                    "type": "boolean",
                    "description": "Indicates if the domain is a primary domain (Read-only)."
                  },
                  "domainName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.domains.insert"
                      ]
                    },
                    "description": "The domain name of the customer."
                  },
                  "creationTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Creation time of the domain. Expressed in [Unix time](https://en.wikipedia.org/wiki/Epoch_time) format. (Read-only)."
                  },
                  "domainAliases": {
                    "type": "array",
                    "items": {
                      "id": "DomainAlias",
                      "type": "object",
                      "properties": {
                        "etag": {
                          "type": "string",
                          "description": "ETag of the resource."
                        },
                        "kind": {
                          "type": "string",
                          "default": "admin#directory#domainAlias",
                          "description": "Kind of resource this is."
                        },
                        "verified": {
                          "type": "boolean",
                          "description": "Indicates the verification state of a domain alias. (Read-only)"
                        },
                        "creationTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "The creation time of the domain alias. (Read-only)."
                        },
                        "domainAliasName": {
                          "type": "string",
                          "description": "The domain alias name."
                        },
                        "parentDomainName": {
                          "type": "string",
                          "annotations": {
                            "required": [
                              "directory.domains.insert"
                            ]
                          },
                          "description": "The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer."
                        }
                      }
                    },
                    "description": "List of domain alias objects. (Read-only)"
                  }
                }
              },
              "description": "List of domain objects."
            }
          }
        }
      ]
  directory.groups.aliases.delete:
    description: |-
      Removes an alias.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/groups.aliases/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.groups.aliases.insert:
    description: |-
      Adds an alias for the group.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/groups.aliases/insert
    example:
      inputs: [
        {
          "id": "Alias",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "etag": {
              "type": "string"
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#alias"
            },
            "alias": {
              "type": "string"
            },
            "primaryEmail": {
              "type": "string"
            }
          },
          "description": "JSON template for Alias object in Directory API."
        }
      ]
      outputs: [
        {}
      ]
  directory.groups.aliases.list:
    description: |-
      Lists all aliases for a group.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/groups.aliases/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Aliases",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string"
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#aliases"
            },
            "aliases": {
              "type": "array",
              "items": {
                "type": "any"
              }
            }
          },
          "description": "JSON response template to list aliases in Directory API."
        }
      ]
  directory.groups.delete:
    description: |-
      Deletes a group.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/groups/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.groups.get:
    description: |-
      Retrieves a group's properties.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/groups/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Group",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID of a group. A group `id` can be used as a group request URI's `groupKey`."
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#group",
              "description": "The type of the API resource. For Groups resources, the value is `admin#directory#group`."
            },
            "name": {
              "type": "string",
              "description": "The group's display name."
            },
            "email": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.groups.insert"
                ]
              },
              "description": "The group's email address. If your account has multiple domains, select the appropriate domain for the email address. The `email` must be unique. This property is required when creating a group. Group email addresses are subject to the same character usage rules as usernames, see the [help center](https://support.google.com/a/answer/9193374) for details."
            },
            "aliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of a group's alias email addresses."
            },
            "description": {
              "type": "string",
              "description": "An extended description to help users determine the purpose of a group. For example, you can include information about who should join the group, the types of messages to send to the group, links to FAQs about the group, or related groups. Maximum length is `4,096` characters."
            },
            "adminCreated": {
              "type": "boolean",
              "description": "Value is `true` if this group was created by an administrator rather than a user."
            },
            "directMembersCount": {
              "type": "string",
              "format": "int64",
              "description": "The number of users that are direct members of the group. If a group is a member (child) of this group (the parent), members of the child group are not counted in the `directMembersCount` property of the parent group."
            },
            "nonEditableAliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the group's non-editable alias email addresses that are outside of the account's primary domain or subdomains. These are functioning email addresses used by the group. This is a read-only property returned in the API's response for a group. If edited in a group's POST or PUT request, the edit is ignored by the API service."
            }
          },
          "description": "Google Groups provide your users the ability to send messages to groups of people using the group's email address. For more information about common tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-groups)."
        }
      ]
  directory.groups.insert:
    description: |-
      Creates a group.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/groups/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Group",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID of a group. A group `id` can be used as a group request URI's `groupKey`."
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#group",
              "description": "The type of the API resource. For Groups resources, the value is `admin#directory#group`."
            },
            "name": {
              "type": "string",
              "description": "The group's display name."
            },
            "email": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.groups.insert"
                ]
              },
              "description": "The group's email address. If your account has multiple domains, select the appropriate domain for the email address. The `email` must be unique. This property is required when creating a group. Group email addresses are subject to the same character usage rules as usernames, see the [help center](https://support.google.com/a/answer/9193374) for details."
            },
            "aliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of a group's alias email addresses."
            },
            "description": {
              "type": "string",
              "description": "An extended description to help users determine the purpose of a group. For example, you can include information about who should join the group, the types of messages to send to the group, links to FAQs about the group, or related groups. Maximum length is `4,096` characters."
            },
            "adminCreated": {
              "type": "boolean",
              "description": "Value is `true` if this group was created by an administrator rather than a user."
            },
            "directMembersCount": {
              "type": "string",
              "format": "int64",
              "description": "The number of users that are direct members of the group. If a group is a member (child) of this group (the parent), members of the child group are not counted in the `directMembersCount` property of the parent group."
            },
            "nonEditableAliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the group's non-editable alias email addresses that are outside of the account's primary domain or subdomains. These are functioning email addresses used by the group. This is a read-only property returned in the API's response for a group. If edited in a group's POST or PUT request, the edit is ignored by the API service."
            }
          },
          "description": "Google Groups provide your users the ability to send messages to groups of people using the group's email address. For more information about common tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-groups)."
        }
      ]
  directory.groups.list:
    description: |-
      Retrieve all groups of a domain or of a user given a userKey (paginated)
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/groups/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Groups",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#groups",
              "description": "Kind of resource this is."
            },
            "groups": {
              "type": "array",
              "items": {
                "id": "Group",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique ID of a group. A group `id` can be used as a group request URI's `groupKey`."
                  },
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#group",
                    "description": "The type of the API resource. For Groups resources, the value is `admin#directory#group`."
                  },
                  "name": {
                    "type": "string",
                    "description": "The group's display name."
                  },
                  "email": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.groups.insert"
                      ]
                    },
                    "description": "The group's email address. If your account has multiple domains, select the appropriate domain for the email address. The `email` must be unique. This property is required when creating a group. Group email addresses are subject to the same character usage rules as usernames, see the [help center](https://support.google.com/a/answer/9193374) for details."
                  },
                  "aliases": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of a group's alias email addresses."
                  },
                  "description": {
                    "type": "string",
                    "description": "An extended description to help users determine the purpose of a group. For example, you can include information about who should join the group, the types of messages to send to the group, links to FAQs about the group, or related groups. Maximum length is `4,096` characters."
                  },
                  "adminCreated": {
                    "type": "boolean",
                    "description": "Value is `true` if this group was created by an administrator rather than a user."
                  },
                  "directMembersCount": {
                    "type": "string",
                    "format": "int64",
                    "description": "The number of users that are direct members of the group. If a group is a member (child) of this group (the parent), members of the child group are not counted in the `directMembersCount` property of the parent group."
                  },
                  "nonEditableAliases": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of the group's non-editable alias email addresses that are outside of the account's primary domain or subdomains. These are functioning email addresses used by the group. This is a read-only property returned in the API's response for a group. If edited in a group's POST or PUT request, the edit is ignored by the API service."
                  }
                },
                "description": "Google Groups provide your users the ability to send messages to groups of people using the group's email address. For more information about common tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-groups)."
              },
              "description": "List of group objects."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token used to access next page of this result."
            }
          }
        }
      ]
  directory.groups.patch:
    description: |-
      Updates a group's properties. This method supports [patch semantics](/admin-sdk/directory/v1/guides/performance#patch).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/groups/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Group",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID of a group. A group `id` can be used as a group request URI's `groupKey`."
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#group",
              "description": "The type of the API resource. For Groups resources, the value is `admin#directory#group`."
            },
            "name": {
              "type": "string",
              "description": "The group's display name."
            },
            "email": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.groups.insert"
                ]
              },
              "description": "The group's email address. If your account has multiple domains, select the appropriate domain for the email address. The `email` must be unique. This property is required when creating a group. Group email addresses are subject to the same character usage rules as usernames, see the [help center](https://support.google.com/a/answer/9193374) for details."
            },
            "aliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of a group's alias email addresses."
            },
            "description": {
              "type": "string",
              "description": "An extended description to help users determine the purpose of a group. For example, you can include information about who should join the group, the types of messages to send to the group, links to FAQs about the group, or related groups. Maximum length is `4,096` characters."
            },
            "adminCreated": {
              "type": "boolean",
              "description": "Value is `true` if this group was created by an administrator rather than a user."
            },
            "directMembersCount": {
              "type": "string",
              "format": "int64",
              "description": "The number of users that are direct members of the group. If a group is a member (child) of this group (the parent), members of the child group are not counted in the `directMembersCount` property of the parent group."
            },
            "nonEditableAliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the group's non-editable alias email addresses that are outside of the account's primary domain or subdomains. These are functioning email addresses used by the group. This is a read-only property returned in the API's response for a group. If edited in a group's POST or PUT request, the edit is ignored by the API service."
            }
          },
          "description": "Google Groups provide your users the ability to send messages to groups of people using the group's email address. For more information about common tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-groups)."
        }
      ]
  directory.groups.update:
    description: |-
      Updates a group's properties.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/groups/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Group",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID of a group. A group `id` can be used as a group request URI's `groupKey`."
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#group",
              "description": "The type of the API resource. For Groups resources, the value is `admin#directory#group`."
            },
            "name": {
              "type": "string",
              "description": "The group's display name."
            },
            "email": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.groups.insert"
                ]
              },
              "description": "The group's email address. If your account has multiple domains, select the appropriate domain for the email address. The `email` must be unique. This property is required when creating a group. Group email addresses are subject to the same character usage rules as usernames, see the [help center](https://support.google.com/a/answer/9193374) for details."
            },
            "aliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of a group's alias email addresses."
            },
            "description": {
              "type": "string",
              "description": "An extended description to help users determine the purpose of a group. For example, you can include information about who should join the group, the types of messages to send to the group, links to FAQs about the group, or related groups. Maximum length is `4,096` characters."
            },
            "adminCreated": {
              "type": "boolean",
              "description": "Value is `true` if this group was created by an administrator rather than a user."
            },
            "directMembersCount": {
              "type": "string",
              "format": "int64",
              "description": "The number of users that are direct members of the group. If a group is a member (child) of this group (the parent), members of the child group are not counted in the `directMembersCount` property of the parent group."
            },
            "nonEditableAliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the group's non-editable alias email addresses that are outside of the account's primary domain or subdomains. These are functioning email addresses used by the group. This is a read-only property returned in the API's response for a group. If edited in a group's POST or PUT request, the edit is ignored by the API service."
            }
          },
          "description": "Google Groups provide your users the ability to send messages to groups of people using the group's email address. For more information about common tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-groups)."
        }
      ]
  directory.members.delete:
    description: |-
      Removes a member from a group.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/members/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.members.get:
    description: |-
      Retrieves a group member's properties.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/members/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Member",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID of the group member. A member `id` can be used as a member request URI's `memberKey`."
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#member",
              "description": "The type of the API resource. For Members resources, the value is `admin#directory#member`."
            },
            "role": {
              "type": "string",
              "description": "The member's role in a group. The API returns an error for cycles in group memberships. For example, if `group1` is a member of `group2`, `group2` cannot be a member of `group1`. For more information about a member's role, see the [administration help center](https://support.google.com/a/answer/167094)."
            },
            "type": {
              "type": "string",
              "description": "The type of group member."
            },
            "email": {
              "type": "string",
              "description": "The member's email address. A member can be a user or another group. This property is required when adding a member to a group. The `email` must be unique and cannot be an alias of another group. If the email address is changed, the API automatically reflects the email address changes."
            },
            "status": {
              "type": "string",
              "description": "Status of member (Immutable)"
            },
            "delivery_settings": {
              "type": "string",
              "description": "Defines mail delivery preferences of member. This is only supported by create/update/get."
            }
          },
          "description": "A Google Groups member can be a user or another group. This member can be inside or outside of your account's domains. For more information about common group member tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-group-members)."
        }
      ]
  directory.members.hasMember:
    description: |-
      Checks whether the given user is a member of the group. Membership can be direct or nested.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/members/hasMember
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "MembersHasMember",
          "type": "object",
          "properties": {
            "isMember": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Identifies whether the given user is a member of the group. Membership can be direct or nested."
            }
          },
          "description": "JSON template for Has Member response in Directory API."
        }
      ]
  directory.members.insert:
    description: |-
      Adds a user to the specified group.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/members/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Member",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID of the group member. A member `id` can be used as a member request URI's `memberKey`."
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#member",
              "description": "The type of the API resource. For Members resources, the value is `admin#directory#member`."
            },
            "role": {
              "type": "string",
              "description": "The member's role in a group. The API returns an error for cycles in group memberships. For example, if `group1` is a member of `group2`, `group2` cannot be a member of `group1`. For more information about a member's role, see the [administration help center](https://support.google.com/a/answer/167094)."
            },
            "type": {
              "type": "string",
              "description": "The type of group member."
            },
            "email": {
              "type": "string",
              "description": "The member's email address. A member can be a user or another group. This property is required when adding a member to a group. The `email` must be unique and cannot be an alias of another group. If the email address is changed, the API automatically reflects the email address changes."
            },
            "status": {
              "type": "string",
              "description": "Status of member (Immutable)"
            },
            "delivery_settings": {
              "type": "string",
              "description": "Defines mail delivery preferences of member. This is only supported by create/update/get."
            }
          },
          "description": "A Google Groups member can be a user or another group. This member can be inside or outside of your account's domains. For more information about common group member tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-group-members)."
        }
      ]
  directory.members.list:
    description: |-
      Retrieves a paginated list of all members in a group.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/members/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Members",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#members",
              "description": "Kind of resource this is."
            },
            "members": {
              "type": "array",
              "items": {
                "id": "Member",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique ID of the group member. A member `id` can be used as a member request URI's `memberKey`."
                  },
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#member",
                    "description": "The type of the API resource. For Members resources, the value is `admin#directory#member`."
                  },
                  "role": {
                    "type": "string",
                    "description": "The member's role in a group. The API returns an error for cycles in group memberships. For example, if `group1` is a member of `group2`, `group2` cannot be a member of `group1`. For more information about a member's role, see the [administration help center](https://support.google.com/a/answer/167094)."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of group member."
                  },
                  "email": {
                    "type": "string",
                    "description": "The member's email address. A member can be a user or another group. This property is required when adding a member to a group. The `email` must be unique and cannot be an alias of another group. If the email address is changed, the API automatically reflects the email address changes."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of member (Immutable)"
                  },
                  "delivery_settings": {
                    "type": "string",
                    "description": "Defines mail delivery preferences of member. This is only supported by create/update/get."
                  }
                },
                "description": "A Google Groups member can be a user or another group. This member can be inside or outside of your account's domains. For more information about common group member tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-group-members)."
              },
              "description": "List of member objects."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token used to access next page of this result."
            }
          }
        }
      ]
  directory.members.patch:
    description: |-
      Updates the membership properties of a user in the specified group. This method supports [patch semantics](/admin-sdk/directory/v1/guides/performance#patch).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/members/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Member",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID of the group member. A member `id` can be used as a member request URI's `memberKey`."
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#member",
              "description": "The type of the API resource. For Members resources, the value is `admin#directory#member`."
            },
            "role": {
              "type": "string",
              "description": "The member's role in a group. The API returns an error for cycles in group memberships. For example, if `group1` is a member of `group2`, `group2` cannot be a member of `group1`. For more information about a member's role, see the [administration help center](https://support.google.com/a/answer/167094)."
            },
            "type": {
              "type": "string",
              "description": "The type of group member."
            },
            "email": {
              "type": "string",
              "description": "The member's email address. A member can be a user or another group. This property is required when adding a member to a group. The `email` must be unique and cannot be an alias of another group. If the email address is changed, the API automatically reflects the email address changes."
            },
            "status": {
              "type": "string",
              "description": "Status of member (Immutable)"
            },
            "delivery_settings": {
              "type": "string",
              "description": "Defines mail delivery preferences of member. This is only supported by create/update/get."
            }
          },
          "description": "A Google Groups member can be a user or another group. This member can be inside or outside of your account's domains. For more information about common group member tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-group-members)."
        }
      ]
  directory.members.update:
    description: |-
      Updates the membership of a user in the specified group.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/members/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Member",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID of the group member. A member `id` can be used as a member request URI's `memberKey`."
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#member",
              "description": "The type of the API resource. For Members resources, the value is `admin#directory#member`."
            },
            "role": {
              "type": "string",
              "description": "The member's role in a group. The API returns an error for cycles in group memberships. For example, if `group1` is a member of `group2`, `group2` cannot be a member of `group1`. For more information about a member's role, see the [administration help center](https://support.google.com/a/answer/167094)."
            },
            "type": {
              "type": "string",
              "description": "The type of group member."
            },
            "email": {
              "type": "string",
              "description": "The member's email address. A member can be a user or another group. This property is required when adding a member to a group. The `email` must be unique and cannot be an alias of another group. If the email address is changed, the API automatically reflects the email address changes."
            },
            "status": {
              "type": "string",
              "description": "Status of member (Immutable)"
            },
            "delivery_settings": {
              "type": "string",
              "description": "Defines mail delivery preferences of member. This is only supported by create/update/get."
            }
          },
          "description": "A Google Groups member can be a user or another group. This member can be inside or outside of your account's domains. For more information about common group member tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-group-members)."
        }
      ]
  directory.mobiledevices.action:
    description: |-
      Takes an action that affects a mobile device. For example, remotely wiping a device.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/mobiledevices/action
    example:
      inputs: [
        {
          "id": "MobileDeviceAction",
          "type": "object",
          "properties": {
            "action": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.mobiledevices.action"
                ]
              },
              "description": "The action to be performed on the device."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  directory.mobiledevices.delete:
    description: |-
      Removes a mobile device.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/mobiledevices/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.mobiledevices.get:
    description: |-
      Retrieves a mobile device's properties.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/mobiledevices/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "MobileDevice",
          "type": "object",
          "properties": {
            "os": {
              "type": "string",
              "description": "The mobile device's operating system, for example IOS 4.3 or Android 2.3.5. This property can be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices#update_mobile_device)."
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "imei": {
              "type": "string",
              "description": "The device's IMEI number."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#mobiledevice",
              "description": "The type of the API resource. For Mobiledevices resources, the value is `admin#directory#mobiledevice`."
            },
            "meid": {
              "type": "string",
              "description": "The device's MEID number."
            },
            "name": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the owner's user names. If your application needs the current list of device owner names, use the [get](/admin-sdk/directory/v1/reference/mobiledevices/get.html) method. For more information about retrieving mobile device user information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-users#get_user)."
            },
            "type": {
              "type": "string",
              "description": "The type of mobile device."
            },
            "brand": {
              "type": "string",
              "description": "Mobile Device Brand (Read-only)"
            },
            "email": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of owner's email addresses. If your application needs the current list of user emails, use the [get](/admin-sdk/directory/v1/reference/mobiledevices/get.html) method. For additional information, see the [retrieve a user](/admin-sdk/directory/v1/guides/manage-users#get_user) method."
            },
            "model": {
              "type": "string",
              "description": "The mobile device's model name, for example Nexus S. This property can be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile=devices#update_mobile_device)."
            },
            "status": {
              "type": "string",
              "description": "The device's status."
            },
            "deviceId": {
              "type": "string",
              "description": "The serial number for a Google Sync mobile device. For Android and iOS devices, this is a software generated unique identifier."
            },
            "hardware": {
              "type": "string",
              "description": "Mobile Device Hardware (Read-only)"
            },
            "lastSync": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)"
            },
            "adbStatus": {
              "type": "boolean",
              "description": "Adb (USB debugging) enabled or disabled on device (Read-only)"
            },
            "firstSync": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time the device was first synchronized with the policy settings in the G Suite administrator control panel (Read-only)"
            },
            "privilege": {
              "type": "string",
              "description": "DMAgentPermission (Read-only)"
            },
            "userAgent": {
              "type": "string",
              "description": "Gives information about the device such as `os` version. This property can be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices#update_mobile_device)."
            },
            "hardwareId": {
              "type": "string",
              "description": "The IMEI/MEID unique identifier for Android hardware. It is not applicable to Google Sync devices. When adding an Android mobile device, this is an optional property. When updating one of these devices, this is a read-only property."
            },
            "resourceId": {
              "type": "string",
              "description": "The unique ID the API service uses to identify the mobile device."
            },
            "buildNumber": {
              "type": "string",
              "description": "The device's operating system build number."
            },
            "applications": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "permission": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of permissions of this application. These can be either a standard Android permission or one defined by the application, and are found in an application's [Android manifest](https://developer.android.com/guide/topics/manifest/uses-permission-element.html). Examples of a Calendar application's permissions are `READ_CALENDAR`, or `MANAGE_ACCOUNTS`."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The application's display name. An example is `Browser`."
                  },
                  "packageName": {
                    "type": "string",
                    "description": "The application's package name. An example is `com.android.browser`."
                  },
                  "versionCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The application's version code. An example is `13`."
                  },
                  "versionName": {
                    "type": "string",
                    "description": "The application's version name. An example is `3.2-140714`."
                  }
                }
              },
              "description": "The list of applications installed on an Android mobile device. It is not applicable to Google Sync and iOS devices. The list includes any Android applications that access Google Workspace data. When updating an applications list, it is important to note that updates replace the existing list. If the Android device has two existing applications and the API updates the list with five applications, the is now the updated list of five applications."
            },
            "manufacturer": {
              "type": "string",
              "description": "Mobile Device manufacturer (Read-only)"
            },
            "serialNumber": {
              "type": "string",
              "description": "The device's serial number."
            },
            "kernelVersion": {
              "type": "string",
              "description": "The device's kernel version."
            },
            "releaseVersion": {
              "type": "string",
              "description": "Mobile Device release version version (Read-only)"
            },
            "wifiMacAddress": {
              "type": "string",
              "description": "The device's MAC address on Wi-Fi networks."
            },
            "basebandVersion": {
              "type": "string",
              "description": "The device's baseband version."
            },
            "defaultLanguage": {
              "type": "string",
              "description": "The default locale used on the device."
            },
            "networkOperator": {
              "type": "string",
              "description": "Mobile Device mobile or network operator (if available) (Read-only)"
            },
            "encryptionStatus": {
              "type": "string",
              "description": "Mobile Device Encryption Status (Read-only)"
            },
            "bootloaderVersion": {
              "type": "string",
              "description": "Mobile Device Bootloader version (Read-only)"
            },
            "otherAccountsInfo": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of accounts added on device (Read-only)"
            },
            "securityPatchLevel": {
              "type": "string",
              "format": "int64",
              "description": "Mobile Device Security patch level (Read-only)"
            },
            "supportsWorkProfile": {
              "type": "boolean",
              "description": "Work profile supported on device (Read-only)"
            },
            "devicePasswordStatus": {
              "type": "string",
              "description": "DevicePasswordStatus (Read-only)"
            },
            "unknownSourcesStatus": {
              "type": "boolean",
              "description": "Unknown sources enabled or disabled on device (Read-only)"
            },
            "developerOptionsStatus": {
              "type": "boolean",
              "description": "Developer options enabled or disabled on device (Read-only)"
            },
            "deviceCompromisedStatus": {
              "type": "string",
              "description": "The compromised device status."
            },
            "managedAccountIsOnOwnerProfile": {
              "type": "boolean",
              "description": "Boolean indicating if this account is on owner/primary profile or not."
            }
          },
          "description": "Google Workspace Mobile Management includes Android, [Google Sync](https://support.google.com/a/answer/135937), and iOS devices. For more information about common group mobile device API tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices.html)."
        }
      ]
  directory.mobiledevices.list:
    description: |-
      Retrieves a paginated list of all mobile devices for an account.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/mobiledevices/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "MobileDevices",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#mobiledevices",
              "description": "Kind of resource this is."
            },
            "mobiledevices": {
              "type": "array",
              "items": {
                "id": "MobileDevice",
                "type": "object",
                "properties": {
                  "os": {
                    "type": "string",
                    "description": "The mobile device's operating system, for example IOS 4.3 or Android 2.3.5. This property can be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices#update_mobile_device)."
                  },
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "imei": {
                    "type": "string",
                    "description": "The device's IMEI number."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#mobiledevice",
                    "description": "The type of the API resource. For Mobiledevices resources, the value is `admin#directory#mobiledevice`."
                  },
                  "meid": {
                    "type": "string",
                    "description": "The device's MEID number."
                  },
                  "name": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of the owner's user names. If your application needs the current list of device owner names, use the [get](/admin-sdk/directory/v1/reference/mobiledevices/get.html) method. For more information about retrieving mobile device user information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-users#get_user)."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of mobile device."
                  },
                  "brand": {
                    "type": "string",
                    "description": "Mobile Device Brand (Read-only)"
                  },
                  "email": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of owner's email addresses. If your application needs the current list of user emails, use the [get](/admin-sdk/directory/v1/reference/mobiledevices/get.html) method. For additional information, see the [retrieve a user](/admin-sdk/directory/v1/guides/manage-users#get_user) method."
                  },
                  "model": {
                    "type": "string",
                    "description": "The mobile device's model name, for example Nexus S. This property can be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile=devices#update_mobile_device)."
                  },
                  "status": {
                    "type": "string",
                    "description": "The device's status."
                  },
                  "deviceId": {
                    "type": "string",
                    "description": "The serial number for a Google Sync mobile device. For Android and iOS devices, this is a software generated unique identifier."
                  },
                  "hardware": {
                    "type": "string",
                    "description": "Mobile Device Hardware (Read-only)"
                  },
                  "lastSync": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)"
                  },
                  "adbStatus": {
                    "type": "boolean",
                    "description": "Adb (USB debugging) enabled or disabled on device (Read-only)"
                  },
                  "firstSync": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time the device was first synchronized with the policy settings in the G Suite administrator control panel (Read-only)"
                  },
                  "privilege": {
                    "type": "string",
                    "description": "DMAgentPermission (Read-only)"
                  },
                  "userAgent": {
                    "type": "string",
                    "description": "Gives information about the device such as `os` version. This property can be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices#update_mobile_device)."
                  },
                  "hardwareId": {
                    "type": "string",
                    "description": "The IMEI/MEID unique identifier for Android hardware. It is not applicable to Google Sync devices. When adding an Android mobile device, this is an optional property. When updating one of these devices, this is a read-only property."
                  },
                  "resourceId": {
                    "type": "string",
                    "description": "The unique ID the API service uses to identify the mobile device."
                  },
                  "buildNumber": {
                    "type": "string",
                    "description": "The device's operating system build number."
                  },
                  "applications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "permission": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The list of permissions of this application. These can be either a standard Android permission or one defined by the application, and are found in an application's [Android manifest](https://developer.android.com/guide/topics/manifest/uses-permission-element.html). Examples of a Calendar application's permissions are `READ_CALENDAR`, or `MANAGE_ACCOUNTS`."
                        },
                        "displayName": {
                          "type": "string",
                          "description": "The application's display name. An example is `Browser`."
                        },
                        "packageName": {
                          "type": "string",
                          "description": "The application's package name. An example is `com.android.browser`."
                        },
                        "versionCode": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The application's version code. An example is `13`."
                        },
                        "versionName": {
                          "type": "string",
                          "description": "The application's version name. An example is `3.2-140714`."
                        }
                      }
                    },
                    "description": "The list of applications installed on an Android mobile device. It is not applicable to Google Sync and iOS devices. The list includes any Android applications that access Google Workspace data. When updating an applications list, it is important to note that updates replace the existing list. If the Android device has two existing applications and the API updates the list with five applications, the is now the updated list of five applications."
                  },
                  "manufacturer": {
                    "type": "string",
                    "description": "Mobile Device manufacturer (Read-only)"
                  },
                  "serialNumber": {
                    "type": "string",
                    "description": "The device's serial number."
                  },
                  "kernelVersion": {
                    "type": "string",
                    "description": "The device's kernel version."
                  },
                  "releaseVersion": {
                    "type": "string",
                    "description": "Mobile Device release version version (Read-only)"
                  },
                  "wifiMacAddress": {
                    "type": "string",
                    "description": "The device's MAC address on Wi-Fi networks."
                  },
                  "basebandVersion": {
                    "type": "string",
                    "description": "The device's baseband version."
                  },
                  "defaultLanguage": {
                    "type": "string",
                    "description": "The default locale used on the device."
                  },
                  "networkOperator": {
                    "type": "string",
                    "description": "Mobile Device mobile or network operator (if available) (Read-only)"
                  },
                  "encryptionStatus": {
                    "type": "string",
                    "description": "Mobile Device Encryption Status (Read-only)"
                  },
                  "bootloaderVersion": {
                    "type": "string",
                    "description": "Mobile Device Bootloader version (Read-only)"
                  },
                  "otherAccountsInfo": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of accounts added on device (Read-only)"
                  },
                  "securityPatchLevel": {
                    "type": "string",
                    "format": "int64",
                    "description": "Mobile Device Security patch level (Read-only)"
                  },
                  "supportsWorkProfile": {
                    "type": "boolean",
                    "description": "Work profile supported on device (Read-only)"
                  },
                  "devicePasswordStatus": {
                    "type": "string",
                    "description": "DevicePasswordStatus (Read-only)"
                  },
                  "unknownSourcesStatus": {
                    "type": "boolean",
                    "description": "Unknown sources enabled or disabled on device (Read-only)"
                  },
                  "developerOptionsStatus": {
                    "type": "boolean",
                    "description": "Developer options enabled or disabled on device (Read-only)"
                  },
                  "deviceCompromisedStatus": {
                    "type": "string",
                    "description": "The compromised device status."
                  },
                  "managedAccountIsOnOwnerProfile": {
                    "type": "boolean",
                    "description": "Boolean indicating if this account is on owner/primary profile or not."
                  }
                },
                "description": "Google Workspace Mobile Management includes Android, [Google Sync](https://support.google.com/a/answer/135937), and iOS devices. For more information about common group mobile device API tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices.html)."
              },
              "description": "List of Mobile Device objects."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token used to access next page of this result."
            }
          }
        }
      ]
  directory.orgunits.delete:
    description: |-
      Removes an organizational unit.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.orgunits.get:
    description: |-
      Retrieves an organizational unit.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "OrgUnit",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#orgUnit",
              "description": "The type of the API resource. For Orgunits resources, the value is `admin#directory#orgUnit`."
            },
            "name": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.orgunits.insert"
                ]
              },
              "description": "The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales_support parent path is sales_support. Required."
            },
            "orgUnitId": {
              "type": "string",
              "description": "The unique ID of the organizational unit."
            },
            "description": {
              "type": "string",
              "description": "Description of the organizational unit."
            },
            "orgUnitPath": {
              "type": "string",
              "description": "The full path to the organizational unit. The `orgUnitPath` is a derived property. When listed, it is derived from `parentOrgunitPath` and organizational unit's `name`. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an `orgUnitPath`, either update the name of the organization or the `parentOrgunitPath`. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [Update a user](/admin-sdk/directory/v1/guides/manage-users.html#update_user)."
            },
            "parentOrgUnitId": {
              "type": "string",
              "description": "The unique ID of the parent organizational unit. Required, unless `parentOrgUnitPath` is set."
            },
            "blockInheritance": {
              "type": "boolean",
              "description": "Determines if a sub-organizational unit can inherit the settings of the parent organization. The default value is `false`, meaning a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075)."
            },
            "parentOrgUnitPath": {
              "type": "string",
              "description": "The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit. Required, unless `parentOrgUnitId` is set."
            }
          },
          "description": "Managing your account's organizational units allows you to configure your users' access to services and custom settings. For more information about common organizational unit tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-org-units.html)."
        }
      ]
  directory.orgunits.insert:
    description: |-
      Adds an organizational unit.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "OrgUnit",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#orgUnit",
              "description": "The type of the API resource. For Orgunits resources, the value is `admin#directory#orgUnit`."
            },
            "name": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.orgunits.insert"
                ]
              },
              "description": "The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales_support parent path is sales_support. Required."
            },
            "orgUnitId": {
              "type": "string",
              "description": "The unique ID of the organizational unit."
            },
            "description": {
              "type": "string",
              "description": "Description of the organizational unit."
            },
            "orgUnitPath": {
              "type": "string",
              "description": "The full path to the organizational unit. The `orgUnitPath` is a derived property. When listed, it is derived from `parentOrgunitPath` and organizational unit's `name`. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an `orgUnitPath`, either update the name of the organization or the `parentOrgunitPath`. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [Update a user](/admin-sdk/directory/v1/guides/manage-users.html#update_user)."
            },
            "parentOrgUnitId": {
              "type": "string",
              "description": "The unique ID of the parent organizational unit. Required, unless `parentOrgUnitPath` is set."
            },
            "blockInheritance": {
              "type": "boolean",
              "description": "Determines if a sub-organizational unit can inherit the settings of the parent organization. The default value is `false`, meaning a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075)."
            },
            "parentOrgUnitPath": {
              "type": "string",
              "description": "The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit. Required, unless `parentOrgUnitId` is set."
            }
          },
          "description": "Managing your account's organizational units allows you to configure your users' access to services and custom settings. For more information about common organizational unit tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-org-units.html)."
        }
      ]
  directory.orgunits.list:
    description: |-
      Retrieves a list of all organizational units for an account.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "OrgUnits",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#orgUnits",
              "description": "The type of the API resource. For Org Unit resources, the type is `admin#directory#orgUnits`."
            },
            "organizationUnits": {
              "type": "array",
              "items": {
                "id": "OrgUnit",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#orgUnit",
                    "description": "The type of the API resource. For Orgunits resources, the value is `admin#directory#orgUnit`."
                  },
                  "name": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.orgunits.insert"
                      ]
                    },
                    "description": "The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales_support parent path is sales_support. Required."
                  },
                  "orgUnitId": {
                    "type": "string",
                    "description": "The unique ID of the organizational unit."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the organizational unit."
                  },
                  "orgUnitPath": {
                    "type": "string",
                    "description": "The full path to the organizational unit. The `orgUnitPath` is a derived property. When listed, it is derived from `parentOrgunitPath` and organizational unit's `name`. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an `orgUnitPath`, either update the name of the organization or the `parentOrgunitPath`. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [Update a user](/admin-sdk/directory/v1/guides/manage-users.html#update_user)."
                  },
                  "parentOrgUnitId": {
                    "type": "string",
                    "description": "The unique ID of the parent organizational unit. Required, unless `parentOrgUnitPath` is set."
                  },
                  "blockInheritance": {
                    "type": "boolean",
                    "description": "Determines if a sub-organizational unit can inherit the settings of the parent organization. The default value is `false`, meaning a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075)."
                  },
                  "parentOrgUnitPath": {
                    "type": "string",
                    "description": "The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit. Required, unless `parentOrgUnitId` is set."
                  }
                },
                "description": "Managing your account's organizational units allows you to configure your users' access to services and custom settings. For more information about common organizational unit tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-org-units.html)."
              },
              "description": "List of organizational unit objects."
            }
          }
        }
      ]
  directory.orgunits.patch:
    description: |-
      Updates an organizational unit. This method supports [patch semantics](/admin-sdk/directory/v1/guides/performance#patch)
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "OrgUnit",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#orgUnit",
              "description": "The type of the API resource. For Orgunits resources, the value is `admin#directory#orgUnit`."
            },
            "name": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.orgunits.insert"
                ]
              },
              "description": "The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales_support parent path is sales_support. Required."
            },
            "orgUnitId": {
              "type": "string",
              "description": "The unique ID of the organizational unit."
            },
            "description": {
              "type": "string",
              "description": "Description of the organizational unit."
            },
            "orgUnitPath": {
              "type": "string",
              "description": "The full path to the organizational unit. The `orgUnitPath` is a derived property. When listed, it is derived from `parentOrgunitPath` and organizational unit's `name`. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an `orgUnitPath`, either update the name of the organization or the `parentOrgunitPath`. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [Update a user](/admin-sdk/directory/v1/guides/manage-users.html#update_user)."
            },
            "parentOrgUnitId": {
              "type": "string",
              "description": "The unique ID of the parent organizational unit. Required, unless `parentOrgUnitPath` is set."
            },
            "blockInheritance": {
              "type": "boolean",
              "description": "Determines if a sub-organizational unit can inherit the settings of the parent organization. The default value is `false`, meaning a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075)."
            },
            "parentOrgUnitPath": {
              "type": "string",
              "description": "The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit. Required, unless `parentOrgUnitId` is set."
            }
          },
          "description": "Managing your account's organizational units allows you to configure your users' access to services and custom settings. For more information about common organizational unit tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-org-units.html)."
        }
      ]
  directory.orgunits.update:
    description: |-
      Updates an organizational unit.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "OrgUnit",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#orgUnit",
              "description": "The type of the API resource. For Orgunits resources, the value is `admin#directory#orgUnit`."
            },
            "name": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.orgunits.insert"
                ]
              },
              "description": "The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales_support parent path is sales_support. Required."
            },
            "orgUnitId": {
              "type": "string",
              "description": "The unique ID of the organizational unit."
            },
            "description": {
              "type": "string",
              "description": "Description of the organizational unit."
            },
            "orgUnitPath": {
              "type": "string",
              "description": "The full path to the organizational unit. The `orgUnitPath` is a derived property. When listed, it is derived from `parentOrgunitPath` and organizational unit's `name`. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an `orgUnitPath`, either update the name of the organization or the `parentOrgunitPath`. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [Update a user](/admin-sdk/directory/v1/guides/manage-users.html#update_user)."
            },
            "parentOrgUnitId": {
              "type": "string",
              "description": "The unique ID of the parent organizational unit. Required, unless `parentOrgUnitPath` is set."
            },
            "blockInheritance": {
              "type": "boolean",
              "description": "Determines if a sub-organizational unit can inherit the settings of the parent organization. The default value is `false`, meaning a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075)."
            },
            "parentOrgUnitPath": {
              "type": "string",
              "description": "The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit. Required, unless `parentOrgUnitId` is set."
            }
          },
          "description": "Managing your account's organizational units allows you to configure your users' access to services and custom settings. For more information about common organizational unit tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-org-units.html)."
        }
      ]
  directory.privileges.list:
    description: |-
      Retrieves a paginated list of all privileges for a customer.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/privileges/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Privileges",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#privileges",
              "description": "The type of the API resource. This is always `admin#directory#privileges`."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "Privilege",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#privilege",
                    "description": "The type of the API resource. This is always `admin#directory#privilege`."
                  },
                  "serviceId": {
                    "type": "string",
                    "description": "The obfuscated ID of the service this privilege is for. This value is returned with [`Privileges.list()`](/admin-sdk/directory/v1/reference/privileges/list)."
                  },
                  "serviceName": {
                    "type": "string",
                    "description": "The name of the service this privilege is for."
                  },
                  "isOuScopable": {
                    "type": "boolean",
                    "description": "If the privilege can be restricted to an organization unit."
                  },
                  "privilegeName": {
                    "type": "string",
                    "description": "The name of the privilege."
                  },
                  "childPrivileges": {
                    "type": "array",
                    "items": {},
                    "description": "A list of child privileges. Privileges for a service form a tree. Each privilege can have a list of child privileges; this list is empty for a leaf privilege."
                  }
                }
              },
              "description": "A list of Privilege resources."
            }
          }
        }
      ]
  directory.resources.buildings.delete:
    description: |-
      Deletes a building.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.buildings/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.resources.buildings.get:
    description: |-
      Retrieves a building.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.buildings/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Building",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#buildings#Building",
              "description": "Kind of resource this is."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "address": {
              "id": "BuildingAddress",
              "type": "object",
              "properties": {
                "locality": {
                  "type": "string",
                  "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use addressLines."
                },
                "postalCode": {
                  "type": "string",
                  "description": "Optional. Postal code of the address."
                },
                "regionCode": {
                  "type": "string",
                  "description": "Required. CLDR region code of the country/region of the address."
                },
                "sublocality": {
                  "type": "string",
                  "description": "Optional. Sublocality of the address."
                },
                "addressLines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Unstructured address lines describing the lower levels of an address."
                },
                "languageCode": {
                  "type": "string",
                  "description": "Optional. BCP-47 language code of the contents of this address (if known)."
                },
                "administrativeArea": {
                  "type": "string",
                  "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region."
                }
              },
              "description": "The postal address of the building. See [`PostalAddress`](/my-business/reference/rest/v4/PostalAddress) for details. Note that only a single address line and region code are required."
            },
            "buildingId": {
              "type": "string",
              "description": "Unique identifier for the building. The maximum length is 100 characters."
            },
            "floorNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The display names for all floors in this building. The floors are expected to be sorted in ascending order, from lowest floor to highest floor. For example, [\"B2\", \"B1\", \"L\", \"1\", \"2\", \"2M\", \"3\", \"PH\"] Must contain at least one entry."
            },
            "coordinates": {
              "id": "BuildingCoordinates",
              "type": "object",
              "properties": {
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "description": "Latitude in decimal degrees."
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "description": "Longitude in decimal degrees."
                }
              },
              "description": "The geographic coordinates of the center of the building, expressed as latitude and longitude in decimal degrees."
            },
            "description": {
              "type": "string",
              "description": "A brief description of the building. For example, \"Chelsea Market\"."
            },
            "buildingName": {
              "type": "string",
              "description": "The building name as seen by users in Calendar. Must be unique for the customer. For example, \"NYC-CHEL\". The maximum length is 100 characters."
            }
          },
          "description": "Public API: Resources.buildings"
        }
      ]
  directory.resources.buildings.insert:
    description: |-
      Inserts a building.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.buildings/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Building",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#buildings#Building",
              "description": "Kind of resource this is."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "address": {
              "id": "BuildingAddress",
              "type": "object",
              "properties": {
                "locality": {
                  "type": "string",
                  "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use addressLines."
                },
                "postalCode": {
                  "type": "string",
                  "description": "Optional. Postal code of the address."
                },
                "regionCode": {
                  "type": "string",
                  "description": "Required. CLDR region code of the country/region of the address."
                },
                "sublocality": {
                  "type": "string",
                  "description": "Optional. Sublocality of the address."
                },
                "addressLines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Unstructured address lines describing the lower levels of an address."
                },
                "languageCode": {
                  "type": "string",
                  "description": "Optional. BCP-47 language code of the contents of this address (if known)."
                },
                "administrativeArea": {
                  "type": "string",
                  "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region."
                }
              },
              "description": "The postal address of the building. See [`PostalAddress`](/my-business/reference/rest/v4/PostalAddress) for details. Note that only a single address line and region code are required."
            },
            "buildingId": {
              "type": "string",
              "description": "Unique identifier for the building. The maximum length is 100 characters."
            },
            "floorNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The display names for all floors in this building. The floors are expected to be sorted in ascending order, from lowest floor to highest floor. For example, [\"B2\", \"B1\", \"L\", \"1\", \"2\", \"2M\", \"3\", \"PH\"] Must contain at least one entry."
            },
            "coordinates": {
              "id": "BuildingCoordinates",
              "type": "object",
              "properties": {
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "description": "Latitude in decimal degrees."
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "description": "Longitude in decimal degrees."
                }
              },
              "description": "The geographic coordinates of the center of the building, expressed as latitude and longitude in decimal degrees."
            },
            "description": {
              "type": "string",
              "description": "A brief description of the building. For example, \"Chelsea Market\"."
            },
            "buildingName": {
              "type": "string",
              "description": "The building name as seen by users in Calendar. Must be unique for the customer. For example, \"NYC-CHEL\". The maximum length is 100 characters."
            }
          },
          "description": "Public API: Resources.buildings"
        }
      ]
  directory.resources.buildings.list:
    description: |-
      Retrieves a list of buildings for an account.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.buildings/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Buildings",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#buildings#buildingsList",
              "description": "Kind of resource this is."
            },
            "buildings": {
              "type": "array",
              "items": {
                "id": "Building",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#resources#buildings#Building",
                    "description": "Kind of resource this is."
                  },
                  "etags": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "address": {
                    "id": "BuildingAddress",
                    "type": "object",
                    "properties": {
                      "locality": {
                        "type": "string",
                        "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use addressLines."
                      },
                      "postalCode": {
                        "type": "string",
                        "description": "Optional. Postal code of the address."
                      },
                      "regionCode": {
                        "type": "string",
                        "description": "Required. CLDR region code of the country/region of the address."
                      },
                      "sublocality": {
                        "type": "string",
                        "description": "Optional. Sublocality of the address."
                      },
                      "addressLines": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Unstructured address lines describing the lower levels of an address."
                      },
                      "languageCode": {
                        "type": "string",
                        "description": "Optional. BCP-47 language code of the contents of this address (if known)."
                      },
                      "administrativeArea": {
                        "type": "string",
                        "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region."
                      }
                    },
                    "description": "The postal address of the building. See [`PostalAddress`](/my-business/reference/rest/v4/PostalAddress) for details. Note that only a single address line and region code are required."
                  },
                  "buildingId": {
                    "type": "string",
                    "description": "Unique identifier for the building. The maximum length is 100 characters."
                  },
                  "floorNames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The display names for all floors in this building. The floors are expected to be sorted in ascending order, from lowest floor to highest floor. For example, [\"B2\", \"B1\", \"L\", \"1\", \"2\", \"2M\", \"3\", \"PH\"] Must contain at least one entry."
                  },
                  "coordinates": {
                    "id": "BuildingCoordinates",
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "number",
                        "format": "double",
                        "description": "Latitude in decimal degrees."
                      },
                      "longitude": {
                        "type": "number",
                        "format": "double",
                        "description": "Longitude in decimal degrees."
                      }
                    },
                    "description": "The geographic coordinates of the center of the building, expressed as latitude and longitude in decimal degrees."
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the building. For example, \"Chelsea Market\"."
                  },
                  "buildingName": {
                    "type": "string",
                    "description": "The building name as seen by users in Calendar. Must be unique for the customer. For example, \"NYC-CHEL\". The maximum length is 100 characters."
                  }
                },
                "description": "Public API: Resources.buildings"
              },
              "description": "The Buildings in this page of results."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
            }
          },
          "description": "Public API: Resources.buildings"
        }
      ]
  directory.resources.buildings.patch:
    description: |-
      Patches a building via Apiary Patch Orchestration.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.buildings/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Building",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#buildings#Building",
              "description": "Kind of resource this is."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "address": {
              "id": "BuildingAddress",
              "type": "object",
              "properties": {
                "locality": {
                  "type": "string",
                  "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use addressLines."
                },
                "postalCode": {
                  "type": "string",
                  "description": "Optional. Postal code of the address."
                },
                "regionCode": {
                  "type": "string",
                  "description": "Required. CLDR region code of the country/region of the address."
                },
                "sublocality": {
                  "type": "string",
                  "description": "Optional. Sublocality of the address."
                },
                "addressLines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Unstructured address lines describing the lower levels of an address."
                },
                "languageCode": {
                  "type": "string",
                  "description": "Optional. BCP-47 language code of the contents of this address (if known)."
                },
                "administrativeArea": {
                  "type": "string",
                  "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region."
                }
              },
              "description": "The postal address of the building. See [`PostalAddress`](/my-business/reference/rest/v4/PostalAddress) for details. Note that only a single address line and region code are required."
            },
            "buildingId": {
              "type": "string",
              "description": "Unique identifier for the building. The maximum length is 100 characters."
            },
            "floorNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The display names for all floors in this building. The floors are expected to be sorted in ascending order, from lowest floor to highest floor. For example, [\"B2\", \"B1\", \"L\", \"1\", \"2\", \"2M\", \"3\", \"PH\"] Must contain at least one entry."
            },
            "coordinates": {
              "id": "BuildingCoordinates",
              "type": "object",
              "properties": {
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "description": "Latitude in decimal degrees."
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "description": "Longitude in decimal degrees."
                }
              },
              "description": "The geographic coordinates of the center of the building, expressed as latitude and longitude in decimal degrees."
            },
            "description": {
              "type": "string",
              "description": "A brief description of the building. For example, \"Chelsea Market\"."
            },
            "buildingName": {
              "type": "string",
              "description": "The building name as seen by users in Calendar. Must be unique for the customer. For example, \"NYC-CHEL\". The maximum length is 100 characters."
            }
          },
          "description": "Public API: Resources.buildings"
        }
      ]
  directory.resources.buildings.update:
    description: |-
      Updates a building.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.buildings/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Building",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#buildings#Building",
              "description": "Kind of resource this is."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "address": {
              "id": "BuildingAddress",
              "type": "object",
              "properties": {
                "locality": {
                  "type": "string",
                  "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use addressLines."
                },
                "postalCode": {
                  "type": "string",
                  "description": "Optional. Postal code of the address."
                },
                "regionCode": {
                  "type": "string",
                  "description": "Required. CLDR region code of the country/region of the address."
                },
                "sublocality": {
                  "type": "string",
                  "description": "Optional. Sublocality of the address."
                },
                "addressLines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Unstructured address lines describing the lower levels of an address."
                },
                "languageCode": {
                  "type": "string",
                  "description": "Optional. BCP-47 language code of the contents of this address (if known)."
                },
                "administrativeArea": {
                  "type": "string",
                  "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region."
                }
              },
              "description": "The postal address of the building. See [`PostalAddress`](/my-business/reference/rest/v4/PostalAddress) for details. Note that only a single address line and region code are required."
            },
            "buildingId": {
              "type": "string",
              "description": "Unique identifier for the building. The maximum length is 100 characters."
            },
            "floorNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The display names for all floors in this building. The floors are expected to be sorted in ascending order, from lowest floor to highest floor. For example, [\"B2\", \"B1\", \"L\", \"1\", \"2\", \"2M\", \"3\", \"PH\"] Must contain at least one entry."
            },
            "coordinates": {
              "id": "BuildingCoordinates",
              "type": "object",
              "properties": {
                "latitude": {
                  "type": "number",
                  "format": "double",
                  "description": "Latitude in decimal degrees."
                },
                "longitude": {
                  "type": "number",
                  "format": "double",
                  "description": "Longitude in decimal degrees."
                }
              },
              "description": "The geographic coordinates of the center of the building, expressed as latitude and longitude in decimal degrees."
            },
            "description": {
              "type": "string",
              "description": "A brief description of the building. For example, \"Chelsea Market\"."
            },
            "buildingName": {
              "type": "string",
              "description": "The building name as seen by users in Calendar. Must be unique for the customer. For example, \"NYC-CHEL\". The maximum length is 100 characters."
            }
          },
          "description": "Public API: Resources.buildings"
        }
      ]
  directory.resources.calendars.delete:
    description: |-
      Deletes a calendar resource.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.calendars/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.resources.calendars.get:
    description: |-
      Retrieves a calendar resource.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.calendars/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "CalendarResource",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#calendars#CalendarResource",
              "description": "The type of the resource. For calendar resources, the value is `admin#directory#resources#calendars#CalendarResource`."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "Capacity of a resource, number of seats in a room."
            },
            "floorName": {
              "type": "string",
              "description": "Name of the floor a resource is located on."
            },
            "buildingId": {
              "type": "string",
              "description": "Unique ID for the building a resource is located in."
            },
            "resourceId": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.resources.calendars.insert"
                ]
              },
              "description": "The unique ID for the calendar resource."
            },
            "floorSection": {
              "type": "string",
              "description": "Name of the section within a floor a resource is located in."
            },
            "resourceName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.resources.calendars.insert"
                ]
              },
              "description": "The name of the calendar resource. For example, \"Training Room 1A\"."
            },
            "resourceType": {
              "type": "string",
              "description": "The type of the calendar resource, intended for non-room resources."
            },
            "resourceEmail": {
              "type": "string",
              "description": "The read-only email for the calendar resource. Generated as part of creating a new calendar resource."
            },
            "featureInstances": {
              "type": "any",
              "description": "Instances of features for the calendar resource."
            },
            "resourceCategory": {
              "type": "string",
              "description": "The category of the calendar resource. Either CONFERENCE_ROOM or OTHER. Legacy data is set to CATEGORY_UNKNOWN."
            },
            "resourceDescription": {
              "type": "string",
              "description": "Description of the resource, visible only to admins."
            },
            "generatedResourceName": {
              "type": "string",
              "description": "The read-only auto-generated name of the calendar resource which includes metadata about the resource such as building name, floor, capacity, etc. For example, \"NYC-2-Training Room 1A (16)\"."
            },
            "userVisibleDescription": {
              "type": "string",
              "description": "Description of the resource, visible to users and admins."
            }
          },
          "description": "Public API: Resources.calendars"
        }
      ]
  directory.resources.calendars.insert:
    description: |-
      Inserts a calendar resource.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.calendars/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "CalendarResource",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#calendars#CalendarResource",
              "description": "The type of the resource. For calendar resources, the value is `admin#directory#resources#calendars#CalendarResource`."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "Capacity of a resource, number of seats in a room."
            },
            "floorName": {
              "type": "string",
              "description": "Name of the floor a resource is located on."
            },
            "buildingId": {
              "type": "string",
              "description": "Unique ID for the building a resource is located in."
            },
            "resourceId": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.resources.calendars.insert"
                ]
              },
              "description": "The unique ID for the calendar resource."
            },
            "floorSection": {
              "type": "string",
              "description": "Name of the section within a floor a resource is located in."
            },
            "resourceName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.resources.calendars.insert"
                ]
              },
              "description": "The name of the calendar resource. For example, \"Training Room 1A\"."
            },
            "resourceType": {
              "type": "string",
              "description": "The type of the calendar resource, intended for non-room resources."
            },
            "resourceEmail": {
              "type": "string",
              "description": "The read-only email for the calendar resource. Generated as part of creating a new calendar resource."
            },
            "featureInstances": {
              "type": "any",
              "description": "Instances of features for the calendar resource."
            },
            "resourceCategory": {
              "type": "string",
              "description": "The category of the calendar resource. Either CONFERENCE_ROOM or OTHER. Legacy data is set to CATEGORY_UNKNOWN."
            },
            "resourceDescription": {
              "type": "string",
              "description": "Description of the resource, visible only to admins."
            },
            "generatedResourceName": {
              "type": "string",
              "description": "The read-only auto-generated name of the calendar resource which includes metadata about the resource such as building name, floor, capacity, etc. For example, \"NYC-2-Training Room 1A (16)\"."
            },
            "userVisibleDescription": {
              "type": "string",
              "description": "Description of the resource, visible to users and admins."
            }
          },
          "description": "Public API: Resources.calendars"
        }
      ]
  directory.resources.calendars.list:
    description: |-
      Retrieves a list of calendar resources for an account.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.calendars/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "CalendarResources",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#calendars#calendarResourcesList",
              "description": "Identifies this as a collection of CalendarResources. This is always `admin#directory#resources#calendars#calendarResourcesList`."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "CalendarResource",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#resources#calendars#CalendarResource",
                    "description": "The type of the resource. For calendar resources, the value is `admin#directory#resources#calendars#CalendarResource`."
                  },
                  "etags": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Capacity of a resource, number of seats in a room."
                  },
                  "floorName": {
                    "type": "string",
                    "description": "Name of the floor a resource is located on."
                  },
                  "buildingId": {
                    "type": "string",
                    "description": "Unique ID for the building a resource is located in."
                  },
                  "resourceId": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.resources.calendars.insert"
                      ]
                    },
                    "description": "The unique ID for the calendar resource."
                  },
                  "floorSection": {
                    "type": "string",
                    "description": "Name of the section within a floor a resource is located in."
                  },
                  "resourceName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.resources.calendars.insert"
                      ]
                    },
                    "description": "The name of the calendar resource. For example, \"Training Room 1A\"."
                  },
                  "resourceType": {
                    "type": "string",
                    "description": "The type of the calendar resource, intended for non-room resources."
                  },
                  "resourceEmail": {
                    "type": "string",
                    "description": "The read-only email for the calendar resource. Generated as part of creating a new calendar resource."
                  },
                  "featureInstances": {
                    "type": "any",
                    "description": "Instances of features for the calendar resource."
                  },
                  "resourceCategory": {
                    "type": "string",
                    "description": "The category of the calendar resource. Either CONFERENCE_ROOM or OTHER. Legacy data is set to CATEGORY_UNKNOWN."
                  },
                  "resourceDescription": {
                    "type": "string",
                    "description": "Description of the resource, visible only to admins."
                  },
                  "generatedResourceName": {
                    "type": "string",
                    "description": "The read-only auto-generated name of the calendar resource which includes metadata about the resource such as building name, floor, capacity, etc. For example, \"NYC-2-Training Room 1A (16)\"."
                  },
                  "userVisibleDescription": {
                    "type": "string",
                    "description": "Description of the resource, visible to users and admins."
                  }
                },
                "description": "Public API: Resources.calendars"
              },
              "description": "The CalendarResources in this page of results."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
            }
          },
          "description": "Public API: Resources.calendars"
        }
      ]
  directory.resources.calendars.patch:
    description: |-
      Patches a calendar resource via Apiary Patch Orchestration.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.calendars/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "CalendarResource",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#calendars#CalendarResource",
              "description": "The type of the resource. For calendar resources, the value is `admin#directory#resources#calendars#CalendarResource`."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "Capacity of a resource, number of seats in a room."
            },
            "floorName": {
              "type": "string",
              "description": "Name of the floor a resource is located on."
            },
            "buildingId": {
              "type": "string",
              "description": "Unique ID for the building a resource is located in."
            },
            "resourceId": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.resources.calendars.insert"
                ]
              },
              "description": "The unique ID for the calendar resource."
            },
            "floorSection": {
              "type": "string",
              "description": "Name of the section within a floor a resource is located in."
            },
            "resourceName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.resources.calendars.insert"
                ]
              },
              "description": "The name of the calendar resource. For example, \"Training Room 1A\"."
            },
            "resourceType": {
              "type": "string",
              "description": "The type of the calendar resource, intended for non-room resources."
            },
            "resourceEmail": {
              "type": "string",
              "description": "The read-only email for the calendar resource. Generated as part of creating a new calendar resource."
            },
            "featureInstances": {
              "type": "any",
              "description": "Instances of features for the calendar resource."
            },
            "resourceCategory": {
              "type": "string",
              "description": "The category of the calendar resource. Either CONFERENCE_ROOM or OTHER. Legacy data is set to CATEGORY_UNKNOWN."
            },
            "resourceDescription": {
              "type": "string",
              "description": "Description of the resource, visible only to admins."
            },
            "generatedResourceName": {
              "type": "string",
              "description": "The read-only auto-generated name of the calendar resource which includes metadata about the resource such as building name, floor, capacity, etc. For example, \"NYC-2-Training Room 1A (16)\"."
            },
            "userVisibleDescription": {
              "type": "string",
              "description": "Description of the resource, visible to users and admins."
            }
          },
          "description": "Public API: Resources.calendars"
        }
      ]
  directory.resources.calendars.update:
    description: |-
      Updates a calendar resource. This method supports patch semantics, meaning you only need to include the fields you wish to update. Fields that are not present in the request will be preserved.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.calendars/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "CalendarResource",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#calendars#CalendarResource",
              "description": "The type of the resource. For calendar resources, the value is `admin#directory#resources#calendars#CalendarResource`."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "Capacity of a resource, number of seats in a room."
            },
            "floorName": {
              "type": "string",
              "description": "Name of the floor a resource is located on."
            },
            "buildingId": {
              "type": "string",
              "description": "Unique ID for the building a resource is located in."
            },
            "resourceId": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.resources.calendars.insert"
                ]
              },
              "description": "The unique ID for the calendar resource."
            },
            "floorSection": {
              "type": "string",
              "description": "Name of the section within a floor a resource is located in."
            },
            "resourceName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.resources.calendars.insert"
                ]
              },
              "description": "The name of the calendar resource. For example, \"Training Room 1A\"."
            },
            "resourceType": {
              "type": "string",
              "description": "The type of the calendar resource, intended for non-room resources."
            },
            "resourceEmail": {
              "type": "string",
              "description": "The read-only email for the calendar resource. Generated as part of creating a new calendar resource."
            },
            "featureInstances": {
              "type": "any",
              "description": "Instances of features for the calendar resource."
            },
            "resourceCategory": {
              "type": "string",
              "description": "The category of the calendar resource. Either CONFERENCE_ROOM or OTHER. Legacy data is set to CATEGORY_UNKNOWN."
            },
            "resourceDescription": {
              "type": "string",
              "description": "Description of the resource, visible only to admins."
            },
            "generatedResourceName": {
              "type": "string",
              "description": "The read-only auto-generated name of the calendar resource which includes metadata about the resource such as building name, floor, capacity, etc. For example, \"NYC-2-Training Room 1A (16)\"."
            },
            "userVisibleDescription": {
              "type": "string",
              "description": "Description of the resource, visible to users and admins."
            }
          },
          "description": "Public API: Resources.calendars"
        }
      ]
  directory.resources.features.delete:
    description: |-
      Deletes a feature.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.features/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.resources.features.get:
    description: |-
      Retrieves a feature.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.features/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Feature",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#features#Feature",
              "description": "Kind of resource this is."
            },
            "name": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.resources.features.insert"
                ]
              },
              "description": "The name of the feature."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            }
          },
          "description": "JSON template for Feature object in Directory API."
        }
      ]
  directory.resources.features.insert:
    description: |-
      Inserts a feature.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.features/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Feature",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#features#Feature",
              "description": "Kind of resource this is."
            },
            "name": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.resources.features.insert"
                ]
              },
              "description": "The name of the feature."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            }
          },
          "description": "JSON template for Feature object in Directory API."
        }
      ]
  directory.resources.features.list:
    description: |-
      Retrieves a list of features for an account.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.features/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Features",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#features#featuresList",
              "description": "Kind of resource this is."
            },
            "features": {
              "type": "array",
              "items": {
                "id": "Feature",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#resources#features#Feature",
                    "description": "Kind of resource this is."
                  },
                  "name": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.resources.features.insert"
                      ]
                    },
                    "description": "The name of the feature."
                  },
                  "etags": {
                    "type": "string",
                    "description": "ETag of the resource."
                  }
                },
                "description": "JSON template for Feature object in Directory API."
              },
              "description": "The Features in this page of results."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
            }
          },
          "description": "Public API: Resources.features"
        }
      ]
  directory.resources.features.patch:
    description: |-
      Patches a feature via Apiary Patch Orchestration.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.features/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Feature",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#features#Feature",
              "description": "Kind of resource this is."
            },
            "name": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.resources.features.insert"
                ]
              },
              "description": "The name of the feature."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            }
          },
          "description": "JSON template for Feature object in Directory API."
        }
      ]
  directory.resources.features.rename:
    description: |-
      Renames a feature.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.features/rename
    example:
      inputs: [
        {
          "id": "FeatureRename",
          "type": "object",
          "properties": {
            "newName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.resources.features.rename"
                ]
              },
              "description": "New name of the feature."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  directory.resources.features.update:
    description: |-
      Updates a feature.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/resources.features/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Feature",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "admin#directory#resources#features#Feature",
              "description": "Kind of resource this is."
            },
            "name": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.resources.features.insert"
                ]
              },
              "description": "The name of the feature."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            }
          },
          "description": "JSON template for Feature object in Directory API."
        }
      ]
  directory.roleAssignments.delete:
    description: |-
      Deletes a role assignment.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/roleAssignments/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.roleAssignments.get:
    description: |-
      Retrieve a role assignment.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/roleAssignments/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "RoleAssignment",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#roleAssignment",
              "description": "The type of the API resource. This is always `admin#directory#roleAssignment`."
            },
            "roleId": {
              "type": "string",
              "format": "int64",
              "description": "The ID of the role that is assigned."
            },
            "orgUnitId": {
              "type": "string",
              "description": "If the role is restricted to an organization unit, this contains the ID for the organization unit the exercise of this role is restricted to."
            },
            "scopeType": {
              "type": "string",
              "description": "The scope in which this role is assigned."
            },
            "assignedTo": {
              "type": "string",
              "description": "The unique ID of the user this role is assigned to."
            },
            "roleAssignmentId": {
              "type": "string",
              "format": "int64",
              "description": "ID of this roleAssignment."
            }
          },
          "description": "Defines an assignment of a role."
        }
      ]
  directory.roleAssignments.insert:
    description: |-
      Creates a role assignment.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/roleAssignments/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "RoleAssignment",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#roleAssignment",
              "description": "The type of the API resource. This is always `admin#directory#roleAssignment`."
            },
            "roleId": {
              "type": "string",
              "format": "int64",
              "description": "The ID of the role that is assigned."
            },
            "orgUnitId": {
              "type": "string",
              "description": "If the role is restricted to an organization unit, this contains the ID for the organization unit the exercise of this role is restricted to."
            },
            "scopeType": {
              "type": "string",
              "description": "The scope in which this role is assigned."
            },
            "assignedTo": {
              "type": "string",
              "description": "The unique ID of the user this role is assigned to."
            },
            "roleAssignmentId": {
              "type": "string",
              "format": "int64",
              "description": "ID of this roleAssignment."
            }
          },
          "description": "Defines an assignment of a role."
        }
      ]
  directory.roleAssignments.list:
    description: |-
      Retrieves a paginated list of all roleAssignments.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/roleAssignments/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "RoleAssignments",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#roleAssignments",
              "description": "The type of the API resource. This is always `admin#directory#roleAssignments`."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "RoleAssignment",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#roleAssignment",
                    "description": "The type of the API resource. This is always `admin#directory#roleAssignment`."
                  },
                  "roleId": {
                    "type": "string",
                    "format": "int64",
                    "description": "The ID of the role that is assigned."
                  },
                  "orgUnitId": {
                    "type": "string",
                    "description": "If the role is restricted to an organization unit, this contains the ID for the organization unit the exercise of this role is restricted to."
                  },
                  "scopeType": {
                    "type": "string",
                    "description": "The scope in which this role is assigned."
                  },
                  "assignedTo": {
                    "type": "string",
                    "description": "The unique ID of the user this role is assigned to."
                  },
                  "roleAssignmentId": {
                    "type": "string",
                    "format": "int64",
                    "description": "ID of this roleAssignment."
                  }
                },
                "description": "Defines an assignment of a role."
              },
              "description": "A list of RoleAssignment resources."
            },
            "nextPageToken": {
              "type": "string"
            }
          }
        }
      ]
  directory.roles.delete:
    description: |-
      Deletes a role.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/roles/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.roles.get:
    description: |-
      Retrieves a role.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/roles/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#role",
              "description": "The type of the API resource. This is always `admin#directory#role`."
            },
            "roleId": {
              "type": "string",
              "format": "int64",
              "description": "ID of the role."
            },
            "roleName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.roles.insert"
                ]
              },
              "description": "Name of the role."
            },
            "isSystemRole": {
              "type": "boolean",
              "description": "Returns `true` if this is a pre-defined system role."
            },
            "rolePrivileges": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "serviceId": {
                    "type": "string",
                    "description": "The obfuscated ID of the service this privilege is for. This value is returned with [`Privileges.list()`](/admin-sdk/directory/v1/reference/privileges/list)."
                  },
                  "privilegeName": {
                    "type": "string",
                    "description": "The name of the privilege."
                  }
                }
              },
              "annotations": {
                "required": [
                  "directory.roles.insert"
                ]
              },
              "description": "The set of privileges that are granted to this role."
            },
            "roleDescription": {
              "type": "string",
              "description": "A short description of the role."
            },
            "isSuperAdminRole": {
              "type": "boolean",
              "description": "Returns `true` if the role is a super admin role."
            }
          }
        }
      ]
  directory.roles.insert:
    description: |-
      Creates a role.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/roles/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#role",
              "description": "The type of the API resource. This is always `admin#directory#role`."
            },
            "roleId": {
              "type": "string",
              "format": "int64",
              "description": "ID of the role."
            },
            "roleName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.roles.insert"
                ]
              },
              "description": "Name of the role."
            },
            "isSystemRole": {
              "type": "boolean",
              "description": "Returns `true` if this is a pre-defined system role."
            },
            "rolePrivileges": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "serviceId": {
                    "type": "string",
                    "description": "The obfuscated ID of the service this privilege is for. This value is returned with [`Privileges.list()`](/admin-sdk/directory/v1/reference/privileges/list)."
                  },
                  "privilegeName": {
                    "type": "string",
                    "description": "The name of the privilege."
                  }
                }
              },
              "annotations": {
                "required": [
                  "directory.roles.insert"
                ]
              },
              "description": "The set of privileges that are granted to this role."
            },
            "roleDescription": {
              "type": "string",
              "description": "A short description of the role."
            },
            "isSuperAdminRole": {
              "type": "boolean",
              "description": "Returns `true` if the role is a super admin role."
            }
          }
        }
      ]
  directory.roles.list:
    description: |-
      Retrieves a paginated list of all the roles in a domain.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/roles/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Roles",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#roles",
              "description": "The type of the API resource. This is always `admin#directory#roles`."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "Role",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#role",
                    "description": "The type of the API resource. This is always `admin#directory#role`."
                  },
                  "roleId": {
                    "type": "string",
                    "format": "int64",
                    "description": "ID of the role."
                  },
                  "roleName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.roles.insert"
                      ]
                    },
                    "description": "Name of the role."
                  },
                  "isSystemRole": {
                    "type": "boolean",
                    "description": "Returns `true` if this is a pre-defined system role."
                  },
                  "rolePrivileges": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "serviceId": {
                          "type": "string",
                          "description": "The obfuscated ID of the service this privilege is for. This value is returned with [`Privileges.list()`](/admin-sdk/directory/v1/reference/privileges/list)."
                        },
                        "privilegeName": {
                          "type": "string",
                          "description": "The name of the privilege."
                        }
                      }
                    },
                    "annotations": {
                      "required": [
                        "directory.roles.insert"
                      ]
                    },
                    "description": "The set of privileges that are granted to this role."
                  },
                  "roleDescription": {
                    "type": "string",
                    "description": "A short description of the role."
                  },
                  "isSuperAdminRole": {
                    "type": "boolean",
                    "description": "Returns `true` if the role is a super admin role."
                  }
                }
              },
              "description": "A list of Role resources."
            },
            "nextPageToken": {
              "type": "string"
            }
          }
        }
      ]
  directory.roles.patch:
    description: |-
      Patch role via Apiary Patch Orchestration
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/roles/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#role",
              "description": "The type of the API resource. This is always `admin#directory#role`."
            },
            "roleId": {
              "type": "string",
              "format": "int64",
              "description": "ID of the role."
            },
            "roleName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.roles.insert"
                ]
              },
              "description": "Name of the role."
            },
            "isSystemRole": {
              "type": "boolean",
              "description": "Returns `true` if this is a pre-defined system role."
            },
            "rolePrivileges": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "serviceId": {
                    "type": "string",
                    "description": "The obfuscated ID of the service this privilege is for. This value is returned with [`Privileges.list()`](/admin-sdk/directory/v1/reference/privileges/list)."
                  },
                  "privilegeName": {
                    "type": "string",
                    "description": "The name of the privilege."
                  }
                }
              },
              "annotations": {
                "required": [
                  "directory.roles.insert"
                ]
              },
              "description": "The set of privileges that are granted to this role."
            },
            "roleDescription": {
              "type": "string",
              "description": "A short description of the role."
            },
            "isSuperAdminRole": {
              "type": "boolean",
              "description": "Returns `true` if the role is a super admin role."
            }
          }
        }
      ]
  directory.roles.update:
    description: |-
      Updates a role.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/roles/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#role",
              "description": "The type of the API resource. This is always `admin#directory#role`."
            },
            "roleId": {
              "type": "string",
              "format": "int64",
              "description": "ID of the role."
            },
            "roleName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.roles.insert"
                ]
              },
              "description": "Name of the role."
            },
            "isSystemRole": {
              "type": "boolean",
              "description": "Returns `true` if this is a pre-defined system role."
            },
            "rolePrivileges": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "serviceId": {
                    "type": "string",
                    "description": "The obfuscated ID of the service this privilege is for. This value is returned with [`Privileges.list()`](/admin-sdk/directory/v1/reference/privileges/list)."
                  },
                  "privilegeName": {
                    "type": "string",
                    "description": "The name of the privilege."
                  }
                }
              },
              "annotations": {
                "required": [
                  "directory.roles.insert"
                ]
              },
              "description": "The set of privileges that are granted to this role."
            },
            "roleDescription": {
              "type": "string",
              "description": "A short description of the role."
            },
            "isSuperAdminRole": {
              "type": "boolean",
              "description": "Returns `true` if the role is a super admin role."
            }
          }
        }
      ]
  directory.schemas.delete:
    description: |-
      Delete schema
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/schemas/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.schemas.get:
    description: |-
      Retrieve schema
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/schemas/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Schema",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "The ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#schema",
              "description": "Kind of resource this is."
            },
            "fields": {
              "type": "array",
              "items": {
                "id": "SchemaFieldSpec",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "The ETag of the field."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#schema#fieldspec",
                    "description": "The kind of resource this is. For schema fields this is always `admin#directory#schema#fieldspec`."
                  },
                  "fieldId": {
                    "type": "string",
                    "description": "The unique identifier of the field (Read-only)"
                  },
                  "indexed": {
                    "type": "boolean",
                    "default": "true",
                    "description": "Boolean specifying whether the field is indexed or not. Default: `true`."
                  },
                  "fieldName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.schemas.insert",
                        "directory.schemas.update"
                      ]
                    },
                    "description": "The name of the field."
                  },
                  "fieldType": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.schemas.insert",
                        "directory.schemas.update"
                      ]
                    },
                    "description": "The type of the field."
                  },
                  "displayName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.schemas.insert",
                        "directory.schemas.update"
                      ]
                    },
                    "description": "Display Name of the field."
                  },
                  "multiValued": {
                    "type": "boolean",
                    "description": "A boolean specifying whether this is a multi-valued field or not. Default: `false`."
                  },
                  "readAccessType": {
                    "type": "string",
                    "default": "ALL_DOMAIN_USERS",
                    "description": "Specifies who can view values of this field. See [Retrieve users as a non-administrator](/admin-sdk/directory/v1/guides/manage-users#retrieve_users_non_admin) for more information. Note: It may take up to 24 hours for changes to this field to be reflected."
                  },
                  "numericIndexingSpec": {
                    "type": "object",
                    "properties": {
                      "maxValue": {
                        "type": "number",
                        "format": "double",
                        "description": "Maximum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant."
                      },
                      "minValue": {
                        "type": "number",
                        "format": "double",
                        "description": "Minimum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant."
                      }
                    },
                    "description": "Indexing spec for a numeric field. By default, only exact match queries will be supported for numeric fields. Setting the `numericIndexingSpec` allows range queries to be supported."
                  }
                },
                "description": "You can use schemas to add custom fields to user profiles. You can use these fields to store information such as the projects your users work on, their physical locations, their hire dates, or whatever else fits your business needs. For more information, see [Custom User Fields](/admin-sdk/directory/v1/guides/manage-schemas)."
              },
              "annotations": {
                "required": [
                  "directory.schemas.insert",
                  "directory.schemas.update"
                ]
              },
              "description": "A list of fields in the schema."
            },
            "schemaId": {
              "type": "string",
              "description": "The unique identifier of the schema (Read-only)"
            },
            "schemaName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.schemas.insert"
                ]
              },
              "description": "The schema's name."
            },
            "displayName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.schemas.insert"
                ]
              },
              "description": "Display name for the schema."
            }
          },
          "description": "The type of API resource. For Schema resources, this is always `admin#directory#schema`."
        }
      ]
  directory.schemas.insert:
    description: |-
      Create schema.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/schemas/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Schema",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "The ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#schema",
              "description": "Kind of resource this is."
            },
            "fields": {
              "type": "array",
              "items": {
                "id": "SchemaFieldSpec",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "The ETag of the field."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#schema#fieldspec",
                    "description": "The kind of resource this is. For schema fields this is always `admin#directory#schema#fieldspec`."
                  },
                  "fieldId": {
                    "type": "string",
                    "description": "The unique identifier of the field (Read-only)"
                  },
                  "indexed": {
                    "type": "boolean",
                    "default": "true",
                    "description": "Boolean specifying whether the field is indexed or not. Default: `true`."
                  },
                  "fieldName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.schemas.insert",
                        "directory.schemas.update"
                      ]
                    },
                    "description": "The name of the field."
                  },
                  "fieldType": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.schemas.insert",
                        "directory.schemas.update"
                      ]
                    },
                    "description": "The type of the field."
                  },
                  "displayName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.schemas.insert",
                        "directory.schemas.update"
                      ]
                    },
                    "description": "Display Name of the field."
                  },
                  "multiValued": {
                    "type": "boolean",
                    "description": "A boolean specifying whether this is a multi-valued field or not. Default: `false`."
                  },
                  "readAccessType": {
                    "type": "string",
                    "default": "ALL_DOMAIN_USERS",
                    "description": "Specifies who can view values of this field. See [Retrieve users as a non-administrator](/admin-sdk/directory/v1/guides/manage-users#retrieve_users_non_admin) for more information. Note: It may take up to 24 hours for changes to this field to be reflected."
                  },
                  "numericIndexingSpec": {
                    "type": "object",
                    "properties": {
                      "maxValue": {
                        "type": "number",
                        "format": "double",
                        "description": "Maximum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant."
                      },
                      "minValue": {
                        "type": "number",
                        "format": "double",
                        "description": "Minimum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant."
                      }
                    },
                    "description": "Indexing spec for a numeric field. By default, only exact match queries will be supported for numeric fields. Setting the `numericIndexingSpec` allows range queries to be supported."
                  }
                },
                "description": "You can use schemas to add custom fields to user profiles. You can use these fields to store information such as the projects your users work on, their physical locations, their hire dates, or whatever else fits your business needs. For more information, see [Custom User Fields](/admin-sdk/directory/v1/guides/manage-schemas)."
              },
              "annotations": {
                "required": [
                  "directory.schemas.insert",
                  "directory.schemas.update"
                ]
              },
              "description": "A list of fields in the schema."
            },
            "schemaId": {
              "type": "string",
              "description": "The unique identifier of the schema (Read-only)"
            },
            "schemaName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.schemas.insert"
                ]
              },
              "description": "The schema's name."
            },
            "displayName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.schemas.insert"
                ]
              },
              "description": "Display name for the schema."
            }
          },
          "description": "The type of API resource. For Schema resources, this is always `admin#directory#schema`."
        }
      ]
  directory.schemas.list:
    description: |-
      Retrieve all schemas for a customer
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/schemas/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Schemas",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#schemas",
              "description": "Kind of resource this is."
            },
            "schemas": {
              "type": "array",
              "items": {
                "id": "Schema",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "The ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#schema",
                    "description": "Kind of resource this is."
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "id": "SchemaFieldSpec",
                      "type": "object",
                      "properties": {
                        "etag": {
                          "type": "string",
                          "description": "The ETag of the field."
                        },
                        "kind": {
                          "type": "string",
                          "default": "admin#directory#schema#fieldspec",
                          "description": "The kind of resource this is. For schema fields this is always `admin#directory#schema#fieldspec`."
                        },
                        "fieldId": {
                          "type": "string",
                          "description": "The unique identifier of the field (Read-only)"
                        },
                        "indexed": {
                          "type": "boolean",
                          "default": "true",
                          "description": "Boolean specifying whether the field is indexed or not. Default: `true`."
                        },
                        "fieldName": {
                          "type": "string",
                          "annotations": {
                            "required": [
                              "directory.schemas.insert",
                              "directory.schemas.update"
                            ]
                          },
                          "description": "The name of the field."
                        },
                        "fieldType": {
                          "type": "string",
                          "annotations": {
                            "required": [
                              "directory.schemas.insert",
                              "directory.schemas.update"
                            ]
                          },
                          "description": "The type of the field."
                        },
                        "displayName": {
                          "type": "string",
                          "annotations": {
                            "required": [
                              "directory.schemas.insert",
                              "directory.schemas.update"
                            ]
                          },
                          "description": "Display Name of the field."
                        },
                        "multiValued": {
                          "type": "boolean",
                          "description": "A boolean specifying whether this is a multi-valued field or not. Default: `false`."
                        },
                        "readAccessType": {
                          "type": "string",
                          "default": "ALL_DOMAIN_USERS",
                          "description": "Specifies who can view values of this field. See [Retrieve users as a non-administrator](/admin-sdk/directory/v1/guides/manage-users#retrieve_users_non_admin) for more information. Note: It may take up to 24 hours for changes to this field to be reflected."
                        },
                        "numericIndexingSpec": {
                          "type": "object",
                          "properties": {
                            "maxValue": {
                              "type": "number",
                              "format": "double",
                              "description": "Maximum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant."
                            },
                            "minValue": {
                              "type": "number",
                              "format": "double",
                              "description": "Minimum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant."
                            }
                          },
                          "description": "Indexing spec for a numeric field. By default, only exact match queries will be supported for numeric fields. Setting the `numericIndexingSpec` allows range queries to be supported."
                        }
                      },
                      "description": "You can use schemas to add custom fields to user profiles. You can use these fields to store information such as the projects your users work on, their physical locations, their hire dates, or whatever else fits your business needs. For more information, see [Custom User Fields](/admin-sdk/directory/v1/guides/manage-schemas)."
                    },
                    "annotations": {
                      "required": [
                        "directory.schemas.insert",
                        "directory.schemas.update"
                      ]
                    },
                    "description": "A list of fields in the schema."
                  },
                  "schemaId": {
                    "type": "string",
                    "description": "The unique identifier of the schema (Read-only)"
                  },
                  "schemaName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.schemas.insert"
                      ]
                    },
                    "description": "The schema's name."
                  },
                  "displayName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.schemas.insert"
                      ]
                    },
                    "description": "Display name for the schema."
                  }
                },
                "description": "The type of API resource. For Schema resources, this is always `admin#directory#schema`."
              },
              "description": "List of UserSchema objects."
            }
          },
          "description": "JSON response template for List Schema operation in Directory API."
        }
      ]
  directory.schemas.patch:
    description: |-
      Patch Schema via Apiary Patch Orchestration
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/schemas/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Schema",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "The ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#schema",
              "description": "Kind of resource this is."
            },
            "fields": {
              "type": "array",
              "items": {
                "id": "SchemaFieldSpec",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "The ETag of the field."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#schema#fieldspec",
                    "description": "The kind of resource this is. For schema fields this is always `admin#directory#schema#fieldspec`."
                  },
                  "fieldId": {
                    "type": "string",
                    "description": "The unique identifier of the field (Read-only)"
                  },
                  "indexed": {
                    "type": "boolean",
                    "default": "true",
                    "description": "Boolean specifying whether the field is indexed or not. Default: `true`."
                  },
                  "fieldName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.schemas.insert",
                        "directory.schemas.update"
                      ]
                    },
                    "description": "The name of the field."
                  },
                  "fieldType": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.schemas.insert",
                        "directory.schemas.update"
                      ]
                    },
                    "description": "The type of the field."
                  },
                  "displayName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.schemas.insert",
                        "directory.schemas.update"
                      ]
                    },
                    "description": "Display Name of the field."
                  },
                  "multiValued": {
                    "type": "boolean",
                    "description": "A boolean specifying whether this is a multi-valued field or not. Default: `false`."
                  },
                  "readAccessType": {
                    "type": "string",
                    "default": "ALL_DOMAIN_USERS",
                    "description": "Specifies who can view values of this field. See [Retrieve users as a non-administrator](/admin-sdk/directory/v1/guides/manage-users#retrieve_users_non_admin) for more information. Note: It may take up to 24 hours for changes to this field to be reflected."
                  },
                  "numericIndexingSpec": {
                    "type": "object",
                    "properties": {
                      "maxValue": {
                        "type": "number",
                        "format": "double",
                        "description": "Maximum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant."
                      },
                      "minValue": {
                        "type": "number",
                        "format": "double",
                        "description": "Minimum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant."
                      }
                    },
                    "description": "Indexing spec for a numeric field. By default, only exact match queries will be supported for numeric fields. Setting the `numericIndexingSpec` allows range queries to be supported."
                  }
                },
                "description": "You can use schemas to add custom fields to user profiles. You can use these fields to store information such as the projects your users work on, their physical locations, their hire dates, or whatever else fits your business needs. For more information, see [Custom User Fields](/admin-sdk/directory/v1/guides/manage-schemas)."
              },
              "annotations": {
                "required": [
                  "directory.schemas.insert",
                  "directory.schemas.update"
                ]
              },
              "description": "A list of fields in the schema."
            },
            "schemaId": {
              "type": "string",
              "description": "The unique identifier of the schema (Read-only)"
            },
            "schemaName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.schemas.insert"
                ]
              },
              "description": "The schema's name."
            },
            "displayName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.schemas.insert"
                ]
              },
              "description": "Display name for the schema."
            }
          },
          "description": "The type of API resource. For Schema resources, this is always `admin#directory#schema`."
        }
      ]
  directory.schemas.update:
    description: |-
      Update schema
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/schemas/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Schema",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "The ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#schema",
              "description": "Kind of resource this is."
            },
            "fields": {
              "type": "array",
              "items": {
                "id": "SchemaFieldSpec",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "The ETag of the field."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#schema#fieldspec",
                    "description": "The kind of resource this is. For schema fields this is always `admin#directory#schema#fieldspec`."
                  },
                  "fieldId": {
                    "type": "string",
                    "description": "The unique identifier of the field (Read-only)"
                  },
                  "indexed": {
                    "type": "boolean",
                    "default": "true",
                    "description": "Boolean specifying whether the field is indexed or not. Default: `true`."
                  },
                  "fieldName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.schemas.insert",
                        "directory.schemas.update"
                      ]
                    },
                    "description": "The name of the field."
                  },
                  "fieldType": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.schemas.insert",
                        "directory.schemas.update"
                      ]
                    },
                    "description": "The type of the field."
                  },
                  "displayName": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.schemas.insert",
                        "directory.schemas.update"
                      ]
                    },
                    "description": "Display Name of the field."
                  },
                  "multiValued": {
                    "type": "boolean",
                    "description": "A boolean specifying whether this is a multi-valued field or not. Default: `false`."
                  },
                  "readAccessType": {
                    "type": "string",
                    "default": "ALL_DOMAIN_USERS",
                    "description": "Specifies who can view values of this field. See [Retrieve users as a non-administrator](/admin-sdk/directory/v1/guides/manage-users#retrieve_users_non_admin) for more information. Note: It may take up to 24 hours for changes to this field to be reflected."
                  },
                  "numericIndexingSpec": {
                    "type": "object",
                    "properties": {
                      "maxValue": {
                        "type": "number",
                        "format": "double",
                        "description": "Maximum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant."
                      },
                      "minValue": {
                        "type": "number",
                        "format": "double",
                        "description": "Minimum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant."
                      }
                    },
                    "description": "Indexing spec for a numeric field. By default, only exact match queries will be supported for numeric fields. Setting the `numericIndexingSpec` allows range queries to be supported."
                  }
                },
                "description": "You can use schemas to add custom fields to user profiles. You can use these fields to store information such as the projects your users work on, their physical locations, their hire dates, or whatever else fits your business needs. For more information, see [Custom User Fields](/admin-sdk/directory/v1/guides/manage-schemas)."
              },
              "annotations": {
                "required": [
                  "directory.schemas.insert",
                  "directory.schemas.update"
                ]
              },
              "description": "A list of fields in the schema."
            },
            "schemaId": {
              "type": "string",
              "description": "The unique identifier of the schema (Read-only)"
            },
            "schemaName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.schemas.insert"
                ]
              },
              "description": "The schema's name."
            },
            "displayName": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.schemas.insert"
                ]
              },
              "description": "Display name for the schema."
            }
          },
          "description": "The type of API resource. For Schema resources, this is always `admin#directory#schema`."
        }
      ]
  directory.tokens.delete:
    description: |-
      Delete all access tokens issued by a user for an application.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/tokens/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.tokens.get:
    description: |-
      Get information about an access token issued by a user.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/tokens/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Token",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#token",
              "description": "The type of the API resource. This is always `admin#directory#token`."
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of authorization scopes the application is granted."
            },
            "userKey": {
              "type": "string",
              "description": "The unique ID of the user that issued the token."
            },
            "clientId": {
              "type": "string",
              "description": "The Client ID of the application the token is issued to."
            },
            "anonymous": {
              "type": "boolean",
              "description": "Whether the application is registered with Google. The value is `true` if the application has an anonymous Client ID."
            },
            "nativeApp": {
              "type": "boolean",
              "description": "Whether the token is issued to an installed application. The value is `true` if the application is installed to a desktop or mobile device."
            },
            "displayText": {
              "type": "string",
              "description": "The displayable name of the application the token is issued to."
            }
          },
          "description": "JSON template for token resource in Directory API."
        }
      ]
  directory.tokens.list:
    description: |-
      Returns the set of tokens specified user has issued to 3rd party applications.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/tokens/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Tokens",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#tokenList",
              "description": "The type of the API resource. This is always `admin#directory#tokenList`."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "Token",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#token",
                    "description": "The type of the API resource. This is always `admin#directory#token`."
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of authorization scopes the application is granted."
                  },
                  "userKey": {
                    "type": "string",
                    "description": "The unique ID of the user that issued the token."
                  },
                  "clientId": {
                    "type": "string",
                    "description": "The Client ID of the application the token is issued to."
                  },
                  "anonymous": {
                    "type": "boolean",
                    "description": "Whether the application is registered with Google. The value is `true` if the application has an anonymous Client ID."
                  },
                  "nativeApp": {
                    "type": "boolean",
                    "description": "Whether the token is issued to an installed application. The value is `true` if the application is installed to a desktop or mobile device."
                  },
                  "displayText": {
                    "type": "string",
                    "description": "The displayable name of the application the token is issued to."
                  }
                },
                "description": "JSON template for token resource in Directory API."
              },
              "description": "A list of Token resources."
            }
          },
          "description": "JSON response template for List tokens operation in Directory API."
        }
      ]
  directory.twoStepVerification.turnOff:
    description: |-
      Turn off 2-Step Verification for user.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/twoStepVerification/turnOff
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.users.aliases.delete:
    description: |-
      Removes an alias.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users.aliases/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.users.aliases.insert:
    description: |-
      Adds an alias.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users.aliases/insert
    example:
      inputs: [
        {
          "id": "Alias",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "etag": {
              "type": "string"
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#alias"
            },
            "alias": {
              "type": "string"
            },
            "primaryEmail": {
              "type": "string"
            }
          },
          "description": "JSON template for Alias object in Directory API."
        }
      ]
      outputs: [
        {}
      ]
  directory.users.aliases.list:
    description: |-
      Lists all aliases for a user.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users.aliases/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Aliases",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string"
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#aliases"
            },
            "aliases": {
              "type": "array",
              "items": {
                "type": "any"
              }
            }
          },
          "description": "JSON response template to list aliases in Directory API."
        }
      ]
  directory.users.aliases.watch:
    description: |-
      Watch for changes in users list.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users.aliases/watch
    example:
      inputs: [
        {
          "id": "Channel",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
              "type": "string",
              "default": "api#channel",
              "description": "Identifies this as a notification channel used to watch for changes to a resource, which is `api#channel`."
            },
            "type": {
              "type": "string",
              "description": "The type of delivery mechanism used for this channel."
            },
            "token": {
              "type": "string",
              "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "params": {
              "type": "object",
              "description": "Additional parameters controlling delivery channel behavior. Optional.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "address": {
              "type": "string",
              "description": "The address where notifications are delivered for this channel."
            },
            "payload": {
              "type": "boolean",
              "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "expiration": {
              "type": "string",
              "format": "int64",
              "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional."
            },
            "resourceId": {
              "type": "string",
              "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
              "type": "string",
              "description": "A version-specific identifier for the watched resource."
            }
          },
          "description": "An notification channel used to watch for resource changes."
        }
      ]
      outputs: [
        {}
      ]
  directory.users.delete:
    description: |-
      Deletes a user.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.users.get:
    description: |-
      Retrieves a user.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "User",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID for the user. A user `id` can be used as a user request URI's `userKey`."
            },
            "ims": {
              "type": "any",
              "description": "The user's Instant Messenger (IM) accounts. A user account can have multiple ims properties. But, only one of these ims properties can be the primary IM contact. The maximum allowed data size for this field is 2Kb."
            },
            "etag": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#user",
              "readOnly": true,
              "description": "Output only. The type of the API resource. For Users resources, the value is `admin#directory#user`."
            },
            "name": {
              "id": "UserName",
              "type": "object",
              "properties": {
                "fullName": {
                  "type": "string",
                  "description": "The user's full name formed by concatenating the first and last name values."
                },
                "givenName": {
                  "type": "string",
                  "annotations": {
                    "required": [
                      "directory.users.insert"
                    ]
                  },
                  "description": "The user's first name. Required when creating a user account."
                },
                "familyName": {
                  "type": "string",
                  "annotations": {
                    "required": [
                      "directory.users.insert"
                    ]
                  },
                  "description": "The user's last name. Required when creating a user account."
                }
              },
              "annotations": {
                "required": [
                  "directory.users.insert"
                ]
              },
              "description": "Holds the given and family names of the user, and the read-only `fullName` value. The maximum number of characters in the `givenName` and in the `familyName` values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). For more information about character usage rules, see the [administration help center](https://support.google.com/a/answer/9193374). Maximum allowed data size for this field is 1Kb."
            },
            "notes": {
              "type": "any",
              "description": "Notes for the user."
            },
            "emails": {
              "type": "any",
              "description": "A list of the user's email addresses. The maximum allowed data size for this field is 10Kb."
            },
            "gender": {
              "type": "any",
              "description": "The user's gender. The maximum allowed data size for this field is 1Kb."
            },
            "phones": {
              "type": "any",
              "description": "A list of the user's phone numbers. The maximum allowed data size for this field is 1Kb."
            },
            "aliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Output only. A list of the user's alias email addresses."
            },
            "isAdmin": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Indicates a user with super admininistrator privileges. The `isAdmin` property can only be edited in the [Make a user an administrator](/admin-sdk/directory/v1/guides/manage-users.html#make_admin) operation ( [makeAdmin](/admin-sdk/directory/v1/reference/users/makeAdmin.html) method). If edited in the user [insert](/admin-sdk/directory/v1/reference/users/insert.html) or [update](/admin-sdk/directory/v1/reference/users/update.html) methods, the edit is ignored by the API service."
            },
            "archived": {
              "type": "boolean",
              "description": "Indicates if user is archived."
            },
            "keywords": {
              "type": "any",
              "description": "The user's keywords. The maximum allowed data size for this field is 1Kb."
            },
            "password": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.users.insert"
                ]
              },
              "description": "User's password"
            },
            "websites": {
              "type": "any",
              "description": "The user's websites. The maximum allowed data size for this field is 2Kb."
            },
            "addresses": {
              "type": "any",
              "description": "A list of the user's addresses. The maximum allowed data size for this field is 10Kb."
            },
            "languages": {
              "type": "any",
              "description": "The user's languages. The maximum allowed data size for this field is 1Kb."
            },
            "locations": {
              "type": "any",
              "description": "The user's locations. The maximum allowed data size for this field is 10Kb."
            },
            "relations": {
              "type": "any",
              "description": "A list of the user's relationships to other users. The maximum allowed data size for this field is 2Kb."
            },
            "suspended": {
              "type": "boolean",
              "description": "Indicates if user is suspended."
            },
            "customerId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The customer ID to [retrieve all account users](/admin-sdk/directory/v1/guides/manage-users.html#get_all_users). You can use the alias `my_customer` to represent your account's `customerId`. As a reseller administrator, you can use the resold customer account's `customerId`. To get a `customerId`, use the account's primary domain in the `domain` parameter of a [users.list](/admin-sdk/directory/v1/reference/users/list) request."
            },
            "externalIds": {
              "type": "any",
              "description": "A list of external IDs for the user, such as an employee or network ID. The maximum allowed data size for this field is 2Kb."
            },
            "orgUnitPath": {
              "type": "string",
              "description": "The full path of the parent organization associated with the user. If the parent organization is the top-level, it is represented as a forward slash (`/`)."
            },
            "creationTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "User's G Suite account creation time. (Read-only)"
            },
            "deletionTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "hashFunction": {
              "type": "string",
              "description": "Stores the hash format of the password property. We recommend sending the `password` property value as a base 16 bit hexadecimal-encoded hash value. Set the `hashFunction` values as either the [SHA-1](https://wikipedia.org/wiki/SHA-1), [MD5](https://wikipedia.org/wiki/MD5), or [crypt](https://en.wikipedia.org/wiki/Crypt_\\(C\\)) hash format."
            },
            "primaryEmail": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.users.insert"
                ]
              },
              "description": "The user's primary email address. This property is required in a request to create a user account. The `primaryEmail` must be unique and cannot be an alias of another user."
            },
            "agreedToTerms": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. This property is `true` if the user has completed an initial login and accepted the Terms of Service agreement."
            },
            "customSchemas": {
              "type": "object",
              "description": "Custom fields of the user.",
              "additionalProperties": {
                "id": "UserCustomProperties",
                "type": "object",
                "description": "JSON template for a set of custom properties (i.e. all fields in a particular schema)",
                "additionalProperties": {
                  "type": "any"
                }
              }
            },
            "ipWhitelisted": {
              "type": "boolean",
              "description": "If `true`, the user's IP address is [whitelisted](https://support.google.com/a/answer/60752)."
            },
            "lastLoginTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "User's last login time. (Read-only)"
            },
            "organizations": {
              "type": "any",
              "description": "A list of organizations the user belongs to. The maximum allowed data size for this field is 10Kb."
            },
            "posixAccounts": {
              "type": "any",
              "description": "A list of [POSIX](https://www.opengroup.org/austin/papers/posix_faq.html) account information for the user."
            },
            "recoveryEmail": {
              "type": "string",
              "description": "Recovery email of the user."
            },
            "recoveryPhone": {
              "type": "string",
              "description": "Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: *+16506661212*."
            },
            "sshPublicKeys": {
              "type": "any",
              "description": "A list of SSH public keys."
            },
            "isMailboxSetup": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Indicates if the user's Google mailbox is created. This property is only applicable if the user has been assigned a Gmail license."
            },
            "isEnforcedIn2Sv": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Is 2-step verification enforced (Read-only)"
            },
            "isEnrolledIn2Sv": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Is enrolled in 2-step verification (Read-only)"
            },
            "isDelegatedAdmin": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Indicates if the user is a delegated administrator. Delegated administrators are supported by the API but cannot create or undelete users, or make users administrators. These requests are ignored by the API service. Roles and privileges for administrators are assigned using the [Admin console](https://support.google.com/a/answer/33325)."
            },
            "suspensionReason": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Has the reason a user account is suspended either by the administrator or by Google at the time of suspension. The property is returned only if the `suspended` property is `true`."
            },
            "thumbnailPhotoUrl": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Photo Url of the user (Read-only)"
            },
            "nonEditableAliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Output only. List of the user's non-editable alias email addresses. These are typically outside the account's primary domain or sub-domain."
            },
            "thumbnailPhotoEtag": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. ETag of the user's photo (Read-only)"
            },
            "changePasswordAtNextLogin": {
              "type": "boolean",
              "description": "Indicates if the user is forced to change their password at next login. This setting doesn't apply when [the user signs in via a third-party identity provider](https://support.google.com/a/answer/60224)."
            },
            "includeInGlobalAddressList": {
              "type": "boolean",
              "description": "Indicates if the user's profile is visible in the Google Workspace global address list when the contact sharing feature is enabled for the domain. For more information about excluding user profiles, see the [administration help center](https://support.google.com/a/answer/1285988)."
            }
          },
          "description": "The Directory API allows you to create and manage your account's users, user aliases, and user Gmail chat profile photos. For more information about common tasks, see the [User Accounts Developer's Guide](/admin-sdk/directory/v1/guides/manage-users.html) and the [User Aliases Developer's Guide](/admin-sdk/directory/v1/guides/manage-user-aliases.html)."
        }
      ]
  directory.users.insert:
    description: |-
      Creates a user.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "User",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID for the user. A user `id` can be used as a user request URI's `userKey`."
            },
            "ims": {
              "type": "any",
              "description": "The user's Instant Messenger (IM) accounts. A user account can have multiple ims properties. But, only one of these ims properties can be the primary IM contact. The maximum allowed data size for this field is 2Kb."
            },
            "etag": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#user",
              "readOnly": true,
              "description": "Output only. The type of the API resource. For Users resources, the value is `admin#directory#user`."
            },
            "name": {
              "id": "UserName",
              "type": "object",
              "properties": {
                "fullName": {
                  "type": "string",
                  "description": "The user's full name formed by concatenating the first and last name values."
                },
                "givenName": {
                  "type": "string",
                  "annotations": {
                    "required": [
                      "directory.users.insert"
                    ]
                  },
                  "description": "The user's first name. Required when creating a user account."
                },
                "familyName": {
                  "type": "string",
                  "annotations": {
                    "required": [
                      "directory.users.insert"
                    ]
                  },
                  "description": "The user's last name. Required when creating a user account."
                }
              },
              "annotations": {
                "required": [
                  "directory.users.insert"
                ]
              },
              "description": "Holds the given and family names of the user, and the read-only `fullName` value. The maximum number of characters in the `givenName` and in the `familyName` values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). For more information about character usage rules, see the [administration help center](https://support.google.com/a/answer/9193374). Maximum allowed data size for this field is 1Kb."
            },
            "notes": {
              "type": "any",
              "description": "Notes for the user."
            },
            "emails": {
              "type": "any",
              "description": "A list of the user's email addresses. The maximum allowed data size for this field is 10Kb."
            },
            "gender": {
              "type": "any",
              "description": "The user's gender. The maximum allowed data size for this field is 1Kb."
            },
            "phones": {
              "type": "any",
              "description": "A list of the user's phone numbers. The maximum allowed data size for this field is 1Kb."
            },
            "aliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Output only. A list of the user's alias email addresses."
            },
            "isAdmin": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Indicates a user with super admininistrator privileges. The `isAdmin` property can only be edited in the [Make a user an administrator](/admin-sdk/directory/v1/guides/manage-users.html#make_admin) operation ( [makeAdmin](/admin-sdk/directory/v1/reference/users/makeAdmin.html) method). If edited in the user [insert](/admin-sdk/directory/v1/reference/users/insert.html) or [update](/admin-sdk/directory/v1/reference/users/update.html) methods, the edit is ignored by the API service."
            },
            "archived": {
              "type": "boolean",
              "description": "Indicates if user is archived."
            },
            "keywords": {
              "type": "any",
              "description": "The user's keywords. The maximum allowed data size for this field is 1Kb."
            },
            "password": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.users.insert"
                ]
              },
              "description": "User's password"
            },
            "websites": {
              "type": "any",
              "description": "The user's websites. The maximum allowed data size for this field is 2Kb."
            },
            "addresses": {
              "type": "any",
              "description": "A list of the user's addresses. The maximum allowed data size for this field is 10Kb."
            },
            "languages": {
              "type": "any",
              "description": "The user's languages. The maximum allowed data size for this field is 1Kb."
            },
            "locations": {
              "type": "any",
              "description": "The user's locations. The maximum allowed data size for this field is 10Kb."
            },
            "relations": {
              "type": "any",
              "description": "A list of the user's relationships to other users. The maximum allowed data size for this field is 2Kb."
            },
            "suspended": {
              "type": "boolean",
              "description": "Indicates if user is suspended."
            },
            "customerId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The customer ID to [retrieve all account users](/admin-sdk/directory/v1/guides/manage-users.html#get_all_users). You can use the alias `my_customer` to represent your account's `customerId`. As a reseller administrator, you can use the resold customer account's `customerId`. To get a `customerId`, use the account's primary domain in the `domain` parameter of a [users.list](/admin-sdk/directory/v1/reference/users/list) request."
            },
            "externalIds": {
              "type": "any",
              "description": "A list of external IDs for the user, such as an employee or network ID. The maximum allowed data size for this field is 2Kb."
            },
            "orgUnitPath": {
              "type": "string",
              "description": "The full path of the parent organization associated with the user. If the parent organization is the top-level, it is represented as a forward slash (`/`)."
            },
            "creationTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "User's G Suite account creation time. (Read-only)"
            },
            "deletionTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "hashFunction": {
              "type": "string",
              "description": "Stores the hash format of the password property. We recommend sending the `password` property value as a base 16 bit hexadecimal-encoded hash value. Set the `hashFunction` values as either the [SHA-1](https://wikipedia.org/wiki/SHA-1), [MD5](https://wikipedia.org/wiki/MD5), or [crypt](https://en.wikipedia.org/wiki/Crypt_\\(C\\)) hash format."
            },
            "primaryEmail": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.users.insert"
                ]
              },
              "description": "The user's primary email address. This property is required in a request to create a user account. The `primaryEmail` must be unique and cannot be an alias of another user."
            },
            "agreedToTerms": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. This property is `true` if the user has completed an initial login and accepted the Terms of Service agreement."
            },
            "customSchemas": {
              "type": "object",
              "description": "Custom fields of the user.",
              "additionalProperties": {
                "id": "UserCustomProperties",
                "type": "object",
                "description": "JSON template for a set of custom properties (i.e. all fields in a particular schema)",
                "additionalProperties": {
                  "type": "any"
                }
              }
            },
            "ipWhitelisted": {
              "type": "boolean",
              "description": "If `true`, the user's IP address is [whitelisted](https://support.google.com/a/answer/60752)."
            },
            "lastLoginTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "User's last login time. (Read-only)"
            },
            "organizations": {
              "type": "any",
              "description": "A list of organizations the user belongs to. The maximum allowed data size for this field is 10Kb."
            },
            "posixAccounts": {
              "type": "any",
              "description": "A list of [POSIX](https://www.opengroup.org/austin/papers/posix_faq.html) account information for the user."
            },
            "recoveryEmail": {
              "type": "string",
              "description": "Recovery email of the user."
            },
            "recoveryPhone": {
              "type": "string",
              "description": "Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: *+16506661212*."
            },
            "sshPublicKeys": {
              "type": "any",
              "description": "A list of SSH public keys."
            },
            "isMailboxSetup": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Indicates if the user's Google mailbox is created. This property is only applicable if the user has been assigned a Gmail license."
            },
            "isEnforcedIn2Sv": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Is 2-step verification enforced (Read-only)"
            },
            "isEnrolledIn2Sv": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Is enrolled in 2-step verification (Read-only)"
            },
            "isDelegatedAdmin": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Indicates if the user is a delegated administrator. Delegated administrators are supported by the API but cannot create or undelete users, or make users administrators. These requests are ignored by the API service. Roles and privileges for administrators are assigned using the [Admin console](https://support.google.com/a/answer/33325)."
            },
            "suspensionReason": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Has the reason a user account is suspended either by the administrator or by Google at the time of suspension. The property is returned only if the `suspended` property is `true`."
            },
            "thumbnailPhotoUrl": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Photo Url of the user (Read-only)"
            },
            "nonEditableAliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Output only. List of the user's non-editable alias email addresses. These are typically outside the account's primary domain or sub-domain."
            },
            "thumbnailPhotoEtag": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. ETag of the user's photo (Read-only)"
            },
            "changePasswordAtNextLogin": {
              "type": "boolean",
              "description": "Indicates if the user is forced to change their password at next login. This setting doesn't apply when [the user signs in via a third-party identity provider](https://support.google.com/a/answer/60224)."
            },
            "includeInGlobalAddressList": {
              "type": "boolean",
              "description": "Indicates if the user's profile is visible in the Google Workspace global address list when the contact sharing feature is enabled for the domain. For more information about excluding user profiles, see the [administration help center](https://support.google.com/a/answer/1285988)."
            }
          },
          "description": "The Directory API allows you to create and manage your account's users, user aliases, and user Gmail chat profile photos. For more information about common tasks, see the [User Accounts Developer's Guide](/admin-sdk/directory/v1/guides/manage-users.html) and the [User Aliases Developer's Guide](/admin-sdk/directory/v1/guides/manage-user-aliases.html)."
        }
      ]
  directory.users.list:
    description: |-
      Retrieves a paginated list of either deleted users or all users in a domain.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Users",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#users",
              "description": "Kind of resource this is."
            },
            "users": {
              "type": "array",
              "items": {
                "id": "User",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique ID for the user. A user `id` can be used as a user request URI's `userKey`."
                  },
                  "ims": {
                    "type": "any",
                    "description": "The user's Instant Messenger (IM) accounts. A user account can have multiple ims properties. But, only one of these ims properties can be the primary IM contact. The maximum allowed data size for this field is 2Kb."
                  },
                  "etag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#user",
                    "readOnly": true,
                    "description": "Output only. The type of the API resource. For Users resources, the value is `admin#directory#user`."
                  },
                  "name": {
                    "id": "UserName",
                    "type": "object",
                    "properties": {
                      "fullName": {
                        "type": "string",
                        "description": "The user's full name formed by concatenating the first and last name values."
                      },
                      "givenName": {
                        "type": "string",
                        "annotations": {
                          "required": [
                            "directory.users.insert"
                          ]
                        },
                        "description": "The user's first name. Required when creating a user account."
                      },
                      "familyName": {
                        "type": "string",
                        "annotations": {
                          "required": [
                            "directory.users.insert"
                          ]
                        },
                        "description": "The user's last name. Required when creating a user account."
                      }
                    },
                    "annotations": {
                      "required": [
                        "directory.users.insert"
                      ]
                    },
                    "description": "Holds the given and family names of the user, and the read-only `fullName` value. The maximum number of characters in the `givenName` and in the `familyName` values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). For more information about character usage rules, see the [administration help center](https://support.google.com/a/answer/9193374). Maximum allowed data size for this field is 1Kb."
                  },
                  "notes": {
                    "type": "any",
                    "description": "Notes for the user."
                  },
                  "emails": {
                    "type": "any",
                    "description": "A list of the user's email addresses. The maximum allowed data size for this field is 10Kb."
                  },
                  "gender": {
                    "type": "any",
                    "description": "The user's gender. The maximum allowed data size for this field is 1Kb."
                  },
                  "phones": {
                    "type": "any",
                    "description": "A list of the user's phone numbers. The maximum allowed data size for this field is 1Kb."
                  },
                  "aliases": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true,
                    "description": "Output only. A list of the user's alias email addresses."
                  },
                  "isAdmin": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Output only. Indicates a user with super admininistrator privileges. The `isAdmin` property can only be edited in the [Make a user an administrator](/admin-sdk/directory/v1/guides/manage-users.html#make_admin) operation ( [makeAdmin](/admin-sdk/directory/v1/reference/users/makeAdmin.html) method). If edited in the user [insert](/admin-sdk/directory/v1/reference/users/insert.html) or [update](/admin-sdk/directory/v1/reference/users/update.html) methods, the edit is ignored by the API service."
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Indicates if user is archived."
                  },
                  "keywords": {
                    "type": "any",
                    "description": "The user's keywords. The maximum allowed data size for this field is 1Kb."
                  },
                  "password": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.users.insert"
                      ]
                    },
                    "description": "User's password"
                  },
                  "websites": {
                    "type": "any",
                    "description": "The user's websites. The maximum allowed data size for this field is 2Kb."
                  },
                  "addresses": {
                    "type": "any",
                    "description": "A list of the user's addresses. The maximum allowed data size for this field is 10Kb."
                  },
                  "languages": {
                    "type": "any",
                    "description": "The user's languages. The maximum allowed data size for this field is 1Kb."
                  },
                  "locations": {
                    "type": "any",
                    "description": "The user's locations. The maximum allowed data size for this field is 10Kb."
                  },
                  "relations": {
                    "type": "any",
                    "description": "A list of the user's relationships to other users. The maximum allowed data size for this field is 2Kb."
                  },
                  "suspended": {
                    "type": "boolean",
                    "description": "Indicates if user is suspended."
                  },
                  "customerId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The customer ID to [retrieve all account users](/admin-sdk/directory/v1/guides/manage-users.html#get_all_users). You can use the alias `my_customer` to represent your account's `customerId`. As a reseller administrator, you can use the resold customer account's `customerId`. To get a `customerId`, use the account's primary domain in the `domain` parameter of a [users.list](/admin-sdk/directory/v1/reference/users/list) request."
                  },
                  "externalIds": {
                    "type": "any",
                    "description": "A list of external IDs for the user, such as an employee or network ID. The maximum allowed data size for this field is 2Kb."
                  },
                  "orgUnitPath": {
                    "type": "string",
                    "description": "The full path of the parent organization associated with the user. If the parent organization is the top-level, it is represented as a forward slash (`/`)."
                  },
                  "creationTime": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "User's G Suite account creation time. (Read-only)"
                  },
                  "deletionTime": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "hashFunction": {
                    "type": "string",
                    "description": "Stores the hash format of the password property. We recommend sending the `password` property value as a base 16 bit hexadecimal-encoded hash value. Set the `hashFunction` values as either the [SHA-1](https://wikipedia.org/wiki/SHA-1), [MD5](https://wikipedia.org/wiki/MD5), or [crypt](https://en.wikipedia.org/wiki/Crypt_\\(C\\)) hash format."
                  },
                  "primaryEmail": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "directory.users.insert"
                      ]
                    },
                    "description": "The user's primary email address. This property is required in a request to create a user account. The `primaryEmail` must be unique and cannot be an alias of another user."
                  },
                  "agreedToTerms": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Output only. This property is `true` if the user has completed an initial login and accepted the Terms of Service agreement."
                  },
                  "customSchemas": {
                    "type": "object",
                    "description": "Custom fields of the user.",
                    "additionalProperties": {
                      "id": "UserCustomProperties",
                      "type": "object",
                      "description": "JSON template for a set of custom properties (i.e. all fields in a particular schema)",
                      "additionalProperties": {
                        "type": "any"
                      }
                    }
                  },
                  "ipWhitelisted": {
                    "type": "boolean",
                    "description": "If `true`, the user's IP address is [whitelisted](https://support.google.com/a/answer/60752)."
                  },
                  "lastLoginTime": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "User's last login time. (Read-only)"
                  },
                  "organizations": {
                    "type": "any",
                    "description": "A list of organizations the user belongs to. The maximum allowed data size for this field is 10Kb."
                  },
                  "posixAccounts": {
                    "type": "any",
                    "description": "A list of [POSIX](https://www.opengroup.org/austin/papers/posix_faq.html) account information for the user."
                  },
                  "recoveryEmail": {
                    "type": "string",
                    "description": "Recovery email of the user."
                  },
                  "recoveryPhone": {
                    "type": "string",
                    "description": "Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: *+16506661212*."
                  },
                  "sshPublicKeys": {
                    "type": "any",
                    "description": "A list of SSH public keys."
                  },
                  "isMailboxSetup": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Output only. Indicates if the user's Google mailbox is created. This property is only applicable if the user has been assigned a Gmail license."
                  },
                  "isEnforcedIn2Sv": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Output only. Is 2-step verification enforced (Read-only)"
                  },
                  "isEnrolledIn2Sv": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Output only. Is enrolled in 2-step verification (Read-only)"
                  },
                  "isDelegatedAdmin": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Output only. Indicates if the user is a delegated administrator. Delegated administrators are supported by the API but cannot create or undelete users, or make users administrators. These requests are ignored by the API service. Roles and privileges for administrators are assigned using the [Admin console](https://support.google.com/a/answer/33325)."
                  },
                  "suspensionReason": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Has the reason a user account is suspended either by the administrator or by Google at the time of suspension. The property is returned only if the `suspended` property is `true`."
                  },
                  "thumbnailPhotoUrl": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Photo Url of the user (Read-only)"
                  },
                  "nonEditableAliases": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true,
                    "description": "Output only. List of the user's non-editable alias email addresses. These are typically outside the account's primary domain or sub-domain."
                  },
                  "thumbnailPhotoEtag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. ETag of the user's photo (Read-only)"
                  },
                  "changePasswordAtNextLogin": {
                    "type": "boolean",
                    "description": "Indicates if the user is forced to change their password at next login. This setting doesn't apply when [the user signs in via a third-party identity provider](https://support.google.com/a/answer/60224)."
                  },
                  "includeInGlobalAddressList": {
                    "type": "boolean",
                    "description": "Indicates if the user's profile is visible in the Google Workspace global address list when the contact sharing feature is enabled for the domain. For more information about excluding user profiles, see the [administration help center](https://support.google.com/a/answer/1285988)."
                  }
                },
                "description": "The Directory API allows you to create and manage your account's users, user aliases, and user Gmail chat profile photos. For more information about common tasks, see the [User Accounts Developer's Guide](/admin-sdk/directory/v1/guides/manage-users.html) and the [User Aliases Developer's Guide](/admin-sdk/directory/v1/guides/manage-user-aliases.html)."
              },
              "description": "List of user objects."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token used to access next page of this result."
            },
            "trigger_event": {
              "type": "string",
              "description": "Event that triggered this response (only used in case of Push Response)"
            }
          }
        }
      ]
  directory.users.makeAdmin:
    description: |-
      Makes a user a super administrator.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/makeAdmin
    example:
      inputs: [
        {
          "id": "UserMakeAdmin",
          "type": "object",
          "properties": {
            "status": {
              "type": "boolean",
              "annotations": {
                "required": [
                  "directory.users.makeAdmin"
                ]
              },
              "description": "Indicates the administrator status of the user."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  directory.users.patch:
    description: |-
      Updates a user using patch semantics. The update method should be used instead, since it also supports patch semantics and has better performance. This method is unable to clear fields that contain repeated objects (`addresses`, `phones`, etc). Use the update method instead.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "User",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID for the user. A user `id` can be used as a user request URI's `userKey`."
            },
            "ims": {
              "type": "any",
              "description": "The user's Instant Messenger (IM) accounts. A user account can have multiple ims properties. But, only one of these ims properties can be the primary IM contact. The maximum allowed data size for this field is 2Kb."
            },
            "etag": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#user",
              "readOnly": true,
              "description": "Output only. The type of the API resource. For Users resources, the value is `admin#directory#user`."
            },
            "name": {
              "id": "UserName",
              "type": "object",
              "properties": {
                "fullName": {
                  "type": "string",
                  "description": "The user's full name formed by concatenating the first and last name values."
                },
                "givenName": {
                  "type": "string",
                  "annotations": {
                    "required": [
                      "directory.users.insert"
                    ]
                  },
                  "description": "The user's first name. Required when creating a user account."
                },
                "familyName": {
                  "type": "string",
                  "annotations": {
                    "required": [
                      "directory.users.insert"
                    ]
                  },
                  "description": "The user's last name. Required when creating a user account."
                }
              },
              "annotations": {
                "required": [
                  "directory.users.insert"
                ]
              },
              "description": "Holds the given and family names of the user, and the read-only `fullName` value. The maximum number of characters in the `givenName` and in the `familyName` values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). For more information about character usage rules, see the [administration help center](https://support.google.com/a/answer/9193374). Maximum allowed data size for this field is 1Kb."
            },
            "notes": {
              "type": "any",
              "description": "Notes for the user."
            },
            "emails": {
              "type": "any",
              "description": "A list of the user's email addresses. The maximum allowed data size for this field is 10Kb."
            },
            "gender": {
              "type": "any",
              "description": "The user's gender. The maximum allowed data size for this field is 1Kb."
            },
            "phones": {
              "type": "any",
              "description": "A list of the user's phone numbers. The maximum allowed data size for this field is 1Kb."
            },
            "aliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Output only. A list of the user's alias email addresses."
            },
            "isAdmin": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Indicates a user with super admininistrator privileges. The `isAdmin` property can only be edited in the [Make a user an administrator](/admin-sdk/directory/v1/guides/manage-users.html#make_admin) operation ( [makeAdmin](/admin-sdk/directory/v1/reference/users/makeAdmin.html) method). If edited in the user [insert](/admin-sdk/directory/v1/reference/users/insert.html) or [update](/admin-sdk/directory/v1/reference/users/update.html) methods, the edit is ignored by the API service."
            },
            "archived": {
              "type": "boolean",
              "description": "Indicates if user is archived."
            },
            "keywords": {
              "type": "any",
              "description": "The user's keywords. The maximum allowed data size for this field is 1Kb."
            },
            "password": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.users.insert"
                ]
              },
              "description": "User's password"
            },
            "websites": {
              "type": "any",
              "description": "The user's websites. The maximum allowed data size for this field is 2Kb."
            },
            "addresses": {
              "type": "any",
              "description": "A list of the user's addresses. The maximum allowed data size for this field is 10Kb."
            },
            "languages": {
              "type": "any",
              "description": "The user's languages. The maximum allowed data size for this field is 1Kb."
            },
            "locations": {
              "type": "any",
              "description": "The user's locations. The maximum allowed data size for this field is 10Kb."
            },
            "relations": {
              "type": "any",
              "description": "A list of the user's relationships to other users. The maximum allowed data size for this field is 2Kb."
            },
            "suspended": {
              "type": "boolean",
              "description": "Indicates if user is suspended."
            },
            "customerId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The customer ID to [retrieve all account users](/admin-sdk/directory/v1/guides/manage-users.html#get_all_users). You can use the alias `my_customer` to represent your account's `customerId`. As a reseller administrator, you can use the resold customer account's `customerId`. To get a `customerId`, use the account's primary domain in the `domain` parameter of a [users.list](/admin-sdk/directory/v1/reference/users/list) request."
            },
            "externalIds": {
              "type": "any",
              "description": "A list of external IDs for the user, such as an employee or network ID. The maximum allowed data size for this field is 2Kb."
            },
            "orgUnitPath": {
              "type": "string",
              "description": "The full path of the parent organization associated with the user. If the parent organization is the top-level, it is represented as a forward slash (`/`)."
            },
            "creationTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "User's G Suite account creation time. (Read-only)"
            },
            "deletionTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "hashFunction": {
              "type": "string",
              "description": "Stores the hash format of the password property. We recommend sending the `password` property value as a base 16 bit hexadecimal-encoded hash value. Set the `hashFunction` values as either the [SHA-1](https://wikipedia.org/wiki/SHA-1), [MD5](https://wikipedia.org/wiki/MD5), or [crypt](https://en.wikipedia.org/wiki/Crypt_\\(C\\)) hash format."
            },
            "primaryEmail": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.users.insert"
                ]
              },
              "description": "The user's primary email address. This property is required in a request to create a user account. The `primaryEmail` must be unique and cannot be an alias of another user."
            },
            "agreedToTerms": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. This property is `true` if the user has completed an initial login and accepted the Terms of Service agreement."
            },
            "customSchemas": {
              "type": "object",
              "description": "Custom fields of the user.",
              "additionalProperties": {
                "id": "UserCustomProperties",
                "type": "object",
                "description": "JSON template for a set of custom properties (i.e. all fields in a particular schema)",
                "additionalProperties": {
                  "type": "any"
                }
              }
            },
            "ipWhitelisted": {
              "type": "boolean",
              "description": "If `true`, the user's IP address is [whitelisted](https://support.google.com/a/answer/60752)."
            },
            "lastLoginTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "User's last login time. (Read-only)"
            },
            "organizations": {
              "type": "any",
              "description": "A list of organizations the user belongs to. The maximum allowed data size for this field is 10Kb."
            },
            "posixAccounts": {
              "type": "any",
              "description": "A list of [POSIX](https://www.opengroup.org/austin/papers/posix_faq.html) account information for the user."
            },
            "recoveryEmail": {
              "type": "string",
              "description": "Recovery email of the user."
            },
            "recoveryPhone": {
              "type": "string",
              "description": "Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: *+16506661212*."
            },
            "sshPublicKeys": {
              "type": "any",
              "description": "A list of SSH public keys."
            },
            "isMailboxSetup": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Indicates if the user's Google mailbox is created. This property is only applicable if the user has been assigned a Gmail license."
            },
            "isEnforcedIn2Sv": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Is 2-step verification enforced (Read-only)"
            },
            "isEnrolledIn2Sv": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Is enrolled in 2-step verification (Read-only)"
            },
            "isDelegatedAdmin": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Indicates if the user is a delegated administrator. Delegated administrators are supported by the API but cannot create or undelete users, or make users administrators. These requests are ignored by the API service. Roles and privileges for administrators are assigned using the [Admin console](https://support.google.com/a/answer/33325)."
            },
            "suspensionReason": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Has the reason a user account is suspended either by the administrator or by Google at the time of suspension. The property is returned only if the `suspended` property is `true`."
            },
            "thumbnailPhotoUrl": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Photo Url of the user (Read-only)"
            },
            "nonEditableAliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Output only. List of the user's non-editable alias email addresses. These are typically outside the account's primary domain or sub-domain."
            },
            "thumbnailPhotoEtag": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. ETag of the user's photo (Read-only)"
            },
            "changePasswordAtNextLogin": {
              "type": "boolean",
              "description": "Indicates if the user is forced to change their password at next login. This setting doesn't apply when [the user signs in via a third-party identity provider](https://support.google.com/a/answer/60224)."
            },
            "includeInGlobalAddressList": {
              "type": "boolean",
              "description": "Indicates if the user's profile is visible in the Google Workspace global address list when the contact sharing feature is enabled for the domain. For more information about excluding user profiles, see the [administration help center](https://support.google.com/a/answer/1285988)."
            }
          },
          "description": "The Directory API allows you to create and manage your account's users, user aliases, and user Gmail chat profile photos. For more information about common tasks, see the [User Accounts Developer's Guide](/admin-sdk/directory/v1/guides/manage-users.html) and the [User Aliases Developer's Guide](/admin-sdk/directory/v1/guides/manage-user-aliases.html)."
        }
      ]
  directory.users.photos.delete:
    description: |-
      Removes the user's photo.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users.photos/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.users.photos.get:
    description: |-
      Retrieves the user's photo.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users.photos/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "UserPhoto",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID the API uses to uniquely identify the user."
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#user#photo",
              "description": "The type of the API resource. For Photo resources, this is `admin#directory#user#photo`."
            },
            "width": {
              "type": "integer",
              "format": "int32",
              "description": "Width of the photo in pixels."
            },
            "height": {
              "type": "integer",
              "format": "int32",
              "description": "Height of the photo in pixels."
            },
            "mimeType": {
              "type": "string",
              "description": "The MIME type of the photo. Allowed values are `JPEG`, `PNG`, `GIF`, `BMP`, `TIFF`, and web-safe base64 encoding."
            },
            "photoData": {
              "type": "string",
              "format": "byte",
              "annotations": {
                "required": [
                  "directory.users.photos.update"
                ]
              },
              "description": "The user photo's upload data in [web-safe Base64](https://en.wikipedia.org/wiki/Base64#URL_applications) format in bytes. This means: * The slash (/) character is replaced with the underscore (_) character. * The plus sign (+) character is replaced with the hyphen (-) character. * The equals sign (=) character is replaced with the asterisk (*). * For padding, the period (.) character is used instead of the RFC-4648 baseURL definition which uses the equals sign (=) for padding. This is done to simplify URL-parsing. * Whatever the size of the photo being uploaded, the API downsizes it to 96x96 pixels."
            },
            "primaryEmail": {
              "type": "string",
              "description": "The user's primary email address."
            }
          }
        }
      ]
  directory.users.photos.patch:
    description: |-
      Adds a photo for the user. This method supports [patch semantics](/admin-sdk/directory/v1/guides/performance#patch).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users.photos/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "UserPhoto",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID the API uses to uniquely identify the user."
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#user#photo",
              "description": "The type of the API resource. For Photo resources, this is `admin#directory#user#photo`."
            },
            "width": {
              "type": "integer",
              "format": "int32",
              "description": "Width of the photo in pixels."
            },
            "height": {
              "type": "integer",
              "format": "int32",
              "description": "Height of the photo in pixels."
            },
            "mimeType": {
              "type": "string",
              "description": "The MIME type of the photo. Allowed values are `JPEG`, `PNG`, `GIF`, `BMP`, `TIFF`, and web-safe base64 encoding."
            },
            "photoData": {
              "type": "string",
              "format": "byte",
              "annotations": {
                "required": [
                  "directory.users.photos.update"
                ]
              },
              "description": "The user photo's upload data in [web-safe Base64](https://en.wikipedia.org/wiki/Base64#URL_applications) format in bytes. This means: * The slash (/) character is replaced with the underscore (_) character. * The plus sign (+) character is replaced with the hyphen (-) character. * The equals sign (=) character is replaced with the asterisk (*). * For padding, the period (.) character is used instead of the RFC-4648 baseURL definition which uses the equals sign (=) for padding. This is done to simplify URL-parsing. * Whatever the size of the photo being uploaded, the API downsizes it to 96x96 pixels."
            },
            "primaryEmail": {
              "type": "string",
              "description": "The user's primary email address."
            }
          }
        }
      ]
  directory.users.photos.update:
    description: |-
      Adds a photo for the user.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users.photos/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "UserPhoto",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID the API uses to uniquely identify the user."
            },
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#user#photo",
              "description": "The type of the API resource. For Photo resources, this is `admin#directory#user#photo`."
            },
            "width": {
              "type": "integer",
              "format": "int32",
              "description": "Width of the photo in pixels."
            },
            "height": {
              "type": "integer",
              "format": "int32",
              "description": "Height of the photo in pixels."
            },
            "mimeType": {
              "type": "string",
              "description": "The MIME type of the photo. Allowed values are `JPEG`, `PNG`, `GIF`, `BMP`, `TIFF`, and web-safe base64 encoding."
            },
            "photoData": {
              "type": "string",
              "format": "byte",
              "annotations": {
                "required": [
                  "directory.users.photos.update"
                ]
              },
              "description": "The user photo's upload data in [web-safe Base64](https://en.wikipedia.org/wiki/Base64#URL_applications) format in bytes. This means: * The slash (/) character is replaced with the underscore (_) character. * The plus sign (+) character is replaced with the hyphen (-) character. * The equals sign (=) character is replaced with the asterisk (*). * For padding, the period (.) character is used instead of the RFC-4648 baseURL definition which uses the equals sign (=) for padding. This is done to simplify URL-parsing. * Whatever the size of the photo being uploaded, the API downsizes it to 96x96 pixels."
            },
            "primaryEmail": {
              "type": "string",
              "description": "The user's primary email address."
            }
          }
        }
      ]
  directory.users.signOut:
    description: |-
      Sign a user out of all web and device sessions and reset their sign-in cookies. User will have to sign in by authenticating again.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/signOut
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.users.undelete:
    description: |-
      Undeletes a deleted user.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/undelete
    example:
      inputs: [
        {
          "id": "UserUndelete",
          "type": "object",
          "properties": {
            "orgUnitPath": {
              "type": "string",
              "description": "OrgUnit of User"
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  directory.users.update:
    description: |-
      Updates a user. This method supports patch semantics, meaning you only need to include the fields you wish to update. Fields that are not present in the request will be preserved, and fields set to `null` will be cleared.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "User",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID for the user. A user `id` can be used as a user request URI's `userKey`."
            },
            "ims": {
              "type": "any",
              "description": "The user's Instant Messenger (IM) accounts. A user account can have multiple ims properties. But, only one of these ims properties can be the primary IM contact. The maximum allowed data size for this field is 2Kb."
            },
            "etag": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#user",
              "readOnly": true,
              "description": "Output only. The type of the API resource. For Users resources, the value is `admin#directory#user`."
            },
            "name": {
              "id": "UserName",
              "type": "object",
              "properties": {
                "fullName": {
                  "type": "string",
                  "description": "The user's full name formed by concatenating the first and last name values."
                },
                "givenName": {
                  "type": "string",
                  "annotations": {
                    "required": [
                      "directory.users.insert"
                    ]
                  },
                  "description": "The user's first name. Required when creating a user account."
                },
                "familyName": {
                  "type": "string",
                  "annotations": {
                    "required": [
                      "directory.users.insert"
                    ]
                  },
                  "description": "The user's last name. Required when creating a user account."
                }
              },
              "annotations": {
                "required": [
                  "directory.users.insert"
                ]
              },
              "description": "Holds the given and family names of the user, and the read-only `fullName` value. The maximum number of characters in the `givenName` and in the `familyName` values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). For more information about character usage rules, see the [administration help center](https://support.google.com/a/answer/9193374). Maximum allowed data size for this field is 1Kb."
            },
            "notes": {
              "type": "any",
              "description": "Notes for the user."
            },
            "emails": {
              "type": "any",
              "description": "A list of the user's email addresses. The maximum allowed data size for this field is 10Kb."
            },
            "gender": {
              "type": "any",
              "description": "The user's gender. The maximum allowed data size for this field is 1Kb."
            },
            "phones": {
              "type": "any",
              "description": "A list of the user's phone numbers. The maximum allowed data size for this field is 1Kb."
            },
            "aliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Output only. A list of the user's alias email addresses."
            },
            "isAdmin": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Indicates a user with super admininistrator privileges. The `isAdmin` property can only be edited in the [Make a user an administrator](/admin-sdk/directory/v1/guides/manage-users.html#make_admin) operation ( [makeAdmin](/admin-sdk/directory/v1/reference/users/makeAdmin.html) method). If edited in the user [insert](/admin-sdk/directory/v1/reference/users/insert.html) or [update](/admin-sdk/directory/v1/reference/users/update.html) methods, the edit is ignored by the API service."
            },
            "archived": {
              "type": "boolean",
              "description": "Indicates if user is archived."
            },
            "keywords": {
              "type": "any",
              "description": "The user's keywords. The maximum allowed data size for this field is 1Kb."
            },
            "password": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.users.insert"
                ]
              },
              "description": "User's password"
            },
            "websites": {
              "type": "any",
              "description": "The user's websites. The maximum allowed data size for this field is 2Kb."
            },
            "addresses": {
              "type": "any",
              "description": "A list of the user's addresses. The maximum allowed data size for this field is 10Kb."
            },
            "languages": {
              "type": "any",
              "description": "The user's languages. The maximum allowed data size for this field is 1Kb."
            },
            "locations": {
              "type": "any",
              "description": "The user's locations. The maximum allowed data size for this field is 10Kb."
            },
            "relations": {
              "type": "any",
              "description": "A list of the user's relationships to other users. The maximum allowed data size for this field is 2Kb."
            },
            "suspended": {
              "type": "boolean",
              "description": "Indicates if user is suspended."
            },
            "customerId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The customer ID to [retrieve all account users](/admin-sdk/directory/v1/guides/manage-users.html#get_all_users). You can use the alias `my_customer` to represent your account's `customerId`. As a reseller administrator, you can use the resold customer account's `customerId`. To get a `customerId`, use the account's primary domain in the `domain` parameter of a [users.list](/admin-sdk/directory/v1/reference/users/list) request."
            },
            "externalIds": {
              "type": "any",
              "description": "A list of external IDs for the user, such as an employee or network ID. The maximum allowed data size for this field is 2Kb."
            },
            "orgUnitPath": {
              "type": "string",
              "description": "The full path of the parent organization associated with the user. If the parent organization is the top-level, it is represented as a forward slash (`/`)."
            },
            "creationTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "User's G Suite account creation time. (Read-only)"
            },
            "deletionTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "hashFunction": {
              "type": "string",
              "description": "Stores the hash format of the password property. We recommend sending the `password` property value as a base 16 bit hexadecimal-encoded hash value. Set the `hashFunction` values as either the [SHA-1](https://wikipedia.org/wiki/SHA-1), [MD5](https://wikipedia.org/wiki/MD5), or [crypt](https://en.wikipedia.org/wiki/Crypt_\\(C\\)) hash format."
            },
            "primaryEmail": {
              "type": "string",
              "annotations": {
                "required": [
                  "directory.users.insert"
                ]
              },
              "description": "The user's primary email address. This property is required in a request to create a user account. The `primaryEmail` must be unique and cannot be an alias of another user."
            },
            "agreedToTerms": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. This property is `true` if the user has completed an initial login and accepted the Terms of Service agreement."
            },
            "customSchemas": {
              "type": "object",
              "description": "Custom fields of the user.",
              "additionalProperties": {
                "id": "UserCustomProperties",
                "type": "object",
                "description": "JSON template for a set of custom properties (i.e. all fields in a particular schema)",
                "additionalProperties": {
                  "type": "any"
                }
              }
            },
            "ipWhitelisted": {
              "type": "boolean",
              "description": "If `true`, the user's IP address is [whitelisted](https://support.google.com/a/answer/60752)."
            },
            "lastLoginTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "User's last login time. (Read-only)"
            },
            "organizations": {
              "type": "any",
              "description": "A list of organizations the user belongs to. The maximum allowed data size for this field is 10Kb."
            },
            "posixAccounts": {
              "type": "any",
              "description": "A list of [POSIX](https://www.opengroup.org/austin/papers/posix_faq.html) account information for the user."
            },
            "recoveryEmail": {
              "type": "string",
              "description": "Recovery email of the user."
            },
            "recoveryPhone": {
              "type": "string",
              "description": "Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: *+16506661212*."
            },
            "sshPublicKeys": {
              "type": "any",
              "description": "A list of SSH public keys."
            },
            "isMailboxSetup": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Indicates if the user's Google mailbox is created. This property is only applicable if the user has been assigned a Gmail license."
            },
            "isEnforcedIn2Sv": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Is 2-step verification enforced (Read-only)"
            },
            "isEnrolledIn2Sv": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Is enrolled in 2-step verification (Read-only)"
            },
            "isDelegatedAdmin": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Indicates if the user is a delegated administrator. Delegated administrators are supported by the API but cannot create or undelete users, or make users administrators. These requests are ignored by the API service. Roles and privileges for administrators are assigned using the [Admin console](https://support.google.com/a/answer/33325)."
            },
            "suspensionReason": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Has the reason a user account is suspended either by the administrator or by Google at the time of suspension. The property is returned only if the `suspended` property is `true`."
            },
            "thumbnailPhotoUrl": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Photo Url of the user (Read-only)"
            },
            "nonEditableAliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Output only. List of the user's non-editable alias email addresses. These are typically outside the account's primary domain or sub-domain."
            },
            "thumbnailPhotoEtag": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. ETag of the user's photo (Read-only)"
            },
            "changePasswordAtNextLogin": {
              "type": "boolean",
              "description": "Indicates if the user is forced to change their password at next login. This setting doesn't apply when [the user signs in via a third-party identity provider](https://support.google.com/a/answer/60224)."
            },
            "includeInGlobalAddressList": {
              "type": "boolean",
              "description": "Indicates if the user's profile is visible in the Google Workspace global address list when the contact sharing feature is enabled for the domain. For more information about excluding user profiles, see the [administration help center](https://support.google.com/a/answer/1285988)."
            }
          },
          "description": "The Directory API allows you to create and manage your account's users, user aliases, and user Gmail chat profile photos. For more information about common tasks, see the [User Accounts Developer's Guide](/admin-sdk/directory/v1/guides/manage-users.html) and the [User Aliases Developer's Guide](/admin-sdk/directory/v1/guides/manage-user-aliases.html)."
        }
      ]
  directory.users.watch:
    description: |-
      Watch for changes in users list
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/watch
    example:
      inputs: [
        {
          "id": "Channel",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
              "type": "string",
              "default": "api#channel",
              "description": "Identifies this as a notification channel used to watch for changes to a resource, which is `api#channel`."
            },
            "type": {
              "type": "string",
              "description": "The type of delivery mechanism used for this channel."
            },
            "token": {
              "type": "string",
              "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "params": {
              "type": "object",
              "description": "Additional parameters controlling delivery channel behavior. Optional.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "address": {
              "type": "string",
              "description": "The address where notifications are delivered for this channel."
            },
            "payload": {
              "type": "boolean",
              "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "expiration": {
              "type": "string",
              "format": "int64",
              "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional."
            },
            "resourceId": {
              "type": "string",
              "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
              "type": "string",
              "description": "A version-specific identifier for the watched resource."
            }
          },
          "description": "An notification channel used to watch for resource changes."
        }
      ]
      outputs: [
        {}
      ]
  directory.verificationCodes.generate:
    description: |-
      Generate new backup verification codes for the user.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/verificationCodes/generate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.verificationCodes.invalidate:
    description: |-
      Invalidate the current backup verification codes for the user.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/verificationCodes/invalidate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  directory.verificationCodes.list:
    description: |-
      Returns the current set of valid backup verification codes for the specified user.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/directory/reference/rest/v1/verificationCodes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "VerificationCodes",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#directory#verificationCodesList",
              "description": "The type of the resource. This is always `admin#directory#verificationCodesList`."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "VerificationCode",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#directory#verificationCode",
                    "description": "The type of the resource. This is always `admin#directory#verificationCode`."
                  },
                  "userId": {
                    "type": "string",
                    "description": "The obfuscated unique ID of the user."
                  },
                  "verificationCode": {
                    "type": "string",
                    "description": "A current verification code for the user. Invalidated or used verification codes are not returned as part of the result."
                  }
                },
                "description": "The Directory API allows you to view, generate, and invalidate backup verification codes for a user."
              },
              "description": "A list of verification code resources."
            }
          },
          "description": "JSON response template for List verification codes operation in Directory API."
        }
      ]
  groupsmigration.archive.insert:
    description: |-
      Inserts a new mail into the archive of the Google group.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/groups-migration/v1/reference/archive/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Groups",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "The kind of insert resource this is."
            },
            "responseCode": {
              "type": "string",
              "description": "The status of the insert request."
            }
          },
          "description": "JSON response template for groups migration API."
        }
      ]
  groupsSettings.groups.get:
    description: |-
      Gets one resource by id.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/groups-settings/v1/reference/groups/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Groups",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "groupsSettings#groups",
              "description": "The type of the resource. It is always groupsSettings#groups."
            },
            "name": {
              "type": "string",
              "description": "Name of the group, which has a maximum size of 75 characters."
            },
            "email": {
              "type": "string",
              "description": "The group's email address. This property can be updated using the Directory API. Note: Only a group owner can change a group's email address. A group manager can't do this.\\ When you change your group's address using the Directory API or the control panel, you are changing the address your subscribers use to send email and the web address people use to access your group. People can't reach your group by visiting the old address."
            },
            "replyTo": {
              "type": "string",
              "description": "Specifies who receives the default reply. Possible values are:  \\ - REPLY_TO_CUSTOM: For replies to messages, use the group's custom email address.\\ When the group's ReplyTo property is set to REPLY_TO_CUSTOM, the customReplyTo property holds the custom email address used when replying to a message. If the group's ReplyTo property is set to REPLY_TO_CUSTOM, the customReplyTo property must have a value. Otherwise an error is returned.\\ \\ - REPLY_TO_SENDER: The reply sent to author of message. \\ - REPLY_TO_LIST: This reply message is sent to the group. \\ - REPLY_TO_OWNER: The reply is sent to the owner(s) of the group. This does not include the group's managers. \\ - REPLY_TO_IGNORE: Group users individually decide where the message reply is sent. \\ - REPLY_TO_MANAGERS: This reply message is sent to the group's managers, which includes all managers and the group owner."
            },
            "whoCanAdd": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateMembers setting. Permissions to add members. Possible values are:  \\ - ALL_MEMBERS_CAN_ADD: Managers and members can directly add new members. \\ - ALL_MANAGERS_CAN_ADD: Only managers can directly add new members. this includes the group's owner. \\ - ALL_OWNERS_CAN_ADD: Only owners can directly add new members. \\ - NONE_CAN_ADD: No one can directly add new members."
            },
            "isArchived": {
              "type": "string",
              "description": "Allows the Group contents to be archived. Possible values are:  \\ - true: Archive messages sent to the group. \\ - false: Do not keep an archive of messages sent to this group. If false, previously archived messages remain in the archive."
            },
            "whoCanJoin": {
              "type": "string",
              "description": "Permission to join group. Possible values are:  \\ - ANYONE_CAN_JOIN: Anyone in the account domain can join. This includes accounts with multiple domains. \\ - ALL_IN_DOMAIN_CAN_JOIN: Any Internet user who is outside your domain can access your Google Groups service and view the list of groups in your Groups directory. Warning: Group owners can add external addresses, outside of the domain to their groups. They can also allow people outside your domain to join their groups. If you later disable this option, any external addresses already added to users' groups remain in those groups. \\ - INVITED_CAN_JOIN: Candidates for membership can be invited to join.  \\ - CAN_REQUEST_TO_JOIN: Non members can request an invitation to join."
            },
            "archiveOnly": {
              "type": "string",
              "description": "Allows the group to be archived only. Possible values are:  \\ - true: Group is archived and the group is inactive. New messages to this group are rejected. The older archived messages are browseable and searchable.  \\ - If true, the whoCanPostMessage property is set to NONE_CAN_POST.  \\ - If reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST.  \\ - false: The group is active and can receive messages.  \\ - When false, updating whoCanPostMessage to NONE_CAN_POST, results in an error."
            },
            "description": {
              "type": "string",
              "description": "Description of the group. This property value may be an empty string if no group description has been entered. If entered, the maximum group description is no more than 300 characters."
            },
            "whoCanInvite": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateMembers setting. Permissions to invite new members. Possible values are:  \\ - ALL_MEMBERS_CAN_INVITE: Managers and members can invite a new member candidate. \\ - ALL_MANAGERS_CAN_INVITE: Only managers can invite a new member. This includes the group's owner. \\ - ALL_OWNERS_CAN_INVITE: Only owners can invite a new member. \\ - NONE_CAN_INVITE: No one can invite a new member candidate."
            },
            "customReplyTo": {
              "type": "string",
              "description": "An email address used when replying to a message if the replyTo property is set to REPLY_TO_CUSTOM. This address is defined by an account administrator.  \\ - When the group's ReplyTo property is set to REPLY_TO_CUSTOM, the customReplyTo property holds a custom email address used when replying to a message. \\ - If the group's ReplyTo property is set to REPLY_TO_CUSTOM, the customReplyTo property must have a text value or an error is returned."
            },
            "default_sender": {
              "type": "string",
              "description": "Default sender for members who can post messages as the group. Possible values are: - `DEFAULT_SELF`: By default messages will be sent from the user - `GROUP`: By default messages will be sent from the group"
            },
            "whoCanBanUsers": {
              "type": "string",
              "description": "Specifies who can deny membership to users. This permission will be deprecated once it is merged into the new whoCanModerateMembers setting. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "allowWebPosting": {
              "type": "string",
              "description": "Allows posting from web. Possible values are:  \\ - true: Allows any member to post to the group forum. \\ - false: Members only use Gmail to communicate with the group."
            },
            "maxMessageBytes": {
              "type": "integer",
              "format": "int32",
              "description": "Deprecated. The maximum size of a message is 25Mb."
            },
            "primaryLanguage": {
              "type": "string",
              "description": "The primary language for group. For a group's primary language use the language tags from the G Suite languages found at G Suite Email Settings API Email Language Tags."
            },
            "whoCanHideAbuse": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can hide posts by reporting them as abuse. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanViewGroup": {
              "type": "string",
              "description": "Permissions to view group messages. Possible values are:  \\ - ANYONE_CAN_VIEW: Any Internet user can view the group's messages.  \\ - ALL_IN_DOMAIN_CAN_VIEW: Anyone in your account can view this group's messages. \\ - ALL_MEMBERS_CAN_VIEW: All group members can view the group's messages. \\ - ALL_MANAGERS_CAN_VIEW: Any group manager can view this group's messages."
            },
            "customFooterText": {
              "type": "string",
              "description": "Set the content of custom footer text. The maximum number of characters is 1,000."
            },
            "whoCanLeaveGroup": {
              "type": "string",
              "description": "Permission to leave the group. Possible values are:  \\ - ALL_MANAGERS_CAN_LEAVE \\ - ALL_MEMBERS_CAN_LEAVE \\ - NONE_CAN_LEAVE"
            },
            "whoCanLockTopics": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can prevent users from posting replies to topics. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanTakeTopics": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to take topics in a forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanPostMessage": {
              "type": "string",
              "description": "Permissions to post messages. Possible values are:  \\ - NONE_CAN_POST: The group is disabled and archived. No one can post a message to this group.  \\ - When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an error. \\ - If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST.  \\ - ALL_MANAGERS_CAN_POST: Managers, including group owners, can post messages. \\ - ALL_MEMBERS_CAN_POST: Any group member can post a message. \\ - ALL_OWNERS_CAN_POST: Only group owners can post a message. \\ - ALL_IN_DOMAIN_CAN_POST: Anyone in the account can post a message.  \\ - ANYONE_CAN_POST: Any Internet user who outside your account can access your Google Groups service and post a message. Note: When whoCanPostMessage is set to ANYONE_CAN_POST, we recommend the messageModerationLevel be set to MODERATE_NON_MEMBERS to protect the group from possible spam."
            },
            "messageDisplayFont": {
              "type": "string",
              "description": "Deprecated. The default message display font always has a value of \"DEFAULT_FONT\"."
            },
            "whoCanAssignTopics": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to assign topics in a forum to another user. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanContactOwner": {
              "type": "string",
              "description": "Permission to contact owner of the group via web UI. Possible values are:  \\ - ALL_IN_DOMAIN_CAN_CONTACT \\ - ALL_MANAGERS_CAN_CONTACT \\ - ALL_MEMBERS_CAN_CONTACT \\ - ANYONE_CAN_CONTACT \\ - ALL_OWNERS_CAN_CONTACT"
            },
            "whoCanDeleteTopics": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can delete topics. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanMoveTopicsIn": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can move topics into the group or forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "includeCustomFooter": {
              "type": "string",
              "description": "Whether to include custom footer. Possible values are:  \\ - true \\ - false"
            },
            "spamModerationLevel": {
              "type": "string",
              "description": "Specifies moderation levels for messages detected as spam. Possible values are:  \\ - ALLOW: Post the message to the group. \\ - MODERATE: Send the message to the moderation queue. This is the default. \\ - SILENTLY_MODERATE: Send the message to the moderation queue, but do not send notification to moderators. \\ - REJECT: Immediately reject the message."
            },
            "whoCanAddReferences": {
              "type": "string",
              "description": "Deprecated. This functionality is no longer supported in the Google Groups UI. The value is always \"NONE\"."
            },
            "whoCanAssistContent": {
              "type": "string",
              "description": "Specifies who can moderate metadata. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanDeleteAnyPost": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can delete replies to topics. (Authors can always delete their own posts). Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanDiscoverGroup": {
              "type": "string",
              "description": "Specifies the set of users for whom this group is discoverable. Possible values are:  \\ - ANYONE_CAN_DISCOVER \\ - ALL_IN_DOMAIN_CAN_DISCOVER \\ - ALL_MEMBERS_CAN_DISCOVER"
            },
            "whoCanMarkDuplicate": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to mark a topic as a duplicate of another topic. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanModifyMembers": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateMembers setting. Specifies who can change group members' roles. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanMoveTopicsOut": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can move topics out of the group or forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanUnassignTopic": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to unassign any topic in a forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "allowExternalMembers": {
              "type": "string",
              "description": "Identifies whether members external to your organization can join the group. Possible values are:  \\ - true: G Suite users external to your organization can become members of this group. \\ - false: Users not belonging to the organization are not allowed to become members of this group."
            },
            "favoriteRepliesOnTop": {
              "type": "string",
              "description": "Indicates if favorite replies should be displayed above other replies.  \\ - true: Favorite replies will be displayed above other replies. \\ - false: Favorite replies will not be displayed above other replies."
            },
            "showInGroupDirectory": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanDiscoverGroup setting. Allows the group to be visible in the Groups Directory. Possible values are:  \\ - true: All groups in the account are listed in the Groups directory. \\ - false: All groups in the account are not listed in the directory."
            },
            "whoCanApproveMembers": {
              "type": "string",
              "description": "Specifies who can approve members who ask to join groups. This permission will be deprecated once it is merged into the new whoCanModerateMembers setting. Possible values are:  \\ - ALL_MEMBERS_CAN_APPROVE \\ - ALL_MANAGERS_CAN_APPROVE \\ - ALL_OWNERS_CAN_APPROVE \\ - NONE_CAN_APPROVE"
            },
            "whoCanViewMembership": {
              "type": "string",
              "description": "Permissions to view membership. Possible values are:  \\ - ALL_IN_DOMAIN_CAN_VIEW: Anyone in the account can view the group members list.\\ If a group already has external members, those members can still send email to this group.\\ \\ - ALL_MEMBERS_CAN_VIEW: The group members can view the group members list. \\ - ALL_MANAGERS_CAN_VIEW: The group managers can view group members list."
            },
            "whoCanApproveMessages": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can approve pending messages in the moderation queue. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanModerateContent": {
              "type": "string",
              "description": "Specifies who can moderate content. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanModerateMembers": {
              "type": "string",
              "description": "Specifies who can manage members. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "messageModerationLevel": {
              "type": "string",
              "description": "Moderation level of incoming messages. Possible values are:  \\ - MODERATE_ALL_MESSAGES: All messages are sent to the group owner's email address for approval. If approved, the message is sent to the group. \\ - MODERATE_NON_MEMBERS: All messages from non group members are sent to the group owner's email address for approval. If approved, the message is sent to the group. \\ - MODERATE_NEW_MEMBERS: All messages from new members are sent to the group owner's email address for approval. If approved, the message is sent to the group. \\ - MODERATE_NONE: No moderator approval is required. Messages are delivered directly to the group. Note: When the whoCanPostMessage is set to ANYONE_CAN_POST, we recommend the messageModerationLevel be set to MODERATE_NON_MEMBERS to protect the group from possible spam.\\ When memberCanPostAsTheGroup is true, any message moderation settings on individual users or new members will not apply to posts made on behalf of the group."
            },
            "whoCanMakeTopicsSticky": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can make topics appear at the top of the topic list. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanEnterFreeFormTags": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to enter free form tags for topics in a forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanPostAnnouncements": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can post announcements, a special topic type. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "allowGoogleCommunication": {
              "type": "string",
              "description": "Deprecated. Allows Google to contact administrator of the group.  \\ - true: Allow Google to contact managers of this group. Occasionally Google may send updates on the latest features, ask for input on new features, or ask for permission to highlight your group. \\ - false: Google can not contact managers of this group."
            },
            "enableCollaborativeInbox": {
              "type": "string",
              "description": "Specifies whether a collaborative inbox will remain turned on for the group. Possible values are:  \\ - true \\ - false"
            },
            "membersCanPostAsTheGroup": {
              "type": "string",
              "description": "Enables members to post messages as the group. Possible values are:  \\ - true: Group member can post messages using the group's email address instead of their own email address. Message appear to originate from the group itself. Note: When true, any message moderation settings on individual users or new members do not apply to posts made on behalf of the group. \\ - false: Members can not post in behalf of the group's email address."
            },
            "includeInGlobalAddressList": {
              "type": "string",
              "description": "Enables the group to be included in the Global Address List. For more information, see the help center. Possible values are:  \\ - true: Group is included in the Global Address List. \\ - false: Group is not included in the Global Address List."
            },
            "whoCanMarkNoResponseNeeded": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to mark a topic as not needing a response. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "sendMessageDenyNotification": {
              "type": "string",
              "description": "Allows a member to be notified if the member's message to the group is denied by the group owner. Possible values are:  \\ - true: When a message is rejected, send the deny message notification to the message author.\\ The defaultMessageDenyNotificationText property is dependent on the sendMessageDenyNotification property being true.\\ \\ - false: When a message is rejected, no notification is sent."
            },
            "whoCanModifyTagsAndCategories": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to change tags and categories. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanMarkFavoriteReplyOnAnyTopic": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to mark any other user's post as a favorite reply. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanMarkFavoriteReplyOnOwnTopic": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to mark a post for a topic they started as a favorite reply. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "defaultMessageDenyNotificationText": {
              "type": "string",
              "description": "When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters. Note: Requires sendMessageDenyNotification property to be true."
            },
            "whoCanUnmarkFavoriteReplyOnAnyTopic": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to unmark any post from a favorite reply. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "customRolesEnabledForSettingsToBeMerged": {
              "type": "string",
              "description": "Specifies whether the group has a custom role that's included in one of the settings being merged. This field is read-only and update/patch requests to it are ignored. Possible values are:  \\ - true \\ - false"
            }
          },
          "description": "JSON template for Group resource"
        }
      ]
  groupsSettings.groups.patch:
    description: |-
      Updates an existing resource. This method supports patch semantics.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/groups-settings/v1/reference/groups/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Groups",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "groupsSettings#groups",
              "description": "The type of the resource. It is always groupsSettings#groups."
            },
            "name": {
              "type": "string",
              "description": "Name of the group, which has a maximum size of 75 characters."
            },
            "email": {
              "type": "string",
              "description": "The group's email address. This property can be updated using the Directory API. Note: Only a group owner can change a group's email address. A group manager can't do this.\\ When you change your group's address using the Directory API or the control panel, you are changing the address your subscribers use to send email and the web address people use to access your group. People can't reach your group by visiting the old address."
            },
            "replyTo": {
              "type": "string",
              "description": "Specifies who receives the default reply. Possible values are:  \\ - REPLY_TO_CUSTOM: For replies to messages, use the group's custom email address.\\ When the group's ReplyTo property is set to REPLY_TO_CUSTOM, the customReplyTo property holds the custom email address used when replying to a message. If the group's ReplyTo property is set to REPLY_TO_CUSTOM, the customReplyTo property must have a value. Otherwise an error is returned.\\ \\ - REPLY_TO_SENDER: The reply sent to author of message. \\ - REPLY_TO_LIST: This reply message is sent to the group. \\ - REPLY_TO_OWNER: The reply is sent to the owner(s) of the group. This does not include the group's managers. \\ - REPLY_TO_IGNORE: Group users individually decide where the message reply is sent. \\ - REPLY_TO_MANAGERS: This reply message is sent to the group's managers, which includes all managers and the group owner."
            },
            "whoCanAdd": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateMembers setting. Permissions to add members. Possible values are:  \\ - ALL_MEMBERS_CAN_ADD: Managers and members can directly add new members. \\ - ALL_MANAGERS_CAN_ADD: Only managers can directly add new members. this includes the group's owner. \\ - ALL_OWNERS_CAN_ADD: Only owners can directly add new members. \\ - NONE_CAN_ADD: No one can directly add new members."
            },
            "isArchived": {
              "type": "string",
              "description": "Allows the Group contents to be archived. Possible values are:  \\ - true: Archive messages sent to the group. \\ - false: Do not keep an archive of messages sent to this group. If false, previously archived messages remain in the archive."
            },
            "whoCanJoin": {
              "type": "string",
              "description": "Permission to join group. Possible values are:  \\ - ANYONE_CAN_JOIN: Anyone in the account domain can join. This includes accounts with multiple domains. \\ - ALL_IN_DOMAIN_CAN_JOIN: Any Internet user who is outside your domain can access your Google Groups service and view the list of groups in your Groups directory. Warning: Group owners can add external addresses, outside of the domain to their groups. They can also allow people outside your domain to join their groups. If you later disable this option, any external addresses already added to users' groups remain in those groups. \\ - INVITED_CAN_JOIN: Candidates for membership can be invited to join.  \\ - CAN_REQUEST_TO_JOIN: Non members can request an invitation to join."
            },
            "archiveOnly": {
              "type": "string",
              "description": "Allows the group to be archived only. Possible values are:  \\ - true: Group is archived and the group is inactive. New messages to this group are rejected. The older archived messages are browseable and searchable.  \\ - If true, the whoCanPostMessage property is set to NONE_CAN_POST.  \\ - If reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST.  \\ - false: The group is active and can receive messages.  \\ - When false, updating whoCanPostMessage to NONE_CAN_POST, results in an error."
            },
            "description": {
              "type": "string",
              "description": "Description of the group. This property value may be an empty string if no group description has been entered. If entered, the maximum group description is no more than 300 characters."
            },
            "whoCanInvite": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateMembers setting. Permissions to invite new members. Possible values are:  \\ - ALL_MEMBERS_CAN_INVITE: Managers and members can invite a new member candidate. \\ - ALL_MANAGERS_CAN_INVITE: Only managers can invite a new member. This includes the group's owner. \\ - ALL_OWNERS_CAN_INVITE: Only owners can invite a new member. \\ - NONE_CAN_INVITE: No one can invite a new member candidate."
            },
            "customReplyTo": {
              "type": "string",
              "description": "An email address used when replying to a message if the replyTo property is set to REPLY_TO_CUSTOM. This address is defined by an account administrator.  \\ - When the group's ReplyTo property is set to REPLY_TO_CUSTOM, the customReplyTo property holds a custom email address used when replying to a message. \\ - If the group's ReplyTo property is set to REPLY_TO_CUSTOM, the customReplyTo property must have a text value or an error is returned."
            },
            "default_sender": {
              "type": "string",
              "description": "Default sender for members who can post messages as the group. Possible values are: - `DEFAULT_SELF`: By default messages will be sent from the user - `GROUP`: By default messages will be sent from the group"
            },
            "whoCanBanUsers": {
              "type": "string",
              "description": "Specifies who can deny membership to users. This permission will be deprecated once it is merged into the new whoCanModerateMembers setting. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "allowWebPosting": {
              "type": "string",
              "description": "Allows posting from web. Possible values are:  \\ - true: Allows any member to post to the group forum. \\ - false: Members only use Gmail to communicate with the group."
            },
            "maxMessageBytes": {
              "type": "integer",
              "format": "int32",
              "description": "Deprecated. The maximum size of a message is 25Mb."
            },
            "primaryLanguage": {
              "type": "string",
              "description": "The primary language for group. For a group's primary language use the language tags from the G Suite languages found at G Suite Email Settings API Email Language Tags."
            },
            "whoCanHideAbuse": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can hide posts by reporting them as abuse. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanViewGroup": {
              "type": "string",
              "description": "Permissions to view group messages. Possible values are:  \\ - ANYONE_CAN_VIEW: Any Internet user can view the group's messages.  \\ - ALL_IN_DOMAIN_CAN_VIEW: Anyone in your account can view this group's messages. \\ - ALL_MEMBERS_CAN_VIEW: All group members can view the group's messages. \\ - ALL_MANAGERS_CAN_VIEW: Any group manager can view this group's messages."
            },
            "customFooterText": {
              "type": "string",
              "description": "Set the content of custom footer text. The maximum number of characters is 1,000."
            },
            "whoCanLeaveGroup": {
              "type": "string",
              "description": "Permission to leave the group. Possible values are:  \\ - ALL_MANAGERS_CAN_LEAVE \\ - ALL_MEMBERS_CAN_LEAVE \\ - NONE_CAN_LEAVE"
            },
            "whoCanLockTopics": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can prevent users from posting replies to topics. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanTakeTopics": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to take topics in a forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanPostMessage": {
              "type": "string",
              "description": "Permissions to post messages. Possible values are:  \\ - NONE_CAN_POST: The group is disabled and archived. No one can post a message to this group.  \\ - When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an error. \\ - If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST.  \\ - ALL_MANAGERS_CAN_POST: Managers, including group owners, can post messages. \\ - ALL_MEMBERS_CAN_POST: Any group member can post a message. \\ - ALL_OWNERS_CAN_POST: Only group owners can post a message. \\ - ALL_IN_DOMAIN_CAN_POST: Anyone in the account can post a message.  \\ - ANYONE_CAN_POST: Any Internet user who outside your account can access your Google Groups service and post a message. Note: When whoCanPostMessage is set to ANYONE_CAN_POST, we recommend the messageModerationLevel be set to MODERATE_NON_MEMBERS to protect the group from possible spam."
            },
            "messageDisplayFont": {
              "type": "string",
              "description": "Deprecated. The default message display font always has a value of \"DEFAULT_FONT\"."
            },
            "whoCanAssignTopics": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to assign topics in a forum to another user. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanContactOwner": {
              "type": "string",
              "description": "Permission to contact owner of the group via web UI. Possible values are:  \\ - ALL_IN_DOMAIN_CAN_CONTACT \\ - ALL_MANAGERS_CAN_CONTACT \\ - ALL_MEMBERS_CAN_CONTACT \\ - ANYONE_CAN_CONTACT \\ - ALL_OWNERS_CAN_CONTACT"
            },
            "whoCanDeleteTopics": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can delete topics. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanMoveTopicsIn": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can move topics into the group or forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "includeCustomFooter": {
              "type": "string",
              "description": "Whether to include custom footer. Possible values are:  \\ - true \\ - false"
            },
            "spamModerationLevel": {
              "type": "string",
              "description": "Specifies moderation levels for messages detected as spam. Possible values are:  \\ - ALLOW: Post the message to the group. \\ - MODERATE: Send the message to the moderation queue. This is the default. \\ - SILENTLY_MODERATE: Send the message to the moderation queue, but do not send notification to moderators. \\ - REJECT: Immediately reject the message."
            },
            "whoCanAddReferences": {
              "type": "string",
              "description": "Deprecated. This functionality is no longer supported in the Google Groups UI. The value is always \"NONE\"."
            },
            "whoCanAssistContent": {
              "type": "string",
              "description": "Specifies who can moderate metadata. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanDeleteAnyPost": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can delete replies to topics. (Authors can always delete their own posts). Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanDiscoverGroup": {
              "type": "string",
              "description": "Specifies the set of users for whom this group is discoverable. Possible values are:  \\ - ANYONE_CAN_DISCOVER \\ - ALL_IN_DOMAIN_CAN_DISCOVER \\ - ALL_MEMBERS_CAN_DISCOVER"
            },
            "whoCanMarkDuplicate": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to mark a topic as a duplicate of another topic. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanModifyMembers": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateMembers setting. Specifies who can change group members' roles. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanMoveTopicsOut": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can move topics out of the group or forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanUnassignTopic": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to unassign any topic in a forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "allowExternalMembers": {
              "type": "string",
              "description": "Identifies whether members external to your organization can join the group. Possible values are:  \\ - true: G Suite users external to your organization can become members of this group. \\ - false: Users not belonging to the organization are not allowed to become members of this group."
            },
            "favoriteRepliesOnTop": {
              "type": "string",
              "description": "Indicates if favorite replies should be displayed above other replies.  \\ - true: Favorite replies will be displayed above other replies. \\ - false: Favorite replies will not be displayed above other replies."
            },
            "showInGroupDirectory": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanDiscoverGroup setting. Allows the group to be visible in the Groups Directory. Possible values are:  \\ - true: All groups in the account are listed in the Groups directory. \\ - false: All groups in the account are not listed in the directory."
            },
            "whoCanApproveMembers": {
              "type": "string",
              "description": "Specifies who can approve members who ask to join groups. This permission will be deprecated once it is merged into the new whoCanModerateMembers setting. Possible values are:  \\ - ALL_MEMBERS_CAN_APPROVE \\ - ALL_MANAGERS_CAN_APPROVE \\ - ALL_OWNERS_CAN_APPROVE \\ - NONE_CAN_APPROVE"
            },
            "whoCanViewMembership": {
              "type": "string",
              "description": "Permissions to view membership. Possible values are:  \\ - ALL_IN_DOMAIN_CAN_VIEW: Anyone in the account can view the group members list.\\ If a group already has external members, those members can still send email to this group.\\ \\ - ALL_MEMBERS_CAN_VIEW: The group members can view the group members list. \\ - ALL_MANAGERS_CAN_VIEW: The group managers can view group members list."
            },
            "whoCanApproveMessages": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can approve pending messages in the moderation queue. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanModerateContent": {
              "type": "string",
              "description": "Specifies who can moderate content. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanModerateMembers": {
              "type": "string",
              "description": "Specifies who can manage members. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "messageModerationLevel": {
              "type": "string",
              "description": "Moderation level of incoming messages. Possible values are:  \\ - MODERATE_ALL_MESSAGES: All messages are sent to the group owner's email address for approval. If approved, the message is sent to the group. \\ - MODERATE_NON_MEMBERS: All messages from non group members are sent to the group owner's email address for approval. If approved, the message is sent to the group. \\ - MODERATE_NEW_MEMBERS: All messages from new members are sent to the group owner's email address for approval. If approved, the message is sent to the group. \\ - MODERATE_NONE: No moderator approval is required. Messages are delivered directly to the group. Note: When the whoCanPostMessage is set to ANYONE_CAN_POST, we recommend the messageModerationLevel be set to MODERATE_NON_MEMBERS to protect the group from possible spam.\\ When memberCanPostAsTheGroup is true, any message moderation settings on individual users or new members will not apply to posts made on behalf of the group."
            },
            "whoCanMakeTopicsSticky": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can make topics appear at the top of the topic list. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanEnterFreeFormTags": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to enter free form tags for topics in a forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanPostAnnouncements": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can post announcements, a special topic type. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "allowGoogleCommunication": {
              "type": "string",
              "description": "Deprecated. Allows Google to contact administrator of the group.  \\ - true: Allow Google to contact managers of this group. Occasionally Google may send updates on the latest features, ask for input on new features, or ask for permission to highlight your group. \\ - false: Google can not contact managers of this group."
            },
            "enableCollaborativeInbox": {
              "type": "string",
              "description": "Specifies whether a collaborative inbox will remain turned on for the group. Possible values are:  \\ - true \\ - false"
            },
            "membersCanPostAsTheGroup": {
              "type": "string",
              "description": "Enables members to post messages as the group. Possible values are:  \\ - true: Group member can post messages using the group's email address instead of their own email address. Message appear to originate from the group itself. Note: When true, any message moderation settings on individual users or new members do not apply to posts made on behalf of the group. \\ - false: Members can not post in behalf of the group's email address."
            },
            "includeInGlobalAddressList": {
              "type": "string",
              "description": "Enables the group to be included in the Global Address List. For more information, see the help center. Possible values are:  \\ - true: Group is included in the Global Address List. \\ - false: Group is not included in the Global Address List."
            },
            "whoCanMarkNoResponseNeeded": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to mark a topic as not needing a response. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "sendMessageDenyNotification": {
              "type": "string",
              "description": "Allows a member to be notified if the member's message to the group is denied by the group owner. Possible values are:  \\ - true: When a message is rejected, send the deny message notification to the message author.\\ The defaultMessageDenyNotificationText property is dependent on the sendMessageDenyNotification property being true.\\ \\ - false: When a message is rejected, no notification is sent."
            },
            "whoCanModifyTagsAndCategories": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to change tags and categories. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanMarkFavoriteReplyOnAnyTopic": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to mark any other user's post as a favorite reply. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanMarkFavoriteReplyOnOwnTopic": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to mark a post for a topic they started as a favorite reply. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "defaultMessageDenyNotificationText": {
              "type": "string",
              "description": "When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters. Note: Requires sendMessageDenyNotification property to be true."
            },
            "whoCanUnmarkFavoriteReplyOnAnyTopic": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to unmark any post from a favorite reply. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "customRolesEnabledForSettingsToBeMerged": {
              "type": "string",
              "description": "Specifies whether the group has a custom role that's included in one of the settings being merged. This field is read-only and update/patch requests to it are ignored. Possible values are:  \\ - true \\ - false"
            }
          },
          "description": "JSON template for Group resource"
        }
      ]
  groupsSettings.groups.update:
    description: |-
      Updates an existing resource.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/groups-settings/v1/reference/groups/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Groups",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "groupsSettings#groups",
              "description": "The type of the resource. It is always groupsSettings#groups."
            },
            "name": {
              "type": "string",
              "description": "Name of the group, which has a maximum size of 75 characters."
            },
            "email": {
              "type": "string",
              "description": "The group's email address. This property can be updated using the Directory API. Note: Only a group owner can change a group's email address. A group manager can't do this.\\ When you change your group's address using the Directory API or the control panel, you are changing the address your subscribers use to send email and the web address people use to access your group. People can't reach your group by visiting the old address."
            },
            "replyTo": {
              "type": "string",
              "description": "Specifies who receives the default reply. Possible values are:  \\ - REPLY_TO_CUSTOM: For replies to messages, use the group's custom email address.\\ When the group's ReplyTo property is set to REPLY_TO_CUSTOM, the customReplyTo property holds the custom email address used when replying to a message. If the group's ReplyTo property is set to REPLY_TO_CUSTOM, the customReplyTo property must have a value. Otherwise an error is returned.\\ \\ - REPLY_TO_SENDER: The reply sent to author of message. \\ - REPLY_TO_LIST: This reply message is sent to the group. \\ - REPLY_TO_OWNER: The reply is sent to the owner(s) of the group. This does not include the group's managers. \\ - REPLY_TO_IGNORE: Group users individually decide where the message reply is sent. \\ - REPLY_TO_MANAGERS: This reply message is sent to the group's managers, which includes all managers and the group owner."
            },
            "whoCanAdd": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateMembers setting. Permissions to add members. Possible values are:  \\ - ALL_MEMBERS_CAN_ADD: Managers and members can directly add new members. \\ - ALL_MANAGERS_CAN_ADD: Only managers can directly add new members. this includes the group's owner. \\ - ALL_OWNERS_CAN_ADD: Only owners can directly add new members. \\ - NONE_CAN_ADD: No one can directly add new members."
            },
            "isArchived": {
              "type": "string",
              "description": "Allows the Group contents to be archived. Possible values are:  \\ - true: Archive messages sent to the group. \\ - false: Do not keep an archive of messages sent to this group. If false, previously archived messages remain in the archive."
            },
            "whoCanJoin": {
              "type": "string",
              "description": "Permission to join group. Possible values are:  \\ - ANYONE_CAN_JOIN: Anyone in the account domain can join. This includes accounts with multiple domains. \\ - ALL_IN_DOMAIN_CAN_JOIN: Any Internet user who is outside your domain can access your Google Groups service and view the list of groups in your Groups directory. Warning: Group owners can add external addresses, outside of the domain to their groups. They can also allow people outside your domain to join their groups. If you later disable this option, any external addresses already added to users' groups remain in those groups. \\ - INVITED_CAN_JOIN: Candidates for membership can be invited to join.  \\ - CAN_REQUEST_TO_JOIN: Non members can request an invitation to join."
            },
            "archiveOnly": {
              "type": "string",
              "description": "Allows the group to be archived only. Possible values are:  \\ - true: Group is archived and the group is inactive. New messages to this group are rejected. The older archived messages are browseable and searchable.  \\ - If true, the whoCanPostMessage property is set to NONE_CAN_POST.  \\ - If reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST.  \\ - false: The group is active and can receive messages.  \\ - When false, updating whoCanPostMessage to NONE_CAN_POST, results in an error."
            },
            "description": {
              "type": "string",
              "description": "Description of the group. This property value may be an empty string if no group description has been entered. If entered, the maximum group description is no more than 300 characters."
            },
            "whoCanInvite": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateMembers setting. Permissions to invite new members. Possible values are:  \\ - ALL_MEMBERS_CAN_INVITE: Managers and members can invite a new member candidate. \\ - ALL_MANAGERS_CAN_INVITE: Only managers can invite a new member. This includes the group's owner. \\ - ALL_OWNERS_CAN_INVITE: Only owners can invite a new member. \\ - NONE_CAN_INVITE: No one can invite a new member candidate."
            },
            "customReplyTo": {
              "type": "string",
              "description": "An email address used when replying to a message if the replyTo property is set to REPLY_TO_CUSTOM. This address is defined by an account administrator.  \\ - When the group's ReplyTo property is set to REPLY_TO_CUSTOM, the customReplyTo property holds a custom email address used when replying to a message. \\ - If the group's ReplyTo property is set to REPLY_TO_CUSTOM, the customReplyTo property must have a text value or an error is returned."
            },
            "default_sender": {
              "type": "string",
              "description": "Default sender for members who can post messages as the group. Possible values are: - `DEFAULT_SELF`: By default messages will be sent from the user - `GROUP`: By default messages will be sent from the group"
            },
            "whoCanBanUsers": {
              "type": "string",
              "description": "Specifies who can deny membership to users. This permission will be deprecated once it is merged into the new whoCanModerateMembers setting. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "allowWebPosting": {
              "type": "string",
              "description": "Allows posting from web. Possible values are:  \\ - true: Allows any member to post to the group forum. \\ - false: Members only use Gmail to communicate with the group."
            },
            "maxMessageBytes": {
              "type": "integer",
              "format": "int32",
              "description": "Deprecated. The maximum size of a message is 25Mb."
            },
            "primaryLanguage": {
              "type": "string",
              "description": "The primary language for group. For a group's primary language use the language tags from the G Suite languages found at G Suite Email Settings API Email Language Tags."
            },
            "whoCanHideAbuse": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can hide posts by reporting them as abuse. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanViewGroup": {
              "type": "string",
              "description": "Permissions to view group messages. Possible values are:  \\ - ANYONE_CAN_VIEW: Any Internet user can view the group's messages.  \\ - ALL_IN_DOMAIN_CAN_VIEW: Anyone in your account can view this group's messages. \\ - ALL_MEMBERS_CAN_VIEW: All group members can view the group's messages. \\ - ALL_MANAGERS_CAN_VIEW: Any group manager can view this group's messages."
            },
            "customFooterText": {
              "type": "string",
              "description": "Set the content of custom footer text. The maximum number of characters is 1,000."
            },
            "whoCanLeaveGroup": {
              "type": "string",
              "description": "Permission to leave the group. Possible values are:  \\ - ALL_MANAGERS_CAN_LEAVE \\ - ALL_MEMBERS_CAN_LEAVE \\ - NONE_CAN_LEAVE"
            },
            "whoCanLockTopics": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can prevent users from posting replies to topics. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanTakeTopics": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to take topics in a forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanPostMessage": {
              "type": "string",
              "description": "Permissions to post messages. Possible values are:  \\ - NONE_CAN_POST: The group is disabled and archived. No one can post a message to this group.  \\ - When archiveOnly is false, updating whoCanPostMessage to NONE_CAN_POST, results in an error. \\ - If archiveOnly is reverted from true to false, whoCanPostMessages is set to ALL_MANAGERS_CAN_POST.  \\ - ALL_MANAGERS_CAN_POST: Managers, including group owners, can post messages. \\ - ALL_MEMBERS_CAN_POST: Any group member can post a message. \\ - ALL_OWNERS_CAN_POST: Only group owners can post a message. \\ - ALL_IN_DOMAIN_CAN_POST: Anyone in the account can post a message.  \\ - ANYONE_CAN_POST: Any Internet user who outside your account can access your Google Groups service and post a message. Note: When whoCanPostMessage is set to ANYONE_CAN_POST, we recommend the messageModerationLevel be set to MODERATE_NON_MEMBERS to protect the group from possible spam."
            },
            "messageDisplayFont": {
              "type": "string",
              "description": "Deprecated. The default message display font always has a value of \"DEFAULT_FONT\"."
            },
            "whoCanAssignTopics": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to assign topics in a forum to another user. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanContactOwner": {
              "type": "string",
              "description": "Permission to contact owner of the group via web UI. Possible values are:  \\ - ALL_IN_DOMAIN_CAN_CONTACT \\ - ALL_MANAGERS_CAN_CONTACT \\ - ALL_MEMBERS_CAN_CONTACT \\ - ANYONE_CAN_CONTACT \\ - ALL_OWNERS_CAN_CONTACT"
            },
            "whoCanDeleteTopics": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can delete topics. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanMoveTopicsIn": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can move topics into the group or forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "includeCustomFooter": {
              "type": "string",
              "description": "Whether to include custom footer. Possible values are:  \\ - true \\ - false"
            },
            "spamModerationLevel": {
              "type": "string",
              "description": "Specifies moderation levels for messages detected as spam. Possible values are:  \\ - ALLOW: Post the message to the group. \\ - MODERATE: Send the message to the moderation queue. This is the default. \\ - SILENTLY_MODERATE: Send the message to the moderation queue, but do not send notification to moderators. \\ - REJECT: Immediately reject the message."
            },
            "whoCanAddReferences": {
              "type": "string",
              "description": "Deprecated. This functionality is no longer supported in the Google Groups UI. The value is always \"NONE\"."
            },
            "whoCanAssistContent": {
              "type": "string",
              "description": "Specifies who can moderate metadata. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanDeleteAnyPost": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can delete replies to topics. (Authors can always delete their own posts). Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanDiscoverGroup": {
              "type": "string",
              "description": "Specifies the set of users for whom this group is discoverable. Possible values are:  \\ - ANYONE_CAN_DISCOVER \\ - ALL_IN_DOMAIN_CAN_DISCOVER \\ - ALL_MEMBERS_CAN_DISCOVER"
            },
            "whoCanMarkDuplicate": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to mark a topic as a duplicate of another topic. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanModifyMembers": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateMembers setting. Specifies who can change group members' roles. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanMoveTopicsOut": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can move topics out of the group or forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanUnassignTopic": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to unassign any topic in a forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "allowExternalMembers": {
              "type": "string",
              "description": "Identifies whether members external to your organization can join the group. Possible values are:  \\ - true: G Suite users external to your organization can become members of this group. \\ - false: Users not belonging to the organization are not allowed to become members of this group."
            },
            "favoriteRepliesOnTop": {
              "type": "string",
              "description": "Indicates if favorite replies should be displayed above other replies.  \\ - true: Favorite replies will be displayed above other replies. \\ - false: Favorite replies will not be displayed above other replies."
            },
            "showInGroupDirectory": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanDiscoverGroup setting. Allows the group to be visible in the Groups Directory. Possible values are:  \\ - true: All groups in the account are listed in the Groups directory. \\ - false: All groups in the account are not listed in the directory."
            },
            "whoCanApproveMembers": {
              "type": "string",
              "description": "Specifies who can approve members who ask to join groups. This permission will be deprecated once it is merged into the new whoCanModerateMembers setting. Possible values are:  \\ - ALL_MEMBERS_CAN_APPROVE \\ - ALL_MANAGERS_CAN_APPROVE \\ - ALL_OWNERS_CAN_APPROVE \\ - NONE_CAN_APPROVE"
            },
            "whoCanViewMembership": {
              "type": "string",
              "description": "Permissions to view membership. Possible values are:  \\ - ALL_IN_DOMAIN_CAN_VIEW: Anyone in the account can view the group members list.\\ If a group already has external members, those members can still send email to this group.\\ \\ - ALL_MEMBERS_CAN_VIEW: The group members can view the group members list. \\ - ALL_MANAGERS_CAN_VIEW: The group managers can view group members list."
            },
            "whoCanApproveMessages": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can approve pending messages in the moderation queue. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanModerateContent": {
              "type": "string",
              "description": "Specifies who can moderate content. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanModerateMembers": {
              "type": "string",
              "description": "Specifies who can manage members. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "messageModerationLevel": {
              "type": "string",
              "description": "Moderation level of incoming messages. Possible values are:  \\ - MODERATE_ALL_MESSAGES: All messages are sent to the group owner's email address for approval. If approved, the message is sent to the group. \\ - MODERATE_NON_MEMBERS: All messages from non group members are sent to the group owner's email address for approval. If approved, the message is sent to the group. \\ - MODERATE_NEW_MEMBERS: All messages from new members are sent to the group owner's email address for approval. If approved, the message is sent to the group. \\ - MODERATE_NONE: No moderator approval is required. Messages are delivered directly to the group. Note: When the whoCanPostMessage is set to ANYONE_CAN_POST, we recommend the messageModerationLevel be set to MODERATE_NON_MEMBERS to protect the group from possible spam.\\ When memberCanPostAsTheGroup is true, any message moderation settings on individual users or new members will not apply to posts made on behalf of the group."
            },
            "whoCanMakeTopicsSticky": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can make topics appear at the top of the topic list. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanEnterFreeFormTags": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to enter free form tags for topics in a forum. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanPostAnnouncements": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanModerateContent setting. Specifies who can post announcements, a special topic type. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - OWNERS_ONLY \\ - NONE"
            },
            "allowGoogleCommunication": {
              "type": "string",
              "description": "Deprecated. Allows Google to contact administrator of the group.  \\ - true: Allow Google to contact managers of this group. Occasionally Google may send updates on the latest features, ask for input on new features, or ask for permission to highlight your group. \\ - false: Google can not contact managers of this group."
            },
            "enableCollaborativeInbox": {
              "type": "string",
              "description": "Specifies whether a collaborative inbox will remain turned on for the group. Possible values are:  \\ - true \\ - false"
            },
            "membersCanPostAsTheGroup": {
              "type": "string",
              "description": "Enables members to post messages as the group. Possible values are:  \\ - true: Group member can post messages using the group's email address instead of their own email address. Message appear to originate from the group itself. Note: When true, any message moderation settings on individual users or new members do not apply to posts made on behalf of the group. \\ - false: Members can not post in behalf of the group's email address."
            },
            "includeInGlobalAddressList": {
              "type": "string",
              "description": "Enables the group to be included in the Global Address List. For more information, see the help center. Possible values are:  \\ - true: Group is included in the Global Address List. \\ - false: Group is not included in the Global Address List."
            },
            "whoCanMarkNoResponseNeeded": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to mark a topic as not needing a response. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "sendMessageDenyNotification": {
              "type": "string",
              "description": "Allows a member to be notified if the member's message to the group is denied by the group owner. Possible values are:  \\ - true: When a message is rejected, send the deny message notification to the message author.\\ The defaultMessageDenyNotificationText property is dependent on the sendMessageDenyNotification property being true.\\ \\ - false: When a message is rejected, no notification is sent."
            },
            "whoCanModifyTagsAndCategories": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to change tags and categories. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanMarkFavoriteReplyOnAnyTopic": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to mark any other user's post as a favorite reply. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "whoCanMarkFavoriteReplyOnOwnTopic": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to mark a post for a topic they started as a favorite reply. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "defaultMessageDenyNotificationText": {
              "type": "string",
              "description": "When a message is rejected, this is text for the rejection notification sent to the message's author. By default, this property is empty and has no value in the API's response body. The maximum notification text size is 10,000 characters. Note: Requires sendMessageDenyNotification property to be true."
            },
            "whoCanUnmarkFavoriteReplyOnAnyTopic": {
              "type": "string",
              "description": "Deprecated. This is merged into the new whoCanAssistContent setting. Permission to unmark any post from a favorite reply. Possible values are:  \\ - ALL_MEMBERS \\ - OWNERS_AND_MANAGERS \\ - MANAGERS_ONLY \\ - OWNERS_ONLY \\ - NONE"
            },
            "customRolesEnabledForSettingsToBeMerged": {
              "type": "string",
              "description": "Specifies whether the group has a custom role that's included in one of the settings being merged. This field is read-only and update/patch requests to it are ignored. Possible values are:  \\ - true \\ - false"
            }
          },
          "description": "JSON template for Group resource"
        }
      ]
  licensing.licenseAssignments.delete:
    description: |-
      Revoke a license.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/licensing/reference/rest/v1/licenseAssignments/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  licensing.licenseAssignments.get:
    description: |-
      Get a specific user's license by product SKU.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/licensing/reference/rest/v1/licenseAssignments/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "LicenseAssignment",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "licensing#licenseAssignment",
              "description": "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "skuId": {
              "type": "string",
              "annotations": {
                "required": [
                  "licensing.licenseAssignments.update"
                ]
              },
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs."
            },
            "userId": {
              "type": "string",
              "annotations": {
                "required": [
                  "licensing.licenseAssignments.update"
                ]
              },
              "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes."
            },
            "skuName": {
              "type": "string",
              "description": "Display Name of the sku of the product."
            },
            "selfLink": {
              "type": "string",
              "description": "Link to this page."
            },
            "productId": {
              "type": "string",
              "annotations": {
                "required": [
                  "licensing.licenseAssignments.update"
                ]
              },
              "description": "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs."
            },
            "productName": {
              "type": "string",
              "description": "Display Name of the product."
            }
          },
          "description": "Representation of a license assignment."
        }
      ]
  licensing.licenseAssignments.insert:
    description: |-
      Assign a license.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/licensing/reference/rest/v1/licenseAssignments/insert
    example:
      inputs: [
        {
          "id": "LicenseAssignmentInsert",
          "type": "object",
          "properties": {
            "userId": {
              "type": "string",
              "annotations": {
                "required": [
                  "licensing.licenseAssignments.insert"
                ]
              },
              "description": "Email id of the user"
            }
          },
          "description": "Representation of a license assignment."
        }
      ]
      outputs: [
        {
          "id": "LicenseAssignment",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "licensing#licenseAssignment",
              "description": "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "skuId": {
              "type": "string",
              "annotations": {
                "required": [
                  "licensing.licenseAssignments.update"
                ]
              },
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs."
            },
            "userId": {
              "type": "string",
              "annotations": {
                "required": [
                  "licensing.licenseAssignments.update"
                ]
              },
              "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes."
            },
            "skuName": {
              "type": "string",
              "description": "Display Name of the sku of the product."
            },
            "selfLink": {
              "type": "string",
              "description": "Link to this page."
            },
            "productId": {
              "type": "string",
              "annotations": {
                "required": [
                  "licensing.licenseAssignments.update"
                ]
              },
              "description": "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs."
            },
            "productName": {
              "type": "string",
              "description": "Display Name of the product."
            }
          },
          "description": "Representation of a license assignment."
        }
      ]
  licensing.licenseAssignments.listForProduct:
    description: |-
      List all users assigned licenses for a specific product SKU.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/licensing/reference/rest/v1/licenseAssignments/listForProduct
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "LicenseAssignmentList",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "licensing#licenseAssignmentList",
              "description": "Identifies the resource as a collection of LicenseAssignments."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "LicenseAssignment",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "licensing#licenseAssignment",
                    "description": "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`."
                  },
                  "etags": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "skuId": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "licensing.licenseAssignments.update"
                      ]
                    },
                    "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs."
                  },
                  "userId": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "licensing.licenseAssignments.update"
                      ]
                    },
                    "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes."
                  },
                  "skuName": {
                    "type": "string",
                    "description": "Display Name of the sku of the product."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "Link to this page."
                  },
                  "productId": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "licensing.licenseAssignments.update"
                      ]
                    },
                    "description": "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs."
                  },
                  "productName": {
                    "type": "string",
                    "description": "Display Name of the product."
                  }
                },
                "description": "Representation of a license assignment."
              },
              "description": "The LicenseAssignments in this page of results."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The token that you must submit in a subsequent request to retrieve additional license results matching your query parameters. The `maxResults` query string is related to the `nextPageToken` since `maxResults` determines how many entries are returned on each next page."
            }
          }
        }
      ]
  licensing.licenseAssignments.listForProductAndSku:
    description: |-
      List all users assigned licenses for a specific product SKU.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/licensing/reference/rest/v1/licenseAssignments/listForProductAndSku
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "LicenseAssignmentList",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "licensing#licenseAssignmentList",
              "description": "Identifies the resource as a collection of LicenseAssignments."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "LicenseAssignment",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "licensing#licenseAssignment",
                    "description": "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`."
                  },
                  "etags": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "skuId": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "licensing.licenseAssignments.update"
                      ]
                    },
                    "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs."
                  },
                  "userId": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "licensing.licenseAssignments.update"
                      ]
                    },
                    "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes."
                  },
                  "skuName": {
                    "type": "string",
                    "description": "Display Name of the sku of the product."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "Link to this page."
                  },
                  "productId": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "licensing.licenseAssignments.update"
                      ]
                    },
                    "description": "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs."
                  },
                  "productName": {
                    "type": "string",
                    "description": "Display Name of the product."
                  }
                },
                "description": "Representation of a license assignment."
              },
              "description": "The LicenseAssignments in this page of results."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The token that you must submit in a subsequent request to retrieve additional license results matching your query parameters. The `maxResults` query string is related to the `nextPageToken` since `maxResults` determines how many entries are returned on each next page."
            }
          }
        }
      ]
  licensing.licenseAssignments.patch:
    description: |-
      Reassign a user's product SKU with a different SKU in the same product. This method supports patch semantics.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/licensing/reference/rest/v1/licenseAssignments/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "LicenseAssignment",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "licensing#licenseAssignment",
              "description": "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "skuId": {
              "type": "string",
              "annotations": {
                "required": [
                  "licensing.licenseAssignments.update"
                ]
              },
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs."
            },
            "userId": {
              "type": "string",
              "annotations": {
                "required": [
                  "licensing.licenseAssignments.update"
                ]
              },
              "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes."
            },
            "skuName": {
              "type": "string",
              "description": "Display Name of the sku of the product."
            },
            "selfLink": {
              "type": "string",
              "description": "Link to this page."
            },
            "productId": {
              "type": "string",
              "annotations": {
                "required": [
                  "licensing.licenseAssignments.update"
                ]
              },
              "description": "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs."
            },
            "productName": {
              "type": "string",
              "description": "Display Name of the product."
            }
          },
          "description": "Representation of a license assignment."
        }
      ]
  licensing.licenseAssignments.update:
    description: |-
      Reassign a user's product SKU with a different SKU in the same product.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/licensing/reference/rest/v1/licenseAssignments/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "LicenseAssignment",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "licensing#licenseAssignment",
              "description": "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`."
            },
            "etags": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "skuId": {
              "type": "string",
              "annotations": {
                "required": [
                  "licensing.licenseAssignments.update"
                ]
              },
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs."
            },
            "userId": {
              "type": "string",
              "annotations": {
                "required": [
                  "licensing.licenseAssignments.update"
                ]
              },
              "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes."
            },
            "skuName": {
              "type": "string",
              "description": "Display Name of the sku of the product."
            },
            "selfLink": {
              "type": "string",
              "description": "Link to this page."
            },
            "productId": {
              "type": "string",
              "annotations": {
                "required": [
                  "licensing.licenseAssignments.update"
                ]
              },
              "description": "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs."
            },
            "productName": {
              "type": "string",
              "description": "Display Name of the product."
            }
          },
          "description": "Representation of a license assignment."
        }
      ]
  reports.activities.list:
    description: |-
      Retrieves a list of activities for a specific customer's account and application such as the Admin console application or the Google Drive application. For more information, see the guides for administrator and Google Drive activity reports. For more information about the activity report's parameters, see the activity parameters reference guides. 
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reports/reference/rest/v1/activities/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Activities",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#reports#activities",
              "description": "The type of API resource. For an activity report, the value is `reports#activities`."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "Activity",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time of occurrence of the activity. This is in UNIX epoch time in seconds."
                      },
                      "customerId": {
                        "type": "string",
                        "description": "The unique identifier for a Google Workspace account."
                      },
                      "applicationName": {
                        "type": "string",
                        "description": "Application name to which the event belongs. For possible values see the list of applications above in `applicationName`."
                      },
                      "uniqueQualifier": {
                        "type": "string",
                        "format": "int64",
                        "description": "Unique qualifier if multiple events have the same time."
                      }
                    },
                    "description": "Unique identifier for each activity record."
                  },
                  "etag": {
                    "type": "string",
                    "description": "ETag of the entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#reports#activity",
                    "description": "The type of API resource. For an activity report, the value is `audit#activity`."
                  },
                  "actor": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "Only present when `callerType` is `KEY`. Can be the `consumer_key` of the requestor for OAuth 2LO API requests or an identifier for robot accounts."
                      },
                      "email": {
                        "type": "string",
                        "description": "The primary email address of the actor. May be absent if there is no email address associated with the actor."
                      },
                      "profileId": {
                        "type": "string",
                        "description": "The unique Google Workspace profile ID of the actor. May be absent if the actor is not a Google Workspace user."
                      },
                      "callerType": {
                        "type": "string",
                        "description": "The type of actor."
                      }
                    },
                    "description": "User doing the action."
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the event. This is the specific name of the activity reported by the API. And each `eventName` is related to a specific Google Workspace service or feature which the API organizes into types of events. For `eventName` request parameters in general: - If no `eventName` is given, the report returns all possible instances of an `eventName`. - When you request an `eventName`, the API's response returns all activities which contain that `eventName`. It is possible that the returned activities will have other `eventName` properties in addition to the one requested. For more information about `eventName` properties, see the list of event names for various applications above in `applicationName`."
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of event. The Google Workspace service or feature that an administrator changes is identified in the `type` property which identifies an event using the `eventName` property. For a full list of the API's `type` categories, see the list of event names for various applications above in `applicationName`."
                        },
                        "parameters": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the parameter."
                              },
                              "value": {
                                "type": "string",
                                "description": "String value of the parameter."
                              },
                              "intValue": {
                                "type": "string",
                                "format": "int64",
                                "description": "Integer value of the parameter."
                              },
                              "boolValue": {
                                "type": "boolean",
                                "description": "Boolean value of the parameter."
                              },
                              "multiValue": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "String values of the parameter."
                              },
                              "messageValue": {
                                "type": "object",
                                "properties": {
                                  "parameter": {
                                    "type": "array",
                                    "items": {
                                      "id": "NestedParameter",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the parameter."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "String value of the parameter."
                                        },
                                        "intValue": {
                                          "type": "string",
                                          "format": "int64",
                                          "description": "Integer value of the parameter."
                                        },
                                        "boolValue": {
                                          "type": "boolean",
                                          "description": "Boolean value of the parameter."
                                        },
                                        "multiValue": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Multiple string values of the parameter."
                                        },
                                        "multiIntValue": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "format": "int64"
                                          },
                                          "description": "Multiple integer values of the parameter."
                                        },
                                        "multiBoolValue": {
                                          "type": "array",
                                          "items": {
                                            "type": "boolean"
                                          },
                                          "description": "Multiple boolean values of the parameter."
                                        }
                                      },
                                      "description": "JSON template for a parameter used in various reports."
                                    },
                                    "description": "Parameter values"
                                  }
                                },
                                "description": "Nested parameter value pairs associated with this parameter. Complex value type for a parameter are returned as a list of parameter values. For example, the address parameter may have a value as `[{parameter: [{name: city, value: abc}]}]`"
                              },
                              "multiIntValue": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "int64"
                                },
                                "description": "Integer values of the parameter."
                              },
                              "multiMessageValue": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "parameter": {
                                      "type": "array",
                                      "items": {
                                        "id": "NestedParameter",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the parameter."
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "String value of the parameter."
                                          },
                                          "intValue": {
                                            "type": "string",
                                            "format": "int64",
                                            "description": "Integer value of the parameter."
                                          },
                                          "boolValue": {
                                            "type": "boolean",
                                            "description": "Boolean value of the parameter."
                                          },
                                          "multiValue": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            },
                                            "description": "Multiple string values of the parameter."
                                          },
                                          "multiIntValue": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "format": "int64"
                                            },
                                            "description": "Multiple integer values of the parameter."
                                          },
                                          "multiBoolValue": {
                                            "type": "array",
                                            "items": {
                                              "type": "boolean"
                                            },
                                            "description": "Multiple boolean values of the parameter."
                                          }
                                        },
                                        "description": "JSON template for a parameter used in various reports."
                                      },
                                      "description": "Parameter values"
                                    }
                                  }
                                },
                                "description": "List of `messageValue` objects."
                              }
                            }
                          },
                          "description": "Parameter value pairs for various applications. For more information about `eventName` parameters, see the list of event names for various applications above in `applicationName`."
                        }
                      }
                    },
                    "description": "Activity events in the report."
                  },
                  "ipAddress": {
                    "type": "string",
                    "description": "IP address of the user doing the action. This is the Internet Protocol (IP) address of the user when logging into Google Workspace, which may or may not reflect the user's physical location. For example, the IP address can be the user's proxy server's address or a virtual private network (VPN) address. The API supports IPv4 and IPv6."
                  },
                  "ownerDomain": {
                    "type": "string",
                    "description": "This is the domain that is affected by the report's event. For example domain of Admin console or the Drive application's document owner."
                  }
                },
                "description": "JSON template for the activity resource."
              },
              "description": "Each activity record in the response."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token for retrieving the follow-on next page of the report. The `nextPageToken` value is used in the request's `pageToken` query string."
            }
          },
          "description": "JSON template for a collection of activities."
        }
      ]
  reports.activities.watch:
    description: |-
      Start receiving notifications for account activities. For more information, see Receiving Push Notifications.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reports/reference/rest/v1/activities/watch
    example:
      inputs: [
        {
          "id": "Channel",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
              "type": "string",
              "default": "api#channel",
              "description": "Identifies this as a notification channel used to watch for changes to a resource, which is \"`api#channel`\"."
            },
            "type": {
              "type": "string",
              "description": "The type of delivery mechanism used for this channel. The value should be set to `\"web_hook\"`."
            },
            "token": {
              "type": "string",
              "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "params": {
              "type": "object",
              "description": "Additional parameters controlling delivery channel behavior. Optional.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "address": {
              "type": "string",
              "description": "The address where notifications are delivered for this channel."
            },
            "payload": {
              "type": "boolean",
              "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "expiration": {
              "type": "string",
              "format": "int64",
              "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional."
            },
            "resourceId": {
              "type": "string",
              "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
              "type": "string",
              "description": "A version-specific identifier for the watched resource."
            }
          },
          "description": "A notification channel used to watch for resource changes."
        }
      ]
      outputs: [
        {}
      ]
  admin.channels.stop:
    description: |-
      Stop watching resources through this channel.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reports/reference/rest/v1/channels/stop
    example:
      inputs: [
        {
          "id": "Channel",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
              "type": "string",
              "default": "api#channel",
              "description": "Identifies this as a notification channel used to watch for changes to a resource, which is \"`api#channel`\"."
            },
            "type": {
              "type": "string",
              "description": "The type of delivery mechanism used for this channel. The value should be set to `\"web_hook\"`."
            },
            "token": {
              "type": "string",
              "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "params": {
              "type": "object",
              "description": "Additional parameters controlling delivery channel behavior. Optional.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "address": {
              "type": "string",
              "description": "The address where notifications are delivered for this channel."
            },
            "payload": {
              "type": "boolean",
              "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "expiration": {
              "type": "string",
              "format": "int64",
              "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional."
            },
            "resourceId": {
              "type": "string",
              "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
              "type": "string",
              "description": "A version-specific identifier for the watched resource."
            }
          },
          "description": "A notification channel used to watch for resource changes."
        }
      ]
      outputs: [
        {}
      ]
  reports.customerUsageReports.get:
    description: |-
      Retrieves a report which is a collection of properties and statistics for a specific customer's account. For more information, see the Customers Usage Report guide. For more information about the customer report's parameters, see the Customers Usage parameters reference guides. 
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reports/reference/rest/v1/customerUsageReports/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "UsageReports",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#reports#usageReports",
              "description": "The type of API resource. For a usage report, the value is `admin#reports#usageReports`."
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Machine readable code or warning type. The warning code value is `200`."
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Key associated with a key-value pair to give detailed information on the warning."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value associated with a key-value pair to give detailed information on the warning."
                        }
                      }
                    },
                    "description": "Key-value pairs to give detailed information on the warning."
                  },
                  "message": {
                    "type": "string",
                    "description": "The human readable messages for a warning are: - Data is not available warning - Sorry, data for date yyyy-mm-dd for application \"`application name`\" is not available. - Partial data is available warning - Data for date yyyy-mm-dd for application \"`application name`\" is not available right now, please try again after a few hours. "
                  }
                }
              },
              "description": "Warnings, if any."
            },
            "usageReports": {
              "type": "array",
              "items": {
                "id": "UsageReport",
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The date of the report request."
                  },
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#reports#usageReport",
                    "description": "The type of API resource. For a usage report, the value is `admin#reports#usageReport`."
                  },
                  "entity": {
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The type of item. The value is `user`."
                      },
                      "entityId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. Object key. Only relevant if entity.type = \"OBJECT\" Note: external-facing name of report is \"Entities\" rather than \"Objects\"."
                      },
                      "profileId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The user's immutable Google Workspace profile identifier."
                      },
                      "userEmail": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The user's email address. Only relevant if entity.type = \"USER\""
                      },
                      "customerId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The unique identifier of the customer's account."
                      }
                    },
                    "description": "Output only. Information about the type of the item."
                  },
                  "parameters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the parameter. For the User Usage Report parameter names, see the User Usage parameters reference."
                        },
                        "intValue": {
                          "type": "string",
                          "format": "int64",
                          "readOnly": true,
                          "description": "Output only. Integer value of the parameter."
                        },
                        "msgValue": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "any",
                              "description": "Properties of the object."
                            }
                          },
                          "readOnly": true,
                          "description": "Output only. Nested message value of the parameter."
                        },
                        "boolValue": {
                          "type": "boolean",
                          "readOnly": true,
                          "description": "Output only. Boolean value of the parameter."
                        },
                        "stringValue": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. String value of the parameter."
                        },
                        "datetimeValue": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The RFC 3339 formatted value of the parameter, for example 2010-10-28T10:26:35.000Z."
                        }
                      }
                    },
                    "readOnly": true,
                    "description": "Output only. Parameter value pairs for various applications. For the Entity Usage Report parameters and values, see [the Entity Usage parameters reference](/admin-sdk/reports/v1/reference/usage-ref-appendix-a/entities)."
                  }
                },
                "description": "JSON template for a usage report."
              },
              "description": "Various application parameter records."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token to specify next page. A report with multiple pages has a `nextPageToken` property in the response. For your follow-on requests getting all of the report's pages, enter the `nextPageToken` value in the `pageToken` query string."
            }
          }
        }
      ]
  reports.entityUsageReports.get:
    description: |-
      Retrieves a report which is a collection of properties and statistics for entities used by users within the account. For more information, see the Entities Usage Report guide. For more information about the entities report's parameters, see the Entities Usage parameters reference guides.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reports/reference/rest/v1/entityUsageReports/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "UsageReports",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#reports#usageReports",
              "description": "The type of API resource. For a usage report, the value is `admin#reports#usageReports`."
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Machine readable code or warning type. The warning code value is `200`."
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Key associated with a key-value pair to give detailed information on the warning."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value associated with a key-value pair to give detailed information on the warning."
                        }
                      }
                    },
                    "description": "Key-value pairs to give detailed information on the warning."
                  },
                  "message": {
                    "type": "string",
                    "description": "The human readable messages for a warning are: - Data is not available warning - Sorry, data for date yyyy-mm-dd for application \"`application name`\" is not available. - Partial data is available warning - Data for date yyyy-mm-dd for application \"`application name`\" is not available right now, please try again after a few hours. "
                  }
                }
              },
              "description": "Warnings, if any."
            },
            "usageReports": {
              "type": "array",
              "items": {
                "id": "UsageReport",
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The date of the report request."
                  },
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#reports#usageReport",
                    "description": "The type of API resource. For a usage report, the value is `admin#reports#usageReport`."
                  },
                  "entity": {
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The type of item. The value is `user`."
                      },
                      "entityId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. Object key. Only relevant if entity.type = \"OBJECT\" Note: external-facing name of report is \"Entities\" rather than \"Objects\"."
                      },
                      "profileId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The user's immutable Google Workspace profile identifier."
                      },
                      "userEmail": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The user's email address. Only relevant if entity.type = \"USER\""
                      },
                      "customerId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The unique identifier of the customer's account."
                      }
                    },
                    "description": "Output only. Information about the type of the item."
                  },
                  "parameters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the parameter. For the User Usage Report parameter names, see the User Usage parameters reference."
                        },
                        "intValue": {
                          "type": "string",
                          "format": "int64",
                          "readOnly": true,
                          "description": "Output only. Integer value of the parameter."
                        },
                        "msgValue": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "any",
                              "description": "Properties of the object."
                            }
                          },
                          "readOnly": true,
                          "description": "Output only. Nested message value of the parameter."
                        },
                        "boolValue": {
                          "type": "boolean",
                          "readOnly": true,
                          "description": "Output only. Boolean value of the parameter."
                        },
                        "stringValue": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. String value of the parameter."
                        },
                        "datetimeValue": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The RFC 3339 formatted value of the parameter, for example 2010-10-28T10:26:35.000Z."
                        }
                      }
                    },
                    "readOnly": true,
                    "description": "Output only. Parameter value pairs for various applications. For the Entity Usage Report parameters and values, see [the Entity Usage parameters reference](/admin-sdk/reports/v1/reference/usage-ref-appendix-a/entities)."
                  }
                },
                "description": "JSON template for a usage report."
              },
              "description": "Various application parameter records."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token to specify next page. A report with multiple pages has a `nextPageToken` property in the response. For your follow-on requests getting all of the report's pages, enter the `nextPageToken` value in the `pageToken` query string."
            }
          }
        }
      ]
  reports.userUsageReport.get:
    description: |-
      Retrieves a report which is a collection of properties and statistics for a set of users with the account. For more information, see the User Usage Report guide. For more information about the user report's parameters, see the Users Usage parameters reference guides.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reports/reference/rest/v1/userUsageReport/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "UsageReports",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "ETag of the resource."
            },
            "kind": {
              "type": "string",
              "default": "admin#reports#usageReports",
              "description": "The type of API resource. For a usage report, the value is `admin#reports#usageReports`."
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Machine readable code or warning type. The warning code value is `200`."
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Key associated with a key-value pair to give detailed information on the warning."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value associated with a key-value pair to give detailed information on the warning."
                        }
                      }
                    },
                    "description": "Key-value pairs to give detailed information on the warning."
                  },
                  "message": {
                    "type": "string",
                    "description": "The human readable messages for a warning are: - Data is not available warning - Sorry, data for date yyyy-mm-dd for application \"`application name`\" is not available. - Partial data is available warning - Data for date yyyy-mm-dd for application \"`application name`\" is not available right now, please try again after a few hours. "
                  }
                }
              },
              "description": "Warnings, if any."
            },
            "usageReports": {
              "type": "array",
              "items": {
                "id": "UsageReport",
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The date of the report request."
                  },
                  "etag": {
                    "type": "string",
                    "description": "ETag of the resource."
                  },
                  "kind": {
                    "type": "string",
                    "default": "admin#reports#usageReport",
                    "description": "The type of API resource. For a usage report, the value is `admin#reports#usageReport`."
                  },
                  "entity": {
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The type of item. The value is `user`."
                      },
                      "entityId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. Object key. Only relevant if entity.type = \"OBJECT\" Note: external-facing name of report is \"Entities\" rather than \"Objects\"."
                      },
                      "profileId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The user's immutable Google Workspace profile identifier."
                      },
                      "userEmail": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The user's email address. Only relevant if entity.type = \"USER\""
                      },
                      "customerId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The unique identifier of the customer's account."
                      }
                    },
                    "description": "Output only. Information about the type of the item."
                  },
                  "parameters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the parameter. For the User Usage Report parameter names, see the User Usage parameters reference."
                        },
                        "intValue": {
                          "type": "string",
                          "format": "int64",
                          "readOnly": true,
                          "description": "Output only. Integer value of the parameter."
                        },
                        "msgValue": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "any",
                              "description": "Properties of the object."
                            }
                          },
                          "readOnly": true,
                          "description": "Output only. Nested message value of the parameter."
                        },
                        "boolValue": {
                          "type": "boolean",
                          "readOnly": true,
                          "description": "Output only. Boolean value of the parameter."
                        },
                        "stringValue": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. String value of the parameter."
                        },
                        "datetimeValue": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The RFC 3339 formatted value of the parameter, for example 2010-10-28T10:26:35.000Z."
                        }
                      }
                    },
                    "readOnly": true,
                    "description": "Output only. Parameter value pairs for various applications. For the Entity Usage Report parameters and values, see [the Entity Usage parameters reference](/admin-sdk/reports/v1/reference/usage-ref-appendix-a/entities)."
                  }
                },
                "description": "JSON template for a usage report."
              },
              "description": "Various application parameter records."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token to specify next page. A report with multiple pages has a `nextPageToken` property in the response. For your follow-on requests getting all of the report's pages, enter the `nextPageToken` value in the `pageToken` query string."
            }
          }
        }
      ]
  reseller.customers.get:
    description: |-
      Get a customer account. Use this operation to see a customer account already in your reseller management, or to see the minimal account information for an existing customer that you do not manage. For more information about the API response for existing customers, see [retrieving a customer account](/admin-sdk/reseller/v1/how-tos/manage_customers#get_customer).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/customers/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Customer",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "reseller#customer",
              "description": "Identifies the resource as a customer. Value: `reseller#customer`"
            },
            "customerId": {
              "type": "string",
              "description": "This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google."
            },
            "phoneNumber": {
              "type": "string",
              "description": "Customer contact phone number. Must start with \"+\" followed by the country code. The rest of the number can be contiguous numbers or respect the phone local format conventions, but it must be a real phone number and not, for example, \"123\". This field is silently ignored if invalid."
            },
            "customerType": {
              "enum": [
                "CUSTOMER_TYPE_UNSPECIFIED",
                "DOMAIN",
                "TEAM"
              ],
              "type": "string",
              "description": "The type of the customer (DOMAIN or TEAM), default is DOMAIN.",
              "enumDescriptions": [
                "Customer type not known",
                "Domained or domain owning customers",
                "Domainless customers"
              ]
            },
            "primaryAdmin": {
              "id": "PrimaryAdmin",
              "type": "object",
              "properties": {
                "primaryEmail": {
                  "type": "string",
                  "description": "Primary admin's domained email This email's domain will be used to create TEAM customer"
                }
              },
              "description": "The first admin details of the customer, present in case of TEAM customer."
            },
            "postalAddress": {
              "id": "Address",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "customers#address",
                  "description": "Identifies the resource as a customer address. Value: `customers#address`"
                },
                "region": {
                  "type": "string",
                  "description": "An example of a `region` value is `CA` for the state of California."
                },
                "locality": {
                  "type": "string",
                  "description": "An example of a `locality` value is the city of `San Francisco`."
                },
                "postalCode": {
                  "type": "string",
                  "description": "A `postalCode` example is a postal zip code such as `94043`. This property is required when creating a new customer."
                },
                "contactName": {
                  "type": "string",
                  "description": "The customer contact's name. This is required."
                },
                "countryCode": {
                  "type": "string",
                  "description": "For `countryCode` information, see the ISO 3166 country code elements. Verify that country is approved for resale of Google products. This property is required when creating a new customer."
                },
                "addressLine1": {
                  "type": "string",
                  "description": "A customer's physical address. An address can be composed of one to three lines. The `addressline2` and `addressLine3` are optional."
                },
                "addressLine2": {
                  "type": "string",
                  "description": "Line 2 of the address."
                },
                "addressLine3": {
                  "type": "string",
                  "description": "Line 3 of the address."
                },
                "organizationName": {
                  "type": "string",
                  "description": "The company or company division name. This is required."
                }
              },
              "description": "A customer's address information. Each field has a limit of 255 charcters."
            },
            "resourceUiUrl": {
              "type": "string",
              "description": "URL to customer's Admin console dashboard. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task in the Admin console."
            },
            "alternateEmail": {
              "type": "string",
              "description": "Like the \"Customer email\" in the reseller tools, this email is the secondary contact used if something happens to the customer's service such as service outage or a security issue. This property is required when creating a new customer and should not use the same domain as `customerDomain`."
            },
            "customerDomain": {
              "type": "string",
              "description": "The customer's primary domain name string. `customerDomain` is required when creating a new customer. Do not include the `www` prefix in the domain when adding a customer."
            },
            "customerDomainVerified": {
              "type": "boolean",
              "description": "Whether the customer's primary domain has been verified."
            }
          },
          "description": "When a Google customer's account is registered with a reseller, the customer's subscriptions for Google services are managed by this reseller. A customer is described by a primary domain name and a physical address."
        }
      ]
  reseller.customers.insert:
    description: |-
      Order a new customer's account. Before ordering a new customer account, establish whether the customer account already exists using the [`customers.get`](/admin-sdk/reseller/v1/reference/customers/get) If the customer account exists as a direct Google account or as a resold customer account from another reseller, use the `customerAuthToken\` as described in [order a resold account for an existing customer](/admin-sdk/reseller/v1/how-tos/manage_customers#create_existing_customer). For more information about ordering a new customer account, see [order a new customer account](/admin-sdk/reseller/v1/how-tos/manage_customers#create_customer). After creating a new customer account, you must provision a user as an administrator. The customer's administrator is required to sign in to the Admin console and sign the G Suite via Reseller agreement to activate the account. Resellers are prohibited from signing the G Suite via Reseller agreement on the customer's behalf. For more information, see [order a new customer account](/admin-sdk/reseller/v1/how-tos/manage_customers#tos).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/customers/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Customer",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "reseller#customer",
              "description": "Identifies the resource as a customer. Value: `reseller#customer`"
            },
            "customerId": {
              "type": "string",
              "description": "This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google."
            },
            "phoneNumber": {
              "type": "string",
              "description": "Customer contact phone number. Must start with \"+\" followed by the country code. The rest of the number can be contiguous numbers or respect the phone local format conventions, but it must be a real phone number and not, for example, \"123\". This field is silently ignored if invalid."
            },
            "customerType": {
              "enum": [
                "CUSTOMER_TYPE_UNSPECIFIED",
                "DOMAIN",
                "TEAM"
              ],
              "type": "string",
              "description": "The type of the customer (DOMAIN or TEAM), default is DOMAIN.",
              "enumDescriptions": [
                "Customer type not known",
                "Domained or domain owning customers",
                "Domainless customers"
              ]
            },
            "primaryAdmin": {
              "id": "PrimaryAdmin",
              "type": "object",
              "properties": {
                "primaryEmail": {
                  "type": "string",
                  "description": "Primary admin's domained email This email's domain will be used to create TEAM customer"
                }
              },
              "description": "The first admin details of the customer, present in case of TEAM customer."
            },
            "postalAddress": {
              "id": "Address",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "customers#address",
                  "description": "Identifies the resource as a customer address. Value: `customers#address`"
                },
                "region": {
                  "type": "string",
                  "description": "An example of a `region` value is `CA` for the state of California."
                },
                "locality": {
                  "type": "string",
                  "description": "An example of a `locality` value is the city of `San Francisco`."
                },
                "postalCode": {
                  "type": "string",
                  "description": "A `postalCode` example is a postal zip code such as `94043`. This property is required when creating a new customer."
                },
                "contactName": {
                  "type": "string",
                  "description": "The customer contact's name. This is required."
                },
                "countryCode": {
                  "type": "string",
                  "description": "For `countryCode` information, see the ISO 3166 country code elements. Verify that country is approved for resale of Google products. This property is required when creating a new customer."
                },
                "addressLine1": {
                  "type": "string",
                  "description": "A customer's physical address. An address can be composed of one to three lines. The `addressline2` and `addressLine3` are optional."
                },
                "addressLine2": {
                  "type": "string",
                  "description": "Line 2 of the address."
                },
                "addressLine3": {
                  "type": "string",
                  "description": "Line 3 of the address."
                },
                "organizationName": {
                  "type": "string",
                  "description": "The company or company division name. This is required."
                }
              },
              "description": "A customer's address information. Each field has a limit of 255 charcters."
            },
            "resourceUiUrl": {
              "type": "string",
              "description": "URL to customer's Admin console dashboard. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task in the Admin console."
            },
            "alternateEmail": {
              "type": "string",
              "description": "Like the \"Customer email\" in the reseller tools, this email is the secondary contact used if something happens to the customer's service such as service outage or a security issue. This property is required when creating a new customer and should not use the same domain as `customerDomain`."
            },
            "customerDomain": {
              "type": "string",
              "description": "The customer's primary domain name string. `customerDomain` is required when creating a new customer. Do not include the `www` prefix in the domain when adding a customer."
            },
            "customerDomainVerified": {
              "type": "boolean",
              "description": "Whether the customer's primary domain has been verified."
            }
          },
          "description": "When a Google customer's account is registered with a reseller, the customer's subscriptions for Google services are managed by this reseller. A customer is described by a primary domain name and a physical address."
        }
      ]
  reseller.customers.patch:
    description: |-
      Update a customer account's settings. This method supports patch semantics.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/customers/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Customer",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "reseller#customer",
              "description": "Identifies the resource as a customer. Value: `reseller#customer`"
            },
            "customerId": {
              "type": "string",
              "description": "This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google."
            },
            "phoneNumber": {
              "type": "string",
              "description": "Customer contact phone number. Must start with \"+\" followed by the country code. The rest of the number can be contiguous numbers or respect the phone local format conventions, but it must be a real phone number and not, for example, \"123\". This field is silently ignored if invalid."
            },
            "customerType": {
              "enum": [
                "CUSTOMER_TYPE_UNSPECIFIED",
                "DOMAIN",
                "TEAM"
              ],
              "type": "string",
              "description": "The type of the customer (DOMAIN or TEAM), default is DOMAIN.",
              "enumDescriptions": [
                "Customer type not known",
                "Domained or domain owning customers",
                "Domainless customers"
              ]
            },
            "primaryAdmin": {
              "id": "PrimaryAdmin",
              "type": "object",
              "properties": {
                "primaryEmail": {
                  "type": "string",
                  "description": "Primary admin's domained email This email's domain will be used to create TEAM customer"
                }
              },
              "description": "The first admin details of the customer, present in case of TEAM customer."
            },
            "postalAddress": {
              "id": "Address",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "customers#address",
                  "description": "Identifies the resource as a customer address. Value: `customers#address`"
                },
                "region": {
                  "type": "string",
                  "description": "An example of a `region` value is `CA` for the state of California."
                },
                "locality": {
                  "type": "string",
                  "description": "An example of a `locality` value is the city of `San Francisco`."
                },
                "postalCode": {
                  "type": "string",
                  "description": "A `postalCode` example is a postal zip code such as `94043`. This property is required when creating a new customer."
                },
                "contactName": {
                  "type": "string",
                  "description": "The customer contact's name. This is required."
                },
                "countryCode": {
                  "type": "string",
                  "description": "For `countryCode` information, see the ISO 3166 country code elements. Verify that country is approved for resale of Google products. This property is required when creating a new customer."
                },
                "addressLine1": {
                  "type": "string",
                  "description": "A customer's physical address. An address can be composed of one to three lines. The `addressline2` and `addressLine3` are optional."
                },
                "addressLine2": {
                  "type": "string",
                  "description": "Line 2 of the address."
                },
                "addressLine3": {
                  "type": "string",
                  "description": "Line 3 of the address."
                },
                "organizationName": {
                  "type": "string",
                  "description": "The company or company division name. This is required."
                }
              },
              "description": "A customer's address information. Each field has a limit of 255 charcters."
            },
            "resourceUiUrl": {
              "type": "string",
              "description": "URL to customer's Admin console dashboard. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task in the Admin console."
            },
            "alternateEmail": {
              "type": "string",
              "description": "Like the \"Customer email\" in the reseller tools, this email is the secondary contact used if something happens to the customer's service such as service outage or a security issue. This property is required when creating a new customer and should not use the same domain as `customerDomain`."
            },
            "customerDomain": {
              "type": "string",
              "description": "The customer's primary domain name string. `customerDomain` is required when creating a new customer. Do not include the `www` prefix in the domain when adding a customer."
            },
            "customerDomainVerified": {
              "type": "boolean",
              "description": "Whether the customer's primary domain has been verified."
            }
          },
          "description": "When a Google customer's account is registered with a reseller, the customer's subscriptions for Google services are managed by this reseller. A customer is described by a primary domain name and a physical address."
        }
      ]
  reseller.customers.update:
    description: |-
      Update a customer account's settings. For more information, see [update a customer's settings](/admin-sdk/reseller/v1/how-tos/manage_customers#update_customer).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/customers/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Customer",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "reseller#customer",
              "description": "Identifies the resource as a customer. Value: `reseller#customer`"
            },
            "customerId": {
              "type": "string",
              "description": "This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google."
            },
            "phoneNumber": {
              "type": "string",
              "description": "Customer contact phone number. Must start with \"+\" followed by the country code. The rest of the number can be contiguous numbers or respect the phone local format conventions, but it must be a real phone number and not, for example, \"123\". This field is silently ignored if invalid."
            },
            "customerType": {
              "enum": [
                "CUSTOMER_TYPE_UNSPECIFIED",
                "DOMAIN",
                "TEAM"
              ],
              "type": "string",
              "description": "The type of the customer (DOMAIN or TEAM), default is DOMAIN.",
              "enumDescriptions": [
                "Customer type not known",
                "Domained or domain owning customers",
                "Domainless customers"
              ]
            },
            "primaryAdmin": {
              "id": "PrimaryAdmin",
              "type": "object",
              "properties": {
                "primaryEmail": {
                  "type": "string",
                  "description": "Primary admin's domained email This email's domain will be used to create TEAM customer"
                }
              },
              "description": "The first admin details of the customer, present in case of TEAM customer."
            },
            "postalAddress": {
              "id": "Address",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "customers#address",
                  "description": "Identifies the resource as a customer address. Value: `customers#address`"
                },
                "region": {
                  "type": "string",
                  "description": "An example of a `region` value is `CA` for the state of California."
                },
                "locality": {
                  "type": "string",
                  "description": "An example of a `locality` value is the city of `San Francisco`."
                },
                "postalCode": {
                  "type": "string",
                  "description": "A `postalCode` example is a postal zip code such as `94043`. This property is required when creating a new customer."
                },
                "contactName": {
                  "type": "string",
                  "description": "The customer contact's name. This is required."
                },
                "countryCode": {
                  "type": "string",
                  "description": "For `countryCode` information, see the ISO 3166 country code elements. Verify that country is approved for resale of Google products. This property is required when creating a new customer."
                },
                "addressLine1": {
                  "type": "string",
                  "description": "A customer's physical address. An address can be composed of one to three lines. The `addressline2` and `addressLine3` are optional."
                },
                "addressLine2": {
                  "type": "string",
                  "description": "Line 2 of the address."
                },
                "addressLine3": {
                  "type": "string",
                  "description": "Line 3 of the address."
                },
                "organizationName": {
                  "type": "string",
                  "description": "The company or company division name. This is required."
                }
              },
              "description": "A customer's address information. Each field has a limit of 255 charcters."
            },
            "resourceUiUrl": {
              "type": "string",
              "description": "URL to customer's Admin console dashboard. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task in the Admin console."
            },
            "alternateEmail": {
              "type": "string",
              "description": "Like the \"Customer email\" in the reseller tools, this email is the secondary contact used if something happens to the customer's service such as service outage or a security issue. This property is required when creating a new customer and should not use the same domain as `customerDomain`."
            },
            "customerDomain": {
              "type": "string",
              "description": "The customer's primary domain name string. `customerDomain` is required when creating a new customer. Do not include the `www` prefix in the domain when adding a customer."
            },
            "customerDomainVerified": {
              "type": "boolean",
              "description": "Whether the customer's primary domain has been verified."
            }
          },
          "description": "When a Google customer's account is registered with a reseller, the customer's subscriptions for Google services are managed by this reseller. A customer is described by a primary domain name and a physical address."
        }
      ]
  reseller.resellernotify.getwatchdetails:
    description: |-
      Returns all the details of the watch corresponding to the reseller.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/resellernotify/getwatchdetails
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ResellernotifyGetwatchdetailsResponse",
          "type": "object",
          "properties": {
            "topicName": {
              "type": "string",
              "description": "Topic name of the PubSub"
            },
            "serviceAccountEmailAddresses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of registered service accounts."
            }
          },
          "description": "JSON template for resellernotify getwatchdetails response."
        }
      ]
  reseller.resellernotify.register:
    description: |-
      Registers a Reseller for receiving notifications.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/resellernotify/register
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ResellernotifyResource",
          "type": "object",
          "properties": {
            "topicName": {
              "type": "string",
              "description": "Topic name of the PubSub"
            }
          },
          "description": "JSON template for resellernotify response."
        }
      ]
  reseller.resellernotify.unregister:
    description: |-
      Unregisters a Reseller for receiving notifications.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/resellernotify/unregister
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ResellernotifyResource",
          "type": "object",
          "properties": {
            "topicName": {
              "type": "string",
              "description": "Topic name of the PubSub"
            }
          },
          "description": "JSON template for resellernotify response."
        }
      ]
  reseller.subscriptions.activate:
    description: |-
      Activates a subscription previously suspended by the reseller. If you did not suspend the customer subscription and it is suspended for any other reason, such as for abuse or a pending ToS acceptance, this call will not reactivate the customer subscription.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/subscriptions/activate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Subscription",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "reseller#subscription",
              "description": "Identifies the resource as a Subscription. Value: `reseller#subscription`"
            },
            "plan": {
              "type": "object",
              "properties": {
                "planName": {
                  "type": "string",
                  "description": "The `planName` property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` — The annual commitment plan with monthly payments. *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` — The annual commitment plan with yearly payments - `FLEXIBLE` — The flexible plan - `TRIAL` — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling `changePlan` will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its 30th free day or immediately after calling `startPaidService`. - `FREE` — The free plan is exclusive to the Cloud Identity SKU and does not incur any billing. "
                },
                "isCommitmentPlan": {
                  "type": "boolean",
                  "description": "The `isCommitmentPlan` property's boolean value identifies the plan as an annual commitment plan: - `true` — The subscription's plan is an annual commitment plan. - `false` — The plan is not an annual commitment plan. "
                },
                "commitmentInterval": {
                  "type": "object",
                  "properties": {
                    "endTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `endTime` in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                    },
                    "startTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `startTime` in milliseconds using UNIX Epoch format. See an example Epoch converter."
                    }
                  },
                  "description": "In this version of the API, annual commitment plan's interval is one year. *Note: *When `billingMethod` value is `OFFLINE`, the subscription property object `plan.commitmentInterval` is omitted in all API responses. "
                }
              },
              "description": "The `plan` property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial plan. For more information about the API\"s payment plans, see the API concepts."
            },
            "seats": {
              "id": "Seats",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#seats",
                  "description": "Identifies the resource as a subscription seat setting. Value: `subscriptions#seats`"
                },
                "numberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `ANNUAL_MONTHLY_PAY` and `ANNUAL_YEARLY_PAY` plans. This property sets the maximum number of licenses assignable to users on a subscription. The reseller can add more licenses, but once set, the `numberOfSeats` cannot be reduced until renewal. The reseller is invoiced based on the `numberOfSeats` value regardless of how many of these user licenses are assigned. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "maximumNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `FLEXIBLE` or `TRIAL` plans. This property sets the maximum number of licensed users allowed on a subscription. This quantity can be increased up to the maximum limit defined in the reseller's contract. The minimum quantity is the current number of users in the customer account. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "licensedNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Read-only field containing the current number of users that are assigned a license for the product defined in `skuId`. This field's value is equivalent to the numerical count of users returned by the Enterprise License Manager API method: [`listForProductAndSku`](/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku)."
                }
              },
              "description": "This is a required property. The number and limit of user seat licenses in the plan."
            },
            "skuId": {
              "type": "string",
              "description": "A required property. The `skuId` is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "status": {
              "type": "string",
              "description": "This is an optional property."
            },
            "skuName": {
              "type": "string",
              "description": "Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "dealCode": {
              "type": "string",
              "description": "Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `insert` requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty."
            },
            "customerId": {
              "type": "string",
              "description": "This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google."
            },
            "creationTime": {
              "type": "string",
              "format": "int64",
              "description": "The `creationTime` property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter."
            },
            "transferInfo": {
              "type": "object",
              "properties": {
                "currentLegacySkuId": {
                  "type": "string",
                  "description": "Sku id of the current resold subscription. This is populated only when customer has subscription with legacy sku and the subscription resource is populated with recommeded sku for transfer in."
                },
                "minimumTransferableSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When inserting a subscription, this is the minimum number of seats listed in the transfer order for this product. For example, if the customer has 20 users, the reseller cannot place a transfer order of 15 seats. The minimum is 20 seats."
                },
                "transferabilityExpirationTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "The time when transfer token or intent to transfer will expire. The time is in milliseconds using UNIX Epoch format."
                }
              },
              "description": "Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer."
            },
            "billingMethod": {
              "type": "string",
              "description": "Read-only field that returns the current billing method for a subscription."
            },
            "resourceUiUrl": {
              "type": "string",
              "description": "URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console."
            },
            "trialSettings": {
              "type": "object",
              "properties": {
                "isInTrial": {
                  "type": "boolean",
                  "description": "Determines if a subscription's plan is in a 30-day free trial or not: - `true` — The plan is in trial. - `false` — The plan is not in trial. "
                },
                "trialEndTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                }
              },
              "description": "The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts."
            },
            "customerDomain": {
              "type": "string",
              "description": "Primary domain name of the customer"
            },
            "subscriptionId": {
              "type": "string",
              "description": "The `subscriptionId` is the subscription identifier and is unique for each customer. This is a required property. Since a `subscriptionId` changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the `subscriptionId` as described in retrieve all reseller subscriptions."
            },
            "purchaseOrderId": {
              "type": "string",
              "description": "This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters."
            },
            "renewalSettings": {
              "id": "RenewalSettings",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#renewalSettings",
                  "description": "Identifies the resource as a subscription renewal setting. Value: `subscriptions#renewalSettings`"
                },
                "renewalType": {
                  "type": "string",
                  "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a subscription, the `renewalType` is a required property."
                }
              },
              "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center."
            },
            "suspensionReasons": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's `STATUS` is `SUSPENDED` until all pending suspensions are removed. Possible options include: - `PENDING_TOS_ACCEPTANCE` - The customer has not logged in and accepted the G Suite Resold Terms of Services. - `RENEWAL_WITH_TYPE_CANCEL` - The customer's commitment ended and their service was cancelled at the end of their term. - `RESELLER_INITIATED` - A manual suspension invoked by a Reseller. - `TRIAL_ENDED` - The customer's trial expired without a plan selected. - `OTHER` - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). "
            }
          },
          "description": "JSON template for a subscription."
        }
      ]
  reseller.subscriptions.changePlan:
    description: |-
      Update a subscription plan. Use this method to update a plan for a 30-day trial or a flexible plan subscription to an annual commitment plan with monthly or yearly payments. How a plan is updated differs depending on the plan and the products. For more information, see the description in [manage subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#update_subscription_plan).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/subscriptions/changePlan
    example:
      inputs: [
        {
          "id": "ChangePlanRequest",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "subscriptions#changePlanRequest",
              "description": "Identifies the resource as a subscription change plan request. Value: `subscriptions#changePlanRequest`"
            },
            "seats": {
              "id": "Seats",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#seats",
                  "description": "Identifies the resource as a subscription seat setting. Value: `subscriptions#seats`"
                },
                "numberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `ANNUAL_MONTHLY_PAY` and `ANNUAL_YEARLY_PAY` plans. This property sets the maximum number of licenses assignable to users on a subscription. The reseller can add more licenses, but once set, the `numberOfSeats` cannot be reduced until renewal. The reseller is invoiced based on the `numberOfSeats` value regardless of how many of these user licenses are assigned. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "maximumNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `FLEXIBLE` or `TRIAL` plans. This property sets the maximum number of licensed users allowed on a subscription. This quantity can be increased up to the maximum limit defined in the reseller's contract. The minimum quantity is the current number of users in the customer account. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "licensedNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Read-only field containing the current number of users that are assigned a license for the product defined in `skuId`. This field's value is equivalent to the numerical count of users returned by the Enterprise License Manager API method: [`listForProductAndSku`](/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku)."
                }
              },
              "description": "This is a required property. The seats property is the number of user seat licenses."
            },
            "dealCode": {
              "type": "string",
              "description": "Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `changePlan` request in order to receive discounted rate. This property is optional. If a deal code has already been added to a subscription, this property may be left empty and the existing discounted rate will still apply (if not empty, only provide the deal code that is already present on the subscription). If a deal code has never been added to a subscription and this property is left blank, regular pricing will apply."
            },
            "planName": {
              "type": "string",
              "description": "The `planName` property is required. This is the name of the subscription's payment plan. For more information about the Google payment plans, see API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` - The annual commitment plan with monthly payments *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` - The annual commitment plan with yearly payments - `FLEXIBLE` - The flexible plan - `TRIAL` - The 30-day free trial plan "
            },
            "purchaseOrderId": {
              "type": "string",
              "description": "This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters."
            }
          },
          "description": "JSON template for the ChangePlan rpc request."
        }
      ]
      outputs: [
        {
          "id": "Subscription",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "reseller#subscription",
              "description": "Identifies the resource as a Subscription. Value: `reseller#subscription`"
            },
            "plan": {
              "type": "object",
              "properties": {
                "planName": {
                  "type": "string",
                  "description": "The `planName` property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` — The annual commitment plan with monthly payments. *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` — The annual commitment plan with yearly payments - `FLEXIBLE` — The flexible plan - `TRIAL` — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling `changePlan` will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its 30th free day or immediately after calling `startPaidService`. - `FREE` — The free plan is exclusive to the Cloud Identity SKU and does not incur any billing. "
                },
                "isCommitmentPlan": {
                  "type": "boolean",
                  "description": "The `isCommitmentPlan` property's boolean value identifies the plan as an annual commitment plan: - `true` — The subscription's plan is an annual commitment plan. - `false` — The plan is not an annual commitment plan. "
                },
                "commitmentInterval": {
                  "type": "object",
                  "properties": {
                    "endTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `endTime` in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                    },
                    "startTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `startTime` in milliseconds using UNIX Epoch format. See an example Epoch converter."
                    }
                  },
                  "description": "In this version of the API, annual commitment plan's interval is one year. *Note: *When `billingMethod` value is `OFFLINE`, the subscription property object `plan.commitmentInterval` is omitted in all API responses. "
                }
              },
              "description": "The `plan` property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial plan. For more information about the API\"s payment plans, see the API concepts."
            },
            "seats": {
              "id": "Seats",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#seats",
                  "description": "Identifies the resource as a subscription seat setting. Value: `subscriptions#seats`"
                },
                "numberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `ANNUAL_MONTHLY_PAY` and `ANNUAL_YEARLY_PAY` plans. This property sets the maximum number of licenses assignable to users on a subscription. The reseller can add more licenses, but once set, the `numberOfSeats` cannot be reduced until renewal. The reseller is invoiced based on the `numberOfSeats` value regardless of how many of these user licenses are assigned. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "maximumNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `FLEXIBLE` or `TRIAL` plans. This property sets the maximum number of licensed users allowed on a subscription. This quantity can be increased up to the maximum limit defined in the reseller's contract. The minimum quantity is the current number of users in the customer account. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "licensedNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Read-only field containing the current number of users that are assigned a license for the product defined in `skuId`. This field's value is equivalent to the numerical count of users returned by the Enterprise License Manager API method: [`listForProductAndSku`](/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku)."
                }
              },
              "description": "This is a required property. The number and limit of user seat licenses in the plan."
            },
            "skuId": {
              "type": "string",
              "description": "A required property. The `skuId` is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "status": {
              "type": "string",
              "description": "This is an optional property."
            },
            "skuName": {
              "type": "string",
              "description": "Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "dealCode": {
              "type": "string",
              "description": "Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `insert` requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty."
            },
            "customerId": {
              "type": "string",
              "description": "This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google."
            },
            "creationTime": {
              "type": "string",
              "format": "int64",
              "description": "The `creationTime` property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter."
            },
            "transferInfo": {
              "type": "object",
              "properties": {
                "currentLegacySkuId": {
                  "type": "string",
                  "description": "Sku id of the current resold subscription. This is populated only when customer has subscription with legacy sku and the subscription resource is populated with recommeded sku for transfer in."
                },
                "minimumTransferableSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When inserting a subscription, this is the minimum number of seats listed in the transfer order for this product. For example, if the customer has 20 users, the reseller cannot place a transfer order of 15 seats. The minimum is 20 seats."
                },
                "transferabilityExpirationTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "The time when transfer token or intent to transfer will expire. The time is in milliseconds using UNIX Epoch format."
                }
              },
              "description": "Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer."
            },
            "billingMethod": {
              "type": "string",
              "description": "Read-only field that returns the current billing method for a subscription."
            },
            "resourceUiUrl": {
              "type": "string",
              "description": "URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console."
            },
            "trialSettings": {
              "type": "object",
              "properties": {
                "isInTrial": {
                  "type": "boolean",
                  "description": "Determines if a subscription's plan is in a 30-day free trial or not: - `true` — The plan is in trial. - `false` — The plan is not in trial. "
                },
                "trialEndTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                }
              },
              "description": "The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts."
            },
            "customerDomain": {
              "type": "string",
              "description": "Primary domain name of the customer"
            },
            "subscriptionId": {
              "type": "string",
              "description": "The `subscriptionId` is the subscription identifier and is unique for each customer. This is a required property. Since a `subscriptionId` changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the `subscriptionId` as described in retrieve all reseller subscriptions."
            },
            "purchaseOrderId": {
              "type": "string",
              "description": "This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters."
            },
            "renewalSettings": {
              "id": "RenewalSettings",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#renewalSettings",
                  "description": "Identifies the resource as a subscription renewal setting. Value: `subscriptions#renewalSettings`"
                },
                "renewalType": {
                  "type": "string",
                  "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a subscription, the `renewalType` is a required property."
                }
              },
              "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center."
            },
            "suspensionReasons": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's `STATUS` is `SUSPENDED` until all pending suspensions are removed. Possible options include: - `PENDING_TOS_ACCEPTANCE` - The customer has not logged in and accepted the G Suite Resold Terms of Services. - `RENEWAL_WITH_TYPE_CANCEL` - The customer's commitment ended and their service was cancelled at the end of their term. - `RESELLER_INITIATED` - A manual suspension invoked by a Reseller. - `TRIAL_ENDED` - The customer's trial expired without a plan selected. - `OTHER` - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). "
            }
          },
          "description": "JSON template for a subscription."
        }
      ]
  reseller.subscriptions.changeRenewalSettings:
    description: |-
      Update a user license's renewal settings. This is applicable for accounts with annual commitment plans only. For more information, see the description in [manage subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#update_renewal).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/subscriptions/changeRenewalSettings
    example:
      inputs: [
        {
          "id": "RenewalSettings",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "subscriptions#renewalSettings",
              "description": "Identifies the resource as a subscription renewal setting. Value: `subscriptions#renewalSettings`"
            },
            "renewalType": {
              "type": "string",
              "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a subscription, the `renewalType` is a required property."
            }
          },
          "description": "JSON template for a subscription renewal settings."
        }
      ]
      outputs: [
        {
          "id": "Subscription",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "reseller#subscription",
              "description": "Identifies the resource as a Subscription. Value: `reseller#subscription`"
            },
            "plan": {
              "type": "object",
              "properties": {
                "planName": {
                  "type": "string",
                  "description": "The `planName` property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` — The annual commitment plan with monthly payments. *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` — The annual commitment plan with yearly payments - `FLEXIBLE` — The flexible plan - `TRIAL` — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling `changePlan` will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its 30th free day or immediately after calling `startPaidService`. - `FREE` — The free plan is exclusive to the Cloud Identity SKU and does not incur any billing. "
                },
                "isCommitmentPlan": {
                  "type": "boolean",
                  "description": "The `isCommitmentPlan` property's boolean value identifies the plan as an annual commitment plan: - `true` — The subscription's plan is an annual commitment plan. - `false` — The plan is not an annual commitment plan. "
                },
                "commitmentInterval": {
                  "type": "object",
                  "properties": {
                    "endTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `endTime` in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                    },
                    "startTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `startTime` in milliseconds using UNIX Epoch format. See an example Epoch converter."
                    }
                  },
                  "description": "In this version of the API, annual commitment plan's interval is one year. *Note: *When `billingMethod` value is `OFFLINE`, the subscription property object `plan.commitmentInterval` is omitted in all API responses. "
                }
              },
              "description": "The `plan` property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial plan. For more information about the API\"s payment plans, see the API concepts."
            },
            "seats": {
              "id": "Seats",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#seats",
                  "description": "Identifies the resource as a subscription seat setting. Value: `subscriptions#seats`"
                },
                "numberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `ANNUAL_MONTHLY_PAY` and `ANNUAL_YEARLY_PAY` plans. This property sets the maximum number of licenses assignable to users on a subscription. The reseller can add more licenses, but once set, the `numberOfSeats` cannot be reduced until renewal. The reseller is invoiced based on the `numberOfSeats` value regardless of how many of these user licenses are assigned. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "maximumNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `FLEXIBLE` or `TRIAL` plans. This property sets the maximum number of licensed users allowed on a subscription. This quantity can be increased up to the maximum limit defined in the reseller's contract. The minimum quantity is the current number of users in the customer account. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "licensedNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Read-only field containing the current number of users that are assigned a license for the product defined in `skuId`. This field's value is equivalent to the numerical count of users returned by the Enterprise License Manager API method: [`listForProductAndSku`](/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku)."
                }
              },
              "description": "This is a required property. The number and limit of user seat licenses in the plan."
            },
            "skuId": {
              "type": "string",
              "description": "A required property. The `skuId` is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "status": {
              "type": "string",
              "description": "This is an optional property."
            },
            "skuName": {
              "type": "string",
              "description": "Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "dealCode": {
              "type": "string",
              "description": "Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `insert` requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty."
            },
            "customerId": {
              "type": "string",
              "description": "This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google."
            },
            "creationTime": {
              "type": "string",
              "format": "int64",
              "description": "The `creationTime` property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter."
            },
            "transferInfo": {
              "type": "object",
              "properties": {
                "currentLegacySkuId": {
                  "type": "string",
                  "description": "Sku id of the current resold subscription. This is populated only when customer has subscription with legacy sku and the subscription resource is populated with recommeded sku for transfer in."
                },
                "minimumTransferableSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When inserting a subscription, this is the minimum number of seats listed in the transfer order for this product. For example, if the customer has 20 users, the reseller cannot place a transfer order of 15 seats. The minimum is 20 seats."
                },
                "transferabilityExpirationTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "The time when transfer token or intent to transfer will expire. The time is in milliseconds using UNIX Epoch format."
                }
              },
              "description": "Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer."
            },
            "billingMethod": {
              "type": "string",
              "description": "Read-only field that returns the current billing method for a subscription."
            },
            "resourceUiUrl": {
              "type": "string",
              "description": "URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console."
            },
            "trialSettings": {
              "type": "object",
              "properties": {
                "isInTrial": {
                  "type": "boolean",
                  "description": "Determines if a subscription's plan is in a 30-day free trial or not: - `true` — The plan is in trial. - `false` — The plan is not in trial. "
                },
                "trialEndTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                }
              },
              "description": "The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts."
            },
            "customerDomain": {
              "type": "string",
              "description": "Primary domain name of the customer"
            },
            "subscriptionId": {
              "type": "string",
              "description": "The `subscriptionId` is the subscription identifier and is unique for each customer. This is a required property. Since a `subscriptionId` changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the `subscriptionId` as described in retrieve all reseller subscriptions."
            },
            "purchaseOrderId": {
              "type": "string",
              "description": "This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters."
            },
            "renewalSettings": {
              "id": "RenewalSettings",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#renewalSettings",
                  "description": "Identifies the resource as a subscription renewal setting. Value: `subscriptions#renewalSettings`"
                },
                "renewalType": {
                  "type": "string",
                  "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a subscription, the `renewalType` is a required property."
                }
              },
              "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center."
            },
            "suspensionReasons": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's `STATUS` is `SUSPENDED` until all pending suspensions are removed. Possible options include: - `PENDING_TOS_ACCEPTANCE` - The customer has not logged in and accepted the G Suite Resold Terms of Services. - `RENEWAL_WITH_TYPE_CANCEL` - The customer's commitment ended and their service was cancelled at the end of their term. - `RESELLER_INITIATED` - A manual suspension invoked by a Reseller. - `TRIAL_ENDED` - The customer's trial expired without a plan selected. - `OTHER` - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). "
            }
          },
          "description": "JSON template for a subscription."
        }
      ]
  reseller.subscriptions.changeSeats:
    description: |-
      Update a subscription's user license settings. For more information about updating an annual commitment plan or a flexible plan subscription’s licenses, see [Manage Subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#update_subscription_seat).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/subscriptions/changeSeats
    example:
      inputs: [
        {
          "id": "Seats",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "subscriptions#seats",
              "description": "Identifies the resource as a subscription seat setting. Value: `subscriptions#seats`"
            },
            "numberOfSeats": {
              "type": "integer",
              "format": "int32",
              "description": "This is a required property and is exclusive to subscriptions with `ANNUAL_MONTHLY_PAY` and `ANNUAL_YEARLY_PAY` plans. This property sets the maximum number of licenses assignable to users on a subscription. The reseller can add more licenses, but once set, the `numberOfSeats` cannot be reduced until renewal. The reseller is invoiced based on the `numberOfSeats` value regardless of how many of these user licenses are assigned. *Note: *G Suite subscriptions automatically assign a license to every user."
            },
            "maximumNumberOfSeats": {
              "type": "integer",
              "format": "int32",
              "description": "This is a required property and is exclusive to subscriptions with `FLEXIBLE` or `TRIAL` plans. This property sets the maximum number of licensed users allowed on a subscription. This quantity can be increased up to the maximum limit defined in the reseller's contract. The minimum quantity is the current number of users in the customer account. *Note: *G Suite subscriptions automatically assign a license to every user."
            },
            "licensedNumberOfSeats": {
              "type": "integer",
              "format": "int32",
              "description": "Read-only field containing the current number of users that are assigned a license for the product defined in `skuId`. This field's value is equivalent to the numerical count of users returned by the Enterprise License Manager API method: [`listForProductAndSku`](/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku)."
            }
          },
          "description": "JSON template for subscription seats."
        }
      ]
      outputs: [
        {
          "id": "Subscription",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "reseller#subscription",
              "description": "Identifies the resource as a Subscription. Value: `reseller#subscription`"
            },
            "plan": {
              "type": "object",
              "properties": {
                "planName": {
                  "type": "string",
                  "description": "The `planName` property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` — The annual commitment plan with monthly payments. *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` — The annual commitment plan with yearly payments - `FLEXIBLE` — The flexible plan - `TRIAL` — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling `changePlan` will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its 30th free day or immediately after calling `startPaidService`. - `FREE` — The free plan is exclusive to the Cloud Identity SKU and does not incur any billing. "
                },
                "isCommitmentPlan": {
                  "type": "boolean",
                  "description": "The `isCommitmentPlan` property's boolean value identifies the plan as an annual commitment plan: - `true` — The subscription's plan is an annual commitment plan. - `false` — The plan is not an annual commitment plan. "
                },
                "commitmentInterval": {
                  "type": "object",
                  "properties": {
                    "endTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `endTime` in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                    },
                    "startTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `startTime` in milliseconds using UNIX Epoch format. See an example Epoch converter."
                    }
                  },
                  "description": "In this version of the API, annual commitment plan's interval is one year. *Note: *When `billingMethod` value is `OFFLINE`, the subscription property object `plan.commitmentInterval` is omitted in all API responses. "
                }
              },
              "description": "The `plan` property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial plan. For more information about the API\"s payment plans, see the API concepts."
            },
            "seats": {
              "id": "Seats",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#seats",
                  "description": "Identifies the resource as a subscription seat setting. Value: `subscriptions#seats`"
                },
                "numberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `ANNUAL_MONTHLY_PAY` and `ANNUAL_YEARLY_PAY` plans. This property sets the maximum number of licenses assignable to users on a subscription. The reseller can add more licenses, but once set, the `numberOfSeats` cannot be reduced until renewal. The reseller is invoiced based on the `numberOfSeats` value regardless of how many of these user licenses are assigned. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "maximumNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `FLEXIBLE` or `TRIAL` plans. This property sets the maximum number of licensed users allowed on a subscription. This quantity can be increased up to the maximum limit defined in the reseller's contract. The minimum quantity is the current number of users in the customer account. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "licensedNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Read-only field containing the current number of users that are assigned a license for the product defined in `skuId`. This field's value is equivalent to the numerical count of users returned by the Enterprise License Manager API method: [`listForProductAndSku`](/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku)."
                }
              },
              "description": "This is a required property. The number and limit of user seat licenses in the plan."
            },
            "skuId": {
              "type": "string",
              "description": "A required property. The `skuId` is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "status": {
              "type": "string",
              "description": "This is an optional property."
            },
            "skuName": {
              "type": "string",
              "description": "Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "dealCode": {
              "type": "string",
              "description": "Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `insert` requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty."
            },
            "customerId": {
              "type": "string",
              "description": "This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google."
            },
            "creationTime": {
              "type": "string",
              "format": "int64",
              "description": "The `creationTime` property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter."
            },
            "transferInfo": {
              "type": "object",
              "properties": {
                "currentLegacySkuId": {
                  "type": "string",
                  "description": "Sku id of the current resold subscription. This is populated only when customer has subscription with legacy sku and the subscription resource is populated with recommeded sku for transfer in."
                },
                "minimumTransferableSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When inserting a subscription, this is the minimum number of seats listed in the transfer order for this product. For example, if the customer has 20 users, the reseller cannot place a transfer order of 15 seats. The minimum is 20 seats."
                },
                "transferabilityExpirationTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "The time when transfer token or intent to transfer will expire. The time is in milliseconds using UNIX Epoch format."
                }
              },
              "description": "Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer."
            },
            "billingMethod": {
              "type": "string",
              "description": "Read-only field that returns the current billing method for a subscription."
            },
            "resourceUiUrl": {
              "type": "string",
              "description": "URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console."
            },
            "trialSettings": {
              "type": "object",
              "properties": {
                "isInTrial": {
                  "type": "boolean",
                  "description": "Determines if a subscription's plan is in a 30-day free trial or not: - `true` — The plan is in trial. - `false` — The plan is not in trial. "
                },
                "trialEndTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                }
              },
              "description": "The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts."
            },
            "customerDomain": {
              "type": "string",
              "description": "Primary domain name of the customer"
            },
            "subscriptionId": {
              "type": "string",
              "description": "The `subscriptionId` is the subscription identifier and is unique for each customer. This is a required property. Since a `subscriptionId` changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the `subscriptionId` as described in retrieve all reseller subscriptions."
            },
            "purchaseOrderId": {
              "type": "string",
              "description": "This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters."
            },
            "renewalSettings": {
              "id": "RenewalSettings",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#renewalSettings",
                  "description": "Identifies the resource as a subscription renewal setting. Value: `subscriptions#renewalSettings`"
                },
                "renewalType": {
                  "type": "string",
                  "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a subscription, the `renewalType` is a required property."
                }
              },
              "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center."
            },
            "suspensionReasons": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's `STATUS` is `SUSPENDED` until all pending suspensions are removed. Possible options include: - `PENDING_TOS_ACCEPTANCE` - The customer has not logged in and accepted the G Suite Resold Terms of Services. - `RENEWAL_WITH_TYPE_CANCEL` - The customer's commitment ended and their service was cancelled at the end of their term. - `RESELLER_INITIATED` - A manual suspension invoked by a Reseller. - `TRIAL_ENDED` - The customer's trial expired without a plan selected. - `OTHER` - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). "
            }
          },
          "description": "JSON template for a subscription."
        }
      ]
  reseller.subscriptions.delete:
    description: |-
      Cancel, suspend, or transfer a subscription to direct.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/subscriptions/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  reseller.subscriptions.get:
    description: |-
      Get a specific subscription. The `subscriptionId` can be found using the [Retrieve all reseller subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_all_subscriptions) method. For more information about retrieving a specific subscription, see the information descrived in [manage subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_subscription).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/subscriptions/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Subscription",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "reseller#subscription",
              "description": "Identifies the resource as a Subscription. Value: `reseller#subscription`"
            },
            "plan": {
              "type": "object",
              "properties": {
                "planName": {
                  "type": "string",
                  "description": "The `planName` property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` — The annual commitment plan with monthly payments. *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` — The annual commitment plan with yearly payments - `FLEXIBLE` — The flexible plan - `TRIAL` — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling `changePlan` will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its 30th free day or immediately after calling `startPaidService`. - `FREE` — The free plan is exclusive to the Cloud Identity SKU and does not incur any billing. "
                },
                "isCommitmentPlan": {
                  "type": "boolean",
                  "description": "The `isCommitmentPlan` property's boolean value identifies the plan as an annual commitment plan: - `true` — The subscription's plan is an annual commitment plan. - `false` — The plan is not an annual commitment plan. "
                },
                "commitmentInterval": {
                  "type": "object",
                  "properties": {
                    "endTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `endTime` in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                    },
                    "startTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `startTime` in milliseconds using UNIX Epoch format. See an example Epoch converter."
                    }
                  },
                  "description": "In this version of the API, annual commitment plan's interval is one year. *Note: *When `billingMethod` value is `OFFLINE`, the subscription property object `plan.commitmentInterval` is omitted in all API responses. "
                }
              },
              "description": "The `plan` property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial plan. For more information about the API\"s payment plans, see the API concepts."
            },
            "seats": {
              "id": "Seats",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#seats",
                  "description": "Identifies the resource as a subscription seat setting. Value: `subscriptions#seats`"
                },
                "numberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `ANNUAL_MONTHLY_PAY` and `ANNUAL_YEARLY_PAY` plans. This property sets the maximum number of licenses assignable to users on a subscription. The reseller can add more licenses, but once set, the `numberOfSeats` cannot be reduced until renewal. The reseller is invoiced based on the `numberOfSeats` value regardless of how many of these user licenses are assigned. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "maximumNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `FLEXIBLE` or `TRIAL` plans. This property sets the maximum number of licensed users allowed on a subscription. This quantity can be increased up to the maximum limit defined in the reseller's contract. The minimum quantity is the current number of users in the customer account. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "licensedNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Read-only field containing the current number of users that are assigned a license for the product defined in `skuId`. This field's value is equivalent to the numerical count of users returned by the Enterprise License Manager API method: [`listForProductAndSku`](/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku)."
                }
              },
              "description": "This is a required property. The number and limit of user seat licenses in the plan."
            },
            "skuId": {
              "type": "string",
              "description": "A required property. The `skuId` is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "status": {
              "type": "string",
              "description": "This is an optional property."
            },
            "skuName": {
              "type": "string",
              "description": "Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "dealCode": {
              "type": "string",
              "description": "Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `insert` requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty."
            },
            "customerId": {
              "type": "string",
              "description": "This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google."
            },
            "creationTime": {
              "type": "string",
              "format": "int64",
              "description": "The `creationTime` property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter."
            },
            "transferInfo": {
              "type": "object",
              "properties": {
                "currentLegacySkuId": {
                  "type": "string",
                  "description": "Sku id of the current resold subscription. This is populated only when customer has subscription with legacy sku and the subscription resource is populated with recommeded sku for transfer in."
                },
                "minimumTransferableSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When inserting a subscription, this is the minimum number of seats listed in the transfer order for this product. For example, if the customer has 20 users, the reseller cannot place a transfer order of 15 seats. The minimum is 20 seats."
                },
                "transferabilityExpirationTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "The time when transfer token or intent to transfer will expire. The time is in milliseconds using UNIX Epoch format."
                }
              },
              "description": "Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer."
            },
            "billingMethod": {
              "type": "string",
              "description": "Read-only field that returns the current billing method for a subscription."
            },
            "resourceUiUrl": {
              "type": "string",
              "description": "URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console."
            },
            "trialSettings": {
              "type": "object",
              "properties": {
                "isInTrial": {
                  "type": "boolean",
                  "description": "Determines if a subscription's plan is in a 30-day free trial or not: - `true` — The plan is in trial. - `false` — The plan is not in trial. "
                },
                "trialEndTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                }
              },
              "description": "The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts."
            },
            "customerDomain": {
              "type": "string",
              "description": "Primary domain name of the customer"
            },
            "subscriptionId": {
              "type": "string",
              "description": "The `subscriptionId` is the subscription identifier and is unique for each customer. This is a required property. Since a `subscriptionId` changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the `subscriptionId` as described in retrieve all reseller subscriptions."
            },
            "purchaseOrderId": {
              "type": "string",
              "description": "This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters."
            },
            "renewalSettings": {
              "id": "RenewalSettings",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#renewalSettings",
                  "description": "Identifies the resource as a subscription renewal setting. Value: `subscriptions#renewalSettings`"
                },
                "renewalType": {
                  "type": "string",
                  "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a subscription, the `renewalType` is a required property."
                }
              },
              "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center."
            },
            "suspensionReasons": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's `STATUS` is `SUSPENDED` until all pending suspensions are removed. Possible options include: - `PENDING_TOS_ACCEPTANCE` - The customer has not logged in and accepted the G Suite Resold Terms of Services. - `RENEWAL_WITH_TYPE_CANCEL` - The customer's commitment ended and their service was cancelled at the end of their term. - `RESELLER_INITIATED` - A manual suspension invoked by a Reseller. - `TRIAL_ENDED` - The customer's trial expired without a plan selected. - `OTHER` - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). "
            }
          },
          "description": "JSON template for a subscription."
        }
      ]
  reseller.subscriptions.insert:
    description: |-
      Create or transfer a subscription. Create a subscription for a customer's account that you ordered using the [Order a new customer account](/admin-sdk/reseller/v1/reference/customers/insert.html) method. For more information about creating a subscription for different payment plans, see [manage subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#create_subscription).\ If you did not order the customer's account using the customer insert method, use the customer's `customerAuthToken` when creating a subscription for that customer. If transferring a G Suite subscription with an associated Google Drive or Google Vault subscription, use the [batch operation](/admin-sdk/reseller/v1/how-tos/batch.html) to transfer all of these subscriptions. For more information, see how to [transfer subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#transfer_a_subscription).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/subscriptions/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Subscription",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "reseller#subscription",
              "description": "Identifies the resource as a Subscription. Value: `reseller#subscription`"
            },
            "plan": {
              "type": "object",
              "properties": {
                "planName": {
                  "type": "string",
                  "description": "The `planName` property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` — The annual commitment plan with monthly payments. *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` — The annual commitment plan with yearly payments - `FLEXIBLE` — The flexible plan - `TRIAL` — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling `changePlan` will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its 30th free day or immediately after calling `startPaidService`. - `FREE` — The free plan is exclusive to the Cloud Identity SKU and does not incur any billing. "
                },
                "isCommitmentPlan": {
                  "type": "boolean",
                  "description": "The `isCommitmentPlan` property's boolean value identifies the plan as an annual commitment plan: - `true` — The subscription's plan is an annual commitment plan. - `false` — The plan is not an annual commitment plan. "
                },
                "commitmentInterval": {
                  "type": "object",
                  "properties": {
                    "endTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `endTime` in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                    },
                    "startTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `startTime` in milliseconds using UNIX Epoch format. See an example Epoch converter."
                    }
                  },
                  "description": "In this version of the API, annual commitment plan's interval is one year. *Note: *When `billingMethod` value is `OFFLINE`, the subscription property object `plan.commitmentInterval` is omitted in all API responses. "
                }
              },
              "description": "The `plan` property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial plan. For more information about the API\"s payment plans, see the API concepts."
            },
            "seats": {
              "id": "Seats",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#seats",
                  "description": "Identifies the resource as a subscription seat setting. Value: `subscriptions#seats`"
                },
                "numberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `ANNUAL_MONTHLY_PAY` and `ANNUAL_YEARLY_PAY` plans. This property sets the maximum number of licenses assignable to users on a subscription. The reseller can add more licenses, but once set, the `numberOfSeats` cannot be reduced until renewal. The reseller is invoiced based on the `numberOfSeats` value regardless of how many of these user licenses are assigned. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "maximumNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `FLEXIBLE` or `TRIAL` plans. This property sets the maximum number of licensed users allowed on a subscription. This quantity can be increased up to the maximum limit defined in the reseller's contract. The minimum quantity is the current number of users in the customer account. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "licensedNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Read-only field containing the current number of users that are assigned a license for the product defined in `skuId`. This field's value is equivalent to the numerical count of users returned by the Enterprise License Manager API method: [`listForProductAndSku`](/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku)."
                }
              },
              "description": "This is a required property. The number and limit of user seat licenses in the plan."
            },
            "skuId": {
              "type": "string",
              "description": "A required property. The `skuId` is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "status": {
              "type": "string",
              "description": "This is an optional property."
            },
            "skuName": {
              "type": "string",
              "description": "Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "dealCode": {
              "type": "string",
              "description": "Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `insert` requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty."
            },
            "customerId": {
              "type": "string",
              "description": "This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google."
            },
            "creationTime": {
              "type": "string",
              "format": "int64",
              "description": "The `creationTime` property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter."
            },
            "transferInfo": {
              "type": "object",
              "properties": {
                "currentLegacySkuId": {
                  "type": "string",
                  "description": "Sku id of the current resold subscription. This is populated only when customer has subscription with legacy sku and the subscription resource is populated with recommeded sku for transfer in."
                },
                "minimumTransferableSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When inserting a subscription, this is the minimum number of seats listed in the transfer order for this product. For example, if the customer has 20 users, the reseller cannot place a transfer order of 15 seats. The minimum is 20 seats."
                },
                "transferabilityExpirationTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "The time when transfer token or intent to transfer will expire. The time is in milliseconds using UNIX Epoch format."
                }
              },
              "description": "Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer."
            },
            "billingMethod": {
              "type": "string",
              "description": "Read-only field that returns the current billing method for a subscription."
            },
            "resourceUiUrl": {
              "type": "string",
              "description": "URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console."
            },
            "trialSettings": {
              "type": "object",
              "properties": {
                "isInTrial": {
                  "type": "boolean",
                  "description": "Determines if a subscription's plan is in a 30-day free trial or not: - `true` — The plan is in trial. - `false` — The plan is not in trial. "
                },
                "trialEndTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                }
              },
              "description": "The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts."
            },
            "customerDomain": {
              "type": "string",
              "description": "Primary domain name of the customer"
            },
            "subscriptionId": {
              "type": "string",
              "description": "The `subscriptionId` is the subscription identifier and is unique for each customer. This is a required property. Since a `subscriptionId` changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the `subscriptionId` as described in retrieve all reseller subscriptions."
            },
            "purchaseOrderId": {
              "type": "string",
              "description": "This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters."
            },
            "renewalSettings": {
              "id": "RenewalSettings",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#renewalSettings",
                  "description": "Identifies the resource as a subscription renewal setting. Value: `subscriptions#renewalSettings`"
                },
                "renewalType": {
                  "type": "string",
                  "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a subscription, the `renewalType` is a required property."
                }
              },
              "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center."
            },
            "suspensionReasons": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's `STATUS` is `SUSPENDED` until all pending suspensions are removed. Possible options include: - `PENDING_TOS_ACCEPTANCE` - The customer has not logged in and accepted the G Suite Resold Terms of Services. - `RENEWAL_WITH_TYPE_CANCEL` - The customer's commitment ended and their service was cancelled at the end of their term. - `RESELLER_INITIATED` - A manual suspension invoked by a Reseller. - `TRIAL_ENDED` - The customer's trial expired without a plan selected. - `OTHER` - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). "
            }
          },
          "description": "JSON template for a subscription."
        }
      ]
  reseller.subscriptions.list:
    description: |-
      List of subscriptions managed by the reseller. The list can be all subscriptions, all of a customer's subscriptions, or all of a customer's transferable subscriptions. Optionally, this method can filter the response by a `customerNamePrefix`. For more information, see [manage subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/subscriptions/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Subscriptions",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "reseller#subscriptions",
              "description": "Identifies the resource as a collection of subscriptions. Value: reseller#subscriptions"
            },
            "nextPageToken": {
              "type": "string",
              "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
            },
            "subscriptions": {
              "type": "array",
              "items": {
                "id": "Subscription",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "reseller#subscription",
                    "description": "Identifies the resource as a Subscription. Value: `reseller#subscription`"
                  },
                  "plan": {
                    "type": "object",
                    "properties": {
                      "planName": {
                        "type": "string",
                        "description": "The `planName` property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` — The annual commitment plan with monthly payments. *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` — The annual commitment plan with yearly payments - `FLEXIBLE` — The flexible plan - `TRIAL` — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling `changePlan` will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its 30th free day or immediately after calling `startPaidService`. - `FREE` — The free plan is exclusive to the Cloud Identity SKU and does not incur any billing. "
                      },
                      "isCommitmentPlan": {
                        "type": "boolean",
                        "description": "The `isCommitmentPlan` property's boolean value identifies the plan as an annual commitment plan: - `true` — The subscription's plan is an annual commitment plan. - `false` — The plan is not an annual commitment plan. "
                      },
                      "commitmentInterval": {
                        "type": "object",
                        "properties": {
                          "endTime": {
                            "type": "string",
                            "format": "int64",
                            "description": "An annual commitment plan's interval's `endTime` in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                          },
                          "startTime": {
                            "type": "string",
                            "format": "int64",
                            "description": "An annual commitment plan's interval's `startTime` in milliseconds using UNIX Epoch format. See an example Epoch converter."
                          }
                        },
                        "description": "In this version of the API, annual commitment plan's interval is one year. *Note: *When `billingMethod` value is `OFFLINE`, the subscription property object `plan.commitmentInterval` is omitted in all API responses. "
                      }
                    },
                    "description": "The `plan` property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial plan. For more information about the API\"s payment plans, see the API concepts."
                  },
                  "seats": {
                    "id": "Seats",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "subscriptions#seats",
                        "description": "Identifies the resource as a subscription seat setting. Value: `subscriptions#seats`"
                      },
                      "numberOfSeats": {
                        "type": "integer",
                        "format": "int32",
                        "description": "This is a required property and is exclusive to subscriptions with `ANNUAL_MONTHLY_PAY` and `ANNUAL_YEARLY_PAY` plans. This property sets the maximum number of licenses assignable to users on a subscription. The reseller can add more licenses, but once set, the `numberOfSeats` cannot be reduced until renewal. The reseller is invoiced based on the `numberOfSeats` value regardless of how many of these user licenses are assigned. *Note: *G Suite subscriptions automatically assign a license to every user."
                      },
                      "maximumNumberOfSeats": {
                        "type": "integer",
                        "format": "int32",
                        "description": "This is a required property and is exclusive to subscriptions with `FLEXIBLE` or `TRIAL` plans. This property sets the maximum number of licensed users allowed on a subscription. This quantity can be increased up to the maximum limit defined in the reseller's contract. The minimum quantity is the current number of users in the customer account. *Note: *G Suite subscriptions automatically assign a license to every user."
                      },
                      "licensedNumberOfSeats": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Read-only field containing the current number of users that are assigned a license for the product defined in `skuId`. This field's value is equivalent to the numerical count of users returned by the Enterprise License Manager API method: [`listForProductAndSku`](/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku)."
                      }
                    },
                    "description": "This is a required property. The number and limit of user seat licenses in the plan."
                  },
                  "skuId": {
                    "type": "string",
                    "description": "A required property. The `skuId` is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see Product and SKU IDs."
                  },
                  "status": {
                    "type": "string",
                    "description": "This is an optional property."
                  },
                  "skuName": {
                    "type": "string",
                    "description": "Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see Product and SKU IDs."
                  },
                  "dealCode": {
                    "type": "string",
                    "description": "Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `insert` requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty."
                  },
                  "customerId": {
                    "type": "string",
                    "description": "This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google."
                  },
                  "creationTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "The `creationTime` property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter."
                  },
                  "transferInfo": {
                    "type": "object",
                    "properties": {
                      "currentLegacySkuId": {
                        "type": "string",
                        "description": "Sku id of the current resold subscription. This is populated only when customer has subscription with legacy sku and the subscription resource is populated with recommeded sku for transfer in."
                      },
                      "minimumTransferableSeats": {
                        "type": "integer",
                        "format": "int32",
                        "description": "When inserting a subscription, this is the minimum number of seats listed in the transfer order for this product. For example, if the customer has 20 users, the reseller cannot place a transfer order of 15 seats. The minimum is 20 seats."
                      },
                      "transferabilityExpirationTime": {
                        "type": "string",
                        "format": "int64",
                        "description": "The time when transfer token or intent to transfer will expire. The time is in milliseconds using UNIX Epoch format."
                      }
                    },
                    "description": "Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer."
                  },
                  "billingMethod": {
                    "type": "string",
                    "description": "Read-only field that returns the current billing method for a subscription."
                  },
                  "resourceUiUrl": {
                    "type": "string",
                    "description": "URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console."
                  },
                  "trialSettings": {
                    "type": "object",
                    "properties": {
                      "isInTrial": {
                        "type": "boolean",
                        "description": "Determines if a subscription's plan is in a 30-day free trial or not: - `true` — The plan is in trial. - `false` — The plan is not in trial. "
                      },
                      "trialEndTime": {
                        "type": "string",
                        "format": "int64",
                        "description": "Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                      }
                    },
                    "description": "The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts."
                  },
                  "customerDomain": {
                    "type": "string",
                    "description": "Primary domain name of the customer"
                  },
                  "subscriptionId": {
                    "type": "string",
                    "description": "The `subscriptionId` is the subscription identifier and is unique for each customer. This is a required property. Since a `subscriptionId` changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the `subscriptionId` as described in retrieve all reseller subscriptions."
                  },
                  "purchaseOrderId": {
                    "type": "string",
                    "description": "This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters."
                  },
                  "renewalSettings": {
                    "id": "RenewalSettings",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "subscriptions#renewalSettings",
                        "description": "Identifies the resource as a subscription renewal setting. Value: `subscriptions#renewalSettings`"
                      },
                      "renewalType": {
                        "type": "string",
                        "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a subscription, the `renewalType` is a required property."
                      }
                    },
                    "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center."
                  },
                  "suspensionReasons": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's `STATUS` is `SUSPENDED` until all pending suspensions are removed. Possible options include: - `PENDING_TOS_ACCEPTANCE` - The customer has not logged in and accepted the G Suite Resold Terms of Services. - `RENEWAL_WITH_TYPE_CANCEL` - The customer's commitment ended and their service was cancelled at the end of their term. - `RESELLER_INITIATED` - A manual suspension invoked by a Reseller. - `TRIAL_ENDED` - The customer's trial expired without a plan selected. - `OTHER` - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). "
                  }
                },
                "description": "JSON template for a subscription."
              },
              "description": "The subscriptions in this page of results."
            }
          },
          "description": "A subscription manages the relationship of a Google customer's payment plan with a product's SKU, user licenses, 30-day free trial status, and renewal options. A primary role of a reseller is to manage the Google customer's subscriptions."
        }
      ]
  reseller.subscriptions.startPaidService:
    description: |-
      Immediately move a 30-day free trial subscription to a paid service subscription. This method is only applicable if a payment plan has already been set up for the 30-day trial subscription. For more information, see [manage subscriptions](/admin-sdk/reseller/v1/how-tos/manage_subscriptions#paid_service).
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/subscriptions/startPaidService
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Subscription",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "reseller#subscription",
              "description": "Identifies the resource as a Subscription. Value: `reseller#subscription`"
            },
            "plan": {
              "type": "object",
              "properties": {
                "planName": {
                  "type": "string",
                  "description": "The `planName` property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` — The annual commitment plan with monthly payments. *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` — The annual commitment plan with yearly payments - `FLEXIBLE` — The flexible plan - `TRIAL` — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling `changePlan` will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its 30th free day or immediately after calling `startPaidService`. - `FREE` — The free plan is exclusive to the Cloud Identity SKU and does not incur any billing. "
                },
                "isCommitmentPlan": {
                  "type": "boolean",
                  "description": "The `isCommitmentPlan` property's boolean value identifies the plan as an annual commitment plan: - `true` — The subscription's plan is an annual commitment plan. - `false` — The plan is not an annual commitment plan. "
                },
                "commitmentInterval": {
                  "type": "object",
                  "properties": {
                    "endTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `endTime` in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                    },
                    "startTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `startTime` in milliseconds using UNIX Epoch format. See an example Epoch converter."
                    }
                  },
                  "description": "In this version of the API, annual commitment plan's interval is one year. *Note: *When `billingMethod` value is `OFFLINE`, the subscription property object `plan.commitmentInterval` is omitted in all API responses. "
                }
              },
              "description": "The `plan` property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial plan. For more information about the API\"s payment plans, see the API concepts."
            },
            "seats": {
              "id": "Seats",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#seats",
                  "description": "Identifies the resource as a subscription seat setting. Value: `subscriptions#seats`"
                },
                "numberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `ANNUAL_MONTHLY_PAY` and `ANNUAL_YEARLY_PAY` plans. This property sets the maximum number of licenses assignable to users on a subscription. The reseller can add more licenses, but once set, the `numberOfSeats` cannot be reduced until renewal. The reseller is invoiced based on the `numberOfSeats` value regardless of how many of these user licenses are assigned. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "maximumNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `FLEXIBLE` or `TRIAL` plans. This property sets the maximum number of licensed users allowed on a subscription. This quantity can be increased up to the maximum limit defined in the reseller's contract. The minimum quantity is the current number of users in the customer account. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "licensedNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Read-only field containing the current number of users that are assigned a license for the product defined in `skuId`. This field's value is equivalent to the numerical count of users returned by the Enterprise License Manager API method: [`listForProductAndSku`](/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku)."
                }
              },
              "description": "This is a required property. The number and limit of user seat licenses in the plan."
            },
            "skuId": {
              "type": "string",
              "description": "A required property. The `skuId` is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "status": {
              "type": "string",
              "description": "This is an optional property."
            },
            "skuName": {
              "type": "string",
              "description": "Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "dealCode": {
              "type": "string",
              "description": "Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `insert` requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty."
            },
            "customerId": {
              "type": "string",
              "description": "This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google."
            },
            "creationTime": {
              "type": "string",
              "format": "int64",
              "description": "The `creationTime` property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter."
            },
            "transferInfo": {
              "type": "object",
              "properties": {
                "currentLegacySkuId": {
                  "type": "string",
                  "description": "Sku id of the current resold subscription. This is populated only when customer has subscription with legacy sku and the subscription resource is populated with recommeded sku for transfer in."
                },
                "minimumTransferableSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When inserting a subscription, this is the minimum number of seats listed in the transfer order for this product. For example, if the customer has 20 users, the reseller cannot place a transfer order of 15 seats. The minimum is 20 seats."
                },
                "transferabilityExpirationTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "The time when transfer token or intent to transfer will expire. The time is in milliseconds using UNIX Epoch format."
                }
              },
              "description": "Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer."
            },
            "billingMethod": {
              "type": "string",
              "description": "Read-only field that returns the current billing method for a subscription."
            },
            "resourceUiUrl": {
              "type": "string",
              "description": "URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console."
            },
            "trialSettings": {
              "type": "object",
              "properties": {
                "isInTrial": {
                  "type": "boolean",
                  "description": "Determines if a subscription's plan is in a 30-day free trial or not: - `true` — The plan is in trial. - `false` — The plan is not in trial. "
                },
                "trialEndTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                }
              },
              "description": "The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts."
            },
            "customerDomain": {
              "type": "string",
              "description": "Primary domain name of the customer"
            },
            "subscriptionId": {
              "type": "string",
              "description": "The `subscriptionId` is the subscription identifier and is unique for each customer. This is a required property. Since a `subscriptionId` changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the `subscriptionId` as described in retrieve all reseller subscriptions."
            },
            "purchaseOrderId": {
              "type": "string",
              "description": "This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters."
            },
            "renewalSettings": {
              "id": "RenewalSettings",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#renewalSettings",
                  "description": "Identifies the resource as a subscription renewal setting. Value: `subscriptions#renewalSettings`"
                },
                "renewalType": {
                  "type": "string",
                  "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a subscription, the `renewalType` is a required property."
                }
              },
              "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center."
            },
            "suspensionReasons": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's `STATUS` is `SUSPENDED` until all pending suspensions are removed. Possible options include: - `PENDING_TOS_ACCEPTANCE` - The customer has not logged in and accepted the G Suite Resold Terms of Services. - `RENEWAL_WITH_TYPE_CANCEL` - The customer's commitment ended and their service was cancelled at the end of their term. - `RESELLER_INITIATED` - A manual suspension invoked by a Reseller. - `TRIAL_ENDED` - The customer's trial expired without a plan selected. - `OTHER` - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). "
            }
          },
          "description": "JSON template for a subscription."
        }
      ]
  reseller.subscriptions.suspend:
    description: |-
      Suspends an active subscription. You can use this method to suspend a paid subscription that is currently in the `ACTIVE` state. * For `FLEXIBLE` subscriptions, billing is paused. * For `ANNUAL_MONTHLY_PAY` or `ANNUAL_YEARLY_PAY` subscriptions: * Suspending the subscription does not change the renewal date that was originally committed to. * A suspended subscription does not renew. If you activate the subscription after the original renewal date, a new annual subscription will be created, starting on the day of activation. We strongly encourage you to suspend subscriptions only for short periods of time as suspensions over 60 days may result in the subscription being cancelled.
    versions:
      from: 1.0.0
    link: https://developers.google.com/admin-sdk/reseller/reference/rest/v1/subscriptions/suspend
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Subscription",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "reseller#subscription",
              "description": "Identifies the resource as a Subscription. Value: `reseller#subscription`"
            },
            "plan": {
              "type": "object",
              "properties": {
                "planName": {
                  "type": "string",
                  "description": "The `planName` property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` — The annual commitment plan with monthly payments. *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` — The annual commitment plan with yearly payments - `FLEXIBLE` — The flexible plan - `TRIAL` — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling `changePlan` will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its 30th free day or immediately after calling `startPaidService`. - `FREE` — The free plan is exclusive to the Cloud Identity SKU and does not incur any billing. "
                },
                "isCommitmentPlan": {
                  "type": "boolean",
                  "description": "The `isCommitmentPlan` property's boolean value identifies the plan as an annual commitment plan: - `true` — The subscription's plan is an annual commitment plan. - `false` — The plan is not an annual commitment plan. "
                },
                "commitmentInterval": {
                  "type": "object",
                  "properties": {
                    "endTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `endTime` in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                    },
                    "startTime": {
                      "type": "string",
                      "format": "int64",
                      "description": "An annual commitment plan's interval's `startTime` in milliseconds using UNIX Epoch format. See an example Epoch converter."
                    }
                  },
                  "description": "In this version of the API, annual commitment plan's interval is one year. *Note: *When `billingMethod` value is `OFFLINE`, the subscription property object `plan.commitmentInterval` is omitted in all API responses. "
                }
              },
              "description": "The `plan` property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial plan. For more information about the API\"s payment plans, see the API concepts."
            },
            "seats": {
              "id": "Seats",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#seats",
                  "description": "Identifies the resource as a subscription seat setting. Value: `subscriptions#seats`"
                },
                "numberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `ANNUAL_MONTHLY_PAY` and `ANNUAL_YEARLY_PAY` plans. This property sets the maximum number of licenses assignable to users on a subscription. The reseller can add more licenses, but once set, the `numberOfSeats` cannot be reduced until renewal. The reseller is invoiced based on the `numberOfSeats` value regardless of how many of these user licenses are assigned. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "maximumNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "This is a required property and is exclusive to subscriptions with `FLEXIBLE` or `TRIAL` plans. This property sets the maximum number of licensed users allowed on a subscription. This quantity can be increased up to the maximum limit defined in the reseller's contract. The minimum quantity is the current number of users in the customer account. *Note: *G Suite subscriptions automatically assign a license to every user."
                },
                "licensedNumberOfSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Read-only field containing the current number of users that are assigned a license for the product defined in `skuId`. This field's value is equivalent to the numerical count of users returned by the Enterprise License Manager API method: [`listForProductAndSku`](/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku)."
                }
              },
              "description": "This is a required property. The number and limit of user seat licenses in the plan."
            },
            "skuId": {
              "type": "string",
              "description": "A required property. The `skuId` is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "status": {
              "type": "string",
              "description": "This is an optional property."
            },
            "skuName": {
              "type": "string",
              "description": "Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see Product and SKU IDs."
            },
            "dealCode": {
              "type": "string",
              "description": "Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `insert` requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty."
            },
            "customerId": {
              "type": "string",
              "description": "This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google."
            },
            "creationTime": {
              "type": "string",
              "format": "int64",
              "description": "The `creationTime` property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter."
            },
            "transferInfo": {
              "type": "object",
              "properties": {
                "currentLegacySkuId": {
                  "type": "string",
                  "description": "Sku id of the current resold subscription. This is populated only when customer has subscription with legacy sku and the subscription resource is populated with recommeded sku for transfer in."
                },
                "minimumTransferableSeats": {
                  "type": "integer",
                  "format": "int32",
                  "description": "When inserting a subscription, this is the minimum number of seats listed in the transfer order for this product. For example, if the customer has 20 users, the reseller cannot place a transfer order of 15 seats. The minimum is 20 seats."
                },
                "transferabilityExpirationTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "The time when transfer token or intent to transfer will expire. The time is in milliseconds using UNIX Epoch format."
                }
              },
              "description": "Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer."
            },
            "billingMethod": {
              "type": "string",
              "description": "Read-only field that returns the current billing method for a subscription."
            },
            "resourceUiUrl": {
              "type": "string",
              "description": "URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console."
            },
            "trialSettings": {
              "type": "object",
              "properties": {
                "isInTrial": {
                  "type": "boolean",
                  "description": "Determines if a subscription's plan is in a 30-day free trial or not: - `true` — The plan is in trial. - `false` — The plan is not in trial. "
                },
                "trialEndTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter."
                }
              },
              "description": "The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts."
            },
            "customerDomain": {
              "type": "string",
              "description": "Primary domain name of the customer"
            },
            "subscriptionId": {
              "type": "string",
              "description": "The `subscriptionId` is the subscription identifier and is unique for each customer. This is a required property. Since a `subscriptionId` changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the `subscriptionId` as described in retrieve all reseller subscriptions."
            },
            "purchaseOrderId": {
              "type": "string",
              "description": "This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters."
            },
            "renewalSettings": {
              "id": "RenewalSettings",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "subscriptions#renewalSettings",
                  "description": "Identifies the resource as a subscription renewal setting. Value: `subscriptions#renewalSettings`"
                },
                "renewalType": {
                  "type": "string",
                  "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a subscription, the `renewalType` is a required property."
                }
              },
              "description": "Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center."
            },
            "suspensionReasons": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's `STATUS` is `SUSPENDED` until all pending suspensions are removed. Possible options include: - `PENDING_TOS_ACCEPTANCE` - The customer has not logged in and accepted the G Suite Resold Terms of Services. - `RENEWAL_WITH_TYPE_CANCEL` - The customer's commitment ended and their service was cancelled at the end of their term. - `RESELLER_INITIATED` - A manual suspension invoked by a Reseller. - `TRIAL_ENDED` - The customer's trial expired without a plan selected. - `OTHER` - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). "
            }
          },
          "description": "JSON template for a subscription."
        }
      ]