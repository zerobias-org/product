Product:
  name: GCP Identity
  versions: [1.0.0]
  package: google.gcp.identity
  description: |-
    Cloud Identity
  link: https://cloud.google.com/identity
  contentType: json
Operations:
  devices.cancelWipe:
    description: |-
      Cancels an unfinished device wipe. This operation can be used to cancel device wipe in the gap between the wipe operation returning success and the device being wiped. This operation is possible when the device is in a "pending wipe" state. The device enters the "pending wipe" state when a wipe device command is issued, but has not yet been sent to the device. The cancel wipe will fail if the wipe command has already been issued to the device.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices/cancelWipe
    example:
      inputs: [
        {
          "id": "GoogleAppsCloudidentityDevicesV1CancelWipeDeviceRequest",
          "type": "object",
          "properties": {
            "customer": {
              "type": "string",
              "description": "Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs."
            }
          },
          "description": "Request message for cancelling an unfinished device wipe."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  devices.create:
    description: |-
      Creates a device. Only company-owned device may be created. **Note**: This method is available only to customers who have one of the following SKUs: Enterprise Standard, Enterprise Plus, Enterprise for Education, and Cloud Identity Premium
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices/create
    example:
      inputs: [
        {
          "id": "GoogleAppsCloudidentityDevicesV1Device",
          "type": "object",
          "properties": {
            "imei": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. IMEI number of device if GSM device; empty otherwise."
            },
            "meid": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. MEID number of device if CDMA device; empty otherwise."
            },
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device."
            },
            "brand": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Device brand. Example: Samsung."
            },
            "model": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Model name of device. Example: Pixel 3."
            },
            "assetTag": {
              "type": "string",
              "description": "Asset tag of the device."
            },
            "osVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. OS version of the device. Example: Android 8.1.0."
            },
            "ownerType": {
              "enum": [
                "DEVICE_OWNERSHIP_UNSPECIFIED",
                "COMPANY",
                "BYOD"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. Whether the device is owned by the company or an individual",
              "enumDescriptions": [
                "Default value. The value is unused.",
                "Company owns the device.",
                "Bring Your Own Device (i.e. individual owns the device)"
              ]
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. When the Company-Owned device was imported. This field is empty for BYOD devices."
            },
            "deviceType": {
              "enum": [
                "DEVICE_TYPE_UNSPECIFIED",
                "ANDROID",
                "IOS",
                "GOOGLE_SYNC",
                "WINDOWS",
                "MAC_OS",
                "LINUX",
                "CHROME_OS"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. Type of device.",
              "enumDescriptions": [
                "Unknown device type",
                "Device is an Android device",
                "Device is an iOS device",
                "Device is a Google Sync device.",
                "Device is a Windows device.",
                "Device is a MacOS device.",
                "Device is a Linux device.",
                "Device is a ChromeOS device."
              ]
            },
            "buildNumber": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Build number of the device."
            },
            "lastSyncTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Most recent time when device synced with this service."
            },
            "manufacturer": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Device manufacturer. Example: Motorola."
            },
            "serialNumber": {
              "type": "string",
              "description": "Serial Number of device. Example: HT82V1A01076."
            },
            "kernelVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Kernel version of the device."
            },
            "otherAccounts": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: \"com.example\", \"xyz.com\"."
            },
            "releaseVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. OS release version. Example: 6.0."
            },
            "basebandVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Baseband version of the device."
            },
            "encryptionState": {
              "enum": [
                "ENCRYPTION_STATE_UNSPECIFIED",
                "UNSUPPORTED_BY_DEVICE",
                "ENCRYPTED",
                "NOT_ENCRYPTED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. Device encryption state.",
              "enumDescriptions": [
                "Encryption Status is not set.",
                "Device doesn't support encryption.",
                "Device is encrypted.",
                "Device is not encrypted."
              ]
            },
            "managementState": {
              "enum": [
                "MANAGEMENT_STATE_UNSPECIFIED",
                "APPROVED",
                "BLOCKED",
                "PENDING",
                "UNPROVISIONED",
                "WIPING",
                "WIPED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. Management state of the device",
              "enumDescriptions": [
                "Default value. This value is unused.",
                "Device is approved.",
                "Device is blocked.",
                "Device is pending approval.",
                "The device is not provisioned. Device will start from this state until some action is taken (i.e. a user starts using the device).",
                "Data and settings on the device are being removed.",
                "All data and settings on the device are removed."
              ]
            },
            "networkOperator": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Mobile or network operator of device, if available."
            },
            "compromisedState": {
              "enum": [
                "COMPROMISED_STATE_UNSPECIFIED",
                "COMPROMISED",
                "UNCOMPROMISED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. Represents whether the Device is compromised.",
              "enumDescriptions": [
                "Default value.",
                "The device is compromised (currently, this means Android device is rooted).",
                "The device is safe (currently, this means Android device is unrooted)."
              ]
            },
            "wifiMacAddresses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "WiFi MAC addresses of device."
            },
            "bootloaderVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Device bootloader version. Example: 0.6.7."
            },
            "securityPatchTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. OS security patch update time on device."
            },
            "enabledUsbDebugging": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Whether USB debugging is enabled on device."
            },
            "enabledDeveloperOptions": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Whether developer options is enabled on device."
            },
            "androidSpecificAttributes": {
              "id": "GoogleAppsCloudidentityDevicesV1AndroidAttributes",
              "type": "object",
              "readOnly": true,
              "properties": {
                "ownershipPrivilege": {
                  "enum": [
                    "OWNERSHIP_PRIVILEGE_UNSPECIFIED",
                    "DEVICE_ADMINISTRATOR",
                    "PROFILE_OWNER",
                    "DEVICE_OWNER"
                  ],
                  "type": "string",
                  "description": "Ownership privileges on device.",
                  "enumDescriptions": [
                    "Ownership privilege is not set.",
                    "Active device administrator privileges on the device.",
                    "Profile Owner privileges. The account is in a managed corporate profile.",
                    "Device Owner privileges on the device."
                  ]
                },
                "ownerProfileAccount": {
                  "type": "boolean",
                  "description": "Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles."
                },
                "supportsWorkProfile": {
                  "type": "boolean",
                  "description": "Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the \"Enforce Work Profile\" policy."
                },
                "enabledUnknownSources": {
                  "type": "boolean",
                  "description": "Whether applications from unknown sources can be installed on device."
                }
              },
              "description": "Output only. Attributes specific to Android devices."
            }
          },
          "description": " A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  devices.delete:
    description: |-
      Deletes the specified device.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  devices.deviceUsers.approve:
    description: |-
      Approves device to access user data.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices.deviceUsers/approve
    example:
      inputs: [
        {
          "id": "GoogleAppsCloudidentityDevicesV1ApproveDeviceUserRequest",
          "type": "object",
          "properties": {
            "customer": {
              "type": "string",
              "description": "Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs."
            }
          },
          "description": "Request message for approving the device to access user data."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  devices.deviceUsers.block:
    description: |-
      Blocks device from accessing user data
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices.deviceUsers/block
    example:
      inputs: [
        {
          "id": "GoogleAppsCloudidentityDevicesV1BlockDeviceUserRequest",
          "type": "object",
          "properties": {
            "customer": {
              "type": "string",
              "description": "Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs."
            }
          },
          "description": "Request message for blocking account on device."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  devices.deviceUsers.cancelWipe:
    description: |-
      Cancels an unfinished user account wipe. This operation can be used to cancel device wipe in the gap between the wipe operation returning success and the device being wiped.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices.deviceUsers/cancelWipe
    example:
      inputs: [
        {
          "id": "GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserRequest",
          "type": "object",
          "properties": {
            "customer": {
              "type": "string",
              "description": "Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs."
            }
          },
          "description": "Request message for cancelling an unfinished user account wipe."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  devices.deviceUsers.clientStates.get:
    description: |-
      Gets the client state for the device user
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices.deviceUsers.clientStates/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleAppsCloudidentityDevicesV1ClientState",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "The token that needs to be passed back for concurrency control in updates. Token needs to be passed back in UpdateRequest"
            },
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the ClientState in format: `devices/{device_id}/deviceUsers/{device_user_id}/clientState/{partner_id}`, where partner_id corresponds to the partner storing the data. For partners belonging to the \"BeyondCorp Alliance\", this is the partner ID specified to you by Google. For all other callers, this is a string of the form: `{customer_id}-suffix`, where `customer_id` is your customer ID. The *suffix* is any string the caller specifies. This string will be displayed verbatim in the administration console. This suffix is used in setting up Custom Access Levels in Context-Aware Access. Your organization's customer ID can be obtained from the URL: `GET https://www.googleapis.com/admin/directory/v1/customers/my_customer` The `id` field in the response contains the customer ID starting with the letter 'C'. The customer ID to be used in this API is the string after the letter 'C' (not including 'C')"
            },
            "managed": {
              "enum": [
                "MANAGED_STATE_UNSPECIFIED",
                "MANAGED",
                "UNMANAGED"
              ],
              "type": "string",
              "description": "The management state of the resource as specified by the API client.",
              "enumDescriptions": [
                "The management state of the resource is unknown or unspecified.",
                "The resource is managed.",
                "The resource is not managed."
              ]
            },
            "customId": {
              "type": "string",
              "description": "This field may be used to store a unique identifier for the API resource within which these CustomAttributes are a field."
            },
            "assetTags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The caller can specify asset tags for this resource"
            },
            "ownerType": {
              "enum": [
                "OWNER_TYPE_UNSPECIFIED",
                "OWNER_TYPE_CUSTOMER",
                "OWNER_TYPE_PARTNER"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The owner of the ClientState",
              "enumDescriptions": [
                "Unknown owner type",
                "Customer is the owner",
                "Partner is the owner"
              ]
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time the client state data was created."
            },
            "healthScore": {
              "enum": [
                "HEALTH_SCORE_UNSPECIFIED",
                "VERY_POOR",
                "POOR",
                "NEUTRAL",
                "GOOD",
                "VERY_GOOD"
              ],
              "type": "string",
              "description": "The Health score of the resource. The Health score is the callers specification of the condition of the device from a usability point of view. For example, a third-party device management provider may specify a health score based on its compliance with organizational policies.",
              "enumDescriptions": [
                "Default value",
                "The object is in very poor health as defined by the caller.",
                "The object is in poor health as defined by the caller.",
                "The object health is neither good nor poor, as defined by the caller.",
                "The object is in good health as defined by the caller.",
                "The object is in very good health as defined by the caller."
              ]
            },
            "scoreReason": {
              "type": "string",
              "description": "A descriptive cause of the health score."
            },
            "keyValuePairs": {
              "type": "object",
              "description": "The map of key-value attributes stored by callers specific to a device. The total serialized length of this map may not exceed 10KB. No limit is placed on the number of attributes in a map.",
              "additionalProperties": {
                "id": "GoogleAppsCloudidentityDevicesV1CustomAttributeValue",
                "type": "object",
                "properties": {
                  "boolValue": {
                    "type": "boolean",
                    "description": "Represents a boolean value."
                  },
                  "numberValue": {
                    "type": "number",
                    "format": "double",
                    "description": "Represents a double value."
                  },
                  "stringValue": {
                    "type": "string",
                    "description": "Represents a string value."
                  }
                },
                "description": "Additional custom attribute values may be one of these types"
              }
            },
            "lastUpdateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time the client state data was last updated."
            },
            "complianceState": {
              "enum": [
                "COMPLIANCE_STATE_UNSPECIFIED",
                "COMPLIANT",
                "NON_COMPLIANT"
              ],
              "type": "string",
              "description": "The compliance state of the resource as specified by the API client.",
              "enumDescriptions": [
                "The compliance state of the resource is unknown or unspecified.",
                "Device is compliant with third party policies",
                "Device is not compliant with third party policies"
              ]
            }
          },
          "description": "Represents the state associated with an API client calling the Devices API. Resource representing ClientState and supports updates from API users"
        }
      ]
  devices.deviceUsers.clientStates.list:
    description: |-
      Lists the client states for the given search query.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices.deviceUsers.clientStates/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleAppsCloudidentityDevicesV1ListClientStatesResponse",
          "type": "object",
          "properties": {
            "clientStates": {
              "type": "array",
              "items": {
                "id": "GoogleAppsCloudidentityDevicesV1ClientState",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "The token that needs to be passed back for concurrency control in updates. Token needs to be passed back in UpdateRequest"
                  },
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the ClientState in format: `devices/{device_id}/deviceUsers/{device_user_id}/clientState/{partner_id}`, where partner_id corresponds to the partner storing the data. For partners belonging to the \"BeyondCorp Alliance\", this is the partner ID specified to you by Google. For all other callers, this is a string of the form: `{customer_id}-suffix`, where `customer_id` is your customer ID. The *suffix* is any string the caller specifies. This string will be displayed verbatim in the administration console. This suffix is used in setting up Custom Access Levels in Context-Aware Access. Your organization's customer ID can be obtained from the URL: `GET https://www.googleapis.com/admin/directory/v1/customers/my_customer` The `id` field in the response contains the customer ID starting with the letter 'C'. The customer ID to be used in this API is the string after the letter 'C' (not including 'C')"
                  },
                  "managed": {
                    "enum": [
                      "MANAGED_STATE_UNSPECIFIED",
                      "MANAGED",
                      "UNMANAGED"
                    ],
                    "type": "string",
                    "description": "The management state of the resource as specified by the API client.",
                    "enumDescriptions": [
                      "The management state of the resource is unknown or unspecified.",
                      "The resource is managed.",
                      "The resource is not managed."
                    ]
                  },
                  "customId": {
                    "type": "string",
                    "description": "This field may be used to store a unique identifier for the API resource within which these CustomAttributes are a field."
                  },
                  "assetTags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The caller can specify asset tags for this resource"
                  },
                  "ownerType": {
                    "enum": [
                      "OWNER_TYPE_UNSPECIFIED",
                      "OWNER_TYPE_CUSTOMER",
                      "OWNER_TYPE_PARTNER"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The owner of the ClientState",
                    "enumDescriptions": [
                      "Unknown owner type",
                      "Customer is the owner",
                      "Partner is the owner"
                    ]
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time the client state data was created."
                  },
                  "healthScore": {
                    "enum": [
                      "HEALTH_SCORE_UNSPECIFIED",
                      "VERY_POOR",
                      "POOR",
                      "NEUTRAL",
                      "GOOD",
                      "VERY_GOOD"
                    ],
                    "type": "string",
                    "description": "The Health score of the resource. The Health score is the callers specification of the condition of the device from a usability point of view. For example, a third-party device management provider may specify a health score based on its compliance with organizational policies.",
                    "enumDescriptions": [
                      "Default value",
                      "The object is in very poor health as defined by the caller.",
                      "The object is in poor health as defined by the caller.",
                      "The object health is neither good nor poor, as defined by the caller.",
                      "The object is in good health as defined by the caller.",
                      "The object is in very good health as defined by the caller."
                    ]
                  },
                  "scoreReason": {
                    "type": "string",
                    "description": "A descriptive cause of the health score."
                  },
                  "keyValuePairs": {
                    "type": "object",
                    "description": "The map of key-value attributes stored by callers specific to a device. The total serialized length of this map may not exceed 10KB. No limit is placed on the number of attributes in a map.",
                    "additionalProperties": {
                      "id": "GoogleAppsCloudidentityDevicesV1CustomAttributeValue",
                      "type": "object",
                      "properties": {
                        "boolValue": {
                          "type": "boolean",
                          "description": "Represents a boolean value."
                        },
                        "numberValue": {
                          "type": "number",
                          "format": "double",
                          "description": "Represents a double value."
                        },
                        "stringValue": {
                          "type": "string",
                          "description": "Represents a string value."
                        }
                      },
                      "description": "Additional custom attribute values may be one of these types"
                    }
                  },
                  "lastUpdateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time the client state data was last updated."
                  },
                  "complianceState": {
                    "enum": [
                      "COMPLIANCE_STATE_UNSPECIFIED",
                      "COMPLIANT",
                      "NON_COMPLIANT"
                    ],
                    "type": "string",
                    "description": "The compliance state of the resource as specified by the API client.",
                    "enumDescriptions": [
                      "The compliance state of the resource is unknown or unspecified.",
                      "Device is compliant with third party policies",
                      "Device is not compliant with third party policies"
                    ]
                  }
                },
                "description": "Represents the state associated with an API client calling the Devices API. Resource representing ClientState and supports updates from API users"
              },
              "description": "Client states meeting the list restrictions."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token to retrieve the next page of results. Empty if there are no more results."
            }
          },
          "description": "Response message that is returned in ListClientStates."
        }
      ]
  devices.deviceUsers.clientStates.patch:
    description: |-
      Updates the client state for the device user **Note**: This method is available only to customers who have one of the following SKUs: Enterprise Standard, Enterprise Plus, Enterprise for Education, and Cloud Identity Premium
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices.deviceUsers.clientStates/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  devices.deviceUsers.delete:
    description: |-
      Deletes the specified DeviceUser. This also revokes the user's access to device data.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices.deviceUsers/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  devices.deviceUsers.get:
    description: |-
      Retrieves the specified DeviceUser
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices.deviceUsers/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleAppsCloudidentityDevicesV1DeviceUser",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the DeviceUser in format: `devices/{device_id}/deviceUsers/{user_id}`, where user_id is the ID of the user associated with the user session."
            },
            "userAgent": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. User agent on the device for this specific user"
            },
            "userEmail": {
              "type": "string",
              "description": "Email address of the user registered on the device."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "When the user first signed in to the device"
            },
            "languageCode": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Default locale used on device, in IETF BCP-47 format."
            },
            "lastSyncTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Last time when user synced with policies."
            },
            "firstSyncTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Most recent time when user registered with this service."
            },
            "passwordState": {
              "enum": [
                "PASSWORD_STATE_UNSPECIFIED",
                "PASSWORD_SET",
                "PASSWORD_NOT_SET"
              ],
              "type": "string",
              "description": "Password state of the DeviceUser object",
              "enumDescriptions": [
                "Password state not set.",
                "Password set in object.",
                "Password not set in object."
              ]
            },
            "managementState": {
              "enum": [
                "MANAGEMENT_STATE_UNSPECIFIED",
                "WIPING",
                "WIPED",
                "APPROVED",
                "BLOCKED",
                "PENDING_APPROVAL",
                "UNENROLLED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. Management state of the user on the device.",
              "enumDescriptions": [
                "Default value. This value is unused.",
                "This user's data and profile is being removed from the device.",
                "This user's data and profile is removed from the device.",
                "User is approved to access data on the device.",
                "User is blocked from accessing data on the device.",
                "User is awaiting approval.",
                "User is unenrolled from Advanced Windows Management, but the Windows account is still intact."
              ]
            },
            "compromisedState": {
              "enum": [
                "COMPROMISED_STATE_UNSPECIFIED",
                "COMPROMISED",
                "NOT_COMPROMISED"
              ],
              "type": "string",
              "description": "Compromised State of the DeviceUser object",
              "enumDescriptions": [
                "Compromised state of Device User account is unknown or unspecified.",
                "Device User Account is compromised.",
                "Device User Account is not compromised."
              ]
            }
          },
          "description": "Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device"
        }
      ]
  devices.deviceUsers.list:
    description: |-
      Lists/Searches DeviceUsers.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices.deviceUsers/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleAppsCloudidentityDevicesV1ListDeviceUsersResponse",
          "type": "object",
          "properties": {
            "deviceUsers": {
              "type": "array",
              "items": {
                "id": "GoogleAppsCloudidentityDevicesV1DeviceUser",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the DeviceUser in format: `devices/{device_id}/deviceUsers/{user_id}`, where user_id is the ID of the user associated with the user session."
                  },
                  "userAgent": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. User agent on the device for this specific user"
                  },
                  "userEmail": {
                    "type": "string",
                    "description": "Email address of the user registered on the device."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "When the user first signed in to the device"
                  },
                  "languageCode": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Default locale used on device, in IETF BCP-47 format."
                  },
                  "lastSyncTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Last time when user synced with policies."
                  },
                  "firstSyncTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Most recent time when user registered with this service."
                  },
                  "passwordState": {
                    "enum": [
                      "PASSWORD_STATE_UNSPECIFIED",
                      "PASSWORD_SET",
                      "PASSWORD_NOT_SET"
                    ],
                    "type": "string",
                    "description": "Password state of the DeviceUser object",
                    "enumDescriptions": [
                      "Password state not set.",
                      "Password set in object.",
                      "Password not set in object."
                    ]
                  },
                  "managementState": {
                    "enum": [
                      "MANAGEMENT_STATE_UNSPECIFIED",
                      "WIPING",
                      "WIPED",
                      "APPROVED",
                      "BLOCKED",
                      "PENDING_APPROVAL",
                      "UNENROLLED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Management state of the user on the device.",
                    "enumDescriptions": [
                      "Default value. This value is unused.",
                      "This user's data and profile is being removed from the device.",
                      "This user's data and profile is removed from the device.",
                      "User is approved to access data on the device.",
                      "User is blocked from accessing data on the device.",
                      "User is awaiting approval.",
                      "User is unenrolled from Advanced Windows Management, but the Windows account is still intact."
                    ]
                  },
                  "compromisedState": {
                    "enum": [
                      "COMPROMISED_STATE_UNSPECIFIED",
                      "COMPROMISED",
                      "NOT_COMPROMISED"
                    ],
                    "type": "string",
                    "description": "Compromised State of the DeviceUser object",
                    "enumDescriptions": [
                      "Compromised state of Device User account is unknown or unspecified.",
                      "Device User Account is compromised.",
                      "Device User Account is not compromised."
                    ]
                  }
                },
                "description": "Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device"
              },
              "description": "Devices meeting the list restrictions."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token to retrieve the next page of results. Empty if there are no more results."
            }
          },
          "description": "Response message that is returned from the ListDeviceUsers method."
        }
      ]
  devices.deviceUsers.lookup:
    description: |-
      Looks up resource names of the DeviceUsers associated with the caller's credentials, as well as the properties provided in the request. This method must be called with end-user credentials with the scope: https://www.googleapis.com/auth/cloud-identity.devices.lookup If multiple properties are provided, only DeviceUsers having all of these properties are considered as matches - i.e. the query behaves like an AND. Different platforms require different amounts of information from the caller to ensure that the DeviceUser is uniquely identified. - iOS: No properties need to be passed, the caller's credentials are sufficient to identify the corresponding DeviceUser. - Android: Specifying the 'android_id' field is required. - Desktop: Specifying the 'raw_resource_id' field is required.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices.deviceUsers/lookup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse",
          "type": "object",
          "properties": {
            "names": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "[Resource names](https://cloud.google.com/apis/design/resource_names) of the DeviceUsers in the format: `devices/{device_id}/deviceUsers/{user_resource_id}`, where device_id is the unique ID assigned to a Device and user_resource_id is the unique user ID"
            },
            "customer": {
              "type": "string",
              "description": "The obfuscated customer Id that may be passed back to other Devices API methods such as List, Get, etc."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token to retrieve the next page of results. Empty if there are no more results."
            }
          },
          "description": "Response containing resource names of the DeviceUsers associated with the caller's credentials."
        }
      ]
  devices.deviceUsers.wipe:
    description: |-
      Wipes the user's account on a device. Other data on the device that is not associated with the user's work account is not affected. For example, if a Gmail app is installed on a device that is used for personal and work purposes, and the user is logged in to the Gmail app with their personal account as well as their work account, wiping the "deviceUser" by their work administrator will not affect their personal account within Gmail or other apps such as Photos.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices.deviceUsers/wipe
    example:
      inputs: [
        {
          "id": "GoogleAppsCloudidentityDevicesV1WipeDeviceUserRequest",
          "type": "object",
          "properties": {
            "customer": {
              "type": "string",
              "description": "Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs."
            }
          },
          "description": "Request message for starting an account wipe on device."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  devices.get:
    description: |-
      Retrieves the specified device.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  devices.list:
    description: |-
      Lists/Searches devices.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleAppsCloudidentityDevicesV1ListDevicesResponse",
          "type": "object",
          "properties": {
            "devices": {
              "type": "array",
              "items": {
                "id": "GoogleAppsCloudidentityDevicesV1Device",
                "type": "object",
                "properties": {
                  "imei": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. IMEI number of device if GSM device; empty otherwise."
                  },
                  "meid": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. MEID number of device if CDMA device; empty otherwise."
                  },
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device."
                  },
                  "brand": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Device brand. Example: Samsung."
                  },
                  "model": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Model name of device. Example: Pixel 3."
                  },
                  "assetTag": {
                    "type": "string",
                    "description": "Asset tag of the device."
                  },
                  "osVersion": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. OS version of the device. Example: Android 8.1.0."
                  },
                  "ownerType": {
                    "enum": [
                      "DEVICE_OWNERSHIP_UNSPECIFIED",
                      "COMPANY",
                      "BYOD"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Whether the device is owned by the company or an individual",
                    "enumDescriptions": [
                      "Default value. The value is unused.",
                      "Company owns the device.",
                      "Bring Your Own Device (i.e. individual owns the device)"
                    ]
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. When the Company-Owned device was imported. This field is empty for BYOD devices."
                  },
                  "deviceType": {
                    "enum": [
                      "DEVICE_TYPE_UNSPECIFIED",
                      "ANDROID",
                      "IOS",
                      "GOOGLE_SYNC",
                      "WINDOWS",
                      "MAC_OS",
                      "LINUX",
                      "CHROME_OS"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Type of device.",
                    "enumDescriptions": [
                      "Unknown device type",
                      "Device is an Android device",
                      "Device is an iOS device",
                      "Device is a Google Sync device.",
                      "Device is a Windows device.",
                      "Device is a MacOS device.",
                      "Device is a Linux device.",
                      "Device is a ChromeOS device."
                    ]
                  },
                  "buildNumber": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Build number of the device."
                  },
                  "lastSyncTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Most recent time when device synced with this service."
                  },
                  "manufacturer": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Device manufacturer. Example: Motorola."
                  },
                  "serialNumber": {
                    "type": "string",
                    "description": "Serial Number of device. Example: HT82V1A01076."
                  },
                  "kernelVersion": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Kernel version of the device."
                  },
                  "otherAccounts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true,
                    "description": "Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: \"com.example\", \"xyz.com\"."
                  },
                  "releaseVersion": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. OS release version. Example: 6.0."
                  },
                  "basebandVersion": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Baseband version of the device."
                  },
                  "encryptionState": {
                    "enum": [
                      "ENCRYPTION_STATE_UNSPECIFIED",
                      "UNSUPPORTED_BY_DEVICE",
                      "ENCRYPTED",
                      "NOT_ENCRYPTED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Device encryption state.",
                    "enumDescriptions": [
                      "Encryption Status is not set.",
                      "Device doesn't support encryption.",
                      "Device is encrypted.",
                      "Device is not encrypted."
                    ]
                  },
                  "managementState": {
                    "enum": [
                      "MANAGEMENT_STATE_UNSPECIFIED",
                      "APPROVED",
                      "BLOCKED",
                      "PENDING",
                      "UNPROVISIONED",
                      "WIPING",
                      "WIPED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Management state of the device",
                    "enumDescriptions": [
                      "Default value. This value is unused.",
                      "Device is approved.",
                      "Device is blocked.",
                      "Device is pending approval.",
                      "The device is not provisioned. Device will start from this state until some action is taken (i.e. a user starts using the device).",
                      "Data and settings on the device are being removed.",
                      "All data and settings on the device are removed."
                    ]
                  },
                  "networkOperator": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Mobile or network operator of device, if available."
                  },
                  "compromisedState": {
                    "enum": [
                      "COMPROMISED_STATE_UNSPECIFIED",
                      "COMPROMISED",
                      "UNCOMPROMISED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Represents whether the Device is compromised.",
                    "enumDescriptions": [
                      "Default value.",
                      "The device is compromised (currently, this means Android device is rooted).",
                      "The device is safe (currently, this means Android device is unrooted)."
                    ]
                  },
                  "wifiMacAddresses": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "WiFi MAC addresses of device."
                  },
                  "bootloaderVersion": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Device bootloader version. Example: 0.6.7."
                  },
                  "securityPatchTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. OS security patch update time on device."
                  },
                  "enabledUsbDebugging": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Output only. Whether USB debugging is enabled on device."
                  },
                  "enabledDeveloperOptions": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Output only. Whether developer options is enabled on device."
                  },
                  "androidSpecificAttributes": {
                    "id": "GoogleAppsCloudidentityDevicesV1AndroidAttributes",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "ownershipPrivilege": {
                        "enum": [
                          "OWNERSHIP_PRIVILEGE_UNSPECIFIED",
                          "DEVICE_ADMINISTRATOR",
                          "PROFILE_OWNER",
                          "DEVICE_OWNER"
                        ],
                        "type": "string",
                        "description": "Ownership privileges on device.",
                        "enumDescriptions": [
                          "Ownership privilege is not set.",
                          "Active device administrator privileges on the device.",
                          "Profile Owner privileges. The account is in a managed corporate profile.",
                          "Device Owner privileges on the device."
                        ]
                      },
                      "ownerProfileAccount": {
                        "type": "boolean",
                        "description": "Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles."
                      },
                      "supportsWorkProfile": {
                        "type": "boolean",
                        "description": "Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the \"Enforce Work Profile\" policy."
                      },
                      "enabledUnknownSources": {
                        "type": "boolean",
                        "description": "Whether applications from unknown sources can be installed on device."
                      }
                    },
                    "description": "Output only. Attributes specific to Android devices."
                  }
                },
                "description": " A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user."
              },
              "description": "Devices meeting the list restrictions."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token to retrieve the next page of results. Empty if there are no more results."
            }
          },
          "description": "Response message that is returned from the ListDevices method."
        }
      ]
  devices.wipe:
    description: |-
      Wipes all data on the specified device.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/devices/wipe
    example:
      inputs: [
        {
          "id": "GoogleAppsCloudidentityDevicesV1WipeDeviceRequest",
          "type": "object",
          "properties": {
            "customer": {
              "type": "string",
              "description": "Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs."
            }
          },
          "description": "Request message for wiping all data on the device."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  groups.create:
    description: |-
      Creates a Group.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups/create
    example:
      inputs: [
        {
          "id": "Group",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Group`. Shall be of the form `groups/{group_id}`."
            },
            "labels": {
              "type": "object",
              "description": "Required. One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google Groups are the default type of group and have a label with a key of `cloudidentity.googleapis.com/groups.discussion_forum` and an empty value. Existing Google Groups can have an additional label with a key of `cloudidentity.googleapis.com/groups.security` and an empty value added to them. **This is an immutable change and the security label cannot be removed once added.** Dynamic groups have a label with a key of `cloudidentity.googleapis.com/groups.dynamic`. Identity-mapped groups for Cloud Search have a label with a key of `system/groups/external` and an empty value. Examples: {\"cloudidentity.googleapis.com/groups.discussion_forum\": \"\"} or {\"system/groups/external\": \"\"}.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "parent": {
              "type": "string",
              "description": "Required. Immutable. The resource name of the entity under which this `Group` resides in the Cloud Identity resource hierarchy. Must be of the form `identitysources/{identity_source_id}` for external- identity-mapped groups or `customers/{customer_id}` for Google Groups."
            },
            "groupKey": {
              "id": "EntityKey",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`."
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}."
                }
              },
              "description": "Required. Immutable. The `EntityKey` of the `Group`."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time when the `Group` was created."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time when the `Group` was last updated."
            },
            "description": {
              "type": "string",
              "description": "An extended description to help users determine the purpose of a `Group`. Must not be longer than 4,096 characters."
            },
            "displayName": {
              "type": "string",
              "description": "The display name of the `Group`."
            },
            "dynamicGroupMetadata": {
              "id": "DynamicGroupMetadata",
              "type": "object",
              "properties": {
                "status": {
                  "id": "DynamicGroupStatus",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "status": {
                      "enum": [
                        "STATUS_UNSPECIFIED",
                        "UP_TO_DATE",
                        "UPDATING_MEMBERSHIPS"
                      ],
                      "type": "string",
                      "description": "Status of the dynamic group.",
                      "enumDescriptions": [
                        "Default.",
                        "The dynamic group is up-to-date.",
                        "The dynamic group has just been created and memberships are being updated."
                      ]
                    },
                    "statusTime": {
                      "type": "string",
                      "format": "google-datetime",
                      "description": "The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created."
                    }
                  },
                  "description": "Output only. Status of the dynamic group."
                },
                "queries": {
                  "type": "array",
                  "items": {
                    "id": "DynamicGroupQuery",
                    "type": "object",
                    "properties": {
                      "query": {
                        "type": "string",
                        "description": "Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')`"
                      },
                      "resourceType": {
                        "enum": [
                          "RESOURCE_TYPE_UNSPECIFIED",
                          "USER"
                        ],
                        "type": "string",
                        "description": "Resource type for the Dynamic Group Query",
                        "enumDescriptions": [
                          "Default value (not valid)",
                          "For queries on User"
                        ]
                      }
                    },
                    "description": "Defines a query on a resource."
                  },
                  "description": "Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups."
                }
              },
              "description": "Optional. Dynamic group metadata like queries and status."
            }
          },
          "description": "A group within the Cloud Identity Groups API. A `Group` is a collection of entities, where each entity is either a user, another group, or a service account."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  groups.delete:
    description: |-
      Deletes a `Group`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  groups.get:
    description: |-
      Retrieves a `Group`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  groups.list:
    description: |-
      Lists the `Group`s under a customer or namespace.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListGroupsResponse",
          "type": "object",
          "properties": {
            "groups": {
              "type": "array",
              "items": {
                "id": "Group",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Group`. Shall be of the form `groups/{group_id}`."
                  },
                  "labels": {
                    "type": "object",
                    "description": "Required. One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google Groups are the default type of group and have a label with a key of `cloudidentity.googleapis.com/groups.discussion_forum` and an empty value. Existing Google Groups can have an additional label with a key of `cloudidentity.googleapis.com/groups.security` and an empty value added to them. **This is an immutable change and the security label cannot be removed once added.** Dynamic groups have a label with a key of `cloudidentity.googleapis.com/groups.dynamic`. Identity-mapped groups for Cloud Search have a label with a key of `system/groups/external` and an empty value. Examples: {\"cloudidentity.googleapis.com/groups.discussion_forum\": \"\"} or {\"system/groups/external\": \"\"}.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "parent": {
                    "type": "string",
                    "description": "Required. Immutable. The resource name of the entity under which this `Group` resides in the Cloud Identity resource hierarchy. Must be of the form `identitysources/{identity_source_id}` for external- identity-mapped groups or `customers/{customer_id}` for Google Groups."
                  },
                  "groupKey": {
                    "id": "EntityKey",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`."
                      },
                      "namespace": {
                        "type": "string",
                        "description": "The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}."
                      }
                    },
                    "description": "Required. Immutable. The `EntityKey` of the `Group`."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time when the `Group` was created."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time when the `Group` was last updated."
                  },
                  "description": {
                    "type": "string",
                    "description": "An extended description to help users determine the purpose of a `Group`. Must not be longer than 4,096 characters."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the `Group`."
                  },
                  "dynamicGroupMetadata": {
                    "id": "DynamicGroupMetadata",
                    "type": "object",
                    "properties": {
                      "status": {
                        "id": "DynamicGroupStatus",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "status": {
                            "enum": [
                              "STATUS_UNSPECIFIED",
                              "UP_TO_DATE",
                              "UPDATING_MEMBERSHIPS"
                            ],
                            "type": "string",
                            "description": "Status of the dynamic group.",
                            "enumDescriptions": [
                              "Default.",
                              "The dynamic group is up-to-date.",
                              "The dynamic group has just been created and memberships are being updated."
                            ]
                          },
                          "statusTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created."
                          }
                        },
                        "description": "Output only. Status of the dynamic group."
                      },
                      "queries": {
                        "type": "array",
                        "items": {
                          "id": "DynamicGroupQuery",
                          "type": "object",
                          "properties": {
                            "query": {
                              "type": "string",
                              "description": "Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')`"
                            },
                            "resourceType": {
                              "enum": [
                                "RESOURCE_TYPE_UNSPECIFIED",
                                "USER"
                              ],
                              "type": "string",
                              "description": "Resource type for the Dynamic Group Query",
                              "enumDescriptions": [
                                "Default value (not valid)",
                                "For queries on User"
                              ]
                            }
                          },
                          "description": "Defines a query on a resource."
                        },
                        "description": "Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups."
                      }
                    },
                    "description": "Optional. Dynamic group metadata like queries and status."
                  }
                },
                "description": "A group within the Cloud Identity Groups API. A `Group` is a collection of entities, where each entity is either a user, another group, or a service account."
              },
              "description": "Groups returned in response to list request. The results are not sorted."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token to retrieve the next page of results, or empty if there are no more results available for listing."
            }
          },
          "description": "Response message for ListGroups operation."
        }
      ]
  groups.lookup:
    description: |-
      Looks up the [resource name](https://cloud.google.com/apis/design/resource_names) of a `Group` by its `EntityKey`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups/lookup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "LookupGroupNameResponse",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The [resource name](https://cloud.google.com/apis/design/resource_names) of the looked-up `Group`."
            }
          },
          "description": "The response message for GroupsService.LookupGroupName."
        }
      ]
  groups.memberships.checkTransitiveMembership:
    description: |-
      Check a potential member for membership in a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A member has membership to a group as long as there is a single viewable transitive membership between the group and the member. The actor must have view permissions to at least one transitive membership between the member and group.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups.memberships/checkTransitiveMembership
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "CheckTransitiveMembershipResponse",
          "type": "object",
          "properties": {
            "hasMembership": {
              "type": "boolean",
              "description": "Response does not include the possible roles of a member since the behavior of this rpc is not all-or-nothing unlike the other rpcs. So, it may not be possible to list all the roles definitively, due to possible lack of authorization in some of the paths."
            }
          },
          "description": "The response message for MembershipsService.CheckTransitiveMembership."
        }
      ]
  groups.memberships.create:
    description: |-
      Creates a `Membership`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups.memberships/create
    example:
      inputs: [
        {
          "id": "Membership",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group_id}/memberships/{membership_id}`."
            },
            "type": {
              "enum": [
                "TYPE_UNSPECIFIED",
                "USER",
                "SERVICE_ACCOUNT",
                "GROUP",
                "OTHER"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The type of the membership.",
              "enumDescriptions": [
                "Default. Should not be used.",
                "Represents user type.",
                "Represents service account type.",
                "Represents group type.",
                "Represents other type."
              ]
            },
            "roles": {
              "type": "array",
              "items": {
                "id": "MembershipRole",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`."
                  },
                  "expiryDetail": {
                    "id": "ExpiryDetail",
                    "type": "object",
                    "properties": {
                      "expireTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The time at which the `MembershipRole` will expire."
                      }
                    },
                    "description": "The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value."
                  }
                },
                "description": "A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`."
              },
              "description": "The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time when the `Membership` was created."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time when the `Membership` was last updated."
            },
            "preferredMemberKey": {
              "id": "EntityKey",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`."
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}."
                }
              },
              "description": "Required. Immutable. The `EntityKey` of the member."
            }
          },
          "description": "A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a \"member\"."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  groups.memberships.delete:
    description: |-
      Deletes a `Membership`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups.memberships/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  groups.memberships.get:
    description: |-
      Retrieves a `Membership`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups.memberships/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  groups.memberships.getMembershipGraph:
    description: |-
      Get a membership graph of just a member or both a member and a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. Given a member, the response will contain all membership paths from the member. Given both a group and a member, the response will contain all membership paths between the group and the member.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups.memberships/getMembershipGraph
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  groups.memberships.list:
    description: |-
      Lists the `Membership`s within a `Group`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups.memberships/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListMembershipsResponse",
          "type": "object",
          "properties": {
            "memberships": {
              "type": "array",
              "items": {
                "id": "Membership",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group_id}/memberships/{membership_id}`."
                  },
                  "type": {
                    "enum": [
                      "TYPE_UNSPECIFIED",
                      "USER",
                      "SERVICE_ACCOUNT",
                      "GROUP",
                      "OTHER"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The type of the membership.",
                    "enumDescriptions": [
                      "Default. Should not be used.",
                      "Represents user type.",
                      "Represents service account type.",
                      "Represents group type.",
                      "Represents other type."
                    ]
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "id": "MembershipRole",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`."
                        },
                        "expiryDetail": {
                          "id": "ExpiryDetail",
                          "type": "object",
                          "properties": {
                            "expireTime": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "The time at which the `MembershipRole` will expire."
                            }
                          },
                          "description": "The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value."
                        }
                      },
                      "description": "A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`."
                    },
                    "description": "The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time when the `Membership` was created."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time when the `Membership` was last updated."
                  },
                  "preferredMemberKey": {
                    "id": "EntityKey",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`."
                      },
                      "namespace": {
                        "type": "string",
                        "description": "The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}."
                      }
                    },
                    "description": "Required. Immutable. The `EntityKey` of the member."
                  }
                },
                "description": "A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a \"member\"."
              },
              "description": "The `Membership`s under the specified `parent`."
            },
            "nextPageToken": {
              "type": "string",
              "description": "A continuation token to retrieve the next page of results, or empty if there are no more results available."
            }
          },
          "description": "The response message for MembershipsService.ListMemberships."
        }
      ]
  groups.memberships.lookup:
    description: |-
      Looks up the [resource name](https://cloud.google.com/apis/design/resource_names) of a `Membership` by its `EntityKey`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups.memberships/lookup
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "LookupMembershipNameResponse",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The [resource name](https://cloud.google.com/apis/design/resource_names) of the looked-up `Membership`. Must be of the form `groups/{group_id}/memberships/{membership_id}`."
            }
          },
          "description": "The response message for MembershipsService.LookupMembershipName."
        }
      ]
  groups.memberships.modifyMembershipRoles:
    description: |-
      Modifies the `MembershipRole`s of a `Membership`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups.memberships/modifyMembershipRoles
    example:
      inputs: [
        {
          "id": "ModifyMembershipRolesRequest",
          "type": "object",
          "properties": {
            "addRoles": {
              "type": "array",
              "items": {
                "id": "MembershipRole",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`."
                  },
                  "expiryDetail": {
                    "id": "ExpiryDetail",
                    "type": "object",
                    "properties": {
                      "expireTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The time at which the `MembershipRole` will expire."
                      }
                    },
                    "description": "The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value."
                  }
                },
                "description": "A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`."
              },
              "description": "The `MembershipRole`s to be added. Adding or removing roles in the same request as updating roles is not supported. Must not be set if `update_roles_params` is set."
            },
            "removeRoles": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The `name`s of the `MembershipRole`s to be removed. Adding or removing roles in the same request as updating roles is not supported. It is not possible to remove the `MEMBER` `MembershipRole`. If you wish to delete a `Membership`, call MembershipsService.DeleteMembership instead. Must not contain `MEMBER`. Must not be set if `update_roles_params` is set."
            },
            "updateRolesParams": {
              "type": "array",
              "items": {
                "id": "UpdateMembershipRolesParams",
                "type": "object",
                "properties": {
                  "fieldMask": {
                    "type": "string",
                    "format": "google-fieldmask",
                    "description": "The fully-qualified names of fields to update. May only contain the field `expiry_detail`."
                  },
                  "membershipRole": {
                    "id": "MembershipRole",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`."
                      },
                      "expiryDetail": {
                        "id": "ExpiryDetail",
                        "type": "object",
                        "properties": {
                          "expireTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "The time at which the `MembershipRole` will expire."
                          }
                        },
                        "description": "The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value."
                      }
                    },
                    "description": "A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`."
                  }
                },
                "description": "The details of an update to a `MembershipRole`."
              },
              "description": "The `MembershipRole`s to be updated. Updating roles in the same request as adding or removing roles is not supported. Must not be set if either `add_roles` or `remove_roles` is set."
            }
          },
          "description": "The request message for MembershipsService.ModifyMembershipRoles."
        }
      ]
      outputs: [
        {
          "id": "ModifyMembershipRolesResponse",
          "type": "object",
          "properties": {
            "membership": {
              "id": "Membership",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group_id}/memberships/{membership_id}`."
                },
                "type": {
                  "enum": [
                    "TYPE_UNSPECIFIED",
                    "USER",
                    "SERVICE_ACCOUNT",
                    "GROUP",
                    "OTHER"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The type of the membership.",
                  "enumDescriptions": [
                    "Default. Should not be used.",
                    "Represents user type.",
                    "Represents service account type.",
                    "Represents group type.",
                    "Represents other type."
                  ]
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "id": "MembershipRole",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`."
                      },
                      "expiryDetail": {
                        "id": "ExpiryDetail",
                        "type": "object",
                        "properties": {
                          "expireTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "The time at which the `MembershipRole` will expire."
                          }
                        },
                        "description": "The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value."
                      }
                    },
                    "description": "A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`."
                  },
                  "description": "The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The time when the `Membership` was created."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The time when the `Membership` was last updated."
                },
                "preferredMemberKey": {
                  "id": "EntityKey",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`."
                    },
                    "namespace": {
                      "type": "string",
                      "description": "The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}."
                    }
                  },
                  "description": "Required. Immutable. The `EntityKey` of the member."
                }
              },
              "description": "A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a \"member\"."
            }
          },
          "description": "The response message for MembershipsService.ModifyMembershipRoles."
        }
      ]
  groups.memberships.searchTransitiveGroups:
    description: |-
      Search transitive groups of a member. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A transitive group is any group that has a direct or indirect membership to the member. Actor must have view permissions all transitive groups.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups.memberships/searchTransitiveGroups
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SearchTransitiveGroupsResponse",
          "type": "object",
          "properties": {
            "memberships": {
              "type": "array",
              "items": {
                "id": "GroupRelation",
                "type": "object",
                "properties": {
                  "group": {
                    "type": "string",
                    "description": "Resource name for this group."
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "id": "TransitiveMembershipRole",
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string",
                          "description": "TransitiveMembershipRole in string format. Currently supported TransitiveMembershipRoles: `\"MEMBER\"`, `\"OWNER\"`, and `\"MANAGER\"`."
                        }
                      },
                      "description": "Message representing the role of a TransitiveMembership."
                    },
                    "description": "Membership roles of the member for the group."
                  },
                  "labels": {
                    "type": "object",
                    "description": "Labels for Group resource.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "groupKey": {
                    "id": "EntityKey",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`."
                      },
                      "namespace": {
                        "type": "string",
                        "description": "The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}."
                      }
                    },
                    "description": "Entity key has an id and a namespace. In case of discussion forums, the id will be an email address without a namespace."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name for this group."
                  },
                  "relationType": {
                    "enum": [
                      "RELATION_TYPE_UNSPECIFIED",
                      "DIRECT",
                      "INDIRECT",
                      "DIRECT_AND_INDIRECT"
                    ],
                    "type": "string",
                    "description": "The relation between the member and the transitive group.",
                    "enumDescriptions": [
                      "The relation type is undefined or undetermined.",
                      "The two entities have only a direct membership with each other.",
                      "The two entities have only an indirect membership with each other.",
                      "The two entities have both a direct and an indirect membership with each other."
                    ]
                  }
                },
                "description": "Message representing a transitive group of a user or a group."
              },
              "description": "List of transitive groups satisfying the query."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token to retrieve the next page of results, or empty if there are no more results available for listing."
            }
          },
          "description": "The response message for MembershipsService.SearchTransitiveGroups."
        }
      ]
  groups.memberships.searchTransitiveMemberships:
    description: |-
      Search transitive memberships of a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the group is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A transitive membership is any direct or indirect membership of a group. Actor must have view permissions to all transitive memberships.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups.memberships/searchTransitiveMemberships
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SearchTransitiveMembershipsResponse",
          "type": "object",
          "properties": {
            "memberships": {
              "type": "array",
              "items": {
                "id": "MemberRelation",
                "type": "object",
                "properties": {
                  "roles": {
                    "type": "array",
                    "items": {
                      "id": "TransitiveMembershipRole",
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string",
                          "description": "TransitiveMembershipRole in string format. Currently supported TransitiveMembershipRoles: `\"MEMBER\"`, `\"OWNER\"`, and `\"MANAGER\"`."
                        }
                      },
                      "description": "Message representing the role of a TransitiveMembership."
                    },
                    "description": "The membership role details (i.e name of role and expiry time)."
                  },
                  "member": {
                    "type": "string",
                    "description": "Resource name for this member if member is a GROUP, otherwise it is empty."
                  },
                  "relationType": {
                    "enum": [
                      "RELATION_TYPE_UNSPECIFIED",
                      "DIRECT",
                      "INDIRECT",
                      "DIRECT_AND_INDIRECT"
                    ],
                    "type": "string",
                    "description": "The relation between the group and the transitive member.",
                    "enumDescriptions": [
                      "The relation type is undefined or undetermined.",
                      "The two entities have only a direct membership with each other.",
                      "The two entities have only an indirect membership with each other.",
                      "The two entities have both a direct and an indirect membership with each other."
                    ]
                  },
                  "preferredMemberKey": {
                    "type": "array",
                    "items": {
                      "id": "EntityKey",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`."
                        },
                        "namespace": {
                          "type": "string",
                          "description": "The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}."
                        }
                      },
                      "description": "A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s."
                    },
                    "description": "Entity key has an id and a namespace. In case of discussion forums, the id will be an email address without a namespace."
                  }
                },
                "description": "Message representing a transitive membership of a group."
              },
              "description": "List of transitive members satisfying the query."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token to retrieve the next page of results, or empty if there are no more results."
            }
          },
          "description": "The response message for MembershipsService.SearchTransitiveMemberships."
        }
      ]
  groups.patch:
    description: |-
      Updates a `Group`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups/patch
    example:
      inputs: [
        {
          "id": "Group",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Group`. Shall be of the form `groups/{group_id}`."
            },
            "labels": {
              "type": "object",
              "description": "Required. One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google Groups are the default type of group and have a label with a key of `cloudidentity.googleapis.com/groups.discussion_forum` and an empty value. Existing Google Groups can have an additional label with a key of `cloudidentity.googleapis.com/groups.security` and an empty value added to them. **This is an immutable change and the security label cannot be removed once added.** Dynamic groups have a label with a key of `cloudidentity.googleapis.com/groups.dynamic`. Identity-mapped groups for Cloud Search have a label with a key of `system/groups/external` and an empty value. Examples: {\"cloudidentity.googleapis.com/groups.discussion_forum\": \"\"} or {\"system/groups/external\": \"\"}.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "parent": {
              "type": "string",
              "description": "Required. Immutable. The resource name of the entity under which this `Group` resides in the Cloud Identity resource hierarchy. Must be of the form `identitysources/{identity_source_id}` for external- identity-mapped groups or `customers/{customer_id}` for Google Groups."
            },
            "groupKey": {
              "id": "EntityKey",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`."
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}."
                }
              },
              "description": "Required. Immutable. The `EntityKey` of the `Group`."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time when the `Group` was created."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time when the `Group` was last updated."
            },
            "description": {
              "type": "string",
              "description": "An extended description to help users determine the purpose of a `Group`. Must not be longer than 4,096 characters."
            },
            "displayName": {
              "type": "string",
              "description": "The display name of the `Group`."
            },
            "dynamicGroupMetadata": {
              "id": "DynamicGroupMetadata",
              "type": "object",
              "properties": {
                "status": {
                  "id": "DynamicGroupStatus",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "status": {
                      "enum": [
                        "STATUS_UNSPECIFIED",
                        "UP_TO_DATE",
                        "UPDATING_MEMBERSHIPS"
                      ],
                      "type": "string",
                      "description": "Status of the dynamic group.",
                      "enumDescriptions": [
                        "Default.",
                        "The dynamic group is up-to-date.",
                        "The dynamic group has just been created and memberships are being updated."
                      ]
                    },
                    "statusTime": {
                      "type": "string",
                      "format": "google-datetime",
                      "description": "The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created."
                    }
                  },
                  "description": "Output only. Status of the dynamic group."
                },
                "queries": {
                  "type": "array",
                  "items": {
                    "id": "DynamicGroupQuery",
                    "type": "object",
                    "properties": {
                      "query": {
                        "type": "string",
                        "description": "Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')`"
                      },
                      "resourceType": {
                        "enum": [
                          "RESOURCE_TYPE_UNSPECIFIED",
                          "USER"
                        ],
                        "type": "string",
                        "description": "Resource type for the Dynamic Group Query",
                        "enumDescriptions": [
                          "Default value (not valid)",
                          "For queries on User"
                        ]
                      }
                    },
                    "description": "Defines a query on a resource."
                  },
                  "description": "Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups."
                }
              },
              "description": "Optional. Dynamic group metadata like queries and status."
            }
          },
          "description": "A group within the Cloud Identity Groups API. A `Group` is a collection of entities, where each entity is either a user, another group, or a service account."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  groups.search:
    description: |-
      Searches for `Group`s matching a specified query.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/identity/docs/reference/rest/v1/groups/search
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SearchGroupsResponse",
          "type": "object",
          "properties": {
            "groups": {
              "type": "array",
              "items": {
                "id": "Group",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Group`. Shall be of the form `groups/{group_id}`."
                  },
                  "labels": {
                    "type": "object",
                    "description": "Required. One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google Groups are the default type of group and have a label with a key of `cloudidentity.googleapis.com/groups.discussion_forum` and an empty value. Existing Google Groups can have an additional label with a key of `cloudidentity.googleapis.com/groups.security` and an empty value added to them. **This is an immutable change and the security label cannot be removed once added.** Dynamic groups have a label with a key of `cloudidentity.googleapis.com/groups.dynamic`. Identity-mapped groups for Cloud Search have a label with a key of `system/groups/external` and an empty value. Examples: {\"cloudidentity.googleapis.com/groups.discussion_forum\": \"\"} or {\"system/groups/external\": \"\"}.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "parent": {
                    "type": "string",
                    "description": "Required. Immutable. The resource name of the entity under which this `Group` resides in the Cloud Identity resource hierarchy. Must be of the form `identitysources/{identity_source_id}` for external- identity-mapped groups or `customers/{customer_id}` for Google Groups."
                  },
                  "groupKey": {
                    "id": "EntityKey",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`."
                      },
                      "namespace": {
                        "type": "string",
                        "description": "The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}."
                      }
                    },
                    "description": "Required. Immutable. The `EntityKey` of the `Group`."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time when the `Group` was created."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time when the `Group` was last updated."
                  },
                  "description": {
                    "type": "string",
                    "description": "An extended description to help users determine the purpose of a `Group`. Must not be longer than 4,096 characters."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the `Group`."
                  },
                  "dynamicGroupMetadata": {
                    "id": "DynamicGroupMetadata",
                    "type": "object",
                    "properties": {
                      "status": {
                        "id": "DynamicGroupStatus",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "status": {
                            "enum": [
                              "STATUS_UNSPECIFIED",
                              "UP_TO_DATE",
                              "UPDATING_MEMBERSHIPS"
                            ],
                            "type": "string",
                            "description": "Status of the dynamic group.",
                            "enumDescriptions": [
                              "Default.",
                              "The dynamic group is up-to-date.",
                              "The dynamic group has just been created and memberships are being updated."
                            ]
                          },
                          "statusTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created."
                          }
                        },
                        "description": "Output only. Status of the dynamic group."
                      },
                      "queries": {
                        "type": "array",
                        "items": {
                          "id": "DynamicGroupQuery",
                          "type": "object",
                          "properties": {
                            "query": {
                              "type": "string",
                              "description": "Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')`"
                            },
                            "resourceType": {
                              "enum": [
                                "RESOURCE_TYPE_UNSPECIFIED",
                                "USER"
                              ],
                              "type": "string",
                              "description": "Resource type for the Dynamic Group Query",
                              "enumDescriptions": [
                                "Default value (not valid)",
                                "For queries on User"
                              ]
                            }
                          },
                          "description": "Defines a query on a resource."
                        },
                        "description": "Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups."
                      }
                    },
                    "description": "Optional. Dynamic group metadata like queries and status."
                  }
                },
                "description": "A group within the Cloud Identity Groups API. A `Group` is a collection of entities, where each entity is either a user, another group, or a service account."
              },
              "description": "The `Group`s that match the search query."
            },
            "nextPageToken": {
              "type": "string",
              "description": "A continuation token to retrieve the next page of results, or empty if there are no more results available."
            }
          },
          "description": "The response message for GroupsService.SearchGroups."
        }
      ]