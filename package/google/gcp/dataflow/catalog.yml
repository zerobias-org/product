Product:
  name: GCP Dataflow
  versions: [1.0.0]
  package: google.gcp.dataflow
  description: |-
    Dataflow
  link: https://cloud.google.com/dataflow
  contentType: json
Operations:
  projects.deleteSnapshots:
    description: |-
      Deletes a snapshot.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects/deleteSnapshots
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DeleteSnapshotResponse",
          "type": "object",
          "properties": {},
          "description": "Response from deleting a snapshot."
        }
      ]
  projects.jobs.aggregated:
    description: |-
      List the jobs of a project across all regions.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs/aggregated
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.jobs.create:
    description: |-
      Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.jobs.debug.getConfig:
    description: |-
      Get encoded debug configuration for component. Not cacheable.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs.debug/getConfig
    example:
      inputs: [
        {
          "id": "GetDebugConfigRequest",
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id."
            },
            "workerId": {
              "type": "string",
              "description": "The worker id, i.e., VM hostname."
            },
            "componentId": {
              "type": "string",
              "description": "The internal component id for which debug configuration is requested."
            }
          },
          "description": "Request to get updated debug configuration for component."
        }
      ]
      outputs: [
        {
          "id": "GetDebugConfigResponse",
          "type": "object",
          "properties": {
            "config": {
              "type": "string",
              "description": "The encoded debug configuration for the requested component."
            }
          },
          "description": "Response to a get debug configuration request."
        }
      ]
  projects.jobs.debug.sendCapture:
    description: |-
      Send encoded debug capture data for component.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs.debug/sendCapture
    example:
      inputs: [
        {
          "id": "SendDebugCaptureRequest",
          "type": "object",
          "properties": {
            "data": {
              "type": "string",
              "description": "The encoded debug information."
            },
            "location": {
              "type": "string",
              "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id."
            },
            "workerId": {
              "type": "string",
              "description": "The worker id, i.e., VM hostname."
            },
            "componentId": {
              "type": "string",
              "description": "The internal component id for which debug information is sent."
            }
          },
          "description": "Request to send encoded debug information."
        }
      ]
      outputs: [
        {
          "id": "SendDebugCaptureResponse",
          "type": "object",
          "properties": {},
          "description": "Response to a send capture request. nothing"
        }
      ]
  projects.jobs.get:
    description: |-
      Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.jobs.getMetrics:
    description: |-
      Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs/getMetrics
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "JobMetrics",
          "type": "object",
          "properties": {
            "metrics": {
              "type": "array",
              "items": {
                "id": "MetricUpdate",
                "type": "object",
                "properties": {
                  "set": {
                    "type": "any",
                    "description": "Worker-computed aggregate value for the \"Set\" aggregation kind. The only possible value type is a list of Values whose type can be Long, Double, or String, according to the metric's type. All Values in the list must be of the same type."
                  },
                  "kind": {
                    "type": "string",
                    "description": "Metric aggregation kind. The possible metric aggregation kinds are \"Sum\", \"Max\", \"Min\", \"Mean\", \"Set\", \"And\", \"Or\", and \"Distribution\". The specified aggregation kind is case-insensitive. If omitted, this is not an aggregated value but instead a single metric sample value."
                  },
                  "name": {
                    "id": "MetricStructuredName",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Worker-defined metric name."
                      },
                      "origin": {
                        "type": "string",
                        "description": "Origin (namespace) of metric name. May be blank for user-define metrics; will be \"dataflow\" for metrics defined by the Dataflow service or SDK."
                      },
                      "context": {
                        "type": "object",
                        "description": "Zero or more labeled fields which identify the part of the job this metric is associated with, such as the name of a step or collection. For example, built-in counters associated with steps will have context['step'] = . Counters associated with PCollections in the SDK will have context['pcollection'] = .",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "Name of the metric."
                  },
                  "gauge": {
                    "type": "any",
                    "description": "A struct value describing properties of a Gauge. Metrics of gauge type show the value of a metric across time, and is aggregated based on the newest value."
                  },
                  "scalar": {
                    "type": "any",
                    "description": "Worker-computed aggregate value for aggregation kinds \"Sum\", \"Max\", \"Min\", \"And\", and \"Or\". The possible value types are Long, Double, and Boolean."
                  },
                  "meanSum": {
                    "type": "any",
                    "description": "Worker-computed aggregate value for the \"Mean\" aggregation kind. This holds the sum of the aggregated values and is used in combination with mean_count below to obtain the actual mean aggregate value. The only possible value types are Long and Double."
                  },
                  "internal": {
                    "type": "any",
                    "description": "Worker-computed aggregate value for internal use by the Dataflow service."
                  },
                  "meanCount": {
                    "type": "any",
                    "description": "Worker-computed aggregate value for the \"Mean\" aggregation kind. This holds the count of the aggregated values and is used in combination with mean_sum above to obtain the actual mean aggregate value. The only possible value type is Long."
                  },
                  "cumulative": {
                    "type": "boolean",
                    "description": "True if this metric is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this metric is reported as a delta that is not associated with any WorkItem."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Timestamp associated with the metric value. Optional when workers are reporting work progress; it will be filled in responses from the metrics API."
                  },
                  "distribution": {
                    "type": "any",
                    "description": "A struct value describing properties of a distribution of numeric values."
                  }
                },
                "description": "Describes the state of a metric."
              },
              "description": "All metrics for this job."
            },
            "metricTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Timestamp as of which metric values are current."
            }
          },
          "description": "JobMetrics contains a collection of metrics describing the detailed progress of a Dataflow job. Metrics correspond to user-defined and system-defined metrics in the job. This resource captures only the most recent values of each metric; time-series data can be queried for them (under the same metric names) from Cloud Monitoring."
        }
      ]
  projects.jobs.list:
    description: |-
      List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, as you can only get the list of jobs that are running in `us-central1`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.jobs.messages.list:
    description: |-
      Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs.messages/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListJobMessagesResponse",
          "type": "object",
          "properties": {
            "jobMessages": {
              "type": "array",
              "items": {
                "id": "JobMessage",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Deprecated."
                  },
                  "time": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The timestamp of the message."
                  },
                  "messageText": {
                    "type": "string",
                    "description": "The text of the message."
                  },
                  "messageImportance": {
                    "enum": [
                      "JOB_MESSAGE_IMPORTANCE_UNKNOWN",
                      "JOB_MESSAGE_DEBUG",
                      "JOB_MESSAGE_DETAILED",
                      "JOB_MESSAGE_BASIC",
                      "JOB_MESSAGE_WARNING",
                      "JOB_MESSAGE_ERROR"
                    ],
                    "type": "string",
                    "description": "Importance level of the message.",
                    "enumDescriptions": [
                      "The message importance isn't specified, or is unknown.",
                      "The message is at the 'debug' level: typically only useful for software engineers working on the code the job is running. Typically, Dataflow pipeline runners do not display log messages at this level by default.",
                      "The message is at the 'detailed' level: somewhat verbose, but potentially useful to users. Typically, Dataflow pipeline runners do not display log messages at this level by default. These messages are displayed by default in the Dataflow monitoring UI.",
                      "The message is at the 'basic' level: useful for keeping track of the execution of a Dataflow pipeline. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.",
                      "The message is at the 'warning' level: indicating a condition pertaining to a job which may require human intervention. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.",
                      "The message is at the 'error' level: indicating a condition preventing a job from succeeding. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI."
                    ]
                  }
                },
                "description": "A particular message pertaining to a Dataflow job."
              },
              "description": "Messages in ascending timestamp order."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The token to obtain the next page of results if there are more."
            },
            "autoscalingEvents": {
              "type": "array",
              "items": {
                "id": "AutoscalingEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time this event was emitted to indicate a new target or current num_workers value."
                  },
                  "eventType": {
                    "enum": [
                      "TYPE_UNKNOWN",
                      "TARGET_NUM_WORKERS_CHANGED",
                      "CURRENT_NUM_WORKERS_CHANGED",
                      "ACTUATION_FAILURE",
                      "NO_CHANGE"
                    ],
                    "type": "string",
                    "description": "The type of autoscaling event to report.",
                    "enumDescriptions": [
                      "Default type for the enum. Value should never be returned.",
                      "The TARGET_NUM_WORKERS_CHANGED type should be used when the target worker pool size has changed at the start of an actuation. An event should always be specified as TARGET_NUM_WORKERS_CHANGED if it reflects a change in the target_num_workers.",
                      "The CURRENT_NUM_WORKERS_CHANGED type should be used when actual worker pool size has been changed, but the target_num_workers has not changed.",
                      "The ACTUATION_FAILURE type should be used when we want to report an error to the user indicating why the current number of workers in the pool could not be changed. Displayed in the current status and history widgets.",
                      "Used when we want to report to the user a reason why we are not currently adjusting the number of workers. Should specify both target_num_workers, current_num_workers and a decision_message."
                    ]
                  },
                  "workerPool": {
                    "type": "string",
                    "description": "A short and friendly name for the worker pool this event refers to, populated from the value of PoolStageRelation::user_pool_name."
                  },
                  "description": {
                    "id": "StructuredMessage",
                    "type": "object",
                    "properties": {
                      "messageKey": {
                        "type": "string",
                        "description": "Identifier for this message type. Used by external systems to internationalize or personalize message."
                      },
                      "parameters": {
                        "type": "array",
                        "items": {
                          "id": "Parameter",
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Key or name for this parameter."
                            },
                            "value": {
                              "type": "any",
                              "description": "Value for this parameter."
                            }
                          },
                          "description": "Structured data associated with this message."
                        },
                        "description": "The structured data associated with this message."
                      },
                      "messageText": {
                        "type": "string",
                        "description": "Human-readable version of message."
                      }
                    },
                    "description": "A message describing why the system decided to adjust the current number of workers, why it failed, or why the system decided to not make any changes to the number of workers."
                  },
                  "targetNumWorkers": {
                    "type": "string",
                    "format": "int64",
                    "description": "The target number of workers the worker pool wants to resize to use."
                  },
                  "currentNumWorkers": {
                    "type": "string",
                    "format": "int64",
                    "description": "The current number of workers the job has."
                  }
                },
                "description": "A structured message reporting an autoscaling decision made by the Dataflow service."
              },
              "description": "Autoscaling events in ascending timestamp order."
            }
          },
          "description": "Response to a request to list job messages."
        }
      ]
  projects.jobs.snapshot:
    description: |-
      Snapshot the state of a streaming job.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs/snapshot
    example:
      inputs: [
        {
          "id": "SnapshotJobRequest",
          "type": "object",
          "properties": {
            "ttl": {
              "type": "string",
              "format": "google-duration",
              "description": "TTL for the snapshot."
            },
            "location": {
              "type": "string",
              "description": "The location that contains this job."
            },
            "description": {
              "type": "string",
              "description": "User specified description of the snapshot. Maybe empty."
            },
            "snapshotSources": {
              "type": "boolean",
              "description": "If true, perform snapshots for sources which support this."
            }
          },
          "description": "Request to create a snapshot of a job."
        }
      ]
      outputs: [
        {
          "id": "Snapshot",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID of this snapshot."
            },
            "ttl": {
              "type": "string",
              "format": "google-duration",
              "description": "The time after which this snapshot will be automatically deleted."
            },
            "state": {
              "enum": [
                "UNKNOWN_SNAPSHOT_STATE",
                "PENDING",
                "RUNNING",
                "READY",
                "FAILED",
                "DELETED"
              ],
              "type": "string",
              "description": "State of the snapshot.",
              "enumDescriptions": [
                "Unknown state.",
                "Snapshot intent to create has been persisted, snapshotting of state has not yet started.",
                "Snapshotting is being performed.",
                "Snapshot has been created and is ready to be used.",
                "Snapshot failed to be created.",
                "Snapshot has been deleted."
              ]
            },
            "region": {
              "type": "string",
              "description": "Cloud region where this snapshot lives in, e.g., \"us-central1\"."
            },
            "projectId": {
              "type": "string",
              "description": "The project this snapshot belongs to."
            },
            "description": {
              "type": "string",
              "description": "User specified description of the snapshot. Maybe empty."
            },
            "sourceJobId": {
              "type": "string",
              "description": "The job this snapshot was created from."
            },
            "creationTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this snapshot was created."
            },
            "diskSizeBytes": {
              "type": "string",
              "format": "int64",
              "description": "The disk byte size of the snapshot. Only available for snapshots in READY state."
            },
            "pubsubMetadata": {
              "type": "array",
              "items": {
                "id": "PubsubSnapshotMetadata",
                "type": "object",
                "properties": {
                  "topicName": {
                    "type": "string",
                    "description": "The name of the Pubsub topic."
                  },
                  "expireTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The expire time of the Pubsub snapshot."
                  },
                  "snapshotName": {
                    "type": "string",
                    "description": "The name of the Pubsub snapshot."
                  }
                },
                "description": "Represents a Pubsub snapshot."
              },
              "description": "PubSub snapshot metadata."
            }
          },
          "description": "Represents a snapshot of a job."
        }
      ]
  projects.jobs.update:
    description: |-
      Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.jobs.workItems.lease:
    description: |-
      Leases a dataflow WorkItem to run.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs.workItems/lease
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.jobs.workItems.reportStatus:
    description: |-
      Reports the status of dataflow WorkItems leased by a worker.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs.workItems/reportStatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.flexTemplates.launch:
    description: |-
      Launch a job with a FlexTemplate.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.flexTemplates/launch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.jobs.create:
    description: |-
      Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.jobs.debug.getConfig:
    description: |-
      Get encoded debug configuration for component. Not cacheable.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs.debug/getConfig
    example:
      inputs: [
        {
          "id": "GetDebugConfigRequest",
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id."
            },
            "workerId": {
              "type": "string",
              "description": "The worker id, i.e., VM hostname."
            },
            "componentId": {
              "type": "string",
              "description": "The internal component id for which debug configuration is requested."
            }
          },
          "description": "Request to get updated debug configuration for component."
        }
      ]
      outputs: [
        {
          "id": "GetDebugConfigResponse",
          "type": "object",
          "properties": {
            "config": {
              "type": "string",
              "description": "The encoded debug configuration for the requested component."
            }
          },
          "description": "Response to a get debug configuration request."
        }
      ]
  projects.locations.jobs.debug.sendCapture:
    description: |-
      Send encoded debug capture data for component.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs.debug/sendCapture
    example:
      inputs: [
        {
          "id": "SendDebugCaptureRequest",
          "type": "object",
          "properties": {
            "data": {
              "type": "string",
              "description": "The encoded debug information."
            },
            "location": {
              "type": "string",
              "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id."
            },
            "workerId": {
              "type": "string",
              "description": "The worker id, i.e., VM hostname."
            },
            "componentId": {
              "type": "string",
              "description": "The internal component id for which debug information is sent."
            }
          },
          "description": "Request to send encoded debug information."
        }
      ]
      outputs: [
        {
          "id": "SendDebugCaptureResponse",
          "type": "object",
          "properties": {},
          "description": "Response to a send capture request. nothing"
        }
      ]
  projects.locations.jobs.get:
    description: |-
      Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.jobs.getExecutionDetails:
    description: |-
      Request detailed information about the execution status of the job. EXPERIMENTAL. This API is subject to change or removal without notice.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs/getExecutionDetails
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "JobExecutionDetails",
          "type": "object",
          "properties": {
            "stages": {
              "type": "array",
              "items": {
                "id": "StageSummary",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "EXECUTION_STATE_UNKNOWN",
                      "EXECUTION_STATE_NOT_STARTED",
                      "EXECUTION_STATE_RUNNING",
                      "EXECUTION_STATE_SUCCEEDED",
                      "EXECUTION_STATE_FAILED",
                      "EXECUTION_STATE_CANCELLED"
                    ],
                    "type": "string",
                    "description": "State of this stage.",
                    "enumDescriptions": [
                      "The component state is unknown or unspecified.",
                      "The component is not yet running.",
                      "The component is currently running.",
                      "The component succeeded.",
                      "The component failed.",
                      "Execution of the component was cancelled."
                    ]
                  },
                  "endTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "End time of this stage. If the work item is completed, this is the actual end time of the stage. Otherwise, it is the predicted end time."
                  },
                  "metrics": {
                    "type": "array",
                    "items": {
                      "id": "MetricUpdate",
                      "type": "object",
                      "properties": {
                        "set": {
                          "type": "any",
                          "description": "Worker-computed aggregate value for the \"Set\" aggregation kind. The only possible value type is a list of Values whose type can be Long, Double, or String, according to the metric's type. All Values in the list must be of the same type."
                        },
                        "kind": {
                          "type": "string",
                          "description": "Metric aggregation kind. The possible metric aggregation kinds are \"Sum\", \"Max\", \"Min\", \"Mean\", \"Set\", \"And\", \"Or\", and \"Distribution\". The specified aggregation kind is case-insensitive. If omitted, this is not an aggregated value but instead a single metric sample value."
                        },
                        "name": {
                          "id": "MetricStructuredName",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Worker-defined metric name."
                            },
                            "origin": {
                              "type": "string",
                              "description": "Origin (namespace) of metric name. May be blank for user-define metrics; will be \"dataflow\" for metrics defined by the Dataflow service or SDK."
                            },
                            "context": {
                              "type": "object",
                              "description": "Zero or more labeled fields which identify the part of the job this metric is associated with, such as the name of a step or collection. For example, built-in counters associated with steps will have context['step'] = . Counters associated with PCollections in the SDK will have context['pcollection'] = .",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "Name of the metric."
                        },
                        "gauge": {
                          "type": "any",
                          "description": "A struct value describing properties of a Gauge. Metrics of gauge type show the value of a metric across time, and is aggregated based on the newest value."
                        },
                        "scalar": {
                          "type": "any",
                          "description": "Worker-computed aggregate value for aggregation kinds \"Sum\", \"Max\", \"Min\", \"And\", and \"Or\". The possible value types are Long, Double, and Boolean."
                        },
                        "meanSum": {
                          "type": "any",
                          "description": "Worker-computed aggregate value for the \"Mean\" aggregation kind. This holds the sum of the aggregated values and is used in combination with mean_count below to obtain the actual mean aggregate value. The only possible value types are Long and Double."
                        },
                        "internal": {
                          "type": "any",
                          "description": "Worker-computed aggregate value for internal use by the Dataflow service."
                        },
                        "meanCount": {
                          "type": "any",
                          "description": "Worker-computed aggregate value for the \"Mean\" aggregation kind. This holds the count of the aggregated values and is used in combination with mean_sum above to obtain the actual mean aggregate value. The only possible value type is Long."
                        },
                        "cumulative": {
                          "type": "boolean",
                          "description": "True if this metric is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this metric is reported as a delta that is not associated with any WorkItem."
                        },
                        "updateTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "Timestamp associated with the metric value. Optional when workers are reporting work progress; it will be filled in responses from the metrics API."
                        },
                        "distribution": {
                          "type": "any",
                          "description": "A struct value describing properties of a distribution of numeric values."
                        }
                      },
                      "description": "Describes the state of a metric."
                    },
                    "description": "Metrics for this stage."
                  },
                  "stageId": {
                    "type": "string",
                    "description": "ID of this stage"
                  },
                  "progress": {
                    "id": "ProgressTimeseries",
                    "type": "object",
                    "properties": {
                      "dataPoints": {
                        "type": "array",
                        "items": {
                          "id": "Point",
                          "type": "object",
                          "properties": {
                            "time": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "The timestamp of the point."
                            },
                            "value": {
                              "type": "number",
                              "format": "double",
                              "description": "The value of the point."
                            }
                          },
                          "description": "A point in the timeseries."
                        },
                        "description": "History of progress for the component. Points are sorted by time."
                      },
                      "currentProgress": {
                        "type": "number",
                        "format": "double",
                        "description": "The current progress of the component, in the range [0,1]."
                      }
                    },
                    "description": "Progress for this stage. Only applicable to Batch jobs."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Start time of this stage."
                  }
                },
                "description": "Information about a particular execution stage of a job."
              },
              "description": "The stages of the job execution."
            },
            "nextPageToken": {
              "type": "string",
              "description": "If present, this response does not contain all requested tasks. To obtain the next page of results, repeat the request with page_token set to this value."
            }
          },
          "description": "Information about the execution of a job."
        }
      ]
  projects.locations.jobs.getMetrics:
    description: |-
      Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs/getMetrics
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "JobMetrics",
          "type": "object",
          "properties": {
            "metrics": {
              "type": "array",
              "items": {
                "id": "MetricUpdate",
                "type": "object",
                "properties": {
                  "set": {
                    "type": "any",
                    "description": "Worker-computed aggregate value for the \"Set\" aggregation kind. The only possible value type is a list of Values whose type can be Long, Double, or String, according to the metric's type. All Values in the list must be of the same type."
                  },
                  "kind": {
                    "type": "string",
                    "description": "Metric aggregation kind. The possible metric aggregation kinds are \"Sum\", \"Max\", \"Min\", \"Mean\", \"Set\", \"And\", \"Or\", and \"Distribution\". The specified aggregation kind is case-insensitive. If omitted, this is not an aggregated value but instead a single metric sample value."
                  },
                  "name": {
                    "id": "MetricStructuredName",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Worker-defined metric name."
                      },
                      "origin": {
                        "type": "string",
                        "description": "Origin (namespace) of metric name. May be blank for user-define metrics; will be \"dataflow\" for metrics defined by the Dataflow service or SDK."
                      },
                      "context": {
                        "type": "object",
                        "description": "Zero or more labeled fields which identify the part of the job this metric is associated with, such as the name of a step or collection. For example, built-in counters associated with steps will have context['step'] = . Counters associated with PCollections in the SDK will have context['pcollection'] = .",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "Name of the metric."
                  },
                  "gauge": {
                    "type": "any",
                    "description": "A struct value describing properties of a Gauge. Metrics of gauge type show the value of a metric across time, and is aggregated based on the newest value."
                  },
                  "scalar": {
                    "type": "any",
                    "description": "Worker-computed aggregate value for aggregation kinds \"Sum\", \"Max\", \"Min\", \"And\", and \"Or\". The possible value types are Long, Double, and Boolean."
                  },
                  "meanSum": {
                    "type": "any",
                    "description": "Worker-computed aggregate value for the \"Mean\" aggregation kind. This holds the sum of the aggregated values and is used in combination with mean_count below to obtain the actual mean aggregate value. The only possible value types are Long and Double."
                  },
                  "internal": {
                    "type": "any",
                    "description": "Worker-computed aggregate value for internal use by the Dataflow service."
                  },
                  "meanCount": {
                    "type": "any",
                    "description": "Worker-computed aggregate value for the \"Mean\" aggregation kind. This holds the count of the aggregated values and is used in combination with mean_sum above to obtain the actual mean aggregate value. The only possible value type is Long."
                  },
                  "cumulative": {
                    "type": "boolean",
                    "description": "True if this metric is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this metric is reported as a delta that is not associated with any WorkItem."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Timestamp associated with the metric value. Optional when workers are reporting work progress; it will be filled in responses from the metrics API."
                  },
                  "distribution": {
                    "type": "any",
                    "description": "A struct value describing properties of a distribution of numeric values."
                  }
                },
                "description": "Describes the state of a metric."
              },
              "description": "All metrics for this job."
            },
            "metricTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Timestamp as of which metric values are current."
            }
          },
          "description": "JobMetrics contains a collection of metrics describing the detailed progress of a Dataflow job. Metrics correspond to user-defined and system-defined metrics in the job. This resource captures only the most recent values of each metric; time-series data can be queried for them (under the same metric names) from Cloud Monitoring."
        }
      ]
  projects.locations.jobs.list:
    description: |-
      List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, as you can only get the list of jobs that are running in `us-central1`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.jobs.messages.list:
    description: |-
      Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs.messages/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListJobMessagesResponse",
          "type": "object",
          "properties": {
            "jobMessages": {
              "type": "array",
              "items": {
                "id": "JobMessage",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Deprecated."
                  },
                  "time": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The timestamp of the message."
                  },
                  "messageText": {
                    "type": "string",
                    "description": "The text of the message."
                  },
                  "messageImportance": {
                    "enum": [
                      "JOB_MESSAGE_IMPORTANCE_UNKNOWN",
                      "JOB_MESSAGE_DEBUG",
                      "JOB_MESSAGE_DETAILED",
                      "JOB_MESSAGE_BASIC",
                      "JOB_MESSAGE_WARNING",
                      "JOB_MESSAGE_ERROR"
                    ],
                    "type": "string",
                    "description": "Importance level of the message.",
                    "enumDescriptions": [
                      "The message importance isn't specified, or is unknown.",
                      "The message is at the 'debug' level: typically only useful for software engineers working on the code the job is running. Typically, Dataflow pipeline runners do not display log messages at this level by default.",
                      "The message is at the 'detailed' level: somewhat verbose, but potentially useful to users. Typically, Dataflow pipeline runners do not display log messages at this level by default. These messages are displayed by default in the Dataflow monitoring UI.",
                      "The message is at the 'basic' level: useful for keeping track of the execution of a Dataflow pipeline. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.",
                      "The message is at the 'warning' level: indicating a condition pertaining to a job which may require human intervention. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI.",
                      "The message is at the 'error' level: indicating a condition preventing a job from succeeding. Typically, Dataflow pipeline runners display log messages at this level by default, and these messages are displayed by default in the Dataflow monitoring UI."
                    ]
                  }
                },
                "description": "A particular message pertaining to a Dataflow job."
              },
              "description": "Messages in ascending timestamp order."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The token to obtain the next page of results if there are more."
            },
            "autoscalingEvents": {
              "type": "array",
              "items": {
                "id": "AutoscalingEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time this event was emitted to indicate a new target or current num_workers value."
                  },
                  "eventType": {
                    "enum": [
                      "TYPE_UNKNOWN",
                      "TARGET_NUM_WORKERS_CHANGED",
                      "CURRENT_NUM_WORKERS_CHANGED",
                      "ACTUATION_FAILURE",
                      "NO_CHANGE"
                    ],
                    "type": "string",
                    "description": "The type of autoscaling event to report.",
                    "enumDescriptions": [
                      "Default type for the enum. Value should never be returned.",
                      "The TARGET_NUM_WORKERS_CHANGED type should be used when the target worker pool size has changed at the start of an actuation. An event should always be specified as TARGET_NUM_WORKERS_CHANGED if it reflects a change in the target_num_workers.",
                      "The CURRENT_NUM_WORKERS_CHANGED type should be used when actual worker pool size has been changed, but the target_num_workers has not changed.",
                      "The ACTUATION_FAILURE type should be used when we want to report an error to the user indicating why the current number of workers in the pool could not be changed. Displayed in the current status and history widgets.",
                      "Used when we want to report to the user a reason why we are not currently adjusting the number of workers. Should specify both target_num_workers, current_num_workers and a decision_message."
                    ]
                  },
                  "workerPool": {
                    "type": "string",
                    "description": "A short and friendly name for the worker pool this event refers to, populated from the value of PoolStageRelation::user_pool_name."
                  },
                  "description": {
                    "id": "StructuredMessage",
                    "type": "object",
                    "properties": {
                      "messageKey": {
                        "type": "string",
                        "description": "Identifier for this message type. Used by external systems to internationalize or personalize message."
                      },
                      "parameters": {
                        "type": "array",
                        "items": {
                          "id": "Parameter",
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Key or name for this parameter."
                            },
                            "value": {
                              "type": "any",
                              "description": "Value for this parameter."
                            }
                          },
                          "description": "Structured data associated with this message."
                        },
                        "description": "The structured data associated with this message."
                      },
                      "messageText": {
                        "type": "string",
                        "description": "Human-readable version of message."
                      }
                    },
                    "description": "A message describing why the system decided to adjust the current number of workers, why it failed, or why the system decided to not make any changes to the number of workers."
                  },
                  "targetNumWorkers": {
                    "type": "string",
                    "format": "int64",
                    "description": "The target number of workers the worker pool wants to resize to use."
                  },
                  "currentNumWorkers": {
                    "type": "string",
                    "format": "int64",
                    "description": "The current number of workers the job has."
                  }
                },
                "description": "A structured message reporting an autoscaling decision made by the Dataflow service."
              },
              "description": "Autoscaling events in ascending timestamp order."
            }
          },
          "description": "Response to a request to list job messages."
        }
      ]
  projects.locations.jobs.snapshot:
    description: |-
      Snapshot the state of a streaming job.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs/snapshot
    example:
      inputs: [
        {
          "id": "SnapshotJobRequest",
          "type": "object",
          "properties": {
            "ttl": {
              "type": "string",
              "format": "google-duration",
              "description": "TTL for the snapshot."
            },
            "location": {
              "type": "string",
              "description": "The location that contains this job."
            },
            "description": {
              "type": "string",
              "description": "User specified description of the snapshot. Maybe empty."
            },
            "snapshotSources": {
              "type": "boolean",
              "description": "If true, perform snapshots for sources which support this."
            }
          },
          "description": "Request to create a snapshot of a job."
        }
      ]
      outputs: [
        {
          "id": "Snapshot",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID of this snapshot."
            },
            "ttl": {
              "type": "string",
              "format": "google-duration",
              "description": "The time after which this snapshot will be automatically deleted."
            },
            "state": {
              "enum": [
                "UNKNOWN_SNAPSHOT_STATE",
                "PENDING",
                "RUNNING",
                "READY",
                "FAILED",
                "DELETED"
              ],
              "type": "string",
              "description": "State of the snapshot.",
              "enumDescriptions": [
                "Unknown state.",
                "Snapshot intent to create has been persisted, snapshotting of state has not yet started.",
                "Snapshotting is being performed.",
                "Snapshot has been created and is ready to be used.",
                "Snapshot failed to be created.",
                "Snapshot has been deleted."
              ]
            },
            "region": {
              "type": "string",
              "description": "Cloud region where this snapshot lives in, e.g., \"us-central1\"."
            },
            "projectId": {
              "type": "string",
              "description": "The project this snapshot belongs to."
            },
            "description": {
              "type": "string",
              "description": "User specified description of the snapshot. Maybe empty."
            },
            "sourceJobId": {
              "type": "string",
              "description": "The job this snapshot was created from."
            },
            "creationTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this snapshot was created."
            },
            "diskSizeBytes": {
              "type": "string",
              "format": "int64",
              "description": "The disk byte size of the snapshot. Only available for snapshots in READY state."
            },
            "pubsubMetadata": {
              "type": "array",
              "items": {
                "id": "PubsubSnapshotMetadata",
                "type": "object",
                "properties": {
                  "topicName": {
                    "type": "string",
                    "description": "The name of the Pubsub topic."
                  },
                  "expireTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The expire time of the Pubsub snapshot."
                  },
                  "snapshotName": {
                    "type": "string",
                    "description": "The name of the Pubsub snapshot."
                  }
                },
                "description": "Represents a Pubsub snapshot."
              },
              "description": "PubSub snapshot metadata."
            }
          },
          "description": "Represents a snapshot of a job."
        }
      ]
  projects.locations.jobs.snapshots.list:
    description: |-
      Lists snapshots.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs.snapshots/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListSnapshotsResponse",
          "type": "object",
          "properties": {
            "snapshots": {
              "type": "array",
              "items": {
                "id": "Snapshot",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique ID of this snapshot."
                  },
                  "ttl": {
                    "type": "string",
                    "format": "google-duration",
                    "description": "The time after which this snapshot will be automatically deleted."
                  },
                  "state": {
                    "enum": [
                      "UNKNOWN_SNAPSHOT_STATE",
                      "PENDING",
                      "RUNNING",
                      "READY",
                      "FAILED",
                      "DELETED"
                    ],
                    "type": "string",
                    "description": "State of the snapshot.",
                    "enumDescriptions": [
                      "Unknown state.",
                      "Snapshot intent to create has been persisted, snapshotting of state has not yet started.",
                      "Snapshotting is being performed.",
                      "Snapshot has been created and is ready to be used.",
                      "Snapshot failed to be created.",
                      "Snapshot has been deleted."
                    ]
                  },
                  "region": {
                    "type": "string",
                    "description": "Cloud region where this snapshot lives in, e.g., \"us-central1\"."
                  },
                  "projectId": {
                    "type": "string",
                    "description": "The project this snapshot belongs to."
                  },
                  "description": {
                    "type": "string",
                    "description": "User specified description of the snapshot. Maybe empty."
                  },
                  "sourceJobId": {
                    "type": "string",
                    "description": "The job this snapshot was created from."
                  },
                  "creationTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time this snapshot was created."
                  },
                  "diskSizeBytes": {
                    "type": "string",
                    "format": "int64",
                    "description": "The disk byte size of the snapshot. Only available for snapshots in READY state."
                  },
                  "pubsubMetadata": {
                    "type": "array",
                    "items": {
                      "id": "PubsubSnapshotMetadata",
                      "type": "object",
                      "properties": {
                        "topicName": {
                          "type": "string",
                          "description": "The name of the Pubsub topic."
                        },
                        "expireTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "The expire time of the Pubsub snapshot."
                        },
                        "snapshotName": {
                          "type": "string",
                          "description": "The name of the Pubsub snapshot."
                        }
                      },
                      "description": "Represents a Pubsub snapshot."
                    },
                    "description": "PubSub snapshot metadata."
                  }
                },
                "description": "Represents a snapshot of a job."
              },
              "description": "Returned snapshots."
            }
          },
          "description": "List of snapshots."
        }
      ]
  projects.locations.jobs.stages.getExecutionDetails:
    description: |-
      Request detailed information about the execution status of a stage of the job. EXPERIMENTAL. This API is subject to change or removal without notice.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs.stages/getExecutionDetails
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "StageExecutionDetails",
          "type": "object",
          "properties": {
            "workers": {
              "type": "array",
              "items": {
                "id": "WorkerDetails",
                "type": "object",
                "properties": {
                  "workItems": {
                    "type": "array",
                    "items": {
                      "id": "WorkItemDetails",
                      "type": "object",
                      "properties": {
                        "state": {
                          "enum": [
                            "EXECUTION_STATE_UNKNOWN",
                            "EXECUTION_STATE_NOT_STARTED",
                            "EXECUTION_STATE_RUNNING",
                            "EXECUTION_STATE_SUCCEEDED",
                            "EXECUTION_STATE_FAILED",
                            "EXECUTION_STATE_CANCELLED"
                          ],
                          "type": "string",
                          "description": "State of this work item.",
                          "enumDescriptions": [
                            "The component state is unknown or unspecified.",
                            "The component is not yet running.",
                            "The component is currently running.",
                            "The component succeeded.",
                            "The component failed.",
                            "Execution of the component was cancelled."
                          ]
                        },
                        "taskId": {
                          "type": "string",
                          "description": "Name of this work item."
                        },
                        "endTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "End time of this work item attempt. If the work item is completed, this is the actual end time of the work item. Otherwise, it is the predicted end time."
                        },
                        "metrics": {
                          "type": "array",
                          "items": {
                            "id": "MetricUpdate",
                            "type": "object",
                            "properties": {
                              "set": {
                                "type": "any",
                                "description": "Worker-computed aggregate value for the \"Set\" aggregation kind. The only possible value type is a list of Values whose type can be Long, Double, or String, according to the metric's type. All Values in the list must be of the same type."
                              },
                              "kind": {
                                "type": "string",
                                "description": "Metric aggregation kind. The possible metric aggregation kinds are \"Sum\", \"Max\", \"Min\", \"Mean\", \"Set\", \"And\", \"Or\", and \"Distribution\". The specified aggregation kind is case-insensitive. If omitted, this is not an aggregated value but instead a single metric sample value."
                              },
                              "name": {
                                "id": "MetricStructuredName",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Worker-defined metric name."
                                  },
                                  "origin": {
                                    "type": "string",
                                    "description": "Origin (namespace) of metric name. May be blank for user-define metrics; will be \"dataflow\" for metrics defined by the Dataflow service or SDK."
                                  },
                                  "context": {
                                    "type": "object",
                                    "description": "Zero or more labeled fields which identify the part of the job this metric is associated with, such as the name of a step or collection. For example, built-in counters associated with steps will have context['step'] = . Counters associated with PCollections in the SDK will have context['pcollection'] = .",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "description": "Name of the metric."
                              },
                              "gauge": {
                                "type": "any",
                                "description": "A struct value describing properties of a Gauge. Metrics of gauge type show the value of a metric across time, and is aggregated based on the newest value."
                              },
                              "scalar": {
                                "type": "any",
                                "description": "Worker-computed aggregate value for aggregation kinds \"Sum\", \"Max\", \"Min\", \"And\", and \"Or\". The possible value types are Long, Double, and Boolean."
                              },
                              "meanSum": {
                                "type": "any",
                                "description": "Worker-computed aggregate value for the \"Mean\" aggregation kind. This holds the sum of the aggregated values and is used in combination with mean_count below to obtain the actual mean aggregate value. The only possible value types are Long and Double."
                              },
                              "internal": {
                                "type": "any",
                                "description": "Worker-computed aggregate value for internal use by the Dataflow service."
                              },
                              "meanCount": {
                                "type": "any",
                                "description": "Worker-computed aggregate value for the \"Mean\" aggregation kind. This holds the count of the aggregated values and is used in combination with mean_sum above to obtain the actual mean aggregate value. The only possible value type is Long."
                              },
                              "cumulative": {
                                "type": "boolean",
                                "description": "True if this metric is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this metric is reported as a delta that is not associated with any WorkItem."
                              },
                              "updateTime": {
                                "type": "string",
                                "format": "google-datetime",
                                "description": "Timestamp associated with the metric value. Optional when workers are reporting work progress; it will be filled in responses from the metrics API."
                              },
                              "distribution": {
                                "type": "any",
                                "description": "A struct value describing properties of a distribution of numeric values."
                              }
                            },
                            "description": "Describes the state of a metric."
                          },
                          "description": "Metrics for this work item."
                        },
                        "progress": {
                          "id": "ProgressTimeseries",
                          "type": "object",
                          "properties": {
                            "dataPoints": {
                              "type": "array",
                              "items": {
                                "id": "Point",
                                "type": "object",
                                "properties": {
                                  "time": {
                                    "type": "string",
                                    "format": "google-datetime",
                                    "description": "The timestamp of the point."
                                  },
                                  "value": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The value of the point."
                                  }
                                },
                                "description": "A point in the timeseries."
                              },
                              "description": "History of progress for the component. Points are sorted by time."
                            },
                            "currentProgress": {
                              "type": "number",
                              "format": "double",
                              "description": "The current progress of the component, in the range [0,1]."
                            }
                          },
                          "description": "Progress of this work item."
                        },
                        "attemptId": {
                          "type": "string",
                          "description": "Attempt ID of this work item"
                        },
                        "startTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "Start time of this work item attempt."
                        }
                      },
                      "description": "Information about an individual work item execution."
                    },
                    "description": "Work items processed by this worker, sorted by time."
                  },
                  "workerName": {
                    "type": "string",
                    "description": "Name of this worker"
                  }
                },
                "description": "Information about a worker"
              },
              "description": "Workers that have done work on the stage."
            },
            "nextPageToken": {
              "type": "string",
              "description": "If present, this response does not contain all requested tasks. To obtain the next page of results, repeat the request with page_token set to this value."
            }
          },
          "description": "Information about the workers and work items within a stage."
        }
      ]
  projects.locations.jobs.update:
    description: |-
      Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.jobs.workItems.lease:
    description: |-
      Leases a dataflow WorkItem to run.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs.workItems/lease
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.jobs.workItems.reportStatus:
    description: |-
      Reports the status of dataflow WorkItems leased by a worker.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs.workItems/reportStatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.snapshots.delete:
    description: |-
      Deletes a snapshot.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.snapshots/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DeleteSnapshotResponse",
          "type": "object",
          "properties": {},
          "description": "Response from deleting a snapshot."
        }
      ]
  projects.locations.snapshots.get:
    description: |-
      Gets information about a snapshot.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.snapshots/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Snapshot",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID of this snapshot."
            },
            "ttl": {
              "type": "string",
              "format": "google-duration",
              "description": "The time after which this snapshot will be automatically deleted."
            },
            "state": {
              "enum": [
                "UNKNOWN_SNAPSHOT_STATE",
                "PENDING",
                "RUNNING",
                "READY",
                "FAILED",
                "DELETED"
              ],
              "type": "string",
              "description": "State of the snapshot.",
              "enumDescriptions": [
                "Unknown state.",
                "Snapshot intent to create has been persisted, snapshotting of state has not yet started.",
                "Snapshotting is being performed.",
                "Snapshot has been created and is ready to be used.",
                "Snapshot failed to be created.",
                "Snapshot has been deleted."
              ]
            },
            "region": {
              "type": "string",
              "description": "Cloud region where this snapshot lives in, e.g., \"us-central1\"."
            },
            "projectId": {
              "type": "string",
              "description": "The project this snapshot belongs to."
            },
            "description": {
              "type": "string",
              "description": "User specified description of the snapshot. Maybe empty."
            },
            "sourceJobId": {
              "type": "string",
              "description": "The job this snapshot was created from."
            },
            "creationTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this snapshot was created."
            },
            "diskSizeBytes": {
              "type": "string",
              "format": "int64",
              "description": "The disk byte size of the snapshot. Only available for snapshots in READY state."
            },
            "pubsubMetadata": {
              "type": "array",
              "items": {
                "id": "PubsubSnapshotMetadata",
                "type": "object",
                "properties": {
                  "topicName": {
                    "type": "string",
                    "description": "The name of the Pubsub topic."
                  },
                  "expireTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The expire time of the Pubsub snapshot."
                  },
                  "snapshotName": {
                    "type": "string",
                    "description": "The name of the Pubsub snapshot."
                  }
                },
                "description": "Represents a Pubsub snapshot."
              },
              "description": "PubSub snapshot metadata."
            }
          },
          "description": "Represents a snapshot of a job."
        }
      ]
  projects.locations.snapshots.list:
    description: |-
      Lists snapshots.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.snapshots/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListSnapshotsResponse",
          "type": "object",
          "properties": {
            "snapshots": {
              "type": "array",
              "items": {
                "id": "Snapshot",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique ID of this snapshot."
                  },
                  "ttl": {
                    "type": "string",
                    "format": "google-duration",
                    "description": "The time after which this snapshot will be automatically deleted."
                  },
                  "state": {
                    "enum": [
                      "UNKNOWN_SNAPSHOT_STATE",
                      "PENDING",
                      "RUNNING",
                      "READY",
                      "FAILED",
                      "DELETED"
                    ],
                    "type": "string",
                    "description": "State of the snapshot.",
                    "enumDescriptions": [
                      "Unknown state.",
                      "Snapshot intent to create has been persisted, snapshotting of state has not yet started.",
                      "Snapshotting is being performed.",
                      "Snapshot has been created and is ready to be used.",
                      "Snapshot failed to be created.",
                      "Snapshot has been deleted."
                    ]
                  },
                  "region": {
                    "type": "string",
                    "description": "Cloud region where this snapshot lives in, e.g., \"us-central1\"."
                  },
                  "projectId": {
                    "type": "string",
                    "description": "The project this snapshot belongs to."
                  },
                  "description": {
                    "type": "string",
                    "description": "User specified description of the snapshot. Maybe empty."
                  },
                  "sourceJobId": {
                    "type": "string",
                    "description": "The job this snapshot was created from."
                  },
                  "creationTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time this snapshot was created."
                  },
                  "diskSizeBytes": {
                    "type": "string",
                    "format": "int64",
                    "description": "The disk byte size of the snapshot. Only available for snapshots in READY state."
                  },
                  "pubsubMetadata": {
                    "type": "array",
                    "items": {
                      "id": "PubsubSnapshotMetadata",
                      "type": "object",
                      "properties": {
                        "topicName": {
                          "type": "string",
                          "description": "The name of the Pubsub topic."
                        },
                        "expireTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "The expire time of the Pubsub snapshot."
                        },
                        "snapshotName": {
                          "type": "string",
                          "description": "The name of the Pubsub snapshot."
                        }
                      },
                      "description": "Represents a Pubsub snapshot."
                    },
                    "description": "PubSub snapshot metadata."
                  }
                },
                "description": "Represents a snapshot of a job."
              },
              "description": "Returned snapshots."
            }
          },
          "description": "List of snapshots."
        }
      ]
  projects.locations.sql.validate:
    description: |-
      Validates a GoogleSQL query for Cloud Dataflow syntax. Will always confirm the given query parses correctly, and if able to look up schema information from DataCatalog, will validate that the query analyzes properly as well.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.sql/validate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ValidateResponse",
          "type": "object",
          "properties": {
            "queryInfo": {
              "id": "QueryInfo",
              "type": "object",
              "properties": {
                "queryProperty": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "QUERY_PROPERTY_UNSPECIFIED",
                      "HAS_UNBOUNDED_SOURCE"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "The query property is unknown or unspecified.",
                      "Indicates this query reads from >= 1 unbounded source."
                    ]
                  },
                  "description": "Includes an entry for each satisfied QueryProperty."
                }
              },
              "description": "Information about the validated query. Not defined if validation fails."
            },
            "errorMessage": {
              "type": "string",
              "description": "Will be empty if validation succeeds."
            }
          },
          "description": "Response to the validation request."
        }
      ]
  projects.locations.templates.create:
    description: |-
      Creates a Cloud Dataflow job from a template.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.templates/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.templates.get:
    description: |-
      Get the template associated with a template.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.templates/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GetTemplateResponse",
          "type": "object",
          "properties": {
            "status": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
            },
            "metadata": {
              "id": "TemplateMetadata",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the template."
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "id": "ParameterMetadata",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Required. The name of the parameter."
                      },
                      "label": {
                        "type": "string",
                        "description": "Required. The label to display for the parameter."
                      },
                      "regexes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Optional. Regexes that the parameter must match."
                      },
                      "helpText": {
                        "type": "string",
                        "description": "Required. The help text to display for the parameter."
                      },
                      "paramType": {
                        "enum": [
                          "DEFAULT",
                          "TEXT",
                          "GCS_READ_BUCKET",
                          "GCS_WRITE_BUCKET",
                          "GCS_READ_FILE",
                          "GCS_WRITE_FILE",
                          "GCS_READ_FOLDER",
                          "GCS_WRITE_FOLDER",
                          "PUBSUB_TOPIC",
                          "PUBSUB_SUBSCRIPTION"
                        ],
                        "type": "string",
                        "description": "Optional. The type of the parameter. Used for selecting input picker.",
                        "enumDescriptions": [
                          "Default input type.",
                          "The parameter specifies generic text input.",
                          "The parameter specifies a Cloud Storage Bucket to read from.",
                          "The parameter specifies a Cloud Storage Bucket to write to.",
                          "The parameter specifies a Cloud Storage file path to read from.",
                          "The parameter specifies a Cloud Storage file path to write to.",
                          "The parameter specifies a Cloud Storage folder path to read from.",
                          "The parameter specifies a Cloud Storage folder to write to.",
                          "The parameter specifies a Pub/Sub Topic.",
                          "The parameter specifies a Pub/Sub Subscription."
                        ]
                      },
                      "isOptional": {
                        "type": "boolean",
                        "description": "Optional. Whether the parameter is optional. Defaults to false."
                      },
                      "customMetadata": {
                        "type": "object",
                        "description": "Optional. Additional metadata for describing this parameter.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "Metadata for a specific parameter."
                  },
                  "description": "The parameters for the template."
                },
                "description": {
                  "type": "string",
                  "description": "Optional. A description of the template."
                }
              },
              "description": "The template metadata describing the template name, available parameters, etc."
            },
            "templateType": {
              "enum": [
                "UNKNOWN",
                "LEGACY",
                "FLEX"
              ],
              "type": "string",
              "description": "Template Type.",
              "enumDescriptions": [
                "Unknown Template Type.",
                "Legacy Template.",
                "Flex Template."
              ]
            },
            "runtimeMetadata": {
              "id": "RuntimeMetadata",
              "type": "object",
              "properties": {
                "sdkInfo": {
                  "id": "SDKInfo",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string",
                      "description": "Optional. The SDK version."
                    },
                    "language": {
                      "enum": [
                        "UNKNOWN",
                        "JAVA",
                        "PYTHON"
                      ],
                      "type": "string",
                      "description": "Required. The SDK Language.",
                      "enumDescriptions": [
                        "UNKNOWN Language.",
                        "Java.",
                        "Python."
                      ]
                    }
                  },
                  "description": "SDK Info for the template."
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "id": "ParameterMetadata",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Required. The name of the parameter."
                      },
                      "label": {
                        "type": "string",
                        "description": "Required. The label to display for the parameter."
                      },
                      "regexes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Optional. Regexes that the parameter must match."
                      },
                      "helpText": {
                        "type": "string",
                        "description": "Required. The help text to display for the parameter."
                      },
                      "paramType": {
                        "enum": [
                          "DEFAULT",
                          "TEXT",
                          "GCS_READ_BUCKET",
                          "GCS_WRITE_BUCKET",
                          "GCS_READ_FILE",
                          "GCS_WRITE_FILE",
                          "GCS_READ_FOLDER",
                          "GCS_WRITE_FOLDER",
                          "PUBSUB_TOPIC",
                          "PUBSUB_SUBSCRIPTION"
                        ],
                        "type": "string",
                        "description": "Optional. The type of the parameter. Used for selecting input picker.",
                        "enumDescriptions": [
                          "Default input type.",
                          "The parameter specifies generic text input.",
                          "The parameter specifies a Cloud Storage Bucket to read from.",
                          "The parameter specifies a Cloud Storage Bucket to write to.",
                          "The parameter specifies a Cloud Storage file path to read from.",
                          "The parameter specifies a Cloud Storage file path to write to.",
                          "The parameter specifies a Cloud Storage folder path to read from.",
                          "The parameter specifies a Cloud Storage folder to write to.",
                          "The parameter specifies a Pub/Sub Topic.",
                          "The parameter specifies a Pub/Sub Subscription."
                        ]
                      },
                      "isOptional": {
                        "type": "boolean",
                        "description": "Optional. Whether the parameter is optional. Defaults to false."
                      },
                      "customMetadata": {
                        "type": "object",
                        "description": "Optional. Additional metadata for describing this parameter.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "Metadata for a specific parameter."
                  },
                  "description": "The parameters for the template."
                }
              },
              "description": "Describes the runtime metadata with SDKInfo and available parameters."
            }
          },
          "description": "The response to a GetTemplate request."
        }
      ]
  projects.locations.templates.launch:
    description: |-
      Launch a template.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.templates/launch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.workerMessages:
    description: |-
      Send a worker_message to the service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations/workerMessages
    example:
      inputs: [
        {
          "id": "SendWorkerMessagesRequest",
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job."
            },
            "workerMessages": {
              "type": "array",
              "items": {
                "id": "WorkerMessage",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The timestamp of the worker_message."
                  },
                  "labels": {
                    "type": "object",
                    "description": "Labels are used to group WorkerMessages. For example, a worker_message about a particular container might have the labels: { \"JOB_ID\": \"2015-04-22\", \"WORKER_ID\": \"wordcount-vm-2015…\" \"CONTAINER_TYPE\": \"worker\", \"CONTAINER_ID\": \"ac1234def\"} Label tags typically correspond to Label enum values. However, for ease of development other strings can be used as tags. LABEL_UNSPECIFIED should not be used here.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "workerMetrics": {
                    "id": "ResourceUtilizationReport",
                    "type": "object",
                    "properties": {
                      "cpuTime": {
                        "type": "array",
                        "items": {
                          "id": "CPUTime",
                          "type": "object",
                          "properties": {
                            "rate": {
                              "type": "number",
                              "format": "double",
                              "description": "Average CPU utilization rate (% non-idle cpu / second) since previous sample."
                            },
                            "totalMs": {
                              "type": "string",
                              "format": "uint64",
                              "description": "Total active CPU time across all cores (ie., non-idle) in milliseconds since start-up."
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "Timestamp of the measurement."
                            }
                          },
                          "description": "Modeled after information exposed by /proc/stat."
                        },
                        "description": "CPU utilization samples."
                      },
                      "containers": {
                        "type": "object",
                        "description": "Per container information. Key: container name.",
                        "additionalProperties": {
                          "id": "ResourceUtilizationReport",
                          "type": "object",
                          "properties": {},
                          "description": "Worker metrics exported from workers. This contains resource utilization metrics accumulated from a variety of sources. For more information, see go/df-resource-signals."
                        }
                      },
                      "memoryInfo": {
                        "type": "array",
                        "items": {
                          "id": "MemInfo",
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "Timestamp of the measurement."
                            },
                            "totalGbMs": {
                              "type": "string",
                              "format": "uint64",
                              "description": "Total memory (RSS) usage since start up in GB * ms."
                            },
                            "currentRssBytes": {
                              "type": "string",
                              "format": "uint64",
                              "description": "Instantenous memory (RSS) size in bytes."
                            },
                            "currentLimitBytes": {
                              "type": "string",
                              "format": "uint64",
                              "description": "Instantenous memory limit in bytes."
                            }
                          },
                          "description": "Information about the memory usage of a worker or a container within a worker."
                        },
                        "description": "Memory utilization samples."
                      }
                    },
                    "description": "Resource metrics reported by workers."
                  },
                  "workerMessageCode": {
                    "id": "WorkerMessageCode",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The code is a string intended for consumption by a machine that identifies the type of message being sent. Examples: 1. \"HARNESS_STARTED\" might be used to indicate the worker harness has started. 2. \"GCS_DOWNLOAD_ERROR\" might be used to indicate an error downloading a Cloud Storage file as part of the boot process of one of the worker containers. This is a string and not an enum to make it easy to add new codes without waiting for an API change."
                      },
                      "parameters": {
                        "type": "object",
                        "description": "Parameters contains specific information about the code. This is a struct to allow parameters of different types. Examples: 1. For a \"HARNESS_STARTED\" message parameters might provide the name of the worker and additional data like timing information. 2. For a \"GCS_DOWNLOAD_ERROR\" parameters might contain fields listing the Cloud Storage objects being downloaded and fields containing errors. In general complex data structures should be avoided. If a worker needs to send a specific and complicated data structure then please consider defining a new proto and adding it to the data oneof in WorkerMessageResponse. Conventions: Parameters should only be used for information that isn't typically passed as a label. hostname and other worker identifiers should almost always be passed as labels since they will be included on most messages.",
                        "additionalProperties": {
                          "type": "any",
                          "description": "Properties of the object."
                        }
                      }
                    },
                    "description": "A worker message code."
                  },
                  "workerHealthReport": {
                    "id": "WorkerHealthReport",
                    "type": "object",
                    "properties": {
                      "msg": {
                        "type": "string",
                        "description": "Message describing any unusual health reports."
                      },
                      "pods": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object."
                          }
                        },
                        "description": "The pods running on the worker. See: http://kubernetes.io/v1.1/docs/api-reference/v1/definitions.html#_v1_pod This field is used by the worker to send the status of the indvidual containers running on each worker."
                      },
                      "vmIsBroken": {
                        "type": "boolean",
                        "description": "Whether the VM is in a permanently broken state. Broken VMs should be abandoned or deleted ASAP to avoid assigning or completing any work."
                      },
                      "vmIsHealthy": {
                        "type": "boolean",
                        "description": "Whether the VM is currently healthy."
                      },
                      "vmBrokenCode": {
                        "type": "string",
                        "description": "Code to describe a specific reason, if known, that a VM has reported broken state."
                      },
                      "vmStartupTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The time the VM was booted."
                      },
                      "reportInterval": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "The interval at which the worker is sending health reports. The default value of 0 should be interpreted as the field is not being explicitly set by the worker."
                      }
                    },
                    "description": "The health of a worker."
                  },
                  "workerLifecycleEvent": {
                    "id": "WorkerLifecycleEvent",
                    "type": "object",
                    "properties": {
                      "event": {
                        "enum": [
                          "UNKNOWN_EVENT",
                          "OS_START",
                          "CONTAINER_START",
                          "NETWORK_UP",
                          "STAGING_FILES_DOWNLOAD_START",
                          "STAGING_FILES_DOWNLOAD_FINISH",
                          "SDK_INSTALL_START",
                          "SDK_INSTALL_FINISH"
                        ],
                        "type": "string",
                        "description": "The event being reported.",
                        "enumDescriptions": [
                          "Invalid event.",
                          "The time the VM started.",
                          "Our container code starts running. Multiple containers could be distinguished with WorkerMessage.labels if desired.",
                          "The worker has a functional external network connection.",
                          "Started downloading staging files.",
                          "Finished downloading all staging files.",
                          "For applicable SDKs, started installation of SDK and worker packages.",
                          "Finished installing SDK."
                        ]
                      },
                      "metadata": {
                        "type": "object",
                        "description": "Other stats that can accompany an event. E.g. { \"downloaded_bytes\" : \"123456\" }",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "containerStartTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The start time of this container. All events will report this so that events can be grouped together across container/VM restarts."
                      }
                    },
                    "description": "Record of worker lifecycle events."
                  },
                  "workerShutdownNotice": {
                    "id": "WorkerShutdownNotice",
                    "type": "object",
                    "properties": {
                      "reason": {
                        "type": "string",
                        "description": "The reason for the worker shutdown. Current possible values are: \"UNKNOWN\": shutdown reason is unknown. \"PREEMPTION\": shutdown reason is preemption. Other possible reasons may be added in the future."
                      }
                    },
                    "description": "Shutdown notice by workers."
                  }
                },
                "description": "WorkerMessage provides information to the backend about a worker."
              },
              "description": "The WorkerMessages to send."
            }
          },
          "description": "A request for sending worker messages to the service."
        }
      ]
      outputs: [
        {
          "id": "SendWorkerMessagesResponse",
          "type": "object",
          "properties": {
            "workerMessageResponses": {
              "type": "array",
              "items": {
                "id": "WorkerMessageResponse",
                "type": "object",
                "properties": {
                  "workerMetricsResponse": {
                    "id": "ResourceUtilizationReportResponse",
                    "type": "object",
                    "properties": {},
                    "description": "Service's response to reporting worker metrics (currently empty)."
                  },
                  "workerHealthReportResponse": {
                    "id": "WorkerHealthReportResponse",
                    "type": "object",
                    "properties": {
                      "reportInterval": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "A positive value indicates the worker should change its reporting interval to the specified value. The default value of zero means no change in report rate is requested by the server."
                      }
                    },
                    "description": "The service's response to a worker's health report."
                  },
                  "workerShutdownNoticeResponse": {
                    "id": "WorkerShutdownNoticeResponse",
                    "type": "object",
                    "properties": {},
                    "description": "Service's response to shutdown notice (currently empty)."
                  }
                },
                "description": "A worker_message response allows the server to pass information to the sender."
              },
              "description": "The servers response to the worker messages."
            }
          },
          "description": "The response to the worker messages."
        }
      ]
  projects.snapshots.get:
    description: |-
      Gets information about a snapshot.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.snapshots/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Snapshot",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID of this snapshot."
            },
            "ttl": {
              "type": "string",
              "format": "google-duration",
              "description": "The time after which this snapshot will be automatically deleted."
            },
            "state": {
              "enum": [
                "UNKNOWN_SNAPSHOT_STATE",
                "PENDING",
                "RUNNING",
                "READY",
                "FAILED",
                "DELETED"
              ],
              "type": "string",
              "description": "State of the snapshot.",
              "enumDescriptions": [
                "Unknown state.",
                "Snapshot intent to create has been persisted, snapshotting of state has not yet started.",
                "Snapshotting is being performed.",
                "Snapshot has been created and is ready to be used.",
                "Snapshot failed to be created.",
                "Snapshot has been deleted."
              ]
            },
            "region": {
              "type": "string",
              "description": "Cloud region where this snapshot lives in, e.g., \"us-central1\"."
            },
            "projectId": {
              "type": "string",
              "description": "The project this snapshot belongs to."
            },
            "description": {
              "type": "string",
              "description": "User specified description of the snapshot. Maybe empty."
            },
            "sourceJobId": {
              "type": "string",
              "description": "The job this snapshot was created from."
            },
            "creationTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this snapshot was created."
            },
            "diskSizeBytes": {
              "type": "string",
              "format": "int64",
              "description": "The disk byte size of the snapshot. Only available for snapshots in READY state."
            },
            "pubsubMetadata": {
              "type": "array",
              "items": {
                "id": "PubsubSnapshotMetadata",
                "type": "object",
                "properties": {
                  "topicName": {
                    "type": "string",
                    "description": "The name of the Pubsub topic."
                  },
                  "expireTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The expire time of the Pubsub snapshot."
                  },
                  "snapshotName": {
                    "type": "string",
                    "description": "The name of the Pubsub snapshot."
                  }
                },
                "description": "Represents a Pubsub snapshot."
              },
              "description": "PubSub snapshot metadata."
            }
          },
          "description": "Represents a snapshot of a job."
        }
      ]
  projects.snapshots.list:
    description: |-
      Lists snapshots.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.snapshots/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListSnapshotsResponse",
          "type": "object",
          "properties": {
            "snapshots": {
              "type": "array",
              "items": {
                "id": "Snapshot",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique ID of this snapshot."
                  },
                  "ttl": {
                    "type": "string",
                    "format": "google-duration",
                    "description": "The time after which this snapshot will be automatically deleted."
                  },
                  "state": {
                    "enum": [
                      "UNKNOWN_SNAPSHOT_STATE",
                      "PENDING",
                      "RUNNING",
                      "READY",
                      "FAILED",
                      "DELETED"
                    ],
                    "type": "string",
                    "description": "State of the snapshot.",
                    "enumDescriptions": [
                      "Unknown state.",
                      "Snapshot intent to create has been persisted, snapshotting of state has not yet started.",
                      "Snapshotting is being performed.",
                      "Snapshot has been created and is ready to be used.",
                      "Snapshot failed to be created.",
                      "Snapshot has been deleted."
                    ]
                  },
                  "region": {
                    "type": "string",
                    "description": "Cloud region where this snapshot lives in, e.g., \"us-central1\"."
                  },
                  "projectId": {
                    "type": "string",
                    "description": "The project this snapshot belongs to."
                  },
                  "description": {
                    "type": "string",
                    "description": "User specified description of the snapshot. Maybe empty."
                  },
                  "sourceJobId": {
                    "type": "string",
                    "description": "The job this snapshot was created from."
                  },
                  "creationTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time this snapshot was created."
                  },
                  "diskSizeBytes": {
                    "type": "string",
                    "format": "int64",
                    "description": "The disk byte size of the snapshot. Only available for snapshots in READY state."
                  },
                  "pubsubMetadata": {
                    "type": "array",
                    "items": {
                      "id": "PubsubSnapshotMetadata",
                      "type": "object",
                      "properties": {
                        "topicName": {
                          "type": "string",
                          "description": "The name of the Pubsub topic."
                        },
                        "expireTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "The expire time of the Pubsub snapshot."
                        },
                        "snapshotName": {
                          "type": "string",
                          "description": "The name of the Pubsub snapshot."
                        }
                      },
                      "description": "Represents a Pubsub snapshot."
                    },
                    "description": "PubSub snapshot metadata."
                  }
                },
                "description": "Represents a snapshot of a job."
              },
              "description": "Returned snapshots."
            }
          },
          "description": "List of snapshots."
        }
      ]
  projects.templates.create:
    description: |-
      Creates a Cloud Dataflow job from a template.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.templates/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.templates.get:
    description: |-
      Get the template associated with a template.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.templates/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GetTemplateResponse",
          "type": "object",
          "properties": {
            "status": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
            },
            "metadata": {
              "id": "TemplateMetadata",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the template."
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "id": "ParameterMetadata",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Required. The name of the parameter."
                      },
                      "label": {
                        "type": "string",
                        "description": "Required. The label to display for the parameter."
                      },
                      "regexes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Optional. Regexes that the parameter must match."
                      },
                      "helpText": {
                        "type": "string",
                        "description": "Required. The help text to display for the parameter."
                      },
                      "paramType": {
                        "enum": [
                          "DEFAULT",
                          "TEXT",
                          "GCS_READ_BUCKET",
                          "GCS_WRITE_BUCKET",
                          "GCS_READ_FILE",
                          "GCS_WRITE_FILE",
                          "GCS_READ_FOLDER",
                          "GCS_WRITE_FOLDER",
                          "PUBSUB_TOPIC",
                          "PUBSUB_SUBSCRIPTION"
                        ],
                        "type": "string",
                        "description": "Optional. The type of the parameter. Used for selecting input picker.",
                        "enumDescriptions": [
                          "Default input type.",
                          "The parameter specifies generic text input.",
                          "The parameter specifies a Cloud Storage Bucket to read from.",
                          "The parameter specifies a Cloud Storage Bucket to write to.",
                          "The parameter specifies a Cloud Storage file path to read from.",
                          "The parameter specifies a Cloud Storage file path to write to.",
                          "The parameter specifies a Cloud Storage folder path to read from.",
                          "The parameter specifies a Cloud Storage folder to write to.",
                          "The parameter specifies a Pub/Sub Topic.",
                          "The parameter specifies a Pub/Sub Subscription."
                        ]
                      },
                      "isOptional": {
                        "type": "boolean",
                        "description": "Optional. Whether the parameter is optional. Defaults to false."
                      },
                      "customMetadata": {
                        "type": "object",
                        "description": "Optional. Additional metadata for describing this parameter.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "Metadata for a specific parameter."
                  },
                  "description": "The parameters for the template."
                },
                "description": {
                  "type": "string",
                  "description": "Optional. A description of the template."
                }
              },
              "description": "The template metadata describing the template name, available parameters, etc."
            },
            "templateType": {
              "enum": [
                "UNKNOWN",
                "LEGACY",
                "FLEX"
              ],
              "type": "string",
              "description": "Template Type.",
              "enumDescriptions": [
                "Unknown Template Type.",
                "Legacy Template.",
                "Flex Template."
              ]
            },
            "runtimeMetadata": {
              "id": "RuntimeMetadata",
              "type": "object",
              "properties": {
                "sdkInfo": {
                  "id": "SDKInfo",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string",
                      "description": "Optional. The SDK version."
                    },
                    "language": {
                      "enum": [
                        "UNKNOWN",
                        "JAVA",
                        "PYTHON"
                      ],
                      "type": "string",
                      "description": "Required. The SDK Language.",
                      "enumDescriptions": [
                        "UNKNOWN Language.",
                        "Java.",
                        "Python."
                      ]
                    }
                  },
                  "description": "SDK Info for the template."
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "id": "ParameterMetadata",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Required. The name of the parameter."
                      },
                      "label": {
                        "type": "string",
                        "description": "Required. The label to display for the parameter."
                      },
                      "regexes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Optional. Regexes that the parameter must match."
                      },
                      "helpText": {
                        "type": "string",
                        "description": "Required. The help text to display for the parameter."
                      },
                      "paramType": {
                        "enum": [
                          "DEFAULT",
                          "TEXT",
                          "GCS_READ_BUCKET",
                          "GCS_WRITE_BUCKET",
                          "GCS_READ_FILE",
                          "GCS_WRITE_FILE",
                          "GCS_READ_FOLDER",
                          "GCS_WRITE_FOLDER",
                          "PUBSUB_TOPIC",
                          "PUBSUB_SUBSCRIPTION"
                        ],
                        "type": "string",
                        "description": "Optional. The type of the parameter. Used for selecting input picker.",
                        "enumDescriptions": [
                          "Default input type.",
                          "The parameter specifies generic text input.",
                          "The parameter specifies a Cloud Storage Bucket to read from.",
                          "The parameter specifies a Cloud Storage Bucket to write to.",
                          "The parameter specifies a Cloud Storage file path to read from.",
                          "The parameter specifies a Cloud Storage file path to write to.",
                          "The parameter specifies a Cloud Storage folder path to read from.",
                          "The parameter specifies a Cloud Storage folder to write to.",
                          "The parameter specifies a Pub/Sub Topic.",
                          "The parameter specifies a Pub/Sub Subscription."
                        ]
                      },
                      "isOptional": {
                        "type": "boolean",
                        "description": "Optional. Whether the parameter is optional. Defaults to false."
                      },
                      "customMetadata": {
                        "type": "object",
                        "description": "Optional. Additional metadata for describing this parameter.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "Metadata for a specific parameter."
                  },
                  "description": "The parameters for the template."
                }
              },
              "description": "Describes the runtime metadata with SDKInfo and available parameters."
            }
          },
          "description": "The response to a GetTemplate request."
        }
      ]
  projects.templates.launch:
    description: |-
      Launch a template.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.templates/launch
    example:
      inputs: [
        {
          "id": "LaunchTemplateParameters",
          "type": "object",
          "properties": {
            "update": {
              "type": "boolean",
              "description": "If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state."
            },
            "jobName": {
              "type": "string",
              "description": "Required. The job name to use for the created job."
            },
            "parameters": {
              "type": "object",
              "description": "The runtime parameters to pass to the job.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "environment": {
              "id": "RuntimeEnvironment",
              "type": "object",
              "properties": {
                "zone": {
                  "type": "string",
                  "description": "The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence."
                },
                "network": {
                  "type": "string",
                  "description": "Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\"."
                },
                "kmsKeyName": {
                  "type": "string",
                  "description": "Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/"
                },
                "maxWorkers": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000."
                },
                "numWorkers": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The initial number of Google Compute Engine instnaces for the job."
                },
                "subnetwork": {
                  "type": "string",
                  "description": "Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL."
                },
                "workerZone": {
                  "type": "string",
                  "description": "The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence."
                },
                "machineType": {
                  "type": "string",
                  "description": "The machine type to use for the job. Defaults to the value from the template if not specified."
                },
                "tempLocation": {
                  "type": "string",
                  "description": "The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`."
                },
                "workerRegion": {
                  "type": "string",
                  "description": "The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region."
                },
                "ipConfiguration": {
                  "enum": [
                    "WORKER_IP_UNSPECIFIED",
                    "WORKER_IP_PUBLIC",
                    "WORKER_IP_PRIVATE"
                  ],
                  "type": "string",
                  "description": "Configuration for VM IPs.",
                  "enumDescriptions": [
                    "The configuration is unknown, or unspecified.",
                    "Workers should have public IP addresses.",
                    "Workers should have private IP addresses."
                  ]
                },
                "serviceAccountEmail": {
                  "type": "string",
                  "description": "The email address of the service account to run the job as."
                },
                "additionalUserLabels": {
                  "type": "object",
                  "description": "Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "additionalExperiments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Additional experiment flags for the job."
                },
                "enableStreamingEngine": {
                  "type": "boolean",
                  "description": "Whether to enable Streaming Engine for the job."
                },
                "bypassTempDirValidation": {
                  "type": "boolean",
                  "description": "Whether to bypass the safety checks for the job's temporary directory. Use with caution."
                }
              },
              "description": "The runtime environment for the job."
            },
            "transformNameMapping": {
              "type": "object",
              "description": "Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "description": "Parameters to provide to the template being launched."
        }
      ]
      outputs: [
        {
          "id": "LaunchTemplateResponse",
          "type": "object",
          "properties": {
            "job": {
              "id": "Job",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of this job. This field is set by the Cloud Dataflow service when the Job is created, and is immutable for the life of the job."
                },
                "name": {
                  "type": "string",
                  "description": "The user-specified Cloud Dataflow job name. Only one Job with a given name may exist in a project at any given time. If a caller attempts to create a Job with the same name as an already-existing Job, the attempt returns the existing Job. The name must match the regular expression `[a-z]([-a-z0-9]{0,38}[a-z0-9])?`"
                },
                "type": {
                  "enum": [
                    "JOB_TYPE_UNKNOWN",
                    "JOB_TYPE_BATCH",
                    "JOB_TYPE_STREAMING"
                  ],
                  "type": "string",
                  "description": "The type of Cloud Dataflow job.",
                  "enumDescriptions": [
                    "The type of the job is unspecified, or unknown.",
                    "A batch job with a well-defined end point: data is read, data is processed, data is written, and the job is done.",
                    "A continuously streaming job with no end: data is read, processed, and written continuously."
                  ]
                },
                "steps": {
                  "type": "array",
                  "items": {
                    "id": "Step",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "The kind of step in the Cloud Dataflow job."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name that identifies the step. This must be unique for each step with respect to all other steps in the Cloud Dataflow job."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Named properties associated with the step. Each kind of predefined step has its own required set of properties. Must be provided on Create. Only retrieved with JOB_VIEW_ALL.",
                        "additionalProperties": {
                          "type": "any",
                          "description": "Properties of the object."
                        }
                      }
                    },
                    "description": "Defines a particular step within a Cloud Dataflow job. A job consists of multiple steps, each of which performs some specific operation as part of the overall job. Data is typically passed from one step to another as part of the job. Here's an example of a sequence of steps which together implement a Map-Reduce job: * Read a collection of data from some source, parsing the collection's elements. * Validate the elements. * Apply a user-defined function to map each element to some value and extract an element-specific key value. * Group elements with the same key into a single element with that key, transforming a multiply-keyed collection into a uniquely-keyed collection. * Write the elements out to some data sink. Note that the Cloud Dataflow service may be used to run many different types of jobs, not just Map-Reduce."
                  },
                  "description": "Exactly one of step or steps_location should be specified. The top-level steps that constitute the entire job. Only retrieved with JOB_VIEW_ALL."
                },
                "labels": {
                  "type": "object",
                  "description": "User-defined labels for this job. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \\p{Ll}\\p{Lo}{0,62} * Values must conform to regexp: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job."
                },
                "projectId": {
                  "type": "string",
                  "description": "The ID of the Cloud Platform project that the job belongs to."
                },
                "startTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The timestamp when the job was started (transitioned to JOB_STATE_PENDING). Flexible resource scheduling jobs are started with some delay after job creation, so start_time is unset before start and is updated when the job is started by the Cloud Dataflow service. For other jobs, start_time always equals to create_time and is immutable and set by the Cloud Dataflow service."
                },
                "tempFiles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "A set of files the system should be aware of that are used for temporary storage. These temporary files will be removed on job completion. No duplicates are allowed. No file patterns are supported. The supported files are: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}"
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The timestamp when the job was initially created. Immutable and set by the Cloud Dataflow service."
                },
                "environment": {
                  "id": "Environment",
                  "type": "object",
                  "properties": {
                    "dataset": {
                      "type": "string",
                      "description": "The dataset for the current project where various workflow related tables are stored. The supported resource type is: Google BigQuery: bigquery.googleapis.com/{dataset}"
                    },
                    "version": {
                      "type": "object",
                      "description": "A structure describing which components and their versions of the service are required in order to run the job.",
                      "additionalProperties": {
                        "type": "any",
                        "description": "Properties of the object."
                      }
                    },
                    "userAgent": {
                      "type": "object",
                      "description": "A description of the process that generated the request.",
                      "additionalProperties": {
                        "type": "any",
                        "description": "Properties of the object."
                      }
                    },
                    "workerZone": {
                      "type": "string",
                      "description": "The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity."
                    },
                    "experiments": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of experiments to enable. This field should be used for SDK related experiments and not for service related experiments. The proper field for service related experiments is service_options. For more details see the rationale at go/user-specified-service-options."
                    },
                    "shuffleMode": {
                      "enum": [
                        "SHUFFLE_MODE_UNSPECIFIED",
                        "VM_BASED",
                        "SERVICE_BASED"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "description": "Output only. The shuffle mode used for the job.",
                      "enumDescriptions": [
                        "Shuffle mode information is not available.",
                        "Shuffle is done on the worker VMs.",
                        "Shuffle is done on the service side."
                      ]
                    },
                    "workerPools": {
                      "type": "array",
                      "items": {
                        "id": "WorkerPool",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The kind of the worker pool; currently only `harness` and `shuffle` are supported."
                          },
                          "zone": {
                            "type": "string",
                            "description": "Zone to run the worker pools in. If empty or unspecified, the service will attempt to choose a reasonable default."
                          },
                          "network": {
                            "type": "string",
                            "description": "Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\"."
                          },
                          "diskType": {
                            "type": "string",
                            "description": "Type of root disk for VMs. If empty or unspecified, the service will attempt to choose a reasonable default."
                          },
                          "metadata": {
                            "type": "object",
                            "description": "Metadata to set on the Google Compute Engine VMs.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "packages": {
                            "type": "array",
                            "items": {
                              "id": "Package",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the package."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The resource to read the package from. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket} bucket.storage.googleapis.com/"
                                }
                              },
                              "description": "The packages that must be installed in order for a worker to run the steps of the Cloud Dataflow job that will be assigned to its worker pool. This is the mechanism by which the Cloud Dataflow SDK causes code to be loaded onto the workers. For example, the Cloud Dataflow Java SDK might use this to install jars containing the user's code and all of the various dependencies (libraries, data files, etc.) required in order for that code to run."
                            },
                            "description": "Packages to be installed on workers."
                          },
                          "poolArgs": {
                            "type": "object",
                            "description": "Extra arguments for this worker pool.",
                            "additionalProperties": {
                              "type": "any",
                              "description": "Properties of the object. Contains field @type with type URL."
                            }
                          },
                          "dataDisks": {
                            "type": "array",
                            "items": {
                              "id": "Disk",
                              "type": "object",
                              "properties": {
                                "sizeGb": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Size of disk in GB. If zero or unspecified, the service will attempt to choose a reasonable default."
                                },
                                "diskType": {
                                  "type": "string",
                                  "description": "Disk storage type, as defined by Google Compute Engine. This must be a disk type appropriate to the project and zone in which the workers will run. If unknown or unspecified, the service will attempt to choose a reasonable default. For example, the standard persistent disk type is a resource name typically ending in \"pd-standard\". If SSD persistent disks are available, the resource name typically ends with \"pd-ssd\". The actual valid values are defined the Google Compute Engine API, not by the Cloud Dataflow API; consult the Google Compute Engine documentation for more information about determining the set of available disk types for a particular project and zone. Google Compute Engine Disk types are local to a particular project in a particular zone, and so the resource name will typically look something like this: compute.googleapis.com/projects/project-id/zones/zone/diskTypes/pd-standard"
                                },
                                "mountPoint": {
                                  "type": "string",
                                  "description": "Directory in a VM where disk is mounted."
                                }
                              },
                              "description": "Describes the data disk used by a workflow job."
                            },
                            "description": "Data disks that are used by a VM in this workflow."
                          },
                          "diskSizeGb": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Size of root disk for VMs, in GB. If zero or unspecified, the service will attempt to choose a reasonable default."
                          },
                          "numWorkers": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of Google Compute Engine workers in this pool needed to execute the job. If zero or unspecified, the service will attempt to choose a reasonable default."
                          },
                          "subnetwork": {
                            "type": "string",
                            "description": "Subnetwork to which VMs will be assigned, if desired. Expected to be of the form \"regions/REGION/subnetworks/SUBNETWORK\"."
                          },
                          "machineType": {
                            "type": "string",
                            "description": "Machine type (e.g. \"n1-standard-1\"). If empty or unspecified, the service will attempt to choose a reasonable default."
                          },
                          "teardownPolicy": {
                            "enum": [
                              "TEARDOWN_POLICY_UNKNOWN",
                              "TEARDOWN_ALWAYS",
                              "TEARDOWN_ON_SUCCESS",
                              "TEARDOWN_NEVER"
                            ],
                            "type": "string",
                            "description": "Sets the policy for determining when to turndown worker pool. Allowed values are: `TEARDOWN_ALWAYS`, `TEARDOWN_ON_SUCCESS`, and `TEARDOWN_NEVER`. `TEARDOWN_ALWAYS` means workers are always torn down regardless of whether the job succeeds. `TEARDOWN_ON_SUCCESS` means workers are torn down if the job succeeds. `TEARDOWN_NEVER` means the workers are never torn down. If the workers are not torn down by the service, they will continue to run and use Google Compute Engine VM resources in the user's project until they are explicitly terminated by the user. Because of this, Google recommends using the `TEARDOWN_ALWAYS` policy except for small, manually supervised test jobs. If unknown or unspecified, the service will attempt to choose a reasonable default.",
                            "enumDescriptions": [
                              "The teardown policy isn't specified, or is unknown.",
                              "Always teardown the resource.",
                              "Teardown the resource on success. This is useful for debugging failures.",
                              "Never teardown the resource. This is useful for debugging and development."
                            ]
                          },
                          "diskSourceImage": {
                            "type": "string",
                            "description": "Fully qualified source image for disks."
                          },
                          "ipConfiguration": {
                            "enum": [
                              "WORKER_IP_UNSPECIFIED",
                              "WORKER_IP_PUBLIC",
                              "WORKER_IP_PRIVATE"
                            ],
                            "type": "string",
                            "description": "Configuration for VM IPs.",
                            "enumDescriptions": [
                              "The configuration is unknown, or unspecified.",
                              "Workers should have public IP addresses.",
                              "Workers should have private IP addresses."
                            ]
                          },
                          "defaultPackageSet": {
                            "enum": [
                              "DEFAULT_PACKAGE_SET_UNKNOWN",
                              "DEFAULT_PACKAGE_SET_NONE",
                              "DEFAULT_PACKAGE_SET_JAVA",
                              "DEFAULT_PACKAGE_SET_PYTHON"
                            ],
                            "type": "string",
                            "description": "The default package set to install. This allows the service to select a default set of packages which are useful to worker harnesses written in a particular language.",
                            "enumDescriptions": [
                              "The default set of packages to stage is unknown, or unspecified.",
                              "Indicates that no packages should be staged at the worker unless explicitly specified by the job.",
                              "Stage packages typically useful to workers written in Java.",
                              "Stage pacakges typically useful to workers written in Python."
                            ]
                          },
                          "onHostMaintenance": {
                            "type": "string",
                            "description": "The action to take on host maintenance, as defined by the Google Compute Engine API."
                          },
                          "taskrunnerSettings": {
                            "id": "TaskRunnerSettings",
                            "type": "object",
                            "properties": {
                              "vmId": {
                                "type": "string",
                                "description": "The ID string of the VM."
                              },
                              "logDir": {
                                "type": "string",
                                "description": "The directory on the VM to store logs."
                              },
                              "baseUrl": {
                                "type": "string",
                                "description": "The base URL for the taskrunner to use when accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, \"Relative Uniform Resource Locators\". If not specified, the default value is \"http://www.googleapis.com/\""
                              },
                              "taskUser": {
                                "type": "string",
                                "description": "The UNIX user ID on the worker VM to use for tasks launched by taskrunner; e.g. \"root\"."
                              },
                              "taskGroup": {
                                "type": "string",
                                "description": "The UNIX group ID on the worker VM to use for tasks launched by taskrunner; e.g. \"wheel\"."
                              },
                              "baseTaskDir": {
                                "type": "string",
                                "description": "The location on the worker for task-specific subdirectories."
                              },
                              "oauthScopes": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The OAuth2 scopes to be requested by the taskrunner in order to access the Cloud Dataflow API."
                              },
                              "languageHint": {
                                "type": "string",
                                "description": "The suggested backend language."
                              },
                              "harnessCommand": {
                                "type": "string",
                                "description": "The command to launch the worker harness."
                              },
                              "alsologtostderr": {
                                "type": "boolean",
                                "description": "Whether to also send taskrunner log info to stderr."
                              },
                              "workflowFileName": {
                                "type": "string",
                                "description": "The file to store the workflow in."
                              },
                              "logUploadLocation": {
                                "type": "string",
                                "description": "Indicates where to put logs. If this is not specified, the logs will not be uploaded. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}"
                              },
                              "tempStoragePrefix": {
                                "type": "string",
                                "description": "The prefix of the resources the taskrunner should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}"
                              },
                              "dataflowApiVersion": {
                                "type": "string",
                                "description": "The API version of endpoint, e.g. \"v1b3\""
                              },
                              "logToSerialconsole": {
                                "type": "boolean",
                                "description": "Whether to send taskrunner log info to Google Compute Engine VM serial console."
                              },
                              "continueOnException": {
                                "type": "boolean",
                                "description": "Whether to continue taskrunner if an exception is hit."
                              },
                              "commandlinesFileName": {
                                "type": "string",
                                "description": "The file to store preprocessing commands in."
                              },
                              "parallelWorkerSettings": {
                                "id": "WorkerSettings",
                                "type": "object",
                                "properties": {
                                  "baseUrl": {
                                    "type": "string",
                                    "description": "The base URL for accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, \"Relative Uniform Resource Locators\". If not specified, the default value is \"http://www.googleapis.com/\""
                                  },
                                  "workerId": {
                                    "type": "string",
                                    "description": "The ID of the worker running this pipeline."
                                  },
                                  "servicePath": {
                                    "type": "string",
                                    "description": "The Cloud Dataflow service path relative to the root URL, for example, \"dataflow/v1b3/projects\"."
                                  },
                                  "reportingEnabled": {
                                    "type": "boolean",
                                    "description": "Whether to send work progress updates to the service."
                                  },
                                  "tempStoragePrefix": {
                                    "type": "string",
                                    "description": "The prefix of the resources the system should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}"
                                  },
                                  "shuffleServicePath": {
                                    "type": "string",
                                    "description": "The Shuffle service path relative to the root URL, for example, \"shuffle/v1beta1\"."
                                  }
                                },
                                "description": "The settings to pass to the parallel worker harness."
                              },
                              "streamingWorkerMainClass": {
                                "type": "string",
                                "description": "The streaming worker main class name."
                              }
                            },
                            "description": "Settings passed through to Google Compute Engine workers when using the standard Dataflow task runner. Users should ignore this field."
                          },
                          "autoscalingSettings": {
                            "id": "AutoscalingSettings",
                            "type": "object",
                            "properties": {
                              "algorithm": {
                                "enum": [
                                  "AUTOSCALING_ALGORITHM_UNKNOWN",
                                  "AUTOSCALING_ALGORITHM_NONE",
                                  "AUTOSCALING_ALGORITHM_BASIC"
                                ],
                                "type": "string",
                                "description": "The algorithm to use for autoscaling.",
                                "enumDescriptions": [
                                  "The algorithm is unknown, or unspecified.",
                                  "Disable autoscaling.",
                                  "Increase worker count over time to reduce job execution time."
                                ]
                              },
                              "maxNumWorkers": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The maximum number of workers to cap scaling at."
                              }
                            },
                            "description": "Settings for autoscaling of this WorkerPool."
                          },
                          "numThreadsPerWorker": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of threads per worker harness. If empty or unspecified, the service will choose a number of threads (according to the number of cores on the selected machine type for batch, or 1 by convention for streaming)."
                          },
                          "sdkHarnessContainerImages": {
                            "type": "array",
                            "items": {
                              "id": "SdkHarnessContainerImage",
                              "type": "object",
                              "properties": {
                                "environmentId": {
                                  "type": "string",
                                  "description": "Environment ID for the Beam runner API proto Environment that corresponds to the current SDK Harness."
                                },
                                "containerImage": {
                                  "type": "string",
                                  "description": "A docker container image that resides in Google Container Registry."
                                },
                                "useSingleCorePerContainer": {
                                  "type": "boolean",
                                  "description": "If true, recommends the Dataflow service to use only one core per SDK container instance with this image. If false (or unset) recommends using more than one core per SDK container instance with this image for efficiency. Note that Dataflow service may choose to override this property if needed."
                                }
                              },
                              "description": "Defines a SDK harness container for executing Dataflow pipelines."
                            },
                            "description": "Set of SDK harness containers needed to execute this pipeline. This will only be set in the Fn API path. For non-cross-language pipelines this should have only one entry. Cross-language pipelines will have two or more entries."
                          },
                          "workerHarnessContainerImage": {
                            "type": "string",
                            "description": "Required. Docker container image that executes the Cloud Dataflow worker harness, residing in Google Container Registry. Deprecated for the Fn API path. Use sdk_harness_container_images instead."
                          }
                        },
                        "description": "Describes one particular pool of Cloud Dataflow workers to be instantiated by the Cloud Dataflow service in order to perform the computations required by a job. Note that a workflow job may use multiple pools, in order to match the various computational requirements of the various stages of the job."
                      },
                      "description": "The worker pools. At least one \"harness\" worker pool must be specified in order for the job to have workers."
                    },
                    "debugOptions": {
                      "id": "DebugOptions",
                      "type": "object",
                      "properties": {
                        "enableHotKeyLogging": {
                          "type": "boolean",
                          "description": "When true, enables the logging of the literal hot key to the user's Cloud Logging."
                        }
                      },
                      "description": "Any debugging options to be supplied to the job."
                    },
                    "workerRegion": {
                      "type": "string",
                      "description": "The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region."
                    },
                    "serviceOptions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of service options to enable. This field should be used for service related experiments only. These experiments, when graduating to GA, should be replaced by dedicated fields or become default (i.e. always on). For more details see the rationale at go/user-specified-service-options."
                    },
                    "serviceKmsKeyName": {
                      "type": "string",
                      "description": "If set, contains the Cloud KMS key identifier used to encrypt data at rest, AKA a Customer Managed Encryption Key (CMEK). Format: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY"
                    },
                    "tempStoragePrefix": {
                      "type": "string",
                      "description": "The prefix of the resources the system should use for temporary storage. The system will append the suffix \"/temp-{JOBNAME} to this resource prefix, where {JOBNAME} is the value of the job_name field. The resulting bucket and object prefix is used as the prefix of the resources used to store temporary data needed during the job execution. NOTE: This will override the value in taskrunner_settings. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}"
                    },
                    "sdkPipelineOptions": {
                      "type": "object",
                      "description": "The Cloud Dataflow SDK pipeline options specified by the user. These options are passed through the service and are used to recreate the SDK pipeline options on the worker in a language agnostic and platform independent way.",
                      "additionalProperties": {
                        "type": "any",
                        "description": "Properties of the object."
                      }
                    },
                    "internalExperiments": {
                      "type": "object",
                      "description": "Experimental settings.",
                      "additionalProperties": {
                        "type": "any",
                        "description": "Properties of the object. Contains field @type with type URL."
                      }
                    },
                    "serviceAccountEmail": {
                      "type": "string",
                      "description": "Identity to run virtual machines as. Defaults to the default account."
                    },
                    "clusterManagerApiService": {
                      "type": "string",
                      "description": "The type of cluster manager API to use. If unknown or unspecified, the service will attempt to choose a reasonable default. This should be in the form of the API service name, e.g. \"compute.googleapis.com\"."
                    },
                    "flexResourceSchedulingGoal": {
                      "enum": [
                        "FLEXRS_UNSPECIFIED",
                        "FLEXRS_SPEED_OPTIMIZED",
                        "FLEXRS_COST_OPTIMIZED"
                      ],
                      "type": "string",
                      "description": "Which Flexible Resource Scheduling mode to run in.",
                      "enumDescriptions": [
                        "Run in the default mode.",
                        "Optimize for lower execution time.",
                        "Optimize for lower cost."
                      ]
                    }
                  },
                  "description": "The environment for the job."
                },
                "jobMetadata": {
                  "id": "JobMetadata",
                  "type": "object",
                  "properties": {
                    "sdkVersion": {
                      "id": "SdkVersion",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "description": "The version of the SDK used to run the job."
                        },
                        "sdkSupportStatus": {
                          "enum": [
                            "UNKNOWN",
                            "SUPPORTED",
                            "STALE",
                            "DEPRECATED",
                            "UNSUPPORTED"
                          ],
                          "type": "string",
                          "description": "The support status for this SDK version.",
                          "enumDescriptions": [
                            "Cloud Dataflow is unaware of this version.",
                            "This is a known version of an SDK, and is supported.",
                            "A newer version of the SDK family exists, and an update is recommended.",
                            "This version of the SDK is deprecated and will eventually be no longer supported.",
                            "Support for this SDK version has ended and it should no longer be used."
                          ]
                        },
                        "versionDisplayName": {
                          "type": "string",
                          "description": "A readable string describing the version of the SDK."
                        }
                      },
                      "description": "The SDK version used to run the job."
                    },
                    "fileDetails": {
                      "type": "array",
                      "items": {
                        "id": "FileIODetails",
                        "type": "object",
                        "properties": {
                          "filePattern": {
                            "type": "string",
                            "description": "File Pattern used to access files by the connector."
                          }
                        },
                        "description": "Metadata for a File connector used by the job."
                      },
                      "description": "Identification of a File source used in the Dataflow job."
                    },
                    "pubsubDetails": {
                      "type": "array",
                      "items": {
                        "id": "PubSubIODetails",
                        "type": "object",
                        "properties": {
                          "topic": {
                            "type": "string",
                            "description": "Topic accessed in the connection."
                          },
                          "subscription": {
                            "type": "string",
                            "description": "Subscription used in the connection."
                          }
                        },
                        "description": "Metadata for a Pub/Sub connector used by the job."
                      },
                      "description": "Identification of a PubSub source used in the Dataflow job."
                    },
                    "spannerDetails": {
                      "type": "array",
                      "items": {
                        "id": "SpannerIODetails",
                        "type": "object",
                        "properties": {
                          "projectId": {
                            "type": "string",
                            "description": "ProjectId accessed in the connection."
                          },
                          "databaseId": {
                            "type": "string",
                            "description": "DatabaseId accessed in the connection."
                          },
                          "instanceId": {
                            "type": "string",
                            "description": "InstanceId accessed in the connection."
                          }
                        },
                        "description": "Metadata for a Spanner connector used by the job."
                      },
                      "description": "Identification of a Spanner source used in the Dataflow job."
                    },
                    "bigTableDetails": {
                      "type": "array",
                      "items": {
                        "id": "BigTableIODetails",
                        "type": "object",
                        "properties": {
                          "tableId": {
                            "type": "string",
                            "description": "TableId accessed in the connection."
                          },
                          "projectId": {
                            "type": "string",
                            "description": "ProjectId accessed in the connection."
                          },
                          "instanceId": {
                            "type": "string",
                            "description": "InstanceId accessed in the connection."
                          }
                        },
                        "description": "Metadata for a Cloud BigTable connector used by the job."
                      },
                      "description": "Identification of a Cloud BigTable source used in the Dataflow job."
                    },
                    "bigqueryDetails": {
                      "type": "array",
                      "items": {
                        "id": "BigQueryIODetails",
                        "type": "object",
                        "properties": {
                          "query": {
                            "type": "string",
                            "description": "Query used to access data in the connection."
                          },
                          "table": {
                            "type": "string",
                            "description": "Table accessed in the connection."
                          },
                          "dataset": {
                            "type": "string",
                            "description": "Dataset accessed in the connection."
                          },
                          "projectId": {
                            "type": "string",
                            "description": "Project accessed in the connection."
                          }
                        },
                        "description": "Metadata for a BigQuery connector used by the job."
                      },
                      "description": "Identification of a BigQuery source used in the Dataflow job."
                    },
                    "datastoreDetails": {
                      "type": "array",
                      "items": {
                        "id": "DatastoreIODetails",
                        "type": "object",
                        "properties": {
                          "namespace": {
                            "type": "string",
                            "description": "Namespace used in the connection."
                          },
                          "projectId": {
                            "type": "string",
                            "description": "ProjectId accessed in the connection."
                          }
                        },
                        "description": "Metadata for a Datastore connector used by the job."
                      },
                      "description": "Identification of a Datastore source used in the Dataflow job."
                    }
                  },
                  "description": "This field is populated by the Dataflow service to support filtering jobs by the metadata values provided here. Populated for ListJobs and all GetJob views SUMMARY and higher."
                },
                "stageStates": {
                  "type": "array",
                  "items": {
                    "id": "ExecutionStageState",
                    "type": "object",
                    "properties": {
                      "currentStateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The time at which the stage transitioned to this state."
                      },
                      "executionStageName": {
                        "type": "string",
                        "description": "The name of the execution stage."
                      },
                      "executionStageState": {
                        "enum": [
                          "JOB_STATE_UNKNOWN",
                          "JOB_STATE_STOPPED",
                          "JOB_STATE_RUNNING",
                          "JOB_STATE_DONE",
                          "JOB_STATE_FAILED",
                          "JOB_STATE_CANCELLED",
                          "JOB_STATE_UPDATED",
                          "JOB_STATE_DRAINING",
                          "JOB_STATE_DRAINED",
                          "JOB_STATE_PENDING",
                          "JOB_STATE_CANCELLING",
                          "JOB_STATE_QUEUED",
                          "JOB_STATE_RESOURCE_CLEANING_UP"
                        ],
                        "type": "string",
                        "description": "Executions stage states allow the same set of values as JobState.",
                        "enumDescriptions": [
                          "The job's run state isn't specified.",
                          "`JOB_STATE_STOPPED` indicates that the job has not yet started to run.",
                          "`JOB_STATE_RUNNING` indicates that the job is currently running.",
                          "`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.",
                          "`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.",
                          "`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.",
                          "`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.",
                          "`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.",
                          "`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.",
                          "`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.",
                          "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.",
                          "`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.",
                          "`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job's associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are interested."
                        ]
                      }
                    },
                    "description": "A message describing the state of a particular execution stage."
                  },
                  "description": "This field may be mutated by the Cloud Dataflow service; callers cannot mutate it."
                },
                "currentState": {
                  "enum": [
                    "JOB_STATE_UNKNOWN",
                    "JOB_STATE_STOPPED",
                    "JOB_STATE_RUNNING",
                    "JOB_STATE_DONE",
                    "JOB_STATE_FAILED",
                    "JOB_STATE_CANCELLED",
                    "JOB_STATE_UPDATED",
                    "JOB_STATE_DRAINING",
                    "JOB_STATE_DRAINED",
                    "JOB_STATE_PENDING",
                    "JOB_STATE_CANCELLING",
                    "JOB_STATE_QUEUED",
                    "JOB_STATE_RESOURCE_CLEANING_UP"
                  ],
                  "type": "string",
                  "description": "The current state of the job. Jobs are created in the `JOB_STATE_STOPPED` state unless otherwise specified. A job in the `JOB_STATE_RUNNING` state may asynchronously enter a terminal state. After a job has reached a terminal state, no further state updates may be made. This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.",
                  "enumDescriptions": [
                    "The job's run state isn't specified.",
                    "`JOB_STATE_STOPPED` indicates that the job has not yet started to run.",
                    "`JOB_STATE_RUNNING` indicates that the job is currently running.",
                    "`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.",
                    "`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.",
                    "`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.",
                    "`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.",
                    "`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.",
                    "`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.",
                    "`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.",
                    "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.",
                    "`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.",
                    "`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job's associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are interested."
                  ]
                },
                "replaceJobId": {
                  "type": "string",
                  "description": "If this job is an update of an existing job, this field is the job ID of the job it replaced. When sending a `CreateJobRequest`, you can update a job by specifying it here. The job named here is stopped, and its intermediate state is transferred to this job."
                },
                "satisfiesPzs": {
                  "type": "boolean",
                  "description": "Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests."
                },
                "executionInfo": {
                  "id": "JobExecutionInfo",
                  "type": "object",
                  "properties": {
                    "stages": {
                      "type": "object",
                      "description": "A mapping from each stage to the information about that stage.",
                      "additionalProperties": {
                        "id": "JobExecutionStageInfo",
                        "type": "object",
                        "properties": {
                          "stepName": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The steps associated with the execution stage. Note that stages may have several steps, and that a given step might be run by more than one stage."
                          }
                        },
                        "description": "Contains information about how a particular google.dataflow.v1beta3.Step will be executed."
                      }
                    }
                  },
                  "description": "Deprecated."
                },
                "stepsLocation": {
                  "type": "string",
                  "description": "The Cloud Storage location where the steps are stored."
                },
                "requestedState": {
                  "enum": [
                    "JOB_STATE_UNKNOWN",
                    "JOB_STATE_STOPPED",
                    "JOB_STATE_RUNNING",
                    "JOB_STATE_DONE",
                    "JOB_STATE_FAILED",
                    "JOB_STATE_CANCELLED",
                    "JOB_STATE_UPDATED",
                    "JOB_STATE_DRAINING",
                    "JOB_STATE_DRAINED",
                    "JOB_STATE_PENDING",
                    "JOB_STATE_CANCELLING",
                    "JOB_STATE_QUEUED",
                    "JOB_STATE_RESOURCE_CLEANING_UP"
                  ],
                  "type": "string",
                  "description": "The job's requested state. `UpdateJob` may be used to switch between the `JOB_STATE_STOPPED` and `JOB_STATE_RUNNING` states, by setting requested_state. `UpdateJob` may also be used to directly set a job's requested state to `JOB_STATE_CANCELLED` or `JOB_STATE_DONE`, irrevocably terminating the job if it has not already reached a terminal state.",
                  "enumDescriptions": [
                    "The job's run state isn't specified.",
                    "`JOB_STATE_STOPPED` indicates that the job has not yet started to run.",
                    "`JOB_STATE_RUNNING` indicates that the job is currently running.",
                    "`JOB_STATE_DONE` indicates that the job has successfully completed. This is a terminal job state. This state may be set by the Cloud Dataflow service, as a transition from `JOB_STATE_RUNNING`. It may also be set via a Cloud Dataflow `UpdateJob` call, if the job has not yet reached a terminal state.",
                    "`JOB_STATE_FAILED` indicates that the job has failed. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.",
                    "`JOB_STATE_CANCELLED` indicates that the job has been explicitly cancelled. This is a terminal job state. This state may only be set via a Cloud Dataflow `UpdateJob` call, and only if the job has not yet reached another terminal state.",
                    "`JOB_STATE_UPDATED` indicates that the job was successfully updated, meaning that this job was stopped and another job was started, inheriting state from this one. This is a terminal job state. This state may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_RUNNING`.",
                    "`JOB_STATE_DRAINING` indicates that the job is in the process of draining. A draining job has stopped pulling from its input sources and is processing any data that remains in-flight. This state may be set via a Cloud Dataflow `UpdateJob` call, but only as a transition from `JOB_STATE_RUNNING`. Jobs that are draining may only transition to `JOB_STATE_DRAINED`, `JOB_STATE_CANCELLED`, or `JOB_STATE_FAILED`.",
                    "`JOB_STATE_DRAINED` indicates that the job has been drained. A drained job terminated by stopping pulling from its input sources and processing any data that remained in-flight when draining was requested. This state is a terminal state, may only be set by the Cloud Dataflow service, and only as a transition from `JOB_STATE_DRAINING`.",
                    "`JOB_STATE_PENDING` indicates that the job has been created but is not yet running. Jobs that are pending may only transition to `JOB_STATE_RUNNING`, or `JOB_STATE_FAILED`.",
                    "`JOB_STATE_CANCELLING` indicates that the job has been explicitly cancelled and is in the process of stopping. Jobs that are cancelling may only transition to `JOB_STATE_CANCELLED` or `JOB_STATE_FAILED`.",
                    "`JOB_STATE_QUEUED` indicates that the job has been created but is being delayed until launch. Jobs that are queued may only transition to `JOB_STATE_PENDING` or `JOB_STATE_CANCELLED`.",
                    "`JOB_STATE_RESOURCE_CLEANING_UP` indicates that the batch job's associated resources are currently being cleaned up after a successful run. Currently, this is an opt-in feature, please reach out to Cloud support team if you are interested."
                  ]
                },
                "clientRequestId": {
                  "type": "string",
                  "description": "The client's unique identifier of the job, re-used across retried attempts. If this field is set, the service will ensure its uniqueness. The request to create a job will fail if the service has knowledge of a previously submitted job with the same client's ID and job name. The caller may use this field to ensure idempotence of job creation across retried attempts to create a job. By default, the field is empty and, in that case, the service ignores it."
                },
                "replacedByJobId": {
                  "type": "string",
                  "description": "If another job is an update of this job (and thus, this job is in `JOB_STATE_UPDATED`), this field contains the ID of that job."
                },
                "currentStateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The timestamp associated with the current state."
                },
                "pipelineDescription": {
                  "id": "PipelineDescription",
                  "type": "object",
                  "properties": {
                    "displayData": {
                      "type": "array",
                      "items": {
                        "id": "DisplayData",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The key identifying the display data. This is intended to be used as a label for the display data when viewed in a dax monitoring system."
                          },
                          "url": {
                            "type": "string",
                            "description": "An optional full URL."
                          },
                          "label": {
                            "type": "string",
                            "description": "An optional label to display in a dax UI for the element."
                          },
                          "strValue": {
                            "type": "string",
                            "description": "Contains value if the data is of string type."
                          },
                          "boolValue": {
                            "type": "boolean",
                            "description": "Contains value if the data is of a boolean type."
                          },
                          "namespace": {
                            "type": "string",
                            "description": "The namespace for the key. This is usually a class name or programming language namespace (i.e. python module) which defines the display data. This allows a dax monitoring system to specially handle the data and perform custom rendering."
                          },
                          "floatValue": {
                            "type": "number",
                            "format": "float",
                            "description": "Contains value if the data is of float type."
                          },
                          "int64Value": {
                            "type": "string",
                            "format": "int64",
                            "description": "Contains value if the data is of int64 type."
                          },
                          "durationValue": {
                            "type": "string",
                            "format": "google-duration",
                            "description": "Contains value if the data is of duration type."
                          },
                          "shortStrValue": {
                            "type": "string",
                            "description": "A possible additional shorter value to display. For example a java_class_name_value of com.mypackage.MyDoFn will be stored with MyDoFn as the short_str_value and com.mypackage.MyDoFn as the java_class_name value. short_str_value can be displayed and java_class_name_value will be displayed as a tooltip."
                          },
                          "javaClassValue": {
                            "type": "string",
                            "description": "Contains value if the data is of java class type."
                          },
                          "timestampValue": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Contains value if the data is of timestamp type."
                          }
                        },
                        "description": "Data provided with a pipeline or transform to provide descriptive info."
                      },
                      "description": "Pipeline level display data."
                    },
                    "executionPipelineStage": {
                      "type": "array",
                      "items": {
                        "id": "ExecutionStageSummary",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Dataflow service generated id for this stage."
                          },
                          "kind": {
                            "enum": [
                              "UNKNOWN_KIND",
                              "PAR_DO_KIND",
                              "GROUP_BY_KEY_KIND",
                              "FLATTEN_KIND",
                              "READ_KIND",
                              "WRITE_KIND",
                              "CONSTANT_KIND",
                              "SINGLETON_KIND",
                              "SHUFFLE_KIND"
                            ],
                            "type": "string",
                            "description": "Type of transform this stage is executing.",
                            "enumDescriptions": [
                              "Unrecognized transform type.",
                              "ParDo transform.",
                              "Group By Key transform.",
                              "Flatten transform.",
                              "Read transform.",
                              "Write transform.",
                              "Constructs from a constant value, such as with Create.of.",
                              "Creates a Singleton view of a collection.",
                              "Opening or closing a shuffle session, often as part of a GroupByKey."
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "Dataflow service generated name for this stage."
                          },
                          "inputSource": {
                            "type": "array",
                            "items": {
                              "id": "StageSource",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Dataflow service generated name for this source."
                                },
                                "userName": {
                                  "type": "string",
                                  "description": "Human-readable name for this source; may be user or system generated."
                                },
                                "sizeBytes": {
                                  "type": "string",
                                  "format": "int64",
                                  "description": "Size of the source, if measurable."
                                },
                                "originalTransformOrCollection": {
                                  "type": "string",
                                  "description": "User name for the original user transform or collection with which this source is most closely associated."
                                }
                              },
                              "description": "Description of an input or output of an execution stage."
                            },
                            "description": "Input sources for this stage."
                          },
                          "outputSource": {
                            "type": "array",
                            "items": {
                              "id": "StageSource",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Dataflow service generated name for this source."
                                },
                                "userName": {
                                  "type": "string",
                                  "description": "Human-readable name for this source; may be user or system generated."
                                },
                                "sizeBytes": {
                                  "type": "string",
                                  "format": "int64",
                                  "description": "Size of the source, if measurable."
                                },
                                "originalTransformOrCollection": {
                                  "type": "string",
                                  "description": "User name for the original user transform or collection with which this source is most closely associated."
                                }
                              },
                              "description": "Description of an input or output of an execution stage."
                            },
                            "description": "Output sources for this stage."
                          },
                          "componentSource": {
                            "type": "array",
                            "items": {
                              "id": "ComponentSource",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Dataflow service generated name for this source."
                                },
                                "userName": {
                                  "type": "string",
                                  "description": "Human-readable name for this transform; may be user or system generated."
                                },
                                "originalTransformOrCollection": {
                                  "type": "string",
                                  "description": "User name for the original user transform or collection with which this source is most closely associated."
                                }
                              },
                              "description": "Description of an interstitial value between transforms in an execution stage."
                            },
                            "description": "Collections produced and consumed by component transforms of this stage."
                          },
                          "prerequisiteStage": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Other stages that must complete before this stage can run."
                          },
                          "componentTransform": {
                            "type": "array",
                            "items": {
                              "id": "ComponentTransform",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Dataflow service generated name for this source."
                                },
                                "userName": {
                                  "type": "string",
                                  "description": "Human-readable name for this transform; may be user or system generated."
                                },
                                "originalTransform": {
                                  "type": "string",
                                  "description": "User name for the original user transform with which this transform is most closely associated."
                                }
                              },
                              "description": "Description of a transform executed as part of an execution stage."
                            },
                            "description": "Transforms that comprise this execution stage."
                          }
                        },
                        "description": "Description of the composing transforms, names/ids, and input/outputs of a stage of execution. Some composing transforms and sources may have been generated by the Dataflow service during execution planning."
                      },
                      "description": "Description of each stage of execution of the pipeline."
                    },
                    "originalPipelineTransform": {
                      "type": "array",
                      "items": {
                        "id": "TransformSummary",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "SDK generated id of this transform instance."
                          },
                          "kind": {
                            "enum": [
                              "UNKNOWN_KIND",
                              "PAR_DO_KIND",
                              "GROUP_BY_KEY_KIND",
                              "FLATTEN_KIND",
                              "READ_KIND",
                              "WRITE_KIND",
                              "CONSTANT_KIND",
                              "SINGLETON_KIND",
                              "SHUFFLE_KIND"
                            ],
                            "type": "string",
                            "description": "Type of transform.",
                            "enumDescriptions": [
                              "Unrecognized transform type.",
                              "ParDo transform.",
                              "Group By Key transform.",
                              "Flatten transform.",
                              "Read transform.",
                              "Write transform.",
                              "Constructs from a constant value, such as with Create.of.",
                              "Creates a Singleton view of a collection.",
                              "Opening or closing a shuffle session, often as part of a GroupByKey."
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "User provided name for this transform instance."
                          },
                          "displayData": {
                            "type": "array",
                            "items": {
                              "id": "DisplayData",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "The key identifying the display data. This is intended to be used as a label for the display data when viewed in a dax monitoring system."
                                },
                                "url": {
                                  "type": "string",
                                  "description": "An optional full URL."
                                },
                                "label": {
                                  "type": "string",
                                  "description": "An optional label to display in a dax UI for the element."
                                },
                                "strValue": {
                                  "type": "string",
                                  "description": "Contains value if the data is of string type."
                                },
                                "boolValue": {
                                  "type": "boolean",
                                  "description": "Contains value if the data is of a boolean type."
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "The namespace for the key. This is usually a class name or programming language namespace (i.e. python module) which defines the display data. This allows a dax monitoring system to specially handle the data and perform custom rendering."
                                },
                                "floatValue": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "Contains value if the data is of float type."
                                },
                                "int64Value": {
                                  "type": "string",
                                  "format": "int64",
                                  "description": "Contains value if the data is of int64 type."
                                },
                                "durationValue": {
                                  "type": "string",
                                  "format": "google-duration",
                                  "description": "Contains value if the data is of duration type."
                                },
                                "shortStrValue": {
                                  "type": "string",
                                  "description": "A possible additional shorter value to display. For example a java_class_name_value of com.mypackage.MyDoFn will be stored with MyDoFn as the short_str_value and com.mypackage.MyDoFn as the java_class_name value. short_str_value can be displayed and java_class_name_value will be displayed as a tooltip."
                                },
                                "javaClassValue": {
                                  "type": "string",
                                  "description": "Contains value if the data is of java class type."
                                },
                                "timestampValue": {
                                  "type": "string",
                                  "format": "google-datetime",
                                  "description": "Contains value if the data is of timestamp type."
                                }
                              },
                              "description": "Data provided with a pipeline or transform to provide descriptive info."
                            },
                            "description": "Transform-specific display data."
                          },
                          "inputCollectionName": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "User names for all collection inputs to this transform."
                          },
                          "outputCollectionName": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "User names for all collection outputs to this transform."
                          }
                        },
                        "description": "Description of the type, names/ids, and input/outputs for a transform."
                      },
                      "description": "Description of each transform in the pipeline and collections between them."
                    }
                  },
                  "description": "Preliminary field: The format of this data may change at any time. A description of the user pipeline and stages through which it is executed. Created by Cloud Dataflow service. Only retrieved with JOB_VIEW_DESCRIPTION or JOB_VIEW_ALL."
                },
                "transformNameMapping": {
                  "type": "object",
                  "description": "The map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "createdFromSnapshotId": {
                  "type": "string",
                  "description": "If this is specified, the job's initial state is populated from the given snapshot."
                }
              },
              "description": "Defines a job to be run by the Cloud Dataflow service. nextID: 26"
            }
          },
          "description": "Response to the request to launch a template."
        }
      ]
  projects.workerMessages:
    description: |-
      Send a worker_message to the service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects/workerMessages
    example:
      inputs: [
        {
          "id": "SendWorkerMessagesRequest",
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job."
            },
            "workerMessages": {
              "type": "array",
              "items": {
                "id": "WorkerMessage",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The timestamp of the worker_message."
                  },
                  "labels": {
                    "type": "object",
                    "description": "Labels are used to group WorkerMessages. For example, a worker_message about a particular container might have the labels: { \"JOB_ID\": \"2015-04-22\", \"WORKER_ID\": \"wordcount-vm-2015…\" \"CONTAINER_TYPE\": \"worker\", \"CONTAINER_ID\": \"ac1234def\"} Label tags typically correspond to Label enum values. However, for ease of development other strings can be used as tags. LABEL_UNSPECIFIED should not be used here.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "workerMetrics": {
                    "id": "ResourceUtilizationReport",
                    "type": "object",
                    "properties": {
                      "cpuTime": {
                        "type": "array",
                        "items": {
                          "id": "CPUTime",
                          "type": "object",
                          "properties": {
                            "rate": {
                              "type": "number",
                              "format": "double",
                              "description": "Average CPU utilization rate (% non-idle cpu / second) since previous sample."
                            },
                            "totalMs": {
                              "type": "string",
                              "format": "uint64",
                              "description": "Total active CPU time across all cores (ie., non-idle) in milliseconds since start-up."
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "Timestamp of the measurement."
                            }
                          },
                          "description": "Modeled after information exposed by /proc/stat."
                        },
                        "description": "CPU utilization samples."
                      },
                      "containers": {
                        "type": "object",
                        "description": "Per container information. Key: container name.",
                        "additionalProperties": {
                          "id": "ResourceUtilizationReport",
                          "type": "object",
                          "properties": {},
                          "description": "Worker metrics exported from workers. This contains resource utilization metrics accumulated from a variety of sources. For more information, see go/df-resource-signals."
                        }
                      },
                      "memoryInfo": {
                        "type": "array",
                        "items": {
                          "id": "MemInfo",
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "Timestamp of the measurement."
                            },
                            "totalGbMs": {
                              "type": "string",
                              "format": "uint64",
                              "description": "Total memory (RSS) usage since start up in GB * ms."
                            },
                            "currentRssBytes": {
                              "type": "string",
                              "format": "uint64",
                              "description": "Instantenous memory (RSS) size in bytes."
                            },
                            "currentLimitBytes": {
                              "type": "string",
                              "format": "uint64",
                              "description": "Instantenous memory limit in bytes."
                            }
                          },
                          "description": "Information about the memory usage of a worker or a container within a worker."
                        },
                        "description": "Memory utilization samples."
                      }
                    },
                    "description": "Resource metrics reported by workers."
                  },
                  "workerMessageCode": {
                    "id": "WorkerMessageCode",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The code is a string intended for consumption by a machine that identifies the type of message being sent. Examples: 1. \"HARNESS_STARTED\" might be used to indicate the worker harness has started. 2. \"GCS_DOWNLOAD_ERROR\" might be used to indicate an error downloading a Cloud Storage file as part of the boot process of one of the worker containers. This is a string and not an enum to make it easy to add new codes without waiting for an API change."
                      },
                      "parameters": {
                        "type": "object",
                        "description": "Parameters contains specific information about the code. This is a struct to allow parameters of different types. Examples: 1. For a \"HARNESS_STARTED\" message parameters might provide the name of the worker and additional data like timing information. 2. For a \"GCS_DOWNLOAD_ERROR\" parameters might contain fields listing the Cloud Storage objects being downloaded and fields containing errors. In general complex data structures should be avoided. If a worker needs to send a specific and complicated data structure then please consider defining a new proto and adding it to the data oneof in WorkerMessageResponse. Conventions: Parameters should only be used for information that isn't typically passed as a label. hostname and other worker identifiers should almost always be passed as labels since they will be included on most messages.",
                        "additionalProperties": {
                          "type": "any",
                          "description": "Properties of the object."
                        }
                      }
                    },
                    "description": "A worker message code."
                  },
                  "workerHealthReport": {
                    "id": "WorkerHealthReport",
                    "type": "object",
                    "properties": {
                      "msg": {
                        "type": "string",
                        "description": "Message describing any unusual health reports."
                      },
                      "pods": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object."
                          }
                        },
                        "description": "The pods running on the worker. See: http://kubernetes.io/v1.1/docs/api-reference/v1/definitions.html#_v1_pod This field is used by the worker to send the status of the indvidual containers running on each worker."
                      },
                      "vmIsBroken": {
                        "type": "boolean",
                        "description": "Whether the VM is in a permanently broken state. Broken VMs should be abandoned or deleted ASAP to avoid assigning or completing any work."
                      },
                      "vmIsHealthy": {
                        "type": "boolean",
                        "description": "Whether the VM is currently healthy."
                      },
                      "vmBrokenCode": {
                        "type": "string",
                        "description": "Code to describe a specific reason, if known, that a VM has reported broken state."
                      },
                      "vmStartupTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The time the VM was booted."
                      },
                      "reportInterval": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "The interval at which the worker is sending health reports. The default value of 0 should be interpreted as the field is not being explicitly set by the worker."
                      }
                    },
                    "description": "The health of a worker."
                  },
                  "workerLifecycleEvent": {
                    "id": "WorkerLifecycleEvent",
                    "type": "object",
                    "properties": {
                      "event": {
                        "enum": [
                          "UNKNOWN_EVENT",
                          "OS_START",
                          "CONTAINER_START",
                          "NETWORK_UP",
                          "STAGING_FILES_DOWNLOAD_START",
                          "STAGING_FILES_DOWNLOAD_FINISH",
                          "SDK_INSTALL_START",
                          "SDK_INSTALL_FINISH"
                        ],
                        "type": "string",
                        "description": "The event being reported.",
                        "enumDescriptions": [
                          "Invalid event.",
                          "The time the VM started.",
                          "Our container code starts running. Multiple containers could be distinguished with WorkerMessage.labels if desired.",
                          "The worker has a functional external network connection.",
                          "Started downloading staging files.",
                          "Finished downloading all staging files.",
                          "For applicable SDKs, started installation of SDK and worker packages.",
                          "Finished installing SDK."
                        ]
                      },
                      "metadata": {
                        "type": "object",
                        "description": "Other stats that can accompany an event. E.g. { \"downloaded_bytes\" : \"123456\" }",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "containerStartTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The start time of this container. All events will report this so that events can be grouped together across container/VM restarts."
                      }
                    },
                    "description": "Record of worker lifecycle events."
                  },
                  "workerShutdownNotice": {
                    "id": "WorkerShutdownNotice",
                    "type": "object",
                    "properties": {
                      "reason": {
                        "type": "string",
                        "description": "The reason for the worker shutdown. Current possible values are: \"UNKNOWN\": shutdown reason is unknown. \"PREEMPTION\": shutdown reason is preemption. Other possible reasons may be added in the future."
                      }
                    },
                    "description": "Shutdown notice by workers."
                  }
                },
                "description": "WorkerMessage provides information to the backend about a worker."
              },
              "description": "The WorkerMessages to send."
            }
          },
          "description": "A request for sending worker messages to the service."
        }
      ]
      outputs: [
        {
          "id": "SendWorkerMessagesResponse",
          "type": "object",
          "properties": {
            "workerMessageResponses": {
              "type": "array",
              "items": {
                "id": "WorkerMessageResponse",
                "type": "object",
                "properties": {
                  "workerMetricsResponse": {
                    "id": "ResourceUtilizationReportResponse",
                    "type": "object",
                    "properties": {},
                    "description": "Service's response to reporting worker metrics (currently empty)."
                  },
                  "workerHealthReportResponse": {
                    "id": "WorkerHealthReportResponse",
                    "type": "object",
                    "properties": {
                      "reportInterval": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "A positive value indicates the worker should change its reporting interval to the specified value. The default value of zero means no change in report rate is requested by the server."
                      }
                    },
                    "description": "The service's response to a worker's health report."
                  },
                  "workerShutdownNoticeResponse": {
                    "id": "WorkerShutdownNoticeResponse",
                    "type": "object",
                    "properties": {},
                    "description": "Service's response to shutdown notice (currently empty)."
                  }
                },
                "description": "A worker_message response allows the server to pass information to the sender."
              },
              "description": "The servers response to the worker messages."
            }
          },
          "description": "The response to the worker messages."
        }
      ]