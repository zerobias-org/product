Product:
  name: GCP Bigtable
  versions: [2.0.0]
  package: google.gcp.bigtable
  description: |-
    Bigtable Admin
  link: https://cloud.google.com/bigtable
  contentType: json
Operations:
  operations.cancel:
    description: |-
      Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/operations/cancel
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  operations.delete:
    description: |-
      Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/operations/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  operations.projects.operations.list:
    description: |-
      Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/operations.projects.operations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListOperationsResponse",
          "type": "object",
          "properties": {
            "operations": {
              "type": "array",
              "items": {
                "id": "Operation",
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean",
                    "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
                  },
                  "name": {
                    "type": "string",
                    "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
                  },
                  "error": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The error result of the operation in case of failure or cancellation."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "response": {
                    "type": "object",
                    "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  }
                },
                "description": "This resource represents a long-running operation that is the result of a network API call."
              },
              "description": "A list of operations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Operations.ListOperations."
        }
      ]
  projects.instances.appProfiles.create:
    description: |-
      Creates an app profile within an instance.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.appProfiles/create
    example:
      inputs: [
        {
          "id": "AppProfile",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details."
            },
            "name": {
              "type": "string",
              "description": "The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`."
            },
            "description": {
              "type": "string",
              "description": "Long form description of the use case for this AppProfile."
            },
            "singleClusterRouting": {
              "id": "SingleClusterRouting",
              "type": "object",
              "properties": {
                "clusterId": {
                  "type": "string",
                  "description": "The cluster to which read/write requests should be routed."
                },
                "allowTransactionalWrites": {
                  "type": "boolean",
                  "description": "Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests are allowed by this app profile. It is unsafe to send these requests to the same table/row/column in multiple clusters."
                }
              },
              "description": "Use a single-cluster routing policy."
            },
            "multiClusterRoutingUseAny": {
              "id": "MultiClusterRoutingUseAny",
              "type": "object",
              "properties": {},
              "description": "Use a multi-cluster routing policy."
            }
          },
          "description": "A configuration object describing how Cloud Bigtable should treat traffic from a particular end user application."
        }
      ]
      outputs: [
        {}
      ]
  projects.instances.appProfiles.delete:
    description: |-
      Deletes an app profile from an instance.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.appProfiles/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.instances.appProfiles.get:
    description: |-
      Gets information about an app profile.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.appProfiles/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.instances.appProfiles.list:
    description: |-
      Lists information about app profiles in an instance.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.appProfiles/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListAppProfilesResponse",
          "type": "object",
          "properties": {
            "appProfiles": {
              "type": "array",
              "items": {
                "id": "AppProfile",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details."
                  },
                  "name": {
                    "type": "string",
                    "description": "The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`."
                  },
                  "description": {
                    "type": "string",
                    "description": "Long form description of the use case for this AppProfile."
                  },
                  "singleClusterRouting": {
                    "id": "SingleClusterRouting",
                    "type": "object",
                    "properties": {
                      "clusterId": {
                        "type": "string",
                        "description": "The cluster to which read/write requests should be routed."
                      },
                      "allowTransactionalWrites": {
                        "type": "boolean",
                        "description": "Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests are allowed by this app profile. It is unsafe to send these requests to the same table/row/column in multiple clusters."
                      }
                    },
                    "description": "Use a single-cluster routing policy."
                  },
                  "multiClusterRoutingUseAny": {
                    "id": "MultiClusterRoutingUseAny",
                    "type": "object",
                    "properties": {},
                    "description": "Use a multi-cluster routing policy."
                  }
                },
                "description": "A configuration object describing how Cloud Bigtable should treat traffic from a particular end user application."
              },
              "description": "The list of requested app profiles."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Set if not all app profiles could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results."
            },
            "failedLocations": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Locations from which AppProfile information could not be retrieved, due to an outage or some other transient condition. AppProfiles from these locations may be missing from `app_profiles`. Values are of the form `projects//locations/`"
            }
          },
          "description": "Response message for BigtableInstanceAdmin.ListAppProfiles."
        }
      ]
  projects.instances.appProfiles.patch:
    description: |-
      Updates an app profile within an instance.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.appProfiles/patch
    example:
      inputs: [
        {
          "id": "AppProfile",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details."
            },
            "name": {
              "type": "string",
              "description": "The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`."
            },
            "description": {
              "type": "string",
              "description": "Long form description of the use case for this AppProfile."
            },
            "singleClusterRouting": {
              "id": "SingleClusterRouting",
              "type": "object",
              "properties": {
                "clusterId": {
                  "type": "string",
                  "description": "The cluster to which read/write requests should be routed."
                },
                "allowTransactionalWrites": {
                  "type": "boolean",
                  "description": "Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests are allowed by this app profile. It is unsafe to send these requests to the same table/row/column in multiple clusters."
                }
              },
              "description": "Use a single-cluster routing policy."
            },
            "multiClusterRoutingUseAny": {
              "id": "MultiClusterRoutingUseAny",
              "type": "object",
              "properties": {},
              "description": "Use a multi-cluster routing policy."
            }
          },
          "description": "A configuration object describing how Cloud Bigtable should treat traffic from a particular end user application."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.instances.clusters.backups.create:
    description: |-
      Starts creating a new Cloud Bigtable Backup. The returned backup long-running operation can be used to track creation of the backup. The metadata field type is CreateBackupMetadata. The response field type is Backup, if successful. Cancelling the returned operation will stop the creation and delete the backup.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters.backups/create
    example:
      inputs: [
        {
          "id": "Backup",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "A globally unique identifier for the backup which cannot be changed. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/ backups/_a-zA-Z0-9*` The final segment of the name must be between 1 and 50 characters in length. The backup is stored in the cluster identified by the prefix of the backup name of the form `projects/{project}/instances/{instance}/clusters/{cluster}`."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "CREATING",
                "READY"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of the backup.",
              "enumDescriptions": [
                "Not specified.",
                "The pending backup is still being created. Operations on the backup may fail with `FAILED_PRECONDITION` in this state.",
                "The backup is complete and ready for use."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. `end_time` is the time that the backup was finished. The row data in the backup will be no newer than this timestamp."
            },
            "sizeBytes": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Size of the backup in bytes."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. `start_time` is the time that the backup was started (i.e. approximately the time the CreateBackup request is received). The row data in this backup will be no older than this timestamp."
            },
            "expireTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Required. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 30 days from the time the request is received. Once the `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by the backup."
            },
            "sourceTable": {
              "type": "string",
              "description": "Required. Immutable. Name of the table from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects/{project}/instances/{instance}/tables/{source_table}`."
            },
            "encryptionInfo": {
              "id": "EncryptionInfo",
              "type": "object",
              "readOnly": true,
              "properties": {
                "kmsKeyVersion": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The version of the Cloud KMS key specified in the parent cluster that is in use for the data underlying this table."
                },
                "encryptionType": {
                  "enum": [
                    "ENCRYPTION_TYPE_UNSPECIFIED",
                    "GOOGLE_DEFAULT_ENCRYPTION",
                    "CUSTOMER_MANAGED_ENCRYPTION"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The type of encryption used to protect this resource.",
                  "enumDescriptions": [
                    "Encryption type was not specified, though data at rest remains encrypted.",
                    "The data backing this resource is encrypted at rest with a key that is fully managed by Google. No key version or status will be populated. This is the default state.",
                    "The data backing this resource is encrypted at rest with a key that is managed by the customer. The in-use version of the key and its status are populated for CMEK-protected tables. CMEK-protected backups are pinned to the key version that was in use at the time the backup was taken. This key version is populated but its status is not tracked and is reported as `UNKNOWN`."
                  ]
                },
                "encryptionStatus": {
                  "id": "Status",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The status code, which should be an enum value of google.rpc.Code."
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "any",
                          "description": "Properties of the object. Contains field @type with type URL."
                        }
                      },
                      "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                    },
                    "message": {
                      "type": "string",
                      "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                    }
                  },
                  "description": "Output only. The status of encrypt/decrypt calls on underlying data for this resource. Regardless of status, the existing data is always encrypted at rest."
                }
              },
              "description": "Output only. The encryption information for the backup."
            }
          },
          "description": "A backup of a Cloud Bigtable table."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.instances.clusters.backups.delete:
    description: |-
      Deletes a pending or completed Cloud Bigtable backup.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters.backups/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.instances.clusters.backups.get:
    description: |-
      Gets metadata on a pending or completed Cloud Bigtable Backup.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters.backups/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.instances.clusters.backups.getIamPolicy:
    description: |-
      Gets the access control policy for a Table resource. Returns an empty policy if the resource exists but does not have a policy set.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters.backups/getIamPolicy
    example:
      inputs: [
        {
          "id": "GetIamPolicyRequest",
          "type": "object",
          "properties": {
            "options": {
              "id": "GetPolicyOptions",
              "type": "object",
              "properties": {
                "requestedPolicyVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                }
              },
              "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
            }
          },
          "description": "Request message for `GetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.instances.clusters.backups.list:
    description: |-
      Lists Cloud Bigtable backups. Returns both completed and pending backups.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters.backups/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListBackupsResponse",
          "type": "object",
          "properties": {
            "backups": {
              "type": "array",
              "items": {
                "id": "Backup",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "A globally unique identifier for the backup which cannot be changed. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/ backups/_a-zA-Z0-9*` The final segment of the name must be between 1 and 50 characters in length. The backup is stored in the cluster identified by the prefix of the backup name of the form `projects/{project}/instances/{instance}/clusters/{cluster}`."
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "CREATING",
                      "READY"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The current state of the backup.",
                    "enumDescriptions": [
                      "Not specified.",
                      "The pending backup is still being created. Operations on the backup may fail with `FAILED_PRECONDITION` in this state.",
                      "The backup is complete and ready for use."
                    ]
                  },
                  "endTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. `end_time` is the time that the backup was finished. The row data in the backup will be no newer than this timestamp."
                  },
                  "sizeBytes": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Size of the backup in bytes."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. `start_time` is the time that the backup was started (i.e. approximately the time the CreateBackup request is received). The row data in this backup will be no older than this timestamp."
                  },
                  "expireTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Required. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 30 days from the time the request is received. Once the `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by the backup."
                  },
                  "sourceTable": {
                    "type": "string",
                    "description": "Required. Immutable. Name of the table from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects/{project}/instances/{instance}/tables/{source_table}`."
                  },
                  "encryptionInfo": {
                    "id": "EncryptionInfo",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "kmsKeyVersion": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The version of the Cloud KMS key specified in the parent cluster that is in use for the data underlying this table."
                      },
                      "encryptionType": {
                        "enum": [
                          "ENCRYPTION_TYPE_UNSPECIFIED",
                          "GOOGLE_DEFAULT_ENCRYPTION",
                          "CUSTOMER_MANAGED_ENCRYPTION"
                        ],
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The type of encryption used to protect this resource.",
                        "enumDescriptions": [
                          "Encryption type was not specified, though data at rest remains encrypted.",
                          "The data backing this resource is encrypted at rest with a key that is fully managed by Google. No key version or status will be populated. This is the default state.",
                          "The data backing this resource is encrypted at rest with a key that is managed by the customer. The in-use version of the key and its status are populated for CMEK-protected tables. CMEK-protected backups are pinned to the key version that was in use at the time the backup was taken. This key version is populated but its status is not tracked and is reported as `UNKNOWN`."
                        ]
                      },
                      "encryptionStatus": {
                        "id": "Status",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The status code, which should be an enum value of google.rpc.Code."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "any",
                                "description": "Properties of the object. Contains field @type with type URL."
                              }
                            },
                            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                          },
                          "message": {
                            "type": "string",
                            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                          }
                        },
                        "description": "Output only. The status of encrypt/decrypt calls on underlying data for this resource. Regardless of status, the existing data is always encrypted at rest."
                      }
                    },
                    "description": "Output only. The encryption information for the backup."
                  }
                },
                "description": "A backup of a Cloud Bigtable table."
              },
              "description": "The list of matching backups."
            },
            "nextPageToken": {
              "type": "string",
              "description": "`next_page_token` can be sent in a subsequent ListBackups call to fetch more of the matching backups."
            }
          },
          "description": "The response for ListBackups."
        }
      ]
  projects.instances.clusters.backups.patch:
    description: |-
      Updates a pending or completed Cloud Bigtable Backup.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters.backups/patch
    example:
      inputs: [
        {
          "id": "Backup",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "A globally unique identifier for the backup which cannot be changed. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/ backups/_a-zA-Z0-9*` The final segment of the name must be between 1 and 50 characters in length. The backup is stored in the cluster identified by the prefix of the backup name of the form `projects/{project}/instances/{instance}/clusters/{cluster}`."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "CREATING",
                "READY"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of the backup.",
              "enumDescriptions": [
                "Not specified.",
                "The pending backup is still being created. Operations on the backup may fail with `FAILED_PRECONDITION` in this state.",
                "The backup is complete and ready for use."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. `end_time` is the time that the backup was finished. The row data in the backup will be no newer than this timestamp."
            },
            "sizeBytes": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Size of the backup in bytes."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. `start_time` is the time that the backup was started (i.e. approximately the time the CreateBackup request is received). The row data in this backup will be no older than this timestamp."
            },
            "expireTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Required. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 30 days from the time the request is received. Once the `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by the backup."
            },
            "sourceTable": {
              "type": "string",
              "description": "Required. Immutable. Name of the table from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects/{project}/instances/{instance}/tables/{source_table}`."
            },
            "encryptionInfo": {
              "id": "EncryptionInfo",
              "type": "object",
              "readOnly": true,
              "properties": {
                "kmsKeyVersion": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The version of the Cloud KMS key specified in the parent cluster that is in use for the data underlying this table."
                },
                "encryptionType": {
                  "enum": [
                    "ENCRYPTION_TYPE_UNSPECIFIED",
                    "GOOGLE_DEFAULT_ENCRYPTION",
                    "CUSTOMER_MANAGED_ENCRYPTION"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The type of encryption used to protect this resource.",
                  "enumDescriptions": [
                    "Encryption type was not specified, though data at rest remains encrypted.",
                    "The data backing this resource is encrypted at rest with a key that is fully managed by Google. No key version or status will be populated. This is the default state.",
                    "The data backing this resource is encrypted at rest with a key that is managed by the customer. The in-use version of the key and its status are populated for CMEK-protected tables. CMEK-protected backups are pinned to the key version that was in use at the time the backup was taken. This key version is populated but its status is not tracked and is reported as `UNKNOWN`."
                  ]
                },
                "encryptionStatus": {
                  "id": "Status",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The status code, which should be an enum value of google.rpc.Code."
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "any",
                          "description": "Properties of the object. Contains field @type with type URL."
                        }
                      },
                      "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                    },
                    "message": {
                      "type": "string",
                      "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                    }
                  },
                  "description": "Output only. The status of encrypt/decrypt calls on underlying data for this resource. Regardless of status, the existing data is always encrypted at rest."
                }
              },
              "description": "Output only. The encryption information for the backup."
            }
          },
          "description": "A backup of a Cloud Bigtable table."
        }
      ]
      outputs: [
        {}
      ]
  projects.instances.clusters.backups.setIamPolicy:
    description: |-
      Sets the access control policy on a Table resource. Replaces any existing policy.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters.backups/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.instances.clusters.backups.testIamPermissions:
    description: |-
      Returns permissions that the caller has on the specified table resource.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters.backups/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  projects.instances.clusters.create:
    description: |-
      Creates a cluster within an instance.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters/create
    example:
      inputs: [
        {
          "id": "Cluster",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`."
            },
            "state": {
              "enum": [
                "STATE_NOT_KNOWN",
                "READY",
                "CREATING",
                "RESIZING",
                "DISABLED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of the cluster.",
              "enumDescriptions": [
                "The state of the cluster could not be determined.",
                "The cluster has been successfully created and is ready to serve requests.",
                "The cluster is currently being created, and may be destroyed if the creation process encounters an error. A cluster may not be able to serve requests while being created.",
                "The cluster is currently being resized, and may revert to its previous node count if the process encounters an error. A cluster is still capable of serving requests while being resized, but may exhibit performance as if its number of allocated nodes is between the starting and requested states.",
                "The cluster has no backing nodes. The data (tables) still exist, but no operations can be performed on the cluster."
              ]
            },
            "location": {
              "type": "string",
              "description": "Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`."
            },
            "serveNodes": {
              "type": "integer",
              "format": "int32",
              "description": "Required. The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance."
            },
            "encryptionConfig": {
              "id": "EncryptionConfig",
              "type": "object",
              "properties": {
                "kmsKeyName": {
                  "type": "string",
                  "description": "Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster. 3) All clusters within an instance must use the same CMEK key. Values are of the form `projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}`"
                }
              },
              "description": "Immutable. The encryption configuration for CMEK-protected clusters."
            },
            "defaultStorageType": {
              "enum": [
                "STORAGE_TYPE_UNSPECIFIED",
                "SSD",
                "HDD"
              ],
              "type": "string",
              "description": "Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.",
              "enumDescriptions": [
                "The user did not specify a storage type.",
                "Flash (SSD) storage should be used.",
                "Magnetic drive (HDD) storage should be used."
              ]
            }
          },
          "description": "A resizable group of nodes in a particular cloud location, capable of serving all Tables in the parent Instance."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.instances.clusters.delete:
    description: |-
      Deletes a cluster from an instance.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.instances.clusters.get:
    description: |-
      Gets information about a cluster.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.instances.clusters.list:
    description: |-
      Lists information about clusters in an instance.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListClustersResponse",
          "type": "object",
          "properties": {
            "clusters": {
              "type": "array",
              "items": {
                "id": "Cluster",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`."
                  },
                  "state": {
                    "enum": [
                      "STATE_NOT_KNOWN",
                      "READY",
                      "CREATING",
                      "RESIZING",
                      "DISABLED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The current state of the cluster.",
                    "enumDescriptions": [
                      "The state of the cluster could not be determined.",
                      "The cluster has been successfully created and is ready to serve requests.",
                      "The cluster is currently being created, and may be destroyed if the creation process encounters an error. A cluster may not be able to serve requests while being created.",
                      "The cluster is currently being resized, and may revert to its previous node count if the process encounters an error. A cluster is still capable of serving requests while being resized, but may exhibit performance as if its number of allocated nodes is between the starting and requested states.",
                      "The cluster has no backing nodes. The data (tables) still exist, but no operations can be performed on the cluster."
                    ]
                  },
                  "location": {
                    "type": "string",
                    "description": "Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`."
                  },
                  "serveNodes": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required. The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance."
                  },
                  "encryptionConfig": {
                    "id": "EncryptionConfig",
                    "type": "object",
                    "properties": {
                      "kmsKeyName": {
                        "type": "string",
                        "description": "Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster. 3) All clusters within an instance must use the same CMEK key. Values are of the form `projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}`"
                      }
                    },
                    "description": "Immutable. The encryption configuration for CMEK-protected clusters."
                  },
                  "defaultStorageType": {
                    "enum": [
                      "STORAGE_TYPE_UNSPECIFIED",
                      "SSD",
                      "HDD"
                    ],
                    "type": "string",
                    "description": "Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.",
                    "enumDescriptions": [
                      "The user did not specify a storage type.",
                      "Flash (SSD) storage should be used.",
                      "Magnetic drive (HDD) storage should be used."
                    ]
                  }
                },
                "description": "A resizable group of nodes in a particular cloud location, capable of serving all Tables in the parent Instance."
              },
              "description": "The list of requested clusters."
            },
            "nextPageToken": {
              "type": "string",
              "description": "DEPRECATED: This field is unused and ignored."
            },
            "failedLocations": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Locations from which Cluster information could not be retrieved, due to an outage or some other transient condition. Clusters from these locations may be missing from `clusters`, or may only have partial information returned. Values are of the form `projects//locations/`"
            }
          },
          "description": "Response message for BigtableInstanceAdmin.ListClusters."
        }
      ]
  projects.instances.clusters.partialUpdateCluster:
    description: |-
      Partially updates a cluster within a project. This method is the preferred way to update a Cluster. 
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters/partialUpdateCluster
    example:
      inputs: [
        {
          "id": "Cluster",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`."
            },
            "state": {
              "enum": [
                "STATE_NOT_KNOWN",
                "READY",
                "CREATING",
                "RESIZING",
                "DISABLED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of the cluster.",
              "enumDescriptions": [
                "The state of the cluster could not be determined.",
                "The cluster has been successfully created and is ready to serve requests.",
                "The cluster is currently being created, and may be destroyed if the creation process encounters an error. A cluster may not be able to serve requests while being created.",
                "The cluster is currently being resized, and may revert to its previous node count if the process encounters an error. A cluster is still capable of serving requests while being resized, but may exhibit performance as if its number of allocated nodes is between the starting and requested states.",
                "The cluster has no backing nodes. The data (tables) still exist, but no operations can be performed on the cluster."
              ]
            },
            "location": {
              "type": "string",
              "description": "Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`."
            },
            "serveNodes": {
              "type": "integer",
              "format": "int32",
              "description": "Required. The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance."
            },
            "encryptionConfig": {
              "id": "EncryptionConfig",
              "type": "object",
              "properties": {
                "kmsKeyName": {
                  "type": "string",
                  "description": "Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster. 3) All clusters within an instance must use the same CMEK key. Values are of the form `projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}`"
                }
              },
              "description": "Immutable. The encryption configuration for CMEK-protected clusters."
            },
            "defaultStorageType": {
              "enum": [
                "STORAGE_TYPE_UNSPECIFIED",
                "SSD",
                "HDD"
              ],
              "type": "string",
              "description": "Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.",
              "enumDescriptions": [
                "The user did not specify a storage type.",
                "Flash (SSD) storage should be used.",
                "Magnetic drive (HDD) storage should be used."
              ]
            }
          },
          "description": "A resizable group of nodes in a particular cloud location, capable of serving all Tables in the parent Instance."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.instances.clusters.update:
    description: |-
      Updates a cluster within an instance. UpdateCluster is deprecated. Please use PartialUpdateCluster instead.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.clusters/update
    example:
      inputs: [
        {
          "id": "Cluster",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`."
            },
            "state": {
              "enum": [
                "STATE_NOT_KNOWN",
                "READY",
                "CREATING",
                "RESIZING",
                "DISABLED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of the cluster.",
              "enumDescriptions": [
                "The state of the cluster could not be determined.",
                "The cluster has been successfully created and is ready to serve requests.",
                "The cluster is currently being created, and may be destroyed if the creation process encounters an error. A cluster may not be able to serve requests while being created.",
                "The cluster is currently being resized, and may revert to its previous node count if the process encounters an error. A cluster is still capable of serving requests while being resized, but may exhibit performance as if its number of allocated nodes is between the starting and requested states.",
                "The cluster has no backing nodes. The data (tables) still exist, but no operations can be performed on the cluster."
              ]
            },
            "location": {
              "type": "string",
              "description": "Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`."
            },
            "serveNodes": {
              "type": "integer",
              "format": "int32",
              "description": "Required. The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance."
            },
            "encryptionConfig": {
              "id": "EncryptionConfig",
              "type": "object",
              "properties": {
                "kmsKeyName": {
                  "type": "string",
                  "description": "Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster. 3) All clusters within an instance must use the same CMEK key. Values are of the form `projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}`"
                }
              },
              "description": "Immutable. The encryption configuration for CMEK-protected clusters."
            },
            "defaultStorageType": {
              "enum": [
                "STORAGE_TYPE_UNSPECIFIED",
                "SSD",
                "HDD"
              ],
              "type": "string",
              "description": "Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.",
              "enumDescriptions": [
                "The user did not specify a storage type.",
                "Flash (SSD) storage should be used.",
                "Magnetic drive (HDD) storage should be used."
              ]
            }
          },
          "description": "A resizable group of nodes in a particular cloud location, capable of serving all Tables in the parent Instance."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.instances.create:
    description: |-
      Create an instance within a project.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances/create
    example:
      inputs: [
        {
          "id": "CreateInstanceRequest",
          "type": "object",
          "properties": {
            "parent": {
              "type": "string",
              "description": "Required. The unique name of the project in which to create the new instance. Values are of the form `projects/{project}`."
            },
            "clusters": {
              "type": "object",
              "description": "Required. The clusters to be created within the instance, mapped by desired cluster ID, e.g., just `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`. Fields marked `OutputOnly` must be left blank. Currently, at most four clusters can be specified.",
              "additionalProperties": {
                "id": "Cluster",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`."
                  },
                  "state": {
                    "enum": [
                      "STATE_NOT_KNOWN",
                      "READY",
                      "CREATING",
                      "RESIZING",
                      "DISABLED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The current state of the cluster.",
                    "enumDescriptions": [
                      "The state of the cluster could not be determined.",
                      "The cluster has been successfully created and is ready to serve requests.",
                      "The cluster is currently being created, and may be destroyed if the creation process encounters an error. A cluster may not be able to serve requests while being created.",
                      "The cluster is currently being resized, and may revert to its previous node count if the process encounters an error. A cluster is still capable of serving requests while being resized, but may exhibit performance as if its number of allocated nodes is between the starting and requested states.",
                      "The cluster has no backing nodes. The data (tables) still exist, but no operations can be performed on the cluster."
                    ]
                  },
                  "location": {
                    "type": "string",
                    "description": "Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`."
                  },
                  "serveNodes": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required. The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance."
                  },
                  "encryptionConfig": {
                    "id": "EncryptionConfig",
                    "type": "object",
                    "properties": {
                      "kmsKeyName": {
                        "type": "string",
                        "description": "Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster. 3) All clusters within an instance must use the same CMEK key. Values are of the form `projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}`"
                      }
                    },
                    "description": "Immutable. The encryption configuration for CMEK-protected clusters."
                  },
                  "defaultStorageType": {
                    "enum": [
                      "STORAGE_TYPE_UNSPECIFIED",
                      "SSD",
                      "HDD"
                    ],
                    "type": "string",
                    "description": "Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.",
                    "enumDescriptions": [
                      "The user did not specify a storage type.",
                      "Flash (SSD) storage should be used.",
                      "Magnetic drive (HDD) storage should be used."
                    ]
                  }
                },
                "description": "A resizable group of nodes in a particular cloud location, capable of serving all Tables in the parent Instance."
              }
            },
            "instance": {
              "id": "Instance",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`."
                },
                "type": {
                  "enum": [
                    "TYPE_UNSPECIFIED",
                    "PRODUCTION",
                    "DEVELOPMENT"
                  ],
                  "type": "string",
                  "description": "Required. The type of the instance. Defaults to `PRODUCTION`.",
                  "enumDescriptions": [
                    "The type of the instance is unspecified. If set when creating an instance, a `PRODUCTION` instance will be created. If set when updating an instance, the type will be left unchanged.",
                    "An instance meant for production use. `serve_nodes` must be set on the cluster.",
                    "DEPRECATED: Prefer PRODUCTION for all use cases, as it no longer enforces a higher minimum node count than DEVELOPMENT."
                  ]
                },
                "state": {
                  "enum": [
                    "STATE_NOT_KNOWN",
                    "READY",
                    "CREATING"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The current state of the instance.",
                  "enumDescriptions": [
                    "The state of the instance could not be determined.",
                    "The instance has been successfully created and can serve requests to its tables.",
                    "The instance is currently being created, and may be destroyed if the creation process encounters an error."
                  ]
                },
                "labels": {
                  "type": "object",
                  "description": "Required. Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer's organizational needs and deployment strategies. They can be used to filter resources and aggregate metrics. * Label keys must be between 1 and 63 characters long and must conform to the regular expression: `\\p{Ll}\\p{Lo}{0,62}`. * Label values must be between 0 and 63 characters long and must conform to the regular expression: `[\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}`. * No more than 64 labels can be associated with a given resource. * Keys and values must both be under 128 bytes.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "displayName": {
                  "type": "string",
                  "description": "Required. The descriptive name for this instance as it appears in UIs. Can be changed at any time, but should be kept globally unique to avoid confusion."
                }
              },
              "description": "Required. The instance to create. Fields marked `OutputOnly` must be left blank."
            },
            "instanceId": {
              "type": "string",
              "description": "Required. The ID to be used when referring to the new instance within its project, e.g., just `myinstance` rather than `projects/myproject/instances/myinstance`."
            }
          },
          "description": "Request message for BigtableInstanceAdmin.CreateInstance."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.instances.delete:
    description: |-
      Delete an instance from a project.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.instances.get:
    description: |-
      Gets information about an instance.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Instance",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`."
            },
            "type": {
              "enum": [
                "TYPE_UNSPECIFIED",
                "PRODUCTION",
                "DEVELOPMENT"
              ],
              "type": "string",
              "description": "Required. The type of the instance. Defaults to `PRODUCTION`.",
              "enumDescriptions": [
                "The type of the instance is unspecified. If set when creating an instance, a `PRODUCTION` instance will be created. If set when updating an instance, the type will be left unchanged.",
                "An instance meant for production use. `serve_nodes` must be set on the cluster.",
                "DEPRECATED: Prefer PRODUCTION for all use cases, as it no longer enforces a higher minimum node count than DEVELOPMENT."
              ]
            },
            "state": {
              "enum": [
                "STATE_NOT_KNOWN",
                "READY",
                "CREATING"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of the instance.",
              "enumDescriptions": [
                "The state of the instance could not be determined.",
                "The instance has been successfully created and can serve requests to its tables.",
                "The instance is currently being created, and may be destroyed if the creation process encounters an error."
              ]
            },
            "labels": {
              "type": "object",
              "description": "Required. Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer's organizational needs and deployment strategies. They can be used to filter resources and aggregate metrics. * Label keys must be between 1 and 63 characters long and must conform to the regular expression: `\\p{Ll}\\p{Lo}{0,62}`. * Label values must be between 0 and 63 characters long and must conform to the regular expression: `[\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}`. * No more than 64 labels can be associated with a given resource. * Keys and values must both be under 128 bytes.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "displayName": {
              "type": "string",
              "description": "Required. The descriptive name for this instance as it appears in UIs. Can be changed at any time, but should be kept globally unique to avoid confusion."
            }
          },
          "description": "A collection of Bigtable Tables and the resources that serve them. All tables in an instance are served from all Clusters in the instance."
        }
      ]
  projects.instances.getIamPolicy:
    description: |-
      Gets the access control policy for an instance resource. Returns an empty policy if an instance exists but does not have a policy set.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances/getIamPolicy
    example:
      inputs: [
        {
          "id": "GetIamPolicyRequest",
          "type": "object",
          "properties": {
            "options": {
              "id": "GetPolicyOptions",
              "type": "object",
              "properties": {
                "requestedPolicyVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                }
              },
              "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
            }
          },
          "description": "Request message for `GetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.instances.list:
    description: |-
      Lists information about instances in a project.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListInstancesResponse",
          "type": "object",
          "properties": {
            "instances": {
              "type": "array",
              "items": {
                "id": "Instance",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`."
                  },
                  "type": {
                    "enum": [
                      "TYPE_UNSPECIFIED",
                      "PRODUCTION",
                      "DEVELOPMENT"
                    ],
                    "type": "string",
                    "description": "Required. The type of the instance. Defaults to `PRODUCTION`.",
                    "enumDescriptions": [
                      "The type of the instance is unspecified. If set when creating an instance, a `PRODUCTION` instance will be created. If set when updating an instance, the type will be left unchanged.",
                      "An instance meant for production use. `serve_nodes` must be set on the cluster.",
                      "DEPRECATED: Prefer PRODUCTION for all use cases, as it no longer enforces a higher minimum node count than DEVELOPMENT."
                    ]
                  },
                  "state": {
                    "enum": [
                      "STATE_NOT_KNOWN",
                      "READY",
                      "CREATING"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The current state of the instance.",
                    "enumDescriptions": [
                      "The state of the instance could not be determined.",
                      "The instance has been successfully created and can serve requests to its tables.",
                      "The instance is currently being created, and may be destroyed if the creation process encounters an error."
                    ]
                  },
                  "labels": {
                    "type": "object",
                    "description": "Required. Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer's organizational needs and deployment strategies. They can be used to filter resources and aggregate metrics. * Label keys must be between 1 and 63 characters long and must conform to the regular expression: `\\p{Ll}\\p{Lo}{0,62}`. * Label values must be between 0 and 63 characters long and must conform to the regular expression: `[\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}`. * No more than 64 labels can be associated with a given resource. * Keys and values must both be under 128 bytes.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Required. The descriptive name for this instance as it appears in UIs. Can be changed at any time, but should be kept globally unique to avoid confusion."
                  }
                },
                "description": "A collection of Bigtable Tables and the resources that serve them. All tables in an instance are served from all Clusters in the instance."
              },
              "description": "The list of requested instances."
            },
            "nextPageToken": {
              "type": "string",
              "description": "DEPRECATED: This field is unused and ignored."
            },
            "failedLocations": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Locations from which Instance information could not be retrieved, due to an outage or some other transient condition. Instances whose Clusters are all in one of the failed locations may be missing from `instances`, and Instances with at least one Cluster in a failed location may only have partial information returned. Values are of the form `projects//locations/`"
            }
          },
          "description": "Response message for BigtableInstanceAdmin.ListInstances."
        }
      ]
  projects.instances.partialUpdateInstance:
    description: |-
      Partially updates an instance within a project. This method can modify all fields of an Instance and is the preferred way to update an Instance.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances/partialUpdateInstance
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.instances.setIamPolicy:
    description: |-
      Sets the access control policy on an instance resource. Replaces any existing policy.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.instances.tables.checkConsistency:
    description: |-
      Checks replication consistency based on a consistency token, that is, if replication has caught up based on the conditions specified in the token and the check request.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.tables/checkConsistency
    example:
      inputs: [
        {
          "id": "CheckConsistencyRequest",
          "type": "object",
          "properties": {
            "consistencyToken": {
              "type": "string",
              "description": "Required. The token created using GenerateConsistencyToken for the Table."
            }
          },
          "description": "Request message for google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency"
        }
      ]
      outputs: [
        {
          "id": "CheckConsistencyResponse",
          "type": "object",
          "properties": {
            "consistent": {
              "type": "boolean",
              "description": "True only if the token is consistent. A token is consistent if replication has caught up with the restrictions specified in the request."
            }
          },
          "description": "Response message for google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency"
        }
      ]
  projects.instances.tables.create:
    description: |-
      Creates a new table in the specified instance. The table can be created with a full set of initial column families, specified in the request.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.tables/create
    example:
      inputs: [
        {
          "id": "CreateTableRequest",
          "type": "object",
          "properties": {
            "table": {
              "id": "Table",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `FULL`"
                },
                "granularity": {
                  "enum": [
                    "TIMESTAMP_GRANULARITY_UNSPECIFIED",
                    "MILLIS"
                  ],
                  "type": "string",
                  "description": "Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.",
                  "enumDescriptions": [
                    "The user did not specify a granularity. Should not be returned. When specified during table creation, MILLIS will be used.",
                    "The table keeps data versioned at a granularity of 1ms."
                  ]
                },
                "restoreInfo": {
                  "id": "RestoreInfo",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "backupInfo": {
                      "id": "BackupInfo",
                      "type": "object",
                      "properties": {
                        "backup": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. Name of the backup."
                        },
                        "endTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "readOnly": true,
                          "description": "Output only. This time that the backup was finished. Row data in the backup will be no newer than this timestamp."
                        },
                        "startTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "readOnly": true,
                          "description": "Output only. The time that the backup was started. Row data in the backup will be no older than this timestamp."
                        },
                        "sourceTable": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. Name of the table the backup was created from."
                        }
                      },
                      "description": "Information about the backup used to restore the table. The backup may no longer exist."
                    },
                    "sourceType": {
                      "enum": [
                        "RESTORE_SOURCE_TYPE_UNSPECIFIED",
                        "BACKUP"
                      ],
                      "type": "string",
                      "description": "The type of the restore source.",
                      "enumDescriptions": [
                        "No restore associated.",
                        "A backup was used as the source of the restore."
                      ]
                    }
                  },
                  "description": "Output only. If this table was restored from another data source (e.g. a backup), this field will be populated with information about the restore."
                },
                "clusterStates": {
                  "type": "object",
                  "readOnly": true,
                  "description": "Output only. Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`",
                  "additionalProperties": {
                    "id": "ClusterState",
                    "type": "object",
                    "properties": {
                      "encryptionInfo": {
                        "type": "array",
                        "items": {
                          "id": "EncryptionInfo",
                          "type": "object",
                          "properties": {
                            "kmsKeyVersion": {
                              "type": "string",
                              "readOnly": true,
                              "description": "Output only. The version of the Cloud KMS key specified in the parent cluster that is in use for the data underlying this table."
                            },
                            "encryptionType": {
                              "enum": [
                                "ENCRYPTION_TYPE_UNSPECIFIED",
                                "GOOGLE_DEFAULT_ENCRYPTION",
                                "CUSTOMER_MANAGED_ENCRYPTION"
                              ],
                              "type": "string",
                              "readOnly": true,
                              "description": "Output only. The type of encryption used to protect this resource.",
                              "enumDescriptions": [
                                "Encryption type was not specified, though data at rest remains encrypted.",
                                "The data backing this resource is encrypted at rest with a key that is fully managed by Google. No key version or status will be populated. This is the default state.",
                                "The data backing this resource is encrypted at rest with a key that is managed by the customer. The in-use version of the key and its status are populated for CMEK-protected tables. CMEK-protected backups are pinned to the key version that was in use at the time the backup was taken. This key version is populated but its status is not tracked and is reported as `UNKNOWN`."
                              ]
                            },
                            "encryptionStatus": {
                              "id": "Status",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "code": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The status code, which should be an enum value of google.rpc.Code."
                                },
                                "details": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "any",
                                      "description": "Properties of the object. Contains field @type with type URL."
                                    }
                                  },
                                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                }
                              },
                              "description": "Output only. The status of encrypt/decrypt calls on underlying data for this resource. Regardless of status, the existing data is always encrypted at rest."
                            }
                          },
                          "description": "Encryption information for a given resource. If this resource is protected with customer managed encryption, the in-use Cloud Key Management Service (Cloud KMS) key version is specified along with its status."
                        },
                        "readOnly": true,
                        "description": "Output only. The encryption information for the table in this cluster. If the encryption key protecting this resource is customer managed, then its version can be rotated in Cloud Key Management Service (Cloud KMS). The primary version of the key and its status will be reflected here when changes propagate from Cloud KMS."
                      },
                      "replicationState": {
                        "enum": [
                          "STATE_NOT_KNOWN",
                          "INITIALIZING",
                          "PLANNED_MAINTENANCE",
                          "UNPLANNED_MAINTENANCE",
                          "READY",
                          "READY_OPTIMIZING"
                        ],
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The state of replication for the table in this cluster.",
                        "enumDescriptions": [
                          "The replication state of the table is unknown in this cluster.",
                          "The cluster was recently created, and the table must finish copying over pre-existing data from other clusters before it can begin receiving live replication updates and serving Data API requests.",
                          "The table is temporarily unable to serve Data API requests from this cluster due to planned internal maintenance.",
                          "The table is temporarily unable to serve Data API requests from this cluster due to unplanned or emergency maintenance.",
                          "The table can serve Data API requests from this cluster. Depending on replication delay, reads may not immediately reflect the state of the table in other clusters.",
                          "The table is fully created and ready for use after a restore, and is being optimized for performance. When optimizations are complete, the table will transition to `READY` state."
                        ]
                      }
                    },
                    "description": "The state of a table's data in a particular cluster."
                  }
                },
                "columnFamilies": {
                  "type": "object",
                  "description": "The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `FULL`",
                  "additionalProperties": {
                    "id": "ColumnFamily",
                    "type": "object",
                    "properties": {
                      "gcRule": {
                        "id": "GcRule",
                        "type": "object",
                        "properties": {
                          "union": {
                            "id": "Union",
                            "type": "object",
                            "properties": {
                              "rules": {
                                "type": "array",
                                "items": {
                                  "id": "GcRule",
                                  "type": "object",
                                  "properties": {},
                                  "description": "Rule for determining which cells to delete during garbage collection."
                                },
                                "description": "Delete cells which would be deleted by any element of `rules`."
                              }
                            },
                            "description": "Delete cells that would be deleted by any nested rule."
                          },
                          "maxAge": {
                            "type": "string",
                            "format": "google-duration",
                            "description": "Delete cells in a column older than the given age. Values must be at least one millisecond, and will be truncated to microsecond granularity."
                          },
                          "intersection": {
                            "id": "Intersection",
                            "type": "object",
                            "properties": {
                              "rules": {
                                "type": "array",
                                "items": {
                                  "id": "GcRule",
                                  "type": "object",
                                  "properties": {},
                                  "description": "Rule for determining which cells to delete during garbage collection."
                                },
                                "description": "Only delete cells which would be deleted by every element of `rules`."
                              }
                            },
                            "description": "Delete cells that would be deleted by every nested rule."
                          },
                          "maxNumVersions": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Delete all cells in a column except the most recent N."
                          }
                        },
                        "description": "Garbage collection rule specified as a protobuf. Must serialize to at most 500 bytes. NOTE: Garbage collection executes opportunistically in the background, and so it's possible for reads to return a cell even if it matches the active GC expression for its family."
                      }
                    },
                    "description": "A set of columns within a table which share a common configuration."
                  }
                }
              },
              "description": "Required. The Table to create."
            },
            "tableId": {
              "type": "string",
              "description": "Required. The name by which the new table should be referred to within the parent instance, e.g., `foobar` rather than `{parent}/tables/foobar`. Maximum 50 characters."
            },
            "initialSplits": {
              "type": "array",
              "items": {
                "id": "Split",
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "format": "byte",
                    "description": "Row key to use as an initial tablet boundary."
                  }
                },
                "description": "An initial split point for a newly created table."
              },
              "description": "The optional list of row keys that will be used to initially split the table into several tablets (tablets are similar to HBase regions). Given two split keys, `s1` and `s2`, three tablets will be created, spanning the key ranges: `[, s1), [s1, s2), [s2, )`. Example: * Row keys := `[\"a\", \"apple\", \"custom\", \"customer_1\", \"customer_2\",` `\"other\", \"zz\"]` * initial_split_keys := `[\"apple\", \"customer_1\", \"customer_2\", \"other\"]` * Key assignment: - Tablet 1 `[, apple) => {\"a\"}.` - Tablet 2 `[apple, customer_1) => {\"apple\", \"custom\"}.` - Tablet 3 `[customer_1, customer_2) => {\"customer_1\"}.` - Tablet 4 `[customer_2, other) => {\"customer_2\"}.` - Tablet 5 `[other, ) => {\"other\", \"zz\"}.`"
            }
          },
          "description": "Request message for google.bigtable.admin.v2.BigtableTableAdmin.CreateTable"
        }
      ]
      outputs: [
        {
          "id": "Table",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `FULL`"
            },
            "granularity": {
              "enum": [
                "TIMESTAMP_GRANULARITY_UNSPECIFIED",
                "MILLIS"
              ],
              "type": "string",
              "description": "Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.",
              "enumDescriptions": [
                "The user did not specify a granularity. Should not be returned. When specified during table creation, MILLIS will be used.",
                "The table keeps data versioned at a granularity of 1ms."
              ]
            },
            "restoreInfo": {
              "id": "RestoreInfo",
              "type": "object",
              "readOnly": true,
              "properties": {
                "backupInfo": {
                  "id": "BackupInfo",
                  "type": "object",
                  "properties": {
                    "backup": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Output only. Name of the backup."
                    },
                    "endTime": {
                      "type": "string",
                      "format": "google-datetime",
                      "readOnly": true,
                      "description": "Output only. This time that the backup was finished. Row data in the backup will be no newer than this timestamp."
                    },
                    "startTime": {
                      "type": "string",
                      "format": "google-datetime",
                      "readOnly": true,
                      "description": "Output only. The time that the backup was started. Row data in the backup will be no older than this timestamp."
                    },
                    "sourceTable": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Output only. Name of the table the backup was created from."
                    }
                  },
                  "description": "Information about the backup used to restore the table. The backup may no longer exist."
                },
                "sourceType": {
                  "enum": [
                    "RESTORE_SOURCE_TYPE_UNSPECIFIED",
                    "BACKUP"
                  ],
                  "type": "string",
                  "description": "The type of the restore source.",
                  "enumDescriptions": [
                    "No restore associated.",
                    "A backup was used as the source of the restore."
                  ]
                }
              },
              "description": "Output only. If this table was restored from another data source (e.g. a backup), this field will be populated with information about the restore."
            },
            "clusterStates": {
              "type": "object",
              "readOnly": true,
              "description": "Output only. Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`",
              "additionalProperties": {
                "id": "ClusterState",
                "type": "object",
                "properties": {
                  "encryptionInfo": {
                    "type": "array",
                    "items": {
                      "id": "EncryptionInfo",
                      "type": "object",
                      "properties": {
                        "kmsKeyVersion": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. The version of the Cloud KMS key specified in the parent cluster that is in use for the data underlying this table."
                        },
                        "encryptionType": {
                          "enum": [
                            "ENCRYPTION_TYPE_UNSPECIFIED",
                            "GOOGLE_DEFAULT_ENCRYPTION",
                            "CUSTOMER_MANAGED_ENCRYPTION"
                          ],
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. The type of encryption used to protect this resource.",
                          "enumDescriptions": [
                            "Encryption type was not specified, though data at rest remains encrypted.",
                            "The data backing this resource is encrypted at rest with a key that is fully managed by Google. No key version or status will be populated. This is the default state.",
                            "The data backing this resource is encrypted at rest with a key that is managed by the customer. The in-use version of the key and its status are populated for CMEK-protected tables. CMEK-protected backups are pinned to the key version that was in use at the time the backup was taken. This key version is populated but its status is not tracked and is reported as `UNKNOWN`."
                          ]
                        },
                        "encryptionStatus": {
                          "id": "Status",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Output only. The status of encrypt/decrypt calls on underlying data for this resource. Regardless of status, the existing data is always encrypted at rest."
                        }
                      },
                      "description": "Encryption information for a given resource. If this resource is protected with customer managed encryption, the in-use Cloud Key Management Service (Cloud KMS) key version is specified along with its status."
                    },
                    "readOnly": true,
                    "description": "Output only. The encryption information for the table in this cluster. If the encryption key protecting this resource is customer managed, then its version can be rotated in Cloud Key Management Service (Cloud KMS). The primary version of the key and its status will be reflected here when changes propagate from Cloud KMS."
                  },
                  "replicationState": {
                    "enum": [
                      "STATE_NOT_KNOWN",
                      "INITIALIZING",
                      "PLANNED_MAINTENANCE",
                      "UNPLANNED_MAINTENANCE",
                      "READY",
                      "READY_OPTIMIZING"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The state of replication for the table in this cluster.",
                    "enumDescriptions": [
                      "The replication state of the table is unknown in this cluster.",
                      "The cluster was recently created, and the table must finish copying over pre-existing data from other clusters before it can begin receiving live replication updates and serving Data API requests.",
                      "The table is temporarily unable to serve Data API requests from this cluster due to planned internal maintenance.",
                      "The table is temporarily unable to serve Data API requests from this cluster due to unplanned or emergency maintenance.",
                      "The table can serve Data API requests from this cluster. Depending on replication delay, reads may not immediately reflect the state of the table in other clusters.",
                      "The table is fully created and ready for use after a restore, and is being optimized for performance. When optimizations are complete, the table will transition to `READY` state."
                    ]
                  }
                },
                "description": "The state of a table's data in a particular cluster."
              }
            },
            "columnFamilies": {
              "type": "object",
              "description": "The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `FULL`",
              "additionalProperties": {
                "id": "ColumnFamily",
                "type": "object",
                "properties": {
                  "gcRule": {
                    "id": "GcRule",
                    "type": "object",
                    "properties": {
                      "union": {
                        "id": "Union",
                        "type": "object",
                        "properties": {
                          "rules": {
                            "type": "array",
                            "items": {
                              "id": "GcRule",
                              "type": "object",
                              "properties": {},
                              "description": "Rule for determining which cells to delete during garbage collection."
                            },
                            "description": "Delete cells which would be deleted by any element of `rules`."
                          }
                        },
                        "description": "Delete cells that would be deleted by any nested rule."
                      },
                      "maxAge": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "Delete cells in a column older than the given age. Values must be at least one millisecond, and will be truncated to microsecond granularity."
                      },
                      "intersection": {
                        "id": "Intersection",
                        "type": "object",
                        "properties": {
                          "rules": {
                            "type": "array",
                            "items": {
                              "id": "GcRule",
                              "type": "object",
                              "properties": {},
                              "description": "Rule for determining which cells to delete during garbage collection."
                            },
                            "description": "Only delete cells which would be deleted by every element of `rules`."
                          }
                        },
                        "description": "Delete cells that would be deleted by every nested rule."
                      },
                      "maxNumVersions": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Delete all cells in a column except the most recent N."
                      }
                    },
                    "description": "Garbage collection rule specified as a protobuf. Must serialize to at most 500 bytes. NOTE: Garbage collection executes opportunistically in the background, and so it's possible for reads to return a cell even if it matches the active GC expression for its family."
                  }
                },
                "description": "A set of columns within a table which share a common configuration."
              }
            }
          },
          "description": "A collection of user data indexed by row, column, and timestamp. Each table is served using the resources of its parent cluster."
        }
      ]
  projects.instances.tables.delete:
    description: |-
      Permanently deletes a specified table and all of its data.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.tables/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.instances.tables.dropRowRange:
    description: |-
      Permanently drop/delete a row range from a specified table. The request can specify whether to delete all rows in a table, or only those that match a particular prefix.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.tables/dropRowRange
    example:
      inputs: [
        {
          "id": "DropRowRangeRequest",
          "type": "object",
          "properties": {
            "rowKeyPrefix": {
              "type": "string",
              "format": "byte",
              "description": "Delete all rows that start with this row key prefix. Prefix cannot be zero length."
            },
            "deleteAllDataFromTable": {
              "type": "boolean",
              "description": "Delete all rows in the table. Setting this to false is a no-op."
            }
          },
          "description": "Request message for google.bigtable.admin.v2.BigtableTableAdmin.DropRowRange"
        }
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.instances.tables.generateConsistencyToken:
    description: |-
      Generates a consistency token for a Table, which can be used in CheckConsistency to check whether mutations to the table that finished before this call started have been replicated. The tokens will be available for 90 days.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.tables/generateConsistencyToken
    example:
      inputs: [
        {
          "id": "GenerateConsistencyTokenRequest",
          "type": "object",
          "properties": {},
          "description": "Request message for google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken"
        }
      ]
      outputs: [
        {
          "id": "GenerateConsistencyTokenResponse",
          "type": "object",
          "properties": {
            "consistencyToken": {
              "type": "string",
              "description": "The generated consistency token."
            }
          },
          "description": "Response message for google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken"
        }
      ]
  projects.instances.tables.get:
    description: |-
      Gets metadata information about the specified table.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.tables/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Table",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `FULL`"
            },
            "granularity": {
              "enum": [
                "TIMESTAMP_GRANULARITY_UNSPECIFIED",
                "MILLIS"
              ],
              "type": "string",
              "description": "Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.",
              "enumDescriptions": [
                "The user did not specify a granularity. Should not be returned. When specified during table creation, MILLIS will be used.",
                "The table keeps data versioned at a granularity of 1ms."
              ]
            },
            "restoreInfo": {
              "id": "RestoreInfo",
              "type": "object",
              "readOnly": true,
              "properties": {
                "backupInfo": {
                  "id": "BackupInfo",
                  "type": "object",
                  "properties": {
                    "backup": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Output only. Name of the backup."
                    },
                    "endTime": {
                      "type": "string",
                      "format": "google-datetime",
                      "readOnly": true,
                      "description": "Output only. This time that the backup was finished. Row data in the backup will be no newer than this timestamp."
                    },
                    "startTime": {
                      "type": "string",
                      "format": "google-datetime",
                      "readOnly": true,
                      "description": "Output only. The time that the backup was started. Row data in the backup will be no older than this timestamp."
                    },
                    "sourceTable": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Output only. Name of the table the backup was created from."
                    }
                  },
                  "description": "Information about the backup used to restore the table. The backup may no longer exist."
                },
                "sourceType": {
                  "enum": [
                    "RESTORE_SOURCE_TYPE_UNSPECIFIED",
                    "BACKUP"
                  ],
                  "type": "string",
                  "description": "The type of the restore source.",
                  "enumDescriptions": [
                    "No restore associated.",
                    "A backup was used as the source of the restore."
                  ]
                }
              },
              "description": "Output only. If this table was restored from another data source (e.g. a backup), this field will be populated with information about the restore."
            },
            "clusterStates": {
              "type": "object",
              "readOnly": true,
              "description": "Output only. Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`",
              "additionalProperties": {
                "id": "ClusterState",
                "type": "object",
                "properties": {
                  "encryptionInfo": {
                    "type": "array",
                    "items": {
                      "id": "EncryptionInfo",
                      "type": "object",
                      "properties": {
                        "kmsKeyVersion": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. The version of the Cloud KMS key specified in the parent cluster that is in use for the data underlying this table."
                        },
                        "encryptionType": {
                          "enum": [
                            "ENCRYPTION_TYPE_UNSPECIFIED",
                            "GOOGLE_DEFAULT_ENCRYPTION",
                            "CUSTOMER_MANAGED_ENCRYPTION"
                          ],
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. The type of encryption used to protect this resource.",
                          "enumDescriptions": [
                            "Encryption type was not specified, though data at rest remains encrypted.",
                            "The data backing this resource is encrypted at rest with a key that is fully managed by Google. No key version or status will be populated. This is the default state.",
                            "The data backing this resource is encrypted at rest with a key that is managed by the customer. The in-use version of the key and its status are populated for CMEK-protected tables. CMEK-protected backups are pinned to the key version that was in use at the time the backup was taken. This key version is populated but its status is not tracked and is reported as `UNKNOWN`."
                          ]
                        },
                        "encryptionStatus": {
                          "id": "Status",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Output only. The status of encrypt/decrypt calls on underlying data for this resource. Regardless of status, the existing data is always encrypted at rest."
                        }
                      },
                      "description": "Encryption information for a given resource. If this resource is protected with customer managed encryption, the in-use Cloud Key Management Service (Cloud KMS) key version is specified along with its status."
                    },
                    "readOnly": true,
                    "description": "Output only. The encryption information for the table in this cluster. If the encryption key protecting this resource is customer managed, then its version can be rotated in Cloud Key Management Service (Cloud KMS). The primary version of the key and its status will be reflected here when changes propagate from Cloud KMS."
                  },
                  "replicationState": {
                    "enum": [
                      "STATE_NOT_KNOWN",
                      "INITIALIZING",
                      "PLANNED_MAINTENANCE",
                      "UNPLANNED_MAINTENANCE",
                      "READY",
                      "READY_OPTIMIZING"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The state of replication for the table in this cluster.",
                    "enumDescriptions": [
                      "The replication state of the table is unknown in this cluster.",
                      "The cluster was recently created, and the table must finish copying over pre-existing data from other clusters before it can begin receiving live replication updates and serving Data API requests.",
                      "The table is temporarily unable to serve Data API requests from this cluster due to planned internal maintenance.",
                      "The table is temporarily unable to serve Data API requests from this cluster due to unplanned or emergency maintenance.",
                      "The table can serve Data API requests from this cluster. Depending on replication delay, reads may not immediately reflect the state of the table in other clusters.",
                      "The table is fully created and ready for use after a restore, and is being optimized for performance. When optimizations are complete, the table will transition to `READY` state."
                    ]
                  }
                },
                "description": "The state of a table's data in a particular cluster."
              }
            },
            "columnFamilies": {
              "type": "object",
              "description": "The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `FULL`",
              "additionalProperties": {
                "id": "ColumnFamily",
                "type": "object",
                "properties": {
                  "gcRule": {
                    "id": "GcRule",
                    "type": "object",
                    "properties": {
                      "union": {
                        "id": "Union",
                        "type": "object",
                        "properties": {
                          "rules": {
                            "type": "array",
                            "items": {
                              "id": "GcRule",
                              "type": "object",
                              "properties": {},
                              "description": "Rule for determining which cells to delete during garbage collection."
                            },
                            "description": "Delete cells which would be deleted by any element of `rules`."
                          }
                        },
                        "description": "Delete cells that would be deleted by any nested rule."
                      },
                      "maxAge": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "Delete cells in a column older than the given age. Values must be at least one millisecond, and will be truncated to microsecond granularity."
                      },
                      "intersection": {
                        "id": "Intersection",
                        "type": "object",
                        "properties": {
                          "rules": {
                            "type": "array",
                            "items": {
                              "id": "GcRule",
                              "type": "object",
                              "properties": {},
                              "description": "Rule for determining which cells to delete during garbage collection."
                            },
                            "description": "Only delete cells which would be deleted by every element of `rules`."
                          }
                        },
                        "description": "Delete cells that would be deleted by every nested rule."
                      },
                      "maxNumVersions": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Delete all cells in a column except the most recent N."
                      }
                    },
                    "description": "Garbage collection rule specified as a protobuf. Must serialize to at most 500 bytes. NOTE: Garbage collection executes opportunistically in the background, and so it's possible for reads to return a cell even if it matches the active GC expression for its family."
                  }
                },
                "description": "A set of columns within a table which share a common configuration."
              }
            }
          },
          "description": "A collection of user data indexed by row, column, and timestamp. Each table is served using the resources of its parent cluster."
        }
      ]
  projects.instances.tables.getIamPolicy:
    description: |-
      Gets the access control policy for a Table resource. Returns an empty policy if the resource exists but does not have a policy set.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.tables/getIamPolicy
    example:
      inputs: [
        {
          "id": "GetIamPolicyRequest",
          "type": "object",
          "properties": {
            "options": {
              "id": "GetPolicyOptions",
              "type": "object",
              "properties": {
                "requestedPolicyVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                }
              },
              "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
            }
          },
          "description": "Request message for `GetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.instances.tables.list:
    description: |-
      Lists all tables served from a specified instance.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.tables/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListTablesResponse",
          "type": "object",
          "properties": {
            "tables": {
              "type": "array",
              "items": {
                "id": "Table",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `FULL`"
                  },
                  "granularity": {
                    "enum": [
                      "TIMESTAMP_GRANULARITY_UNSPECIFIED",
                      "MILLIS"
                    ],
                    "type": "string",
                    "description": "Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.",
                    "enumDescriptions": [
                      "The user did not specify a granularity. Should not be returned. When specified during table creation, MILLIS will be used.",
                      "The table keeps data versioned at a granularity of 1ms."
                    ]
                  },
                  "restoreInfo": {
                    "id": "RestoreInfo",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "backupInfo": {
                        "id": "BackupInfo",
                        "type": "object",
                        "properties": {
                          "backup": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Output only. Name of the backup."
                          },
                          "endTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "readOnly": true,
                            "description": "Output only. This time that the backup was finished. Row data in the backup will be no newer than this timestamp."
                          },
                          "startTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "readOnly": true,
                            "description": "Output only. The time that the backup was started. Row data in the backup will be no older than this timestamp."
                          },
                          "sourceTable": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Output only. Name of the table the backup was created from."
                          }
                        },
                        "description": "Information about the backup used to restore the table. The backup may no longer exist."
                      },
                      "sourceType": {
                        "enum": [
                          "RESTORE_SOURCE_TYPE_UNSPECIFIED",
                          "BACKUP"
                        ],
                        "type": "string",
                        "description": "The type of the restore source.",
                        "enumDescriptions": [
                          "No restore associated.",
                          "A backup was used as the source of the restore."
                        ]
                      }
                    },
                    "description": "Output only. If this table was restored from another data source (e.g. a backup), this field will be populated with information about the restore."
                  },
                  "clusterStates": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Output only. Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`",
                    "additionalProperties": {
                      "id": "ClusterState",
                      "type": "object",
                      "properties": {
                        "encryptionInfo": {
                          "type": "array",
                          "items": {
                            "id": "EncryptionInfo",
                            "type": "object",
                            "properties": {
                              "kmsKeyVersion": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Output only. The version of the Cloud KMS key specified in the parent cluster that is in use for the data underlying this table."
                              },
                              "encryptionType": {
                                "enum": [
                                  "ENCRYPTION_TYPE_UNSPECIFIED",
                                  "GOOGLE_DEFAULT_ENCRYPTION",
                                  "CUSTOMER_MANAGED_ENCRYPTION"
                                ],
                                "type": "string",
                                "readOnly": true,
                                "description": "Output only. The type of encryption used to protect this resource.",
                                "enumDescriptions": [
                                  "Encryption type was not specified, though data at rest remains encrypted.",
                                  "The data backing this resource is encrypted at rest with a key that is fully managed by Google. No key version or status will be populated. This is the default state.",
                                  "The data backing this resource is encrypted at rest with a key that is managed by the customer. The in-use version of the key and its status are populated for CMEK-protected tables. CMEK-protected backups are pinned to the key version that was in use at the time the backup was taken. This key version is populated but its status is not tracked and is reported as `UNKNOWN`."
                                ]
                              },
                              "encryptionStatus": {
                                "id": "Status",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                  "code": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The status code, which should be an enum value of google.rpc.Code."
                                  },
                                  "details": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "any",
                                        "description": "Properties of the object. Contains field @type with type URL."
                                      }
                                    },
                                    "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                  }
                                },
                                "description": "Output only. The status of encrypt/decrypt calls on underlying data for this resource. Regardless of status, the existing data is always encrypted at rest."
                              }
                            },
                            "description": "Encryption information for a given resource. If this resource is protected with customer managed encryption, the in-use Cloud Key Management Service (Cloud KMS) key version is specified along with its status."
                          },
                          "readOnly": true,
                          "description": "Output only. The encryption information for the table in this cluster. If the encryption key protecting this resource is customer managed, then its version can be rotated in Cloud Key Management Service (Cloud KMS). The primary version of the key and its status will be reflected here when changes propagate from Cloud KMS."
                        },
                        "replicationState": {
                          "enum": [
                            "STATE_NOT_KNOWN",
                            "INITIALIZING",
                            "PLANNED_MAINTENANCE",
                            "UNPLANNED_MAINTENANCE",
                            "READY",
                            "READY_OPTIMIZING"
                          ],
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. The state of replication for the table in this cluster.",
                          "enumDescriptions": [
                            "The replication state of the table is unknown in this cluster.",
                            "The cluster was recently created, and the table must finish copying over pre-existing data from other clusters before it can begin receiving live replication updates and serving Data API requests.",
                            "The table is temporarily unable to serve Data API requests from this cluster due to planned internal maintenance.",
                            "The table is temporarily unable to serve Data API requests from this cluster due to unplanned or emergency maintenance.",
                            "The table can serve Data API requests from this cluster. Depending on replication delay, reads may not immediately reflect the state of the table in other clusters.",
                            "The table is fully created and ready for use after a restore, and is being optimized for performance. When optimizations are complete, the table will transition to `READY` state."
                          ]
                        }
                      },
                      "description": "The state of a table's data in a particular cluster."
                    }
                  },
                  "columnFamilies": {
                    "type": "object",
                    "description": "The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `FULL`",
                    "additionalProperties": {
                      "id": "ColumnFamily",
                      "type": "object",
                      "properties": {
                        "gcRule": {
                          "id": "GcRule",
                          "type": "object",
                          "properties": {
                            "union": {
                              "id": "Union",
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "array",
                                  "items": {
                                    "id": "GcRule",
                                    "type": "object",
                                    "properties": {},
                                    "description": "Rule for determining which cells to delete during garbage collection."
                                  },
                                  "description": "Delete cells which would be deleted by any element of `rules`."
                                }
                              },
                              "description": "Delete cells that would be deleted by any nested rule."
                            },
                            "maxAge": {
                              "type": "string",
                              "format": "google-duration",
                              "description": "Delete cells in a column older than the given age. Values must be at least one millisecond, and will be truncated to microsecond granularity."
                            },
                            "intersection": {
                              "id": "Intersection",
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "array",
                                  "items": {
                                    "id": "GcRule",
                                    "type": "object",
                                    "properties": {},
                                    "description": "Rule for determining which cells to delete during garbage collection."
                                  },
                                  "description": "Only delete cells which would be deleted by every element of `rules`."
                                }
                              },
                              "description": "Delete cells that would be deleted by every nested rule."
                            },
                            "maxNumVersions": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Delete all cells in a column except the most recent N."
                            }
                          },
                          "description": "Garbage collection rule specified as a protobuf. Must serialize to at most 500 bytes. NOTE: Garbage collection executes opportunistically in the background, and so it's possible for reads to return a cell even if it matches the active GC expression for its family."
                        }
                      },
                      "description": "A set of columns within a table which share a common configuration."
                    }
                  }
                },
                "description": "A collection of user data indexed by row, column, and timestamp. Each table is served using the resources of its parent cluster."
              },
              "description": "The tables present in the requested instance."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Set if not all tables could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results."
            }
          },
          "description": "Response message for google.bigtable.admin.v2.BigtableTableAdmin.ListTables"
        }
      ]
  projects.instances.tables.modifyColumnFamilies:
    description: |-
      Performs a series of column family modifications on the specified table. Either all or none of the modifications will occur before this method returns, but data requests received prior to that point may see a table where only some modifications have taken effect.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.tables/modifyColumnFamilies
    example:
      inputs: [
        {
          "id": "ModifyColumnFamiliesRequest",
          "type": "object",
          "properties": {
            "modifications": {
              "type": "array",
              "items": {
                "id": "Modification",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the column family to be modified."
                  },
                  "drop": {
                    "type": "boolean",
                    "description": "Drop (delete) the column family with the given ID, or fail if no such family exists."
                  },
                  "create": {
                    "id": "ColumnFamily",
                    "type": "object",
                    "properties": {
                      "gcRule": {
                        "id": "GcRule",
                        "type": "object",
                        "properties": {
                          "union": {
                            "id": "Union",
                            "type": "object",
                            "properties": {
                              "rules": {
                                "type": "array",
                                "items": {
                                  "id": "GcRule",
                                  "type": "object",
                                  "properties": {},
                                  "description": "Rule for determining which cells to delete during garbage collection."
                                },
                                "description": "Delete cells which would be deleted by any element of `rules`."
                              }
                            },
                            "description": "Delete cells that would be deleted by any nested rule."
                          },
                          "maxAge": {
                            "type": "string",
                            "format": "google-duration",
                            "description": "Delete cells in a column older than the given age. Values must be at least one millisecond, and will be truncated to microsecond granularity."
                          },
                          "intersection": {
                            "id": "Intersection",
                            "type": "object",
                            "properties": {
                              "rules": {
                                "type": "array",
                                "items": {
                                  "id": "GcRule",
                                  "type": "object",
                                  "properties": {},
                                  "description": "Rule for determining which cells to delete during garbage collection."
                                },
                                "description": "Only delete cells which would be deleted by every element of `rules`."
                              }
                            },
                            "description": "Delete cells that would be deleted by every nested rule."
                          },
                          "maxNumVersions": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Delete all cells in a column except the most recent N."
                          }
                        },
                        "description": "Garbage collection rule specified as a protobuf. Must serialize to at most 500 bytes. NOTE: Garbage collection executes opportunistically in the background, and so it's possible for reads to return a cell even if it matches the active GC expression for its family."
                      }
                    },
                    "description": "A set of columns within a table which share a common configuration."
                  },
                  "update": {
                    "id": "ColumnFamily",
                    "type": "object",
                    "properties": {
                      "gcRule": {
                        "id": "GcRule",
                        "type": "object",
                        "properties": {
                          "union": {
                            "id": "Union",
                            "type": "object",
                            "properties": {
                              "rules": {
                                "type": "array",
                                "items": {
                                  "id": "GcRule",
                                  "type": "object",
                                  "properties": {},
                                  "description": "Rule for determining which cells to delete during garbage collection."
                                },
                                "description": "Delete cells which would be deleted by any element of `rules`."
                              }
                            },
                            "description": "Delete cells that would be deleted by any nested rule."
                          },
                          "maxAge": {
                            "type": "string",
                            "format": "google-duration",
                            "description": "Delete cells in a column older than the given age. Values must be at least one millisecond, and will be truncated to microsecond granularity."
                          },
                          "intersection": {
                            "id": "Intersection",
                            "type": "object",
                            "properties": {
                              "rules": {
                                "type": "array",
                                "items": {
                                  "id": "GcRule",
                                  "type": "object",
                                  "properties": {},
                                  "description": "Rule for determining which cells to delete during garbage collection."
                                },
                                "description": "Only delete cells which would be deleted by every element of `rules`."
                              }
                            },
                            "description": "Delete cells that would be deleted by every nested rule."
                          },
                          "maxNumVersions": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Delete all cells in a column except the most recent N."
                          }
                        },
                        "description": "Garbage collection rule specified as a protobuf. Must serialize to at most 500 bytes. NOTE: Garbage collection executes opportunistically in the background, and so it's possible for reads to return a cell even if it matches the active GC expression for its family."
                      }
                    },
                    "description": "A set of columns within a table which share a common configuration."
                  }
                },
                "description": "A create, update, or delete of a particular column family."
              },
              "description": "Required. Modifications to be atomically applied to the specified table's families. Entries are applied in order, meaning that earlier modifications can be masked by later ones (in the case of repeated updates to the same family, for example)."
            }
          },
          "description": "Request message for google.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies"
        }
      ]
      outputs: [
        {
          "id": "Table",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `FULL`"
            },
            "granularity": {
              "enum": [
                "TIMESTAMP_GRANULARITY_UNSPECIFIED",
                "MILLIS"
              ],
              "type": "string",
              "description": "Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.",
              "enumDescriptions": [
                "The user did not specify a granularity. Should not be returned. When specified during table creation, MILLIS will be used.",
                "The table keeps data versioned at a granularity of 1ms."
              ]
            },
            "restoreInfo": {
              "id": "RestoreInfo",
              "type": "object",
              "readOnly": true,
              "properties": {
                "backupInfo": {
                  "id": "BackupInfo",
                  "type": "object",
                  "properties": {
                    "backup": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Output only. Name of the backup."
                    },
                    "endTime": {
                      "type": "string",
                      "format": "google-datetime",
                      "readOnly": true,
                      "description": "Output only. This time that the backup was finished. Row data in the backup will be no newer than this timestamp."
                    },
                    "startTime": {
                      "type": "string",
                      "format": "google-datetime",
                      "readOnly": true,
                      "description": "Output only. The time that the backup was started. Row data in the backup will be no older than this timestamp."
                    },
                    "sourceTable": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Output only. Name of the table the backup was created from."
                    }
                  },
                  "description": "Information about the backup used to restore the table. The backup may no longer exist."
                },
                "sourceType": {
                  "enum": [
                    "RESTORE_SOURCE_TYPE_UNSPECIFIED",
                    "BACKUP"
                  ],
                  "type": "string",
                  "description": "The type of the restore source.",
                  "enumDescriptions": [
                    "No restore associated.",
                    "A backup was used as the source of the restore."
                  ]
                }
              },
              "description": "Output only. If this table was restored from another data source (e.g. a backup), this field will be populated with information about the restore."
            },
            "clusterStates": {
              "type": "object",
              "readOnly": true,
              "description": "Output only. Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`",
              "additionalProperties": {
                "id": "ClusterState",
                "type": "object",
                "properties": {
                  "encryptionInfo": {
                    "type": "array",
                    "items": {
                      "id": "EncryptionInfo",
                      "type": "object",
                      "properties": {
                        "kmsKeyVersion": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. The version of the Cloud KMS key specified in the parent cluster that is in use for the data underlying this table."
                        },
                        "encryptionType": {
                          "enum": [
                            "ENCRYPTION_TYPE_UNSPECIFIED",
                            "GOOGLE_DEFAULT_ENCRYPTION",
                            "CUSTOMER_MANAGED_ENCRYPTION"
                          ],
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. The type of encryption used to protect this resource.",
                          "enumDescriptions": [
                            "Encryption type was not specified, though data at rest remains encrypted.",
                            "The data backing this resource is encrypted at rest with a key that is fully managed by Google. No key version or status will be populated. This is the default state.",
                            "The data backing this resource is encrypted at rest with a key that is managed by the customer. The in-use version of the key and its status are populated for CMEK-protected tables. CMEK-protected backups are pinned to the key version that was in use at the time the backup was taken. This key version is populated but its status is not tracked and is reported as `UNKNOWN`."
                          ]
                        },
                        "encryptionStatus": {
                          "id": "Status",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Output only. The status of encrypt/decrypt calls on underlying data for this resource. Regardless of status, the existing data is always encrypted at rest."
                        }
                      },
                      "description": "Encryption information for a given resource. If this resource is protected with customer managed encryption, the in-use Cloud Key Management Service (Cloud KMS) key version is specified along with its status."
                    },
                    "readOnly": true,
                    "description": "Output only. The encryption information for the table in this cluster. If the encryption key protecting this resource is customer managed, then its version can be rotated in Cloud Key Management Service (Cloud KMS). The primary version of the key and its status will be reflected here when changes propagate from Cloud KMS."
                  },
                  "replicationState": {
                    "enum": [
                      "STATE_NOT_KNOWN",
                      "INITIALIZING",
                      "PLANNED_MAINTENANCE",
                      "UNPLANNED_MAINTENANCE",
                      "READY",
                      "READY_OPTIMIZING"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The state of replication for the table in this cluster.",
                    "enumDescriptions": [
                      "The replication state of the table is unknown in this cluster.",
                      "The cluster was recently created, and the table must finish copying over pre-existing data from other clusters before it can begin receiving live replication updates and serving Data API requests.",
                      "The table is temporarily unable to serve Data API requests from this cluster due to planned internal maintenance.",
                      "The table is temporarily unable to serve Data API requests from this cluster due to unplanned or emergency maintenance.",
                      "The table can serve Data API requests from this cluster. Depending on replication delay, reads may not immediately reflect the state of the table in other clusters.",
                      "The table is fully created and ready for use after a restore, and is being optimized for performance. When optimizations are complete, the table will transition to `READY` state."
                    ]
                  }
                },
                "description": "The state of a table's data in a particular cluster."
              }
            },
            "columnFamilies": {
              "type": "object",
              "description": "The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `FULL`",
              "additionalProperties": {
                "id": "ColumnFamily",
                "type": "object",
                "properties": {
                  "gcRule": {
                    "id": "GcRule",
                    "type": "object",
                    "properties": {
                      "union": {
                        "id": "Union",
                        "type": "object",
                        "properties": {
                          "rules": {
                            "type": "array",
                            "items": {
                              "id": "GcRule",
                              "type": "object",
                              "properties": {},
                              "description": "Rule for determining which cells to delete during garbage collection."
                            },
                            "description": "Delete cells which would be deleted by any element of `rules`."
                          }
                        },
                        "description": "Delete cells that would be deleted by any nested rule."
                      },
                      "maxAge": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "Delete cells in a column older than the given age. Values must be at least one millisecond, and will be truncated to microsecond granularity."
                      },
                      "intersection": {
                        "id": "Intersection",
                        "type": "object",
                        "properties": {
                          "rules": {
                            "type": "array",
                            "items": {
                              "id": "GcRule",
                              "type": "object",
                              "properties": {},
                              "description": "Rule for determining which cells to delete during garbage collection."
                            },
                            "description": "Only delete cells which would be deleted by every element of `rules`."
                          }
                        },
                        "description": "Delete cells that would be deleted by every nested rule."
                      },
                      "maxNumVersions": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Delete all cells in a column except the most recent N."
                      }
                    },
                    "description": "Garbage collection rule specified as a protobuf. Must serialize to at most 500 bytes. NOTE: Garbage collection executes opportunistically in the background, and so it's possible for reads to return a cell even if it matches the active GC expression for its family."
                  }
                },
                "description": "A set of columns within a table which share a common configuration."
              }
            }
          },
          "description": "A collection of user data indexed by row, column, and timestamp. Each table is served using the resources of its parent cluster."
        }
      ]
  projects.instances.tables.restore:
    description: |-
      Create a new table by restoring from a completed backup. The new table must be in the same instance as the instance containing the backup. The returned table long-running operation can be used to track the progress of the operation, and to cancel it. The metadata field type is RestoreTableMetadata. The response type is Table, if successful.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.tables/restore
    example:
      inputs: [
        {
          "id": "RestoreTableRequest",
          "type": "object",
          "properties": {
            "backup": {
              "type": "string",
              "description": "Name of the backup from which to restore. Values are of the form `projects//instances//clusters//backups/`."
            },
            "tableId": {
              "type": "string",
              "description": "Required. The id of the table to create and restore to. This table must not already exist. The `table_id` appended to `parent` forms the full table name of the form `projects//instances//tables/`."
            }
          },
          "description": "The request for RestoreTable."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.instances.tables.setIamPolicy:
    description: |-
      Sets the access control policy on a Table resource. Replaces any existing policy.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.tables/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.instances.tables.testIamPermissions:
    description: |-
      Returns permissions that the caller has on the specified table resource.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances.tables/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  projects.instances.testIamPermissions:
    description: |-
      Returns permissions that the caller has on the specified instance resource.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  projects.instances.update:
    description: |-
      Updates an instance within a project. This method updates only the display name and type for an Instance. To update other Instance properties, such as labels, use PartialUpdateInstance.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.instances/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Instance",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`."
            },
            "type": {
              "enum": [
                "TYPE_UNSPECIFIED",
                "PRODUCTION",
                "DEVELOPMENT"
              ],
              "type": "string",
              "description": "Required. The type of the instance. Defaults to `PRODUCTION`.",
              "enumDescriptions": [
                "The type of the instance is unspecified. If set when creating an instance, a `PRODUCTION` instance will be created. If set when updating an instance, the type will be left unchanged.",
                "An instance meant for production use. `serve_nodes` must be set on the cluster.",
                "DEPRECATED: Prefer PRODUCTION for all use cases, as it no longer enforces a higher minimum node count than DEVELOPMENT."
              ]
            },
            "state": {
              "enum": [
                "STATE_NOT_KNOWN",
                "READY",
                "CREATING"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of the instance.",
              "enumDescriptions": [
                "The state of the instance could not be determined.",
                "The instance has been successfully created and can serve requests to its tables.",
                "The instance is currently being created, and may be destroyed if the creation process encounters an error."
              ]
            },
            "labels": {
              "type": "object",
              "description": "Required. Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer's organizational needs and deployment strategies. They can be used to filter resources and aggregate metrics. * Label keys must be between 1 and 63 characters long and must conform to the regular expression: `\\p{Ll}\\p{Lo}{0,62}`. * Label values must be between 0 and 63 characters long and must conform to the regular expression: `[\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}`. * No more than 64 labels can be associated with a given resource. * Keys and values must both be under 128 bytes.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "displayName": {
              "type": "string",
              "description": "Required. The descriptive name for this instance as it appears in UIs. Can be changed at any time, but should be kept globally unique to avoid confusion."
            }
          },
          "description": "A collection of Bigtable Tables and the resources that serve them. All tables in an instance are served from all Clusters in the instance."
        }
      ]
  projects.locations.get:
    description: |-
      Gets information about a location.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.locations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Location",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
            },
            "labels": {
              "type": "object",
              "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
              "additionalProperties": {
                "type": "string"
              }
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata. For example the available capacity at the given location.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "locationId": {
              "type": "string",
              "description": "The canonical id for this location. For example: `\"us-east1\"`."
            },
            "displayName": {
              "type": "string",
              "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
            }
          },
          "description": "A resource that represents Google Cloud Platform location."
        }
      ]
  projects.locations.list:
    description: |-
      Lists information about the supported locations for this service.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/bigtable/docs/reference/admin/rest/v2/projects.locations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListLocationsResponse",
          "type": "object",
          "properties": {
            "locations": {
              "type": "array",
              "items": {
                "id": "Location",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
                  },
                  "labels": {
                    "type": "object",
                    "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata. For example the available capacity at the given location.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "locationId": {
                    "type": "string",
                    "description": "The canonical id for this location. For example: `\"us-east1\"`."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
                  }
                },
                "description": "A resource that represents Google Cloud Platform location."
              },
              "description": "A list of locations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Locations.ListLocations."
        }
      ]